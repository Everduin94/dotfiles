/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/@octokit/endpoint/dist-web/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/@octokit/endpoint/dist-web/index.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "endpoint": () => (/* binding */ endpoint)
/* harmony export */ });
/* harmony import */ var is_plain_object__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! is-plain-object */ "./node_modules/is-plain-object/dist/is-plain-object.mjs");
/* harmony import */ var universal_user_agent__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! universal-user-agent */ "./node_modules/universal-user-agent/dist-web/index.js");



function lowercaseKeys(object) {
    if (!object) {
        return {};
    }
    return Object.keys(object).reduce((newObj, key) => {
        newObj[key.toLowerCase()] = object[key];
        return newObj;
    }, {});
}

function mergeDeep(defaults, options) {
    const result = Object.assign({}, defaults);
    Object.keys(options).forEach((key) => {
        if ((0,is_plain_object__WEBPACK_IMPORTED_MODULE_0__.isPlainObject)(options[key])) {
            if (!(key in defaults))
                Object.assign(result, { [key]: options[key] });
            else
                result[key] = mergeDeep(defaults[key], options[key]);
        }
        else {
            Object.assign(result, { [key]: options[key] });
        }
    });
    return result;
}

function removeUndefinedProperties(obj) {
    for (const key in obj) {
        if (obj[key] === undefined) {
            delete obj[key];
        }
    }
    return obj;
}

function merge(defaults, route, options) {
    if (typeof route === "string") {
        let [method, url] = route.split(" ");
        options = Object.assign(url ? { method, url } : { url: method }, options);
    }
    else {
        options = Object.assign({}, route);
    }
    // lowercase header names before merging with defaults to avoid duplicates
    options.headers = lowercaseKeys(options.headers);
    // remove properties with undefined values before merging
    removeUndefinedProperties(options);
    removeUndefinedProperties(options.headers);
    const mergedOptions = mergeDeep(defaults || {}, options);
    // mediaType.previews arrays are merged, instead of overwritten
    if (defaults && defaults.mediaType.previews.length) {
        mergedOptions.mediaType.previews = defaults.mediaType.previews
            .filter((preview) => !mergedOptions.mediaType.previews.includes(preview))
            .concat(mergedOptions.mediaType.previews);
    }
    mergedOptions.mediaType.previews = mergedOptions.mediaType.previews.map((preview) => preview.replace(/-preview/, ""));
    return mergedOptions;
}

function addQueryParameters(url, parameters) {
    const separator = /\?/.test(url) ? "&" : "?";
    const names = Object.keys(parameters);
    if (names.length === 0) {
        return url;
    }
    return (url +
        separator +
        names
            .map((name) => {
            if (name === "q") {
                return ("q=" + parameters.q.split("+").map(encodeURIComponent).join("+"));
            }
            return `${name}=${encodeURIComponent(parameters[name])}`;
        })
            .join("&"));
}

const urlVariableRegex = /\{[^}]+\}/g;
function removeNonChars(variableName) {
    return variableName.replace(/^\W+|\W+$/g, "").split(/,/);
}
function extractUrlVariableNames(url) {
    const matches = url.match(urlVariableRegex);
    if (!matches) {
        return [];
    }
    return matches.map(removeNonChars).reduce((a, b) => a.concat(b), []);
}

function omit(object, keysToOmit) {
    return Object.keys(object)
        .filter((option) => !keysToOmit.includes(option))
        .reduce((obj, key) => {
        obj[key] = object[key];
        return obj;
    }, {});
}

// Based on https://github.com/bramstein/url-template, licensed under BSD
// TODO: create separate package.
//
// Copyright (c) 2012-2014, Bram Stein
// All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
//  1. Redistributions of source code must retain the above copyright
//     notice, this list of conditions and the following disclaimer.
//  2. Redistributions in binary form must reproduce the above copyright
//     notice, this list of conditions and the following disclaimer in the
//     documentation and/or other materials provided with the distribution.
//  3. The name of the author may not be used to endorse or promote products
//     derived from this software without specific prior written permission.
// THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR IMPLIED
// WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
// MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
// EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
// INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
// BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
// OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
// NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
// EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
/* istanbul ignore file */
function encodeReserved(str) {
    return str
        .split(/(%[0-9A-Fa-f]{2})/g)
        .map(function (part) {
        if (!/%[0-9A-Fa-f]/.test(part)) {
            part = encodeURI(part).replace(/%5B/g, "[").replace(/%5D/g, "]");
        }
        return part;
    })
        .join("");
}
function encodeUnreserved(str) {
    return encodeURIComponent(str).replace(/[!'()*]/g, function (c) {
        return "%" + c.charCodeAt(0).toString(16).toUpperCase();
    });
}
function encodeValue(operator, value, key) {
    value =
        operator === "+" || operator === "#"
            ? encodeReserved(value)
            : encodeUnreserved(value);
    if (key) {
        return encodeUnreserved(key) + "=" + value;
    }
    else {
        return value;
    }
}
function isDefined(value) {
    return value !== undefined && value !== null;
}
function isKeyOperator(operator) {
    return operator === ";" || operator === "&" || operator === "?";
}
function getValues(context, operator, key, modifier) {
    var value = context[key], result = [];
    if (isDefined(value) && value !== "") {
        if (typeof value === "string" ||
            typeof value === "number" ||
            typeof value === "boolean") {
            value = value.toString();
            if (modifier && modifier !== "*") {
                value = value.substring(0, parseInt(modifier, 10));
            }
            result.push(encodeValue(operator, value, isKeyOperator(operator) ? key : ""));
        }
        else {
            if (modifier === "*") {
                if (Array.isArray(value)) {
                    value.filter(isDefined).forEach(function (value) {
                        result.push(encodeValue(operator, value, isKeyOperator(operator) ? key : ""));
                    });
                }
                else {
                    Object.keys(value).forEach(function (k) {
                        if (isDefined(value[k])) {
                            result.push(encodeValue(operator, value[k], k));
                        }
                    });
                }
            }
            else {
                const tmp = [];
                if (Array.isArray(value)) {
                    value.filter(isDefined).forEach(function (value) {
                        tmp.push(encodeValue(operator, value));
                    });
                }
                else {
                    Object.keys(value).forEach(function (k) {
                        if (isDefined(value[k])) {
                            tmp.push(encodeUnreserved(k));
                            tmp.push(encodeValue(operator, value[k].toString()));
                        }
                    });
                }
                if (isKeyOperator(operator)) {
                    result.push(encodeUnreserved(key) + "=" + tmp.join(","));
                }
                else if (tmp.length !== 0) {
                    result.push(tmp.join(","));
                }
            }
        }
    }
    else {
        if (operator === ";") {
            if (isDefined(value)) {
                result.push(encodeUnreserved(key));
            }
        }
        else if (value === "" && (operator === "&" || operator === "?")) {
            result.push(encodeUnreserved(key) + "=");
        }
        else if (value === "") {
            result.push("");
        }
    }
    return result;
}
function parseUrl(template) {
    return {
        expand: expand.bind(null, template),
    };
}
function expand(template, context) {
    var operators = ["+", "#", ".", "/", ";", "?", "&"];
    return template.replace(/\{([^\{\}]+)\}|([^\{\}]+)/g, function (_, expression, literal) {
        if (expression) {
            let operator = "";
            const values = [];
            if (operators.indexOf(expression.charAt(0)) !== -1) {
                operator = expression.charAt(0);
                expression = expression.substr(1);
            }
            expression.split(/,/g).forEach(function (variable) {
                var tmp = /([^:\*]*)(?::(\d+)|(\*))?/.exec(variable);
                values.push(getValues(context, operator, tmp[1], tmp[2] || tmp[3]));
            });
            if (operator && operator !== "+") {
                var separator = ",";
                if (operator === "?") {
                    separator = "&";
                }
                else if (operator !== "#") {
                    separator = operator;
                }
                return (values.length !== 0 ? operator : "") + values.join(separator);
            }
            else {
                return values.join(",");
            }
        }
        else {
            return encodeReserved(literal);
        }
    });
}

function parse(options) {
    // https://fetch.spec.whatwg.org/#methods
    let method = options.method.toUpperCase();
    // replace :varname with {varname} to make it RFC 6570 compatible
    let url = (options.url || "/").replace(/:([a-z]\w+)/g, "{$1}");
    let headers = Object.assign({}, options.headers);
    let body;
    let parameters = omit(options, [
        "method",
        "baseUrl",
        "url",
        "headers",
        "request",
        "mediaType",
    ]);
    // extract variable names from URL to calculate remaining variables later
    const urlVariableNames = extractUrlVariableNames(url);
    url = parseUrl(url).expand(parameters);
    if (!/^http/.test(url)) {
        url = options.baseUrl + url;
    }
    const omittedParameters = Object.keys(options)
        .filter((option) => urlVariableNames.includes(option))
        .concat("baseUrl");
    const remainingParameters = omit(parameters, omittedParameters);
    const isBinaryRequest = /application\/octet-stream/i.test(headers.accept);
    if (!isBinaryRequest) {
        if (options.mediaType.format) {
            // e.g. application/vnd.github.v3+json => application/vnd.github.v3.raw
            headers.accept = headers.accept
                .split(/,/)
                .map((preview) => preview.replace(/application\/vnd(\.\w+)(\.v3)?(\.\w+)?(\+json)?$/, `application/vnd$1$2.${options.mediaType.format}`))
                .join(",");
        }
        if (options.mediaType.previews.length) {
            const previewsFromAcceptHeader = headers.accept.match(/[\w-]+(?=-preview)/g) || [];
            headers.accept = previewsFromAcceptHeader
                .concat(options.mediaType.previews)
                .map((preview) => {
                const format = options.mediaType.format
                    ? `.${options.mediaType.format}`
                    : "+json";
                return `application/vnd.github.${preview}-preview${format}`;
            })
                .join(",");
        }
    }
    // for GET/HEAD requests, set URL query parameters from remaining parameters
    // for PATCH/POST/PUT/DELETE requests, set request body from remaining parameters
    if (["GET", "HEAD"].includes(method)) {
        url = addQueryParameters(url, remainingParameters);
    }
    else {
        if ("data" in remainingParameters) {
            body = remainingParameters.data;
        }
        else {
            if (Object.keys(remainingParameters).length) {
                body = remainingParameters;
            }
            else {
                headers["content-length"] = 0;
            }
        }
    }
    // default content-type for JSON if body is set
    if (!headers["content-type"] && typeof body !== "undefined") {
        headers["content-type"] = "application/json; charset=utf-8";
    }
    // GitHub expects 'content-length: 0' header for PUT/PATCH requests without body.
    // fetch does not allow to set `content-length` header, but we can set body to an empty string
    if (["PATCH", "PUT"].includes(method) && typeof body === "undefined") {
        body = "";
    }
    // Only return body/request keys if present
    return Object.assign({ method, url, headers }, typeof body !== "undefined" ? { body } : null, options.request ? { request: options.request } : null);
}

function endpointWithDefaults(defaults, route, options) {
    return parse(merge(defaults, route, options));
}

function withDefaults(oldDefaults, newDefaults) {
    const DEFAULTS = merge(oldDefaults, newDefaults);
    const endpoint = endpointWithDefaults.bind(null, DEFAULTS);
    return Object.assign(endpoint, {
        DEFAULTS,
        defaults: withDefaults.bind(null, DEFAULTS),
        merge: merge.bind(null, DEFAULTS),
        parse,
    });
}

const VERSION = "6.0.12";

const userAgent = `octokit-endpoint.js/${VERSION} ${(0,universal_user_agent__WEBPACK_IMPORTED_MODULE_1__.getUserAgent)()}`;
// DEFAULTS has all properties set that EndpointOptions has, except url.
// So we use RequestParameters and add method as additional required property.
const DEFAULTS = {
    method: "GET",
    baseUrl: "https://api.github.com",
    headers: {
        accept: "application/vnd.github.v3+json",
        "user-agent": userAgent,
    },
    mediaType: {
        format: "",
        previews: [],
    },
};

const endpoint = withDefaults(null, DEFAULTS);


//# sourceMappingURL=index.js.map


/***/ }),

/***/ "./node_modules/@octokit/graphql/dist-web/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/@octokit/graphql/dist-web/index.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "GraphqlResponseError": () => (/* binding */ GraphqlResponseError),
/* harmony export */   "graphql": () => (/* binding */ graphql$1),
/* harmony export */   "withCustomRequest": () => (/* binding */ withCustomRequest)
/* harmony export */ });
/* harmony import */ var _octokit_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @octokit/request */ "./node_modules/@octokit/request/dist-web/index.js");
/* harmony import */ var universal_user_agent__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! universal-user-agent */ "./node_modules/universal-user-agent/dist-web/index.js");



const VERSION = "4.7.0";

function _buildMessageForResponseErrors(data) {
    return (`Request failed due to following response errors:\n` +
        data.errors.map((e) => ` - ${e.message}`).join("\n"));
}
class GraphqlResponseError extends Error {
    constructor(request, headers, response) {
        super(_buildMessageForResponseErrors(response));
        this.request = request;
        this.headers = headers;
        this.response = response;
        this.name = "GraphqlResponseError";
        // Expose the errors and response data in their shorthand properties.
        this.errors = response.errors;
        this.data = response.data;
        // Maintains proper stack trace (only available on V8)
        /* istanbul ignore next */
        if (Error.captureStackTrace) {
            Error.captureStackTrace(this, this.constructor);
        }
    }
}

const NON_VARIABLE_OPTIONS = [
    "method",
    "baseUrl",
    "url",
    "headers",
    "request",
    "query",
    "mediaType",
];
const FORBIDDEN_VARIABLE_OPTIONS = ["query", "method", "url"];
const GHES_V3_SUFFIX_REGEX = /\/api\/v3\/?$/;
function graphql(request, query, options) {
    if (options) {
        if (typeof query === "string" && "query" in options) {
            return Promise.reject(new Error(`[@octokit/graphql] "query" cannot be used as variable name`));
        }
        for (const key in options) {
            if (!FORBIDDEN_VARIABLE_OPTIONS.includes(key))
                continue;
            return Promise.reject(new Error(`[@octokit/graphql] "${key}" cannot be used as variable name`));
        }
    }
    const parsedOptions = typeof query === "string" ? Object.assign({ query }, options) : query;
    const requestOptions = Object.keys(parsedOptions).reduce((result, key) => {
        if (NON_VARIABLE_OPTIONS.includes(key)) {
            result[key] = parsedOptions[key];
            return result;
        }
        if (!result.variables) {
            result.variables = {};
        }
        result.variables[key] = parsedOptions[key];
        return result;
    }, {});
    // workaround for GitHub Enterprise baseUrl set with /api/v3 suffix
    // https://github.com/octokit/auth-app.js/issues/111#issuecomment-657610451
    const baseUrl = parsedOptions.baseUrl || request.endpoint.DEFAULTS.baseUrl;
    if (GHES_V3_SUFFIX_REGEX.test(baseUrl)) {
        requestOptions.url = baseUrl.replace(GHES_V3_SUFFIX_REGEX, "/api/graphql");
    }
    return request(requestOptions).then((response) => {
        if (response.data.errors) {
            const headers = {};
            for (const key of Object.keys(response.headers)) {
                headers[key] = response.headers[key];
            }
            throw new GraphqlResponseError(requestOptions, headers, response.data);
        }
        return response.data.data;
    });
}

function withDefaults(request$1, newDefaults) {
    const newRequest = request$1.defaults(newDefaults);
    const newApi = (query, options) => {
        return graphql(newRequest, query, options);
    };
    return Object.assign(newApi, {
        defaults: withDefaults.bind(null, newRequest),
        endpoint: _octokit_request__WEBPACK_IMPORTED_MODULE_0__.request.endpoint,
    });
}

const graphql$1 = withDefaults(_octokit_request__WEBPACK_IMPORTED_MODULE_0__.request, {
    headers: {
        "user-agent": `octokit-graphql.js/${VERSION} ${(0,universal_user_agent__WEBPACK_IMPORTED_MODULE_1__.getUserAgent)()}`,
    },
    method: "POST",
    url: "/graphql",
});
function withCustomRequest(customRequest) {
    return withDefaults(customRequest, {
        method: "POST",
        url: "/graphql",
    });
}


//# sourceMappingURL=index.js.map


/***/ }),

/***/ "./node_modules/@octokit/request-error/dist-web/index.js":
/*!***************************************************************!*\
  !*** ./node_modules/@octokit/request-error/dist-web/index.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "RequestError": () => (/* binding */ RequestError)
/* harmony export */ });
/* harmony import */ var deprecation__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! deprecation */ "./node_modules/deprecation/dist-web/index.js");
/* harmony import */ var once__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! once */ "./node_modules/once/once.js");
/* harmony import */ var once__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(once__WEBPACK_IMPORTED_MODULE_0__);



const logOnceCode = once__WEBPACK_IMPORTED_MODULE_0___default()((deprecation) => console.warn(deprecation));
const logOnceHeaders = once__WEBPACK_IMPORTED_MODULE_0___default()((deprecation) => console.warn(deprecation));
/**
 * Error with extra properties to help with debugging
 */
class RequestError extends Error {
    constructor(message, statusCode, options) {
        super(message);
        // Maintains proper stack trace (only available on V8)
        /* istanbul ignore next */
        if (Error.captureStackTrace) {
            Error.captureStackTrace(this, this.constructor);
        }
        this.name = "HttpError";
        this.status = statusCode;
        let headers;
        if ("headers" in options && typeof options.headers !== "undefined") {
            headers = options.headers;
        }
        if ("response" in options) {
            this.response = options.response;
            headers = options.response.headers;
        }
        // redact request credentials without mutating original request options
        const requestCopy = Object.assign({}, options.request);
        if (options.request.headers.authorization) {
            requestCopy.headers = Object.assign({}, options.request.headers, {
                authorization: options.request.headers.authorization.replace(/ .*$/, " [REDACTED]"),
            });
        }
        requestCopy.url = requestCopy.url
            // client_id & client_secret can be passed as URL query parameters to increase rate limit
            // see https://developer.github.com/v3/#increasing-the-unauthenticated-rate-limit-for-oauth-applications
            .replace(/\bclient_secret=\w+/g, "client_secret=[REDACTED]")
            // OAuth tokens can be passed as URL query parameters, although it is not recommended
            // see https://developer.github.com/v3/#oauth2-token-sent-in-a-header
            .replace(/\baccess_token=\w+/g, "access_token=[REDACTED]");
        this.request = requestCopy;
        // deprecations
        Object.defineProperty(this, "code", {
            get() {
                logOnceCode(new deprecation__WEBPACK_IMPORTED_MODULE_1__.Deprecation("[@octokit/request-error] `error.code` is deprecated, use `error.status`."));
                return statusCode;
            },
        });
        Object.defineProperty(this, "headers", {
            get() {
                logOnceHeaders(new deprecation__WEBPACK_IMPORTED_MODULE_1__.Deprecation("[@octokit/request-error] `error.headers` is deprecated, use `error.response.headers`."));
                return headers || {};
            },
        });
    }
}


//# sourceMappingURL=index.js.map


/***/ }),

/***/ "./node_modules/@octokit/request/dist-web/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/@octokit/request/dist-web/index.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "request": () => (/* binding */ request)
/* harmony export */ });
/* harmony import */ var _octokit_endpoint__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @octokit/endpoint */ "./node_modules/@octokit/endpoint/dist-web/index.js");
/* harmony import */ var universal_user_agent__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! universal-user-agent */ "./node_modules/universal-user-agent/dist-web/index.js");
/* harmony import */ var is_plain_object__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! is-plain-object */ "./node_modules/is-plain-object/dist/is-plain-object.mjs");
/* harmony import */ var node_fetch__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! node-fetch */ "./node_modules/@octokit/request/node_modules/node-fetch/browser.js");
/* harmony import */ var node_fetch__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(node_fetch__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _octokit_request_error__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @octokit/request-error */ "./node_modules/@octokit/request-error/dist-web/index.js");






const VERSION = "5.6.1";

function getBufferResponse(response) {
    return response.arrayBuffer();
}

function fetchWrapper(requestOptions) {
    const log = requestOptions.request && requestOptions.request.log
        ? requestOptions.request.log
        : console;
    if ((0,is_plain_object__WEBPACK_IMPORTED_MODULE_0__.isPlainObject)(requestOptions.body) ||
        Array.isArray(requestOptions.body)) {
        requestOptions.body = JSON.stringify(requestOptions.body);
    }
    let headers = {};
    let status;
    let url;
    const fetch = (requestOptions.request && requestOptions.request.fetch) || (node_fetch__WEBPACK_IMPORTED_MODULE_1___default());
    return fetch(requestOptions.url, Object.assign({
        method: requestOptions.method,
        body: requestOptions.body,
        headers: requestOptions.headers,
        redirect: requestOptions.redirect,
    }, 
    // `requestOptions.request.agent` type is incompatible
    // see https://github.com/octokit/types.ts/pull/264
    requestOptions.request))
        .then(async (response) => {
        url = response.url;
        status = response.status;
        for (const keyAndValue of response.headers) {
            headers[keyAndValue[0]] = keyAndValue[1];
        }
        if ("deprecation" in headers) {
            const matches = headers.link && headers.link.match(/<([^>]+)>; rel="deprecation"/);
            const deprecationLink = matches && matches.pop();
            log.warn(`[@octokit/request] "${requestOptions.method} ${requestOptions.url}" is deprecated. It is scheduled to be removed on ${headers.sunset}${deprecationLink ? `. See ${deprecationLink}` : ""}`);
        }
        if (status === 204 || status === 205) {
            return;
        }
        // GitHub API returns 200 for HEAD requests
        if (requestOptions.method === "HEAD") {
            if (status < 400) {
                return;
            }
            throw new _octokit_request_error__WEBPACK_IMPORTED_MODULE_2__.RequestError(response.statusText, status, {
                response: {
                    url,
                    status,
                    headers,
                    data: undefined,
                },
                request: requestOptions,
            });
        }
        if (status === 304) {
            throw new _octokit_request_error__WEBPACK_IMPORTED_MODULE_2__.RequestError("Not modified", status, {
                response: {
                    url,
                    status,
                    headers,
                    data: await getResponseData(response),
                },
                request: requestOptions,
            });
        }
        if (status >= 400) {
            const data = await getResponseData(response);
            const error = new _octokit_request_error__WEBPACK_IMPORTED_MODULE_2__.RequestError(toErrorMessage(data), status, {
                response: {
                    url,
                    status,
                    headers,
                    data,
                },
                request: requestOptions,
            });
            throw error;
        }
        return getResponseData(response);
    })
        .then((data) => {
        return {
            status,
            url,
            headers,
            data,
        };
    })
        .catch((error) => {
        if (error instanceof _octokit_request_error__WEBPACK_IMPORTED_MODULE_2__.RequestError)
            throw error;
        throw new _octokit_request_error__WEBPACK_IMPORTED_MODULE_2__.RequestError(error.message, 500, {
            request: requestOptions,
        });
    });
}
async function getResponseData(response) {
    const contentType = response.headers.get("content-type");
    if (/application\/json/.test(contentType)) {
        return response.json();
    }
    if (!contentType || /^text\/|charset=utf-8$/.test(contentType)) {
        return response.text();
    }
    return getBufferResponse(response);
}
function toErrorMessage(data) {
    if (typeof data === "string")
        return data;
    // istanbul ignore else - just in case
    if ("message" in data) {
        if (Array.isArray(data.errors)) {
            return `${data.message}: ${data.errors.map(JSON.stringify).join(", ")}`;
        }
        return data.message;
    }
    // istanbul ignore next - just in case
    return `Unknown error: ${JSON.stringify(data)}`;
}

function withDefaults(oldEndpoint, newDefaults) {
    const endpoint = oldEndpoint.defaults(newDefaults);
    const newApi = function (route, parameters) {
        const endpointOptions = endpoint.merge(route, parameters);
        if (!endpointOptions.request || !endpointOptions.request.hook) {
            return fetchWrapper(endpoint.parse(endpointOptions));
        }
        const request = (route, parameters) => {
            return fetchWrapper(endpoint.parse(endpoint.merge(route, parameters)));
        };
        Object.assign(request, {
            endpoint,
            defaults: withDefaults.bind(null, endpoint),
        });
        return endpointOptions.request.hook(request, endpointOptions);
    };
    return Object.assign(newApi, {
        endpoint,
        defaults: withDefaults.bind(null, endpoint),
    });
}

const request = withDefaults(_octokit_endpoint__WEBPACK_IMPORTED_MODULE_3__.endpoint, {
    headers: {
        "user-agent": `octokit-request.js/${VERSION} ${(0,universal_user_agent__WEBPACK_IMPORTED_MODULE_4__.getUserAgent)()}`,
    },
});


//# sourceMappingURL=index.js.map


/***/ }),

/***/ "./node_modules/@octokit/request/node_modules/node-fetch/browser.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@octokit/request/node_modules/node-fetch/browser.js ***!
  \**************************************************************************/
/***/ ((module, exports) => {

"use strict";


// ref: https://github.com/tc39/proposal-global
var getGlobal = function () {
	// the only reliable means to get the global object is
	// `Function('return this')()`
	// However, this causes CSP violations in Chrome apps.
	if (typeof self !== 'undefined') { return self; }
	if (typeof window !== 'undefined') { return window; }
	if (typeof global !== 'undefined') { return global; }
	throw new Error('unable to locate global object');
}

var global = getGlobal();

module.exports = exports = global.fetch;

// Needed for TypeScript and Webpack.
if (global.fetch) {
	exports.default = global.fetch.bind(global);
}

exports.Headers = global.Headers;
exports.Request = global.Request;
exports.Response = global.Response;

/***/ }),

/***/ "./node_modules/asn1.js/lib/asn1.js":
/*!******************************************!*\
  !*** ./node_modules/asn1.js/lib/asn1.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


const asn1 = exports;

asn1.bignum = __webpack_require__(/*! bn.js */ "./node_modules/bn.js/lib/bn.js");

asn1.define = __webpack_require__(/*! ./asn1/api */ "./node_modules/asn1.js/lib/asn1/api.js").define;
asn1.base = __webpack_require__(/*! ./asn1/base */ "./node_modules/asn1.js/lib/asn1/base/index.js");
asn1.constants = __webpack_require__(/*! ./asn1/constants */ "./node_modules/asn1.js/lib/asn1/constants/index.js");
asn1.decoders = __webpack_require__(/*! ./asn1/decoders */ "./node_modules/asn1.js/lib/asn1/decoders/index.js");
asn1.encoders = __webpack_require__(/*! ./asn1/encoders */ "./node_modules/asn1.js/lib/asn1/encoders/index.js");


/***/ }),

/***/ "./node_modules/asn1.js/lib/asn1/api.js":
/*!**********************************************!*\
  !*** ./node_modules/asn1.js/lib/asn1/api.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


const encoders = __webpack_require__(/*! ./encoders */ "./node_modules/asn1.js/lib/asn1/encoders/index.js");
const decoders = __webpack_require__(/*! ./decoders */ "./node_modules/asn1.js/lib/asn1/decoders/index.js");
const inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js");

const api = exports;

api.define = function define(name, body) {
  return new Entity(name, body);
};

function Entity(name, body) {
  this.name = name;
  this.body = body;

  this.decoders = {};
  this.encoders = {};
}

Entity.prototype._createNamed = function createNamed(Base) {
  const name = this.name;

  function Generated(entity) {
    this._initNamed(entity, name);
  }
  inherits(Generated, Base);
  Generated.prototype._initNamed = function _initNamed(entity, name) {
    Base.call(this, entity, name);
  };

  return new Generated(this);
};

Entity.prototype._getDecoder = function _getDecoder(enc) {
  enc = enc || 'der';
  // Lazily create decoder
  if (!this.decoders.hasOwnProperty(enc))
    this.decoders[enc] = this._createNamed(decoders[enc]);
  return this.decoders[enc];
};

Entity.prototype.decode = function decode(data, enc, options) {
  return this._getDecoder(enc).decode(data, options);
};

Entity.prototype._getEncoder = function _getEncoder(enc) {
  enc = enc || 'der';
  // Lazily create encoder
  if (!this.encoders.hasOwnProperty(enc))
    this.encoders[enc] = this._createNamed(encoders[enc]);
  return this.encoders[enc];
};

Entity.prototype.encode = function encode(data, enc, /* internal */ reporter) {
  return this._getEncoder(enc).encode(data, reporter);
};


/***/ }),

/***/ "./node_modules/asn1.js/lib/asn1/base/buffer.js":
/*!******************************************************!*\
  !*** ./node_modules/asn1.js/lib/asn1/base/buffer.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


const inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js");
const Reporter = __webpack_require__(/*! ../base/reporter */ "./node_modules/asn1.js/lib/asn1/base/reporter.js").Reporter;
const Buffer = __webpack_require__(/*! safer-buffer */ "./node_modules/safer-buffer/safer.js").Buffer;

function DecoderBuffer(base, options) {
  Reporter.call(this, options);
  if (!Buffer.isBuffer(base)) {
    this.error('Input not Buffer');
    return;
  }

  this.base = base;
  this.offset = 0;
  this.length = base.length;
}
inherits(DecoderBuffer, Reporter);
exports.DecoderBuffer = DecoderBuffer;

DecoderBuffer.isDecoderBuffer = function isDecoderBuffer(data) {
  if (data instanceof DecoderBuffer) {
    return true;
  }

  // Or accept compatible API
  const isCompatible = typeof data === 'object' &&
    Buffer.isBuffer(data.base) &&
    data.constructor.name === 'DecoderBuffer' &&
    typeof data.offset === 'number' &&
    typeof data.length === 'number' &&
    typeof data.save === 'function' &&
    typeof data.restore === 'function' &&
    typeof data.isEmpty === 'function' &&
    typeof data.readUInt8 === 'function' &&
    typeof data.skip === 'function' &&
    typeof data.raw === 'function';

  return isCompatible;
};

DecoderBuffer.prototype.save = function save() {
  return { offset: this.offset, reporter: Reporter.prototype.save.call(this) };
};

DecoderBuffer.prototype.restore = function restore(save) {
  // Return skipped data
  const res = new DecoderBuffer(this.base);
  res.offset = save.offset;
  res.length = this.offset;

  this.offset = save.offset;
  Reporter.prototype.restore.call(this, save.reporter);

  return res;
};

DecoderBuffer.prototype.isEmpty = function isEmpty() {
  return this.offset === this.length;
};

DecoderBuffer.prototype.readUInt8 = function readUInt8(fail) {
  if (this.offset + 1 <= this.length)
    return this.base.readUInt8(this.offset++, true);
  else
    return this.error(fail || 'DecoderBuffer overrun');
};

DecoderBuffer.prototype.skip = function skip(bytes, fail) {
  if (!(this.offset + bytes <= this.length))
    return this.error(fail || 'DecoderBuffer overrun');

  const res = new DecoderBuffer(this.base);

  // Share reporter state
  res._reporterState = this._reporterState;

  res.offset = this.offset;
  res.length = this.offset + bytes;
  this.offset += bytes;
  return res;
};

DecoderBuffer.prototype.raw = function raw(save) {
  return this.base.slice(save ? save.offset : this.offset, this.length);
};

function EncoderBuffer(value, reporter) {
  if (Array.isArray(value)) {
    this.length = 0;
    this.value = value.map(function(item) {
      if (!EncoderBuffer.isEncoderBuffer(item))
        item = new EncoderBuffer(item, reporter);
      this.length += item.length;
      return item;
    }, this);
  } else if (typeof value === 'number') {
    if (!(0 <= value && value <= 0xff))
      return reporter.error('non-byte EncoderBuffer value');
    this.value = value;
    this.length = 1;
  } else if (typeof value === 'string') {
    this.value = value;
    this.length = Buffer.byteLength(value);
  } else if (Buffer.isBuffer(value)) {
    this.value = value;
    this.length = value.length;
  } else {
    return reporter.error('Unsupported type: ' + typeof value);
  }
}
exports.EncoderBuffer = EncoderBuffer;

EncoderBuffer.isEncoderBuffer = function isEncoderBuffer(data) {
  if (data instanceof EncoderBuffer) {
    return true;
  }

  // Or accept compatible API
  const isCompatible = typeof data === 'object' &&
    data.constructor.name === 'EncoderBuffer' &&
    typeof data.length === 'number' &&
    typeof data.join === 'function';

  return isCompatible;
};

EncoderBuffer.prototype.join = function join(out, offset) {
  if (!out)
    out = Buffer.alloc(this.length);
  if (!offset)
    offset = 0;

  if (this.length === 0)
    return out;

  if (Array.isArray(this.value)) {
    this.value.forEach(function(item) {
      item.join(out, offset);
      offset += item.length;
    });
  } else {
    if (typeof this.value === 'number')
      out[offset] = this.value;
    else if (typeof this.value === 'string')
      out.write(this.value, offset);
    else if (Buffer.isBuffer(this.value))
      this.value.copy(out, offset);
    offset += this.length;
  }

  return out;
};


/***/ }),

/***/ "./node_modules/asn1.js/lib/asn1/base/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/asn1.js/lib/asn1/base/index.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


const base = exports;

base.Reporter = __webpack_require__(/*! ./reporter */ "./node_modules/asn1.js/lib/asn1/base/reporter.js").Reporter;
base.DecoderBuffer = __webpack_require__(/*! ./buffer */ "./node_modules/asn1.js/lib/asn1/base/buffer.js").DecoderBuffer;
base.EncoderBuffer = __webpack_require__(/*! ./buffer */ "./node_modules/asn1.js/lib/asn1/base/buffer.js").EncoderBuffer;
base.Node = __webpack_require__(/*! ./node */ "./node_modules/asn1.js/lib/asn1/base/node.js");


/***/ }),

/***/ "./node_modules/asn1.js/lib/asn1/base/node.js":
/*!****************************************************!*\
  !*** ./node_modules/asn1.js/lib/asn1/base/node.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


const Reporter = __webpack_require__(/*! ../base/reporter */ "./node_modules/asn1.js/lib/asn1/base/reporter.js").Reporter;
const EncoderBuffer = __webpack_require__(/*! ../base/buffer */ "./node_modules/asn1.js/lib/asn1/base/buffer.js").EncoderBuffer;
const DecoderBuffer = __webpack_require__(/*! ../base/buffer */ "./node_modules/asn1.js/lib/asn1/base/buffer.js").DecoderBuffer;
const assert = __webpack_require__(/*! minimalistic-assert */ "./node_modules/minimalistic-assert/index.js");

// Supported tags
const tags = [
  'seq', 'seqof', 'set', 'setof', 'objid', 'bool',
  'gentime', 'utctime', 'null_', 'enum', 'int', 'objDesc',
  'bitstr', 'bmpstr', 'charstr', 'genstr', 'graphstr', 'ia5str', 'iso646str',
  'numstr', 'octstr', 'printstr', 't61str', 'unistr', 'utf8str', 'videostr'
];

// Public methods list
const methods = [
  'key', 'obj', 'use', 'optional', 'explicit', 'implicit', 'def', 'choice',
  'any', 'contains'
].concat(tags);

// Overrided methods list
const overrided = [
  '_peekTag', '_decodeTag', '_use',
  '_decodeStr', '_decodeObjid', '_decodeTime',
  '_decodeNull', '_decodeInt', '_decodeBool', '_decodeList',

  '_encodeComposite', '_encodeStr', '_encodeObjid', '_encodeTime',
  '_encodeNull', '_encodeInt', '_encodeBool'
];

function Node(enc, parent, name) {
  const state = {};
  this._baseState = state;

  state.name = name;
  state.enc = enc;

  state.parent = parent || null;
  state.children = null;

  // State
  state.tag = null;
  state.args = null;
  state.reverseArgs = null;
  state.choice = null;
  state.optional = false;
  state.any = false;
  state.obj = false;
  state.use = null;
  state.useDecoder = null;
  state.key = null;
  state['default'] = null;
  state.explicit = null;
  state.implicit = null;
  state.contains = null;

  // Should create new instance on each method
  if (!state.parent) {
    state.children = [];
    this._wrap();
  }
}
module.exports = Node;

const stateProps = [
  'enc', 'parent', 'children', 'tag', 'args', 'reverseArgs', 'choice',
  'optional', 'any', 'obj', 'use', 'alteredUse', 'key', 'default', 'explicit',
  'implicit', 'contains'
];

Node.prototype.clone = function clone() {
  const state = this._baseState;
  const cstate = {};
  stateProps.forEach(function(prop) {
    cstate[prop] = state[prop];
  });
  const res = new this.constructor(cstate.parent);
  res._baseState = cstate;
  return res;
};

Node.prototype._wrap = function wrap() {
  const state = this._baseState;
  methods.forEach(function(method) {
    this[method] = function _wrappedMethod() {
      const clone = new this.constructor(this);
      state.children.push(clone);
      return clone[method].apply(clone, arguments);
    };
  }, this);
};

Node.prototype._init = function init(body) {
  const state = this._baseState;

  assert(state.parent === null);
  body.call(this);

  // Filter children
  state.children = state.children.filter(function(child) {
    return child._baseState.parent === this;
  }, this);
  assert.equal(state.children.length, 1, 'Root node can have only one child');
};

Node.prototype._useArgs = function useArgs(args) {
  const state = this._baseState;

  // Filter children and args
  const children = args.filter(function(arg) {
    return arg instanceof this.constructor;
  }, this);
  args = args.filter(function(arg) {
    return !(arg instanceof this.constructor);
  }, this);

  if (children.length !== 0) {
    assert(state.children === null);
    state.children = children;

    // Replace parent to maintain backward link
    children.forEach(function(child) {
      child._baseState.parent = this;
    }, this);
  }
  if (args.length !== 0) {
    assert(state.args === null);
    state.args = args;
    state.reverseArgs = args.map(function(arg) {
      if (typeof arg !== 'object' || arg.constructor !== Object)
        return arg;

      const res = {};
      Object.keys(arg).forEach(function(key) {
        if (key == (key | 0))
          key |= 0;
        const value = arg[key];
        res[value] = key;
      });
      return res;
    });
  }
};

//
// Overrided methods
//

overrided.forEach(function(method) {
  Node.prototype[method] = function _overrided() {
    const state = this._baseState;
    throw new Error(method + ' not implemented for encoding: ' + state.enc);
  };
});

//
// Public methods
//

tags.forEach(function(tag) {
  Node.prototype[tag] = function _tagMethod() {
    const state = this._baseState;
    const args = Array.prototype.slice.call(arguments);

    assert(state.tag === null);
    state.tag = tag;

    this._useArgs(args);

    return this;
  };
});

Node.prototype.use = function use(item) {
  assert(item);
  const state = this._baseState;

  assert(state.use === null);
  state.use = item;

  return this;
};

Node.prototype.optional = function optional() {
  const state = this._baseState;

  state.optional = true;

  return this;
};

Node.prototype.def = function def(val) {
  const state = this._baseState;

  assert(state['default'] === null);
  state['default'] = val;
  state.optional = true;

  return this;
};

Node.prototype.explicit = function explicit(num) {
  const state = this._baseState;

  assert(state.explicit === null && state.implicit === null);
  state.explicit = num;

  return this;
};

Node.prototype.implicit = function implicit(num) {
  const state = this._baseState;

  assert(state.explicit === null && state.implicit === null);
  state.implicit = num;

  return this;
};

Node.prototype.obj = function obj() {
  const state = this._baseState;
  const args = Array.prototype.slice.call(arguments);

  state.obj = true;

  if (args.length !== 0)
    this._useArgs(args);

  return this;
};

Node.prototype.key = function key(newKey) {
  const state = this._baseState;

  assert(state.key === null);
  state.key = newKey;

  return this;
};

Node.prototype.any = function any() {
  const state = this._baseState;

  state.any = true;

  return this;
};

Node.prototype.choice = function choice(obj) {
  const state = this._baseState;

  assert(state.choice === null);
  state.choice = obj;
  this._useArgs(Object.keys(obj).map(function(key) {
    return obj[key];
  }));

  return this;
};

Node.prototype.contains = function contains(item) {
  const state = this._baseState;

  assert(state.use === null);
  state.contains = item;

  return this;
};

//
// Decoding
//

Node.prototype._decode = function decode(input, options) {
  const state = this._baseState;

  // Decode root node
  if (state.parent === null)
    return input.wrapResult(state.children[0]._decode(input, options));

  let result = state['default'];
  let present = true;

  let prevKey = null;
  if (state.key !== null)
    prevKey = input.enterKey(state.key);

  // Check if tag is there
  if (state.optional) {
    let tag = null;
    if (state.explicit !== null)
      tag = state.explicit;
    else if (state.implicit !== null)
      tag = state.implicit;
    else if (state.tag !== null)
      tag = state.tag;

    if (tag === null && !state.any) {
      // Trial and Error
      const save = input.save();
      try {
        if (state.choice === null)
          this._decodeGeneric(state.tag, input, options);
        else
          this._decodeChoice(input, options);
        present = true;
      } catch (e) {
        present = false;
      }
      input.restore(save);
    } else {
      present = this._peekTag(input, tag, state.any);

      if (input.isError(present))
        return present;
    }
  }

  // Push object on stack
  let prevObj;
  if (state.obj && present)
    prevObj = input.enterObject();

  if (present) {
    // Unwrap explicit values
    if (state.explicit !== null) {
      const explicit = this._decodeTag(input, state.explicit);
      if (input.isError(explicit))
        return explicit;
      input = explicit;
    }

    const start = input.offset;

    // Unwrap implicit and normal values
    if (state.use === null && state.choice === null) {
      let save;
      if (state.any)
        save = input.save();
      const body = this._decodeTag(
        input,
        state.implicit !== null ? state.implicit : state.tag,
        state.any
      );
      if (input.isError(body))
        return body;

      if (state.any)
        result = input.raw(save);
      else
        input = body;
    }

    if (options && options.track && state.tag !== null)
      options.track(input.path(), start, input.length, 'tagged');

    if (options && options.track && state.tag !== null)
      options.track(input.path(), input.offset, input.length, 'content');

    // Select proper method for tag
    if (state.any) {
      // no-op
    } else if (state.choice === null) {
      result = this._decodeGeneric(state.tag, input, options);
    } else {
      result = this._decodeChoice(input, options);
    }

    if (input.isError(result))
      return result;

    // Decode children
    if (!state.any && state.choice === null && state.children !== null) {
      state.children.forEach(function decodeChildren(child) {
        // NOTE: We are ignoring errors here, to let parser continue with other
        // parts of encoded data
        child._decode(input, options);
      });
    }

    // Decode contained/encoded by schema, only in bit or octet strings
    if (state.contains && (state.tag === 'octstr' || state.tag === 'bitstr')) {
      const data = new DecoderBuffer(result);
      result = this._getUse(state.contains, input._reporterState.obj)
        ._decode(data, options);
    }
  }

  // Pop object
  if (state.obj && present)
    result = input.leaveObject(prevObj);

  // Set key
  if (state.key !== null && (result !== null || present === true))
    input.leaveKey(prevKey, state.key, result);
  else if (prevKey !== null)
    input.exitKey(prevKey);

  return result;
};

Node.prototype._decodeGeneric = function decodeGeneric(tag, input, options) {
  const state = this._baseState;

  if (tag === 'seq' || tag === 'set')
    return null;
  if (tag === 'seqof' || tag === 'setof')
    return this._decodeList(input, tag, state.args[0], options);
  else if (/str$/.test(tag))
    return this._decodeStr(input, tag, options);
  else if (tag === 'objid' && state.args)
    return this._decodeObjid(input, state.args[0], state.args[1], options);
  else if (tag === 'objid')
    return this._decodeObjid(input, null, null, options);
  else if (tag === 'gentime' || tag === 'utctime')
    return this._decodeTime(input, tag, options);
  else if (tag === 'null_')
    return this._decodeNull(input, options);
  else if (tag === 'bool')
    return this._decodeBool(input, options);
  else if (tag === 'objDesc')
    return this._decodeStr(input, tag, options);
  else if (tag === 'int' || tag === 'enum')
    return this._decodeInt(input, state.args && state.args[0], options);

  if (state.use !== null) {
    return this._getUse(state.use, input._reporterState.obj)
      ._decode(input, options);
  } else {
    return input.error('unknown tag: ' + tag);
  }
};

Node.prototype._getUse = function _getUse(entity, obj) {

  const state = this._baseState;
  // Create altered use decoder if implicit is set
  state.useDecoder = this._use(entity, obj);
  assert(state.useDecoder._baseState.parent === null);
  state.useDecoder = state.useDecoder._baseState.children[0];
  if (state.implicit !== state.useDecoder._baseState.implicit) {
    state.useDecoder = state.useDecoder.clone();
    state.useDecoder._baseState.implicit = state.implicit;
  }
  return state.useDecoder;
};

Node.prototype._decodeChoice = function decodeChoice(input, options) {
  const state = this._baseState;
  let result = null;
  let match = false;

  Object.keys(state.choice).some(function(key) {
    const save = input.save();
    const node = state.choice[key];
    try {
      const value = node._decode(input, options);
      if (input.isError(value))
        return false;

      result = { type: key, value: value };
      match = true;
    } catch (e) {
      input.restore(save);
      return false;
    }
    return true;
  }, this);

  if (!match)
    return input.error('Choice not matched');

  return result;
};

//
// Encoding
//

Node.prototype._createEncoderBuffer = function createEncoderBuffer(data) {
  return new EncoderBuffer(data, this.reporter);
};

Node.prototype._encode = function encode(data, reporter, parent) {
  const state = this._baseState;
  if (state['default'] !== null && state['default'] === data)
    return;

  const result = this._encodeValue(data, reporter, parent);
  if (result === undefined)
    return;

  if (this._skipDefault(result, reporter, parent))
    return;

  return result;
};

Node.prototype._encodeValue = function encode(data, reporter, parent) {
  const state = this._baseState;

  // Decode root node
  if (state.parent === null)
    return state.children[0]._encode(data, reporter || new Reporter());

  let result = null;

  // Set reporter to share it with a child class
  this.reporter = reporter;

  // Check if data is there
  if (state.optional && data === undefined) {
    if (state['default'] !== null)
      data = state['default'];
    else
      return;
  }

  // Encode children first
  let content = null;
  let primitive = false;
  if (state.any) {
    // Anything that was given is translated to buffer
    result = this._createEncoderBuffer(data);
  } else if (state.choice) {
    result = this._encodeChoice(data, reporter);
  } else if (state.contains) {
    content = this._getUse(state.contains, parent)._encode(data, reporter);
    primitive = true;
  } else if (state.children) {
    content = state.children.map(function(child) {
      if (child._baseState.tag === 'null_')
        return child._encode(null, reporter, data);

      if (child._baseState.key === null)
        return reporter.error('Child should have a key');
      const prevKey = reporter.enterKey(child._baseState.key);

      if (typeof data !== 'object')
        return reporter.error('Child expected, but input is not object');

      const res = child._encode(data[child._baseState.key], reporter, data);
      reporter.leaveKey(prevKey);

      return res;
    }, this).filter(function(child) {
      return child;
    });
    content = this._createEncoderBuffer(content);
  } else {
    if (state.tag === 'seqof' || state.tag === 'setof') {
      // TODO(indutny): this should be thrown on DSL level
      if (!(state.args && state.args.length === 1))
        return reporter.error('Too many args for : ' + state.tag);

      if (!Array.isArray(data))
        return reporter.error('seqof/setof, but data is not Array');

      const child = this.clone();
      child._baseState.implicit = null;
      content = this._createEncoderBuffer(data.map(function(item) {
        const state = this._baseState;

        return this._getUse(state.args[0], data)._encode(item, reporter);
      }, child));
    } else if (state.use !== null) {
      result = this._getUse(state.use, parent)._encode(data, reporter);
    } else {
      content = this._encodePrimitive(state.tag, data);
      primitive = true;
    }
  }

  // Encode data itself
  if (!state.any && state.choice === null) {
    const tag = state.implicit !== null ? state.implicit : state.tag;
    const cls = state.implicit === null ? 'universal' : 'context';

    if (tag === null) {
      if (state.use === null)
        reporter.error('Tag could be omitted only for .use()');
    } else {
      if (state.use === null)
        result = this._encodeComposite(tag, primitive, cls, content);
    }
  }

  // Wrap in explicit
  if (state.explicit !== null)
    result = this._encodeComposite(state.explicit, false, 'context', result);

  return result;
};

Node.prototype._encodeChoice = function encodeChoice(data, reporter) {
  const state = this._baseState;

  const node = state.choice[data.type];
  if (!node) {
    assert(
      false,
      data.type + ' not found in ' +
            JSON.stringify(Object.keys(state.choice)));
  }
  return node._encode(data.value, reporter);
};

Node.prototype._encodePrimitive = function encodePrimitive(tag, data) {
  const state = this._baseState;

  if (/str$/.test(tag))
    return this._encodeStr(data, tag);
  else if (tag === 'objid' && state.args)
    return this._encodeObjid(data, state.reverseArgs[0], state.args[1]);
  else if (tag === 'objid')
    return this._encodeObjid(data, null, null);
  else if (tag === 'gentime' || tag === 'utctime')
    return this._encodeTime(data, tag);
  else if (tag === 'null_')
    return this._encodeNull();
  else if (tag === 'int' || tag === 'enum')
    return this._encodeInt(data, state.args && state.reverseArgs[0]);
  else if (tag === 'bool')
    return this._encodeBool(data);
  else if (tag === 'objDesc')
    return this._encodeStr(data, tag);
  else
    throw new Error('Unsupported tag: ' + tag);
};

Node.prototype._isNumstr = function isNumstr(str) {
  return /^[0-9 ]*$/.test(str);
};

Node.prototype._isPrintstr = function isPrintstr(str) {
  return /^[A-Za-z0-9 '()+,-./:=?]*$/.test(str);
};


/***/ }),

/***/ "./node_modules/asn1.js/lib/asn1/base/reporter.js":
/*!********************************************************!*\
  !*** ./node_modules/asn1.js/lib/asn1/base/reporter.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


const inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js");

function Reporter(options) {
  this._reporterState = {
    obj: null,
    path: [],
    options: options || {},
    errors: []
  };
}
exports.Reporter = Reporter;

Reporter.prototype.isError = function isError(obj) {
  return obj instanceof ReporterError;
};

Reporter.prototype.save = function save() {
  const state = this._reporterState;

  return { obj: state.obj, pathLen: state.path.length };
};

Reporter.prototype.restore = function restore(data) {
  const state = this._reporterState;

  state.obj = data.obj;
  state.path = state.path.slice(0, data.pathLen);
};

Reporter.prototype.enterKey = function enterKey(key) {
  return this._reporterState.path.push(key);
};

Reporter.prototype.exitKey = function exitKey(index) {
  const state = this._reporterState;

  state.path = state.path.slice(0, index - 1);
};

Reporter.prototype.leaveKey = function leaveKey(index, key, value) {
  const state = this._reporterState;

  this.exitKey(index);
  if (state.obj !== null)
    state.obj[key] = value;
};

Reporter.prototype.path = function path() {
  return this._reporterState.path.join('/');
};

Reporter.prototype.enterObject = function enterObject() {
  const state = this._reporterState;

  const prev = state.obj;
  state.obj = {};
  return prev;
};

Reporter.prototype.leaveObject = function leaveObject(prev) {
  const state = this._reporterState;

  const now = state.obj;
  state.obj = prev;
  return now;
};

Reporter.prototype.error = function error(msg) {
  let err;
  const state = this._reporterState;

  const inherited = msg instanceof ReporterError;
  if (inherited) {
    err = msg;
  } else {
    err = new ReporterError(state.path.map(function(elem) {
      return '[' + JSON.stringify(elem) + ']';
    }).join(''), msg.message || msg, msg.stack);
  }

  if (!state.options.partial)
    throw err;

  if (!inherited)
    state.errors.push(err);

  return err;
};

Reporter.prototype.wrapResult = function wrapResult(result) {
  const state = this._reporterState;
  if (!state.options.partial)
    return result;

  return {
    result: this.isError(result) ? null : result,
    errors: state.errors
  };
};

function ReporterError(path, msg) {
  this.path = path;
  this.rethrow(msg);
}
inherits(ReporterError, Error);

ReporterError.prototype.rethrow = function rethrow(msg) {
  this.message = msg + ' at: ' + (this.path || '(shallow)');
  if (Error.captureStackTrace)
    Error.captureStackTrace(this, ReporterError);

  if (!this.stack) {
    try {
      // IE only adds stack when thrown
      throw new Error(this.message);
    } catch (e) {
      this.stack = e.stack;
    }
  }
  return this;
};


/***/ }),

/***/ "./node_modules/asn1.js/lib/asn1/constants/der.js":
/*!********************************************************!*\
  !*** ./node_modules/asn1.js/lib/asn1/constants/der.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";


// Helper
function reverse(map) {
  const res = {};

  Object.keys(map).forEach(function(key) {
    // Convert key to integer if it is stringified
    if ((key | 0) == key)
      key = key | 0;

    const value = map[key];
    res[value] = key;
  });

  return res;
}

exports.tagClass = {
  0: 'universal',
  1: 'application',
  2: 'context',
  3: 'private'
};
exports.tagClassByName = reverse(exports.tagClass);

exports.tag = {
  0x00: 'end',
  0x01: 'bool',
  0x02: 'int',
  0x03: 'bitstr',
  0x04: 'octstr',
  0x05: 'null_',
  0x06: 'objid',
  0x07: 'objDesc',
  0x08: 'external',
  0x09: 'real',
  0x0a: 'enum',
  0x0b: 'embed',
  0x0c: 'utf8str',
  0x0d: 'relativeOid',
  0x10: 'seq',
  0x11: 'set',
  0x12: 'numstr',
  0x13: 'printstr',
  0x14: 't61str',
  0x15: 'videostr',
  0x16: 'ia5str',
  0x17: 'utctime',
  0x18: 'gentime',
  0x19: 'graphstr',
  0x1a: 'iso646str',
  0x1b: 'genstr',
  0x1c: 'unistr',
  0x1d: 'charstr',
  0x1e: 'bmpstr'
};
exports.tagByName = reverse(exports.tag);


/***/ }),

/***/ "./node_modules/asn1.js/lib/asn1/constants/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/asn1.js/lib/asn1/constants/index.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


const constants = exports;

// Helper
constants._reverse = function reverse(map) {
  const res = {};

  Object.keys(map).forEach(function(key) {
    // Convert key to integer if it is stringified
    if ((key | 0) == key)
      key = key | 0;

    const value = map[key];
    res[value] = key;
  });

  return res;
};

constants.der = __webpack_require__(/*! ./der */ "./node_modules/asn1.js/lib/asn1/constants/der.js");


/***/ }),

/***/ "./node_modules/asn1.js/lib/asn1/decoders/der.js":
/*!*******************************************************!*\
  !*** ./node_modules/asn1.js/lib/asn1/decoders/der.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


const inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js");

const bignum = __webpack_require__(/*! bn.js */ "./node_modules/bn.js/lib/bn.js");
const DecoderBuffer = __webpack_require__(/*! ../base/buffer */ "./node_modules/asn1.js/lib/asn1/base/buffer.js").DecoderBuffer;
const Node = __webpack_require__(/*! ../base/node */ "./node_modules/asn1.js/lib/asn1/base/node.js");

// Import DER constants
const der = __webpack_require__(/*! ../constants/der */ "./node_modules/asn1.js/lib/asn1/constants/der.js");

function DERDecoder(entity) {
  this.enc = 'der';
  this.name = entity.name;
  this.entity = entity;

  // Construct base tree
  this.tree = new DERNode();
  this.tree._init(entity.body);
}
module.exports = DERDecoder;

DERDecoder.prototype.decode = function decode(data, options) {
  if (!DecoderBuffer.isDecoderBuffer(data)) {
    data = new DecoderBuffer(data, options);
  }

  return this.tree._decode(data, options);
};

// Tree methods

function DERNode(parent) {
  Node.call(this, 'der', parent);
}
inherits(DERNode, Node);

DERNode.prototype._peekTag = function peekTag(buffer, tag, any) {
  if (buffer.isEmpty())
    return false;

  const state = buffer.save();
  const decodedTag = derDecodeTag(buffer, 'Failed to peek tag: "' + tag + '"');
  if (buffer.isError(decodedTag))
    return decodedTag;

  buffer.restore(state);

  return decodedTag.tag === tag || decodedTag.tagStr === tag ||
    (decodedTag.tagStr + 'of') === tag || any;
};

DERNode.prototype._decodeTag = function decodeTag(buffer, tag, any) {
  const decodedTag = derDecodeTag(buffer,
    'Failed to decode tag of "' + tag + '"');
  if (buffer.isError(decodedTag))
    return decodedTag;

  let len = derDecodeLen(buffer,
    decodedTag.primitive,
    'Failed to get length of "' + tag + '"');

  // Failure
  if (buffer.isError(len))
    return len;

  if (!any &&
      decodedTag.tag !== tag &&
      decodedTag.tagStr !== tag &&
      decodedTag.tagStr + 'of' !== tag) {
    return buffer.error('Failed to match tag: "' + tag + '"');
  }

  if (decodedTag.primitive || len !== null)
    return buffer.skip(len, 'Failed to match body of: "' + tag + '"');

  // Indefinite length... find END tag
  const state = buffer.save();
  const res = this._skipUntilEnd(
    buffer,
    'Failed to skip indefinite length body: "' + this.tag + '"');
  if (buffer.isError(res))
    return res;

  len = buffer.offset - state.offset;
  buffer.restore(state);
  return buffer.skip(len, 'Failed to match body of: "' + tag + '"');
};

DERNode.prototype._skipUntilEnd = function skipUntilEnd(buffer, fail) {
  for (;;) {
    const tag = derDecodeTag(buffer, fail);
    if (buffer.isError(tag))
      return tag;
    const len = derDecodeLen(buffer, tag.primitive, fail);
    if (buffer.isError(len))
      return len;

    let res;
    if (tag.primitive || len !== null)
      res = buffer.skip(len);
    else
      res = this._skipUntilEnd(buffer, fail);

    // Failure
    if (buffer.isError(res))
      return res;

    if (tag.tagStr === 'end')
      break;
  }
};

DERNode.prototype._decodeList = function decodeList(buffer, tag, decoder,
  options) {
  const result = [];
  while (!buffer.isEmpty()) {
    const possibleEnd = this._peekTag(buffer, 'end');
    if (buffer.isError(possibleEnd))
      return possibleEnd;

    const res = decoder.decode(buffer, 'der', options);
    if (buffer.isError(res) && possibleEnd)
      break;
    result.push(res);
  }
  return result;
};

DERNode.prototype._decodeStr = function decodeStr(buffer, tag) {
  if (tag === 'bitstr') {
    const unused = buffer.readUInt8();
    if (buffer.isError(unused))
      return unused;
    return { unused: unused, data: buffer.raw() };
  } else if (tag === 'bmpstr') {
    const raw = buffer.raw();
    if (raw.length % 2 === 1)
      return buffer.error('Decoding of string type: bmpstr length mismatch');

    let str = '';
    for (let i = 0; i < raw.length / 2; i++) {
      str += String.fromCharCode(raw.readUInt16BE(i * 2));
    }
    return str;
  } else if (tag === 'numstr') {
    const numstr = buffer.raw().toString('ascii');
    if (!this._isNumstr(numstr)) {
      return buffer.error('Decoding of string type: ' +
                          'numstr unsupported characters');
    }
    return numstr;
  } else if (tag === 'octstr') {
    return buffer.raw();
  } else if (tag === 'objDesc') {
    return buffer.raw();
  } else if (tag === 'printstr') {
    const printstr = buffer.raw().toString('ascii');
    if (!this._isPrintstr(printstr)) {
      return buffer.error('Decoding of string type: ' +
                          'printstr unsupported characters');
    }
    return printstr;
  } else if (/str$/.test(tag)) {
    return buffer.raw().toString();
  } else {
    return buffer.error('Decoding of string type: ' + tag + ' unsupported');
  }
};

DERNode.prototype._decodeObjid = function decodeObjid(buffer, values, relative) {
  let result;
  const identifiers = [];
  let ident = 0;
  let subident = 0;
  while (!buffer.isEmpty()) {
    subident = buffer.readUInt8();
    ident <<= 7;
    ident |= subident & 0x7f;
    if ((subident & 0x80) === 0) {
      identifiers.push(ident);
      ident = 0;
    }
  }
  if (subident & 0x80)
    identifiers.push(ident);

  const first = (identifiers[0] / 40) | 0;
  const second = identifiers[0] % 40;

  if (relative)
    result = identifiers;
  else
    result = [first, second].concat(identifiers.slice(1));

  if (values) {
    let tmp = values[result.join(' ')];
    if (tmp === undefined)
      tmp = values[result.join('.')];
    if (tmp !== undefined)
      result = tmp;
  }

  return result;
};

DERNode.prototype._decodeTime = function decodeTime(buffer, tag) {
  const str = buffer.raw().toString();

  let year;
  let mon;
  let day;
  let hour;
  let min;
  let sec;
  if (tag === 'gentime') {
    year = str.slice(0, 4) | 0;
    mon = str.slice(4, 6) | 0;
    day = str.slice(6, 8) | 0;
    hour = str.slice(8, 10) | 0;
    min = str.slice(10, 12) | 0;
    sec = str.slice(12, 14) | 0;
  } else if (tag === 'utctime') {
    year = str.slice(0, 2) | 0;
    mon = str.slice(2, 4) | 0;
    day = str.slice(4, 6) | 0;
    hour = str.slice(6, 8) | 0;
    min = str.slice(8, 10) | 0;
    sec = str.slice(10, 12) | 0;
    if (year < 70)
      year = 2000 + year;
    else
      year = 1900 + year;
  } else {
    return buffer.error('Decoding ' + tag + ' time is not supported yet');
  }

  return Date.UTC(year, mon - 1, day, hour, min, sec, 0);
};

DERNode.prototype._decodeNull = function decodeNull() {
  return null;
};

DERNode.prototype._decodeBool = function decodeBool(buffer) {
  const res = buffer.readUInt8();
  if (buffer.isError(res))
    return res;
  else
    return res !== 0;
};

DERNode.prototype._decodeInt = function decodeInt(buffer, values) {
  // Bigint, return as it is (assume big endian)
  const raw = buffer.raw();
  let res = new bignum(raw);

  if (values)
    res = values[res.toString(10)] || res;

  return res;
};

DERNode.prototype._use = function use(entity, obj) {
  if (typeof entity === 'function')
    entity = entity(obj);
  return entity._getDecoder('der').tree;
};

// Utility methods

function derDecodeTag(buf, fail) {
  let tag = buf.readUInt8(fail);
  if (buf.isError(tag))
    return tag;

  const cls = der.tagClass[tag >> 6];
  const primitive = (tag & 0x20) === 0;

  // Multi-octet tag - load
  if ((tag & 0x1f) === 0x1f) {
    let oct = tag;
    tag = 0;
    while ((oct & 0x80) === 0x80) {
      oct = buf.readUInt8(fail);
      if (buf.isError(oct))
        return oct;

      tag <<= 7;
      tag |= oct & 0x7f;
    }
  } else {
    tag &= 0x1f;
  }
  const tagStr = der.tag[tag];

  return {
    cls: cls,
    primitive: primitive,
    tag: tag,
    tagStr: tagStr
  };
}

function derDecodeLen(buf, primitive, fail) {
  let len = buf.readUInt8(fail);
  if (buf.isError(len))
    return len;

  // Indefinite form
  if (!primitive && len === 0x80)
    return null;

  // Definite form
  if ((len & 0x80) === 0) {
    // Short form
    return len;
  }

  // Long form
  const num = len & 0x7f;
  if (num > 4)
    return buf.error('length octect is too long');

  len = 0;
  for (let i = 0; i < num; i++) {
    len <<= 8;
    const j = buf.readUInt8(fail);
    if (buf.isError(j))
      return j;
    len |= j;
  }

  return len;
}


/***/ }),

/***/ "./node_modules/asn1.js/lib/asn1/decoders/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/asn1.js/lib/asn1/decoders/index.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


const decoders = exports;

decoders.der = __webpack_require__(/*! ./der */ "./node_modules/asn1.js/lib/asn1/decoders/der.js");
decoders.pem = __webpack_require__(/*! ./pem */ "./node_modules/asn1.js/lib/asn1/decoders/pem.js");


/***/ }),

/***/ "./node_modules/asn1.js/lib/asn1/decoders/pem.js":
/*!*******************************************************!*\
  !*** ./node_modules/asn1.js/lib/asn1/decoders/pem.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


const inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js");
const Buffer = __webpack_require__(/*! safer-buffer */ "./node_modules/safer-buffer/safer.js").Buffer;

const DERDecoder = __webpack_require__(/*! ./der */ "./node_modules/asn1.js/lib/asn1/decoders/der.js");

function PEMDecoder(entity) {
  DERDecoder.call(this, entity);
  this.enc = 'pem';
}
inherits(PEMDecoder, DERDecoder);
module.exports = PEMDecoder;

PEMDecoder.prototype.decode = function decode(data, options) {
  const lines = data.toString().split(/[\r\n]+/g);

  const label = options.label.toUpperCase();

  const re = /^-----(BEGIN|END) ([^-]+)-----$/;
  let start = -1;
  let end = -1;
  for (let i = 0; i < lines.length; i++) {
    const match = lines[i].match(re);
    if (match === null)
      continue;

    if (match[2] !== label)
      continue;

    if (start === -1) {
      if (match[1] !== 'BEGIN')
        break;
      start = i;
    } else {
      if (match[1] !== 'END')
        break;
      end = i;
      break;
    }
  }
  if (start === -1 || end === -1)
    throw new Error('PEM section not found for: ' + label);

  const base64 = lines.slice(start + 1, end).join('');
  // Remove excessive symbols
  base64.replace(/[^a-z0-9+/=]+/gi, '');

  const input = Buffer.from(base64, 'base64');
  return DERDecoder.prototype.decode.call(this, input, options);
};


/***/ }),

/***/ "./node_modules/asn1.js/lib/asn1/encoders/der.js":
/*!*******************************************************!*\
  !*** ./node_modules/asn1.js/lib/asn1/encoders/der.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


const inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js");
const Buffer = __webpack_require__(/*! safer-buffer */ "./node_modules/safer-buffer/safer.js").Buffer;
const Node = __webpack_require__(/*! ../base/node */ "./node_modules/asn1.js/lib/asn1/base/node.js");

// Import DER constants
const der = __webpack_require__(/*! ../constants/der */ "./node_modules/asn1.js/lib/asn1/constants/der.js");

function DEREncoder(entity) {
  this.enc = 'der';
  this.name = entity.name;
  this.entity = entity;

  // Construct base tree
  this.tree = new DERNode();
  this.tree._init(entity.body);
}
module.exports = DEREncoder;

DEREncoder.prototype.encode = function encode(data, reporter) {
  return this.tree._encode(data, reporter).join();
};

// Tree methods

function DERNode(parent) {
  Node.call(this, 'der', parent);
}
inherits(DERNode, Node);

DERNode.prototype._encodeComposite = function encodeComposite(tag,
  primitive,
  cls,
  content) {
  const encodedTag = encodeTag(tag, primitive, cls, this.reporter);

  // Short form
  if (content.length < 0x80) {
    const header = Buffer.alloc(2);
    header[0] = encodedTag;
    header[1] = content.length;
    return this._createEncoderBuffer([ header, content ]);
  }

  // Long form
  // Count octets required to store length
  let lenOctets = 1;
  for (let i = content.length; i >= 0x100; i >>= 8)
    lenOctets++;

  const header = Buffer.alloc(1 + 1 + lenOctets);
  header[0] = encodedTag;
  header[1] = 0x80 | lenOctets;

  for (let i = 1 + lenOctets, j = content.length; j > 0; i--, j >>= 8)
    header[i] = j & 0xff;

  return this._createEncoderBuffer([ header, content ]);
};

DERNode.prototype._encodeStr = function encodeStr(str, tag) {
  if (tag === 'bitstr') {
    return this._createEncoderBuffer([ str.unused | 0, str.data ]);
  } else if (tag === 'bmpstr') {
    const buf = Buffer.alloc(str.length * 2);
    for (let i = 0; i < str.length; i++) {
      buf.writeUInt16BE(str.charCodeAt(i), i * 2);
    }
    return this._createEncoderBuffer(buf);
  } else if (tag === 'numstr') {
    if (!this._isNumstr(str)) {
      return this.reporter.error('Encoding of string type: numstr supports ' +
                                 'only digits and space');
    }
    return this._createEncoderBuffer(str);
  } else if (tag === 'printstr') {
    if (!this._isPrintstr(str)) {
      return this.reporter.error('Encoding of string type: printstr supports ' +
                                 'only latin upper and lower case letters, ' +
                                 'digits, space, apostrophe, left and rigth ' +
                                 'parenthesis, plus sign, comma, hyphen, ' +
                                 'dot, slash, colon, equal sign, ' +
                                 'question mark');
    }
    return this._createEncoderBuffer(str);
  } else if (/str$/.test(tag)) {
    return this._createEncoderBuffer(str);
  } else if (tag === 'objDesc') {
    return this._createEncoderBuffer(str);
  } else {
    return this.reporter.error('Encoding of string type: ' + tag +
                               ' unsupported');
  }
};

DERNode.prototype._encodeObjid = function encodeObjid(id, values, relative) {
  if (typeof id === 'string') {
    if (!values)
      return this.reporter.error('string objid given, but no values map found');
    if (!values.hasOwnProperty(id))
      return this.reporter.error('objid not found in values map');
    id = values[id].split(/[\s.]+/g);
    for (let i = 0; i < id.length; i++)
      id[i] |= 0;
  } else if (Array.isArray(id)) {
    id = id.slice();
    for (let i = 0; i < id.length; i++)
      id[i] |= 0;
  }

  if (!Array.isArray(id)) {
    return this.reporter.error('objid() should be either array or string, ' +
                               'got: ' + JSON.stringify(id));
  }

  if (!relative) {
    if (id[1] >= 40)
      return this.reporter.error('Second objid identifier OOB');
    id.splice(0, 2, id[0] * 40 + id[1]);
  }

  // Count number of octets
  let size = 0;
  for (let i = 0; i < id.length; i++) {
    let ident = id[i];
    for (size++; ident >= 0x80; ident >>= 7)
      size++;
  }

  const objid = Buffer.alloc(size);
  let offset = objid.length - 1;
  for (let i = id.length - 1; i >= 0; i--) {
    let ident = id[i];
    objid[offset--] = ident & 0x7f;
    while ((ident >>= 7) > 0)
      objid[offset--] = 0x80 | (ident & 0x7f);
  }

  return this._createEncoderBuffer(objid);
};

function two(num) {
  if (num < 10)
    return '0' + num;
  else
    return num;
}

DERNode.prototype._encodeTime = function encodeTime(time, tag) {
  let str;
  const date = new Date(time);

  if (tag === 'gentime') {
    str = [
      two(date.getUTCFullYear()),
      two(date.getUTCMonth() + 1),
      two(date.getUTCDate()),
      two(date.getUTCHours()),
      two(date.getUTCMinutes()),
      two(date.getUTCSeconds()),
      'Z'
    ].join('');
  } else if (tag === 'utctime') {
    str = [
      two(date.getUTCFullYear() % 100),
      two(date.getUTCMonth() + 1),
      two(date.getUTCDate()),
      two(date.getUTCHours()),
      two(date.getUTCMinutes()),
      two(date.getUTCSeconds()),
      'Z'
    ].join('');
  } else {
    this.reporter.error('Encoding ' + tag + ' time is not supported yet');
  }

  return this._encodeStr(str, 'octstr');
};

DERNode.prototype._encodeNull = function encodeNull() {
  return this._createEncoderBuffer('');
};

DERNode.prototype._encodeInt = function encodeInt(num, values) {
  if (typeof num === 'string') {
    if (!values)
      return this.reporter.error('String int or enum given, but no values map');
    if (!values.hasOwnProperty(num)) {
      return this.reporter.error('Values map doesn\'t contain: ' +
                                 JSON.stringify(num));
    }
    num = values[num];
  }

  // Bignum, assume big endian
  if (typeof num !== 'number' && !Buffer.isBuffer(num)) {
    const numArray = num.toArray();
    if (!num.sign && numArray[0] & 0x80) {
      numArray.unshift(0);
    }
    num = Buffer.from(numArray);
  }

  if (Buffer.isBuffer(num)) {
    let size = num.length;
    if (num.length === 0)
      size++;

    const out = Buffer.alloc(size);
    num.copy(out);
    if (num.length === 0)
      out[0] = 0;
    return this._createEncoderBuffer(out);
  }

  if (num < 0x80)
    return this._createEncoderBuffer(num);

  if (num < 0x100)
    return this._createEncoderBuffer([0, num]);

  let size = 1;
  for (let i = num; i >= 0x100; i >>= 8)
    size++;

  const out = new Array(size);
  for (let i = out.length - 1; i >= 0; i--) {
    out[i] = num & 0xff;
    num >>= 8;
  }
  if(out[0] & 0x80) {
    out.unshift(0);
  }

  return this._createEncoderBuffer(Buffer.from(out));
};

DERNode.prototype._encodeBool = function encodeBool(value) {
  return this._createEncoderBuffer(value ? 0xff : 0);
};

DERNode.prototype._use = function use(entity, obj) {
  if (typeof entity === 'function')
    entity = entity(obj);
  return entity._getEncoder('der').tree;
};

DERNode.prototype._skipDefault = function skipDefault(dataBuffer, reporter, parent) {
  const state = this._baseState;
  let i;
  if (state['default'] === null)
    return false;

  const data = dataBuffer.join();
  if (state.defaultBuffer === undefined)
    state.defaultBuffer = this._encodeValue(state['default'], reporter, parent).join();

  if (data.length !== state.defaultBuffer.length)
    return false;

  for (i=0; i < data.length; i++)
    if (data[i] !== state.defaultBuffer[i])
      return false;

  return true;
};

// Utility methods

function encodeTag(tag, primitive, cls, reporter) {
  let res;

  if (tag === 'seqof')
    tag = 'seq';
  else if (tag === 'setof')
    tag = 'set';

  if (der.tagByName.hasOwnProperty(tag))
    res = der.tagByName[tag];
  else if (typeof tag === 'number' && (tag | 0) === tag)
    res = tag;
  else
    return reporter.error('Unknown tag: ' + tag);

  if (res >= 0x1f)
    return reporter.error('Multi-octet tag encoding unsupported');

  if (!primitive)
    res |= 0x20;

  res |= (der.tagClassByName[cls || 'universal'] << 6);

  return res;
}


/***/ }),

/***/ "./node_modules/asn1.js/lib/asn1/encoders/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/asn1.js/lib/asn1/encoders/index.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


const encoders = exports;

encoders.der = __webpack_require__(/*! ./der */ "./node_modules/asn1.js/lib/asn1/encoders/der.js");
encoders.pem = __webpack_require__(/*! ./pem */ "./node_modules/asn1.js/lib/asn1/encoders/pem.js");


/***/ }),

/***/ "./node_modules/asn1.js/lib/asn1/encoders/pem.js":
/*!*******************************************************!*\
  !*** ./node_modules/asn1.js/lib/asn1/encoders/pem.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


const inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js");

const DEREncoder = __webpack_require__(/*! ./der */ "./node_modules/asn1.js/lib/asn1/encoders/der.js");

function PEMEncoder(entity) {
  DEREncoder.call(this, entity);
  this.enc = 'pem';
}
inherits(PEMEncoder, DEREncoder);
module.exports = PEMEncoder;

PEMEncoder.prototype.encode = function encode(data, options) {
  const buf = DEREncoder.prototype.encode.call(this, data);

  const p = buf.toString('base64');
  const out = [ '-----BEGIN ' + options.label + '-----' ];
  for (let i = 0; i < p.length; i += 64)
    out.push(p.slice(i, i + 64));
  out.push('-----END ' + options.label + '-----');
  return out.join('\n');
};


/***/ }),

/***/ "./node_modules/base64-js/index.js":
/*!*****************************************!*\
  !*** ./node_modules/base64-js/index.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";


exports.byteLength = byteLength
exports.toByteArray = toByteArray
exports.fromByteArray = fromByteArray

var lookup = []
var revLookup = []
var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array

var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
for (var i = 0, len = code.length; i < len; ++i) {
  lookup[i] = code[i]
  revLookup[code.charCodeAt(i)] = i
}

// Support decoding URL-safe base64 strings, as Node.js does.
// See: https://en.wikipedia.org/wiki/Base64#URL_applications
revLookup['-'.charCodeAt(0)] = 62
revLookup['_'.charCodeAt(0)] = 63

function getLens (b64) {
  var len = b64.length

  if (len % 4 > 0) {
    throw new Error('Invalid string. Length must be a multiple of 4')
  }

  // Trim off extra bytes after placeholder bytes are found
  // See: https://github.com/beatgammit/base64-js/issues/42
  var validLen = b64.indexOf('=')
  if (validLen === -1) validLen = len

  var placeHoldersLen = validLen === len
    ? 0
    : 4 - (validLen % 4)

  return [validLen, placeHoldersLen]
}

// base64 is 4/3 + up to two characters of the original data
function byteLength (b64) {
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function _byteLength (b64, validLen, placeHoldersLen) {
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function toByteArray (b64) {
  var tmp
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]

  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))

  var curByte = 0

  // if there are placeholders, only get up to the last complete 4 chars
  var len = placeHoldersLen > 0
    ? validLen - 4
    : validLen

  var i
  for (i = 0; i < len; i += 4) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 18) |
      (revLookup[b64.charCodeAt(i + 1)] << 12) |
      (revLookup[b64.charCodeAt(i + 2)] << 6) |
      revLookup[b64.charCodeAt(i + 3)]
    arr[curByte++] = (tmp >> 16) & 0xFF
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 2) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 2) |
      (revLookup[b64.charCodeAt(i + 1)] >> 4)
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 1) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 10) |
      (revLookup[b64.charCodeAt(i + 1)] << 4) |
      (revLookup[b64.charCodeAt(i + 2)] >> 2)
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  return arr
}

function tripletToBase64 (num) {
  return lookup[num >> 18 & 0x3F] +
    lookup[num >> 12 & 0x3F] +
    lookup[num >> 6 & 0x3F] +
    lookup[num & 0x3F]
}

function encodeChunk (uint8, start, end) {
  var tmp
  var output = []
  for (var i = start; i < end; i += 3) {
    tmp =
      ((uint8[i] << 16) & 0xFF0000) +
      ((uint8[i + 1] << 8) & 0xFF00) +
      (uint8[i + 2] & 0xFF)
    output.push(tripletToBase64(tmp))
  }
  return output.join('')
}

function fromByteArray (uint8) {
  var tmp
  var len = uint8.length
  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes
  var parts = []
  var maxChunkLength = 16383 // must be multiple of 3

  // go through the array every three bytes, we'll deal with trailing stuff later
  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))
  }

  // pad the end with zeros, but make sure to not forget the extra bytes
  if (extraBytes === 1) {
    tmp = uint8[len - 1]
    parts.push(
      lookup[tmp >> 2] +
      lookup[(tmp << 4) & 0x3F] +
      '=='
    )
  } else if (extraBytes === 2) {
    tmp = (uint8[len - 2] << 8) + uint8[len - 1]
    parts.push(
      lookup[tmp >> 10] +
      lookup[(tmp >> 4) & 0x3F] +
      lookup[(tmp << 2) & 0x3F] +
      '='
    )
  }

  return parts.join('')
}


/***/ }),

/***/ "./node_modules/bn.js/lib/bn.js":
/*!**************************************!*\
  !*** ./node_modules/bn.js/lib/bn.js ***!
  \**************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

/* module decorator */ module = __webpack_require__.nmd(module);
(function (module, exports) {
  'use strict';

  // Utils
  function assert (val, msg) {
    if (!val) throw new Error(msg || 'Assertion failed');
  }

  // Could use `inherits` module, but don't want to move from single file
  // architecture yet.
  function inherits (ctor, superCtor) {
    ctor.super_ = superCtor;
    var TempCtor = function () {};
    TempCtor.prototype = superCtor.prototype;
    ctor.prototype = new TempCtor();
    ctor.prototype.constructor = ctor;
  }

  // BN

  function BN (number, base, endian) {
    if (BN.isBN(number)) {
      return number;
    }

    this.negative = 0;
    this.words = null;
    this.length = 0;

    // Reduction context
    this.red = null;

    if (number !== null) {
      if (base === 'le' || base === 'be') {
        endian = base;
        base = 10;
      }

      this._init(number || 0, base || 10, endian || 'be');
    }
  }
  if (typeof module === 'object') {
    module.exports = BN;
  } else {
    exports.BN = BN;
  }

  BN.BN = BN;
  BN.wordSize = 26;

  var Buffer;
  try {
    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {
      Buffer = window.Buffer;
    } else {
      Buffer = __webpack_require__(/*! buffer */ "?8131").Buffer;
    }
  } catch (e) {
  }

  BN.isBN = function isBN (num) {
    if (num instanceof BN) {
      return true;
    }

    return num !== null && typeof num === 'object' &&
      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);
  };

  BN.max = function max (left, right) {
    if (left.cmp(right) > 0) return left;
    return right;
  };

  BN.min = function min (left, right) {
    if (left.cmp(right) < 0) return left;
    return right;
  };

  BN.prototype._init = function init (number, base, endian) {
    if (typeof number === 'number') {
      return this._initNumber(number, base, endian);
    }

    if (typeof number === 'object') {
      return this._initArray(number, base, endian);
    }

    if (base === 'hex') {
      base = 16;
    }
    assert(base === (base | 0) && base >= 2 && base <= 36);

    number = number.toString().replace(/\s+/g, '');
    var start = 0;
    if (number[0] === '-') {
      start++;
      this.negative = 1;
    }

    if (start < number.length) {
      if (base === 16) {
        this._parseHex(number, start, endian);
      } else {
        this._parseBase(number, base, start);
        if (endian === 'le') {
          this._initArray(this.toArray(), base, endian);
        }
      }
    }
  };

  BN.prototype._initNumber = function _initNumber (number, base, endian) {
    if (number < 0) {
      this.negative = 1;
      number = -number;
    }
    if (number < 0x4000000) {
      this.words = [ number & 0x3ffffff ];
      this.length = 1;
    } else if (number < 0x10000000000000) {
      this.words = [
        number & 0x3ffffff,
        (number / 0x4000000) & 0x3ffffff
      ];
      this.length = 2;
    } else {
      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)
      this.words = [
        number & 0x3ffffff,
        (number / 0x4000000) & 0x3ffffff,
        1
      ];
      this.length = 3;
    }

    if (endian !== 'le') return;

    // Reverse the bytes
    this._initArray(this.toArray(), base, endian);
  };

  BN.prototype._initArray = function _initArray (number, base, endian) {
    // Perhaps a Uint8Array
    assert(typeof number.length === 'number');
    if (number.length <= 0) {
      this.words = [ 0 ];
      this.length = 1;
      return this;
    }

    this.length = Math.ceil(number.length / 3);
    this.words = new Array(this.length);
    for (var i = 0; i < this.length; i++) {
      this.words[i] = 0;
    }

    var j, w;
    var off = 0;
    if (endian === 'be') {
      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {
        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);
        this.words[j] |= (w << off) & 0x3ffffff;
        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;
        off += 24;
        if (off >= 26) {
          off -= 26;
          j++;
        }
      }
    } else if (endian === 'le') {
      for (i = 0, j = 0; i < number.length; i += 3) {
        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);
        this.words[j] |= (w << off) & 0x3ffffff;
        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;
        off += 24;
        if (off >= 26) {
          off -= 26;
          j++;
        }
      }
    }
    return this.strip();
  };

  function parseHex4Bits (string, index) {
    var c = string.charCodeAt(index);
    // 'A' - 'F'
    if (c >= 65 && c <= 70) {
      return c - 55;
    // 'a' - 'f'
    } else if (c >= 97 && c <= 102) {
      return c - 87;
    // '0' - '9'
    } else {
      return (c - 48) & 0xf;
    }
  }

  function parseHexByte (string, lowerBound, index) {
    var r = parseHex4Bits(string, index);
    if (index - 1 >= lowerBound) {
      r |= parseHex4Bits(string, index - 1) << 4;
    }
    return r;
  }

  BN.prototype._parseHex = function _parseHex (number, start, endian) {
    // Create possibly bigger array to ensure that it fits the number
    this.length = Math.ceil((number.length - start) / 6);
    this.words = new Array(this.length);
    for (var i = 0; i < this.length; i++) {
      this.words[i] = 0;
    }

    // 24-bits chunks
    var off = 0;
    var j = 0;

    var w;
    if (endian === 'be') {
      for (i = number.length - 1; i >= start; i -= 2) {
        w = parseHexByte(number, start, i) << off;
        this.words[j] |= w & 0x3ffffff;
        if (off >= 18) {
          off -= 18;
          j += 1;
          this.words[j] |= w >>> 26;
        } else {
          off += 8;
        }
      }
    } else {
      var parseLength = number.length - start;
      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {
        w = parseHexByte(number, start, i) << off;
        this.words[j] |= w & 0x3ffffff;
        if (off >= 18) {
          off -= 18;
          j += 1;
          this.words[j] |= w >>> 26;
        } else {
          off += 8;
        }
      }
    }

    this.strip();
  };

  function parseBase (str, start, end, mul) {
    var r = 0;
    var len = Math.min(str.length, end);
    for (var i = start; i < len; i++) {
      var c = str.charCodeAt(i) - 48;

      r *= mul;

      // 'a'
      if (c >= 49) {
        r += c - 49 + 0xa;

      // 'A'
      } else if (c >= 17) {
        r += c - 17 + 0xa;

      // '0' - '9'
      } else {
        r += c;
      }
    }
    return r;
  }

  BN.prototype._parseBase = function _parseBase (number, base, start) {
    // Initialize as zero
    this.words = [ 0 ];
    this.length = 1;

    // Find length of limb in base
    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {
      limbLen++;
    }
    limbLen--;
    limbPow = (limbPow / base) | 0;

    var total = number.length - start;
    var mod = total % limbLen;
    var end = Math.min(total, total - mod) + start;

    var word = 0;
    for (var i = start; i < end; i += limbLen) {
      word = parseBase(number, i, i + limbLen, base);

      this.imuln(limbPow);
      if (this.words[0] + word < 0x4000000) {
        this.words[0] += word;
      } else {
        this._iaddn(word);
      }
    }

    if (mod !== 0) {
      var pow = 1;
      word = parseBase(number, i, number.length, base);

      for (i = 0; i < mod; i++) {
        pow *= base;
      }

      this.imuln(pow);
      if (this.words[0] + word < 0x4000000) {
        this.words[0] += word;
      } else {
        this._iaddn(word);
      }
    }

    this.strip();
  };

  BN.prototype.copy = function copy (dest) {
    dest.words = new Array(this.length);
    for (var i = 0; i < this.length; i++) {
      dest.words[i] = this.words[i];
    }
    dest.length = this.length;
    dest.negative = this.negative;
    dest.red = this.red;
  };

  BN.prototype.clone = function clone () {
    var r = new BN(null);
    this.copy(r);
    return r;
  };

  BN.prototype._expand = function _expand (size) {
    while (this.length < size) {
      this.words[this.length++] = 0;
    }
    return this;
  };

  // Remove leading `0` from `this`
  BN.prototype.strip = function strip () {
    while (this.length > 1 && this.words[this.length - 1] === 0) {
      this.length--;
    }
    return this._normSign();
  };

  BN.prototype._normSign = function _normSign () {
    // -0 = 0
    if (this.length === 1 && this.words[0] === 0) {
      this.negative = 0;
    }
    return this;
  };

  BN.prototype.inspect = function inspect () {
    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';
  };

  /*

  var zeros = [];
  var groupSizes = [];
  var groupBases = [];

  var s = '';
  var i = -1;
  while (++i < BN.wordSize) {
    zeros[i] = s;
    s += '0';
  }
  groupSizes[0] = 0;
  groupSizes[1] = 0;
  groupBases[0] = 0;
  groupBases[1] = 0;
  var base = 2 - 1;
  while (++base < 36 + 1) {
    var groupSize = 0;
    var groupBase = 1;
    while (groupBase < (1 << BN.wordSize) / base) {
      groupBase *= base;
      groupSize += 1;
    }
    groupSizes[base] = groupSize;
    groupBases[base] = groupBase;
  }

  */

  var zeros = [
    '',
    '0',
    '00',
    '000',
    '0000',
    '00000',
    '000000',
    '0000000',
    '00000000',
    '000000000',
    '0000000000',
    '00000000000',
    '000000000000',
    '0000000000000',
    '00000000000000',
    '000000000000000',
    '0000000000000000',
    '00000000000000000',
    '000000000000000000',
    '0000000000000000000',
    '00000000000000000000',
    '000000000000000000000',
    '0000000000000000000000',
    '00000000000000000000000',
    '000000000000000000000000',
    '0000000000000000000000000'
  ];

  var groupSizes = [
    0, 0,
    25, 16, 12, 11, 10, 9, 8,
    8, 7, 7, 7, 7, 6, 6,
    6, 6, 6, 6, 6, 5, 5,
    5, 5, 5, 5, 5, 5, 5,
    5, 5, 5, 5, 5, 5, 5
  ];

  var groupBases = [
    0, 0,
    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,
    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,
    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,
    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,
    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176
  ];

  BN.prototype.toString = function toString (base, padding) {
    base = base || 10;
    padding = padding | 0 || 1;

    var out;
    if (base === 16 || base === 'hex') {
      out = '';
      var off = 0;
      var carry = 0;
      for (var i = 0; i < this.length; i++) {
        var w = this.words[i];
        var word = (((w << off) | carry) & 0xffffff).toString(16);
        carry = (w >>> (24 - off)) & 0xffffff;
        if (carry !== 0 || i !== this.length - 1) {
          out = zeros[6 - word.length] + word + out;
        } else {
          out = word + out;
        }
        off += 2;
        if (off >= 26) {
          off -= 26;
          i--;
        }
      }
      if (carry !== 0) {
        out = carry.toString(16) + out;
      }
      while (out.length % padding !== 0) {
        out = '0' + out;
      }
      if (this.negative !== 0) {
        out = '-' + out;
      }
      return out;
    }

    if (base === (base | 0) && base >= 2 && base <= 36) {
      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));
      var groupSize = groupSizes[base];
      // var groupBase = Math.pow(base, groupSize);
      var groupBase = groupBases[base];
      out = '';
      var c = this.clone();
      c.negative = 0;
      while (!c.isZero()) {
        var r = c.modn(groupBase).toString(base);
        c = c.idivn(groupBase);

        if (!c.isZero()) {
          out = zeros[groupSize - r.length] + r + out;
        } else {
          out = r + out;
        }
      }
      if (this.isZero()) {
        out = '0' + out;
      }
      while (out.length % padding !== 0) {
        out = '0' + out;
      }
      if (this.negative !== 0) {
        out = '-' + out;
      }
      return out;
    }

    assert(false, 'Base should be between 2 and 36');
  };

  BN.prototype.toNumber = function toNumber () {
    var ret = this.words[0];
    if (this.length === 2) {
      ret += this.words[1] * 0x4000000;
    } else if (this.length === 3 && this.words[2] === 0x01) {
      // NOTE: at this stage it is known that the top bit is set
      ret += 0x10000000000000 + (this.words[1] * 0x4000000);
    } else if (this.length > 2) {
      assert(false, 'Number can only safely store up to 53 bits');
    }
    return (this.negative !== 0) ? -ret : ret;
  };

  BN.prototype.toJSON = function toJSON () {
    return this.toString(16);
  };

  BN.prototype.toBuffer = function toBuffer (endian, length) {
    assert(typeof Buffer !== 'undefined');
    return this.toArrayLike(Buffer, endian, length);
  };

  BN.prototype.toArray = function toArray (endian, length) {
    return this.toArrayLike(Array, endian, length);
  };

  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {
    var byteLength = this.byteLength();
    var reqLength = length || Math.max(1, byteLength);
    assert(byteLength <= reqLength, 'byte array longer than desired length');
    assert(reqLength > 0, 'Requested array length <= 0');

    this.strip();
    var littleEndian = endian === 'le';
    var res = new ArrayType(reqLength);

    var b, i;
    var q = this.clone();
    if (!littleEndian) {
      // Assume big-endian
      for (i = 0; i < reqLength - byteLength; i++) {
        res[i] = 0;
      }

      for (i = 0; !q.isZero(); i++) {
        b = q.andln(0xff);
        q.iushrn(8);

        res[reqLength - i - 1] = b;
      }
    } else {
      for (i = 0; !q.isZero(); i++) {
        b = q.andln(0xff);
        q.iushrn(8);

        res[i] = b;
      }

      for (; i < reqLength; i++) {
        res[i] = 0;
      }
    }

    return res;
  };

  if (Math.clz32) {
    BN.prototype._countBits = function _countBits (w) {
      return 32 - Math.clz32(w);
    };
  } else {
    BN.prototype._countBits = function _countBits (w) {
      var t = w;
      var r = 0;
      if (t >= 0x1000) {
        r += 13;
        t >>>= 13;
      }
      if (t >= 0x40) {
        r += 7;
        t >>>= 7;
      }
      if (t >= 0x8) {
        r += 4;
        t >>>= 4;
      }
      if (t >= 0x02) {
        r += 2;
        t >>>= 2;
      }
      return r + t;
    };
  }

  BN.prototype._zeroBits = function _zeroBits (w) {
    // Short-cut
    if (w === 0) return 26;

    var t = w;
    var r = 0;
    if ((t & 0x1fff) === 0) {
      r += 13;
      t >>>= 13;
    }
    if ((t & 0x7f) === 0) {
      r += 7;
      t >>>= 7;
    }
    if ((t & 0xf) === 0) {
      r += 4;
      t >>>= 4;
    }
    if ((t & 0x3) === 0) {
      r += 2;
      t >>>= 2;
    }
    if ((t & 0x1) === 0) {
      r++;
    }
    return r;
  };

  // Return number of used bits in a BN
  BN.prototype.bitLength = function bitLength () {
    var w = this.words[this.length - 1];
    var hi = this._countBits(w);
    return (this.length - 1) * 26 + hi;
  };

  function toBitArray (num) {
    var w = new Array(num.bitLength());

    for (var bit = 0; bit < w.length; bit++) {
      var off = (bit / 26) | 0;
      var wbit = bit % 26;

      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;
    }

    return w;
  }

  // Number of trailing zero bits
  BN.prototype.zeroBits = function zeroBits () {
    if (this.isZero()) return 0;

    var r = 0;
    for (var i = 0; i < this.length; i++) {
      var b = this._zeroBits(this.words[i]);
      r += b;
      if (b !== 26) break;
    }
    return r;
  };

  BN.prototype.byteLength = function byteLength () {
    return Math.ceil(this.bitLength() / 8);
  };

  BN.prototype.toTwos = function toTwos (width) {
    if (this.negative !== 0) {
      return this.abs().inotn(width).iaddn(1);
    }
    return this.clone();
  };

  BN.prototype.fromTwos = function fromTwos (width) {
    if (this.testn(width - 1)) {
      return this.notn(width).iaddn(1).ineg();
    }
    return this.clone();
  };

  BN.prototype.isNeg = function isNeg () {
    return this.negative !== 0;
  };

  // Return negative clone of `this`
  BN.prototype.neg = function neg () {
    return this.clone().ineg();
  };

  BN.prototype.ineg = function ineg () {
    if (!this.isZero()) {
      this.negative ^= 1;
    }

    return this;
  };

  // Or `num` with `this` in-place
  BN.prototype.iuor = function iuor (num) {
    while (this.length < num.length) {
      this.words[this.length++] = 0;
    }

    for (var i = 0; i < num.length; i++) {
      this.words[i] = this.words[i] | num.words[i];
    }

    return this.strip();
  };

  BN.prototype.ior = function ior (num) {
    assert((this.negative | num.negative) === 0);
    return this.iuor(num);
  };

  // Or `num` with `this`
  BN.prototype.or = function or (num) {
    if (this.length > num.length) return this.clone().ior(num);
    return num.clone().ior(this);
  };

  BN.prototype.uor = function uor (num) {
    if (this.length > num.length) return this.clone().iuor(num);
    return num.clone().iuor(this);
  };

  // And `num` with `this` in-place
  BN.prototype.iuand = function iuand (num) {
    // b = min-length(num, this)
    var b;
    if (this.length > num.length) {
      b = num;
    } else {
      b = this;
    }

    for (var i = 0; i < b.length; i++) {
      this.words[i] = this.words[i] & num.words[i];
    }

    this.length = b.length;

    return this.strip();
  };

  BN.prototype.iand = function iand (num) {
    assert((this.negative | num.negative) === 0);
    return this.iuand(num);
  };

  // And `num` with `this`
  BN.prototype.and = function and (num) {
    if (this.length > num.length) return this.clone().iand(num);
    return num.clone().iand(this);
  };

  BN.prototype.uand = function uand (num) {
    if (this.length > num.length) return this.clone().iuand(num);
    return num.clone().iuand(this);
  };

  // Xor `num` with `this` in-place
  BN.prototype.iuxor = function iuxor (num) {
    // a.length > b.length
    var a;
    var b;
    if (this.length > num.length) {
      a = this;
      b = num;
    } else {
      a = num;
      b = this;
    }

    for (var i = 0; i < b.length; i++) {
      this.words[i] = a.words[i] ^ b.words[i];
    }

    if (this !== a) {
      for (; i < a.length; i++) {
        this.words[i] = a.words[i];
      }
    }

    this.length = a.length;

    return this.strip();
  };

  BN.prototype.ixor = function ixor (num) {
    assert((this.negative | num.negative) === 0);
    return this.iuxor(num);
  };

  // Xor `num` with `this`
  BN.prototype.xor = function xor (num) {
    if (this.length > num.length) return this.clone().ixor(num);
    return num.clone().ixor(this);
  };

  BN.prototype.uxor = function uxor (num) {
    if (this.length > num.length) return this.clone().iuxor(num);
    return num.clone().iuxor(this);
  };

  // Not ``this`` with ``width`` bitwidth
  BN.prototype.inotn = function inotn (width) {
    assert(typeof width === 'number' && width >= 0);

    var bytesNeeded = Math.ceil(width / 26) | 0;
    var bitsLeft = width % 26;

    // Extend the buffer with leading zeroes
    this._expand(bytesNeeded);

    if (bitsLeft > 0) {
      bytesNeeded--;
    }

    // Handle complete words
    for (var i = 0; i < bytesNeeded; i++) {
      this.words[i] = ~this.words[i] & 0x3ffffff;
    }

    // Handle the residue
    if (bitsLeft > 0) {
      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));
    }

    // And remove leading zeroes
    return this.strip();
  };

  BN.prototype.notn = function notn (width) {
    return this.clone().inotn(width);
  };

  // Set `bit` of `this`
  BN.prototype.setn = function setn (bit, val) {
    assert(typeof bit === 'number' && bit >= 0);

    var off = (bit / 26) | 0;
    var wbit = bit % 26;

    this._expand(off + 1);

    if (val) {
      this.words[off] = this.words[off] | (1 << wbit);
    } else {
      this.words[off] = this.words[off] & ~(1 << wbit);
    }

    return this.strip();
  };

  // Add `num` to `this` in-place
  BN.prototype.iadd = function iadd (num) {
    var r;

    // negative + positive
    if (this.negative !== 0 && num.negative === 0) {
      this.negative = 0;
      r = this.isub(num);
      this.negative ^= 1;
      return this._normSign();

    // positive + negative
    } else if (this.negative === 0 && num.negative !== 0) {
      num.negative = 0;
      r = this.isub(num);
      num.negative = 1;
      return r._normSign();
    }

    // a.length > b.length
    var a, b;
    if (this.length > num.length) {
      a = this;
      b = num;
    } else {
      a = num;
      b = this;
    }

    var carry = 0;
    for (var i = 0; i < b.length; i++) {
      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;
      this.words[i] = r & 0x3ffffff;
      carry = r >>> 26;
    }
    for (; carry !== 0 && i < a.length; i++) {
      r = (a.words[i] | 0) + carry;
      this.words[i] = r & 0x3ffffff;
      carry = r >>> 26;
    }

    this.length = a.length;
    if (carry !== 0) {
      this.words[this.length] = carry;
      this.length++;
    // Copy the rest of the words
    } else if (a !== this) {
      for (; i < a.length; i++) {
        this.words[i] = a.words[i];
      }
    }

    return this;
  };

  // Add `num` to `this`
  BN.prototype.add = function add (num) {
    var res;
    if (num.negative !== 0 && this.negative === 0) {
      num.negative = 0;
      res = this.sub(num);
      num.negative ^= 1;
      return res;
    } else if (num.negative === 0 && this.negative !== 0) {
      this.negative = 0;
      res = num.sub(this);
      this.negative = 1;
      return res;
    }

    if (this.length > num.length) return this.clone().iadd(num);

    return num.clone().iadd(this);
  };

  // Subtract `num` from `this` in-place
  BN.prototype.isub = function isub (num) {
    // this - (-num) = this + num
    if (num.negative !== 0) {
      num.negative = 0;
      var r = this.iadd(num);
      num.negative = 1;
      return r._normSign();

    // -this - num = -(this + num)
    } else if (this.negative !== 0) {
      this.negative = 0;
      this.iadd(num);
      this.negative = 1;
      return this._normSign();
    }

    // At this point both numbers are positive
    var cmp = this.cmp(num);

    // Optimization - zeroify
    if (cmp === 0) {
      this.negative = 0;
      this.length = 1;
      this.words[0] = 0;
      return this;
    }

    // a > b
    var a, b;
    if (cmp > 0) {
      a = this;
      b = num;
    } else {
      a = num;
      b = this;
    }

    var carry = 0;
    for (var i = 0; i < b.length; i++) {
      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;
      carry = r >> 26;
      this.words[i] = r & 0x3ffffff;
    }
    for (; carry !== 0 && i < a.length; i++) {
      r = (a.words[i] | 0) + carry;
      carry = r >> 26;
      this.words[i] = r & 0x3ffffff;
    }

    // Copy rest of the words
    if (carry === 0 && i < a.length && a !== this) {
      for (; i < a.length; i++) {
        this.words[i] = a.words[i];
      }
    }

    this.length = Math.max(this.length, i);

    if (a !== this) {
      this.negative = 1;
    }

    return this.strip();
  };

  // Subtract `num` from `this`
  BN.prototype.sub = function sub (num) {
    return this.clone().isub(num);
  };

  function smallMulTo (self, num, out) {
    out.negative = num.negative ^ self.negative;
    var len = (self.length + num.length) | 0;
    out.length = len;
    len = (len - 1) | 0;

    // Peel one iteration (compiler can't do it, because of code complexity)
    var a = self.words[0] | 0;
    var b = num.words[0] | 0;
    var r = a * b;

    var lo = r & 0x3ffffff;
    var carry = (r / 0x4000000) | 0;
    out.words[0] = lo;

    for (var k = 1; k < len; k++) {
      // Sum all words with the same `i + j = k` and accumulate `ncarry`,
      // note that ncarry could be >= 0x3ffffff
      var ncarry = carry >>> 26;
      var rword = carry & 0x3ffffff;
      var maxJ = Math.min(k, num.length - 1);
      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
        var i = (k - j) | 0;
        a = self.words[i] | 0;
        b = num.words[j] | 0;
        r = a * b + rword;
        ncarry += (r / 0x4000000) | 0;
        rword = r & 0x3ffffff;
      }
      out.words[k] = rword | 0;
      carry = ncarry | 0;
    }
    if (carry !== 0) {
      out.words[k] = carry | 0;
    } else {
      out.length--;
    }

    return out.strip();
  }

  // TODO(indutny): it may be reasonable to omit it for users who don't need
  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit
  // multiplication (like elliptic secp256k1).
  var comb10MulTo = function comb10MulTo (self, num, out) {
    var a = self.words;
    var b = num.words;
    var o = out.words;
    var c = 0;
    var lo;
    var mid;
    var hi;
    var a0 = a[0] | 0;
    var al0 = a0 & 0x1fff;
    var ah0 = a0 >>> 13;
    var a1 = a[1] | 0;
    var al1 = a1 & 0x1fff;
    var ah1 = a1 >>> 13;
    var a2 = a[2] | 0;
    var al2 = a2 & 0x1fff;
    var ah2 = a2 >>> 13;
    var a3 = a[3] | 0;
    var al3 = a3 & 0x1fff;
    var ah3 = a3 >>> 13;
    var a4 = a[4] | 0;
    var al4 = a4 & 0x1fff;
    var ah4 = a4 >>> 13;
    var a5 = a[5] | 0;
    var al5 = a5 & 0x1fff;
    var ah5 = a5 >>> 13;
    var a6 = a[6] | 0;
    var al6 = a6 & 0x1fff;
    var ah6 = a6 >>> 13;
    var a7 = a[7] | 0;
    var al7 = a7 & 0x1fff;
    var ah7 = a7 >>> 13;
    var a8 = a[8] | 0;
    var al8 = a8 & 0x1fff;
    var ah8 = a8 >>> 13;
    var a9 = a[9] | 0;
    var al9 = a9 & 0x1fff;
    var ah9 = a9 >>> 13;
    var b0 = b[0] | 0;
    var bl0 = b0 & 0x1fff;
    var bh0 = b0 >>> 13;
    var b1 = b[1] | 0;
    var bl1 = b1 & 0x1fff;
    var bh1 = b1 >>> 13;
    var b2 = b[2] | 0;
    var bl2 = b2 & 0x1fff;
    var bh2 = b2 >>> 13;
    var b3 = b[3] | 0;
    var bl3 = b3 & 0x1fff;
    var bh3 = b3 >>> 13;
    var b4 = b[4] | 0;
    var bl4 = b4 & 0x1fff;
    var bh4 = b4 >>> 13;
    var b5 = b[5] | 0;
    var bl5 = b5 & 0x1fff;
    var bh5 = b5 >>> 13;
    var b6 = b[6] | 0;
    var bl6 = b6 & 0x1fff;
    var bh6 = b6 >>> 13;
    var b7 = b[7] | 0;
    var bl7 = b7 & 0x1fff;
    var bh7 = b7 >>> 13;
    var b8 = b[8] | 0;
    var bl8 = b8 & 0x1fff;
    var bh8 = b8 >>> 13;
    var b9 = b[9] | 0;
    var bl9 = b9 & 0x1fff;
    var bh9 = b9 >>> 13;

    out.negative = self.negative ^ num.negative;
    out.length = 19;
    /* k = 0 */
    lo = Math.imul(al0, bl0);
    mid = Math.imul(al0, bh0);
    mid = (mid + Math.imul(ah0, bl0)) | 0;
    hi = Math.imul(ah0, bh0);
    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;
    w0 &= 0x3ffffff;
    /* k = 1 */
    lo = Math.imul(al1, bl0);
    mid = Math.imul(al1, bh0);
    mid = (mid + Math.imul(ah1, bl0)) | 0;
    hi = Math.imul(ah1, bh0);
    lo = (lo + Math.imul(al0, bl1)) | 0;
    mid = (mid + Math.imul(al0, bh1)) | 0;
    mid = (mid + Math.imul(ah0, bl1)) | 0;
    hi = (hi + Math.imul(ah0, bh1)) | 0;
    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;
    w1 &= 0x3ffffff;
    /* k = 2 */
    lo = Math.imul(al2, bl0);
    mid = Math.imul(al2, bh0);
    mid = (mid + Math.imul(ah2, bl0)) | 0;
    hi = Math.imul(ah2, bh0);
    lo = (lo + Math.imul(al1, bl1)) | 0;
    mid = (mid + Math.imul(al1, bh1)) | 0;
    mid = (mid + Math.imul(ah1, bl1)) | 0;
    hi = (hi + Math.imul(ah1, bh1)) | 0;
    lo = (lo + Math.imul(al0, bl2)) | 0;
    mid = (mid + Math.imul(al0, bh2)) | 0;
    mid = (mid + Math.imul(ah0, bl2)) | 0;
    hi = (hi + Math.imul(ah0, bh2)) | 0;
    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;
    w2 &= 0x3ffffff;
    /* k = 3 */
    lo = Math.imul(al3, bl0);
    mid = Math.imul(al3, bh0);
    mid = (mid + Math.imul(ah3, bl0)) | 0;
    hi = Math.imul(ah3, bh0);
    lo = (lo + Math.imul(al2, bl1)) | 0;
    mid = (mid + Math.imul(al2, bh1)) | 0;
    mid = (mid + Math.imul(ah2, bl1)) | 0;
    hi = (hi + Math.imul(ah2, bh1)) | 0;
    lo = (lo + Math.imul(al1, bl2)) | 0;
    mid = (mid + Math.imul(al1, bh2)) | 0;
    mid = (mid + Math.imul(ah1, bl2)) | 0;
    hi = (hi + Math.imul(ah1, bh2)) | 0;
    lo = (lo + Math.imul(al0, bl3)) | 0;
    mid = (mid + Math.imul(al0, bh3)) | 0;
    mid = (mid + Math.imul(ah0, bl3)) | 0;
    hi = (hi + Math.imul(ah0, bh3)) | 0;
    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;
    w3 &= 0x3ffffff;
    /* k = 4 */
    lo = Math.imul(al4, bl0);
    mid = Math.imul(al4, bh0);
    mid = (mid + Math.imul(ah4, bl0)) | 0;
    hi = Math.imul(ah4, bh0);
    lo = (lo + Math.imul(al3, bl1)) | 0;
    mid = (mid + Math.imul(al3, bh1)) | 0;
    mid = (mid + Math.imul(ah3, bl1)) | 0;
    hi = (hi + Math.imul(ah3, bh1)) | 0;
    lo = (lo + Math.imul(al2, bl2)) | 0;
    mid = (mid + Math.imul(al2, bh2)) | 0;
    mid = (mid + Math.imul(ah2, bl2)) | 0;
    hi = (hi + Math.imul(ah2, bh2)) | 0;
    lo = (lo + Math.imul(al1, bl3)) | 0;
    mid = (mid + Math.imul(al1, bh3)) | 0;
    mid = (mid + Math.imul(ah1, bl3)) | 0;
    hi = (hi + Math.imul(ah1, bh3)) | 0;
    lo = (lo + Math.imul(al0, bl4)) | 0;
    mid = (mid + Math.imul(al0, bh4)) | 0;
    mid = (mid + Math.imul(ah0, bl4)) | 0;
    hi = (hi + Math.imul(ah0, bh4)) | 0;
    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;
    w4 &= 0x3ffffff;
    /* k = 5 */
    lo = Math.imul(al5, bl0);
    mid = Math.imul(al5, bh0);
    mid = (mid + Math.imul(ah5, bl0)) | 0;
    hi = Math.imul(ah5, bh0);
    lo = (lo + Math.imul(al4, bl1)) | 0;
    mid = (mid + Math.imul(al4, bh1)) | 0;
    mid = (mid + Math.imul(ah4, bl1)) | 0;
    hi = (hi + Math.imul(ah4, bh1)) | 0;
    lo = (lo + Math.imul(al3, bl2)) | 0;
    mid = (mid + Math.imul(al3, bh2)) | 0;
    mid = (mid + Math.imul(ah3, bl2)) | 0;
    hi = (hi + Math.imul(ah3, bh2)) | 0;
    lo = (lo + Math.imul(al2, bl3)) | 0;
    mid = (mid + Math.imul(al2, bh3)) | 0;
    mid = (mid + Math.imul(ah2, bl3)) | 0;
    hi = (hi + Math.imul(ah2, bh3)) | 0;
    lo = (lo + Math.imul(al1, bl4)) | 0;
    mid = (mid + Math.imul(al1, bh4)) | 0;
    mid = (mid + Math.imul(ah1, bl4)) | 0;
    hi = (hi + Math.imul(ah1, bh4)) | 0;
    lo = (lo + Math.imul(al0, bl5)) | 0;
    mid = (mid + Math.imul(al0, bh5)) | 0;
    mid = (mid + Math.imul(ah0, bl5)) | 0;
    hi = (hi + Math.imul(ah0, bh5)) | 0;
    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;
    w5 &= 0x3ffffff;
    /* k = 6 */
    lo = Math.imul(al6, bl0);
    mid = Math.imul(al6, bh0);
    mid = (mid + Math.imul(ah6, bl0)) | 0;
    hi = Math.imul(ah6, bh0);
    lo = (lo + Math.imul(al5, bl1)) | 0;
    mid = (mid + Math.imul(al5, bh1)) | 0;
    mid = (mid + Math.imul(ah5, bl1)) | 0;
    hi = (hi + Math.imul(ah5, bh1)) | 0;
    lo = (lo + Math.imul(al4, bl2)) | 0;
    mid = (mid + Math.imul(al4, bh2)) | 0;
    mid = (mid + Math.imul(ah4, bl2)) | 0;
    hi = (hi + Math.imul(ah4, bh2)) | 0;
    lo = (lo + Math.imul(al3, bl3)) | 0;
    mid = (mid + Math.imul(al3, bh3)) | 0;
    mid = (mid + Math.imul(ah3, bl3)) | 0;
    hi = (hi + Math.imul(ah3, bh3)) | 0;
    lo = (lo + Math.imul(al2, bl4)) | 0;
    mid = (mid + Math.imul(al2, bh4)) | 0;
    mid = (mid + Math.imul(ah2, bl4)) | 0;
    hi = (hi + Math.imul(ah2, bh4)) | 0;
    lo = (lo + Math.imul(al1, bl5)) | 0;
    mid = (mid + Math.imul(al1, bh5)) | 0;
    mid = (mid + Math.imul(ah1, bl5)) | 0;
    hi = (hi + Math.imul(ah1, bh5)) | 0;
    lo = (lo + Math.imul(al0, bl6)) | 0;
    mid = (mid + Math.imul(al0, bh6)) | 0;
    mid = (mid + Math.imul(ah0, bl6)) | 0;
    hi = (hi + Math.imul(ah0, bh6)) | 0;
    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;
    w6 &= 0x3ffffff;
    /* k = 7 */
    lo = Math.imul(al7, bl0);
    mid = Math.imul(al7, bh0);
    mid = (mid + Math.imul(ah7, bl0)) | 0;
    hi = Math.imul(ah7, bh0);
    lo = (lo + Math.imul(al6, bl1)) | 0;
    mid = (mid + Math.imul(al6, bh1)) | 0;
    mid = (mid + Math.imul(ah6, bl1)) | 0;
    hi = (hi + Math.imul(ah6, bh1)) | 0;
    lo = (lo + Math.imul(al5, bl2)) | 0;
    mid = (mid + Math.imul(al5, bh2)) | 0;
    mid = (mid + Math.imul(ah5, bl2)) | 0;
    hi = (hi + Math.imul(ah5, bh2)) | 0;
    lo = (lo + Math.imul(al4, bl3)) | 0;
    mid = (mid + Math.imul(al4, bh3)) | 0;
    mid = (mid + Math.imul(ah4, bl3)) | 0;
    hi = (hi + Math.imul(ah4, bh3)) | 0;
    lo = (lo + Math.imul(al3, bl4)) | 0;
    mid = (mid + Math.imul(al3, bh4)) | 0;
    mid = (mid + Math.imul(ah3, bl4)) | 0;
    hi = (hi + Math.imul(ah3, bh4)) | 0;
    lo = (lo + Math.imul(al2, bl5)) | 0;
    mid = (mid + Math.imul(al2, bh5)) | 0;
    mid = (mid + Math.imul(ah2, bl5)) | 0;
    hi = (hi + Math.imul(ah2, bh5)) | 0;
    lo = (lo + Math.imul(al1, bl6)) | 0;
    mid = (mid + Math.imul(al1, bh6)) | 0;
    mid = (mid + Math.imul(ah1, bl6)) | 0;
    hi = (hi + Math.imul(ah1, bh6)) | 0;
    lo = (lo + Math.imul(al0, bl7)) | 0;
    mid = (mid + Math.imul(al0, bh7)) | 0;
    mid = (mid + Math.imul(ah0, bl7)) | 0;
    hi = (hi + Math.imul(ah0, bh7)) | 0;
    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;
    w7 &= 0x3ffffff;
    /* k = 8 */
    lo = Math.imul(al8, bl0);
    mid = Math.imul(al8, bh0);
    mid = (mid + Math.imul(ah8, bl0)) | 0;
    hi = Math.imul(ah8, bh0);
    lo = (lo + Math.imul(al7, bl1)) | 0;
    mid = (mid + Math.imul(al7, bh1)) | 0;
    mid = (mid + Math.imul(ah7, bl1)) | 0;
    hi = (hi + Math.imul(ah7, bh1)) | 0;
    lo = (lo + Math.imul(al6, bl2)) | 0;
    mid = (mid + Math.imul(al6, bh2)) | 0;
    mid = (mid + Math.imul(ah6, bl2)) | 0;
    hi = (hi + Math.imul(ah6, bh2)) | 0;
    lo = (lo + Math.imul(al5, bl3)) | 0;
    mid = (mid + Math.imul(al5, bh3)) | 0;
    mid = (mid + Math.imul(ah5, bl3)) | 0;
    hi = (hi + Math.imul(ah5, bh3)) | 0;
    lo = (lo + Math.imul(al4, bl4)) | 0;
    mid = (mid + Math.imul(al4, bh4)) | 0;
    mid = (mid + Math.imul(ah4, bl4)) | 0;
    hi = (hi + Math.imul(ah4, bh4)) | 0;
    lo = (lo + Math.imul(al3, bl5)) | 0;
    mid = (mid + Math.imul(al3, bh5)) | 0;
    mid = (mid + Math.imul(ah3, bl5)) | 0;
    hi = (hi + Math.imul(ah3, bh5)) | 0;
    lo = (lo + Math.imul(al2, bl6)) | 0;
    mid = (mid + Math.imul(al2, bh6)) | 0;
    mid = (mid + Math.imul(ah2, bl6)) | 0;
    hi = (hi + Math.imul(ah2, bh6)) | 0;
    lo = (lo + Math.imul(al1, bl7)) | 0;
    mid = (mid + Math.imul(al1, bh7)) | 0;
    mid = (mid + Math.imul(ah1, bl7)) | 0;
    hi = (hi + Math.imul(ah1, bh7)) | 0;
    lo = (lo + Math.imul(al0, bl8)) | 0;
    mid = (mid + Math.imul(al0, bh8)) | 0;
    mid = (mid + Math.imul(ah0, bl8)) | 0;
    hi = (hi + Math.imul(ah0, bh8)) | 0;
    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;
    w8 &= 0x3ffffff;
    /* k = 9 */
    lo = Math.imul(al9, bl0);
    mid = Math.imul(al9, bh0);
    mid = (mid + Math.imul(ah9, bl0)) | 0;
    hi = Math.imul(ah9, bh0);
    lo = (lo + Math.imul(al8, bl1)) | 0;
    mid = (mid + Math.imul(al8, bh1)) | 0;
    mid = (mid + Math.imul(ah8, bl1)) | 0;
    hi = (hi + Math.imul(ah8, bh1)) | 0;
    lo = (lo + Math.imul(al7, bl2)) | 0;
    mid = (mid + Math.imul(al7, bh2)) | 0;
    mid = (mid + Math.imul(ah7, bl2)) | 0;
    hi = (hi + Math.imul(ah7, bh2)) | 0;
    lo = (lo + Math.imul(al6, bl3)) | 0;
    mid = (mid + Math.imul(al6, bh3)) | 0;
    mid = (mid + Math.imul(ah6, bl3)) | 0;
    hi = (hi + Math.imul(ah6, bh3)) | 0;
    lo = (lo + Math.imul(al5, bl4)) | 0;
    mid = (mid + Math.imul(al5, bh4)) | 0;
    mid = (mid + Math.imul(ah5, bl4)) | 0;
    hi = (hi + Math.imul(ah5, bh4)) | 0;
    lo = (lo + Math.imul(al4, bl5)) | 0;
    mid = (mid + Math.imul(al4, bh5)) | 0;
    mid = (mid + Math.imul(ah4, bl5)) | 0;
    hi = (hi + Math.imul(ah4, bh5)) | 0;
    lo = (lo + Math.imul(al3, bl6)) | 0;
    mid = (mid + Math.imul(al3, bh6)) | 0;
    mid = (mid + Math.imul(ah3, bl6)) | 0;
    hi = (hi + Math.imul(ah3, bh6)) | 0;
    lo = (lo + Math.imul(al2, bl7)) | 0;
    mid = (mid + Math.imul(al2, bh7)) | 0;
    mid = (mid + Math.imul(ah2, bl7)) | 0;
    hi = (hi + Math.imul(ah2, bh7)) | 0;
    lo = (lo + Math.imul(al1, bl8)) | 0;
    mid = (mid + Math.imul(al1, bh8)) | 0;
    mid = (mid + Math.imul(ah1, bl8)) | 0;
    hi = (hi + Math.imul(ah1, bh8)) | 0;
    lo = (lo + Math.imul(al0, bl9)) | 0;
    mid = (mid + Math.imul(al0, bh9)) | 0;
    mid = (mid + Math.imul(ah0, bl9)) | 0;
    hi = (hi + Math.imul(ah0, bh9)) | 0;
    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;
    w9 &= 0x3ffffff;
    /* k = 10 */
    lo = Math.imul(al9, bl1);
    mid = Math.imul(al9, bh1);
    mid = (mid + Math.imul(ah9, bl1)) | 0;
    hi = Math.imul(ah9, bh1);
    lo = (lo + Math.imul(al8, bl2)) | 0;
    mid = (mid + Math.imul(al8, bh2)) | 0;
    mid = (mid + Math.imul(ah8, bl2)) | 0;
    hi = (hi + Math.imul(ah8, bh2)) | 0;
    lo = (lo + Math.imul(al7, bl3)) | 0;
    mid = (mid + Math.imul(al7, bh3)) | 0;
    mid = (mid + Math.imul(ah7, bl3)) | 0;
    hi = (hi + Math.imul(ah7, bh3)) | 0;
    lo = (lo + Math.imul(al6, bl4)) | 0;
    mid = (mid + Math.imul(al6, bh4)) | 0;
    mid = (mid + Math.imul(ah6, bl4)) | 0;
    hi = (hi + Math.imul(ah6, bh4)) | 0;
    lo = (lo + Math.imul(al5, bl5)) | 0;
    mid = (mid + Math.imul(al5, bh5)) | 0;
    mid = (mid + Math.imul(ah5, bl5)) | 0;
    hi = (hi + Math.imul(ah5, bh5)) | 0;
    lo = (lo + Math.imul(al4, bl6)) | 0;
    mid = (mid + Math.imul(al4, bh6)) | 0;
    mid = (mid + Math.imul(ah4, bl6)) | 0;
    hi = (hi + Math.imul(ah4, bh6)) | 0;
    lo = (lo + Math.imul(al3, bl7)) | 0;
    mid = (mid + Math.imul(al3, bh7)) | 0;
    mid = (mid + Math.imul(ah3, bl7)) | 0;
    hi = (hi + Math.imul(ah3, bh7)) | 0;
    lo = (lo + Math.imul(al2, bl8)) | 0;
    mid = (mid + Math.imul(al2, bh8)) | 0;
    mid = (mid + Math.imul(ah2, bl8)) | 0;
    hi = (hi + Math.imul(ah2, bh8)) | 0;
    lo = (lo + Math.imul(al1, bl9)) | 0;
    mid = (mid + Math.imul(al1, bh9)) | 0;
    mid = (mid + Math.imul(ah1, bl9)) | 0;
    hi = (hi + Math.imul(ah1, bh9)) | 0;
    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;
    w10 &= 0x3ffffff;
    /* k = 11 */
    lo = Math.imul(al9, bl2);
    mid = Math.imul(al9, bh2);
    mid = (mid + Math.imul(ah9, bl2)) | 0;
    hi = Math.imul(ah9, bh2);
    lo = (lo + Math.imul(al8, bl3)) | 0;
    mid = (mid + Math.imul(al8, bh3)) | 0;
    mid = (mid + Math.imul(ah8, bl3)) | 0;
    hi = (hi + Math.imul(ah8, bh3)) | 0;
    lo = (lo + Math.imul(al7, bl4)) | 0;
    mid = (mid + Math.imul(al7, bh4)) | 0;
    mid = (mid + Math.imul(ah7, bl4)) | 0;
    hi = (hi + Math.imul(ah7, bh4)) | 0;
    lo = (lo + Math.imul(al6, bl5)) | 0;
    mid = (mid + Math.imul(al6, bh5)) | 0;
    mid = (mid + Math.imul(ah6, bl5)) | 0;
    hi = (hi + Math.imul(ah6, bh5)) | 0;
    lo = (lo + Math.imul(al5, bl6)) | 0;
    mid = (mid + Math.imul(al5, bh6)) | 0;
    mid = (mid + Math.imul(ah5, bl6)) | 0;
    hi = (hi + Math.imul(ah5, bh6)) | 0;
    lo = (lo + Math.imul(al4, bl7)) | 0;
    mid = (mid + Math.imul(al4, bh7)) | 0;
    mid = (mid + Math.imul(ah4, bl7)) | 0;
    hi = (hi + Math.imul(ah4, bh7)) | 0;
    lo = (lo + Math.imul(al3, bl8)) | 0;
    mid = (mid + Math.imul(al3, bh8)) | 0;
    mid = (mid + Math.imul(ah3, bl8)) | 0;
    hi = (hi + Math.imul(ah3, bh8)) | 0;
    lo = (lo + Math.imul(al2, bl9)) | 0;
    mid = (mid + Math.imul(al2, bh9)) | 0;
    mid = (mid + Math.imul(ah2, bl9)) | 0;
    hi = (hi + Math.imul(ah2, bh9)) | 0;
    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;
    w11 &= 0x3ffffff;
    /* k = 12 */
    lo = Math.imul(al9, bl3);
    mid = Math.imul(al9, bh3);
    mid = (mid + Math.imul(ah9, bl3)) | 0;
    hi = Math.imul(ah9, bh3);
    lo = (lo + Math.imul(al8, bl4)) | 0;
    mid = (mid + Math.imul(al8, bh4)) | 0;
    mid = (mid + Math.imul(ah8, bl4)) | 0;
    hi = (hi + Math.imul(ah8, bh4)) | 0;
    lo = (lo + Math.imul(al7, bl5)) | 0;
    mid = (mid + Math.imul(al7, bh5)) | 0;
    mid = (mid + Math.imul(ah7, bl5)) | 0;
    hi = (hi + Math.imul(ah7, bh5)) | 0;
    lo = (lo + Math.imul(al6, bl6)) | 0;
    mid = (mid + Math.imul(al6, bh6)) | 0;
    mid = (mid + Math.imul(ah6, bl6)) | 0;
    hi = (hi + Math.imul(ah6, bh6)) | 0;
    lo = (lo + Math.imul(al5, bl7)) | 0;
    mid = (mid + Math.imul(al5, bh7)) | 0;
    mid = (mid + Math.imul(ah5, bl7)) | 0;
    hi = (hi + Math.imul(ah5, bh7)) | 0;
    lo = (lo + Math.imul(al4, bl8)) | 0;
    mid = (mid + Math.imul(al4, bh8)) | 0;
    mid = (mid + Math.imul(ah4, bl8)) | 0;
    hi = (hi + Math.imul(ah4, bh8)) | 0;
    lo = (lo + Math.imul(al3, bl9)) | 0;
    mid = (mid + Math.imul(al3, bh9)) | 0;
    mid = (mid + Math.imul(ah3, bl9)) | 0;
    hi = (hi + Math.imul(ah3, bh9)) | 0;
    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;
    w12 &= 0x3ffffff;
    /* k = 13 */
    lo = Math.imul(al9, bl4);
    mid = Math.imul(al9, bh4);
    mid = (mid + Math.imul(ah9, bl4)) | 0;
    hi = Math.imul(ah9, bh4);
    lo = (lo + Math.imul(al8, bl5)) | 0;
    mid = (mid + Math.imul(al8, bh5)) | 0;
    mid = (mid + Math.imul(ah8, bl5)) | 0;
    hi = (hi + Math.imul(ah8, bh5)) | 0;
    lo = (lo + Math.imul(al7, bl6)) | 0;
    mid = (mid + Math.imul(al7, bh6)) | 0;
    mid = (mid + Math.imul(ah7, bl6)) | 0;
    hi = (hi + Math.imul(ah7, bh6)) | 0;
    lo = (lo + Math.imul(al6, bl7)) | 0;
    mid = (mid + Math.imul(al6, bh7)) | 0;
    mid = (mid + Math.imul(ah6, bl7)) | 0;
    hi = (hi + Math.imul(ah6, bh7)) | 0;
    lo = (lo + Math.imul(al5, bl8)) | 0;
    mid = (mid + Math.imul(al5, bh8)) | 0;
    mid = (mid + Math.imul(ah5, bl8)) | 0;
    hi = (hi + Math.imul(ah5, bh8)) | 0;
    lo = (lo + Math.imul(al4, bl9)) | 0;
    mid = (mid + Math.imul(al4, bh9)) | 0;
    mid = (mid + Math.imul(ah4, bl9)) | 0;
    hi = (hi + Math.imul(ah4, bh9)) | 0;
    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;
    w13 &= 0x3ffffff;
    /* k = 14 */
    lo = Math.imul(al9, bl5);
    mid = Math.imul(al9, bh5);
    mid = (mid + Math.imul(ah9, bl5)) | 0;
    hi = Math.imul(ah9, bh5);
    lo = (lo + Math.imul(al8, bl6)) | 0;
    mid = (mid + Math.imul(al8, bh6)) | 0;
    mid = (mid + Math.imul(ah8, bl6)) | 0;
    hi = (hi + Math.imul(ah8, bh6)) | 0;
    lo = (lo + Math.imul(al7, bl7)) | 0;
    mid = (mid + Math.imul(al7, bh7)) | 0;
    mid = (mid + Math.imul(ah7, bl7)) | 0;
    hi = (hi + Math.imul(ah7, bh7)) | 0;
    lo = (lo + Math.imul(al6, bl8)) | 0;
    mid = (mid + Math.imul(al6, bh8)) | 0;
    mid = (mid + Math.imul(ah6, bl8)) | 0;
    hi = (hi + Math.imul(ah6, bh8)) | 0;
    lo = (lo + Math.imul(al5, bl9)) | 0;
    mid = (mid + Math.imul(al5, bh9)) | 0;
    mid = (mid + Math.imul(ah5, bl9)) | 0;
    hi = (hi + Math.imul(ah5, bh9)) | 0;
    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;
    w14 &= 0x3ffffff;
    /* k = 15 */
    lo = Math.imul(al9, bl6);
    mid = Math.imul(al9, bh6);
    mid = (mid + Math.imul(ah9, bl6)) | 0;
    hi = Math.imul(ah9, bh6);
    lo = (lo + Math.imul(al8, bl7)) | 0;
    mid = (mid + Math.imul(al8, bh7)) | 0;
    mid = (mid + Math.imul(ah8, bl7)) | 0;
    hi = (hi + Math.imul(ah8, bh7)) | 0;
    lo = (lo + Math.imul(al7, bl8)) | 0;
    mid = (mid + Math.imul(al7, bh8)) | 0;
    mid = (mid + Math.imul(ah7, bl8)) | 0;
    hi = (hi + Math.imul(ah7, bh8)) | 0;
    lo = (lo + Math.imul(al6, bl9)) | 0;
    mid = (mid + Math.imul(al6, bh9)) | 0;
    mid = (mid + Math.imul(ah6, bl9)) | 0;
    hi = (hi + Math.imul(ah6, bh9)) | 0;
    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;
    w15 &= 0x3ffffff;
    /* k = 16 */
    lo = Math.imul(al9, bl7);
    mid = Math.imul(al9, bh7);
    mid = (mid + Math.imul(ah9, bl7)) | 0;
    hi = Math.imul(ah9, bh7);
    lo = (lo + Math.imul(al8, bl8)) | 0;
    mid = (mid + Math.imul(al8, bh8)) | 0;
    mid = (mid + Math.imul(ah8, bl8)) | 0;
    hi = (hi + Math.imul(ah8, bh8)) | 0;
    lo = (lo + Math.imul(al7, bl9)) | 0;
    mid = (mid + Math.imul(al7, bh9)) | 0;
    mid = (mid + Math.imul(ah7, bl9)) | 0;
    hi = (hi + Math.imul(ah7, bh9)) | 0;
    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;
    w16 &= 0x3ffffff;
    /* k = 17 */
    lo = Math.imul(al9, bl8);
    mid = Math.imul(al9, bh8);
    mid = (mid + Math.imul(ah9, bl8)) | 0;
    hi = Math.imul(ah9, bh8);
    lo = (lo + Math.imul(al8, bl9)) | 0;
    mid = (mid + Math.imul(al8, bh9)) | 0;
    mid = (mid + Math.imul(ah8, bl9)) | 0;
    hi = (hi + Math.imul(ah8, bh9)) | 0;
    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;
    w17 &= 0x3ffffff;
    /* k = 18 */
    lo = Math.imul(al9, bl9);
    mid = Math.imul(al9, bh9);
    mid = (mid + Math.imul(ah9, bl9)) | 0;
    hi = Math.imul(ah9, bh9);
    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;
    w18 &= 0x3ffffff;
    o[0] = w0;
    o[1] = w1;
    o[2] = w2;
    o[3] = w3;
    o[4] = w4;
    o[5] = w5;
    o[6] = w6;
    o[7] = w7;
    o[8] = w8;
    o[9] = w9;
    o[10] = w10;
    o[11] = w11;
    o[12] = w12;
    o[13] = w13;
    o[14] = w14;
    o[15] = w15;
    o[16] = w16;
    o[17] = w17;
    o[18] = w18;
    if (c !== 0) {
      o[19] = c;
      out.length++;
    }
    return out;
  };

  // Polyfill comb
  if (!Math.imul) {
    comb10MulTo = smallMulTo;
  }

  function bigMulTo (self, num, out) {
    out.negative = num.negative ^ self.negative;
    out.length = self.length + num.length;

    var carry = 0;
    var hncarry = 0;
    for (var k = 0; k < out.length - 1; k++) {
      // Sum all words with the same `i + j = k` and accumulate `ncarry`,
      // note that ncarry could be >= 0x3ffffff
      var ncarry = hncarry;
      hncarry = 0;
      var rword = carry & 0x3ffffff;
      var maxJ = Math.min(k, num.length - 1);
      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
        var i = k - j;
        var a = self.words[i] | 0;
        var b = num.words[j] | 0;
        var r = a * b;

        var lo = r & 0x3ffffff;
        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;
        lo = (lo + rword) | 0;
        rword = lo & 0x3ffffff;
        ncarry = (ncarry + (lo >>> 26)) | 0;

        hncarry += ncarry >>> 26;
        ncarry &= 0x3ffffff;
      }
      out.words[k] = rword;
      carry = ncarry;
      ncarry = hncarry;
    }
    if (carry !== 0) {
      out.words[k] = carry;
    } else {
      out.length--;
    }

    return out.strip();
  }

  function jumboMulTo (self, num, out) {
    var fftm = new FFTM();
    return fftm.mulp(self, num, out);
  }

  BN.prototype.mulTo = function mulTo (num, out) {
    var res;
    var len = this.length + num.length;
    if (this.length === 10 && num.length === 10) {
      res = comb10MulTo(this, num, out);
    } else if (len < 63) {
      res = smallMulTo(this, num, out);
    } else if (len < 1024) {
      res = bigMulTo(this, num, out);
    } else {
      res = jumboMulTo(this, num, out);
    }

    return res;
  };

  // Cooley-Tukey algorithm for FFT
  // slightly revisited to rely on looping instead of recursion

  function FFTM (x, y) {
    this.x = x;
    this.y = y;
  }

  FFTM.prototype.makeRBT = function makeRBT (N) {
    var t = new Array(N);
    var l = BN.prototype._countBits(N) - 1;
    for (var i = 0; i < N; i++) {
      t[i] = this.revBin(i, l, N);
    }

    return t;
  };

  // Returns binary-reversed representation of `x`
  FFTM.prototype.revBin = function revBin (x, l, N) {
    if (x === 0 || x === N - 1) return x;

    var rb = 0;
    for (var i = 0; i < l; i++) {
      rb |= (x & 1) << (l - i - 1);
      x >>= 1;
    }

    return rb;
  };

  // Performs "tweedling" phase, therefore 'emulating'
  // behaviour of the recursive algorithm
  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {
    for (var i = 0; i < N; i++) {
      rtws[i] = rws[rbt[i]];
      itws[i] = iws[rbt[i]];
    }
  };

  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {
    this.permute(rbt, rws, iws, rtws, itws, N);

    for (var s = 1; s < N; s <<= 1) {
      var l = s << 1;

      var rtwdf = Math.cos(2 * Math.PI / l);
      var itwdf = Math.sin(2 * Math.PI / l);

      for (var p = 0; p < N; p += l) {
        var rtwdf_ = rtwdf;
        var itwdf_ = itwdf;

        for (var j = 0; j < s; j++) {
          var re = rtws[p + j];
          var ie = itws[p + j];

          var ro = rtws[p + j + s];
          var io = itws[p + j + s];

          var rx = rtwdf_ * ro - itwdf_ * io;

          io = rtwdf_ * io + itwdf_ * ro;
          ro = rx;

          rtws[p + j] = re + ro;
          itws[p + j] = ie + io;

          rtws[p + j + s] = re - ro;
          itws[p + j + s] = ie - io;

          /* jshint maxdepth : false */
          if (j !== l) {
            rx = rtwdf * rtwdf_ - itwdf * itwdf_;

            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;
            rtwdf_ = rx;
          }
        }
      }
    }
  };

  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {
    var N = Math.max(m, n) | 1;
    var odd = N & 1;
    var i = 0;
    for (N = N / 2 | 0; N; N = N >>> 1) {
      i++;
    }

    return 1 << i + 1 + odd;
  };

  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {
    if (N <= 1) return;

    for (var i = 0; i < N / 2; i++) {
      var t = rws[i];

      rws[i] = rws[N - i - 1];
      rws[N - i - 1] = t;

      t = iws[i];

      iws[i] = -iws[N - i - 1];
      iws[N - i - 1] = -t;
    }
  };

  FFTM.prototype.normalize13b = function normalize13b (ws, N) {
    var carry = 0;
    for (var i = 0; i < N / 2; i++) {
      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +
        Math.round(ws[2 * i] / N) +
        carry;

      ws[i] = w & 0x3ffffff;

      if (w < 0x4000000) {
        carry = 0;
      } else {
        carry = w / 0x4000000 | 0;
      }
    }

    return ws;
  };

  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {
    var carry = 0;
    for (var i = 0; i < len; i++) {
      carry = carry + (ws[i] | 0);

      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;
      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;
    }

    // Pad with zeroes
    for (i = 2 * len; i < N; ++i) {
      rws[i] = 0;
    }

    assert(carry === 0);
    assert((carry & ~0x1fff) === 0);
  };

  FFTM.prototype.stub = function stub (N) {
    var ph = new Array(N);
    for (var i = 0; i < N; i++) {
      ph[i] = 0;
    }

    return ph;
  };

  FFTM.prototype.mulp = function mulp (x, y, out) {
    var N = 2 * this.guessLen13b(x.length, y.length);

    var rbt = this.makeRBT(N);

    var _ = this.stub(N);

    var rws = new Array(N);
    var rwst = new Array(N);
    var iwst = new Array(N);

    var nrws = new Array(N);
    var nrwst = new Array(N);
    var niwst = new Array(N);

    var rmws = out.words;
    rmws.length = N;

    this.convert13b(x.words, x.length, rws, N);
    this.convert13b(y.words, y.length, nrws, N);

    this.transform(rws, _, rwst, iwst, N, rbt);
    this.transform(nrws, _, nrwst, niwst, N, rbt);

    for (var i = 0; i < N; i++) {
      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];
      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];
      rwst[i] = rx;
    }

    this.conjugate(rwst, iwst, N);
    this.transform(rwst, iwst, rmws, _, N, rbt);
    this.conjugate(rmws, _, N);
    this.normalize13b(rmws, N);

    out.negative = x.negative ^ y.negative;
    out.length = x.length + y.length;
    return out.strip();
  };

  // Multiply `this` by `num`
  BN.prototype.mul = function mul (num) {
    var out = new BN(null);
    out.words = new Array(this.length + num.length);
    return this.mulTo(num, out);
  };

  // Multiply employing FFT
  BN.prototype.mulf = function mulf (num) {
    var out = new BN(null);
    out.words = new Array(this.length + num.length);
    return jumboMulTo(this, num, out);
  };

  // In-place Multiplication
  BN.prototype.imul = function imul (num) {
    return this.clone().mulTo(num, this);
  };

  BN.prototype.imuln = function imuln (num) {
    assert(typeof num === 'number');
    assert(num < 0x4000000);

    // Carry
    var carry = 0;
    for (var i = 0; i < this.length; i++) {
      var w = (this.words[i] | 0) * num;
      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);
      carry >>= 26;
      carry += (w / 0x4000000) | 0;
      // NOTE: lo is 27bit maximum
      carry += lo >>> 26;
      this.words[i] = lo & 0x3ffffff;
    }

    if (carry !== 0) {
      this.words[i] = carry;
      this.length++;
    }

    return this;
  };

  BN.prototype.muln = function muln (num) {
    return this.clone().imuln(num);
  };

  // `this` * `this`
  BN.prototype.sqr = function sqr () {
    return this.mul(this);
  };

  // `this` * `this` in-place
  BN.prototype.isqr = function isqr () {
    return this.imul(this.clone());
  };

  // Math.pow(`this`, `num`)
  BN.prototype.pow = function pow (num) {
    var w = toBitArray(num);
    if (w.length === 0) return new BN(1);

    // Skip leading zeroes
    var res = this;
    for (var i = 0; i < w.length; i++, res = res.sqr()) {
      if (w[i] !== 0) break;
    }

    if (++i < w.length) {
      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {
        if (w[i] === 0) continue;

        res = res.mul(q);
      }
    }

    return res;
  };

  // Shift-left in-place
  BN.prototype.iushln = function iushln (bits) {
    assert(typeof bits === 'number' && bits >= 0);
    var r = bits % 26;
    var s = (bits - r) / 26;
    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);
    var i;

    if (r !== 0) {
      var carry = 0;

      for (i = 0; i < this.length; i++) {
        var newCarry = this.words[i] & carryMask;
        var c = ((this.words[i] | 0) - newCarry) << r;
        this.words[i] = c | carry;
        carry = newCarry >>> (26 - r);
      }

      if (carry) {
        this.words[i] = carry;
        this.length++;
      }
    }

    if (s !== 0) {
      for (i = this.length - 1; i >= 0; i--) {
        this.words[i + s] = this.words[i];
      }

      for (i = 0; i < s; i++) {
        this.words[i] = 0;
      }

      this.length += s;
    }

    return this.strip();
  };

  BN.prototype.ishln = function ishln (bits) {
    // TODO(indutny): implement me
    assert(this.negative === 0);
    return this.iushln(bits);
  };

  // Shift-right in-place
  // NOTE: `hint` is a lowest bit before trailing zeroes
  // NOTE: if `extended` is present - it will be filled with destroyed bits
  BN.prototype.iushrn = function iushrn (bits, hint, extended) {
    assert(typeof bits === 'number' && bits >= 0);
    var h;
    if (hint) {
      h = (hint - (hint % 26)) / 26;
    } else {
      h = 0;
    }

    var r = bits % 26;
    var s = Math.min((bits - r) / 26, this.length);
    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);
    var maskedWords = extended;

    h -= s;
    h = Math.max(0, h);

    // Extended mode, copy masked part
    if (maskedWords) {
      for (var i = 0; i < s; i++) {
        maskedWords.words[i] = this.words[i];
      }
      maskedWords.length = s;
    }

    if (s === 0) {
      // No-op, we should not move anything at all
    } else if (this.length > s) {
      this.length -= s;
      for (i = 0; i < this.length; i++) {
        this.words[i] = this.words[i + s];
      }
    } else {
      this.words[0] = 0;
      this.length = 1;
    }

    var carry = 0;
    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {
      var word = this.words[i] | 0;
      this.words[i] = (carry << (26 - r)) | (word >>> r);
      carry = word & mask;
    }

    // Push carried bits as a mask
    if (maskedWords && carry !== 0) {
      maskedWords.words[maskedWords.length++] = carry;
    }

    if (this.length === 0) {
      this.words[0] = 0;
      this.length = 1;
    }

    return this.strip();
  };

  BN.prototype.ishrn = function ishrn (bits, hint, extended) {
    // TODO(indutny): implement me
    assert(this.negative === 0);
    return this.iushrn(bits, hint, extended);
  };

  // Shift-left
  BN.prototype.shln = function shln (bits) {
    return this.clone().ishln(bits);
  };

  BN.prototype.ushln = function ushln (bits) {
    return this.clone().iushln(bits);
  };

  // Shift-right
  BN.prototype.shrn = function shrn (bits) {
    return this.clone().ishrn(bits);
  };

  BN.prototype.ushrn = function ushrn (bits) {
    return this.clone().iushrn(bits);
  };

  // Test if n bit is set
  BN.prototype.testn = function testn (bit) {
    assert(typeof bit === 'number' && bit >= 0);
    var r = bit % 26;
    var s = (bit - r) / 26;
    var q = 1 << r;

    // Fast case: bit is much higher than all existing words
    if (this.length <= s) return false;

    // Check bit and return
    var w = this.words[s];

    return !!(w & q);
  };

  // Return only lowers bits of number (in-place)
  BN.prototype.imaskn = function imaskn (bits) {
    assert(typeof bits === 'number' && bits >= 0);
    var r = bits % 26;
    var s = (bits - r) / 26;

    assert(this.negative === 0, 'imaskn works only with positive numbers');

    if (this.length <= s) {
      return this;
    }

    if (r !== 0) {
      s++;
    }
    this.length = Math.min(s, this.length);

    if (r !== 0) {
      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);
      this.words[this.length - 1] &= mask;
    }

    return this.strip();
  };

  // Return only lowers bits of number
  BN.prototype.maskn = function maskn (bits) {
    return this.clone().imaskn(bits);
  };

  // Add plain number `num` to `this`
  BN.prototype.iaddn = function iaddn (num) {
    assert(typeof num === 'number');
    assert(num < 0x4000000);
    if (num < 0) return this.isubn(-num);

    // Possible sign change
    if (this.negative !== 0) {
      if (this.length === 1 && (this.words[0] | 0) < num) {
        this.words[0] = num - (this.words[0] | 0);
        this.negative = 0;
        return this;
      }

      this.negative = 0;
      this.isubn(num);
      this.negative = 1;
      return this;
    }

    // Add without checks
    return this._iaddn(num);
  };

  BN.prototype._iaddn = function _iaddn (num) {
    this.words[0] += num;

    // Carry
    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {
      this.words[i] -= 0x4000000;
      if (i === this.length - 1) {
        this.words[i + 1] = 1;
      } else {
        this.words[i + 1]++;
      }
    }
    this.length = Math.max(this.length, i + 1);

    return this;
  };

  // Subtract plain number `num` from `this`
  BN.prototype.isubn = function isubn (num) {
    assert(typeof num === 'number');
    assert(num < 0x4000000);
    if (num < 0) return this.iaddn(-num);

    if (this.negative !== 0) {
      this.negative = 0;
      this.iaddn(num);
      this.negative = 1;
      return this;
    }

    this.words[0] -= num;

    if (this.length === 1 && this.words[0] < 0) {
      this.words[0] = -this.words[0];
      this.negative = 1;
    } else {
      // Carry
      for (var i = 0; i < this.length && this.words[i] < 0; i++) {
        this.words[i] += 0x4000000;
        this.words[i + 1] -= 1;
      }
    }

    return this.strip();
  };

  BN.prototype.addn = function addn (num) {
    return this.clone().iaddn(num);
  };

  BN.prototype.subn = function subn (num) {
    return this.clone().isubn(num);
  };

  BN.prototype.iabs = function iabs () {
    this.negative = 0;

    return this;
  };

  BN.prototype.abs = function abs () {
    return this.clone().iabs();
  };

  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {
    var len = num.length + shift;
    var i;

    this._expand(len);

    var w;
    var carry = 0;
    for (i = 0; i < num.length; i++) {
      w = (this.words[i + shift] | 0) + carry;
      var right = (num.words[i] | 0) * mul;
      w -= right & 0x3ffffff;
      carry = (w >> 26) - ((right / 0x4000000) | 0);
      this.words[i + shift] = w & 0x3ffffff;
    }
    for (; i < this.length - shift; i++) {
      w = (this.words[i + shift] | 0) + carry;
      carry = w >> 26;
      this.words[i + shift] = w & 0x3ffffff;
    }

    if (carry === 0) return this.strip();

    // Subtraction overflow
    assert(carry === -1);
    carry = 0;
    for (i = 0; i < this.length; i++) {
      w = -(this.words[i] | 0) + carry;
      carry = w >> 26;
      this.words[i] = w & 0x3ffffff;
    }
    this.negative = 1;

    return this.strip();
  };

  BN.prototype._wordDiv = function _wordDiv (num, mode) {
    var shift = this.length - num.length;

    var a = this.clone();
    var b = num;

    // Normalize
    var bhi = b.words[b.length - 1] | 0;
    var bhiBits = this._countBits(bhi);
    shift = 26 - bhiBits;
    if (shift !== 0) {
      b = b.ushln(shift);
      a.iushln(shift);
      bhi = b.words[b.length - 1] | 0;
    }

    // Initialize quotient
    var m = a.length - b.length;
    var q;

    if (mode !== 'mod') {
      q = new BN(null);
      q.length = m + 1;
      q.words = new Array(q.length);
      for (var i = 0; i < q.length; i++) {
        q.words[i] = 0;
      }
    }

    var diff = a.clone()._ishlnsubmul(b, 1, m);
    if (diff.negative === 0) {
      a = diff;
      if (q) {
        q.words[m] = 1;
      }
    }

    for (var j = m - 1; j >= 0; j--) {
      var qj = (a.words[b.length + j] | 0) * 0x4000000 +
        (a.words[b.length + j - 1] | 0);

      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max
      // (0x7ffffff)
      qj = Math.min((qj / bhi) | 0, 0x3ffffff);

      a._ishlnsubmul(b, qj, j);
      while (a.negative !== 0) {
        qj--;
        a.negative = 0;
        a._ishlnsubmul(b, 1, j);
        if (!a.isZero()) {
          a.negative ^= 1;
        }
      }
      if (q) {
        q.words[j] = qj;
      }
    }
    if (q) {
      q.strip();
    }
    a.strip();

    // Denormalize
    if (mode !== 'div' && shift !== 0) {
      a.iushrn(shift);
    }

    return {
      div: q || null,
      mod: a
    };
  };

  // NOTE: 1) `mode` can be set to `mod` to request mod only,
  //       to `div` to request div only, or be absent to
  //       request both div & mod
  //       2) `positive` is true if unsigned mod is requested
  BN.prototype.divmod = function divmod (num, mode, positive) {
    assert(!num.isZero());

    if (this.isZero()) {
      return {
        div: new BN(0),
        mod: new BN(0)
      };
    }

    var div, mod, res;
    if (this.negative !== 0 && num.negative === 0) {
      res = this.neg().divmod(num, mode);

      if (mode !== 'mod') {
        div = res.div.neg();
      }

      if (mode !== 'div') {
        mod = res.mod.neg();
        if (positive && mod.negative !== 0) {
          mod.iadd(num);
        }
      }

      return {
        div: div,
        mod: mod
      };
    }

    if (this.negative === 0 && num.negative !== 0) {
      res = this.divmod(num.neg(), mode);

      if (mode !== 'mod') {
        div = res.div.neg();
      }

      return {
        div: div,
        mod: res.mod
      };
    }

    if ((this.negative & num.negative) !== 0) {
      res = this.neg().divmod(num.neg(), mode);

      if (mode !== 'div') {
        mod = res.mod.neg();
        if (positive && mod.negative !== 0) {
          mod.isub(num);
        }
      }

      return {
        div: res.div,
        mod: mod
      };
    }

    // Both numbers are positive at this point

    // Strip both numbers to approximate shift value
    if (num.length > this.length || this.cmp(num) < 0) {
      return {
        div: new BN(0),
        mod: this
      };
    }

    // Very short reduction
    if (num.length === 1) {
      if (mode === 'div') {
        return {
          div: this.divn(num.words[0]),
          mod: null
        };
      }

      if (mode === 'mod') {
        return {
          div: null,
          mod: new BN(this.modn(num.words[0]))
        };
      }

      return {
        div: this.divn(num.words[0]),
        mod: new BN(this.modn(num.words[0]))
      };
    }

    return this._wordDiv(num, mode);
  };

  // Find `this` / `num`
  BN.prototype.div = function div (num) {
    return this.divmod(num, 'div', false).div;
  };

  // Find `this` % `num`
  BN.prototype.mod = function mod (num) {
    return this.divmod(num, 'mod', false).mod;
  };

  BN.prototype.umod = function umod (num) {
    return this.divmod(num, 'mod', true).mod;
  };

  // Find Round(`this` / `num`)
  BN.prototype.divRound = function divRound (num) {
    var dm = this.divmod(num);

    // Fast case - exact division
    if (dm.mod.isZero()) return dm.div;

    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;

    var half = num.ushrn(1);
    var r2 = num.andln(1);
    var cmp = mod.cmp(half);

    // Round down
    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;

    // Round up
    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);
  };

  BN.prototype.modn = function modn (num) {
    assert(num <= 0x3ffffff);
    var p = (1 << 26) % num;

    var acc = 0;
    for (var i = this.length - 1; i >= 0; i--) {
      acc = (p * acc + (this.words[i] | 0)) % num;
    }

    return acc;
  };

  // In-place division by number
  BN.prototype.idivn = function idivn (num) {
    assert(num <= 0x3ffffff);

    var carry = 0;
    for (var i = this.length - 1; i >= 0; i--) {
      var w = (this.words[i] | 0) + carry * 0x4000000;
      this.words[i] = (w / num) | 0;
      carry = w % num;
    }

    return this.strip();
  };

  BN.prototype.divn = function divn (num) {
    return this.clone().idivn(num);
  };

  BN.prototype.egcd = function egcd (p) {
    assert(p.negative === 0);
    assert(!p.isZero());

    var x = this;
    var y = p.clone();

    if (x.negative !== 0) {
      x = x.umod(p);
    } else {
      x = x.clone();
    }

    // A * x + B * y = x
    var A = new BN(1);
    var B = new BN(0);

    // C * x + D * y = y
    var C = new BN(0);
    var D = new BN(1);

    var g = 0;

    while (x.isEven() && y.isEven()) {
      x.iushrn(1);
      y.iushrn(1);
      ++g;
    }

    var yp = y.clone();
    var xp = x.clone();

    while (!x.isZero()) {
      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);
      if (i > 0) {
        x.iushrn(i);
        while (i-- > 0) {
          if (A.isOdd() || B.isOdd()) {
            A.iadd(yp);
            B.isub(xp);
          }

          A.iushrn(1);
          B.iushrn(1);
        }
      }

      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);
      if (j > 0) {
        y.iushrn(j);
        while (j-- > 0) {
          if (C.isOdd() || D.isOdd()) {
            C.iadd(yp);
            D.isub(xp);
          }

          C.iushrn(1);
          D.iushrn(1);
        }
      }

      if (x.cmp(y) >= 0) {
        x.isub(y);
        A.isub(C);
        B.isub(D);
      } else {
        y.isub(x);
        C.isub(A);
        D.isub(B);
      }
    }

    return {
      a: C,
      b: D,
      gcd: y.iushln(g)
    };
  };

  // This is reduced incarnation of the binary EEA
  // above, designated to invert members of the
  // _prime_ fields F(p) at a maximal speed
  BN.prototype._invmp = function _invmp (p) {
    assert(p.negative === 0);
    assert(!p.isZero());

    var a = this;
    var b = p.clone();

    if (a.negative !== 0) {
      a = a.umod(p);
    } else {
      a = a.clone();
    }

    var x1 = new BN(1);
    var x2 = new BN(0);

    var delta = b.clone();

    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {
      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);
      if (i > 0) {
        a.iushrn(i);
        while (i-- > 0) {
          if (x1.isOdd()) {
            x1.iadd(delta);
          }

          x1.iushrn(1);
        }
      }

      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);
      if (j > 0) {
        b.iushrn(j);
        while (j-- > 0) {
          if (x2.isOdd()) {
            x2.iadd(delta);
          }

          x2.iushrn(1);
        }
      }

      if (a.cmp(b) >= 0) {
        a.isub(b);
        x1.isub(x2);
      } else {
        b.isub(a);
        x2.isub(x1);
      }
    }

    var res;
    if (a.cmpn(1) === 0) {
      res = x1;
    } else {
      res = x2;
    }

    if (res.cmpn(0) < 0) {
      res.iadd(p);
    }

    return res;
  };

  BN.prototype.gcd = function gcd (num) {
    if (this.isZero()) return num.abs();
    if (num.isZero()) return this.abs();

    var a = this.clone();
    var b = num.clone();
    a.negative = 0;
    b.negative = 0;

    // Remove common factor of two
    for (var shift = 0; a.isEven() && b.isEven(); shift++) {
      a.iushrn(1);
      b.iushrn(1);
    }

    do {
      while (a.isEven()) {
        a.iushrn(1);
      }
      while (b.isEven()) {
        b.iushrn(1);
      }

      var r = a.cmp(b);
      if (r < 0) {
        // Swap `a` and `b` to make `a` always bigger than `b`
        var t = a;
        a = b;
        b = t;
      } else if (r === 0 || b.cmpn(1) === 0) {
        break;
      }

      a.isub(b);
    } while (true);

    return b.iushln(shift);
  };

  // Invert number in the field F(num)
  BN.prototype.invm = function invm (num) {
    return this.egcd(num).a.umod(num);
  };

  BN.prototype.isEven = function isEven () {
    return (this.words[0] & 1) === 0;
  };

  BN.prototype.isOdd = function isOdd () {
    return (this.words[0] & 1) === 1;
  };

  // And first word and num
  BN.prototype.andln = function andln (num) {
    return this.words[0] & num;
  };

  // Increment at the bit position in-line
  BN.prototype.bincn = function bincn (bit) {
    assert(typeof bit === 'number');
    var r = bit % 26;
    var s = (bit - r) / 26;
    var q = 1 << r;

    // Fast case: bit is much higher than all existing words
    if (this.length <= s) {
      this._expand(s + 1);
      this.words[s] |= q;
      return this;
    }

    // Add bit and propagate, if needed
    var carry = q;
    for (var i = s; carry !== 0 && i < this.length; i++) {
      var w = this.words[i] | 0;
      w += carry;
      carry = w >>> 26;
      w &= 0x3ffffff;
      this.words[i] = w;
    }
    if (carry !== 0) {
      this.words[i] = carry;
      this.length++;
    }
    return this;
  };

  BN.prototype.isZero = function isZero () {
    return this.length === 1 && this.words[0] === 0;
  };

  BN.prototype.cmpn = function cmpn (num) {
    var negative = num < 0;

    if (this.negative !== 0 && !negative) return -1;
    if (this.negative === 0 && negative) return 1;

    this.strip();

    var res;
    if (this.length > 1) {
      res = 1;
    } else {
      if (negative) {
        num = -num;
      }

      assert(num <= 0x3ffffff, 'Number is too big');

      var w = this.words[0] | 0;
      res = w === num ? 0 : w < num ? -1 : 1;
    }
    if (this.negative !== 0) return -res | 0;
    return res;
  };

  // Compare two numbers and return:
  // 1 - if `this` > `num`
  // 0 - if `this` == `num`
  // -1 - if `this` < `num`
  BN.prototype.cmp = function cmp (num) {
    if (this.negative !== 0 && num.negative === 0) return -1;
    if (this.negative === 0 && num.negative !== 0) return 1;

    var res = this.ucmp(num);
    if (this.negative !== 0) return -res | 0;
    return res;
  };

  // Unsigned comparison
  BN.prototype.ucmp = function ucmp (num) {
    // At this point both numbers have the same sign
    if (this.length > num.length) return 1;
    if (this.length < num.length) return -1;

    var res = 0;
    for (var i = this.length - 1; i >= 0; i--) {
      var a = this.words[i] | 0;
      var b = num.words[i] | 0;

      if (a === b) continue;
      if (a < b) {
        res = -1;
      } else if (a > b) {
        res = 1;
      }
      break;
    }
    return res;
  };

  BN.prototype.gtn = function gtn (num) {
    return this.cmpn(num) === 1;
  };

  BN.prototype.gt = function gt (num) {
    return this.cmp(num) === 1;
  };

  BN.prototype.gten = function gten (num) {
    return this.cmpn(num) >= 0;
  };

  BN.prototype.gte = function gte (num) {
    return this.cmp(num) >= 0;
  };

  BN.prototype.ltn = function ltn (num) {
    return this.cmpn(num) === -1;
  };

  BN.prototype.lt = function lt (num) {
    return this.cmp(num) === -1;
  };

  BN.prototype.lten = function lten (num) {
    return this.cmpn(num) <= 0;
  };

  BN.prototype.lte = function lte (num) {
    return this.cmp(num) <= 0;
  };

  BN.prototype.eqn = function eqn (num) {
    return this.cmpn(num) === 0;
  };

  BN.prototype.eq = function eq (num) {
    return this.cmp(num) === 0;
  };

  //
  // A reduce context, could be using montgomery or something better, depending
  // on the `m` itself.
  //
  BN.red = function red (num) {
    return new Red(num);
  };

  BN.prototype.toRed = function toRed (ctx) {
    assert(!this.red, 'Already a number in reduction context');
    assert(this.negative === 0, 'red works only with positives');
    return ctx.convertTo(this)._forceRed(ctx);
  };

  BN.prototype.fromRed = function fromRed () {
    assert(this.red, 'fromRed works only with numbers in reduction context');
    return this.red.convertFrom(this);
  };

  BN.prototype._forceRed = function _forceRed (ctx) {
    this.red = ctx;
    return this;
  };

  BN.prototype.forceRed = function forceRed (ctx) {
    assert(!this.red, 'Already a number in reduction context');
    return this._forceRed(ctx);
  };

  BN.prototype.redAdd = function redAdd (num) {
    assert(this.red, 'redAdd works only with red numbers');
    return this.red.add(this, num);
  };

  BN.prototype.redIAdd = function redIAdd (num) {
    assert(this.red, 'redIAdd works only with red numbers');
    return this.red.iadd(this, num);
  };

  BN.prototype.redSub = function redSub (num) {
    assert(this.red, 'redSub works only with red numbers');
    return this.red.sub(this, num);
  };

  BN.prototype.redISub = function redISub (num) {
    assert(this.red, 'redISub works only with red numbers');
    return this.red.isub(this, num);
  };

  BN.prototype.redShl = function redShl (num) {
    assert(this.red, 'redShl works only with red numbers');
    return this.red.shl(this, num);
  };

  BN.prototype.redMul = function redMul (num) {
    assert(this.red, 'redMul works only with red numbers');
    this.red._verify2(this, num);
    return this.red.mul(this, num);
  };

  BN.prototype.redIMul = function redIMul (num) {
    assert(this.red, 'redMul works only with red numbers');
    this.red._verify2(this, num);
    return this.red.imul(this, num);
  };

  BN.prototype.redSqr = function redSqr () {
    assert(this.red, 'redSqr works only with red numbers');
    this.red._verify1(this);
    return this.red.sqr(this);
  };

  BN.prototype.redISqr = function redISqr () {
    assert(this.red, 'redISqr works only with red numbers');
    this.red._verify1(this);
    return this.red.isqr(this);
  };

  // Square root over p
  BN.prototype.redSqrt = function redSqrt () {
    assert(this.red, 'redSqrt works only with red numbers');
    this.red._verify1(this);
    return this.red.sqrt(this);
  };

  BN.prototype.redInvm = function redInvm () {
    assert(this.red, 'redInvm works only with red numbers');
    this.red._verify1(this);
    return this.red.invm(this);
  };

  // Return negative clone of `this` % `red modulo`
  BN.prototype.redNeg = function redNeg () {
    assert(this.red, 'redNeg works only with red numbers');
    this.red._verify1(this);
    return this.red.neg(this);
  };

  BN.prototype.redPow = function redPow (num) {
    assert(this.red && !num.red, 'redPow(normalNum)');
    this.red._verify1(this);
    return this.red.pow(this, num);
  };

  // Prime numbers with efficient reduction
  var primes = {
    k256: null,
    p224: null,
    p192: null,
    p25519: null
  };

  // Pseudo-Mersenne prime
  function MPrime (name, p) {
    // P = 2 ^ N - K
    this.name = name;
    this.p = new BN(p, 16);
    this.n = this.p.bitLength();
    this.k = new BN(1).iushln(this.n).isub(this.p);

    this.tmp = this._tmp();
  }

  MPrime.prototype._tmp = function _tmp () {
    var tmp = new BN(null);
    tmp.words = new Array(Math.ceil(this.n / 13));
    return tmp;
  };

  MPrime.prototype.ireduce = function ireduce (num) {
    // Assumes that `num` is less than `P^2`
    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)
    var r = num;
    var rlen;

    do {
      this.split(r, this.tmp);
      r = this.imulK(r);
      r = r.iadd(this.tmp);
      rlen = r.bitLength();
    } while (rlen > this.n);

    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);
    if (cmp === 0) {
      r.words[0] = 0;
      r.length = 1;
    } else if (cmp > 0) {
      r.isub(this.p);
    } else {
      if (r.strip !== undefined) {
        // r is BN v4 instance
        r.strip();
      } else {
        // r is BN v5 instance
        r._strip();
      }
    }

    return r;
  };

  MPrime.prototype.split = function split (input, out) {
    input.iushrn(this.n, 0, out);
  };

  MPrime.prototype.imulK = function imulK (num) {
    return num.imul(this.k);
  };

  function K256 () {
    MPrime.call(
      this,
      'k256',
      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');
  }
  inherits(K256, MPrime);

  K256.prototype.split = function split (input, output) {
    // 256 = 9 * 26 + 22
    var mask = 0x3fffff;

    var outLen = Math.min(input.length, 9);
    for (var i = 0; i < outLen; i++) {
      output.words[i] = input.words[i];
    }
    output.length = outLen;

    if (input.length <= 9) {
      input.words[0] = 0;
      input.length = 1;
      return;
    }

    // Shift by 9 limbs
    var prev = input.words[9];
    output.words[output.length++] = prev & mask;

    for (i = 10; i < input.length; i++) {
      var next = input.words[i] | 0;
      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);
      prev = next;
    }
    prev >>>= 22;
    input.words[i - 10] = prev;
    if (prev === 0 && input.length > 10) {
      input.length -= 10;
    } else {
      input.length -= 9;
    }
  };

  K256.prototype.imulK = function imulK (num) {
    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]
    num.words[num.length] = 0;
    num.words[num.length + 1] = 0;
    num.length += 2;

    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390
    var lo = 0;
    for (var i = 0; i < num.length; i++) {
      var w = num.words[i] | 0;
      lo += w * 0x3d1;
      num.words[i] = lo & 0x3ffffff;
      lo = w * 0x40 + ((lo / 0x4000000) | 0);
    }

    // Fast length reduction
    if (num.words[num.length - 1] === 0) {
      num.length--;
      if (num.words[num.length - 1] === 0) {
        num.length--;
      }
    }
    return num;
  };

  function P224 () {
    MPrime.call(
      this,
      'p224',
      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');
  }
  inherits(P224, MPrime);

  function P192 () {
    MPrime.call(
      this,
      'p192',
      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');
  }
  inherits(P192, MPrime);

  function P25519 () {
    // 2 ^ 255 - 19
    MPrime.call(
      this,
      '25519',
      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');
  }
  inherits(P25519, MPrime);

  P25519.prototype.imulK = function imulK (num) {
    // K = 0x13
    var carry = 0;
    for (var i = 0; i < num.length; i++) {
      var hi = (num.words[i] | 0) * 0x13 + carry;
      var lo = hi & 0x3ffffff;
      hi >>>= 26;

      num.words[i] = lo;
      carry = hi;
    }
    if (carry !== 0) {
      num.words[num.length++] = carry;
    }
    return num;
  };

  // Exported mostly for testing purposes, use plain name instead
  BN._prime = function prime (name) {
    // Cached version of prime
    if (primes[name]) return primes[name];

    var prime;
    if (name === 'k256') {
      prime = new K256();
    } else if (name === 'p224') {
      prime = new P224();
    } else if (name === 'p192') {
      prime = new P192();
    } else if (name === 'p25519') {
      prime = new P25519();
    } else {
      throw new Error('Unknown prime ' + name);
    }
    primes[name] = prime;

    return prime;
  };

  //
  // Base reduction engine
  //
  function Red (m) {
    if (typeof m === 'string') {
      var prime = BN._prime(m);
      this.m = prime.p;
      this.prime = prime;
    } else {
      assert(m.gtn(1), 'modulus must be greater than 1');
      this.m = m;
      this.prime = null;
    }
  }

  Red.prototype._verify1 = function _verify1 (a) {
    assert(a.negative === 0, 'red works only with positives');
    assert(a.red, 'red works only with red numbers');
  };

  Red.prototype._verify2 = function _verify2 (a, b) {
    assert((a.negative | b.negative) === 0, 'red works only with positives');
    assert(a.red && a.red === b.red,
      'red works only with red numbers');
  };

  Red.prototype.imod = function imod (a) {
    if (this.prime) return this.prime.ireduce(a)._forceRed(this);
    return a.umod(this.m)._forceRed(this);
  };

  Red.prototype.neg = function neg (a) {
    if (a.isZero()) {
      return a.clone();
    }

    return this.m.sub(a)._forceRed(this);
  };

  Red.prototype.add = function add (a, b) {
    this._verify2(a, b);

    var res = a.add(b);
    if (res.cmp(this.m) >= 0) {
      res.isub(this.m);
    }
    return res._forceRed(this);
  };

  Red.prototype.iadd = function iadd (a, b) {
    this._verify2(a, b);

    var res = a.iadd(b);
    if (res.cmp(this.m) >= 0) {
      res.isub(this.m);
    }
    return res;
  };

  Red.prototype.sub = function sub (a, b) {
    this._verify2(a, b);

    var res = a.sub(b);
    if (res.cmpn(0) < 0) {
      res.iadd(this.m);
    }
    return res._forceRed(this);
  };

  Red.prototype.isub = function isub (a, b) {
    this._verify2(a, b);

    var res = a.isub(b);
    if (res.cmpn(0) < 0) {
      res.iadd(this.m);
    }
    return res;
  };

  Red.prototype.shl = function shl (a, num) {
    this._verify1(a);
    return this.imod(a.ushln(num));
  };

  Red.prototype.imul = function imul (a, b) {
    this._verify2(a, b);
    return this.imod(a.imul(b));
  };

  Red.prototype.mul = function mul (a, b) {
    this._verify2(a, b);
    return this.imod(a.mul(b));
  };

  Red.prototype.isqr = function isqr (a) {
    return this.imul(a, a.clone());
  };

  Red.prototype.sqr = function sqr (a) {
    return this.mul(a, a);
  };

  Red.prototype.sqrt = function sqrt (a) {
    if (a.isZero()) return a.clone();

    var mod3 = this.m.andln(3);
    assert(mod3 % 2 === 1);

    // Fast case
    if (mod3 === 3) {
      var pow = this.m.add(new BN(1)).iushrn(2);
      return this.pow(a, pow);
    }

    // Tonelli-Shanks algorithm (Totally unoptimized and slow)
    //
    // Find Q and S, that Q * 2 ^ S = (P - 1)
    var q = this.m.subn(1);
    var s = 0;
    while (!q.isZero() && q.andln(1) === 0) {
      s++;
      q.iushrn(1);
    }
    assert(!q.isZero());

    var one = new BN(1).toRed(this);
    var nOne = one.redNeg();

    // Find quadratic non-residue
    // NOTE: Max is such because of generalized Riemann hypothesis.
    var lpow = this.m.subn(1).iushrn(1);
    var z = this.m.bitLength();
    z = new BN(2 * z * z).toRed(this);

    while (this.pow(z, lpow).cmp(nOne) !== 0) {
      z.redIAdd(nOne);
    }

    var c = this.pow(z, q);
    var r = this.pow(a, q.addn(1).iushrn(1));
    var t = this.pow(a, q);
    var m = s;
    while (t.cmp(one) !== 0) {
      var tmp = t;
      for (var i = 0; tmp.cmp(one) !== 0; i++) {
        tmp = tmp.redSqr();
      }
      assert(i < m);
      var b = this.pow(c, new BN(1).iushln(m - i - 1));

      r = r.redMul(b);
      c = b.redSqr();
      t = t.redMul(c);
      m = i;
    }

    return r;
  };

  Red.prototype.invm = function invm (a) {
    var inv = a._invmp(this.m);
    if (inv.negative !== 0) {
      inv.negative = 0;
      return this.imod(inv).redNeg();
    } else {
      return this.imod(inv);
    }
  };

  Red.prototype.pow = function pow (a, num) {
    if (num.isZero()) return new BN(1).toRed(this);
    if (num.cmpn(1) === 0) return a.clone();

    var windowSize = 4;
    var wnd = new Array(1 << windowSize);
    wnd[0] = new BN(1).toRed(this);
    wnd[1] = a;
    for (var i = 2; i < wnd.length; i++) {
      wnd[i] = this.mul(wnd[i - 1], a);
    }

    var res = wnd[0];
    var current = 0;
    var currentLen = 0;
    var start = num.bitLength() % 26;
    if (start === 0) {
      start = 26;
    }

    for (i = num.length - 1; i >= 0; i--) {
      var word = num.words[i];
      for (var j = start - 1; j >= 0; j--) {
        var bit = (word >> j) & 1;
        if (res !== wnd[0]) {
          res = this.sqr(res);
        }

        if (bit === 0 && current === 0) {
          currentLen = 0;
          continue;
        }

        current <<= 1;
        current |= bit;
        currentLen++;
        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;

        res = this.mul(res, wnd[current]);
        currentLen = 0;
        current = 0;
      }
      start = 26;
    }

    return res;
  };

  Red.prototype.convertTo = function convertTo (num) {
    var r = num.umod(this.m);

    return r === num ? r.clone() : r;
  };

  Red.prototype.convertFrom = function convertFrom (num) {
    var res = num.clone();
    res.red = null;
    return res;
  };

  //
  // Montgomery method engine
  //

  BN.mont = function mont (num) {
    return new Mont(num);
  };

  function Mont (m) {
    Red.call(this, m);

    this.shift = this.m.bitLength();
    if (this.shift % 26 !== 0) {
      this.shift += 26 - (this.shift % 26);
    }

    this.r = new BN(1).iushln(this.shift);
    this.r2 = this.imod(this.r.sqr());
    this.rinv = this.r._invmp(this.m);

    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);
    this.minv = this.minv.umod(this.r);
    this.minv = this.r.sub(this.minv);
  }
  inherits(Mont, Red);

  Mont.prototype.convertTo = function convertTo (num) {
    return this.imod(num.ushln(this.shift));
  };

  Mont.prototype.convertFrom = function convertFrom (num) {
    var r = this.imod(num.mul(this.rinv));
    r.red = null;
    return r;
  };

  Mont.prototype.imul = function imul (a, b) {
    if (a.isZero() || b.isZero()) {
      a.words[0] = 0;
      a.length = 1;
      return a;
    }

    var t = a.imul(b);
    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
    var u = t.isub(c).iushrn(this.shift);
    var res = u;

    if (u.cmp(this.m) >= 0) {
      res = u.isub(this.m);
    } else if (u.cmpn(0) < 0) {
      res = u.iadd(this.m);
    }

    return res._forceRed(this);
  };

  Mont.prototype.mul = function mul (a, b) {
    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);

    var t = a.mul(b);
    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
    var u = t.isub(c).iushrn(this.shift);
    var res = u;
    if (u.cmp(this.m) >= 0) {
      res = u.isub(this.m);
    } else if (u.cmpn(0) < 0) {
      res = u.iadd(this.m);
    }

    return res._forceRed(this);
  };

  Mont.prototype.invm = function invm (a) {
    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R
    var res = this.imod(a._invmp(this.m).mul(this.r2));
    return res._forceRed(this);
  };
})( false || module, this);


/***/ }),

/***/ "./node_modules/brorand/index.js":
/*!***************************************!*\
  !*** ./node_modules/brorand/index.js ***!
  \***************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var r;

module.exports = function rand(len) {
  if (!r)
    r = new Rand(null);

  return r.generate(len);
};

function Rand(rand) {
  this.rand = rand;
}
module.exports.Rand = Rand;

Rand.prototype.generate = function generate(len) {
  return this._rand(len);
};

// Emulate crypto API using randy
Rand.prototype._rand = function _rand(n) {
  if (this.rand.getBytes)
    return this.rand.getBytes(n);

  var res = new Uint8Array(n);
  for (var i = 0; i < res.length; i++)
    res[i] = this.rand.getByte();
  return res;
};

if (typeof self === 'object') {
  if (self.crypto && self.crypto.getRandomValues) {
    // Modern browsers
    Rand.prototype._rand = function _rand(n) {
      var arr = new Uint8Array(n);
      self.crypto.getRandomValues(arr);
      return arr;
    };
  } else if (self.msCrypto && self.msCrypto.getRandomValues) {
    // IE
    Rand.prototype._rand = function _rand(n) {
      var arr = new Uint8Array(n);
      self.msCrypto.getRandomValues(arr);
      return arr;
    };

  // Safari's WebWorkers do not have `crypto`
  } else if (typeof window === 'object') {
    // Old junk
    Rand.prototype._rand = function() {
      throw new Error('Not implemented yet');
    };
  }
} else {
  // Node.js or Web worker with no crypto support
  try {
    var crypto = __webpack_require__(/*! crypto */ "?3fc0");
    if (typeof crypto.randomBytes !== 'function')
      throw new Error('Not supported');

    Rand.prototype._rand = function _rand(n) {
      return crypto.randomBytes(n);
    };
  } catch (e) {
  }
}


/***/ }),

/***/ "./node_modules/browserify-aes/aes.js":
/*!********************************************!*\
  !*** ./node_modules/browserify-aes/aes.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// based on the aes implimentation in triple sec
// https://github.com/keybase/triplesec
// which is in turn based on the one from crypto-js
// https://code.google.com/p/crypto-js/

var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer

function asUInt32Array (buf) {
  if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)

  var len = (buf.length / 4) | 0
  var out = new Array(len)

  for (var i = 0; i < len; i++) {
    out[i] = buf.readUInt32BE(i * 4)
  }

  return out
}

function scrubVec (v) {
  for (var i = 0; i < v.length; v++) {
    v[i] = 0
  }
}

function cryptBlock (M, keySchedule, SUB_MIX, SBOX, nRounds) {
  var SUB_MIX0 = SUB_MIX[0]
  var SUB_MIX1 = SUB_MIX[1]
  var SUB_MIX2 = SUB_MIX[2]
  var SUB_MIX3 = SUB_MIX[3]

  var s0 = M[0] ^ keySchedule[0]
  var s1 = M[1] ^ keySchedule[1]
  var s2 = M[2] ^ keySchedule[2]
  var s3 = M[3] ^ keySchedule[3]
  var t0, t1, t2, t3
  var ksRow = 4

  for (var round = 1; round < nRounds; round++) {
    t0 = SUB_MIX0[s0 >>> 24] ^ SUB_MIX1[(s1 >>> 16) & 0xff] ^ SUB_MIX2[(s2 >>> 8) & 0xff] ^ SUB_MIX3[s3 & 0xff] ^ keySchedule[ksRow++]
    t1 = SUB_MIX0[s1 >>> 24] ^ SUB_MIX1[(s2 >>> 16) & 0xff] ^ SUB_MIX2[(s3 >>> 8) & 0xff] ^ SUB_MIX3[s0 & 0xff] ^ keySchedule[ksRow++]
    t2 = SUB_MIX0[s2 >>> 24] ^ SUB_MIX1[(s3 >>> 16) & 0xff] ^ SUB_MIX2[(s0 >>> 8) & 0xff] ^ SUB_MIX3[s1 & 0xff] ^ keySchedule[ksRow++]
    t3 = SUB_MIX0[s3 >>> 24] ^ SUB_MIX1[(s0 >>> 16) & 0xff] ^ SUB_MIX2[(s1 >>> 8) & 0xff] ^ SUB_MIX3[s2 & 0xff] ^ keySchedule[ksRow++]
    s0 = t0
    s1 = t1
    s2 = t2
    s3 = t3
  }

  t0 = ((SBOX[s0 >>> 24] << 24) | (SBOX[(s1 >>> 16) & 0xff] << 16) | (SBOX[(s2 >>> 8) & 0xff] << 8) | SBOX[s3 & 0xff]) ^ keySchedule[ksRow++]
  t1 = ((SBOX[s1 >>> 24] << 24) | (SBOX[(s2 >>> 16) & 0xff] << 16) | (SBOX[(s3 >>> 8) & 0xff] << 8) | SBOX[s0 & 0xff]) ^ keySchedule[ksRow++]
  t2 = ((SBOX[s2 >>> 24] << 24) | (SBOX[(s3 >>> 16) & 0xff] << 16) | (SBOX[(s0 >>> 8) & 0xff] << 8) | SBOX[s1 & 0xff]) ^ keySchedule[ksRow++]
  t3 = ((SBOX[s3 >>> 24] << 24) | (SBOX[(s0 >>> 16) & 0xff] << 16) | (SBOX[(s1 >>> 8) & 0xff] << 8) | SBOX[s2 & 0xff]) ^ keySchedule[ksRow++]
  t0 = t0 >>> 0
  t1 = t1 >>> 0
  t2 = t2 >>> 0
  t3 = t3 >>> 0

  return [t0, t1, t2, t3]
}

// AES constants
var RCON = [0x00, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36]
var G = (function () {
  // Compute double table
  var d = new Array(256)
  for (var j = 0; j < 256; j++) {
    if (j < 128) {
      d[j] = j << 1
    } else {
      d[j] = (j << 1) ^ 0x11b
    }
  }

  var SBOX = []
  var INV_SBOX = []
  var SUB_MIX = [[], [], [], []]
  var INV_SUB_MIX = [[], [], [], []]

  // Walk GF(2^8)
  var x = 0
  var xi = 0
  for (var i = 0; i < 256; ++i) {
    // Compute sbox
    var sx = xi ^ (xi << 1) ^ (xi << 2) ^ (xi << 3) ^ (xi << 4)
    sx = (sx >>> 8) ^ (sx & 0xff) ^ 0x63
    SBOX[x] = sx
    INV_SBOX[sx] = x

    // Compute multiplication
    var x2 = d[x]
    var x4 = d[x2]
    var x8 = d[x4]

    // Compute sub bytes, mix columns tables
    var t = (d[sx] * 0x101) ^ (sx * 0x1010100)
    SUB_MIX[0][x] = (t << 24) | (t >>> 8)
    SUB_MIX[1][x] = (t << 16) | (t >>> 16)
    SUB_MIX[2][x] = (t << 8) | (t >>> 24)
    SUB_MIX[3][x] = t

    // Compute inv sub bytes, inv mix columns tables
    t = (x8 * 0x1010101) ^ (x4 * 0x10001) ^ (x2 * 0x101) ^ (x * 0x1010100)
    INV_SUB_MIX[0][sx] = (t << 24) | (t >>> 8)
    INV_SUB_MIX[1][sx] = (t << 16) | (t >>> 16)
    INV_SUB_MIX[2][sx] = (t << 8) | (t >>> 24)
    INV_SUB_MIX[3][sx] = t

    if (x === 0) {
      x = xi = 1
    } else {
      x = x2 ^ d[d[d[x8 ^ x2]]]
      xi ^= d[d[xi]]
    }
  }

  return {
    SBOX: SBOX,
    INV_SBOX: INV_SBOX,
    SUB_MIX: SUB_MIX,
    INV_SUB_MIX: INV_SUB_MIX
  }
})()

function AES (key) {
  this._key = asUInt32Array(key)
  this._reset()
}

AES.blockSize = 4 * 4
AES.keySize = 256 / 8
AES.prototype.blockSize = AES.blockSize
AES.prototype.keySize = AES.keySize
AES.prototype._reset = function () {
  var keyWords = this._key
  var keySize = keyWords.length
  var nRounds = keySize + 6
  var ksRows = (nRounds + 1) * 4

  var keySchedule = []
  for (var k = 0; k < keySize; k++) {
    keySchedule[k] = keyWords[k]
  }

  for (k = keySize; k < ksRows; k++) {
    var t = keySchedule[k - 1]

    if (k % keySize === 0) {
      t = (t << 8) | (t >>> 24)
      t =
        (G.SBOX[t >>> 24] << 24) |
        (G.SBOX[(t >>> 16) & 0xff] << 16) |
        (G.SBOX[(t >>> 8) & 0xff] << 8) |
        (G.SBOX[t & 0xff])

      t ^= RCON[(k / keySize) | 0] << 24
    } else if (keySize > 6 && k % keySize === 4) {
      t =
        (G.SBOX[t >>> 24] << 24) |
        (G.SBOX[(t >>> 16) & 0xff] << 16) |
        (G.SBOX[(t >>> 8) & 0xff] << 8) |
        (G.SBOX[t & 0xff])
    }

    keySchedule[k] = keySchedule[k - keySize] ^ t
  }

  var invKeySchedule = []
  for (var ik = 0; ik < ksRows; ik++) {
    var ksR = ksRows - ik
    var tt = keySchedule[ksR - (ik % 4 ? 0 : 4)]

    if (ik < 4 || ksR <= 4) {
      invKeySchedule[ik] = tt
    } else {
      invKeySchedule[ik] =
        G.INV_SUB_MIX[0][G.SBOX[tt >>> 24]] ^
        G.INV_SUB_MIX[1][G.SBOX[(tt >>> 16) & 0xff]] ^
        G.INV_SUB_MIX[2][G.SBOX[(tt >>> 8) & 0xff]] ^
        G.INV_SUB_MIX[3][G.SBOX[tt & 0xff]]
    }
  }

  this._nRounds = nRounds
  this._keySchedule = keySchedule
  this._invKeySchedule = invKeySchedule
}

AES.prototype.encryptBlockRaw = function (M) {
  M = asUInt32Array(M)
  return cryptBlock(M, this._keySchedule, G.SUB_MIX, G.SBOX, this._nRounds)
}

AES.prototype.encryptBlock = function (M) {
  var out = this.encryptBlockRaw(M)
  var buf = Buffer.allocUnsafe(16)
  buf.writeUInt32BE(out[0], 0)
  buf.writeUInt32BE(out[1], 4)
  buf.writeUInt32BE(out[2], 8)
  buf.writeUInt32BE(out[3], 12)
  return buf
}

AES.prototype.decryptBlock = function (M) {
  M = asUInt32Array(M)

  // swap
  var m1 = M[1]
  M[1] = M[3]
  M[3] = m1

  var out = cryptBlock(M, this._invKeySchedule, G.INV_SUB_MIX, G.INV_SBOX, this._nRounds)
  var buf = Buffer.allocUnsafe(16)
  buf.writeUInt32BE(out[0], 0)
  buf.writeUInt32BE(out[3], 4)
  buf.writeUInt32BE(out[2], 8)
  buf.writeUInt32BE(out[1], 12)
  return buf
}

AES.prototype.scrub = function () {
  scrubVec(this._keySchedule)
  scrubVec(this._invKeySchedule)
  scrubVec(this._key)
}

module.exports.AES = AES


/***/ }),

/***/ "./node_modules/browserify-aes/authCipher.js":
/*!***************************************************!*\
  !*** ./node_modules/browserify-aes/authCipher.js ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var aes = __webpack_require__(/*! ./aes */ "./node_modules/browserify-aes/aes.js")
var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer
var Transform = __webpack_require__(/*! cipher-base */ "./node_modules/cipher-base/index.js")
var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")
var GHASH = __webpack_require__(/*! ./ghash */ "./node_modules/browserify-aes/ghash.js")
var xor = __webpack_require__(/*! buffer-xor */ "./node_modules/buffer-xor/index.js")
var incr32 = __webpack_require__(/*! ./incr32 */ "./node_modules/browserify-aes/incr32.js")

function xorTest (a, b) {
  var out = 0
  if (a.length !== b.length) out++

  var len = Math.min(a.length, b.length)
  for (var i = 0; i < len; ++i) {
    out += (a[i] ^ b[i])
  }

  return out
}

function calcIv (self, iv, ck) {
  if (iv.length === 12) {
    self._finID = Buffer.concat([iv, Buffer.from([0, 0, 0, 1])])
    return Buffer.concat([iv, Buffer.from([0, 0, 0, 2])])
  }
  var ghash = new GHASH(ck)
  var len = iv.length
  var toPad = len % 16
  ghash.update(iv)
  if (toPad) {
    toPad = 16 - toPad
    ghash.update(Buffer.alloc(toPad, 0))
  }
  ghash.update(Buffer.alloc(8, 0))
  var ivBits = len * 8
  var tail = Buffer.alloc(8)
  tail.writeUIntBE(ivBits, 0, 8)
  ghash.update(tail)
  self._finID = ghash.state
  var out = Buffer.from(self._finID)
  incr32(out)
  return out
}
function StreamCipher (mode, key, iv, decrypt) {
  Transform.call(this)

  var h = Buffer.alloc(4, 0)

  this._cipher = new aes.AES(key)
  var ck = this._cipher.encryptBlock(h)
  this._ghash = new GHASH(ck)
  iv = calcIv(this, iv, ck)

  this._prev = Buffer.from(iv)
  this._cache = Buffer.allocUnsafe(0)
  this._secCache = Buffer.allocUnsafe(0)
  this._decrypt = decrypt
  this._alen = 0
  this._len = 0
  this._mode = mode

  this._authTag = null
  this._called = false
}

inherits(StreamCipher, Transform)

StreamCipher.prototype._update = function (chunk) {
  if (!this._called && this._alen) {
    var rump = 16 - (this._alen % 16)
    if (rump < 16) {
      rump = Buffer.alloc(rump, 0)
      this._ghash.update(rump)
    }
  }

  this._called = true
  var out = this._mode.encrypt(this, chunk)
  if (this._decrypt) {
    this._ghash.update(chunk)
  } else {
    this._ghash.update(out)
  }
  this._len += chunk.length
  return out
}

StreamCipher.prototype._final = function () {
  if (this._decrypt && !this._authTag) throw new Error('Unsupported state or unable to authenticate data')

  var tag = xor(this._ghash.final(this._alen * 8, this._len * 8), this._cipher.encryptBlock(this._finID))
  if (this._decrypt && xorTest(tag, this._authTag)) throw new Error('Unsupported state or unable to authenticate data')

  this._authTag = tag
  this._cipher.scrub()
}

StreamCipher.prototype.getAuthTag = function getAuthTag () {
  if (this._decrypt || !Buffer.isBuffer(this._authTag)) throw new Error('Attempting to get auth tag in unsupported state')

  return this._authTag
}

StreamCipher.prototype.setAuthTag = function setAuthTag (tag) {
  if (!this._decrypt) throw new Error('Attempting to set auth tag in unsupported state')

  this._authTag = tag
}

StreamCipher.prototype.setAAD = function setAAD (buf) {
  if (this._called) throw new Error('Attempting to set AAD in unsupported state')

  this._ghash.update(buf)
  this._alen += buf.length
}

module.exports = StreamCipher


/***/ }),

/***/ "./node_modules/browserify-aes/browser.js":
/*!************************************************!*\
  !*** ./node_modules/browserify-aes/browser.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

var ciphers = __webpack_require__(/*! ./encrypter */ "./node_modules/browserify-aes/encrypter.js")
var deciphers = __webpack_require__(/*! ./decrypter */ "./node_modules/browserify-aes/decrypter.js")
var modes = __webpack_require__(/*! ./modes/list.json */ "./node_modules/browserify-aes/modes/list.json")

function getCiphers () {
  return Object.keys(modes)
}

exports.createCipher = exports.Cipher = ciphers.createCipher
exports.createCipheriv = exports.Cipheriv = ciphers.createCipheriv
exports.createDecipher = exports.Decipher = deciphers.createDecipher
exports.createDecipheriv = exports.Decipheriv = deciphers.createDecipheriv
exports.listCiphers = exports.getCiphers = getCiphers


/***/ }),

/***/ "./node_modules/browserify-aes/decrypter.js":
/*!**************************************************!*\
  !*** ./node_modules/browserify-aes/decrypter.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

var AuthCipher = __webpack_require__(/*! ./authCipher */ "./node_modules/browserify-aes/authCipher.js")
var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer
var MODES = __webpack_require__(/*! ./modes */ "./node_modules/browserify-aes/modes/index.js")
var StreamCipher = __webpack_require__(/*! ./streamCipher */ "./node_modules/browserify-aes/streamCipher.js")
var Transform = __webpack_require__(/*! cipher-base */ "./node_modules/cipher-base/index.js")
var aes = __webpack_require__(/*! ./aes */ "./node_modules/browserify-aes/aes.js")
var ebtk = __webpack_require__(/*! evp_bytestokey */ "./node_modules/evp_bytestokey/index.js")
var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")

function Decipher (mode, key, iv) {
  Transform.call(this)

  this._cache = new Splitter()
  this._last = void 0
  this._cipher = new aes.AES(key)
  this._prev = Buffer.from(iv)
  this._mode = mode
  this._autopadding = true
}

inherits(Decipher, Transform)

Decipher.prototype._update = function (data) {
  this._cache.add(data)
  var chunk
  var thing
  var out = []
  while ((chunk = this._cache.get(this._autopadding))) {
    thing = this._mode.decrypt(this, chunk)
    out.push(thing)
  }
  return Buffer.concat(out)
}

Decipher.prototype._final = function () {
  var chunk = this._cache.flush()
  if (this._autopadding) {
    return unpad(this._mode.decrypt(this, chunk))
  } else if (chunk) {
    throw new Error('data not multiple of block length')
  }
}

Decipher.prototype.setAutoPadding = function (setTo) {
  this._autopadding = !!setTo
  return this
}

function Splitter () {
  this.cache = Buffer.allocUnsafe(0)
}

Splitter.prototype.add = function (data) {
  this.cache = Buffer.concat([this.cache, data])
}

Splitter.prototype.get = function (autoPadding) {
  var out
  if (autoPadding) {
    if (this.cache.length > 16) {
      out = this.cache.slice(0, 16)
      this.cache = this.cache.slice(16)
      return out
    }
  } else {
    if (this.cache.length >= 16) {
      out = this.cache.slice(0, 16)
      this.cache = this.cache.slice(16)
      return out
    }
  }

  return null
}

Splitter.prototype.flush = function () {
  if (this.cache.length) return this.cache
}

function unpad (last) {
  var padded = last[15]
  if (padded < 1 || padded > 16) {
    throw new Error('unable to decrypt data')
  }
  var i = -1
  while (++i < padded) {
    if (last[(i + (16 - padded))] !== padded) {
      throw new Error('unable to decrypt data')
    }
  }
  if (padded === 16) return

  return last.slice(0, 16 - padded)
}

function createDecipheriv (suite, password, iv) {
  var config = MODES[suite.toLowerCase()]
  if (!config) throw new TypeError('invalid suite type')

  if (typeof iv === 'string') iv = Buffer.from(iv)
  if (config.mode !== 'GCM' && iv.length !== config.iv) throw new TypeError('invalid iv length ' + iv.length)

  if (typeof password === 'string') password = Buffer.from(password)
  if (password.length !== config.key / 8) throw new TypeError('invalid key length ' + password.length)

  if (config.type === 'stream') {
    return new StreamCipher(config.module, password, iv, true)
  } else if (config.type === 'auth') {
    return new AuthCipher(config.module, password, iv, true)
  }

  return new Decipher(config.module, password, iv)
}

function createDecipher (suite, password) {
  var config = MODES[suite.toLowerCase()]
  if (!config) throw new TypeError('invalid suite type')

  var keys = ebtk(password, false, config.key, config.iv)
  return createDecipheriv(suite, keys.key, keys.iv)
}

exports.createDecipher = createDecipher
exports.createDecipheriv = createDecipheriv


/***/ }),

/***/ "./node_modules/browserify-aes/encrypter.js":
/*!**************************************************!*\
  !*** ./node_modules/browserify-aes/encrypter.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

var MODES = __webpack_require__(/*! ./modes */ "./node_modules/browserify-aes/modes/index.js")
var AuthCipher = __webpack_require__(/*! ./authCipher */ "./node_modules/browserify-aes/authCipher.js")
var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer
var StreamCipher = __webpack_require__(/*! ./streamCipher */ "./node_modules/browserify-aes/streamCipher.js")
var Transform = __webpack_require__(/*! cipher-base */ "./node_modules/cipher-base/index.js")
var aes = __webpack_require__(/*! ./aes */ "./node_modules/browserify-aes/aes.js")
var ebtk = __webpack_require__(/*! evp_bytestokey */ "./node_modules/evp_bytestokey/index.js")
var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")

function Cipher (mode, key, iv) {
  Transform.call(this)

  this._cache = new Splitter()
  this._cipher = new aes.AES(key)
  this._prev = Buffer.from(iv)
  this._mode = mode
  this._autopadding = true
}

inherits(Cipher, Transform)

Cipher.prototype._update = function (data) {
  this._cache.add(data)
  var chunk
  var thing
  var out = []

  while ((chunk = this._cache.get())) {
    thing = this._mode.encrypt(this, chunk)
    out.push(thing)
  }

  return Buffer.concat(out)
}

var PADDING = Buffer.alloc(16, 0x10)

Cipher.prototype._final = function () {
  var chunk = this._cache.flush()
  if (this._autopadding) {
    chunk = this._mode.encrypt(this, chunk)
    this._cipher.scrub()
    return chunk
  }

  if (!chunk.equals(PADDING)) {
    this._cipher.scrub()
    throw new Error('data not multiple of block length')
  }
}

Cipher.prototype.setAutoPadding = function (setTo) {
  this._autopadding = !!setTo
  return this
}

function Splitter () {
  this.cache = Buffer.allocUnsafe(0)
}

Splitter.prototype.add = function (data) {
  this.cache = Buffer.concat([this.cache, data])
}

Splitter.prototype.get = function () {
  if (this.cache.length > 15) {
    var out = this.cache.slice(0, 16)
    this.cache = this.cache.slice(16)
    return out
  }
  return null
}

Splitter.prototype.flush = function () {
  var len = 16 - this.cache.length
  var padBuff = Buffer.allocUnsafe(len)

  var i = -1
  while (++i < len) {
    padBuff.writeUInt8(len, i)
  }

  return Buffer.concat([this.cache, padBuff])
}

function createCipheriv (suite, password, iv) {
  var config = MODES[suite.toLowerCase()]
  if (!config) throw new TypeError('invalid suite type')

  if (typeof password === 'string') password = Buffer.from(password)
  if (password.length !== config.key / 8) throw new TypeError('invalid key length ' + password.length)

  if (typeof iv === 'string') iv = Buffer.from(iv)
  if (config.mode !== 'GCM' && iv.length !== config.iv) throw new TypeError('invalid iv length ' + iv.length)

  if (config.type === 'stream') {
    return new StreamCipher(config.module, password, iv)
  } else if (config.type === 'auth') {
    return new AuthCipher(config.module, password, iv)
  }

  return new Cipher(config.module, password, iv)
}

function createCipher (suite, password) {
  var config = MODES[suite.toLowerCase()]
  if (!config) throw new TypeError('invalid suite type')

  var keys = ebtk(password, false, config.key, config.iv)
  return createCipheriv(suite, keys.key, keys.iv)
}

exports.createCipheriv = createCipheriv
exports.createCipher = createCipher


/***/ }),

/***/ "./node_modules/browserify-aes/ghash.js":
/*!**********************************************!*\
  !*** ./node_modules/browserify-aes/ghash.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer
var ZEROES = Buffer.alloc(16, 0)

function toArray (buf) {
  return [
    buf.readUInt32BE(0),
    buf.readUInt32BE(4),
    buf.readUInt32BE(8),
    buf.readUInt32BE(12)
  ]
}

function fromArray (out) {
  var buf = Buffer.allocUnsafe(16)
  buf.writeUInt32BE(out[0] >>> 0, 0)
  buf.writeUInt32BE(out[1] >>> 0, 4)
  buf.writeUInt32BE(out[2] >>> 0, 8)
  buf.writeUInt32BE(out[3] >>> 0, 12)
  return buf
}

function GHASH (key) {
  this.h = key
  this.state = Buffer.alloc(16, 0)
  this.cache = Buffer.allocUnsafe(0)
}

// from http://bitwiseshiftleft.github.io/sjcl/doc/symbols/src/core_gcm.js.html
// by Juho Vähä-Herttua
GHASH.prototype.ghash = function (block) {
  var i = -1
  while (++i < block.length) {
    this.state[i] ^= block[i]
  }
  this._multiply()
}

GHASH.prototype._multiply = function () {
  var Vi = toArray(this.h)
  var Zi = [0, 0, 0, 0]
  var j, xi, lsbVi
  var i = -1
  while (++i < 128) {
    xi = (this.state[~~(i / 8)] & (1 << (7 - (i % 8)))) !== 0
    if (xi) {
      // Z_i+1 = Z_i ^ V_i
      Zi[0] ^= Vi[0]
      Zi[1] ^= Vi[1]
      Zi[2] ^= Vi[2]
      Zi[3] ^= Vi[3]
    }

    // Store the value of LSB(V_i)
    lsbVi = (Vi[3] & 1) !== 0

    // V_i+1 = V_i >> 1
    for (j = 3; j > 0; j--) {
      Vi[j] = (Vi[j] >>> 1) | ((Vi[j - 1] & 1) << 31)
    }
    Vi[0] = Vi[0] >>> 1

    // If LSB(V_i) is 1, V_i+1 = (V_i >> 1) ^ R
    if (lsbVi) {
      Vi[0] = Vi[0] ^ (0xe1 << 24)
    }
  }
  this.state = fromArray(Zi)
}

GHASH.prototype.update = function (buf) {
  this.cache = Buffer.concat([this.cache, buf])
  var chunk
  while (this.cache.length >= 16) {
    chunk = this.cache.slice(0, 16)
    this.cache = this.cache.slice(16)
    this.ghash(chunk)
  }
}

GHASH.prototype.final = function (abl, bl) {
  if (this.cache.length) {
    this.ghash(Buffer.concat([this.cache, ZEROES], 16))
  }

  this.ghash(fromArray([0, abl, 0, bl]))
  return this.state
}

module.exports = GHASH


/***/ }),

/***/ "./node_modules/browserify-aes/incr32.js":
/*!***********************************************!*\
  !*** ./node_modules/browserify-aes/incr32.js ***!
  \***********************************************/
/***/ ((module) => {

function incr32 (iv) {
  var len = iv.length
  var item
  while (len--) {
    item = iv.readUInt8(len)
    if (item === 255) {
      iv.writeUInt8(0, len)
    } else {
      item++
      iv.writeUInt8(item, len)
      break
    }
  }
}
module.exports = incr32


/***/ }),

/***/ "./node_modules/browserify-aes/modes/cbc.js":
/*!**************************************************!*\
  !*** ./node_modules/browserify-aes/modes/cbc.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

var xor = __webpack_require__(/*! buffer-xor */ "./node_modules/buffer-xor/index.js")

exports.encrypt = function (self, block) {
  var data = xor(block, self._prev)

  self._prev = self._cipher.encryptBlock(data)
  return self._prev
}

exports.decrypt = function (self, block) {
  var pad = self._prev

  self._prev = block
  var out = self._cipher.decryptBlock(block)

  return xor(out, pad)
}


/***/ }),

/***/ "./node_modules/browserify-aes/modes/cfb.js":
/*!**************************************************!*\
  !*** ./node_modules/browserify-aes/modes/cfb.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer
var xor = __webpack_require__(/*! buffer-xor */ "./node_modules/buffer-xor/index.js")

function encryptStart (self, data, decrypt) {
  var len = data.length
  var out = xor(data, self._cache)
  self._cache = self._cache.slice(len)
  self._prev = Buffer.concat([self._prev, decrypt ? data : out])
  return out
}

exports.encrypt = function (self, data, decrypt) {
  var out = Buffer.allocUnsafe(0)
  var len

  while (data.length) {
    if (self._cache.length === 0) {
      self._cache = self._cipher.encryptBlock(self._prev)
      self._prev = Buffer.allocUnsafe(0)
    }

    if (self._cache.length <= data.length) {
      len = self._cache.length
      out = Buffer.concat([out, encryptStart(self, data.slice(0, len), decrypt)])
      data = data.slice(len)
    } else {
      out = Buffer.concat([out, encryptStart(self, data, decrypt)])
      break
    }
  }

  return out
}


/***/ }),

/***/ "./node_modules/browserify-aes/modes/cfb1.js":
/*!***************************************************!*\
  !*** ./node_modules/browserify-aes/modes/cfb1.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer

function encryptByte (self, byteParam, decrypt) {
  var pad
  var i = -1
  var len = 8
  var out = 0
  var bit, value
  while (++i < len) {
    pad = self._cipher.encryptBlock(self._prev)
    bit = (byteParam & (1 << (7 - i))) ? 0x80 : 0
    value = pad[0] ^ bit
    out += ((value & 0x80) >> (i % 8))
    self._prev = shiftIn(self._prev, decrypt ? bit : value)
  }
  return out
}

function shiftIn (buffer, value) {
  var len = buffer.length
  var i = -1
  var out = Buffer.allocUnsafe(buffer.length)
  buffer = Buffer.concat([buffer, Buffer.from([value])])

  while (++i < len) {
    out[i] = buffer[i] << 1 | buffer[i + 1] >> (7)
  }

  return out
}

exports.encrypt = function (self, chunk, decrypt) {
  var len = chunk.length
  var out = Buffer.allocUnsafe(len)
  var i = -1

  while (++i < len) {
    out[i] = encryptByte(self, chunk[i], decrypt)
  }

  return out
}


/***/ }),

/***/ "./node_modules/browserify-aes/modes/cfb8.js":
/*!***************************************************!*\
  !*** ./node_modules/browserify-aes/modes/cfb8.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer

function encryptByte (self, byteParam, decrypt) {
  var pad = self._cipher.encryptBlock(self._prev)
  var out = pad[0] ^ byteParam

  self._prev = Buffer.concat([
    self._prev.slice(1),
    Buffer.from([decrypt ? byteParam : out])
  ])

  return out
}

exports.encrypt = function (self, chunk, decrypt) {
  var len = chunk.length
  var out = Buffer.allocUnsafe(len)
  var i = -1

  while (++i < len) {
    out[i] = encryptByte(self, chunk[i], decrypt)
  }

  return out
}


/***/ }),

/***/ "./node_modules/browserify-aes/modes/ctr.js":
/*!**************************************************!*\
  !*** ./node_modules/browserify-aes/modes/ctr.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

var xor = __webpack_require__(/*! buffer-xor */ "./node_modules/buffer-xor/index.js")
var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer
var incr32 = __webpack_require__(/*! ../incr32 */ "./node_modules/browserify-aes/incr32.js")

function getBlock (self) {
  var out = self._cipher.encryptBlockRaw(self._prev)
  incr32(self._prev)
  return out
}

var blockSize = 16
exports.encrypt = function (self, chunk) {
  var chunkNum = Math.ceil(chunk.length / blockSize)
  var start = self._cache.length
  self._cache = Buffer.concat([
    self._cache,
    Buffer.allocUnsafe(chunkNum * blockSize)
  ])
  for (var i = 0; i < chunkNum; i++) {
    var out = getBlock(self)
    var offset = start + i * blockSize
    self._cache.writeUInt32BE(out[0], offset + 0)
    self._cache.writeUInt32BE(out[1], offset + 4)
    self._cache.writeUInt32BE(out[2], offset + 8)
    self._cache.writeUInt32BE(out[3], offset + 12)
  }
  var pad = self._cache.slice(0, chunk.length)
  self._cache = self._cache.slice(chunk.length)
  return xor(chunk, pad)
}


/***/ }),

/***/ "./node_modules/browserify-aes/modes/ecb.js":
/*!**************************************************!*\
  !*** ./node_modules/browserify-aes/modes/ecb.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports) => {

exports.encrypt = function (self, block) {
  return self._cipher.encryptBlock(block)
}

exports.decrypt = function (self, block) {
  return self._cipher.decryptBlock(block)
}


/***/ }),

/***/ "./node_modules/browserify-aes/modes/index.js":
/*!****************************************************!*\
  !*** ./node_modules/browserify-aes/modes/index.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var modeModules = {
  ECB: __webpack_require__(/*! ./ecb */ "./node_modules/browserify-aes/modes/ecb.js"),
  CBC: __webpack_require__(/*! ./cbc */ "./node_modules/browserify-aes/modes/cbc.js"),
  CFB: __webpack_require__(/*! ./cfb */ "./node_modules/browserify-aes/modes/cfb.js"),
  CFB8: __webpack_require__(/*! ./cfb8 */ "./node_modules/browserify-aes/modes/cfb8.js"),
  CFB1: __webpack_require__(/*! ./cfb1 */ "./node_modules/browserify-aes/modes/cfb1.js"),
  OFB: __webpack_require__(/*! ./ofb */ "./node_modules/browserify-aes/modes/ofb.js"),
  CTR: __webpack_require__(/*! ./ctr */ "./node_modules/browserify-aes/modes/ctr.js"),
  GCM: __webpack_require__(/*! ./ctr */ "./node_modules/browserify-aes/modes/ctr.js")
}

var modes = __webpack_require__(/*! ./list.json */ "./node_modules/browserify-aes/modes/list.json")

for (var key in modes) {
  modes[key].module = modeModules[modes[key].mode]
}

module.exports = modes


/***/ }),

/***/ "./node_modules/browserify-aes/modes/ofb.js":
/*!**************************************************!*\
  !*** ./node_modules/browserify-aes/modes/ofb.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

var xor = __webpack_require__(/*! buffer-xor */ "./node_modules/buffer-xor/index.js")

function getBlock (self) {
  self._prev = self._cipher.encryptBlock(self._prev)
  return self._prev
}

exports.encrypt = function (self, chunk) {
  while (self._cache.length < chunk.length) {
    self._cache = Buffer.concat([self._cache, getBlock(self)])
  }

  var pad = self._cache.slice(0, chunk.length)
  self._cache = self._cache.slice(chunk.length)
  return xor(chunk, pad)
}


/***/ }),

/***/ "./node_modules/browserify-aes/streamCipher.js":
/*!*****************************************************!*\
  !*** ./node_modules/browserify-aes/streamCipher.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var aes = __webpack_require__(/*! ./aes */ "./node_modules/browserify-aes/aes.js")
var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer
var Transform = __webpack_require__(/*! cipher-base */ "./node_modules/cipher-base/index.js")
var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")

function StreamCipher (mode, key, iv, decrypt) {
  Transform.call(this)

  this._cipher = new aes.AES(key)
  this._prev = Buffer.from(iv)
  this._cache = Buffer.allocUnsafe(0)
  this._secCache = Buffer.allocUnsafe(0)
  this._decrypt = decrypt
  this._mode = mode
}

inherits(StreamCipher, Transform)

StreamCipher.prototype._update = function (chunk) {
  return this._mode.encrypt(this, chunk, this._decrypt)
}

StreamCipher.prototype._final = function () {
  this._cipher.scrub()
}

module.exports = StreamCipher


/***/ }),

/***/ "./node_modules/browserify-cipher/browser.js":
/*!***************************************************!*\
  !*** ./node_modules/browserify-cipher/browser.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

var DES = __webpack_require__(/*! browserify-des */ "./node_modules/browserify-des/index.js")
var aes = __webpack_require__(/*! browserify-aes/browser */ "./node_modules/browserify-aes/browser.js")
var aesModes = __webpack_require__(/*! browserify-aes/modes */ "./node_modules/browserify-aes/modes/index.js")
var desModes = __webpack_require__(/*! browserify-des/modes */ "./node_modules/browserify-des/modes.js")
var ebtk = __webpack_require__(/*! evp_bytestokey */ "./node_modules/evp_bytestokey/index.js")

function createCipher (suite, password) {
  suite = suite.toLowerCase()

  var keyLen, ivLen
  if (aesModes[suite]) {
    keyLen = aesModes[suite].key
    ivLen = aesModes[suite].iv
  } else if (desModes[suite]) {
    keyLen = desModes[suite].key * 8
    ivLen = desModes[suite].iv
  } else {
    throw new TypeError('invalid suite type')
  }

  var keys = ebtk(password, false, keyLen, ivLen)
  return createCipheriv(suite, keys.key, keys.iv)
}

function createDecipher (suite, password) {
  suite = suite.toLowerCase()

  var keyLen, ivLen
  if (aesModes[suite]) {
    keyLen = aesModes[suite].key
    ivLen = aesModes[suite].iv
  } else if (desModes[suite]) {
    keyLen = desModes[suite].key * 8
    ivLen = desModes[suite].iv
  } else {
    throw new TypeError('invalid suite type')
  }

  var keys = ebtk(password, false, keyLen, ivLen)
  return createDecipheriv(suite, keys.key, keys.iv)
}

function createCipheriv (suite, key, iv) {
  suite = suite.toLowerCase()
  if (aesModes[suite]) return aes.createCipheriv(suite, key, iv)
  if (desModes[suite]) return new DES({ key: key, iv: iv, mode: suite })

  throw new TypeError('invalid suite type')
}

function createDecipheriv (suite, key, iv) {
  suite = suite.toLowerCase()
  if (aesModes[suite]) return aes.createDecipheriv(suite, key, iv)
  if (desModes[suite]) return new DES({ key: key, iv: iv, mode: suite, decrypt: true })

  throw new TypeError('invalid suite type')
}

function getCiphers () {
  return Object.keys(desModes).concat(aes.getCiphers())
}

exports.createCipher = exports.Cipher = createCipher
exports.createCipheriv = exports.Cipheriv = createCipheriv
exports.createDecipher = exports.Decipher = createDecipher
exports.createDecipheriv = exports.Decipheriv = createDecipheriv
exports.listCiphers = exports.getCiphers = getCiphers


/***/ }),

/***/ "./node_modules/browserify-des/index.js":
/*!**********************************************!*\
  !*** ./node_modules/browserify-des/index.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var CipherBase = __webpack_require__(/*! cipher-base */ "./node_modules/cipher-base/index.js")
var des = __webpack_require__(/*! des.js */ "./node_modules/des.js/lib/des.js")
var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")
var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer

var modes = {
  'des-ede3-cbc': des.CBC.instantiate(des.EDE),
  'des-ede3': des.EDE,
  'des-ede-cbc': des.CBC.instantiate(des.EDE),
  'des-ede': des.EDE,
  'des-cbc': des.CBC.instantiate(des.DES),
  'des-ecb': des.DES
}
modes.des = modes['des-cbc']
modes.des3 = modes['des-ede3-cbc']
module.exports = DES
inherits(DES, CipherBase)
function DES (opts) {
  CipherBase.call(this)
  var modeName = opts.mode.toLowerCase()
  var mode = modes[modeName]
  var type
  if (opts.decrypt) {
    type = 'decrypt'
  } else {
    type = 'encrypt'
  }
  var key = opts.key
  if (!Buffer.isBuffer(key)) {
    key = Buffer.from(key)
  }
  if (modeName === 'des-ede' || modeName === 'des-ede-cbc') {
    key = Buffer.concat([key, key.slice(0, 8)])
  }
  var iv = opts.iv
  if (!Buffer.isBuffer(iv)) {
    iv = Buffer.from(iv)
  }
  this._des = mode.create({
    key: key,
    iv: iv,
    type: type
  })
}
DES.prototype._update = function (data) {
  return Buffer.from(this._des.update(data))
}
DES.prototype._final = function () {
  return Buffer.from(this._des.final())
}


/***/ }),

/***/ "./node_modules/browserify-des/modes.js":
/*!**********************************************!*\
  !*** ./node_modules/browserify-des/modes.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, exports) => {

exports["des-ecb"] = {
  key: 8,
  iv: 0
}
exports["des-cbc"] = exports.des = {
  key: 8,
  iv: 8
}
exports["des-ede3-cbc"] = exports.des3 = {
  key: 24,
  iv: 8
}
exports["des-ede3"] = {
  key: 24,
  iv: 0
}
exports["des-ede-cbc"] = {
  key: 16,
  iv: 8
}
exports["des-ede"] = {
  key: 16,
  iv: 0
}


/***/ }),

/***/ "./node_modules/browserify-rsa/index.js":
/*!**********************************************!*\
  !*** ./node_modules/browserify-rsa/index.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var BN = __webpack_require__(/*! bn.js */ "./node_modules/browserify-rsa/node_modules/bn.js/lib/bn.js")
var randomBytes = __webpack_require__(/*! randombytes */ "./node_modules/randombytes/browser.js")

function blind (priv) {
  var r = getr(priv)
  var blinder = r.toRed(BN.mont(priv.modulus)).redPow(new BN(priv.publicExponent)).fromRed()
  return { blinder: blinder, unblinder: r.invm(priv.modulus) }
}

function getr (priv) {
  var len = priv.modulus.byteLength()
  var r
  do {
    r = new BN(randomBytes(len))
  } while (r.cmp(priv.modulus) >= 0 || !r.umod(priv.prime1) || !r.umod(priv.prime2))
  return r
}

function crt (msg, priv) {
  var blinds = blind(priv)
  var len = priv.modulus.byteLength()
  var blinded = new BN(msg).mul(blinds.blinder).umod(priv.modulus)
  var c1 = blinded.toRed(BN.mont(priv.prime1))
  var c2 = blinded.toRed(BN.mont(priv.prime2))
  var qinv = priv.coefficient
  var p = priv.prime1
  var q = priv.prime2
  var m1 = c1.redPow(priv.exponent1).fromRed()
  var m2 = c2.redPow(priv.exponent2).fromRed()
  var h = m1.isub(m2).imul(qinv).umod(p).imul(q)
  return m2.iadd(h).imul(blinds.unblinder).umod(priv.modulus).toArrayLike(Buffer, 'be', len)
}
crt.getr = getr

module.exports = crt


/***/ }),

/***/ "./node_modules/browserify-rsa/node_modules/bn.js/lib/bn.js":
/*!******************************************************************!*\
  !*** ./node_modules/browserify-rsa/node_modules/bn.js/lib/bn.js ***!
  \******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

/* module decorator */ module = __webpack_require__.nmd(module);
(function (module, exports) {
  'use strict';

  // Utils
  function assert (val, msg) {
    if (!val) throw new Error(msg || 'Assertion failed');
  }

  // Could use `inherits` module, but don't want to move from single file
  // architecture yet.
  function inherits (ctor, superCtor) {
    ctor.super_ = superCtor;
    var TempCtor = function () {};
    TempCtor.prototype = superCtor.prototype;
    ctor.prototype = new TempCtor();
    ctor.prototype.constructor = ctor;
  }

  // BN

  function BN (number, base, endian) {
    if (BN.isBN(number)) {
      return number;
    }

    this.negative = 0;
    this.words = null;
    this.length = 0;

    // Reduction context
    this.red = null;

    if (number !== null) {
      if (base === 'le' || base === 'be') {
        endian = base;
        base = 10;
      }

      this._init(number || 0, base || 10, endian || 'be');
    }
  }
  if (typeof module === 'object') {
    module.exports = BN;
  } else {
    exports.BN = BN;
  }

  BN.BN = BN;
  BN.wordSize = 26;

  var Buffer;
  try {
    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {
      Buffer = window.Buffer;
    } else {
      Buffer = __webpack_require__(/*! buffer */ "?f9d4").Buffer;
    }
  } catch (e) {
  }

  BN.isBN = function isBN (num) {
    if (num instanceof BN) {
      return true;
    }

    return num !== null && typeof num === 'object' &&
      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);
  };

  BN.max = function max (left, right) {
    if (left.cmp(right) > 0) return left;
    return right;
  };

  BN.min = function min (left, right) {
    if (left.cmp(right) < 0) return left;
    return right;
  };

  BN.prototype._init = function init (number, base, endian) {
    if (typeof number === 'number') {
      return this._initNumber(number, base, endian);
    }

    if (typeof number === 'object') {
      return this._initArray(number, base, endian);
    }

    if (base === 'hex') {
      base = 16;
    }
    assert(base === (base | 0) && base >= 2 && base <= 36);

    number = number.toString().replace(/\s+/g, '');
    var start = 0;
    if (number[0] === '-') {
      start++;
      this.negative = 1;
    }

    if (start < number.length) {
      if (base === 16) {
        this._parseHex(number, start, endian);
      } else {
        this._parseBase(number, base, start);
        if (endian === 'le') {
          this._initArray(this.toArray(), base, endian);
        }
      }
    }
  };

  BN.prototype._initNumber = function _initNumber (number, base, endian) {
    if (number < 0) {
      this.negative = 1;
      number = -number;
    }
    if (number < 0x4000000) {
      this.words = [number & 0x3ffffff];
      this.length = 1;
    } else if (number < 0x10000000000000) {
      this.words = [
        number & 0x3ffffff,
        (number / 0x4000000) & 0x3ffffff
      ];
      this.length = 2;
    } else {
      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)
      this.words = [
        number & 0x3ffffff,
        (number / 0x4000000) & 0x3ffffff,
        1
      ];
      this.length = 3;
    }

    if (endian !== 'le') return;

    // Reverse the bytes
    this._initArray(this.toArray(), base, endian);
  };

  BN.prototype._initArray = function _initArray (number, base, endian) {
    // Perhaps a Uint8Array
    assert(typeof number.length === 'number');
    if (number.length <= 0) {
      this.words = [0];
      this.length = 1;
      return this;
    }

    this.length = Math.ceil(number.length / 3);
    this.words = new Array(this.length);
    for (var i = 0; i < this.length; i++) {
      this.words[i] = 0;
    }

    var j, w;
    var off = 0;
    if (endian === 'be') {
      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {
        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);
        this.words[j] |= (w << off) & 0x3ffffff;
        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;
        off += 24;
        if (off >= 26) {
          off -= 26;
          j++;
        }
      }
    } else if (endian === 'le') {
      for (i = 0, j = 0; i < number.length; i += 3) {
        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);
        this.words[j] |= (w << off) & 0x3ffffff;
        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;
        off += 24;
        if (off >= 26) {
          off -= 26;
          j++;
        }
      }
    }
    return this._strip();
  };

  function parseHex4Bits (string, index) {
    var c = string.charCodeAt(index);
    // '0' - '9'
    if (c >= 48 && c <= 57) {
      return c - 48;
    // 'A' - 'F'
    } else if (c >= 65 && c <= 70) {
      return c - 55;
    // 'a' - 'f'
    } else if (c >= 97 && c <= 102) {
      return c - 87;
    } else {
      assert(false, 'Invalid character in ' + string);
    }
  }

  function parseHexByte (string, lowerBound, index) {
    var r = parseHex4Bits(string, index);
    if (index - 1 >= lowerBound) {
      r |= parseHex4Bits(string, index - 1) << 4;
    }
    return r;
  }

  BN.prototype._parseHex = function _parseHex (number, start, endian) {
    // Create possibly bigger array to ensure that it fits the number
    this.length = Math.ceil((number.length - start) / 6);
    this.words = new Array(this.length);
    for (var i = 0; i < this.length; i++) {
      this.words[i] = 0;
    }

    // 24-bits chunks
    var off = 0;
    var j = 0;

    var w;
    if (endian === 'be') {
      for (i = number.length - 1; i >= start; i -= 2) {
        w = parseHexByte(number, start, i) << off;
        this.words[j] |= w & 0x3ffffff;
        if (off >= 18) {
          off -= 18;
          j += 1;
          this.words[j] |= w >>> 26;
        } else {
          off += 8;
        }
      }
    } else {
      var parseLength = number.length - start;
      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {
        w = parseHexByte(number, start, i) << off;
        this.words[j] |= w & 0x3ffffff;
        if (off >= 18) {
          off -= 18;
          j += 1;
          this.words[j] |= w >>> 26;
        } else {
          off += 8;
        }
      }
    }

    this._strip();
  };

  function parseBase (str, start, end, mul) {
    var r = 0;
    var b = 0;
    var len = Math.min(str.length, end);
    for (var i = start; i < len; i++) {
      var c = str.charCodeAt(i) - 48;

      r *= mul;

      // 'a'
      if (c >= 49) {
        b = c - 49 + 0xa;

      // 'A'
      } else if (c >= 17) {
        b = c - 17 + 0xa;

      // '0' - '9'
      } else {
        b = c;
      }
      assert(c >= 0 && b < mul, 'Invalid character');
      r += b;
    }
    return r;
  }

  BN.prototype._parseBase = function _parseBase (number, base, start) {
    // Initialize as zero
    this.words = [0];
    this.length = 1;

    // Find length of limb in base
    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {
      limbLen++;
    }
    limbLen--;
    limbPow = (limbPow / base) | 0;

    var total = number.length - start;
    var mod = total % limbLen;
    var end = Math.min(total, total - mod) + start;

    var word = 0;
    for (var i = start; i < end; i += limbLen) {
      word = parseBase(number, i, i + limbLen, base);

      this.imuln(limbPow);
      if (this.words[0] + word < 0x4000000) {
        this.words[0] += word;
      } else {
        this._iaddn(word);
      }
    }

    if (mod !== 0) {
      var pow = 1;
      word = parseBase(number, i, number.length, base);

      for (i = 0; i < mod; i++) {
        pow *= base;
      }

      this.imuln(pow);
      if (this.words[0] + word < 0x4000000) {
        this.words[0] += word;
      } else {
        this._iaddn(word);
      }
    }

    this._strip();
  };

  BN.prototype.copy = function copy (dest) {
    dest.words = new Array(this.length);
    for (var i = 0; i < this.length; i++) {
      dest.words[i] = this.words[i];
    }
    dest.length = this.length;
    dest.negative = this.negative;
    dest.red = this.red;
  };

  function move (dest, src) {
    dest.words = src.words;
    dest.length = src.length;
    dest.negative = src.negative;
    dest.red = src.red;
  }

  BN.prototype._move = function _move (dest) {
    move(dest, this);
  };

  BN.prototype.clone = function clone () {
    var r = new BN(null);
    this.copy(r);
    return r;
  };

  BN.prototype._expand = function _expand (size) {
    while (this.length < size) {
      this.words[this.length++] = 0;
    }
    return this;
  };

  // Remove leading `0` from `this`
  BN.prototype._strip = function strip () {
    while (this.length > 1 && this.words[this.length - 1] === 0) {
      this.length--;
    }
    return this._normSign();
  };

  BN.prototype._normSign = function _normSign () {
    // -0 = 0
    if (this.length === 1 && this.words[0] === 0) {
      this.negative = 0;
    }
    return this;
  };

  // Check Symbol.for because not everywhere where Symbol defined
  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility
  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {
    try {
      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;
    } catch (e) {
      BN.prototype.inspect = inspect;
    }
  } else {
    BN.prototype.inspect = inspect;
  }

  function inspect () {
    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';
  }

  /*

  var zeros = [];
  var groupSizes = [];
  var groupBases = [];

  var s = '';
  var i = -1;
  while (++i < BN.wordSize) {
    zeros[i] = s;
    s += '0';
  }
  groupSizes[0] = 0;
  groupSizes[1] = 0;
  groupBases[0] = 0;
  groupBases[1] = 0;
  var base = 2 - 1;
  while (++base < 36 + 1) {
    var groupSize = 0;
    var groupBase = 1;
    while (groupBase < (1 << BN.wordSize) / base) {
      groupBase *= base;
      groupSize += 1;
    }
    groupSizes[base] = groupSize;
    groupBases[base] = groupBase;
  }

  */

  var zeros = [
    '',
    '0',
    '00',
    '000',
    '0000',
    '00000',
    '000000',
    '0000000',
    '00000000',
    '000000000',
    '0000000000',
    '00000000000',
    '000000000000',
    '0000000000000',
    '00000000000000',
    '000000000000000',
    '0000000000000000',
    '00000000000000000',
    '000000000000000000',
    '0000000000000000000',
    '00000000000000000000',
    '000000000000000000000',
    '0000000000000000000000',
    '00000000000000000000000',
    '000000000000000000000000',
    '0000000000000000000000000'
  ];

  var groupSizes = [
    0, 0,
    25, 16, 12, 11, 10, 9, 8,
    8, 7, 7, 7, 7, 6, 6,
    6, 6, 6, 6, 6, 5, 5,
    5, 5, 5, 5, 5, 5, 5,
    5, 5, 5, 5, 5, 5, 5
  ];

  var groupBases = [
    0, 0,
    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,
    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,
    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,
    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,
    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176
  ];

  BN.prototype.toString = function toString (base, padding) {
    base = base || 10;
    padding = padding | 0 || 1;

    var out;
    if (base === 16 || base === 'hex') {
      out = '';
      var off = 0;
      var carry = 0;
      for (var i = 0; i < this.length; i++) {
        var w = this.words[i];
        var word = (((w << off) | carry) & 0xffffff).toString(16);
        carry = (w >>> (24 - off)) & 0xffffff;
        if (carry !== 0 || i !== this.length - 1) {
          out = zeros[6 - word.length] + word + out;
        } else {
          out = word + out;
        }
        off += 2;
        if (off >= 26) {
          off -= 26;
          i--;
        }
      }
      if (carry !== 0) {
        out = carry.toString(16) + out;
      }
      while (out.length % padding !== 0) {
        out = '0' + out;
      }
      if (this.negative !== 0) {
        out = '-' + out;
      }
      return out;
    }

    if (base === (base | 0) && base >= 2 && base <= 36) {
      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));
      var groupSize = groupSizes[base];
      // var groupBase = Math.pow(base, groupSize);
      var groupBase = groupBases[base];
      out = '';
      var c = this.clone();
      c.negative = 0;
      while (!c.isZero()) {
        var r = c.modrn(groupBase).toString(base);
        c = c.idivn(groupBase);

        if (!c.isZero()) {
          out = zeros[groupSize - r.length] + r + out;
        } else {
          out = r + out;
        }
      }
      if (this.isZero()) {
        out = '0' + out;
      }
      while (out.length % padding !== 0) {
        out = '0' + out;
      }
      if (this.negative !== 0) {
        out = '-' + out;
      }
      return out;
    }

    assert(false, 'Base should be between 2 and 36');
  };

  BN.prototype.toNumber = function toNumber () {
    var ret = this.words[0];
    if (this.length === 2) {
      ret += this.words[1] * 0x4000000;
    } else if (this.length === 3 && this.words[2] === 0x01) {
      // NOTE: at this stage it is known that the top bit is set
      ret += 0x10000000000000 + (this.words[1] * 0x4000000);
    } else if (this.length > 2) {
      assert(false, 'Number can only safely store up to 53 bits');
    }
    return (this.negative !== 0) ? -ret : ret;
  };

  BN.prototype.toJSON = function toJSON () {
    return this.toString(16, 2);
  };

  if (Buffer) {
    BN.prototype.toBuffer = function toBuffer (endian, length) {
      return this.toArrayLike(Buffer, endian, length);
    };
  }

  BN.prototype.toArray = function toArray (endian, length) {
    return this.toArrayLike(Array, endian, length);
  };

  var allocate = function allocate (ArrayType, size) {
    if (ArrayType.allocUnsafe) {
      return ArrayType.allocUnsafe(size);
    }
    return new ArrayType(size);
  };

  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {
    this._strip();

    var byteLength = this.byteLength();
    var reqLength = length || Math.max(1, byteLength);
    assert(byteLength <= reqLength, 'byte array longer than desired length');
    assert(reqLength > 0, 'Requested array length <= 0');

    var res = allocate(ArrayType, reqLength);
    var postfix = endian === 'le' ? 'LE' : 'BE';
    this['_toArrayLike' + postfix](res, byteLength);
    return res;
  };

  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {
    var position = 0;
    var carry = 0;

    for (var i = 0, shift = 0; i < this.length; i++) {
      var word = (this.words[i] << shift) | carry;

      res[position++] = word & 0xff;
      if (position < res.length) {
        res[position++] = (word >> 8) & 0xff;
      }
      if (position < res.length) {
        res[position++] = (word >> 16) & 0xff;
      }

      if (shift === 6) {
        if (position < res.length) {
          res[position++] = (word >> 24) & 0xff;
        }
        carry = 0;
        shift = 0;
      } else {
        carry = word >>> 24;
        shift += 2;
      }
    }

    if (position < res.length) {
      res[position++] = carry;

      while (position < res.length) {
        res[position++] = 0;
      }
    }
  };

  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {
    var position = res.length - 1;
    var carry = 0;

    for (var i = 0, shift = 0; i < this.length; i++) {
      var word = (this.words[i] << shift) | carry;

      res[position--] = word & 0xff;
      if (position >= 0) {
        res[position--] = (word >> 8) & 0xff;
      }
      if (position >= 0) {
        res[position--] = (word >> 16) & 0xff;
      }

      if (shift === 6) {
        if (position >= 0) {
          res[position--] = (word >> 24) & 0xff;
        }
        carry = 0;
        shift = 0;
      } else {
        carry = word >>> 24;
        shift += 2;
      }
    }

    if (position >= 0) {
      res[position--] = carry;

      while (position >= 0) {
        res[position--] = 0;
      }
    }
  };

  if (Math.clz32) {
    BN.prototype._countBits = function _countBits (w) {
      return 32 - Math.clz32(w);
    };
  } else {
    BN.prototype._countBits = function _countBits (w) {
      var t = w;
      var r = 0;
      if (t >= 0x1000) {
        r += 13;
        t >>>= 13;
      }
      if (t >= 0x40) {
        r += 7;
        t >>>= 7;
      }
      if (t >= 0x8) {
        r += 4;
        t >>>= 4;
      }
      if (t >= 0x02) {
        r += 2;
        t >>>= 2;
      }
      return r + t;
    };
  }

  BN.prototype._zeroBits = function _zeroBits (w) {
    // Short-cut
    if (w === 0) return 26;

    var t = w;
    var r = 0;
    if ((t & 0x1fff) === 0) {
      r += 13;
      t >>>= 13;
    }
    if ((t & 0x7f) === 0) {
      r += 7;
      t >>>= 7;
    }
    if ((t & 0xf) === 0) {
      r += 4;
      t >>>= 4;
    }
    if ((t & 0x3) === 0) {
      r += 2;
      t >>>= 2;
    }
    if ((t & 0x1) === 0) {
      r++;
    }
    return r;
  };

  // Return number of used bits in a BN
  BN.prototype.bitLength = function bitLength () {
    var w = this.words[this.length - 1];
    var hi = this._countBits(w);
    return (this.length - 1) * 26 + hi;
  };

  function toBitArray (num) {
    var w = new Array(num.bitLength());

    for (var bit = 0; bit < w.length; bit++) {
      var off = (bit / 26) | 0;
      var wbit = bit % 26;

      w[bit] = (num.words[off] >>> wbit) & 0x01;
    }

    return w;
  }

  // Number of trailing zero bits
  BN.prototype.zeroBits = function zeroBits () {
    if (this.isZero()) return 0;

    var r = 0;
    for (var i = 0; i < this.length; i++) {
      var b = this._zeroBits(this.words[i]);
      r += b;
      if (b !== 26) break;
    }
    return r;
  };

  BN.prototype.byteLength = function byteLength () {
    return Math.ceil(this.bitLength() / 8);
  };

  BN.prototype.toTwos = function toTwos (width) {
    if (this.negative !== 0) {
      return this.abs().inotn(width).iaddn(1);
    }
    return this.clone();
  };

  BN.prototype.fromTwos = function fromTwos (width) {
    if (this.testn(width - 1)) {
      return this.notn(width).iaddn(1).ineg();
    }
    return this.clone();
  };

  BN.prototype.isNeg = function isNeg () {
    return this.negative !== 0;
  };

  // Return negative clone of `this`
  BN.prototype.neg = function neg () {
    return this.clone().ineg();
  };

  BN.prototype.ineg = function ineg () {
    if (!this.isZero()) {
      this.negative ^= 1;
    }

    return this;
  };

  // Or `num` with `this` in-place
  BN.prototype.iuor = function iuor (num) {
    while (this.length < num.length) {
      this.words[this.length++] = 0;
    }

    for (var i = 0; i < num.length; i++) {
      this.words[i] = this.words[i] | num.words[i];
    }

    return this._strip();
  };

  BN.prototype.ior = function ior (num) {
    assert((this.negative | num.negative) === 0);
    return this.iuor(num);
  };

  // Or `num` with `this`
  BN.prototype.or = function or (num) {
    if (this.length > num.length) return this.clone().ior(num);
    return num.clone().ior(this);
  };

  BN.prototype.uor = function uor (num) {
    if (this.length > num.length) return this.clone().iuor(num);
    return num.clone().iuor(this);
  };

  // And `num` with `this` in-place
  BN.prototype.iuand = function iuand (num) {
    // b = min-length(num, this)
    var b;
    if (this.length > num.length) {
      b = num;
    } else {
      b = this;
    }

    for (var i = 0; i < b.length; i++) {
      this.words[i] = this.words[i] & num.words[i];
    }

    this.length = b.length;

    return this._strip();
  };

  BN.prototype.iand = function iand (num) {
    assert((this.negative | num.negative) === 0);
    return this.iuand(num);
  };

  // And `num` with `this`
  BN.prototype.and = function and (num) {
    if (this.length > num.length) return this.clone().iand(num);
    return num.clone().iand(this);
  };

  BN.prototype.uand = function uand (num) {
    if (this.length > num.length) return this.clone().iuand(num);
    return num.clone().iuand(this);
  };

  // Xor `num` with `this` in-place
  BN.prototype.iuxor = function iuxor (num) {
    // a.length > b.length
    var a;
    var b;
    if (this.length > num.length) {
      a = this;
      b = num;
    } else {
      a = num;
      b = this;
    }

    for (var i = 0; i < b.length; i++) {
      this.words[i] = a.words[i] ^ b.words[i];
    }

    if (this !== a) {
      for (; i < a.length; i++) {
        this.words[i] = a.words[i];
      }
    }

    this.length = a.length;

    return this._strip();
  };

  BN.prototype.ixor = function ixor (num) {
    assert((this.negative | num.negative) === 0);
    return this.iuxor(num);
  };

  // Xor `num` with `this`
  BN.prototype.xor = function xor (num) {
    if (this.length > num.length) return this.clone().ixor(num);
    return num.clone().ixor(this);
  };

  BN.prototype.uxor = function uxor (num) {
    if (this.length > num.length) return this.clone().iuxor(num);
    return num.clone().iuxor(this);
  };

  // Not ``this`` with ``width`` bitwidth
  BN.prototype.inotn = function inotn (width) {
    assert(typeof width === 'number' && width >= 0);

    var bytesNeeded = Math.ceil(width / 26) | 0;
    var bitsLeft = width % 26;

    // Extend the buffer with leading zeroes
    this._expand(bytesNeeded);

    if (bitsLeft > 0) {
      bytesNeeded--;
    }

    // Handle complete words
    for (var i = 0; i < bytesNeeded; i++) {
      this.words[i] = ~this.words[i] & 0x3ffffff;
    }

    // Handle the residue
    if (bitsLeft > 0) {
      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));
    }

    // And remove leading zeroes
    return this._strip();
  };

  BN.prototype.notn = function notn (width) {
    return this.clone().inotn(width);
  };

  // Set `bit` of `this`
  BN.prototype.setn = function setn (bit, val) {
    assert(typeof bit === 'number' && bit >= 0);

    var off = (bit / 26) | 0;
    var wbit = bit % 26;

    this._expand(off + 1);

    if (val) {
      this.words[off] = this.words[off] | (1 << wbit);
    } else {
      this.words[off] = this.words[off] & ~(1 << wbit);
    }

    return this._strip();
  };

  // Add `num` to `this` in-place
  BN.prototype.iadd = function iadd (num) {
    var r;

    // negative + positive
    if (this.negative !== 0 && num.negative === 0) {
      this.negative = 0;
      r = this.isub(num);
      this.negative ^= 1;
      return this._normSign();

    // positive + negative
    } else if (this.negative === 0 && num.negative !== 0) {
      num.negative = 0;
      r = this.isub(num);
      num.negative = 1;
      return r._normSign();
    }

    // a.length > b.length
    var a, b;
    if (this.length > num.length) {
      a = this;
      b = num;
    } else {
      a = num;
      b = this;
    }

    var carry = 0;
    for (var i = 0; i < b.length; i++) {
      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;
      this.words[i] = r & 0x3ffffff;
      carry = r >>> 26;
    }
    for (; carry !== 0 && i < a.length; i++) {
      r = (a.words[i] | 0) + carry;
      this.words[i] = r & 0x3ffffff;
      carry = r >>> 26;
    }

    this.length = a.length;
    if (carry !== 0) {
      this.words[this.length] = carry;
      this.length++;
    // Copy the rest of the words
    } else if (a !== this) {
      for (; i < a.length; i++) {
        this.words[i] = a.words[i];
      }
    }

    return this;
  };

  // Add `num` to `this`
  BN.prototype.add = function add (num) {
    var res;
    if (num.negative !== 0 && this.negative === 0) {
      num.negative = 0;
      res = this.sub(num);
      num.negative ^= 1;
      return res;
    } else if (num.negative === 0 && this.negative !== 0) {
      this.negative = 0;
      res = num.sub(this);
      this.negative = 1;
      return res;
    }

    if (this.length > num.length) return this.clone().iadd(num);

    return num.clone().iadd(this);
  };

  // Subtract `num` from `this` in-place
  BN.prototype.isub = function isub (num) {
    // this - (-num) = this + num
    if (num.negative !== 0) {
      num.negative = 0;
      var r = this.iadd(num);
      num.negative = 1;
      return r._normSign();

    // -this - num = -(this + num)
    } else if (this.negative !== 0) {
      this.negative = 0;
      this.iadd(num);
      this.negative = 1;
      return this._normSign();
    }

    // At this point both numbers are positive
    var cmp = this.cmp(num);

    // Optimization - zeroify
    if (cmp === 0) {
      this.negative = 0;
      this.length = 1;
      this.words[0] = 0;
      return this;
    }

    // a > b
    var a, b;
    if (cmp > 0) {
      a = this;
      b = num;
    } else {
      a = num;
      b = this;
    }

    var carry = 0;
    for (var i = 0; i < b.length; i++) {
      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;
      carry = r >> 26;
      this.words[i] = r & 0x3ffffff;
    }
    for (; carry !== 0 && i < a.length; i++) {
      r = (a.words[i] | 0) + carry;
      carry = r >> 26;
      this.words[i] = r & 0x3ffffff;
    }

    // Copy rest of the words
    if (carry === 0 && i < a.length && a !== this) {
      for (; i < a.length; i++) {
        this.words[i] = a.words[i];
      }
    }

    this.length = Math.max(this.length, i);

    if (a !== this) {
      this.negative = 1;
    }

    return this._strip();
  };

  // Subtract `num` from `this`
  BN.prototype.sub = function sub (num) {
    return this.clone().isub(num);
  };

  function smallMulTo (self, num, out) {
    out.negative = num.negative ^ self.negative;
    var len = (self.length + num.length) | 0;
    out.length = len;
    len = (len - 1) | 0;

    // Peel one iteration (compiler can't do it, because of code complexity)
    var a = self.words[0] | 0;
    var b = num.words[0] | 0;
    var r = a * b;

    var lo = r & 0x3ffffff;
    var carry = (r / 0x4000000) | 0;
    out.words[0] = lo;

    for (var k = 1; k < len; k++) {
      // Sum all words with the same `i + j = k` and accumulate `ncarry`,
      // note that ncarry could be >= 0x3ffffff
      var ncarry = carry >>> 26;
      var rword = carry & 0x3ffffff;
      var maxJ = Math.min(k, num.length - 1);
      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
        var i = (k - j) | 0;
        a = self.words[i] | 0;
        b = num.words[j] | 0;
        r = a * b + rword;
        ncarry += (r / 0x4000000) | 0;
        rword = r & 0x3ffffff;
      }
      out.words[k] = rword | 0;
      carry = ncarry | 0;
    }
    if (carry !== 0) {
      out.words[k] = carry | 0;
    } else {
      out.length--;
    }

    return out._strip();
  }

  // TODO(indutny): it may be reasonable to omit it for users who don't need
  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit
  // multiplication (like elliptic secp256k1).
  var comb10MulTo = function comb10MulTo (self, num, out) {
    var a = self.words;
    var b = num.words;
    var o = out.words;
    var c = 0;
    var lo;
    var mid;
    var hi;
    var a0 = a[0] | 0;
    var al0 = a0 & 0x1fff;
    var ah0 = a0 >>> 13;
    var a1 = a[1] | 0;
    var al1 = a1 & 0x1fff;
    var ah1 = a1 >>> 13;
    var a2 = a[2] | 0;
    var al2 = a2 & 0x1fff;
    var ah2 = a2 >>> 13;
    var a3 = a[3] | 0;
    var al3 = a3 & 0x1fff;
    var ah3 = a3 >>> 13;
    var a4 = a[4] | 0;
    var al4 = a4 & 0x1fff;
    var ah4 = a4 >>> 13;
    var a5 = a[5] | 0;
    var al5 = a5 & 0x1fff;
    var ah5 = a5 >>> 13;
    var a6 = a[6] | 0;
    var al6 = a6 & 0x1fff;
    var ah6 = a6 >>> 13;
    var a7 = a[7] | 0;
    var al7 = a7 & 0x1fff;
    var ah7 = a7 >>> 13;
    var a8 = a[8] | 0;
    var al8 = a8 & 0x1fff;
    var ah8 = a8 >>> 13;
    var a9 = a[9] | 0;
    var al9 = a9 & 0x1fff;
    var ah9 = a9 >>> 13;
    var b0 = b[0] | 0;
    var bl0 = b0 & 0x1fff;
    var bh0 = b0 >>> 13;
    var b1 = b[1] | 0;
    var bl1 = b1 & 0x1fff;
    var bh1 = b1 >>> 13;
    var b2 = b[2] | 0;
    var bl2 = b2 & 0x1fff;
    var bh2 = b2 >>> 13;
    var b3 = b[3] | 0;
    var bl3 = b3 & 0x1fff;
    var bh3 = b3 >>> 13;
    var b4 = b[4] | 0;
    var bl4 = b4 & 0x1fff;
    var bh4 = b4 >>> 13;
    var b5 = b[5] | 0;
    var bl5 = b5 & 0x1fff;
    var bh5 = b5 >>> 13;
    var b6 = b[6] | 0;
    var bl6 = b6 & 0x1fff;
    var bh6 = b6 >>> 13;
    var b7 = b[7] | 0;
    var bl7 = b7 & 0x1fff;
    var bh7 = b7 >>> 13;
    var b8 = b[8] | 0;
    var bl8 = b8 & 0x1fff;
    var bh8 = b8 >>> 13;
    var b9 = b[9] | 0;
    var bl9 = b9 & 0x1fff;
    var bh9 = b9 >>> 13;

    out.negative = self.negative ^ num.negative;
    out.length = 19;
    /* k = 0 */
    lo = Math.imul(al0, bl0);
    mid = Math.imul(al0, bh0);
    mid = (mid + Math.imul(ah0, bl0)) | 0;
    hi = Math.imul(ah0, bh0);
    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;
    w0 &= 0x3ffffff;
    /* k = 1 */
    lo = Math.imul(al1, bl0);
    mid = Math.imul(al1, bh0);
    mid = (mid + Math.imul(ah1, bl0)) | 0;
    hi = Math.imul(ah1, bh0);
    lo = (lo + Math.imul(al0, bl1)) | 0;
    mid = (mid + Math.imul(al0, bh1)) | 0;
    mid = (mid + Math.imul(ah0, bl1)) | 0;
    hi = (hi + Math.imul(ah0, bh1)) | 0;
    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;
    w1 &= 0x3ffffff;
    /* k = 2 */
    lo = Math.imul(al2, bl0);
    mid = Math.imul(al2, bh0);
    mid = (mid + Math.imul(ah2, bl0)) | 0;
    hi = Math.imul(ah2, bh0);
    lo = (lo + Math.imul(al1, bl1)) | 0;
    mid = (mid + Math.imul(al1, bh1)) | 0;
    mid = (mid + Math.imul(ah1, bl1)) | 0;
    hi = (hi + Math.imul(ah1, bh1)) | 0;
    lo = (lo + Math.imul(al0, bl2)) | 0;
    mid = (mid + Math.imul(al0, bh2)) | 0;
    mid = (mid + Math.imul(ah0, bl2)) | 0;
    hi = (hi + Math.imul(ah0, bh2)) | 0;
    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;
    w2 &= 0x3ffffff;
    /* k = 3 */
    lo = Math.imul(al3, bl0);
    mid = Math.imul(al3, bh0);
    mid = (mid + Math.imul(ah3, bl0)) | 0;
    hi = Math.imul(ah3, bh0);
    lo = (lo + Math.imul(al2, bl1)) | 0;
    mid = (mid + Math.imul(al2, bh1)) | 0;
    mid = (mid + Math.imul(ah2, bl1)) | 0;
    hi = (hi + Math.imul(ah2, bh1)) | 0;
    lo = (lo + Math.imul(al1, bl2)) | 0;
    mid = (mid + Math.imul(al1, bh2)) | 0;
    mid = (mid + Math.imul(ah1, bl2)) | 0;
    hi = (hi + Math.imul(ah1, bh2)) | 0;
    lo = (lo + Math.imul(al0, bl3)) | 0;
    mid = (mid + Math.imul(al0, bh3)) | 0;
    mid = (mid + Math.imul(ah0, bl3)) | 0;
    hi = (hi + Math.imul(ah0, bh3)) | 0;
    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;
    w3 &= 0x3ffffff;
    /* k = 4 */
    lo = Math.imul(al4, bl0);
    mid = Math.imul(al4, bh0);
    mid = (mid + Math.imul(ah4, bl0)) | 0;
    hi = Math.imul(ah4, bh0);
    lo = (lo + Math.imul(al3, bl1)) | 0;
    mid = (mid + Math.imul(al3, bh1)) | 0;
    mid = (mid + Math.imul(ah3, bl1)) | 0;
    hi = (hi + Math.imul(ah3, bh1)) | 0;
    lo = (lo + Math.imul(al2, bl2)) | 0;
    mid = (mid + Math.imul(al2, bh2)) | 0;
    mid = (mid + Math.imul(ah2, bl2)) | 0;
    hi = (hi + Math.imul(ah2, bh2)) | 0;
    lo = (lo + Math.imul(al1, bl3)) | 0;
    mid = (mid + Math.imul(al1, bh3)) | 0;
    mid = (mid + Math.imul(ah1, bl3)) | 0;
    hi = (hi + Math.imul(ah1, bh3)) | 0;
    lo = (lo + Math.imul(al0, bl4)) | 0;
    mid = (mid + Math.imul(al0, bh4)) | 0;
    mid = (mid + Math.imul(ah0, bl4)) | 0;
    hi = (hi + Math.imul(ah0, bh4)) | 0;
    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;
    w4 &= 0x3ffffff;
    /* k = 5 */
    lo = Math.imul(al5, bl0);
    mid = Math.imul(al5, bh0);
    mid = (mid + Math.imul(ah5, bl0)) | 0;
    hi = Math.imul(ah5, bh0);
    lo = (lo + Math.imul(al4, bl1)) | 0;
    mid = (mid + Math.imul(al4, bh1)) | 0;
    mid = (mid + Math.imul(ah4, bl1)) | 0;
    hi = (hi + Math.imul(ah4, bh1)) | 0;
    lo = (lo + Math.imul(al3, bl2)) | 0;
    mid = (mid + Math.imul(al3, bh2)) | 0;
    mid = (mid + Math.imul(ah3, bl2)) | 0;
    hi = (hi + Math.imul(ah3, bh2)) | 0;
    lo = (lo + Math.imul(al2, bl3)) | 0;
    mid = (mid + Math.imul(al2, bh3)) | 0;
    mid = (mid + Math.imul(ah2, bl3)) | 0;
    hi = (hi + Math.imul(ah2, bh3)) | 0;
    lo = (lo + Math.imul(al1, bl4)) | 0;
    mid = (mid + Math.imul(al1, bh4)) | 0;
    mid = (mid + Math.imul(ah1, bl4)) | 0;
    hi = (hi + Math.imul(ah1, bh4)) | 0;
    lo = (lo + Math.imul(al0, bl5)) | 0;
    mid = (mid + Math.imul(al0, bh5)) | 0;
    mid = (mid + Math.imul(ah0, bl5)) | 0;
    hi = (hi + Math.imul(ah0, bh5)) | 0;
    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;
    w5 &= 0x3ffffff;
    /* k = 6 */
    lo = Math.imul(al6, bl0);
    mid = Math.imul(al6, bh0);
    mid = (mid + Math.imul(ah6, bl0)) | 0;
    hi = Math.imul(ah6, bh0);
    lo = (lo + Math.imul(al5, bl1)) | 0;
    mid = (mid + Math.imul(al5, bh1)) | 0;
    mid = (mid + Math.imul(ah5, bl1)) | 0;
    hi = (hi + Math.imul(ah5, bh1)) | 0;
    lo = (lo + Math.imul(al4, bl2)) | 0;
    mid = (mid + Math.imul(al4, bh2)) | 0;
    mid = (mid + Math.imul(ah4, bl2)) | 0;
    hi = (hi + Math.imul(ah4, bh2)) | 0;
    lo = (lo + Math.imul(al3, bl3)) | 0;
    mid = (mid + Math.imul(al3, bh3)) | 0;
    mid = (mid + Math.imul(ah3, bl3)) | 0;
    hi = (hi + Math.imul(ah3, bh3)) | 0;
    lo = (lo + Math.imul(al2, bl4)) | 0;
    mid = (mid + Math.imul(al2, bh4)) | 0;
    mid = (mid + Math.imul(ah2, bl4)) | 0;
    hi = (hi + Math.imul(ah2, bh4)) | 0;
    lo = (lo + Math.imul(al1, bl5)) | 0;
    mid = (mid + Math.imul(al1, bh5)) | 0;
    mid = (mid + Math.imul(ah1, bl5)) | 0;
    hi = (hi + Math.imul(ah1, bh5)) | 0;
    lo = (lo + Math.imul(al0, bl6)) | 0;
    mid = (mid + Math.imul(al0, bh6)) | 0;
    mid = (mid + Math.imul(ah0, bl6)) | 0;
    hi = (hi + Math.imul(ah0, bh6)) | 0;
    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;
    w6 &= 0x3ffffff;
    /* k = 7 */
    lo = Math.imul(al7, bl0);
    mid = Math.imul(al7, bh0);
    mid = (mid + Math.imul(ah7, bl0)) | 0;
    hi = Math.imul(ah7, bh0);
    lo = (lo + Math.imul(al6, bl1)) | 0;
    mid = (mid + Math.imul(al6, bh1)) | 0;
    mid = (mid + Math.imul(ah6, bl1)) | 0;
    hi = (hi + Math.imul(ah6, bh1)) | 0;
    lo = (lo + Math.imul(al5, bl2)) | 0;
    mid = (mid + Math.imul(al5, bh2)) | 0;
    mid = (mid + Math.imul(ah5, bl2)) | 0;
    hi = (hi + Math.imul(ah5, bh2)) | 0;
    lo = (lo + Math.imul(al4, bl3)) | 0;
    mid = (mid + Math.imul(al4, bh3)) | 0;
    mid = (mid + Math.imul(ah4, bl3)) | 0;
    hi = (hi + Math.imul(ah4, bh3)) | 0;
    lo = (lo + Math.imul(al3, bl4)) | 0;
    mid = (mid + Math.imul(al3, bh4)) | 0;
    mid = (mid + Math.imul(ah3, bl4)) | 0;
    hi = (hi + Math.imul(ah3, bh4)) | 0;
    lo = (lo + Math.imul(al2, bl5)) | 0;
    mid = (mid + Math.imul(al2, bh5)) | 0;
    mid = (mid + Math.imul(ah2, bl5)) | 0;
    hi = (hi + Math.imul(ah2, bh5)) | 0;
    lo = (lo + Math.imul(al1, bl6)) | 0;
    mid = (mid + Math.imul(al1, bh6)) | 0;
    mid = (mid + Math.imul(ah1, bl6)) | 0;
    hi = (hi + Math.imul(ah1, bh6)) | 0;
    lo = (lo + Math.imul(al0, bl7)) | 0;
    mid = (mid + Math.imul(al0, bh7)) | 0;
    mid = (mid + Math.imul(ah0, bl7)) | 0;
    hi = (hi + Math.imul(ah0, bh7)) | 0;
    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;
    w7 &= 0x3ffffff;
    /* k = 8 */
    lo = Math.imul(al8, bl0);
    mid = Math.imul(al8, bh0);
    mid = (mid + Math.imul(ah8, bl0)) | 0;
    hi = Math.imul(ah8, bh0);
    lo = (lo + Math.imul(al7, bl1)) | 0;
    mid = (mid + Math.imul(al7, bh1)) | 0;
    mid = (mid + Math.imul(ah7, bl1)) | 0;
    hi = (hi + Math.imul(ah7, bh1)) | 0;
    lo = (lo + Math.imul(al6, bl2)) | 0;
    mid = (mid + Math.imul(al6, bh2)) | 0;
    mid = (mid + Math.imul(ah6, bl2)) | 0;
    hi = (hi + Math.imul(ah6, bh2)) | 0;
    lo = (lo + Math.imul(al5, bl3)) | 0;
    mid = (mid + Math.imul(al5, bh3)) | 0;
    mid = (mid + Math.imul(ah5, bl3)) | 0;
    hi = (hi + Math.imul(ah5, bh3)) | 0;
    lo = (lo + Math.imul(al4, bl4)) | 0;
    mid = (mid + Math.imul(al4, bh4)) | 0;
    mid = (mid + Math.imul(ah4, bl4)) | 0;
    hi = (hi + Math.imul(ah4, bh4)) | 0;
    lo = (lo + Math.imul(al3, bl5)) | 0;
    mid = (mid + Math.imul(al3, bh5)) | 0;
    mid = (mid + Math.imul(ah3, bl5)) | 0;
    hi = (hi + Math.imul(ah3, bh5)) | 0;
    lo = (lo + Math.imul(al2, bl6)) | 0;
    mid = (mid + Math.imul(al2, bh6)) | 0;
    mid = (mid + Math.imul(ah2, bl6)) | 0;
    hi = (hi + Math.imul(ah2, bh6)) | 0;
    lo = (lo + Math.imul(al1, bl7)) | 0;
    mid = (mid + Math.imul(al1, bh7)) | 0;
    mid = (mid + Math.imul(ah1, bl7)) | 0;
    hi = (hi + Math.imul(ah1, bh7)) | 0;
    lo = (lo + Math.imul(al0, bl8)) | 0;
    mid = (mid + Math.imul(al0, bh8)) | 0;
    mid = (mid + Math.imul(ah0, bl8)) | 0;
    hi = (hi + Math.imul(ah0, bh8)) | 0;
    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;
    w8 &= 0x3ffffff;
    /* k = 9 */
    lo = Math.imul(al9, bl0);
    mid = Math.imul(al9, bh0);
    mid = (mid + Math.imul(ah9, bl0)) | 0;
    hi = Math.imul(ah9, bh0);
    lo = (lo + Math.imul(al8, bl1)) | 0;
    mid = (mid + Math.imul(al8, bh1)) | 0;
    mid = (mid + Math.imul(ah8, bl1)) | 0;
    hi = (hi + Math.imul(ah8, bh1)) | 0;
    lo = (lo + Math.imul(al7, bl2)) | 0;
    mid = (mid + Math.imul(al7, bh2)) | 0;
    mid = (mid + Math.imul(ah7, bl2)) | 0;
    hi = (hi + Math.imul(ah7, bh2)) | 0;
    lo = (lo + Math.imul(al6, bl3)) | 0;
    mid = (mid + Math.imul(al6, bh3)) | 0;
    mid = (mid + Math.imul(ah6, bl3)) | 0;
    hi = (hi + Math.imul(ah6, bh3)) | 0;
    lo = (lo + Math.imul(al5, bl4)) | 0;
    mid = (mid + Math.imul(al5, bh4)) | 0;
    mid = (mid + Math.imul(ah5, bl4)) | 0;
    hi = (hi + Math.imul(ah5, bh4)) | 0;
    lo = (lo + Math.imul(al4, bl5)) | 0;
    mid = (mid + Math.imul(al4, bh5)) | 0;
    mid = (mid + Math.imul(ah4, bl5)) | 0;
    hi = (hi + Math.imul(ah4, bh5)) | 0;
    lo = (lo + Math.imul(al3, bl6)) | 0;
    mid = (mid + Math.imul(al3, bh6)) | 0;
    mid = (mid + Math.imul(ah3, bl6)) | 0;
    hi = (hi + Math.imul(ah3, bh6)) | 0;
    lo = (lo + Math.imul(al2, bl7)) | 0;
    mid = (mid + Math.imul(al2, bh7)) | 0;
    mid = (mid + Math.imul(ah2, bl7)) | 0;
    hi = (hi + Math.imul(ah2, bh7)) | 0;
    lo = (lo + Math.imul(al1, bl8)) | 0;
    mid = (mid + Math.imul(al1, bh8)) | 0;
    mid = (mid + Math.imul(ah1, bl8)) | 0;
    hi = (hi + Math.imul(ah1, bh8)) | 0;
    lo = (lo + Math.imul(al0, bl9)) | 0;
    mid = (mid + Math.imul(al0, bh9)) | 0;
    mid = (mid + Math.imul(ah0, bl9)) | 0;
    hi = (hi + Math.imul(ah0, bh9)) | 0;
    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;
    w9 &= 0x3ffffff;
    /* k = 10 */
    lo = Math.imul(al9, bl1);
    mid = Math.imul(al9, bh1);
    mid = (mid + Math.imul(ah9, bl1)) | 0;
    hi = Math.imul(ah9, bh1);
    lo = (lo + Math.imul(al8, bl2)) | 0;
    mid = (mid + Math.imul(al8, bh2)) | 0;
    mid = (mid + Math.imul(ah8, bl2)) | 0;
    hi = (hi + Math.imul(ah8, bh2)) | 0;
    lo = (lo + Math.imul(al7, bl3)) | 0;
    mid = (mid + Math.imul(al7, bh3)) | 0;
    mid = (mid + Math.imul(ah7, bl3)) | 0;
    hi = (hi + Math.imul(ah7, bh3)) | 0;
    lo = (lo + Math.imul(al6, bl4)) | 0;
    mid = (mid + Math.imul(al6, bh4)) | 0;
    mid = (mid + Math.imul(ah6, bl4)) | 0;
    hi = (hi + Math.imul(ah6, bh4)) | 0;
    lo = (lo + Math.imul(al5, bl5)) | 0;
    mid = (mid + Math.imul(al5, bh5)) | 0;
    mid = (mid + Math.imul(ah5, bl5)) | 0;
    hi = (hi + Math.imul(ah5, bh5)) | 0;
    lo = (lo + Math.imul(al4, bl6)) | 0;
    mid = (mid + Math.imul(al4, bh6)) | 0;
    mid = (mid + Math.imul(ah4, bl6)) | 0;
    hi = (hi + Math.imul(ah4, bh6)) | 0;
    lo = (lo + Math.imul(al3, bl7)) | 0;
    mid = (mid + Math.imul(al3, bh7)) | 0;
    mid = (mid + Math.imul(ah3, bl7)) | 0;
    hi = (hi + Math.imul(ah3, bh7)) | 0;
    lo = (lo + Math.imul(al2, bl8)) | 0;
    mid = (mid + Math.imul(al2, bh8)) | 0;
    mid = (mid + Math.imul(ah2, bl8)) | 0;
    hi = (hi + Math.imul(ah2, bh8)) | 0;
    lo = (lo + Math.imul(al1, bl9)) | 0;
    mid = (mid + Math.imul(al1, bh9)) | 0;
    mid = (mid + Math.imul(ah1, bl9)) | 0;
    hi = (hi + Math.imul(ah1, bh9)) | 0;
    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;
    w10 &= 0x3ffffff;
    /* k = 11 */
    lo = Math.imul(al9, bl2);
    mid = Math.imul(al9, bh2);
    mid = (mid + Math.imul(ah9, bl2)) | 0;
    hi = Math.imul(ah9, bh2);
    lo = (lo + Math.imul(al8, bl3)) | 0;
    mid = (mid + Math.imul(al8, bh3)) | 0;
    mid = (mid + Math.imul(ah8, bl3)) | 0;
    hi = (hi + Math.imul(ah8, bh3)) | 0;
    lo = (lo + Math.imul(al7, bl4)) | 0;
    mid = (mid + Math.imul(al7, bh4)) | 0;
    mid = (mid + Math.imul(ah7, bl4)) | 0;
    hi = (hi + Math.imul(ah7, bh4)) | 0;
    lo = (lo + Math.imul(al6, bl5)) | 0;
    mid = (mid + Math.imul(al6, bh5)) | 0;
    mid = (mid + Math.imul(ah6, bl5)) | 0;
    hi = (hi + Math.imul(ah6, bh5)) | 0;
    lo = (lo + Math.imul(al5, bl6)) | 0;
    mid = (mid + Math.imul(al5, bh6)) | 0;
    mid = (mid + Math.imul(ah5, bl6)) | 0;
    hi = (hi + Math.imul(ah5, bh6)) | 0;
    lo = (lo + Math.imul(al4, bl7)) | 0;
    mid = (mid + Math.imul(al4, bh7)) | 0;
    mid = (mid + Math.imul(ah4, bl7)) | 0;
    hi = (hi + Math.imul(ah4, bh7)) | 0;
    lo = (lo + Math.imul(al3, bl8)) | 0;
    mid = (mid + Math.imul(al3, bh8)) | 0;
    mid = (mid + Math.imul(ah3, bl8)) | 0;
    hi = (hi + Math.imul(ah3, bh8)) | 0;
    lo = (lo + Math.imul(al2, bl9)) | 0;
    mid = (mid + Math.imul(al2, bh9)) | 0;
    mid = (mid + Math.imul(ah2, bl9)) | 0;
    hi = (hi + Math.imul(ah2, bh9)) | 0;
    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;
    w11 &= 0x3ffffff;
    /* k = 12 */
    lo = Math.imul(al9, bl3);
    mid = Math.imul(al9, bh3);
    mid = (mid + Math.imul(ah9, bl3)) | 0;
    hi = Math.imul(ah9, bh3);
    lo = (lo + Math.imul(al8, bl4)) | 0;
    mid = (mid + Math.imul(al8, bh4)) | 0;
    mid = (mid + Math.imul(ah8, bl4)) | 0;
    hi = (hi + Math.imul(ah8, bh4)) | 0;
    lo = (lo + Math.imul(al7, bl5)) | 0;
    mid = (mid + Math.imul(al7, bh5)) | 0;
    mid = (mid + Math.imul(ah7, bl5)) | 0;
    hi = (hi + Math.imul(ah7, bh5)) | 0;
    lo = (lo + Math.imul(al6, bl6)) | 0;
    mid = (mid + Math.imul(al6, bh6)) | 0;
    mid = (mid + Math.imul(ah6, bl6)) | 0;
    hi = (hi + Math.imul(ah6, bh6)) | 0;
    lo = (lo + Math.imul(al5, bl7)) | 0;
    mid = (mid + Math.imul(al5, bh7)) | 0;
    mid = (mid + Math.imul(ah5, bl7)) | 0;
    hi = (hi + Math.imul(ah5, bh7)) | 0;
    lo = (lo + Math.imul(al4, bl8)) | 0;
    mid = (mid + Math.imul(al4, bh8)) | 0;
    mid = (mid + Math.imul(ah4, bl8)) | 0;
    hi = (hi + Math.imul(ah4, bh8)) | 0;
    lo = (lo + Math.imul(al3, bl9)) | 0;
    mid = (mid + Math.imul(al3, bh9)) | 0;
    mid = (mid + Math.imul(ah3, bl9)) | 0;
    hi = (hi + Math.imul(ah3, bh9)) | 0;
    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;
    w12 &= 0x3ffffff;
    /* k = 13 */
    lo = Math.imul(al9, bl4);
    mid = Math.imul(al9, bh4);
    mid = (mid + Math.imul(ah9, bl4)) | 0;
    hi = Math.imul(ah9, bh4);
    lo = (lo + Math.imul(al8, bl5)) | 0;
    mid = (mid + Math.imul(al8, bh5)) | 0;
    mid = (mid + Math.imul(ah8, bl5)) | 0;
    hi = (hi + Math.imul(ah8, bh5)) | 0;
    lo = (lo + Math.imul(al7, bl6)) | 0;
    mid = (mid + Math.imul(al7, bh6)) | 0;
    mid = (mid + Math.imul(ah7, bl6)) | 0;
    hi = (hi + Math.imul(ah7, bh6)) | 0;
    lo = (lo + Math.imul(al6, bl7)) | 0;
    mid = (mid + Math.imul(al6, bh7)) | 0;
    mid = (mid + Math.imul(ah6, bl7)) | 0;
    hi = (hi + Math.imul(ah6, bh7)) | 0;
    lo = (lo + Math.imul(al5, bl8)) | 0;
    mid = (mid + Math.imul(al5, bh8)) | 0;
    mid = (mid + Math.imul(ah5, bl8)) | 0;
    hi = (hi + Math.imul(ah5, bh8)) | 0;
    lo = (lo + Math.imul(al4, bl9)) | 0;
    mid = (mid + Math.imul(al4, bh9)) | 0;
    mid = (mid + Math.imul(ah4, bl9)) | 0;
    hi = (hi + Math.imul(ah4, bh9)) | 0;
    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;
    w13 &= 0x3ffffff;
    /* k = 14 */
    lo = Math.imul(al9, bl5);
    mid = Math.imul(al9, bh5);
    mid = (mid + Math.imul(ah9, bl5)) | 0;
    hi = Math.imul(ah9, bh5);
    lo = (lo + Math.imul(al8, bl6)) | 0;
    mid = (mid + Math.imul(al8, bh6)) | 0;
    mid = (mid + Math.imul(ah8, bl6)) | 0;
    hi = (hi + Math.imul(ah8, bh6)) | 0;
    lo = (lo + Math.imul(al7, bl7)) | 0;
    mid = (mid + Math.imul(al7, bh7)) | 0;
    mid = (mid + Math.imul(ah7, bl7)) | 0;
    hi = (hi + Math.imul(ah7, bh7)) | 0;
    lo = (lo + Math.imul(al6, bl8)) | 0;
    mid = (mid + Math.imul(al6, bh8)) | 0;
    mid = (mid + Math.imul(ah6, bl8)) | 0;
    hi = (hi + Math.imul(ah6, bh8)) | 0;
    lo = (lo + Math.imul(al5, bl9)) | 0;
    mid = (mid + Math.imul(al5, bh9)) | 0;
    mid = (mid + Math.imul(ah5, bl9)) | 0;
    hi = (hi + Math.imul(ah5, bh9)) | 0;
    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;
    w14 &= 0x3ffffff;
    /* k = 15 */
    lo = Math.imul(al9, bl6);
    mid = Math.imul(al9, bh6);
    mid = (mid + Math.imul(ah9, bl6)) | 0;
    hi = Math.imul(ah9, bh6);
    lo = (lo + Math.imul(al8, bl7)) | 0;
    mid = (mid + Math.imul(al8, bh7)) | 0;
    mid = (mid + Math.imul(ah8, bl7)) | 0;
    hi = (hi + Math.imul(ah8, bh7)) | 0;
    lo = (lo + Math.imul(al7, bl8)) | 0;
    mid = (mid + Math.imul(al7, bh8)) | 0;
    mid = (mid + Math.imul(ah7, bl8)) | 0;
    hi = (hi + Math.imul(ah7, bh8)) | 0;
    lo = (lo + Math.imul(al6, bl9)) | 0;
    mid = (mid + Math.imul(al6, bh9)) | 0;
    mid = (mid + Math.imul(ah6, bl9)) | 0;
    hi = (hi + Math.imul(ah6, bh9)) | 0;
    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;
    w15 &= 0x3ffffff;
    /* k = 16 */
    lo = Math.imul(al9, bl7);
    mid = Math.imul(al9, bh7);
    mid = (mid + Math.imul(ah9, bl7)) | 0;
    hi = Math.imul(ah9, bh7);
    lo = (lo + Math.imul(al8, bl8)) | 0;
    mid = (mid + Math.imul(al8, bh8)) | 0;
    mid = (mid + Math.imul(ah8, bl8)) | 0;
    hi = (hi + Math.imul(ah8, bh8)) | 0;
    lo = (lo + Math.imul(al7, bl9)) | 0;
    mid = (mid + Math.imul(al7, bh9)) | 0;
    mid = (mid + Math.imul(ah7, bl9)) | 0;
    hi = (hi + Math.imul(ah7, bh9)) | 0;
    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;
    w16 &= 0x3ffffff;
    /* k = 17 */
    lo = Math.imul(al9, bl8);
    mid = Math.imul(al9, bh8);
    mid = (mid + Math.imul(ah9, bl8)) | 0;
    hi = Math.imul(ah9, bh8);
    lo = (lo + Math.imul(al8, bl9)) | 0;
    mid = (mid + Math.imul(al8, bh9)) | 0;
    mid = (mid + Math.imul(ah8, bl9)) | 0;
    hi = (hi + Math.imul(ah8, bh9)) | 0;
    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;
    w17 &= 0x3ffffff;
    /* k = 18 */
    lo = Math.imul(al9, bl9);
    mid = Math.imul(al9, bh9);
    mid = (mid + Math.imul(ah9, bl9)) | 0;
    hi = Math.imul(ah9, bh9);
    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;
    w18 &= 0x3ffffff;
    o[0] = w0;
    o[1] = w1;
    o[2] = w2;
    o[3] = w3;
    o[4] = w4;
    o[5] = w5;
    o[6] = w6;
    o[7] = w7;
    o[8] = w8;
    o[9] = w9;
    o[10] = w10;
    o[11] = w11;
    o[12] = w12;
    o[13] = w13;
    o[14] = w14;
    o[15] = w15;
    o[16] = w16;
    o[17] = w17;
    o[18] = w18;
    if (c !== 0) {
      o[19] = c;
      out.length++;
    }
    return out;
  };

  // Polyfill comb
  if (!Math.imul) {
    comb10MulTo = smallMulTo;
  }

  function bigMulTo (self, num, out) {
    out.negative = num.negative ^ self.negative;
    out.length = self.length + num.length;

    var carry = 0;
    var hncarry = 0;
    for (var k = 0; k < out.length - 1; k++) {
      // Sum all words with the same `i + j = k` and accumulate `ncarry`,
      // note that ncarry could be >= 0x3ffffff
      var ncarry = hncarry;
      hncarry = 0;
      var rword = carry & 0x3ffffff;
      var maxJ = Math.min(k, num.length - 1);
      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
        var i = k - j;
        var a = self.words[i] | 0;
        var b = num.words[j] | 0;
        var r = a * b;

        var lo = r & 0x3ffffff;
        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;
        lo = (lo + rword) | 0;
        rword = lo & 0x3ffffff;
        ncarry = (ncarry + (lo >>> 26)) | 0;

        hncarry += ncarry >>> 26;
        ncarry &= 0x3ffffff;
      }
      out.words[k] = rword;
      carry = ncarry;
      ncarry = hncarry;
    }
    if (carry !== 0) {
      out.words[k] = carry;
    } else {
      out.length--;
    }

    return out._strip();
  }

  function jumboMulTo (self, num, out) {
    // Temporary disable, see https://github.com/indutny/bn.js/issues/211
    // var fftm = new FFTM();
    // return fftm.mulp(self, num, out);
    return bigMulTo(self, num, out);
  }

  BN.prototype.mulTo = function mulTo (num, out) {
    var res;
    var len = this.length + num.length;
    if (this.length === 10 && num.length === 10) {
      res = comb10MulTo(this, num, out);
    } else if (len < 63) {
      res = smallMulTo(this, num, out);
    } else if (len < 1024) {
      res = bigMulTo(this, num, out);
    } else {
      res = jumboMulTo(this, num, out);
    }

    return res;
  };

  // Cooley-Tukey algorithm for FFT
  // slightly revisited to rely on looping instead of recursion

  function FFTM (x, y) {
    this.x = x;
    this.y = y;
  }

  FFTM.prototype.makeRBT = function makeRBT (N) {
    var t = new Array(N);
    var l = BN.prototype._countBits(N) - 1;
    for (var i = 0; i < N; i++) {
      t[i] = this.revBin(i, l, N);
    }

    return t;
  };

  // Returns binary-reversed representation of `x`
  FFTM.prototype.revBin = function revBin (x, l, N) {
    if (x === 0 || x === N - 1) return x;

    var rb = 0;
    for (var i = 0; i < l; i++) {
      rb |= (x & 1) << (l - i - 1);
      x >>= 1;
    }

    return rb;
  };

  // Performs "tweedling" phase, therefore 'emulating'
  // behaviour of the recursive algorithm
  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {
    for (var i = 0; i < N; i++) {
      rtws[i] = rws[rbt[i]];
      itws[i] = iws[rbt[i]];
    }
  };

  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {
    this.permute(rbt, rws, iws, rtws, itws, N);

    for (var s = 1; s < N; s <<= 1) {
      var l = s << 1;

      var rtwdf = Math.cos(2 * Math.PI / l);
      var itwdf = Math.sin(2 * Math.PI / l);

      for (var p = 0; p < N; p += l) {
        var rtwdf_ = rtwdf;
        var itwdf_ = itwdf;

        for (var j = 0; j < s; j++) {
          var re = rtws[p + j];
          var ie = itws[p + j];

          var ro = rtws[p + j + s];
          var io = itws[p + j + s];

          var rx = rtwdf_ * ro - itwdf_ * io;

          io = rtwdf_ * io + itwdf_ * ro;
          ro = rx;

          rtws[p + j] = re + ro;
          itws[p + j] = ie + io;

          rtws[p + j + s] = re - ro;
          itws[p + j + s] = ie - io;

          /* jshint maxdepth : false */
          if (j !== l) {
            rx = rtwdf * rtwdf_ - itwdf * itwdf_;

            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;
            rtwdf_ = rx;
          }
        }
      }
    }
  };

  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {
    var N = Math.max(m, n) | 1;
    var odd = N & 1;
    var i = 0;
    for (N = N / 2 | 0; N; N = N >>> 1) {
      i++;
    }

    return 1 << i + 1 + odd;
  };

  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {
    if (N <= 1) return;

    for (var i = 0; i < N / 2; i++) {
      var t = rws[i];

      rws[i] = rws[N - i - 1];
      rws[N - i - 1] = t;

      t = iws[i];

      iws[i] = -iws[N - i - 1];
      iws[N - i - 1] = -t;
    }
  };

  FFTM.prototype.normalize13b = function normalize13b (ws, N) {
    var carry = 0;
    for (var i = 0; i < N / 2; i++) {
      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +
        Math.round(ws[2 * i] / N) +
        carry;

      ws[i] = w & 0x3ffffff;

      if (w < 0x4000000) {
        carry = 0;
      } else {
        carry = w / 0x4000000 | 0;
      }
    }

    return ws;
  };

  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {
    var carry = 0;
    for (var i = 0; i < len; i++) {
      carry = carry + (ws[i] | 0);

      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;
      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;
    }

    // Pad with zeroes
    for (i = 2 * len; i < N; ++i) {
      rws[i] = 0;
    }

    assert(carry === 0);
    assert((carry & ~0x1fff) === 0);
  };

  FFTM.prototype.stub = function stub (N) {
    var ph = new Array(N);
    for (var i = 0; i < N; i++) {
      ph[i] = 0;
    }

    return ph;
  };

  FFTM.prototype.mulp = function mulp (x, y, out) {
    var N = 2 * this.guessLen13b(x.length, y.length);

    var rbt = this.makeRBT(N);

    var _ = this.stub(N);

    var rws = new Array(N);
    var rwst = new Array(N);
    var iwst = new Array(N);

    var nrws = new Array(N);
    var nrwst = new Array(N);
    var niwst = new Array(N);

    var rmws = out.words;
    rmws.length = N;

    this.convert13b(x.words, x.length, rws, N);
    this.convert13b(y.words, y.length, nrws, N);

    this.transform(rws, _, rwst, iwst, N, rbt);
    this.transform(nrws, _, nrwst, niwst, N, rbt);

    for (var i = 0; i < N; i++) {
      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];
      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];
      rwst[i] = rx;
    }

    this.conjugate(rwst, iwst, N);
    this.transform(rwst, iwst, rmws, _, N, rbt);
    this.conjugate(rmws, _, N);
    this.normalize13b(rmws, N);

    out.negative = x.negative ^ y.negative;
    out.length = x.length + y.length;
    return out._strip();
  };

  // Multiply `this` by `num`
  BN.prototype.mul = function mul (num) {
    var out = new BN(null);
    out.words = new Array(this.length + num.length);
    return this.mulTo(num, out);
  };

  // Multiply employing FFT
  BN.prototype.mulf = function mulf (num) {
    var out = new BN(null);
    out.words = new Array(this.length + num.length);
    return jumboMulTo(this, num, out);
  };

  // In-place Multiplication
  BN.prototype.imul = function imul (num) {
    return this.clone().mulTo(num, this);
  };

  BN.prototype.imuln = function imuln (num) {
    var isNegNum = num < 0;
    if (isNegNum) num = -num;

    assert(typeof num === 'number');
    assert(num < 0x4000000);

    // Carry
    var carry = 0;
    for (var i = 0; i < this.length; i++) {
      var w = (this.words[i] | 0) * num;
      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);
      carry >>= 26;
      carry += (w / 0x4000000) | 0;
      // NOTE: lo is 27bit maximum
      carry += lo >>> 26;
      this.words[i] = lo & 0x3ffffff;
    }

    if (carry !== 0) {
      this.words[i] = carry;
      this.length++;
    }

    return isNegNum ? this.ineg() : this;
  };

  BN.prototype.muln = function muln (num) {
    return this.clone().imuln(num);
  };

  // `this` * `this`
  BN.prototype.sqr = function sqr () {
    return this.mul(this);
  };

  // `this` * `this` in-place
  BN.prototype.isqr = function isqr () {
    return this.imul(this.clone());
  };

  // Math.pow(`this`, `num`)
  BN.prototype.pow = function pow (num) {
    var w = toBitArray(num);
    if (w.length === 0) return new BN(1);

    // Skip leading zeroes
    var res = this;
    for (var i = 0; i < w.length; i++, res = res.sqr()) {
      if (w[i] !== 0) break;
    }

    if (++i < w.length) {
      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {
        if (w[i] === 0) continue;

        res = res.mul(q);
      }
    }

    return res;
  };

  // Shift-left in-place
  BN.prototype.iushln = function iushln (bits) {
    assert(typeof bits === 'number' && bits >= 0);
    var r = bits % 26;
    var s = (bits - r) / 26;
    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);
    var i;

    if (r !== 0) {
      var carry = 0;

      for (i = 0; i < this.length; i++) {
        var newCarry = this.words[i] & carryMask;
        var c = ((this.words[i] | 0) - newCarry) << r;
        this.words[i] = c | carry;
        carry = newCarry >>> (26 - r);
      }

      if (carry) {
        this.words[i] = carry;
        this.length++;
      }
    }

    if (s !== 0) {
      for (i = this.length - 1; i >= 0; i--) {
        this.words[i + s] = this.words[i];
      }

      for (i = 0; i < s; i++) {
        this.words[i] = 0;
      }

      this.length += s;
    }

    return this._strip();
  };

  BN.prototype.ishln = function ishln (bits) {
    // TODO(indutny): implement me
    assert(this.negative === 0);
    return this.iushln(bits);
  };

  // Shift-right in-place
  // NOTE: `hint` is a lowest bit before trailing zeroes
  // NOTE: if `extended` is present - it will be filled with destroyed bits
  BN.prototype.iushrn = function iushrn (bits, hint, extended) {
    assert(typeof bits === 'number' && bits >= 0);
    var h;
    if (hint) {
      h = (hint - (hint % 26)) / 26;
    } else {
      h = 0;
    }

    var r = bits % 26;
    var s = Math.min((bits - r) / 26, this.length);
    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);
    var maskedWords = extended;

    h -= s;
    h = Math.max(0, h);

    // Extended mode, copy masked part
    if (maskedWords) {
      for (var i = 0; i < s; i++) {
        maskedWords.words[i] = this.words[i];
      }
      maskedWords.length = s;
    }

    if (s === 0) {
      // No-op, we should not move anything at all
    } else if (this.length > s) {
      this.length -= s;
      for (i = 0; i < this.length; i++) {
        this.words[i] = this.words[i + s];
      }
    } else {
      this.words[0] = 0;
      this.length = 1;
    }

    var carry = 0;
    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {
      var word = this.words[i] | 0;
      this.words[i] = (carry << (26 - r)) | (word >>> r);
      carry = word & mask;
    }

    // Push carried bits as a mask
    if (maskedWords && carry !== 0) {
      maskedWords.words[maskedWords.length++] = carry;
    }

    if (this.length === 0) {
      this.words[0] = 0;
      this.length = 1;
    }

    return this._strip();
  };

  BN.prototype.ishrn = function ishrn (bits, hint, extended) {
    // TODO(indutny): implement me
    assert(this.negative === 0);
    return this.iushrn(bits, hint, extended);
  };

  // Shift-left
  BN.prototype.shln = function shln (bits) {
    return this.clone().ishln(bits);
  };

  BN.prototype.ushln = function ushln (bits) {
    return this.clone().iushln(bits);
  };

  // Shift-right
  BN.prototype.shrn = function shrn (bits) {
    return this.clone().ishrn(bits);
  };

  BN.prototype.ushrn = function ushrn (bits) {
    return this.clone().iushrn(bits);
  };

  // Test if n bit is set
  BN.prototype.testn = function testn (bit) {
    assert(typeof bit === 'number' && bit >= 0);
    var r = bit % 26;
    var s = (bit - r) / 26;
    var q = 1 << r;

    // Fast case: bit is much higher than all existing words
    if (this.length <= s) return false;

    // Check bit and return
    var w = this.words[s];

    return !!(w & q);
  };

  // Return only lowers bits of number (in-place)
  BN.prototype.imaskn = function imaskn (bits) {
    assert(typeof bits === 'number' && bits >= 0);
    var r = bits % 26;
    var s = (bits - r) / 26;

    assert(this.negative === 0, 'imaskn works only with positive numbers');

    if (this.length <= s) {
      return this;
    }

    if (r !== 0) {
      s++;
    }
    this.length = Math.min(s, this.length);

    if (r !== 0) {
      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);
      this.words[this.length - 1] &= mask;
    }

    return this._strip();
  };

  // Return only lowers bits of number
  BN.prototype.maskn = function maskn (bits) {
    return this.clone().imaskn(bits);
  };

  // Add plain number `num` to `this`
  BN.prototype.iaddn = function iaddn (num) {
    assert(typeof num === 'number');
    assert(num < 0x4000000);
    if (num < 0) return this.isubn(-num);

    // Possible sign change
    if (this.negative !== 0) {
      if (this.length === 1 && (this.words[0] | 0) <= num) {
        this.words[0] = num - (this.words[0] | 0);
        this.negative = 0;
        return this;
      }

      this.negative = 0;
      this.isubn(num);
      this.negative = 1;
      return this;
    }

    // Add without checks
    return this._iaddn(num);
  };

  BN.prototype._iaddn = function _iaddn (num) {
    this.words[0] += num;

    // Carry
    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {
      this.words[i] -= 0x4000000;
      if (i === this.length - 1) {
        this.words[i + 1] = 1;
      } else {
        this.words[i + 1]++;
      }
    }
    this.length = Math.max(this.length, i + 1);

    return this;
  };

  // Subtract plain number `num` from `this`
  BN.prototype.isubn = function isubn (num) {
    assert(typeof num === 'number');
    assert(num < 0x4000000);
    if (num < 0) return this.iaddn(-num);

    if (this.negative !== 0) {
      this.negative = 0;
      this.iaddn(num);
      this.negative = 1;
      return this;
    }

    this.words[0] -= num;

    if (this.length === 1 && this.words[0] < 0) {
      this.words[0] = -this.words[0];
      this.negative = 1;
    } else {
      // Carry
      for (var i = 0; i < this.length && this.words[i] < 0; i++) {
        this.words[i] += 0x4000000;
        this.words[i + 1] -= 1;
      }
    }

    return this._strip();
  };

  BN.prototype.addn = function addn (num) {
    return this.clone().iaddn(num);
  };

  BN.prototype.subn = function subn (num) {
    return this.clone().isubn(num);
  };

  BN.prototype.iabs = function iabs () {
    this.negative = 0;

    return this;
  };

  BN.prototype.abs = function abs () {
    return this.clone().iabs();
  };

  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {
    var len = num.length + shift;
    var i;

    this._expand(len);

    var w;
    var carry = 0;
    for (i = 0; i < num.length; i++) {
      w = (this.words[i + shift] | 0) + carry;
      var right = (num.words[i] | 0) * mul;
      w -= right & 0x3ffffff;
      carry = (w >> 26) - ((right / 0x4000000) | 0);
      this.words[i + shift] = w & 0x3ffffff;
    }
    for (; i < this.length - shift; i++) {
      w = (this.words[i + shift] | 0) + carry;
      carry = w >> 26;
      this.words[i + shift] = w & 0x3ffffff;
    }

    if (carry === 0) return this._strip();

    // Subtraction overflow
    assert(carry === -1);
    carry = 0;
    for (i = 0; i < this.length; i++) {
      w = -(this.words[i] | 0) + carry;
      carry = w >> 26;
      this.words[i] = w & 0x3ffffff;
    }
    this.negative = 1;

    return this._strip();
  };

  BN.prototype._wordDiv = function _wordDiv (num, mode) {
    var shift = this.length - num.length;

    var a = this.clone();
    var b = num;

    // Normalize
    var bhi = b.words[b.length - 1] | 0;
    var bhiBits = this._countBits(bhi);
    shift = 26 - bhiBits;
    if (shift !== 0) {
      b = b.ushln(shift);
      a.iushln(shift);
      bhi = b.words[b.length - 1] | 0;
    }

    // Initialize quotient
    var m = a.length - b.length;
    var q;

    if (mode !== 'mod') {
      q = new BN(null);
      q.length = m + 1;
      q.words = new Array(q.length);
      for (var i = 0; i < q.length; i++) {
        q.words[i] = 0;
      }
    }

    var diff = a.clone()._ishlnsubmul(b, 1, m);
    if (diff.negative === 0) {
      a = diff;
      if (q) {
        q.words[m] = 1;
      }
    }

    for (var j = m - 1; j >= 0; j--) {
      var qj = (a.words[b.length + j] | 0) * 0x4000000 +
        (a.words[b.length + j - 1] | 0);

      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max
      // (0x7ffffff)
      qj = Math.min((qj / bhi) | 0, 0x3ffffff);

      a._ishlnsubmul(b, qj, j);
      while (a.negative !== 0) {
        qj--;
        a.negative = 0;
        a._ishlnsubmul(b, 1, j);
        if (!a.isZero()) {
          a.negative ^= 1;
        }
      }
      if (q) {
        q.words[j] = qj;
      }
    }
    if (q) {
      q._strip();
    }
    a._strip();

    // Denormalize
    if (mode !== 'div' && shift !== 0) {
      a.iushrn(shift);
    }

    return {
      div: q || null,
      mod: a
    };
  };

  // NOTE: 1) `mode` can be set to `mod` to request mod only,
  //       to `div` to request div only, or be absent to
  //       request both div & mod
  //       2) `positive` is true if unsigned mod is requested
  BN.prototype.divmod = function divmod (num, mode, positive) {
    assert(!num.isZero());

    if (this.isZero()) {
      return {
        div: new BN(0),
        mod: new BN(0)
      };
    }

    var div, mod, res;
    if (this.negative !== 0 && num.negative === 0) {
      res = this.neg().divmod(num, mode);

      if (mode !== 'mod') {
        div = res.div.neg();
      }

      if (mode !== 'div') {
        mod = res.mod.neg();
        if (positive && mod.negative !== 0) {
          mod.iadd(num);
        }
      }

      return {
        div: div,
        mod: mod
      };
    }

    if (this.negative === 0 && num.negative !== 0) {
      res = this.divmod(num.neg(), mode);

      if (mode !== 'mod') {
        div = res.div.neg();
      }

      return {
        div: div,
        mod: res.mod
      };
    }

    if ((this.negative & num.negative) !== 0) {
      res = this.neg().divmod(num.neg(), mode);

      if (mode !== 'div') {
        mod = res.mod.neg();
        if (positive && mod.negative !== 0) {
          mod.isub(num);
        }
      }

      return {
        div: res.div,
        mod: mod
      };
    }

    // Both numbers are positive at this point

    // Strip both numbers to approximate shift value
    if (num.length > this.length || this.cmp(num) < 0) {
      return {
        div: new BN(0),
        mod: this
      };
    }

    // Very short reduction
    if (num.length === 1) {
      if (mode === 'div') {
        return {
          div: this.divn(num.words[0]),
          mod: null
        };
      }

      if (mode === 'mod') {
        return {
          div: null,
          mod: new BN(this.modrn(num.words[0]))
        };
      }

      return {
        div: this.divn(num.words[0]),
        mod: new BN(this.modrn(num.words[0]))
      };
    }

    return this._wordDiv(num, mode);
  };

  // Find `this` / `num`
  BN.prototype.div = function div (num) {
    return this.divmod(num, 'div', false).div;
  };

  // Find `this` % `num`
  BN.prototype.mod = function mod (num) {
    return this.divmod(num, 'mod', false).mod;
  };

  BN.prototype.umod = function umod (num) {
    return this.divmod(num, 'mod', true).mod;
  };

  // Find Round(`this` / `num`)
  BN.prototype.divRound = function divRound (num) {
    var dm = this.divmod(num);

    // Fast case - exact division
    if (dm.mod.isZero()) return dm.div;

    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;

    var half = num.ushrn(1);
    var r2 = num.andln(1);
    var cmp = mod.cmp(half);

    // Round down
    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;

    // Round up
    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);
  };

  BN.prototype.modrn = function modrn (num) {
    var isNegNum = num < 0;
    if (isNegNum) num = -num;

    assert(num <= 0x3ffffff);
    var p = (1 << 26) % num;

    var acc = 0;
    for (var i = this.length - 1; i >= 0; i--) {
      acc = (p * acc + (this.words[i] | 0)) % num;
    }

    return isNegNum ? -acc : acc;
  };

  // WARNING: DEPRECATED
  BN.prototype.modn = function modn (num) {
    return this.modrn(num);
  };

  // In-place division by number
  BN.prototype.idivn = function idivn (num) {
    var isNegNum = num < 0;
    if (isNegNum) num = -num;

    assert(num <= 0x3ffffff);

    var carry = 0;
    for (var i = this.length - 1; i >= 0; i--) {
      var w = (this.words[i] | 0) + carry * 0x4000000;
      this.words[i] = (w / num) | 0;
      carry = w % num;
    }

    this._strip();
    return isNegNum ? this.ineg() : this;
  };

  BN.prototype.divn = function divn (num) {
    return this.clone().idivn(num);
  };

  BN.prototype.egcd = function egcd (p) {
    assert(p.negative === 0);
    assert(!p.isZero());

    var x = this;
    var y = p.clone();

    if (x.negative !== 0) {
      x = x.umod(p);
    } else {
      x = x.clone();
    }

    // A * x + B * y = x
    var A = new BN(1);
    var B = new BN(0);

    // C * x + D * y = y
    var C = new BN(0);
    var D = new BN(1);

    var g = 0;

    while (x.isEven() && y.isEven()) {
      x.iushrn(1);
      y.iushrn(1);
      ++g;
    }

    var yp = y.clone();
    var xp = x.clone();

    while (!x.isZero()) {
      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);
      if (i > 0) {
        x.iushrn(i);
        while (i-- > 0) {
          if (A.isOdd() || B.isOdd()) {
            A.iadd(yp);
            B.isub(xp);
          }

          A.iushrn(1);
          B.iushrn(1);
        }
      }

      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);
      if (j > 0) {
        y.iushrn(j);
        while (j-- > 0) {
          if (C.isOdd() || D.isOdd()) {
            C.iadd(yp);
            D.isub(xp);
          }

          C.iushrn(1);
          D.iushrn(1);
        }
      }

      if (x.cmp(y) >= 0) {
        x.isub(y);
        A.isub(C);
        B.isub(D);
      } else {
        y.isub(x);
        C.isub(A);
        D.isub(B);
      }
    }

    return {
      a: C,
      b: D,
      gcd: y.iushln(g)
    };
  };

  // This is reduced incarnation of the binary EEA
  // above, designated to invert members of the
  // _prime_ fields F(p) at a maximal speed
  BN.prototype._invmp = function _invmp (p) {
    assert(p.negative === 0);
    assert(!p.isZero());

    var a = this;
    var b = p.clone();

    if (a.negative !== 0) {
      a = a.umod(p);
    } else {
      a = a.clone();
    }

    var x1 = new BN(1);
    var x2 = new BN(0);

    var delta = b.clone();

    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {
      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);
      if (i > 0) {
        a.iushrn(i);
        while (i-- > 0) {
          if (x1.isOdd()) {
            x1.iadd(delta);
          }

          x1.iushrn(1);
        }
      }

      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);
      if (j > 0) {
        b.iushrn(j);
        while (j-- > 0) {
          if (x2.isOdd()) {
            x2.iadd(delta);
          }

          x2.iushrn(1);
        }
      }

      if (a.cmp(b) >= 0) {
        a.isub(b);
        x1.isub(x2);
      } else {
        b.isub(a);
        x2.isub(x1);
      }
    }

    var res;
    if (a.cmpn(1) === 0) {
      res = x1;
    } else {
      res = x2;
    }

    if (res.cmpn(0) < 0) {
      res.iadd(p);
    }

    return res;
  };

  BN.prototype.gcd = function gcd (num) {
    if (this.isZero()) return num.abs();
    if (num.isZero()) return this.abs();

    var a = this.clone();
    var b = num.clone();
    a.negative = 0;
    b.negative = 0;

    // Remove common factor of two
    for (var shift = 0; a.isEven() && b.isEven(); shift++) {
      a.iushrn(1);
      b.iushrn(1);
    }

    do {
      while (a.isEven()) {
        a.iushrn(1);
      }
      while (b.isEven()) {
        b.iushrn(1);
      }

      var r = a.cmp(b);
      if (r < 0) {
        // Swap `a` and `b` to make `a` always bigger than `b`
        var t = a;
        a = b;
        b = t;
      } else if (r === 0 || b.cmpn(1) === 0) {
        break;
      }

      a.isub(b);
    } while (true);

    return b.iushln(shift);
  };

  // Invert number in the field F(num)
  BN.prototype.invm = function invm (num) {
    return this.egcd(num).a.umod(num);
  };

  BN.prototype.isEven = function isEven () {
    return (this.words[0] & 1) === 0;
  };

  BN.prototype.isOdd = function isOdd () {
    return (this.words[0] & 1) === 1;
  };

  // And first word and num
  BN.prototype.andln = function andln (num) {
    return this.words[0] & num;
  };

  // Increment at the bit position in-line
  BN.prototype.bincn = function bincn (bit) {
    assert(typeof bit === 'number');
    var r = bit % 26;
    var s = (bit - r) / 26;
    var q = 1 << r;

    // Fast case: bit is much higher than all existing words
    if (this.length <= s) {
      this._expand(s + 1);
      this.words[s] |= q;
      return this;
    }

    // Add bit and propagate, if needed
    var carry = q;
    for (var i = s; carry !== 0 && i < this.length; i++) {
      var w = this.words[i] | 0;
      w += carry;
      carry = w >>> 26;
      w &= 0x3ffffff;
      this.words[i] = w;
    }
    if (carry !== 0) {
      this.words[i] = carry;
      this.length++;
    }
    return this;
  };

  BN.prototype.isZero = function isZero () {
    return this.length === 1 && this.words[0] === 0;
  };

  BN.prototype.cmpn = function cmpn (num) {
    var negative = num < 0;

    if (this.negative !== 0 && !negative) return -1;
    if (this.negative === 0 && negative) return 1;

    this._strip();

    var res;
    if (this.length > 1) {
      res = 1;
    } else {
      if (negative) {
        num = -num;
      }

      assert(num <= 0x3ffffff, 'Number is too big');

      var w = this.words[0] | 0;
      res = w === num ? 0 : w < num ? -1 : 1;
    }
    if (this.negative !== 0) return -res | 0;
    return res;
  };

  // Compare two numbers and return:
  // 1 - if `this` > `num`
  // 0 - if `this` == `num`
  // -1 - if `this` < `num`
  BN.prototype.cmp = function cmp (num) {
    if (this.negative !== 0 && num.negative === 0) return -1;
    if (this.negative === 0 && num.negative !== 0) return 1;

    var res = this.ucmp(num);
    if (this.negative !== 0) return -res | 0;
    return res;
  };

  // Unsigned comparison
  BN.prototype.ucmp = function ucmp (num) {
    // At this point both numbers have the same sign
    if (this.length > num.length) return 1;
    if (this.length < num.length) return -1;

    var res = 0;
    for (var i = this.length - 1; i >= 0; i--) {
      var a = this.words[i] | 0;
      var b = num.words[i] | 0;

      if (a === b) continue;
      if (a < b) {
        res = -1;
      } else if (a > b) {
        res = 1;
      }
      break;
    }
    return res;
  };

  BN.prototype.gtn = function gtn (num) {
    return this.cmpn(num) === 1;
  };

  BN.prototype.gt = function gt (num) {
    return this.cmp(num) === 1;
  };

  BN.prototype.gten = function gten (num) {
    return this.cmpn(num) >= 0;
  };

  BN.prototype.gte = function gte (num) {
    return this.cmp(num) >= 0;
  };

  BN.prototype.ltn = function ltn (num) {
    return this.cmpn(num) === -1;
  };

  BN.prototype.lt = function lt (num) {
    return this.cmp(num) === -1;
  };

  BN.prototype.lten = function lten (num) {
    return this.cmpn(num) <= 0;
  };

  BN.prototype.lte = function lte (num) {
    return this.cmp(num) <= 0;
  };

  BN.prototype.eqn = function eqn (num) {
    return this.cmpn(num) === 0;
  };

  BN.prototype.eq = function eq (num) {
    return this.cmp(num) === 0;
  };

  //
  // A reduce context, could be using montgomery or something better, depending
  // on the `m` itself.
  //
  BN.red = function red (num) {
    return new Red(num);
  };

  BN.prototype.toRed = function toRed (ctx) {
    assert(!this.red, 'Already a number in reduction context');
    assert(this.negative === 0, 'red works only with positives');
    return ctx.convertTo(this)._forceRed(ctx);
  };

  BN.prototype.fromRed = function fromRed () {
    assert(this.red, 'fromRed works only with numbers in reduction context');
    return this.red.convertFrom(this);
  };

  BN.prototype._forceRed = function _forceRed (ctx) {
    this.red = ctx;
    return this;
  };

  BN.prototype.forceRed = function forceRed (ctx) {
    assert(!this.red, 'Already a number in reduction context');
    return this._forceRed(ctx);
  };

  BN.prototype.redAdd = function redAdd (num) {
    assert(this.red, 'redAdd works only with red numbers');
    return this.red.add(this, num);
  };

  BN.prototype.redIAdd = function redIAdd (num) {
    assert(this.red, 'redIAdd works only with red numbers');
    return this.red.iadd(this, num);
  };

  BN.prototype.redSub = function redSub (num) {
    assert(this.red, 'redSub works only with red numbers');
    return this.red.sub(this, num);
  };

  BN.prototype.redISub = function redISub (num) {
    assert(this.red, 'redISub works only with red numbers');
    return this.red.isub(this, num);
  };

  BN.prototype.redShl = function redShl (num) {
    assert(this.red, 'redShl works only with red numbers');
    return this.red.shl(this, num);
  };

  BN.prototype.redMul = function redMul (num) {
    assert(this.red, 'redMul works only with red numbers');
    this.red._verify2(this, num);
    return this.red.mul(this, num);
  };

  BN.prototype.redIMul = function redIMul (num) {
    assert(this.red, 'redMul works only with red numbers');
    this.red._verify2(this, num);
    return this.red.imul(this, num);
  };

  BN.prototype.redSqr = function redSqr () {
    assert(this.red, 'redSqr works only with red numbers');
    this.red._verify1(this);
    return this.red.sqr(this);
  };

  BN.prototype.redISqr = function redISqr () {
    assert(this.red, 'redISqr works only with red numbers');
    this.red._verify1(this);
    return this.red.isqr(this);
  };

  // Square root over p
  BN.prototype.redSqrt = function redSqrt () {
    assert(this.red, 'redSqrt works only with red numbers');
    this.red._verify1(this);
    return this.red.sqrt(this);
  };

  BN.prototype.redInvm = function redInvm () {
    assert(this.red, 'redInvm works only with red numbers');
    this.red._verify1(this);
    return this.red.invm(this);
  };

  // Return negative clone of `this` % `red modulo`
  BN.prototype.redNeg = function redNeg () {
    assert(this.red, 'redNeg works only with red numbers');
    this.red._verify1(this);
    return this.red.neg(this);
  };

  BN.prototype.redPow = function redPow (num) {
    assert(this.red && !num.red, 'redPow(normalNum)');
    this.red._verify1(this);
    return this.red.pow(this, num);
  };

  // Prime numbers with efficient reduction
  var primes = {
    k256: null,
    p224: null,
    p192: null,
    p25519: null
  };

  // Pseudo-Mersenne prime
  function MPrime (name, p) {
    // P = 2 ^ N - K
    this.name = name;
    this.p = new BN(p, 16);
    this.n = this.p.bitLength();
    this.k = new BN(1).iushln(this.n).isub(this.p);

    this.tmp = this._tmp();
  }

  MPrime.prototype._tmp = function _tmp () {
    var tmp = new BN(null);
    tmp.words = new Array(Math.ceil(this.n / 13));
    return tmp;
  };

  MPrime.prototype.ireduce = function ireduce (num) {
    // Assumes that `num` is less than `P^2`
    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)
    var r = num;
    var rlen;

    do {
      this.split(r, this.tmp);
      r = this.imulK(r);
      r = r.iadd(this.tmp);
      rlen = r.bitLength();
    } while (rlen > this.n);

    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);
    if (cmp === 0) {
      r.words[0] = 0;
      r.length = 1;
    } else if (cmp > 0) {
      r.isub(this.p);
    } else {
      if (r.strip !== undefined) {
        // r is a BN v4 instance
        r.strip();
      } else {
        // r is a BN v5 instance
        r._strip();
      }
    }

    return r;
  };

  MPrime.prototype.split = function split (input, out) {
    input.iushrn(this.n, 0, out);
  };

  MPrime.prototype.imulK = function imulK (num) {
    return num.imul(this.k);
  };

  function K256 () {
    MPrime.call(
      this,
      'k256',
      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');
  }
  inherits(K256, MPrime);

  K256.prototype.split = function split (input, output) {
    // 256 = 9 * 26 + 22
    var mask = 0x3fffff;

    var outLen = Math.min(input.length, 9);
    for (var i = 0; i < outLen; i++) {
      output.words[i] = input.words[i];
    }
    output.length = outLen;

    if (input.length <= 9) {
      input.words[0] = 0;
      input.length = 1;
      return;
    }

    // Shift by 9 limbs
    var prev = input.words[9];
    output.words[output.length++] = prev & mask;

    for (i = 10; i < input.length; i++) {
      var next = input.words[i] | 0;
      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);
      prev = next;
    }
    prev >>>= 22;
    input.words[i - 10] = prev;
    if (prev === 0 && input.length > 10) {
      input.length -= 10;
    } else {
      input.length -= 9;
    }
  };

  K256.prototype.imulK = function imulK (num) {
    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]
    num.words[num.length] = 0;
    num.words[num.length + 1] = 0;
    num.length += 2;

    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390
    var lo = 0;
    for (var i = 0; i < num.length; i++) {
      var w = num.words[i] | 0;
      lo += w * 0x3d1;
      num.words[i] = lo & 0x3ffffff;
      lo = w * 0x40 + ((lo / 0x4000000) | 0);
    }

    // Fast length reduction
    if (num.words[num.length - 1] === 0) {
      num.length--;
      if (num.words[num.length - 1] === 0) {
        num.length--;
      }
    }
    return num;
  };

  function P224 () {
    MPrime.call(
      this,
      'p224',
      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');
  }
  inherits(P224, MPrime);

  function P192 () {
    MPrime.call(
      this,
      'p192',
      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');
  }
  inherits(P192, MPrime);

  function P25519 () {
    // 2 ^ 255 - 19
    MPrime.call(
      this,
      '25519',
      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');
  }
  inherits(P25519, MPrime);

  P25519.prototype.imulK = function imulK (num) {
    // K = 0x13
    var carry = 0;
    for (var i = 0; i < num.length; i++) {
      var hi = (num.words[i] | 0) * 0x13 + carry;
      var lo = hi & 0x3ffffff;
      hi >>>= 26;

      num.words[i] = lo;
      carry = hi;
    }
    if (carry !== 0) {
      num.words[num.length++] = carry;
    }
    return num;
  };

  // Exported mostly for testing purposes, use plain name instead
  BN._prime = function prime (name) {
    // Cached version of prime
    if (primes[name]) return primes[name];

    var prime;
    if (name === 'k256') {
      prime = new K256();
    } else if (name === 'p224') {
      prime = new P224();
    } else if (name === 'p192') {
      prime = new P192();
    } else if (name === 'p25519') {
      prime = new P25519();
    } else {
      throw new Error('Unknown prime ' + name);
    }
    primes[name] = prime;

    return prime;
  };

  //
  // Base reduction engine
  //
  function Red (m) {
    if (typeof m === 'string') {
      var prime = BN._prime(m);
      this.m = prime.p;
      this.prime = prime;
    } else {
      assert(m.gtn(1), 'modulus must be greater than 1');
      this.m = m;
      this.prime = null;
    }
  }

  Red.prototype._verify1 = function _verify1 (a) {
    assert(a.negative === 0, 'red works only with positives');
    assert(a.red, 'red works only with red numbers');
  };

  Red.prototype._verify2 = function _verify2 (a, b) {
    assert((a.negative | b.negative) === 0, 'red works only with positives');
    assert(a.red && a.red === b.red,
      'red works only with red numbers');
  };

  Red.prototype.imod = function imod (a) {
    if (this.prime) return this.prime.ireduce(a)._forceRed(this);

    move(a, a.umod(this.m)._forceRed(this));
    return a;
  };

  Red.prototype.neg = function neg (a) {
    if (a.isZero()) {
      return a.clone();
    }

    return this.m.sub(a)._forceRed(this);
  };

  Red.prototype.add = function add (a, b) {
    this._verify2(a, b);

    var res = a.add(b);
    if (res.cmp(this.m) >= 0) {
      res.isub(this.m);
    }
    return res._forceRed(this);
  };

  Red.prototype.iadd = function iadd (a, b) {
    this._verify2(a, b);

    var res = a.iadd(b);
    if (res.cmp(this.m) >= 0) {
      res.isub(this.m);
    }
    return res;
  };

  Red.prototype.sub = function sub (a, b) {
    this._verify2(a, b);

    var res = a.sub(b);
    if (res.cmpn(0) < 0) {
      res.iadd(this.m);
    }
    return res._forceRed(this);
  };

  Red.prototype.isub = function isub (a, b) {
    this._verify2(a, b);

    var res = a.isub(b);
    if (res.cmpn(0) < 0) {
      res.iadd(this.m);
    }
    return res;
  };

  Red.prototype.shl = function shl (a, num) {
    this._verify1(a);
    return this.imod(a.ushln(num));
  };

  Red.prototype.imul = function imul (a, b) {
    this._verify2(a, b);
    return this.imod(a.imul(b));
  };

  Red.prototype.mul = function mul (a, b) {
    this._verify2(a, b);
    return this.imod(a.mul(b));
  };

  Red.prototype.isqr = function isqr (a) {
    return this.imul(a, a.clone());
  };

  Red.prototype.sqr = function sqr (a) {
    return this.mul(a, a);
  };

  Red.prototype.sqrt = function sqrt (a) {
    if (a.isZero()) return a.clone();

    var mod3 = this.m.andln(3);
    assert(mod3 % 2 === 1);

    // Fast case
    if (mod3 === 3) {
      var pow = this.m.add(new BN(1)).iushrn(2);
      return this.pow(a, pow);
    }

    // Tonelli-Shanks algorithm (Totally unoptimized and slow)
    //
    // Find Q and S, that Q * 2 ^ S = (P - 1)
    var q = this.m.subn(1);
    var s = 0;
    while (!q.isZero() && q.andln(1) === 0) {
      s++;
      q.iushrn(1);
    }
    assert(!q.isZero());

    var one = new BN(1).toRed(this);
    var nOne = one.redNeg();

    // Find quadratic non-residue
    // NOTE: Max is such because of generalized Riemann hypothesis.
    var lpow = this.m.subn(1).iushrn(1);
    var z = this.m.bitLength();
    z = new BN(2 * z * z).toRed(this);

    while (this.pow(z, lpow).cmp(nOne) !== 0) {
      z.redIAdd(nOne);
    }

    var c = this.pow(z, q);
    var r = this.pow(a, q.addn(1).iushrn(1));
    var t = this.pow(a, q);
    var m = s;
    while (t.cmp(one) !== 0) {
      var tmp = t;
      for (var i = 0; tmp.cmp(one) !== 0; i++) {
        tmp = tmp.redSqr();
      }
      assert(i < m);
      var b = this.pow(c, new BN(1).iushln(m - i - 1));

      r = r.redMul(b);
      c = b.redSqr();
      t = t.redMul(c);
      m = i;
    }

    return r;
  };

  Red.prototype.invm = function invm (a) {
    var inv = a._invmp(this.m);
    if (inv.negative !== 0) {
      inv.negative = 0;
      return this.imod(inv).redNeg();
    } else {
      return this.imod(inv);
    }
  };

  Red.prototype.pow = function pow (a, num) {
    if (num.isZero()) return new BN(1).toRed(this);
    if (num.cmpn(1) === 0) return a.clone();

    var windowSize = 4;
    var wnd = new Array(1 << windowSize);
    wnd[0] = new BN(1).toRed(this);
    wnd[1] = a;
    for (var i = 2; i < wnd.length; i++) {
      wnd[i] = this.mul(wnd[i - 1], a);
    }

    var res = wnd[0];
    var current = 0;
    var currentLen = 0;
    var start = num.bitLength() % 26;
    if (start === 0) {
      start = 26;
    }

    for (i = num.length - 1; i >= 0; i--) {
      var word = num.words[i];
      for (var j = start - 1; j >= 0; j--) {
        var bit = (word >> j) & 1;
        if (res !== wnd[0]) {
          res = this.sqr(res);
        }

        if (bit === 0 && current === 0) {
          currentLen = 0;
          continue;
        }

        current <<= 1;
        current |= bit;
        currentLen++;
        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;

        res = this.mul(res, wnd[current]);
        currentLen = 0;
        current = 0;
      }
      start = 26;
    }

    return res;
  };

  Red.prototype.convertTo = function convertTo (num) {
    var r = num.umod(this.m);

    return r === num ? r.clone() : r;
  };

  Red.prototype.convertFrom = function convertFrom (num) {
    var res = num.clone();
    res.red = null;
    return res;
  };

  //
  // Montgomery method engine
  //

  BN.mont = function mont (num) {
    return new Mont(num);
  };

  function Mont (m) {
    Red.call(this, m);

    this.shift = this.m.bitLength();
    if (this.shift % 26 !== 0) {
      this.shift += 26 - (this.shift % 26);
    }

    this.r = new BN(1).iushln(this.shift);
    this.r2 = this.imod(this.r.sqr());
    this.rinv = this.r._invmp(this.m);

    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);
    this.minv = this.minv.umod(this.r);
    this.minv = this.r.sub(this.minv);
  }
  inherits(Mont, Red);

  Mont.prototype.convertTo = function convertTo (num) {
    return this.imod(num.ushln(this.shift));
  };

  Mont.prototype.convertFrom = function convertFrom (num) {
    var r = this.imod(num.mul(this.rinv));
    r.red = null;
    return r;
  };

  Mont.prototype.imul = function imul (a, b) {
    if (a.isZero() || b.isZero()) {
      a.words[0] = 0;
      a.length = 1;
      return a;
    }

    var t = a.imul(b);
    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
    var u = t.isub(c).iushrn(this.shift);
    var res = u;

    if (u.cmp(this.m) >= 0) {
      res = u.isub(this.m);
    } else if (u.cmpn(0) < 0) {
      res = u.iadd(this.m);
    }

    return res._forceRed(this);
  };

  Mont.prototype.mul = function mul (a, b) {
    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);

    var t = a.mul(b);
    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
    var u = t.isub(c).iushrn(this.shift);
    var res = u;
    if (u.cmp(this.m) >= 0) {
      res = u.isub(this.m);
    } else if (u.cmpn(0) < 0) {
      res = u.iadd(this.m);
    }

    return res._forceRed(this);
  };

  Mont.prototype.invm = function invm (a) {
    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R
    var res = this.imod(a._invmp(this.m).mul(this.r2));
    return res._forceRed(this);
  };
})( false || module, this);


/***/ }),

/***/ "./node_modules/browserify-sign/algos.js":
/*!***********************************************!*\
  !*** ./node_modules/browserify-sign/algos.js ***!
  \***********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports = __webpack_require__(/*! ./browser/algorithms.json */ "./node_modules/browserify-sign/browser/algorithms.json")


/***/ }),

/***/ "./node_modules/browserify-sign/browser/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/browserify-sign/browser/index.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer
var createHash = __webpack_require__(/*! create-hash */ "./node_modules/create-hash/browser.js")
var stream = __webpack_require__(/*! readable-stream */ "./node_modules/browserify-sign/node_modules/readable-stream/readable-browser.js")
var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")
var sign = __webpack_require__(/*! ./sign */ "./node_modules/browserify-sign/browser/sign.js")
var verify = __webpack_require__(/*! ./verify */ "./node_modules/browserify-sign/browser/verify.js")

var algorithms = __webpack_require__(/*! ./algorithms.json */ "./node_modules/browserify-sign/browser/algorithms.json")
Object.keys(algorithms).forEach(function (key) {
  algorithms[key].id = Buffer.from(algorithms[key].id, 'hex')
  algorithms[key.toLowerCase()] = algorithms[key]
})

function Sign (algorithm) {
  stream.Writable.call(this)

  var data = algorithms[algorithm]
  if (!data) throw new Error('Unknown message digest')

  this._hashType = data.hash
  this._hash = createHash(data.hash)
  this._tag = data.id
  this._signType = data.sign
}
inherits(Sign, stream.Writable)

Sign.prototype._write = function _write (data, _, done) {
  this._hash.update(data)
  done()
}

Sign.prototype.update = function update (data, enc) {
  if (typeof data === 'string') data = Buffer.from(data, enc)

  this._hash.update(data)
  return this
}

Sign.prototype.sign = function signMethod (key, enc) {
  this.end()
  var hash = this._hash.digest()
  var sig = sign(hash, key, this._hashType, this._signType, this._tag)

  return enc ? sig.toString(enc) : sig
}

function Verify (algorithm) {
  stream.Writable.call(this)

  var data = algorithms[algorithm]
  if (!data) throw new Error('Unknown message digest')

  this._hash = createHash(data.hash)
  this._tag = data.id
  this._signType = data.sign
}
inherits(Verify, stream.Writable)

Verify.prototype._write = function _write (data, _, done) {
  this._hash.update(data)
  done()
}

Verify.prototype.update = function update (data, enc) {
  if (typeof data === 'string') data = Buffer.from(data, enc)

  this._hash.update(data)
  return this
}

Verify.prototype.verify = function verifyMethod (key, sig, enc) {
  if (typeof sig === 'string') sig = Buffer.from(sig, enc)

  this.end()
  var hash = this._hash.digest()
  return verify(sig, hash, key, this._signType, this._tag)
}

function createSign (algorithm) {
  return new Sign(algorithm)
}

function createVerify (algorithm) {
  return new Verify(algorithm)
}

module.exports = {
  Sign: createSign,
  Verify: createVerify,
  createSign: createSign,
  createVerify: createVerify
}


/***/ }),

/***/ "./node_modules/browserify-sign/browser/sign.js":
/*!******************************************************!*\
  !*** ./node_modules/browserify-sign/browser/sign.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// much of this based on https://github.com/indutny/self-signed/blob/gh-pages/lib/rsa.js
var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer
var createHmac = __webpack_require__(/*! create-hmac */ "./node_modules/create-hmac/browser.js")
var crt = __webpack_require__(/*! browserify-rsa */ "./node_modules/browserify-rsa/index.js")
var EC = __webpack_require__(/*! elliptic */ "./node_modules/elliptic/lib/elliptic.js").ec
var BN = __webpack_require__(/*! bn.js */ "./node_modules/browserify-sign/node_modules/bn.js/lib/bn.js")
var parseKeys = __webpack_require__(/*! parse-asn1 */ "./node_modules/parse-asn1/index.js")
var curves = __webpack_require__(/*! ./curves.json */ "./node_modules/browserify-sign/browser/curves.json")

function sign (hash, key, hashType, signType, tag) {
  var priv = parseKeys(key)
  if (priv.curve) {
    // rsa keys can be interpreted as ecdsa ones in openssl
    if (signType !== 'ecdsa' && signType !== 'ecdsa/rsa') throw new Error('wrong private key type')
    return ecSign(hash, priv)
  } else if (priv.type === 'dsa') {
    if (signType !== 'dsa') throw new Error('wrong private key type')
    return dsaSign(hash, priv, hashType)
  } else {
    if (signType !== 'rsa' && signType !== 'ecdsa/rsa') throw new Error('wrong private key type')
  }
  hash = Buffer.concat([tag, hash])
  var len = priv.modulus.byteLength()
  var pad = [0, 1]
  while (hash.length + pad.length + 1 < len) pad.push(0xff)
  pad.push(0x00)
  var i = -1
  while (++i < hash.length) pad.push(hash[i])

  var out = crt(pad, priv)
  return out
}

function ecSign (hash, priv) {
  var curveId = curves[priv.curve.join('.')]
  if (!curveId) throw new Error('unknown curve ' + priv.curve.join('.'))

  var curve = new EC(curveId)
  var key = curve.keyFromPrivate(priv.privateKey)
  var out = key.sign(hash)

  return Buffer.from(out.toDER())
}

function dsaSign (hash, priv, algo) {
  var x = priv.params.priv_key
  var p = priv.params.p
  var q = priv.params.q
  var g = priv.params.g
  var r = new BN(0)
  var k
  var H = bits2int(hash, q).mod(q)
  var s = false
  var kv = getKey(x, q, hash, algo)
  while (s === false) {
    k = makeKey(q, kv, algo)
    r = makeR(g, k, p, q)
    s = k.invm(q).imul(H.add(x.mul(r))).mod(q)
    if (s.cmpn(0) === 0) {
      s = false
      r = new BN(0)
    }
  }
  return toDER(r, s)
}

function toDER (r, s) {
  r = r.toArray()
  s = s.toArray()

  // Pad values
  if (r[0] & 0x80) r = [0].concat(r)
  if (s[0] & 0x80) s = [0].concat(s)

  var total = r.length + s.length + 4
  var res = [0x30, total, 0x02, r.length]
  res = res.concat(r, [0x02, s.length], s)
  return Buffer.from(res)
}

function getKey (x, q, hash, algo) {
  x = Buffer.from(x.toArray())
  if (x.length < q.byteLength()) {
    var zeros = Buffer.alloc(q.byteLength() - x.length)
    x = Buffer.concat([zeros, x])
  }
  var hlen = hash.length
  var hbits = bits2octets(hash, q)
  var v = Buffer.alloc(hlen)
  v.fill(1)
  var k = Buffer.alloc(hlen)
  k = createHmac(algo, k).update(v).update(Buffer.from([0])).update(x).update(hbits).digest()
  v = createHmac(algo, k).update(v).digest()
  k = createHmac(algo, k).update(v).update(Buffer.from([1])).update(x).update(hbits).digest()
  v = createHmac(algo, k).update(v).digest()
  return { k: k, v: v }
}

function bits2int (obits, q) {
  var bits = new BN(obits)
  var shift = (obits.length << 3) - q.bitLength()
  if (shift > 0) bits.ishrn(shift)
  return bits
}

function bits2octets (bits, q) {
  bits = bits2int(bits, q)
  bits = bits.mod(q)
  var out = Buffer.from(bits.toArray())
  if (out.length < q.byteLength()) {
    var zeros = Buffer.alloc(q.byteLength() - out.length)
    out = Buffer.concat([zeros, out])
  }
  return out
}

function makeKey (q, kv, algo) {
  var t
  var k

  do {
    t = Buffer.alloc(0)

    while (t.length * 8 < q.bitLength()) {
      kv.v = createHmac(algo, kv.k).update(kv.v).digest()
      t = Buffer.concat([t, kv.v])
    }

    k = bits2int(t, q)
    kv.k = createHmac(algo, kv.k).update(kv.v).update(Buffer.from([0])).digest()
    kv.v = createHmac(algo, kv.k).update(kv.v).digest()
  } while (k.cmp(q) !== -1)

  return k
}

function makeR (g, k, p, q) {
  return g.toRed(BN.mont(p)).redPow(k).fromRed().mod(q)
}

module.exports = sign
module.exports.getKey = getKey
module.exports.makeKey = makeKey


/***/ }),

/***/ "./node_modules/browserify-sign/browser/verify.js":
/*!********************************************************!*\
  !*** ./node_modules/browserify-sign/browser/verify.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// much of this based on https://github.com/indutny/self-signed/blob/gh-pages/lib/rsa.js
var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer
var BN = __webpack_require__(/*! bn.js */ "./node_modules/browserify-sign/node_modules/bn.js/lib/bn.js")
var EC = __webpack_require__(/*! elliptic */ "./node_modules/elliptic/lib/elliptic.js").ec
var parseKeys = __webpack_require__(/*! parse-asn1 */ "./node_modules/parse-asn1/index.js")
var curves = __webpack_require__(/*! ./curves.json */ "./node_modules/browserify-sign/browser/curves.json")

function verify (sig, hash, key, signType, tag) {
  var pub = parseKeys(key)
  if (pub.type === 'ec') {
    // rsa keys can be interpreted as ecdsa ones in openssl
    if (signType !== 'ecdsa' && signType !== 'ecdsa/rsa') throw new Error('wrong public key type')
    return ecVerify(sig, hash, pub)
  } else if (pub.type === 'dsa') {
    if (signType !== 'dsa') throw new Error('wrong public key type')
    return dsaVerify(sig, hash, pub)
  } else {
    if (signType !== 'rsa' && signType !== 'ecdsa/rsa') throw new Error('wrong public key type')
  }
  hash = Buffer.concat([tag, hash])
  var len = pub.modulus.byteLength()
  var pad = [1]
  var padNum = 0
  while (hash.length + pad.length + 2 < len) {
    pad.push(0xff)
    padNum++
  }
  pad.push(0x00)
  var i = -1
  while (++i < hash.length) {
    pad.push(hash[i])
  }
  pad = Buffer.from(pad)
  var red = BN.mont(pub.modulus)
  sig = new BN(sig).toRed(red)

  sig = sig.redPow(new BN(pub.publicExponent))
  sig = Buffer.from(sig.fromRed().toArray())
  var out = padNum < 8 ? 1 : 0
  len = Math.min(sig.length, pad.length)
  if (sig.length !== pad.length) out = 1

  i = -1
  while (++i < len) out |= sig[i] ^ pad[i]
  return out === 0
}

function ecVerify (sig, hash, pub) {
  var curveId = curves[pub.data.algorithm.curve.join('.')]
  if (!curveId) throw new Error('unknown curve ' + pub.data.algorithm.curve.join('.'))

  var curve = new EC(curveId)
  var pubkey = pub.data.subjectPrivateKey.data

  return curve.verify(hash, sig, pubkey)
}

function dsaVerify (sig, hash, pub) {
  var p = pub.data.p
  var q = pub.data.q
  var g = pub.data.g
  var y = pub.data.pub_key
  var unpacked = parseKeys.signature.decode(sig, 'der')
  var s = unpacked.s
  var r = unpacked.r
  checkValue(s, q)
  checkValue(r, q)
  var montp = BN.mont(p)
  var w = s.invm(q)
  var v = g.toRed(montp)
    .redPow(new BN(hash).mul(w).mod(q))
    .fromRed()
    .mul(y.toRed(montp).redPow(r.mul(w).mod(q)).fromRed())
    .mod(p)
    .mod(q)
  return v.cmp(r) === 0
}

function checkValue (b, q) {
  if (b.cmpn(0) <= 0) throw new Error('invalid sig')
  if (b.cmp(q) >= q) throw new Error('invalid sig')
}

module.exports = verify


/***/ }),

/***/ "./node_modules/browserify-sign/node_modules/bn.js/lib/bn.js":
/*!*******************************************************************!*\
  !*** ./node_modules/browserify-sign/node_modules/bn.js/lib/bn.js ***!
  \*******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

/* module decorator */ module = __webpack_require__.nmd(module);
(function (module, exports) {
  'use strict';

  // Utils
  function assert (val, msg) {
    if (!val) throw new Error(msg || 'Assertion failed');
  }

  // Could use `inherits` module, but don't want to move from single file
  // architecture yet.
  function inherits (ctor, superCtor) {
    ctor.super_ = superCtor;
    var TempCtor = function () {};
    TempCtor.prototype = superCtor.prototype;
    ctor.prototype = new TempCtor();
    ctor.prototype.constructor = ctor;
  }

  // BN

  function BN (number, base, endian) {
    if (BN.isBN(number)) {
      return number;
    }

    this.negative = 0;
    this.words = null;
    this.length = 0;

    // Reduction context
    this.red = null;

    if (number !== null) {
      if (base === 'le' || base === 'be') {
        endian = base;
        base = 10;
      }

      this._init(number || 0, base || 10, endian || 'be');
    }
  }
  if (typeof module === 'object') {
    module.exports = BN;
  } else {
    exports.BN = BN;
  }

  BN.BN = BN;
  BN.wordSize = 26;

  var Buffer;
  try {
    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {
      Buffer = window.Buffer;
    } else {
      Buffer = __webpack_require__(/*! buffer */ "?7a28").Buffer;
    }
  } catch (e) {
  }

  BN.isBN = function isBN (num) {
    if (num instanceof BN) {
      return true;
    }

    return num !== null && typeof num === 'object' &&
      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);
  };

  BN.max = function max (left, right) {
    if (left.cmp(right) > 0) return left;
    return right;
  };

  BN.min = function min (left, right) {
    if (left.cmp(right) < 0) return left;
    return right;
  };

  BN.prototype._init = function init (number, base, endian) {
    if (typeof number === 'number') {
      return this._initNumber(number, base, endian);
    }

    if (typeof number === 'object') {
      return this._initArray(number, base, endian);
    }

    if (base === 'hex') {
      base = 16;
    }
    assert(base === (base | 0) && base >= 2 && base <= 36);

    number = number.toString().replace(/\s+/g, '');
    var start = 0;
    if (number[0] === '-') {
      start++;
      this.negative = 1;
    }

    if (start < number.length) {
      if (base === 16) {
        this._parseHex(number, start, endian);
      } else {
        this._parseBase(number, base, start);
        if (endian === 'le') {
          this._initArray(this.toArray(), base, endian);
        }
      }
    }
  };

  BN.prototype._initNumber = function _initNumber (number, base, endian) {
    if (number < 0) {
      this.negative = 1;
      number = -number;
    }
    if (number < 0x4000000) {
      this.words = [number & 0x3ffffff];
      this.length = 1;
    } else if (number < 0x10000000000000) {
      this.words = [
        number & 0x3ffffff,
        (number / 0x4000000) & 0x3ffffff
      ];
      this.length = 2;
    } else {
      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)
      this.words = [
        number & 0x3ffffff,
        (number / 0x4000000) & 0x3ffffff,
        1
      ];
      this.length = 3;
    }

    if (endian !== 'le') return;

    // Reverse the bytes
    this._initArray(this.toArray(), base, endian);
  };

  BN.prototype._initArray = function _initArray (number, base, endian) {
    // Perhaps a Uint8Array
    assert(typeof number.length === 'number');
    if (number.length <= 0) {
      this.words = [0];
      this.length = 1;
      return this;
    }

    this.length = Math.ceil(number.length / 3);
    this.words = new Array(this.length);
    for (var i = 0; i < this.length; i++) {
      this.words[i] = 0;
    }

    var j, w;
    var off = 0;
    if (endian === 'be') {
      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {
        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);
        this.words[j] |= (w << off) & 0x3ffffff;
        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;
        off += 24;
        if (off >= 26) {
          off -= 26;
          j++;
        }
      }
    } else if (endian === 'le') {
      for (i = 0, j = 0; i < number.length; i += 3) {
        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);
        this.words[j] |= (w << off) & 0x3ffffff;
        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;
        off += 24;
        if (off >= 26) {
          off -= 26;
          j++;
        }
      }
    }
    return this._strip();
  };

  function parseHex4Bits (string, index) {
    var c = string.charCodeAt(index);
    // '0' - '9'
    if (c >= 48 && c <= 57) {
      return c - 48;
    // 'A' - 'F'
    } else if (c >= 65 && c <= 70) {
      return c - 55;
    // 'a' - 'f'
    } else if (c >= 97 && c <= 102) {
      return c - 87;
    } else {
      assert(false, 'Invalid character in ' + string);
    }
  }

  function parseHexByte (string, lowerBound, index) {
    var r = parseHex4Bits(string, index);
    if (index - 1 >= lowerBound) {
      r |= parseHex4Bits(string, index - 1) << 4;
    }
    return r;
  }

  BN.prototype._parseHex = function _parseHex (number, start, endian) {
    // Create possibly bigger array to ensure that it fits the number
    this.length = Math.ceil((number.length - start) / 6);
    this.words = new Array(this.length);
    for (var i = 0; i < this.length; i++) {
      this.words[i] = 0;
    }

    // 24-bits chunks
    var off = 0;
    var j = 0;

    var w;
    if (endian === 'be') {
      for (i = number.length - 1; i >= start; i -= 2) {
        w = parseHexByte(number, start, i) << off;
        this.words[j] |= w & 0x3ffffff;
        if (off >= 18) {
          off -= 18;
          j += 1;
          this.words[j] |= w >>> 26;
        } else {
          off += 8;
        }
      }
    } else {
      var parseLength = number.length - start;
      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {
        w = parseHexByte(number, start, i) << off;
        this.words[j] |= w & 0x3ffffff;
        if (off >= 18) {
          off -= 18;
          j += 1;
          this.words[j] |= w >>> 26;
        } else {
          off += 8;
        }
      }
    }

    this._strip();
  };

  function parseBase (str, start, end, mul) {
    var r = 0;
    var b = 0;
    var len = Math.min(str.length, end);
    for (var i = start; i < len; i++) {
      var c = str.charCodeAt(i) - 48;

      r *= mul;

      // 'a'
      if (c >= 49) {
        b = c - 49 + 0xa;

      // 'A'
      } else if (c >= 17) {
        b = c - 17 + 0xa;

      // '0' - '9'
      } else {
        b = c;
      }
      assert(c >= 0 && b < mul, 'Invalid character');
      r += b;
    }
    return r;
  }

  BN.prototype._parseBase = function _parseBase (number, base, start) {
    // Initialize as zero
    this.words = [0];
    this.length = 1;

    // Find length of limb in base
    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {
      limbLen++;
    }
    limbLen--;
    limbPow = (limbPow / base) | 0;

    var total = number.length - start;
    var mod = total % limbLen;
    var end = Math.min(total, total - mod) + start;

    var word = 0;
    for (var i = start; i < end; i += limbLen) {
      word = parseBase(number, i, i + limbLen, base);

      this.imuln(limbPow);
      if (this.words[0] + word < 0x4000000) {
        this.words[0] += word;
      } else {
        this._iaddn(word);
      }
    }

    if (mod !== 0) {
      var pow = 1;
      word = parseBase(number, i, number.length, base);

      for (i = 0; i < mod; i++) {
        pow *= base;
      }

      this.imuln(pow);
      if (this.words[0] + word < 0x4000000) {
        this.words[0] += word;
      } else {
        this._iaddn(word);
      }
    }

    this._strip();
  };

  BN.prototype.copy = function copy (dest) {
    dest.words = new Array(this.length);
    for (var i = 0; i < this.length; i++) {
      dest.words[i] = this.words[i];
    }
    dest.length = this.length;
    dest.negative = this.negative;
    dest.red = this.red;
  };

  function move (dest, src) {
    dest.words = src.words;
    dest.length = src.length;
    dest.negative = src.negative;
    dest.red = src.red;
  }

  BN.prototype._move = function _move (dest) {
    move(dest, this);
  };

  BN.prototype.clone = function clone () {
    var r = new BN(null);
    this.copy(r);
    return r;
  };

  BN.prototype._expand = function _expand (size) {
    while (this.length < size) {
      this.words[this.length++] = 0;
    }
    return this;
  };

  // Remove leading `0` from `this`
  BN.prototype._strip = function strip () {
    while (this.length > 1 && this.words[this.length - 1] === 0) {
      this.length--;
    }
    return this._normSign();
  };

  BN.prototype._normSign = function _normSign () {
    // -0 = 0
    if (this.length === 1 && this.words[0] === 0) {
      this.negative = 0;
    }
    return this;
  };

  // Check Symbol.for because not everywhere where Symbol defined
  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility
  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {
    try {
      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;
    } catch (e) {
      BN.prototype.inspect = inspect;
    }
  } else {
    BN.prototype.inspect = inspect;
  }

  function inspect () {
    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';
  }

  /*

  var zeros = [];
  var groupSizes = [];
  var groupBases = [];

  var s = '';
  var i = -1;
  while (++i < BN.wordSize) {
    zeros[i] = s;
    s += '0';
  }
  groupSizes[0] = 0;
  groupSizes[1] = 0;
  groupBases[0] = 0;
  groupBases[1] = 0;
  var base = 2 - 1;
  while (++base < 36 + 1) {
    var groupSize = 0;
    var groupBase = 1;
    while (groupBase < (1 << BN.wordSize) / base) {
      groupBase *= base;
      groupSize += 1;
    }
    groupSizes[base] = groupSize;
    groupBases[base] = groupBase;
  }

  */

  var zeros = [
    '',
    '0',
    '00',
    '000',
    '0000',
    '00000',
    '000000',
    '0000000',
    '00000000',
    '000000000',
    '0000000000',
    '00000000000',
    '000000000000',
    '0000000000000',
    '00000000000000',
    '000000000000000',
    '0000000000000000',
    '00000000000000000',
    '000000000000000000',
    '0000000000000000000',
    '00000000000000000000',
    '000000000000000000000',
    '0000000000000000000000',
    '00000000000000000000000',
    '000000000000000000000000',
    '0000000000000000000000000'
  ];

  var groupSizes = [
    0, 0,
    25, 16, 12, 11, 10, 9, 8,
    8, 7, 7, 7, 7, 6, 6,
    6, 6, 6, 6, 6, 5, 5,
    5, 5, 5, 5, 5, 5, 5,
    5, 5, 5, 5, 5, 5, 5
  ];

  var groupBases = [
    0, 0,
    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,
    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,
    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,
    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,
    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176
  ];

  BN.prototype.toString = function toString (base, padding) {
    base = base || 10;
    padding = padding | 0 || 1;

    var out;
    if (base === 16 || base === 'hex') {
      out = '';
      var off = 0;
      var carry = 0;
      for (var i = 0; i < this.length; i++) {
        var w = this.words[i];
        var word = (((w << off) | carry) & 0xffffff).toString(16);
        carry = (w >>> (24 - off)) & 0xffffff;
        if (carry !== 0 || i !== this.length - 1) {
          out = zeros[6 - word.length] + word + out;
        } else {
          out = word + out;
        }
        off += 2;
        if (off >= 26) {
          off -= 26;
          i--;
        }
      }
      if (carry !== 0) {
        out = carry.toString(16) + out;
      }
      while (out.length % padding !== 0) {
        out = '0' + out;
      }
      if (this.negative !== 0) {
        out = '-' + out;
      }
      return out;
    }

    if (base === (base | 0) && base >= 2 && base <= 36) {
      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));
      var groupSize = groupSizes[base];
      // var groupBase = Math.pow(base, groupSize);
      var groupBase = groupBases[base];
      out = '';
      var c = this.clone();
      c.negative = 0;
      while (!c.isZero()) {
        var r = c.modrn(groupBase).toString(base);
        c = c.idivn(groupBase);

        if (!c.isZero()) {
          out = zeros[groupSize - r.length] + r + out;
        } else {
          out = r + out;
        }
      }
      if (this.isZero()) {
        out = '0' + out;
      }
      while (out.length % padding !== 0) {
        out = '0' + out;
      }
      if (this.negative !== 0) {
        out = '-' + out;
      }
      return out;
    }

    assert(false, 'Base should be between 2 and 36');
  };

  BN.prototype.toNumber = function toNumber () {
    var ret = this.words[0];
    if (this.length === 2) {
      ret += this.words[1] * 0x4000000;
    } else if (this.length === 3 && this.words[2] === 0x01) {
      // NOTE: at this stage it is known that the top bit is set
      ret += 0x10000000000000 + (this.words[1] * 0x4000000);
    } else if (this.length > 2) {
      assert(false, 'Number can only safely store up to 53 bits');
    }
    return (this.negative !== 0) ? -ret : ret;
  };

  BN.prototype.toJSON = function toJSON () {
    return this.toString(16, 2);
  };

  if (Buffer) {
    BN.prototype.toBuffer = function toBuffer (endian, length) {
      return this.toArrayLike(Buffer, endian, length);
    };
  }

  BN.prototype.toArray = function toArray (endian, length) {
    return this.toArrayLike(Array, endian, length);
  };

  var allocate = function allocate (ArrayType, size) {
    if (ArrayType.allocUnsafe) {
      return ArrayType.allocUnsafe(size);
    }
    return new ArrayType(size);
  };

  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {
    this._strip();

    var byteLength = this.byteLength();
    var reqLength = length || Math.max(1, byteLength);
    assert(byteLength <= reqLength, 'byte array longer than desired length');
    assert(reqLength > 0, 'Requested array length <= 0');

    var res = allocate(ArrayType, reqLength);
    var postfix = endian === 'le' ? 'LE' : 'BE';
    this['_toArrayLike' + postfix](res, byteLength);
    return res;
  };

  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {
    var position = 0;
    var carry = 0;

    for (var i = 0, shift = 0; i < this.length; i++) {
      var word = (this.words[i] << shift) | carry;

      res[position++] = word & 0xff;
      if (position < res.length) {
        res[position++] = (word >> 8) & 0xff;
      }
      if (position < res.length) {
        res[position++] = (word >> 16) & 0xff;
      }

      if (shift === 6) {
        if (position < res.length) {
          res[position++] = (word >> 24) & 0xff;
        }
        carry = 0;
        shift = 0;
      } else {
        carry = word >>> 24;
        shift += 2;
      }
    }

    if (position < res.length) {
      res[position++] = carry;

      while (position < res.length) {
        res[position++] = 0;
      }
    }
  };

  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {
    var position = res.length - 1;
    var carry = 0;

    for (var i = 0, shift = 0; i < this.length; i++) {
      var word = (this.words[i] << shift) | carry;

      res[position--] = word & 0xff;
      if (position >= 0) {
        res[position--] = (word >> 8) & 0xff;
      }
      if (position >= 0) {
        res[position--] = (word >> 16) & 0xff;
      }

      if (shift === 6) {
        if (position >= 0) {
          res[position--] = (word >> 24) & 0xff;
        }
        carry = 0;
        shift = 0;
      } else {
        carry = word >>> 24;
        shift += 2;
      }
    }

    if (position >= 0) {
      res[position--] = carry;

      while (position >= 0) {
        res[position--] = 0;
      }
    }
  };

  if (Math.clz32) {
    BN.prototype._countBits = function _countBits (w) {
      return 32 - Math.clz32(w);
    };
  } else {
    BN.prototype._countBits = function _countBits (w) {
      var t = w;
      var r = 0;
      if (t >= 0x1000) {
        r += 13;
        t >>>= 13;
      }
      if (t >= 0x40) {
        r += 7;
        t >>>= 7;
      }
      if (t >= 0x8) {
        r += 4;
        t >>>= 4;
      }
      if (t >= 0x02) {
        r += 2;
        t >>>= 2;
      }
      return r + t;
    };
  }

  BN.prototype._zeroBits = function _zeroBits (w) {
    // Short-cut
    if (w === 0) return 26;

    var t = w;
    var r = 0;
    if ((t & 0x1fff) === 0) {
      r += 13;
      t >>>= 13;
    }
    if ((t & 0x7f) === 0) {
      r += 7;
      t >>>= 7;
    }
    if ((t & 0xf) === 0) {
      r += 4;
      t >>>= 4;
    }
    if ((t & 0x3) === 0) {
      r += 2;
      t >>>= 2;
    }
    if ((t & 0x1) === 0) {
      r++;
    }
    return r;
  };

  // Return number of used bits in a BN
  BN.prototype.bitLength = function bitLength () {
    var w = this.words[this.length - 1];
    var hi = this._countBits(w);
    return (this.length - 1) * 26 + hi;
  };

  function toBitArray (num) {
    var w = new Array(num.bitLength());

    for (var bit = 0; bit < w.length; bit++) {
      var off = (bit / 26) | 0;
      var wbit = bit % 26;

      w[bit] = (num.words[off] >>> wbit) & 0x01;
    }

    return w;
  }

  // Number of trailing zero bits
  BN.prototype.zeroBits = function zeroBits () {
    if (this.isZero()) return 0;

    var r = 0;
    for (var i = 0; i < this.length; i++) {
      var b = this._zeroBits(this.words[i]);
      r += b;
      if (b !== 26) break;
    }
    return r;
  };

  BN.prototype.byteLength = function byteLength () {
    return Math.ceil(this.bitLength() / 8);
  };

  BN.prototype.toTwos = function toTwos (width) {
    if (this.negative !== 0) {
      return this.abs().inotn(width).iaddn(1);
    }
    return this.clone();
  };

  BN.prototype.fromTwos = function fromTwos (width) {
    if (this.testn(width - 1)) {
      return this.notn(width).iaddn(1).ineg();
    }
    return this.clone();
  };

  BN.prototype.isNeg = function isNeg () {
    return this.negative !== 0;
  };

  // Return negative clone of `this`
  BN.prototype.neg = function neg () {
    return this.clone().ineg();
  };

  BN.prototype.ineg = function ineg () {
    if (!this.isZero()) {
      this.negative ^= 1;
    }

    return this;
  };

  // Or `num` with `this` in-place
  BN.prototype.iuor = function iuor (num) {
    while (this.length < num.length) {
      this.words[this.length++] = 0;
    }

    for (var i = 0; i < num.length; i++) {
      this.words[i] = this.words[i] | num.words[i];
    }

    return this._strip();
  };

  BN.prototype.ior = function ior (num) {
    assert((this.negative | num.negative) === 0);
    return this.iuor(num);
  };

  // Or `num` with `this`
  BN.prototype.or = function or (num) {
    if (this.length > num.length) return this.clone().ior(num);
    return num.clone().ior(this);
  };

  BN.prototype.uor = function uor (num) {
    if (this.length > num.length) return this.clone().iuor(num);
    return num.clone().iuor(this);
  };

  // And `num` with `this` in-place
  BN.prototype.iuand = function iuand (num) {
    // b = min-length(num, this)
    var b;
    if (this.length > num.length) {
      b = num;
    } else {
      b = this;
    }

    for (var i = 0; i < b.length; i++) {
      this.words[i] = this.words[i] & num.words[i];
    }

    this.length = b.length;

    return this._strip();
  };

  BN.prototype.iand = function iand (num) {
    assert((this.negative | num.negative) === 0);
    return this.iuand(num);
  };

  // And `num` with `this`
  BN.prototype.and = function and (num) {
    if (this.length > num.length) return this.clone().iand(num);
    return num.clone().iand(this);
  };

  BN.prototype.uand = function uand (num) {
    if (this.length > num.length) return this.clone().iuand(num);
    return num.clone().iuand(this);
  };

  // Xor `num` with `this` in-place
  BN.prototype.iuxor = function iuxor (num) {
    // a.length > b.length
    var a;
    var b;
    if (this.length > num.length) {
      a = this;
      b = num;
    } else {
      a = num;
      b = this;
    }

    for (var i = 0; i < b.length; i++) {
      this.words[i] = a.words[i] ^ b.words[i];
    }

    if (this !== a) {
      for (; i < a.length; i++) {
        this.words[i] = a.words[i];
      }
    }

    this.length = a.length;

    return this._strip();
  };

  BN.prototype.ixor = function ixor (num) {
    assert((this.negative | num.negative) === 0);
    return this.iuxor(num);
  };

  // Xor `num` with `this`
  BN.prototype.xor = function xor (num) {
    if (this.length > num.length) return this.clone().ixor(num);
    return num.clone().ixor(this);
  };

  BN.prototype.uxor = function uxor (num) {
    if (this.length > num.length) return this.clone().iuxor(num);
    return num.clone().iuxor(this);
  };

  // Not ``this`` with ``width`` bitwidth
  BN.prototype.inotn = function inotn (width) {
    assert(typeof width === 'number' && width >= 0);

    var bytesNeeded = Math.ceil(width / 26) | 0;
    var bitsLeft = width % 26;

    // Extend the buffer with leading zeroes
    this._expand(bytesNeeded);

    if (bitsLeft > 0) {
      bytesNeeded--;
    }

    // Handle complete words
    for (var i = 0; i < bytesNeeded; i++) {
      this.words[i] = ~this.words[i] & 0x3ffffff;
    }

    // Handle the residue
    if (bitsLeft > 0) {
      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));
    }

    // And remove leading zeroes
    return this._strip();
  };

  BN.prototype.notn = function notn (width) {
    return this.clone().inotn(width);
  };

  // Set `bit` of `this`
  BN.prototype.setn = function setn (bit, val) {
    assert(typeof bit === 'number' && bit >= 0);

    var off = (bit / 26) | 0;
    var wbit = bit % 26;

    this._expand(off + 1);

    if (val) {
      this.words[off] = this.words[off] | (1 << wbit);
    } else {
      this.words[off] = this.words[off] & ~(1 << wbit);
    }

    return this._strip();
  };

  // Add `num` to `this` in-place
  BN.prototype.iadd = function iadd (num) {
    var r;

    // negative + positive
    if (this.negative !== 0 && num.negative === 0) {
      this.negative = 0;
      r = this.isub(num);
      this.negative ^= 1;
      return this._normSign();

    // positive + negative
    } else if (this.negative === 0 && num.negative !== 0) {
      num.negative = 0;
      r = this.isub(num);
      num.negative = 1;
      return r._normSign();
    }

    // a.length > b.length
    var a, b;
    if (this.length > num.length) {
      a = this;
      b = num;
    } else {
      a = num;
      b = this;
    }

    var carry = 0;
    for (var i = 0; i < b.length; i++) {
      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;
      this.words[i] = r & 0x3ffffff;
      carry = r >>> 26;
    }
    for (; carry !== 0 && i < a.length; i++) {
      r = (a.words[i] | 0) + carry;
      this.words[i] = r & 0x3ffffff;
      carry = r >>> 26;
    }

    this.length = a.length;
    if (carry !== 0) {
      this.words[this.length] = carry;
      this.length++;
    // Copy the rest of the words
    } else if (a !== this) {
      for (; i < a.length; i++) {
        this.words[i] = a.words[i];
      }
    }

    return this;
  };

  // Add `num` to `this`
  BN.prototype.add = function add (num) {
    var res;
    if (num.negative !== 0 && this.negative === 0) {
      num.negative = 0;
      res = this.sub(num);
      num.negative ^= 1;
      return res;
    } else if (num.negative === 0 && this.negative !== 0) {
      this.negative = 0;
      res = num.sub(this);
      this.negative = 1;
      return res;
    }

    if (this.length > num.length) return this.clone().iadd(num);

    return num.clone().iadd(this);
  };

  // Subtract `num` from `this` in-place
  BN.prototype.isub = function isub (num) {
    // this - (-num) = this + num
    if (num.negative !== 0) {
      num.negative = 0;
      var r = this.iadd(num);
      num.negative = 1;
      return r._normSign();

    // -this - num = -(this + num)
    } else if (this.negative !== 0) {
      this.negative = 0;
      this.iadd(num);
      this.negative = 1;
      return this._normSign();
    }

    // At this point both numbers are positive
    var cmp = this.cmp(num);

    // Optimization - zeroify
    if (cmp === 0) {
      this.negative = 0;
      this.length = 1;
      this.words[0] = 0;
      return this;
    }

    // a > b
    var a, b;
    if (cmp > 0) {
      a = this;
      b = num;
    } else {
      a = num;
      b = this;
    }

    var carry = 0;
    for (var i = 0; i < b.length; i++) {
      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;
      carry = r >> 26;
      this.words[i] = r & 0x3ffffff;
    }
    for (; carry !== 0 && i < a.length; i++) {
      r = (a.words[i] | 0) + carry;
      carry = r >> 26;
      this.words[i] = r & 0x3ffffff;
    }

    // Copy rest of the words
    if (carry === 0 && i < a.length && a !== this) {
      for (; i < a.length; i++) {
        this.words[i] = a.words[i];
      }
    }

    this.length = Math.max(this.length, i);

    if (a !== this) {
      this.negative = 1;
    }

    return this._strip();
  };

  // Subtract `num` from `this`
  BN.prototype.sub = function sub (num) {
    return this.clone().isub(num);
  };

  function smallMulTo (self, num, out) {
    out.negative = num.negative ^ self.negative;
    var len = (self.length + num.length) | 0;
    out.length = len;
    len = (len - 1) | 0;

    // Peel one iteration (compiler can't do it, because of code complexity)
    var a = self.words[0] | 0;
    var b = num.words[0] | 0;
    var r = a * b;

    var lo = r & 0x3ffffff;
    var carry = (r / 0x4000000) | 0;
    out.words[0] = lo;

    for (var k = 1; k < len; k++) {
      // Sum all words with the same `i + j = k` and accumulate `ncarry`,
      // note that ncarry could be >= 0x3ffffff
      var ncarry = carry >>> 26;
      var rword = carry & 0x3ffffff;
      var maxJ = Math.min(k, num.length - 1);
      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
        var i = (k - j) | 0;
        a = self.words[i] | 0;
        b = num.words[j] | 0;
        r = a * b + rword;
        ncarry += (r / 0x4000000) | 0;
        rword = r & 0x3ffffff;
      }
      out.words[k] = rword | 0;
      carry = ncarry | 0;
    }
    if (carry !== 0) {
      out.words[k] = carry | 0;
    } else {
      out.length--;
    }

    return out._strip();
  }

  // TODO(indutny): it may be reasonable to omit it for users who don't need
  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit
  // multiplication (like elliptic secp256k1).
  var comb10MulTo = function comb10MulTo (self, num, out) {
    var a = self.words;
    var b = num.words;
    var o = out.words;
    var c = 0;
    var lo;
    var mid;
    var hi;
    var a0 = a[0] | 0;
    var al0 = a0 & 0x1fff;
    var ah0 = a0 >>> 13;
    var a1 = a[1] | 0;
    var al1 = a1 & 0x1fff;
    var ah1 = a1 >>> 13;
    var a2 = a[2] | 0;
    var al2 = a2 & 0x1fff;
    var ah2 = a2 >>> 13;
    var a3 = a[3] | 0;
    var al3 = a3 & 0x1fff;
    var ah3 = a3 >>> 13;
    var a4 = a[4] | 0;
    var al4 = a4 & 0x1fff;
    var ah4 = a4 >>> 13;
    var a5 = a[5] | 0;
    var al5 = a5 & 0x1fff;
    var ah5 = a5 >>> 13;
    var a6 = a[6] | 0;
    var al6 = a6 & 0x1fff;
    var ah6 = a6 >>> 13;
    var a7 = a[7] | 0;
    var al7 = a7 & 0x1fff;
    var ah7 = a7 >>> 13;
    var a8 = a[8] | 0;
    var al8 = a8 & 0x1fff;
    var ah8 = a8 >>> 13;
    var a9 = a[9] | 0;
    var al9 = a9 & 0x1fff;
    var ah9 = a9 >>> 13;
    var b0 = b[0] | 0;
    var bl0 = b0 & 0x1fff;
    var bh0 = b0 >>> 13;
    var b1 = b[1] | 0;
    var bl1 = b1 & 0x1fff;
    var bh1 = b1 >>> 13;
    var b2 = b[2] | 0;
    var bl2 = b2 & 0x1fff;
    var bh2 = b2 >>> 13;
    var b3 = b[3] | 0;
    var bl3 = b3 & 0x1fff;
    var bh3 = b3 >>> 13;
    var b4 = b[4] | 0;
    var bl4 = b4 & 0x1fff;
    var bh4 = b4 >>> 13;
    var b5 = b[5] | 0;
    var bl5 = b5 & 0x1fff;
    var bh5 = b5 >>> 13;
    var b6 = b[6] | 0;
    var bl6 = b6 & 0x1fff;
    var bh6 = b6 >>> 13;
    var b7 = b[7] | 0;
    var bl7 = b7 & 0x1fff;
    var bh7 = b7 >>> 13;
    var b8 = b[8] | 0;
    var bl8 = b8 & 0x1fff;
    var bh8 = b8 >>> 13;
    var b9 = b[9] | 0;
    var bl9 = b9 & 0x1fff;
    var bh9 = b9 >>> 13;

    out.negative = self.negative ^ num.negative;
    out.length = 19;
    /* k = 0 */
    lo = Math.imul(al0, bl0);
    mid = Math.imul(al0, bh0);
    mid = (mid + Math.imul(ah0, bl0)) | 0;
    hi = Math.imul(ah0, bh0);
    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;
    w0 &= 0x3ffffff;
    /* k = 1 */
    lo = Math.imul(al1, bl0);
    mid = Math.imul(al1, bh0);
    mid = (mid + Math.imul(ah1, bl0)) | 0;
    hi = Math.imul(ah1, bh0);
    lo = (lo + Math.imul(al0, bl1)) | 0;
    mid = (mid + Math.imul(al0, bh1)) | 0;
    mid = (mid + Math.imul(ah0, bl1)) | 0;
    hi = (hi + Math.imul(ah0, bh1)) | 0;
    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;
    w1 &= 0x3ffffff;
    /* k = 2 */
    lo = Math.imul(al2, bl0);
    mid = Math.imul(al2, bh0);
    mid = (mid + Math.imul(ah2, bl0)) | 0;
    hi = Math.imul(ah2, bh0);
    lo = (lo + Math.imul(al1, bl1)) | 0;
    mid = (mid + Math.imul(al1, bh1)) | 0;
    mid = (mid + Math.imul(ah1, bl1)) | 0;
    hi = (hi + Math.imul(ah1, bh1)) | 0;
    lo = (lo + Math.imul(al0, bl2)) | 0;
    mid = (mid + Math.imul(al0, bh2)) | 0;
    mid = (mid + Math.imul(ah0, bl2)) | 0;
    hi = (hi + Math.imul(ah0, bh2)) | 0;
    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;
    w2 &= 0x3ffffff;
    /* k = 3 */
    lo = Math.imul(al3, bl0);
    mid = Math.imul(al3, bh0);
    mid = (mid + Math.imul(ah3, bl0)) | 0;
    hi = Math.imul(ah3, bh0);
    lo = (lo + Math.imul(al2, bl1)) | 0;
    mid = (mid + Math.imul(al2, bh1)) | 0;
    mid = (mid + Math.imul(ah2, bl1)) | 0;
    hi = (hi + Math.imul(ah2, bh1)) | 0;
    lo = (lo + Math.imul(al1, bl2)) | 0;
    mid = (mid + Math.imul(al1, bh2)) | 0;
    mid = (mid + Math.imul(ah1, bl2)) | 0;
    hi = (hi + Math.imul(ah1, bh2)) | 0;
    lo = (lo + Math.imul(al0, bl3)) | 0;
    mid = (mid + Math.imul(al0, bh3)) | 0;
    mid = (mid + Math.imul(ah0, bl3)) | 0;
    hi = (hi + Math.imul(ah0, bh3)) | 0;
    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;
    w3 &= 0x3ffffff;
    /* k = 4 */
    lo = Math.imul(al4, bl0);
    mid = Math.imul(al4, bh0);
    mid = (mid + Math.imul(ah4, bl0)) | 0;
    hi = Math.imul(ah4, bh0);
    lo = (lo + Math.imul(al3, bl1)) | 0;
    mid = (mid + Math.imul(al3, bh1)) | 0;
    mid = (mid + Math.imul(ah3, bl1)) | 0;
    hi = (hi + Math.imul(ah3, bh1)) | 0;
    lo = (lo + Math.imul(al2, bl2)) | 0;
    mid = (mid + Math.imul(al2, bh2)) | 0;
    mid = (mid + Math.imul(ah2, bl2)) | 0;
    hi = (hi + Math.imul(ah2, bh2)) | 0;
    lo = (lo + Math.imul(al1, bl3)) | 0;
    mid = (mid + Math.imul(al1, bh3)) | 0;
    mid = (mid + Math.imul(ah1, bl3)) | 0;
    hi = (hi + Math.imul(ah1, bh3)) | 0;
    lo = (lo + Math.imul(al0, bl4)) | 0;
    mid = (mid + Math.imul(al0, bh4)) | 0;
    mid = (mid + Math.imul(ah0, bl4)) | 0;
    hi = (hi + Math.imul(ah0, bh4)) | 0;
    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;
    w4 &= 0x3ffffff;
    /* k = 5 */
    lo = Math.imul(al5, bl0);
    mid = Math.imul(al5, bh0);
    mid = (mid + Math.imul(ah5, bl0)) | 0;
    hi = Math.imul(ah5, bh0);
    lo = (lo + Math.imul(al4, bl1)) | 0;
    mid = (mid + Math.imul(al4, bh1)) | 0;
    mid = (mid + Math.imul(ah4, bl1)) | 0;
    hi = (hi + Math.imul(ah4, bh1)) | 0;
    lo = (lo + Math.imul(al3, bl2)) | 0;
    mid = (mid + Math.imul(al3, bh2)) | 0;
    mid = (mid + Math.imul(ah3, bl2)) | 0;
    hi = (hi + Math.imul(ah3, bh2)) | 0;
    lo = (lo + Math.imul(al2, bl3)) | 0;
    mid = (mid + Math.imul(al2, bh3)) | 0;
    mid = (mid + Math.imul(ah2, bl3)) | 0;
    hi = (hi + Math.imul(ah2, bh3)) | 0;
    lo = (lo + Math.imul(al1, bl4)) | 0;
    mid = (mid + Math.imul(al1, bh4)) | 0;
    mid = (mid + Math.imul(ah1, bl4)) | 0;
    hi = (hi + Math.imul(ah1, bh4)) | 0;
    lo = (lo + Math.imul(al0, bl5)) | 0;
    mid = (mid + Math.imul(al0, bh5)) | 0;
    mid = (mid + Math.imul(ah0, bl5)) | 0;
    hi = (hi + Math.imul(ah0, bh5)) | 0;
    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;
    w5 &= 0x3ffffff;
    /* k = 6 */
    lo = Math.imul(al6, bl0);
    mid = Math.imul(al6, bh0);
    mid = (mid + Math.imul(ah6, bl0)) | 0;
    hi = Math.imul(ah6, bh0);
    lo = (lo + Math.imul(al5, bl1)) | 0;
    mid = (mid + Math.imul(al5, bh1)) | 0;
    mid = (mid + Math.imul(ah5, bl1)) | 0;
    hi = (hi + Math.imul(ah5, bh1)) | 0;
    lo = (lo + Math.imul(al4, bl2)) | 0;
    mid = (mid + Math.imul(al4, bh2)) | 0;
    mid = (mid + Math.imul(ah4, bl2)) | 0;
    hi = (hi + Math.imul(ah4, bh2)) | 0;
    lo = (lo + Math.imul(al3, bl3)) | 0;
    mid = (mid + Math.imul(al3, bh3)) | 0;
    mid = (mid + Math.imul(ah3, bl3)) | 0;
    hi = (hi + Math.imul(ah3, bh3)) | 0;
    lo = (lo + Math.imul(al2, bl4)) | 0;
    mid = (mid + Math.imul(al2, bh4)) | 0;
    mid = (mid + Math.imul(ah2, bl4)) | 0;
    hi = (hi + Math.imul(ah2, bh4)) | 0;
    lo = (lo + Math.imul(al1, bl5)) | 0;
    mid = (mid + Math.imul(al1, bh5)) | 0;
    mid = (mid + Math.imul(ah1, bl5)) | 0;
    hi = (hi + Math.imul(ah1, bh5)) | 0;
    lo = (lo + Math.imul(al0, bl6)) | 0;
    mid = (mid + Math.imul(al0, bh6)) | 0;
    mid = (mid + Math.imul(ah0, bl6)) | 0;
    hi = (hi + Math.imul(ah0, bh6)) | 0;
    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;
    w6 &= 0x3ffffff;
    /* k = 7 */
    lo = Math.imul(al7, bl0);
    mid = Math.imul(al7, bh0);
    mid = (mid + Math.imul(ah7, bl0)) | 0;
    hi = Math.imul(ah7, bh0);
    lo = (lo + Math.imul(al6, bl1)) | 0;
    mid = (mid + Math.imul(al6, bh1)) | 0;
    mid = (mid + Math.imul(ah6, bl1)) | 0;
    hi = (hi + Math.imul(ah6, bh1)) | 0;
    lo = (lo + Math.imul(al5, bl2)) | 0;
    mid = (mid + Math.imul(al5, bh2)) | 0;
    mid = (mid + Math.imul(ah5, bl2)) | 0;
    hi = (hi + Math.imul(ah5, bh2)) | 0;
    lo = (lo + Math.imul(al4, bl3)) | 0;
    mid = (mid + Math.imul(al4, bh3)) | 0;
    mid = (mid + Math.imul(ah4, bl3)) | 0;
    hi = (hi + Math.imul(ah4, bh3)) | 0;
    lo = (lo + Math.imul(al3, bl4)) | 0;
    mid = (mid + Math.imul(al3, bh4)) | 0;
    mid = (mid + Math.imul(ah3, bl4)) | 0;
    hi = (hi + Math.imul(ah3, bh4)) | 0;
    lo = (lo + Math.imul(al2, bl5)) | 0;
    mid = (mid + Math.imul(al2, bh5)) | 0;
    mid = (mid + Math.imul(ah2, bl5)) | 0;
    hi = (hi + Math.imul(ah2, bh5)) | 0;
    lo = (lo + Math.imul(al1, bl6)) | 0;
    mid = (mid + Math.imul(al1, bh6)) | 0;
    mid = (mid + Math.imul(ah1, bl6)) | 0;
    hi = (hi + Math.imul(ah1, bh6)) | 0;
    lo = (lo + Math.imul(al0, bl7)) | 0;
    mid = (mid + Math.imul(al0, bh7)) | 0;
    mid = (mid + Math.imul(ah0, bl7)) | 0;
    hi = (hi + Math.imul(ah0, bh7)) | 0;
    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;
    w7 &= 0x3ffffff;
    /* k = 8 */
    lo = Math.imul(al8, bl0);
    mid = Math.imul(al8, bh0);
    mid = (mid + Math.imul(ah8, bl0)) | 0;
    hi = Math.imul(ah8, bh0);
    lo = (lo + Math.imul(al7, bl1)) | 0;
    mid = (mid + Math.imul(al7, bh1)) | 0;
    mid = (mid + Math.imul(ah7, bl1)) | 0;
    hi = (hi + Math.imul(ah7, bh1)) | 0;
    lo = (lo + Math.imul(al6, bl2)) | 0;
    mid = (mid + Math.imul(al6, bh2)) | 0;
    mid = (mid + Math.imul(ah6, bl2)) | 0;
    hi = (hi + Math.imul(ah6, bh2)) | 0;
    lo = (lo + Math.imul(al5, bl3)) | 0;
    mid = (mid + Math.imul(al5, bh3)) | 0;
    mid = (mid + Math.imul(ah5, bl3)) | 0;
    hi = (hi + Math.imul(ah5, bh3)) | 0;
    lo = (lo + Math.imul(al4, bl4)) | 0;
    mid = (mid + Math.imul(al4, bh4)) | 0;
    mid = (mid + Math.imul(ah4, bl4)) | 0;
    hi = (hi + Math.imul(ah4, bh4)) | 0;
    lo = (lo + Math.imul(al3, bl5)) | 0;
    mid = (mid + Math.imul(al3, bh5)) | 0;
    mid = (mid + Math.imul(ah3, bl5)) | 0;
    hi = (hi + Math.imul(ah3, bh5)) | 0;
    lo = (lo + Math.imul(al2, bl6)) | 0;
    mid = (mid + Math.imul(al2, bh6)) | 0;
    mid = (mid + Math.imul(ah2, bl6)) | 0;
    hi = (hi + Math.imul(ah2, bh6)) | 0;
    lo = (lo + Math.imul(al1, bl7)) | 0;
    mid = (mid + Math.imul(al1, bh7)) | 0;
    mid = (mid + Math.imul(ah1, bl7)) | 0;
    hi = (hi + Math.imul(ah1, bh7)) | 0;
    lo = (lo + Math.imul(al0, bl8)) | 0;
    mid = (mid + Math.imul(al0, bh8)) | 0;
    mid = (mid + Math.imul(ah0, bl8)) | 0;
    hi = (hi + Math.imul(ah0, bh8)) | 0;
    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;
    w8 &= 0x3ffffff;
    /* k = 9 */
    lo = Math.imul(al9, bl0);
    mid = Math.imul(al9, bh0);
    mid = (mid + Math.imul(ah9, bl0)) | 0;
    hi = Math.imul(ah9, bh0);
    lo = (lo + Math.imul(al8, bl1)) | 0;
    mid = (mid + Math.imul(al8, bh1)) | 0;
    mid = (mid + Math.imul(ah8, bl1)) | 0;
    hi = (hi + Math.imul(ah8, bh1)) | 0;
    lo = (lo + Math.imul(al7, bl2)) | 0;
    mid = (mid + Math.imul(al7, bh2)) | 0;
    mid = (mid + Math.imul(ah7, bl2)) | 0;
    hi = (hi + Math.imul(ah7, bh2)) | 0;
    lo = (lo + Math.imul(al6, bl3)) | 0;
    mid = (mid + Math.imul(al6, bh3)) | 0;
    mid = (mid + Math.imul(ah6, bl3)) | 0;
    hi = (hi + Math.imul(ah6, bh3)) | 0;
    lo = (lo + Math.imul(al5, bl4)) | 0;
    mid = (mid + Math.imul(al5, bh4)) | 0;
    mid = (mid + Math.imul(ah5, bl4)) | 0;
    hi = (hi + Math.imul(ah5, bh4)) | 0;
    lo = (lo + Math.imul(al4, bl5)) | 0;
    mid = (mid + Math.imul(al4, bh5)) | 0;
    mid = (mid + Math.imul(ah4, bl5)) | 0;
    hi = (hi + Math.imul(ah4, bh5)) | 0;
    lo = (lo + Math.imul(al3, bl6)) | 0;
    mid = (mid + Math.imul(al3, bh6)) | 0;
    mid = (mid + Math.imul(ah3, bl6)) | 0;
    hi = (hi + Math.imul(ah3, bh6)) | 0;
    lo = (lo + Math.imul(al2, bl7)) | 0;
    mid = (mid + Math.imul(al2, bh7)) | 0;
    mid = (mid + Math.imul(ah2, bl7)) | 0;
    hi = (hi + Math.imul(ah2, bh7)) | 0;
    lo = (lo + Math.imul(al1, bl8)) | 0;
    mid = (mid + Math.imul(al1, bh8)) | 0;
    mid = (mid + Math.imul(ah1, bl8)) | 0;
    hi = (hi + Math.imul(ah1, bh8)) | 0;
    lo = (lo + Math.imul(al0, bl9)) | 0;
    mid = (mid + Math.imul(al0, bh9)) | 0;
    mid = (mid + Math.imul(ah0, bl9)) | 0;
    hi = (hi + Math.imul(ah0, bh9)) | 0;
    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;
    w9 &= 0x3ffffff;
    /* k = 10 */
    lo = Math.imul(al9, bl1);
    mid = Math.imul(al9, bh1);
    mid = (mid + Math.imul(ah9, bl1)) | 0;
    hi = Math.imul(ah9, bh1);
    lo = (lo + Math.imul(al8, bl2)) | 0;
    mid = (mid + Math.imul(al8, bh2)) | 0;
    mid = (mid + Math.imul(ah8, bl2)) | 0;
    hi = (hi + Math.imul(ah8, bh2)) | 0;
    lo = (lo + Math.imul(al7, bl3)) | 0;
    mid = (mid + Math.imul(al7, bh3)) | 0;
    mid = (mid + Math.imul(ah7, bl3)) | 0;
    hi = (hi + Math.imul(ah7, bh3)) | 0;
    lo = (lo + Math.imul(al6, bl4)) | 0;
    mid = (mid + Math.imul(al6, bh4)) | 0;
    mid = (mid + Math.imul(ah6, bl4)) | 0;
    hi = (hi + Math.imul(ah6, bh4)) | 0;
    lo = (lo + Math.imul(al5, bl5)) | 0;
    mid = (mid + Math.imul(al5, bh5)) | 0;
    mid = (mid + Math.imul(ah5, bl5)) | 0;
    hi = (hi + Math.imul(ah5, bh5)) | 0;
    lo = (lo + Math.imul(al4, bl6)) | 0;
    mid = (mid + Math.imul(al4, bh6)) | 0;
    mid = (mid + Math.imul(ah4, bl6)) | 0;
    hi = (hi + Math.imul(ah4, bh6)) | 0;
    lo = (lo + Math.imul(al3, bl7)) | 0;
    mid = (mid + Math.imul(al3, bh7)) | 0;
    mid = (mid + Math.imul(ah3, bl7)) | 0;
    hi = (hi + Math.imul(ah3, bh7)) | 0;
    lo = (lo + Math.imul(al2, bl8)) | 0;
    mid = (mid + Math.imul(al2, bh8)) | 0;
    mid = (mid + Math.imul(ah2, bl8)) | 0;
    hi = (hi + Math.imul(ah2, bh8)) | 0;
    lo = (lo + Math.imul(al1, bl9)) | 0;
    mid = (mid + Math.imul(al1, bh9)) | 0;
    mid = (mid + Math.imul(ah1, bl9)) | 0;
    hi = (hi + Math.imul(ah1, bh9)) | 0;
    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;
    w10 &= 0x3ffffff;
    /* k = 11 */
    lo = Math.imul(al9, bl2);
    mid = Math.imul(al9, bh2);
    mid = (mid + Math.imul(ah9, bl2)) | 0;
    hi = Math.imul(ah9, bh2);
    lo = (lo + Math.imul(al8, bl3)) | 0;
    mid = (mid + Math.imul(al8, bh3)) | 0;
    mid = (mid + Math.imul(ah8, bl3)) | 0;
    hi = (hi + Math.imul(ah8, bh3)) | 0;
    lo = (lo + Math.imul(al7, bl4)) | 0;
    mid = (mid + Math.imul(al7, bh4)) | 0;
    mid = (mid + Math.imul(ah7, bl4)) | 0;
    hi = (hi + Math.imul(ah7, bh4)) | 0;
    lo = (lo + Math.imul(al6, bl5)) | 0;
    mid = (mid + Math.imul(al6, bh5)) | 0;
    mid = (mid + Math.imul(ah6, bl5)) | 0;
    hi = (hi + Math.imul(ah6, bh5)) | 0;
    lo = (lo + Math.imul(al5, bl6)) | 0;
    mid = (mid + Math.imul(al5, bh6)) | 0;
    mid = (mid + Math.imul(ah5, bl6)) | 0;
    hi = (hi + Math.imul(ah5, bh6)) | 0;
    lo = (lo + Math.imul(al4, bl7)) | 0;
    mid = (mid + Math.imul(al4, bh7)) | 0;
    mid = (mid + Math.imul(ah4, bl7)) | 0;
    hi = (hi + Math.imul(ah4, bh7)) | 0;
    lo = (lo + Math.imul(al3, bl8)) | 0;
    mid = (mid + Math.imul(al3, bh8)) | 0;
    mid = (mid + Math.imul(ah3, bl8)) | 0;
    hi = (hi + Math.imul(ah3, bh8)) | 0;
    lo = (lo + Math.imul(al2, bl9)) | 0;
    mid = (mid + Math.imul(al2, bh9)) | 0;
    mid = (mid + Math.imul(ah2, bl9)) | 0;
    hi = (hi + Math.imul(ah2, bh9)) | 0;
    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;
    w11 &= 0x3ffffff;
    /* k = 12 */
    lo = Math.imul(al9, bl3);
    mid = Math.imul(al9, bh3);
    mid = (mid + Math.imul(ah9, bl3)) | 0;
    hi = Math.imul(ah9, bh3);
    lo = (lo + Math.imul(al8, bl4)) | 0;
    mid = (mid + Math.imul(al8, bh4)) | 0;
    mid = (mid + Math.imul(ah8, bl4)) | 0;
    hi = (hi + Math.imul(ah8, bh4)) | 0;
    lo = (lo + Math.imul(al7, bl5)) | 0;
    mid = (mid + Math.imul(al7, bh5)) | 0;
    mid = (mid + Math.imul(ah7, bl5)) | 0;
    hi = (hi + Math.imul(ah7, bh5)) | 0;
    lo = (lo + Math.imul(al6, bl6)) | 0;
    mid = (mid + Math.imul(al6, bh6)) | 0;
    mid = (mid + Math.imul(ah6, bl6)) | 0;
    hi = (hi + Math.imul(ah6, bh6)) | 0;
    lo = (lo + Math.imul(al5, bl7)) | 0;
    mid = (mid + Math.imul(al5, bh7)) | 0;
    mid = (mid + Math.imul(ah5, bl7)) | 0;
    hi = (hi + Math.imul(ah5, bh7)) | 0;
    lo = (lo + Math.imul(al4, bl8)) | 0;
    mid = (mid + Math.imul(al4, bh8)) | 0;
    mid = (mid + Math.imul(ah4, bl8)) | 0;
    hi = (hi + Math.imul(ah4, bh8)) | 0;
    lo = (lo + Math.imul(al3, bl9)) | 0;
    mid = (mid + Math.imul(al3, bh9)) | 0;
    mid = (mid + Math.imul(ah3, bl9)) | 0;
    hi = (hi + Math.imul(ah3, bh9)) | 0;
    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;
    w12 &= 0x3ffffff;
    /* k = 13 */
    lo = Math.imul(al9, bl4);
    mid = Math.imul(al9, bh4);
    mid = (mid + Math.imul(ah9, bl4)) | 0;
    hi = Math.imul(ah9, bh4);
    lo = (lo + Math.imul(al8, bl5)) | 0;
    mid = (mid + Math.imul(al8, bh5)) | 0;
    mid = (mid + Math.imul(ah8, bl5)) | 0;
    hi = (hi + Math.imul(ah8, bh5)) | 0;
    lo = (lo + Math.imul(al7, bl6)) | 0;
    mid = (mid + Math.imul(al7, bh6)) | 0;
    mid = (mid + Math.imul(ah7, bl6)) | 0;
    hi = (hi + Math.imul(ah7, bh6)) | 0;
    lo = (lo + Math.imul(al6, bl7)) | 0;
    mid = (mid + Math.imul(al6, bh7)) | 0;
    mid = (mid + Math.imul(ah6, bl7)) | 0;
    hi = (hi + Math.imul(ah6, bh7)) | 0;
    lo = (lo + Math.imul(al5, bl8)) | 0;
    mid = (mid + Math.imul(al5, bh8)) | 0;
    mid = (mid + Math.imul(ah5, bl8)) | 0;
    hi = (hi + Math.imul(ah5, bh8)) | 0;
    lo = (lo + Math.imul(al4, bl9)) | 0;
    mid = (mid + Math.imul(al4, bh9)) | 0;
    mid = (mid + Math.imul(ah4, bl9)) | 0;
    hi = (hi + Math.imul(ah4, bh9)) | 0;
    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;
    w13 &= 0x3ffffff;
    /* k = 14 */
    lo = Math.imul(al9, bl5);
    mid = Math.imul(al9, bh5);
    mid = (mid + Math.imul(ah9, bl5)) | 0;
    hi = Math.imul(ah9, bh5);
    lo = (lo + Math.imul(al8, bl6)) | 0;
    mid = (mid + Math.imul(al8, bh6)) | 0;
    mid = (mid + Math.imul(ah8, bl6)) | 0;
    hi = (hi + Math.imul(ah8, bh6)) | 0;
    lo = (lo + Math.imul(al7, bl7)) | 0;
    mid = (mid + Math.imul(al7, bh7)) | 0;
    mid = (mid + Math.imul(ah7, bl7)) | 0;
    hi = (hi + Math.imul(ah7, bh7)) | 0;
    lo = (lo + Math.imul(al6, bl8)) | 0;
    mid = (mid + Math.imul(al6, bh8)) | 0;
    mid = (mid + Math.imul(ah6, bl8)) | 0;
    hi = (hi + Math.imul(ah6, bh8)) | 0;
    lo = (lo + Math.imul(al5, bl9)) | 0;
    mid = (mid + Math.imul(al5, bh9)) | 0;
    mid = (mid + Math.imul(ah5, bl9)) | 0;
    hi = (hi + Math.imul(ah5, bh9)) | 0;
    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;
    w14 &= 0x3ffffff;
    /* k = 15 */
    lo = Math.imul(al9, bl6);
    mid = Math.imul(al9, bh6);
    mid = (mid + Math.imul(ah9, bl6)) | 0;
    hi = Math.imul(ah9, bh6);
    lo = (lo + Math.imul(al8, bl7)) | 0;
    mid = (mid + Math.imul(al8, bh7)) | 0;
    mid = (mid + Math.imul(ah8, bl7)) | 0;
    hi = (hi + Math.imul(ah8, bh7)) | 0;
    lo = (lo + Math.imul(al7, bl8)) | 0;
    mid = (mid + Math.imul(al7, bh8)) | 0;
    mid = (mid + Math.imul(ah7, bl8)) | 0;
    hi = (hi + Math.imul(ah7, bh8)) | 0;
    lo = (lo + Math.imul(al6, bl9)) | 0;
    mid = (mid + Math.imul(al6, bh9)) | 0;
    mid = (mid + Math.imul(ah6, bl9)) | 0;
    hi = (hi + Math.imul(ah6, bh9)) | 0;
    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;
    w15 &= 0x3ffffff;
    /* k = 16 */
    lo = Math.imul(al9, bl7);
    mid = Math.imul(al9, bh7);
    mid = (mid + Math.imul(ah9, bl7)) | 0;
    hi = Math.imul(ah9, bh7);
    lo = (lo + Math.imul(al8, bl8)) | 0;
    mid = (mid + Math.imul(al8, bh8)) | 0;
    mid = (mid + Math.imul(ah8, bl8)) | 0;
    hi = (hi + Math.imul(ah8, bh8)) | 0;
    lo = (lo + Math.imul(al7, bl9)) | 0;
    mid = (mid + Math.imul(al7, bh9)) | 0;
    mid = (mid + Math.imul(ah7, bl9)) | 0;
    hi = (hi + Math.imul(ah7, bh9)) | 0;
    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;
    w16 &= 0x3ffffff;
    /* k = 17 */
    lo = Math.imul(al9, bl8);
    mid = Math.imul(al9, bh8);
    mid = (mid + Math.imul(ah9, bl8)) | 0;
    hi = Math.imul(ah9, bh8);
    lo = (lo + Math.imul(al8, bl9)) | 0;
    mid = (mid + Math.imul(al8, bh9)) | 0;
    mid = (mid + Math.imul(ah8, bl9)) | 0;
    hi = (hi + Math.imul(ah8, bh9)) | 0;
    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;
    w17 &= 0x3ffffff;
    /* k = 18 */
    lo = Math.imul(al9, bl9);
    mid = Math.imul(al9, bh9);
    mid = (mid + Math.imul(ah9, bl9)) | 0;
    hi = Math.imul(ah9, bh9);
    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;
    w18 &= 0x3ffffff;
    o[0] = w0;
    o[1] = w1;
    o[2] = w2;
    o[3] = w3;
    o[4] = w4;
    o[5] = w5;
    o[6] = w6;
    o[7] = w7;
    o[8] = w8;
    o[9] = w9;
    o[10] = w10;
    o[11] = w11;
    o[12] = w12;
    o[13] = w13;
    o[14] = w14;
    o[15] = w15;
    o[16] = w16;
    o[17] = w17;
    o[18] = w18;
    if (c !== 0) {
      o[19] = c;
      out.length++;
    }
    return out;
  };

  // Polyfill comb
  if (!Math.imul) {
    comb10MulTo = smallMulTo;
  }

  function bigMulTo (self, num, out) {
    out.negative = num.negative ^ self.negative;
    out.length = self.length + num.length;

    var carry = 0;
    var hncarry = 0;
    for (var k = 0; k < out.length - 1; k++) {
      // Sum all words with the same `i + j = k` and accumulate `ncarry`,
      // note that ncarry could be >= 0x3ffffff
      var ncarry = hncarry;
      hncarry = 0;
      var rword = carry & 0x3ffffff;
      var maxJ = Math.min(k, num.length - 1);
      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
        var i = k - j;
        var a = self.words[i] | 0;
        var b = num.words[j] | 0;
        var r = a * b;

        var lo = r & 0x3ffffff;
        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;
        lo = (lo + rword) | 0;
        rword = lo & 0x3ffffff;
        ncarry = (ncarry + (lo >>> 26)) | 0;

        hncarry += ncarry >>> 26;
        ncarry &= 0x3ffffff;
      }
      out.words[k] = rword;
      carry = ncarry;
      ncarry = hncarry;
    }
    if (carry !== 0) {
      out.words[k] = carry;
    } else {
      out.length--;
    }

    return out._strip();
  }

  function jumboMulTo (self, num, out) {
    // Temporary disable, see https://github.com/indutny/bn.js/issues/211
    // var fftm = new FFTM();
    // return fftm.mulp(self, num, out);
    return bigMulTo(self, num, out);
  }

  BN.prototype.mulTo = function mulTo (num, out) {
    var res;
    var len = this.length + num.length;
    if (this.length === 10 && num.length === 10) {
      res = comb10MulTo(this, num, out);
    } else if (len < 63) {
      res = smallMulTo(this, num, out);
    } else if (len < 1024) {
      res = bigMulTo(this, num, out);
    } else {
      res = jumboMulTo(this, num, out);
    }

    return res;
  };

  // Cooley-Tukey algorithm for FFT
  // slightly revisited to rely on looping instead of recursion

  function FFTM (x, y) {
    this.x = x;
    this.y = y;
  }

  FFTM.prototype.makeRBT = function makeRBT (N) {
    var t = new Array(N);
    var l = BN.prototype._countBits(N) - 1;
    for (var i = 0; i < N; i++) {
      t[i] = this.revBin(i, l, N);
    }

    return t;
  };

  // Returns binary-reversed representation of `x`
  FFTM.prototype.revBin = function revBin (x, l, N) {
    if (x === 0 || x === N - 1) return x;

    var rb = 0;
    for (var i = 0; i < l; i++) {
      rb |= (x & 1) << (l - i - 1);
      x >>= 1;
    }

    return rb;
  };

  // Performs "tweedling" phase, therefore 'emulating'
  // behaviour of the recursive algorithm
  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {
    for (var i = 0; i < N; i++) {
      rtws[i] = rws[rbt[i]];
      itws[i] = iws[rbt[i]];
    }
  };

  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {
    this.permute(rbt, rws, iws, rtws, itws, N);

    for (var s = 1; s < N; s <<= 1) {
      var l = s << 1;

      var rtwdf = Math.cos(2 * Math.PI / l);
      var itwdf = Math.sin(2 * Math.PI / l);

      for (var p = 0; p < N; p += l) {
        var rtwdf_ = rtwdf;
        var itwdf_ = itwdf;

        for (var j = 0; j < s; j++) {
          var re = rtws[p + j];
          var ie = itws[p + j];

          var ro = rtws[p + j + s];
          var io = itws[p + j + s];

          var rx = rtwdf_ * ro - itwdf_ * io;

          io = rtwdf_ * io + itwdf_ * ro;
          ro = rx;

          rtws[p + j] = re + ro;
          itws[p + j] = ie + io;

          rtws[p + j + s] = re - ro;
          itws[p + j + s] = ie - io;

          /* jshint maxdepth : false */
          if (j !== l) {
            rx = rtwdf * rtwdf_ - itwdf * itwdf_;

            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;
            rtwdf_ = rx;
          }
        }
      }
    }
  };

  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {
    var N = Math.max(m, n) | 1;
    var odd = N & 1;
    var i = 0;
    for (N = N / 2 | 0; N; N = N >>> 1) {
      i++;
    }

    return 1 << i + 1 + odd;
  };

  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {
    if (N <= 1) return;

    for (var i = 0; i < N / 2; i++) {
      var t = rws[i];

      rws[i] = rws[N - i - 1];
      rws[N - i - 1] = t;

      t = iws[i];

      iws[i] = -iws[N - i - 1];
      iws[N - i - 1] = -t;
    }
  };

  FFTM.prototype.normalize13b = function normalize13b (ws, N) {
    var carry = 0;
    for (var i = 0; i < N / 2; i++) {
      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +
        Math.round(ws[2 * i] / N) +
        carry;

      ws[i] = w & 0x3ffffff;

      if (w < 0x4000000) {
        carry = 0;
      } else {
        carry = w / 0x4000000 | 0;
      }
    }

    return ws;
  };

  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {
    var carry = 0;
    for (var i = 0; i < len; i++) {
      carry = carry + (ws[i] | 0);

      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;
      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;
    }

    // Pad with zeroes
    for (i = 2 * len; i < N; ++i) {
      rws[i] = 0;
    }

    assert(carry === 0);
    assert((carry & ~0x1fff) === 0);
  };

  FFTM.prototype.stub = function stub (N) {
    var ph = new Array(N);
    for (var i = 0; i < N; i++) {
      ph[i] = 0;
    }

    return ph;
  };

  FFTM.prototype.mulp = function mulp (x, y, out) {
    var N = 2 * this.guessLen13b(x.length, y.length);

    var rbt = this.makeRBT(N);

    var _ = this.stub(N);

    var rws = new Array(N);
    var rwst = new Array(N);
    var iwst = new Array(N);

    var nrws = new Array(N);
    var nrwst = new Array(N);
    var niwst = new Array(N);

    var rmws = out.words;
    rmws.length = N;

    this.convert13b(x.words, x.length, rws, N);
    this.convert13b(y.words, y.length, nrws, N);

    this.transform(rws, _, rwst, iwst, N, rbt);
    this.transform(nrws, _, nrwst, niwst, N, rbt);

    for (var i = 0; i < N; i++) {
      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];
      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];
      rwst[i] = rx;
    }

    this.conjugate(rwst, iwst, N);
    this.transform(rwst, iwst, rmws, _, N, rbt);
    this.conjugate(rmws, _, N);
    this.normalize13b(rmws, N);

    out.negative = x.negative ^ y.negative;
    out.length = x.length + y.length;
    return out._strip();
  };

  // Multiply `this` by `num`
  BN.prototype.mul = function mul (num) {
    var out = new BN(null);
    out.words = new Array(this.length + num.length);
    return this.mulTo(num, out);
  };

  // Multiply employing FFT
  BN.prototype.mulf = function mulf (num) {
    var out = new BN(null);
    out.words = new Array(this.length + num.length);
    return jumboMulTo(this, num, out);
  };

  // In-place Multiplication
  BN.prototype.imul = function imul (num) {
    return this.clone().mulTo(num, this);
  };

  BN.prototype.imuln = function imuln (num) {
    var isNegNum = num < 0;
    if (isNegNum) num = -num;

    assert(typeof num === 'number');
    assert(num < 0x4000000);

    // Carry
    var carry = 0;
    for (var i = 0; i < this.length; i++) {
      var w = (this.words[i] | 0) * num;
      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);
      carry >>= 26;
      carry += (w / 0x4000000) | 0;
      // NOTE: lo is 27bit maximum
      carry += lo >>> 26;
      this.words[i] = lo & 0x3ffffff;
    }

    if (carry !== 0) {
      this.words[i] = carry;
      this.length++;
    }

    return isNegNum ? this.ineg() : this;
  };

  BN.prototype.muln = function muln (num) {
    return this.clone().imuln(num);
  };

  // `this` * `this`
  BN.prototype.sqr = function sqr () {
    return this.mul(this);
  };

  // `this` * `this` in-place
  BN.prototype.isqr = function isqr () {
    return this.imul(this.clone());
  };

  // Math.pow(`this`, `num`)
  BN.prototype.pow = function pow (num) {
    var w = toBitArray(num);
    if (w.length === 0) return new BN(1);

    // Skip leading zeroes
    var res = this;
    for (var i = 0; i < w.length; i++, res = res.sqr()) {
      if (w[i] !== 0) break;
    }

    if (++i < w.length) {
      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {
        if (w[i] === 0) continue;

        res = res.mul(q);
      }
    }

    return res;
  };

  // Shift-left in-place
  BN.prototype.iushln = function iushln (bits) {
    assert(typeof bits === 'number' && bits >= 0);
    var r = bits % 26;
    var s = (bits - r) / 26;
    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);
    var i;

    if (r !== 0) {
      var carry = 0;

      for (i = 0; i < this.length; i++) {
        var newCarry = this.words[i] & carryMask;
        var c = ((this.words[i] | 0) - newCarry) << r;
        this.words[i] = c | carry;
        carry = newCarry >>> (26 - r);
      }

      if (carry) {
        this.words[i] = carry;
        this.length++;
      }
    }

    if (s !== 0) {
      for (i = this.length - 1; i >= 0; i--) {
        this.words[i + s] = this.words[i];
      }

      for (i = 0; i < s; i++) {
        this.words[i] = 0;
      }

      this.length += s;
    }

    return this._strip();
  };

  BN.prototype.ishln = function ishln (bits) {
    // TODO(indutny): implement me
    assert(this.negative === 0);
    return this.iushln(bits);
  };

  // Shift-right in-place
  // NOTE: `hint` is a lowest bit before trailing zeroes
  // NOTE: if `extended` is present - it will be filled with destroyed bits
  BN.prototype.iushrn = function iushrn (bits, hint, extended) {
    assert(typeof bits === 'number' && bits >= 0);
    var h;
    if (hint) {
      h = (hint - (hint % 26)) / 26;
    } else {
      h = 0;
    }

    var r = bits % 26;
    var s = Math.min((bits - r) / 26, this.length);
    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);
    var maskedWords = extended;

    h -= s;
    h = Math.max(0, h);

    // Extended mode, copy masked part
    if (maskedWords) {
      for (var i = 0; i < s; i++) {
        maskedWords.words[i] = this.words[i];
      }
      maskedWords.length = s;
    }

    if (s === 0) {
      // No-op, we should not move anything at all
    } else if (this.length > s) {
      this.length -= s;
      for (i = 0; i < this.length; i++) {
        this.words[i] = this.words[i + s];
      }
    } else {
      this.words[0] = 0;
      this.length = 1;
    }

    var carry = 0;
    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {
      var word = this.words[i] | 0;
      this.words[i] = (carry << (26 - r)) | (word >>> r);
      carry = word & mask;
    }

    // Push carried bits as a mask
    if (maskedWords && carry !== 0) {
      maskedWords.words[maskedWords.length++] = carry;
    }

    if (this.length === 0) {
      this.words[0] = 0;
      this.length = 1;
    }

    return this._strip();
  };

  BN.prototype.ishrn = function ishrn (bits, hint, extended) {
    // TODO(indutny): implement me
    assert(this.negative === 0);
    return this.iushrn(bits, hint, extended);
  };

  // Shift-left
  BN.prototype.shln = function shln (bits) {
    return this.clone().ishln(bits);
  };

  BN.prototype.ushln = function ushln (bits) {
    return this.clone().iushln(bits);
  };

  // Shift-right
  BN.prototype.shrn = function shrn (bits) {
    return this.clone().ishrn(bits);
  };

  BN.prototype.ushrn = function ushrn (bits) {
    return this.clone().iushrn(bits);
  };

  // Test if n bit is set
  BN.prototype.testn = function testn (bit) {
    assert(typeof bit === 'number' && bit >= 0);
    var r = bit % 26;
    var s = (bit - r) / 26;
    var q = 1 << r;

    // Fast case: bit is much higher than all existing words
    if (this.length <= s) return false;

    // Check bit and return
    var w = this.words[s];

    return !!(w & q);
  };

  // Return only lowers bits of number (in-place)
  BN.prototype.imaskn = function imaskn (bits) {
    assert(typeof bits === 'number' && bits >= 0);
    var r = bits % 26;
    var s = (bits - r) / 26;

    assert(this.negative === 0, 'imaskn works only with positive numbers');

    if (this.length <= s) {
      return this;
    }

    if (r !== 0) {
      s++;
    }
    this.length = Math.min(s, this.length);

    if (r !== 0) {
      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);
      this.words[this.length - 1] &= mask;
    }

    return this._strip();
  };

  // Return only lowers bits of number
  BN.prototype.maskn = function maskn (bits) {
    return this.clone().imaskn(bits);
  };

  // Add plain number `num` to `this`
  BN.prototype.iaddn = function iaddn (num) {
    assert(typeof num === 'number');
    assert(num < 0x4000000);
    if (num < 0) return this.isubn(-num);

    // Possible sign change
    if (this.negative !== 0) {
      if (this.length === 1 && (this.words[0] | 0) <= num) {
        this.words[0] = num - (this.words[0] | 0);
        this.negative = 0;
        return this;
      }

      this.negative = 0;
      this.isubn(num);
      this.negative = 1;
      return this;
    }

    // Add without checks
    return this._iaddn(num);
  };

  BN.prototype._iaddn = function _iaddn (num) {
    this.words[0] += num;

    // Carry
    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {
      this.words[i] -= 0x4000000;
      if (i === this.length - 1) {
        this.words[i + 1] = 1;
      } else {
        this.words[i + 1]++;
      }
    }
    this.length = Math.max(this.length, i + 1);

    return this;
  };

  // Subtract plain number `num` from `this`
  BN.prototype.isubn = function isubn (num) {
    assert(typeof num === 'number');
    assert(num < 0x4000000);
    if (num < 0) return this.iaddn(-num);

    if (this.negative !== 0) {
      this.negative = 0;
      this.iaddn(num);
      this.negative = 1;
      return this;
    }

    this.words[0] -= num;

    if (this.length === 1 && this.words[0] < 0) {
      this.words[0] = -this.words[0];
      this.negative = 1;
    } else {
      // Carry
      for (var i = 0; i < this.length && this.words[i] < 0; i++) {
        this.words[i] += 0x4000000;
        this.words[i + 1] -= 1;
      }
    }

    return this._strip();
  };

  BN.prototype.addn = function addn (num) {
    return this.clone().iaddn(num);
  };

  BN.prototype.subn = function subn (num) {
    return this.clone().isubn(num);
  };

  BN.prototype.iabs = function iabs () {
    this.negative = 0;

    return this;
  };

  BN.prototype.abs = function abs () {
    return this.clone().iabs();
  };

  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {
    var len = num.length + shift;
    var i;

    this._expand(len);

    var w;
    var carry = 0;
    for (i = 0; i < num.length; i++) {
      w = (this.words[i + shift] | 0) + carry;
      var right = (num.words[i] | 0) * mul;
      w -= right & 0x3ffffff;
      carry = (w >> 26) - ((right / 0x4000000) | 0);
      this.words[i + shift] = w & 0x3ffffff;
    }
    for (; i < this.length - shift; i++) {
      w = (this.words[i + shift] | 0) + carry;
      carry = w >> 26;
      this.words[i + shift] = w & 0x3ffffff;
    }

    if (carry === 0) return this._strip();

    // Subtraction overflow
    assert(carry === -1);
    carry = 0;
    for (i = 0; i < this.length; i++) {
      w = -(this.words[i] | 0) + carry;
      carry = w >> 26;
      this.words[i] = w & 0x3ffffff;
    }
    this.negative = 1;

    return this._strip();
  };

  BN.prototype._wordDiv = function _wordDiv (num, mode) {
    var shift = this.length - num.length;

    var a = this.clone();
    var b = num;

    // Normalize
    var bhi = b.words[b.length - 1] | 0;
    var bhiBits = this._countBits(bhi);
    shift = 26 - bhiBits;
    if (shift !== 0) {
      b = b.ushln(shift);
      a.iushln(shift);
      bhi = b.words[b.length - 1] | 0;
    }

    // Initialize quotient
    var m = a.length - b.length;
    var q;

    if (mode !== 'mod') {
      q = new BN(null);
      q.length = m + 1;
      q.words = new Array(q.length);
      for (var i = 0; i < q.length; i++) {
        q.words[i] = 0;
      }
    }

    var diff = a.clone()._ishlnsubmul(b, 1, m);
    if (diff.negative === 0) {
      a = diff;
      if (q) {
        q.words[m] = 1;
      }
    }

    for (var j = m - 1; j >= 0; j--) {
      var qj = (a.words[b.length + j] | 0) * 0x4000000 +
        (a.words[b.length + j - 1] | 0);

      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max
      // (0x7ffffff)
      qj = Math.min((qj / bhi) | 0, 0x3ffffff);

      a._ishlnsubmul(b, qj, j);
      while (a.negative !== 0) {
        qj--;
        a.negative = 0;
        a._ishlnsubmul(b, 1, j);
        if (!a.isZero()) {
          a.negative ^= 1;
        }
      }
      if (q) {
        q.words[j] = qj;
      }
    }
    if (q) {
      q._strip();
    }
    a._strip();

    // Denormalize
    if (mode !== 'div' && shift !== 0) {
      a.iushrn(shift);
    }

    return {
      div: q || null,
      mod: a
    };
  };

  // NOTE: 1) `mode` can be set to `mod` to request mod only,
  //       to `div` to request div only, or be absent to
  //       request both div & mod
  //       2) `positive` is true if unsigned mod is requested
  BN.prototype.divmod = function divmod (num, mode, positive) {
    assert(!num.isZero());

    if (this.isZero()) {
      return {
        div: new BN(0),
        mod: new BN(0)
      };
    }

    var div, mod, res;
    if (this.negative !== 0 && num.negative === 0) {
      res = this.neg().divmod(num, mode);

      if (mode !== 'mod') {
        div = res.div.neg();
      }

      if (mode !== 'div') {
        mod = res.mod.neg();
        if (positive && mod.negative !== 0) {
          mod.iadd(num);
        }
      }

      return {
        div: div,
        mod: mod
      };
    }

    if (this.negative === 0 && num.negative !== 0) {
      res = this.divmod(num.neg(), mode);

      if (mode !== 'mod') {
        div = res.div.neg();
      }

      return {
        div: div,
        mod: res.mod
      };
    }

    if ((this.negative & num.negative) !== 0) {
      res = this.neg().divmod(num.neg(), mode);

      if (mode !== 'div') {
        mod = res.mod.neg();
        if (positive && mod.negative !== 0) {
          mod.isub(num);
        }
      }

      return {
        div: res.div,
        mod: mod
      };
    }

    // Both numbers are positive at this point

    // Strip both numbers to approximate shift value
    if (num.length > this.length || this.cmp(num) < 0) {
      return {
        div: new BN(0),
        mod: this
      };
    }

    // Very short reduction
    if (num.length === 1) {
      if (mode === 'div') {
        return {
          div: this.divn(num.words[0]),
          mod: null
        };
      }

      if (mode === 'mod') {
        return {
          div: null,
          mod: new BN(this.modrn(num.words[0]))
        };
      }

      return {
        div: this.divn(num.words[0]),
        mod: new BN(this.modrn(num.words[0]))
      };
    }

    return this._wordDiv(num, mode);
  };

  // Find `this` / `num`
  BN.prototype.div = function div (num) {
    return this.divmod(num, 'div', false).div;
  };

  // Find `this` % `num`
  BN.prototype.mod = function mod (num) {
    return this.divmod(num, 'mod', false).mod;
  };

  BN.prototype.umod = function umod (num) {
    return this.divmod(num, 'mod', true).mod;
  };

  // Find Round(`this` / `num`)
  BN.prototype.divRound = function divRound (num) {
    var dm = this.divmod(num);

    // Fast case - exact division
    if (dm.mod.isZero()) return dm.div;

    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;

    var half = num.ushrn(1);
    var r2 = num.andln(1);
    var cmp = mod.cmp(half);

    // Round down
    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;

    // Round up
    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);
  };

  BN.prototype.modrn = function modrn (num) {
    var isNegNum = num < 0;
    if (isNegNum) num = -num;

    assert(num <= 0x3ffffff);
    var p = (1 << 26) % num;

    var acc = 0;
    for (var i = this.length - 1; i >= 0; i--) {
      acc = (p * acc + (this.words[i] | 0)) % num;
    }

    return isNegNum ? -acc : acc;
  };

  // WARNING: DEPRECATED
  BN.prototype.modn = function modn (num) {
    return this.modrn(num);
  };

  // In-place division by number
  BN.prototype.idivn = function idivn (num) {
    var isNegNum = num < 0;
    if (isNegNum) num = -num;

    assert(num <= 0x3ffffff);

    var carry = 0;
    for (var i = this.length - 1; i >= 0; i--) {
      var w = (this.words[i] | 0) + carry * 0x4000000;
      this.words[i] = (w / num) | 0;
      carry = w % num;
    }

    this._strip();
    return isNegNum ? this.ineg() : this;
  };

  BN.prototype.divn = function divn (num) {
    return this.clone().idivn(num);
  };

  BN.prototype.egcd = function egcd (p) {
    assert(p.negative === 0);
    assert(!p.isZero());

    var x = this;
    var y = p.clone();

    if (x.negative !== 0) {
      x = x.umod(p);
    } else {
      x = x.clone();
    }

    // A * x + B * y = x
    var A = new BN(1);
    var B = new BN(0);

    // C * x + D * y = y
    var C = new BN(0);
    var D = new BN(1);

    var g = 0;

    while (x.isEven() && y.isEven()) {
      x.iushrn(1);
      y.iushrn(1);
      ++g;
    }

    var yp = y.clone();
    var xp = x.clone();

    while (!x.isZero()) {
      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);
      if (i > 0) {
        x.iushrn(i);
        while (i-- > 0) {
          if (A.isOdd() || B.isOdd()) {
            A.iadd(yp);
            B.isub(xp);
          }

          A.iushrn(1);
          B.iushrn(1);
        }
      }

      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);
      if (j > 0) {
        y.iushrn(j);
        while (j-- > 0) {
          if (C.isOdd() || D.isOdd()) {
            C.iadd(yp);
            D.isub(xp);
          }

          C.iushrn(1);
          D.iushrn(1);
        }
      }

      if (x.cmp(y) >= 0) {
        x.isub(y);
        A.isub(C);
        B.isub(D);
      } else {
        y.isub(x);
        C.isub(A);
        D.isub(B);
      }
    }

    return {
      a: C,
      b: D,
      gcd: y.iushln(g)
    };
  };

  // This is reduced incarnation of the binary EEA
  // above, designated to invert members of the
  // _prime_ fields F(p) at a maximal speed
  BN.prototype._invmp = function _invmp (p) {
    assert(p.negative === 0);
    assert(!p.isZero());

    var a = this;
    var b = p.clone();

    if (a.negative !== 0) {
      a = a.umod(p);
    } else {
      a = a.clone();
    }

    var x1 = new BN(1);
    var x2 = new BN(0);

    var delta = b.clone();

    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {
      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);
      if (i > 0) {
        a.iushrn(i);
        while (i-- > 0) {
          if (x1.isOdd()) {
            x1.iadd(delta);
          }

          x1.iushrn(1);
        }
      }

      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);
      if (j > 0) {
        b.iushrn(j);
        while (j-- > 0) {
          if (x2.isOdd()) {
            x2.iadd(delta);
          }

          x2.iushrn(1);
        }
      }

      if (a.cmp(b) >= 0) {
        a.isub(b);
        x1.isub(x2);
      } else {
        b.isub(a);
        x2.isub(x1);
      }
    }

    var res;
    if (a.cmpn(1) === 0) {
      res = x1;
    } else {
      res = x2;
    }

    if (res.cmpn(0) < 0) {
      res.iadd(p);
    }

    return res;
  };

  BN.prototype.gcd = function gcd (num) {
    if (this.isZero()) return num.abs();
    if (num.isZero()) return this.abs();

    var a = this.clone();
    var b = num.clone();
    a.negative = 0;
    b.negative = 0;

    // Remove common factor of two
    for (var shift = 0; a.isEven() && b.isEven(); shift++) {
      a.iushrn(1);
      b.iushrn(1);
    }

    do {
      while (a.isEven()) {
        a.iushrn(1);
      }
      while (b.isEven()) {
        b.iushrn(1);
      }

      var r = a.cmp(b);
      if (r < 0) {
        // Swap `a` and `b` to make `a` always bigger than `b`
        var t = a;
        a = b;
        b = t;
      } else if (r === 0 || b.cmpn(1) === 0) {
        break;
      }

      a.isub(b);
    } while (true);

    return b.iushln(shift);
  };

  // Invert number in the field F(num)
  BN.prototype.invm = function invm (num) {
    return this.egcd(num).a.umod(num);
  };

  BN.prototype.isEven = function isEven () {
    return (this.words[0] & 1) === 0;
  };

  BN.prototype.isOdd = function isOdd () {
    return (this.words[0] & 1) === 1;
  };

  // And first word and num
  BN.prototype.andln = function andln (num) {
    return this.words[0] & num;
  };

  // Increment at the bit position in-line
  BN.prototype.bincn = function bincn (bit) {
    assert(typeof bit === 'number');
    var r = bit % 26;
    var s = (bit - r) / 26;
    var q = 1 << r;

    // Fast case: bit is much higher than all existing words
    if (this.length <= s) {
      this._expand(s + 1);
      this.words[s] |= q;
      return this;
    }

    // Add bit and propagate, if needed
    var carry = q;
    for (var i = s; carry !== 0 && i < this.length; i++) {
      var w = this.words[i] | 0;
      w += carry;
      carry = w >>> 26;
      w &= 0x3ffffff;
      this.words[i] = w;
    }
    if (carry !== 0) {
      this.words[i] = carry;
      this.length++;
    }
    return this;
  };

  BN.prototype.isZero = function isZero () {
    return this.length === 1 && this.words[0] === 0;
  };

  BN.prototype.cmpn = function cmpn (num) {
    var negative = num < 0;

    if (this.negative !== 0 && !negative) return -1;
    if (this.negative === 0 && negative) return 1;

    this._strip();

    var res;
    if (this.length > 1) {
      res = 1;
    } else {
      if (negative) {
        num = -num;
      }

      assert(num <= 0x3ffffff, 'Number is too big');

      var w = this.words[0] | 0;
      res = w === num ? 0 : w < num ? -1 : 1;
    }
    if (this.negative !== 0) return -res | 0;
    return res;
  };

  // Compare two numbers and return:
  // 1 - if `this` > `num`
  // 0 - if `this` == `num`
  // -1 - if `this` < `num`
  BN.prototype.cmp = function cmp (num) {
    if (this.negative !== 0 && num.negative === 0) return -1;
    if (this.negative === 0 && num.negative !== 0) return 1;

    var res = this.ucmp(num);
    if (this.negative !== 0) return -res | 0;
    return res;
  };

  // Unsigned comparison
  BN.prototype.ucmp = function ucmp (num) {
    // At this point both numbers have the same sign
    if (this.length > num.length) return 1;
    if (this.length < num.length) return -1;

    var res = 0;
    for (var i = this.length - 1; i >= 0; i--) {
      var a = this.words[i] | 0;
      var b = num.words[i] | 0;

      if (a === b) continue;
      if (a < b) {
        res = -1;
      } else if (a > b) {
        res = 1;
      }
      break;
    }
    return res;
  };

  BN.prototype.gtn = function gtn (num) {
    return this.cmpn(num) === 1;
  };

  BN.prototype.gt = function gt (num) {
    return this.cmp(num) === 1;
  };

  BN.prototype.gten = function gten (num) {
    return this.cmpn(num) >= 0;
  };

  BN.prototype.gte = function gte (num) {
    return this.cmp(num) >= 0;
  };

  BN.prototype.ltn = function ltn (num) {
    return this.cmpn(num) === -1;
  };

  BN.prototype.lt = function lt (num) {
    return this.cmp(num) === -1;
  };

  BN.prototype.lten = function lten (num) {
    return this.cmpn(num) <= 0;
  };

  BN.prototype.lte = function lte (num) {
    return this.cmp(num) <= 0;
  };

  BN.prototype.eqn = function eqn (num) {
    return this.cmpn(num) === 0;
  };

  BN.prototype.eq = function eq (num) {
    return this.cmp(num) === 0;
  };

  //
  // A reduce context, could be using montgomery or something better, depending
  // on the `m` itself.
  //
  BN.red = function red (num) {
    return new Red(num);
  };

  BN.prototype.toRed = function toRed (ctx) {
    assert(!this.red, 'Already a number in reduction context');
    assert(this.negative === 0, 'red works only with positives');
    return ctx.convertTo(this)._forceRed(ctx);
  };

  BN.prototype.fromRed = function fromRed () {
    assert(this.red, 'fromRed works only with numbers in reduction context');
    return this.red.convertFrom(this);
  };

  BN.prototype._forceRed = function _forceRed (ctx) {
    this.red = ctx;
    return this;
  };

  BN.prototype.forceRed = function forceRed (ctx) {
    assert(!this.red, 'Already a number in reduction context');
    return this._forceRed(ctx);
  };

  BN.prototype.redAdd = function redAdd (num) {
    assert(this.red, 'redAdd works only with red numbers');
    return this.red.add(this, num);
  };

  BN.prototype.redIAdd = function redIAdd (num) {
    assert(this.red, 'redIAdd works only with red numbers');
    return this.red.iadd(this, num);
  };

  BN.prototype.redSub = function redSub (num) {
    assert(this.red, 'redSub works only with red numbers');
    return this.red.sub(this, num);
  };

  BN.prototype.redISub = function redISub (num) {
    assert(this.red, 'redISub works only with red numbers');
    return this.red.isub(this, num);
  };

  BN.prototype.redShl = function redShl (num) {
    assert(this.red, 'redShl works only with red numbers');
    return this.red.shl(this, num);
  };

  BN.prototype.redMul = function redMul (num) {
    assert(this.red, 'redMul works only with red numbers');
    this.red._verify2(this, num);
    return this.red.mul(this, num);
  };

  BN.prototype.redIMul = function redIMul (num) {
    assert(this.red, 'redMul works only with red numbers');
    this.red._verify2(this, num);
    return this.red.imul(this, num);
  };

  BN.prototype.redSqr = function redSqr () {
    assert(this.red, 'redSqr works only with red numbers');
    this.red._verify1(this);
    return this.red.sqr(this);
  };

  BN.prototype.redISqr = function redISqr () {
    assert(this.red, 'redISqr works only with red numbers');
    this.red._verify1(this);
    return this.red.isqr(this);
  };

  // Square root over p
  BN.prototype.redSqrt = function redSqrt () {
    assert(this.red, 'redSqrt works only with red numbers');
    this.red._verify1(this);
    return this.red.sqrt(this);
  };

  BN.prototype.redInvm = function redInvm () {
    assert(this.red, 'redInvm works only with red numbers');
    this.red._verify1(this);
    return this.red.invm(this);
  };

  // Return negative clone of `this` % `red modulo`
  BN.prototype.redNeg = function redNeg () {
    assert(this.red, 'redNeg works only with red numbers');
    this.red._verify1(this);
    return this.red.neg(this);
  };

  BN.prototype.redPow = function redPow (num) {
    assert(this.red && !num.red, 'redPow(normalNum)');
    this.red._verify1(this);
    return this.red.pow(this, num);
  };

  // Prime numbers with efficient reduction
  var primes = {
    k256: null,
    p224: null,
    p192: null,
    p25519: null
  };

  // Pseudo-Mersenne prime
  function MPrime (name, p) {
    // P = 2 ^ N - K
    this.name = name;
    this.p = new BN(p, 16);
    this.n = this.p.bitLength();
    this.k = new BN(1).iushln(this.n).isub(this.p);

    this.tmp = this._tmp();
  }

  MPrime.prototype._tmp = function _tmp () {
    var tmp = new BN(null);
    tmp.words = new Array(Math.ceil(this.n / 13));
    return tmp;
  };

  MPrime.prototype.ireduce = function ireduce (num) {
    // Assumes that `num` is less than `P^2`
    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)
    var r = num;
    var rlen;

    do {
      this.split(r, this.tmp);
      r = this.imulK(r);
      r = r.iadd(this.tmp);
      rlen = r.bitLength();
    } while (rlen > this.n);

    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);
    if (cmp === 0) {
      r.words[0] = 0;
      r.length = 1;
    } else if (cmp > 0) {
      r.isub(this.p);
    } else {
      if (r.strip !== undefined) {
        // r is a BN v4 instance
        r.strip();
      } else {
        // r is a BN v5 instance
        r._strip();
      }
    }

    return r;
  };

  MPrime.prototype.split = function split (input, out) {
    input.iushrn(this.n, 0, out);
  };

  MPrime.prototype.imulK = function imulK (num) {
    return num.imul(this.k);
  };

  function K256 () {
    MPrime.call(
      this,
      'k256',
      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');
  }
  inherits(K256, MPrime);

  K256.prototype.split = function split (input, output) {
    // 256 = 9 * 26 + 22
    var mask = 0x3fffff;

    var outLen = Math.min(input.length, 9);
    for (var i = 0; i < outLen; i++) {
      output.words[i] = input.words[i];
    }
    output.length = outLen;

    if (input.length <= 9) {
      input.words[0] = 0;
      input.length = 1;
      return;
    }

    // Shift by 9 limbs
    var prev = input.words[9];
    output.words[output.length++] = prev & mask;

    for (i = 10; i < input.length; i++) {
      var next = input.words[i] | 0;
      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);
      prev = next;
    }
    prev >>>= 22;
    input.words[i - 10] = prev;
    if (prev === 0 && input.length > 10) {
      input.length -= 10;
    } else {
      input.length -= 9;
    }
  };

  K256.prototype.imulK = function imulK (num) {
    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]
    num.words[num.length] = 0;
    num.words[num.length + 1] = 0;
    num.length += 2;

    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390
    var lo = 0;
    for (var i = 0; i < num.length; i++) {
      var w = num.words[i] | 0;
      lo += w * 0x3d1;
      num.words[i] = lo & 0x3ffffff;
      lo = w * 0x40 + ((lo / 0x4000000) | 0);
    }

    // Fast length reduction
    if (num.words[num.length - 1] === 0) {
      num.length--;
      if (num.words[num.length - 1] === 0) {
        num.length--;
      }
    }
    return num;
  };

  function P224 () {
    MPrime.call(
      this,
      'p224',
      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');
  }
  inherits(P224, MPrime);

  function P192 () {
    MPrime.call(
      this,
      'p192',
      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');
  }
  inherits(P192, MPrime);

  function P25519 () {
    // 2 ^ 255 - 19
    MPrime.call(
      this,
      '25519',
      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');
  }
  inherits(P25519, MPrime);

  P25519.prototype.imulK = function imulK (num) {
    // K = 0x13
    var carry = 0;
    for (var i = 0; i < num.length; i++) {
      var hi = (num.words[i] | 0) * 0x13 + carry;
      var lo = hi & 0x3ffffff;
      hi >>>= 26;

      num.words[i] = lo;
      carry = hi;
    }
    if (carry !== 0) {
      num.words[num.length++] = carry;
    }
    return num;
  };

  // Exported mostly for testing purposes, use plain name instead
  BN._prime = function prime (name) {
    // Cached version of prime
    if (primes[name]) return primes[name];

    var prime;
    if (name === 'k256') {
      prime = new K256();
    } else if (name === 'p224') {
      prime = new P224();
    } else if (name === 'p192') {
      prime = new P192();
    } else if (name === 'p25519') {
      prime = new P25519();
    } else {
      throw new Error('Unknown prime ' + name);
    }
    primes[name] = prime;

    return prime;
  };

  //
  // Base reduction engine
  //
  function Red (m) {
    if (typeof m === 'string') {
      var prime = BN._prime(m);
      this.m = prime.p;
      this.prime = prime;
    } else {
      assert(m.gtn(1), 'modulus must be greater than 1');
      this.m = m;
      this.prime = null;
    }
  }

  Red.prototype._verify1 = function _verify1 (a) {
    assert(a.negative === 0, 'red works only with positives');
    assert(a.red, 'red works only with red numbers');
  };

  Red.prototype._verify2 = function _verify2 (a, b) {
    assert((a.negative | b.negative) === 0, 'red works only with positives');
    assert(a.red && a.red === b.red,
      'red works only with red numbers');
  };

  Red.prototype.imod = function imod (a) {
    if (this.prime) return this.prime.ireduce(a)._forceRed(this);

    move(a, a.umod(this.m)._forceRed(this));
    return a;
  };

  Red.prototype.neg = function neg (a) {
    if (a.isZero()) {
      return a.clone();
    }

    return this.m.sub(a)._forceRed(this);
  };

  Red.prototype.add = function add (a, b) {
    this._verify2(a, b);

    var res = a.add(b);
    if (res.cmp(this.m) >= 0) {
      res.isub(this.m);
    }
    return res._forceRed(this);
  };

  Red.prototype.iadd = function iadd (a, b) {
    this._verify2(a, b);

    var res = a.iadd(b);
    if (res.cmp(this.m) >= 0) {
      res.isub(this.m);
    }
    return res;
  };

  Red.prototype.sub = function sub (a, b) {
    this._verify2(a, b);

    var res = a.sub(b);
    if (res.cmpn(0) < 0) {
      res.iadd(this.m);
    }
    return res._forceRed(this);
  };

  Red.prototype.isub = function isub (a, b) {
    this._verify2(a, b);

    var res = a.isub(b);
    if (res.cmpn(0) < 0) {
      res.iadd(this.m);
    }
    return res;
  };

  Red.prototype.shl = function shl (a, num) {
    this._verify1(a);
    return this.imod(a.ushln(num));
  };

  Red.prototype.imul = function imul (a, b) {
    this._verify2(a, b);
    return this.imod(a.imul(b));
  };

  Red.prototype.mul = function mul (a, b) {
    this._verify2(a, b);
    return this.imod(a.mul(b));
  };

  Red.prototype.isqr = function isqr (a) {
    return this.imul(a, a.clone());
  };

  Red.prototype.sqr = function sqr (a) {
    return this.mul(a, a);
  };

  Red.prototype.sqrt = function sqrt (a) {
    if (a.isZero()) return a.clone();

    var mod3 = this.m.andln(3);
    assert(mod3 % 2 === 1);

    // Fast case
    if (mod3 === 3) {
      var pow = this.m.add(new BN(1)).iushrn(2);
      return this.pow(a, pow);
    }

    // Tonelli-Shanks algorithm (Totally unoptimized and slow)
    //
    // Find Q and S, that Q * 2 ^ S = (P - 1)
    var q = this.m.subn(1);
    var s = 0;
    while (!q.isZero() && q.andln(1) === 0) {
      s++;
      q.iushrn(1);
    }
    assert(!q.isZero());

    var one = new BN(1).toRed(this);
    var nOne = one.redNeg();

    // Find quadratic non-residue
    // NOTE: Max is such because of generalized Riemann hypothesis.
    var lpow = this.m.subn(1).iushrn(1);
    var z = this.m.bitLength();
    z = new BN(2 * z * z).toRed(this);

    while (this.pow(z, lpow).cmp(nOne) !== 0) {
      z.redIAdd(nOne);
    }

    var c = this.pow(z, q);
    var r = this.pow(a, q.addn(1).iushrn(1));
    var t = this.pow(a, q);
    var m = s;
    while (t.cmp(one) !== 0) {
      var tmp = t;
      for (var i = 0; tmp.cmp(one) !== 0; i++) {
        tmp = tmp.redSqr();
      }
      assert(i < m);
      var b = this.pow(c, new BN(1).iushln(m - i - 1));

      r = r.redMul(b);
      c = b.redSqr();
      t = t.redMul(c);
      m = i;
    }

    return r;
  };

  Red.prototype.invm = function invm (a) {
    var inv = a._invmp(this.m);
    if (inv.negative !== 0) {
      inv.negative = 0;
      return this.imod(inv).redNeg();
    } else {
      return this.imod(inv);
    }
  };

  Red.prototype.pow = function pow (a, num) {
    if (num.isZero()) return new BN(1).toRed(this);
    if (num.cmpn(1) === 0) return a.clone();

    var windowSize = 4;
    var wnd = new Array(1 << windowSize);
    wnd[0] = new BN(1).toRed(this);
    wnd[1] = a;
    for (var i = 2; i < wnd.length; i++) {
      wnd[i] = this.mul(wnd[i - 1], a);
    }

    var res = wnd[0];
    var current = 0;
    var currentLen = 0;
    var start = num.bitLength() % 26;
    if (start === 0) {
      start = 26;
    }

    for (i = num.length - 1; i >= 0; i--) {
      var word = num.words[i];
      for (var j = start - 1; j >= 0; j--) {
        var bit = (word >> j) & 1;
        if (res !== wnd[0]) {
          res = this.sqr(res);
        }

        if (bit === 0 && current === 0) {
          currentLen = 0;
          continue;
        }

        current <<= 1;
        current |= bit;
        currentLen++;
        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;

        res = this.mul(res, wnd[current]);
        currentLen = 0;
        current = 0;
      }
      start = 26;
    }

    return res;
  };

  Red.prototype.convertTo = function convertTo (num) {
    var r = num.umod(this.m);

    return r === num ? r.clone() : r;
  };

  Red.prototype.convertFrom = function convertFrom (num) {
    var res = num.clone();
    res.red = null;
    return res;
  };

  //
  // Montgomery method engine
  //

  BN.mont = function mont (num) {
    return new Mont(num);
  };

  function Mont (m) {
    Red.call(this, m);

    this.shift = this.m.bitLength();
    if (this.shift % 26 !== 0) {
      this.shift += 26 - (this.shift % 26);
    }

    this.r = new BN(1).iushln(this.shift);
    this.r2 = this.imod(this.r.sqr());
    this.rinv = this.r._invmp(this.m);

    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);
    this.minv = this.minv.umod(this.r);
    this.minv = this.r.sub(this.minv);
  }
  inherits(Mont, Red);

  Mont.prototype.convertTo = function convertTo (num) {
    return this.imod(num.ushln(this.shift));
  };

  Mont.prototype.convertFrom = function convertFrom (num) {
    var r = this.imod(num.mul(this.rinv));
    r.red = null;
    return r;
  };

  Mont.prototype.imul = function imul (a, b) {
    if (a.isZero() || b.isZero()) {
      a.words[0] = 0;
      a.length = 1;
      return a;
    }

    var t = a.imul(b);
    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
    var u = t.isub(c).iushrn(this.shift);
    var res = u;

    if (u.cmp(this.m) >= 0) {
      res = u.isub(this.m);
    } else if (u.cmpn(0) < 0) {
      res = u.iadd(this.m);
    }

    return res._forceRed(this);
  };

  Mont.prototype.mul = function mul (a, b) {
    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);

    var t = a.mul(b);
    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
    var u = t.isub(c).iushrn(this.shift);
    var res = u;
    if (u.cmp(this.m) >= 0) {
      res = u.isub(this.m);
    } else if (u.cmpn(0) < 0) {
      res = u.iadd(this.m);
    }

    return res._forceRed(this);
  };

  Mont.prototype.invm = function invm (a) {
    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R
    var res = this.imod(a._invmp(this.m).mul(this.r2));
    return res._forceRed(this);
  };
})( false || module, this);


/***/ }),

/***/ "./node_modules/browserify-sign/node_modules/readable-stream/errors-browser.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/browserify-sign/node_modules/readable-stream/errors-browser.js ***!
  \*************************************************************************************/
/***/ ((module) => {

"use strict";


function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

var codes = {};

function createErrorType(code, message, Base) {
  if (!Base) {
    Base = Error;
  }

  function getMessage(arg1, arg2, arg3) {
    if (typeof message === 'string') {
      return message;
    } else {
      return message(arg1, arg2, arg3);
    }
  }

  var NodeError =
  /*#__PURE__*/
  function (_Base) {
    _inheritsLoose(NodeError, _Base);

    function NodeError(arg1, arg2, arg3) {
      return _Base.call(this, getMessage(arg1, arg2, arg3)) || this;
    }

    return NodeError;
  }(Base);

  NodeError.prototype.name = Base.name;
  NodeError.prototype.code = code;
  codes[code] = NodeError;
} // https://github.com/nodejs/node/blob/v10.8.0/lib/internal/errors.js


function oneOf(expected, thing) {
  if (Array.isArray(expected)) {
    var len = expected.length;
    expected = expected.map(function (i) {
      return String(i);
    });

    if (len > 2) {
      return "one of ".concat(thing, " ").concat(expected.slice(0, len - 1).join(', '), ", or ") + expected[len - 1];
    } else if (len === 2) {
      return "one of ".concat(thing, " ").concat(expected[0], " or ").concat(expected[1]);
    } else {
      return "of ".concat(thing, " ").concat(expected[0]);
    }
  } else {
    return "of ".concat(thing, " ").concat(String(expected));
  }
} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith


function startsWith(str, search, pos) {
  return str.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search;
} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith


function endsWith(str, search, this_len) {
  if (this_len === undefined || this_len > str.length) {
    this_len = str.length;
  }

  return str.substring(this_len - search.length, this_len) === search;
} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes


function includes(str, search, start) {
  if (typeof start !== 'number') {
    start = 0;
  }

  if (start + search.length > str.length) {
    return false;
  } else {
    return str.indexOf(search, start) !== -1;
  }
}

createErrorType('ERR_INVALID_OPT_VALUE', function (name, value) {
  return 'The value "' + value + '" is invalid for option "' + name + '"';
}, TypeError);
createErrorType('ERR_INVALID_ARG_TYPE', function (name, expected, actual) {
  // determiner: 'must be' or 'must not be'
  var determiner;

  if (typeof expected === 'string' && startsWith(expected, 'not ')) {
    determiner = 'must not be';
    expected = expected.replace(/^not /, '');
  } else {
    determiner = 'must be';
  }

  var msg;

  if (endsWith(name, ' argument')) {
    // For cases like 'first argument'
    msg = "The ".concat(name, " ").concat(determiner, " ").concat(oneOf(expected, 'type'));
  } else {
    var type = includes(name, '.') ? 'property' : 'argument';
    msg = "The \"".concat(name, "\" ").concat(type, " ").concat(determiner, " ").concat(oneOf(expected, 'type'));
  }

  msg += ". Received type ".concat(typeof actual);
  return msg;
}, TypeError);
createErrorType('ERR_STREAM_PUSH_AFTER_EOF', 'stream.push() after EOF');
createErrorType('ERR_METHOD_NOT_IMPLEMENTED', function (name) {
  return 'The ' + name + ' method is not implemented';
});
createErrorType('ERR_STREAM_PREMATURE_CLOSE', 'Premature close');
createErrorType('ERR_STREAM_DESTROYED', function (name) {
  return 'Cannot call ' + name + ' after a stream was destroyed';
});
createErrorType('ERR_MULTIPLE_CALLBACK', 'Callback called multiple times');
createErrorType('ERR_STREAM_CANNOT_PIPE', 'Cannot pipe, not readable');
createErrorType('ERR_STREAM_WRITE_AFTER_END', 'write after end');
createErrorType('ERR_STREAM_NULL_VALUES', 'May not write null values to stream', TypeError);
createErrorType('ERR_UNKNOWN_ENCODING', function (arg) {
  return 'Unknown encoding: ' + arg;
}, TypeError);
createErrorType('ERR_STREAM_UNSHIFT_AFTER_END_EVENT', 'stream.unshift() after end event');
module.exports.codes = codes;


/***/ }),

/***/ "./node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_duplex.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_duplex.js ***!
  \*****************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
// a duplex stream is just a stream that is both readable and writable.
// Since JS doesn't have multiple prototypal inheritance, this class
// prototypally inherits from Readable, and then parasitically from
// Writable.

/*<replacement>*/

var objectKeys = Object.keys || function (obj) {
  var keys = [];

  for (var key in obj) {
    keys.push(key);
  }

  return keys;
};
/*</replacement>*/


module.exports = Duplex;

var Readable = __webpack_require__(/*! ./_stream_readable */ "./node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_readable.js");

var Writable = __webpack_require__(/*! ./_stream_writable */ "./node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_writable.js");

__webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")(Duplex, Readable);

{
  // Allow the keys array to be GC'ed.
  var keys = objectKeys(Writable.prototype);

  for (var v = 0; v < keys.length; v++) {
    var method = keys[v];
    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];
  }
}

function Duplex(options) {
  if (!(this instanceof Duplex)) return new Duplex(options);
  Readable.call(this, options);
  Writable.call(this, options);
  this.allowHalfOpen = true;

  if (options) {
    if (options.readable === false) this.readable = false;
    if (options.writable === false) this.writable = false;

    if (options.allowHalfOpen === false) {
      this.allowHalfOpen = false;
      this.once('end', onend);
    }
  }
}

Object.defineProperty(Duplex.prototype, 'writableHighWaterMark', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._writableState.highWaterMark;
  }
});
Object.defineProperty(Duplex.prototype, 'writableBuffer', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._writableState && this._writableState.getBuffer();
  }
});
Object.defineProperty(Duplex.prototype, 'writableLength', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._writableState.length;
  }
}); // the no-half-open enforcer

function onend() {
  // If the writable side ended, then we're ok.
  if (this._writableState.ended) return; // no more data can be written.
  // But allow more writes to happen in this tick.

  process.nextTick(onEndNT, this);
}

function onEndNT(self) {
  self.end();
}

Object.defineProperty(Duplex.prototype, 'destroyed', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    if (this._readableState === undefined || this._writableState === undefined) {
      return false;
    }

    return this._readableState.destroyed && this._writableState.destroyed;
  },
  set: function set(value) {
    // we ignore the value if the stream
    // has not been initialized yet
    if (this._readableState === undefined || this._writableState === undefined) {
      return;
    } // backward compatibility, the user is explicitly
    // managing destroyed


    this._readableState.destroyed = value;
    this._writableState.destroyed = value;
  }
});

/***/ }),

/***/ "./node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_passthrough.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_passthrough.js ***!
  \**********************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
// a passthrough stream.
// basically just the most minimal sort of Transform stream.
// Every written chunk gets output as-is.


module.exports = PassThrough;

var Transform = __webpack_require__(/*! ./_stream_transform */ "./node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_transform.js");

__webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")(PassThrough, Transform);

function PassThrough(options) {
  if (!(this instanceof PassThrough)) return new PassThrough(options);
  Transform.call(this, options);
}

PassThrough.prototype._transform = function (chunk, encoding, cb) {
  cb(null, chunk);
};

/***/ }),

/***/ "./node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_readable.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_readable.js ***!
  \*******************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.


module.exports = Readable;
/*<replacement>*/

var Duplex;
/*</replacement>*/

Readable.ReadableState = ReadableState;
/*<replacement>*/

var EE = __webpack_require__(/*! events */ "./node_modules/events/events.js").EventEmitter;

var EElistenerCount = function EElistenerCount(emitter, type) {
  return emitter.listeners(type).length;
};
/*</replacement>*/

/*<replacement>*/


var Stream = __webpack_require__(/*! ./internal/streams/stream */ "./node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/stream-browser.js");
/*</replacement>*/


var Buffer = __webpack_require__(/*! buffer */ "./node_modules/buffer/index.js").Buffer;

var OurUint8Array = __webpack_require__.g.Uint8Array || function () {};

function _uint8ArrayToBuffer(chunk) {
  return Buffer.from(chunk);
}

function _isUint8Array(obj) {
  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;
}
/*<replacement>*/


var debugUtil = __webpack_require__(/*! util */ "?593c");

var debug;

if (debugUtil && debugUtil.debuglog) {
  debug = debugUtil.debuglog('stream');
} else {
  debug = function debug() {};
}
/*</replacement>*/


var BufferList = __webpack_require__(/*! ./internal/streams/buffer_list */ "./node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/buffer_list.js");

var destroyImpl = __webpack_require__(/*! ./internal/streams/destroy */ "./node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/destroy.js");

var _require = __webpack_require__(/*! ./internal/streams/state */ "./node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/state.js"),
    getHighWaterMark = _require.getHighWaterMark;

var _require$codes = __webpack_require__(/*! ../errors */ "./node_modules/browserify-sign/node_modules/readable-stream/errors-browser.js").codes,
    ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,
    ERR_STREAM_PUSH_AFTER_EOF = _require$codes.ERR_STREAM_PUSH_AFTER_EOF,
    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,
    ERR_STREAM_UNSHIFT_AFTER_END_EVENT = _require$codes.ERR_STREAM_UNSHIFT_AFTER_END_EVENT; // Lazy loaded to improve the startup performance.


var StringDecoder;
var createReadableStreamAsyncIterator;
var from;

__webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")(Readable, Stream);

var errorOrDestroy = destroyImpl.errorOrDestroy;
var kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];

function prependListener(emitter, event, fn) {
  // Sadly this is not cacheable as some libraries bundle their own
  // event emitter implementation with them.
  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn); // This is a hack to make sure that our error handler is attached before any
  // userland ones.  NEVER DO THIS. This is here only because this code needs
  // to continue to work with older versions of Node.js that do not include
  // the prependListener() method. The goal is to eventually remove this hack.

  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (Array.isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];
}

function ReadableState(options, stream, isDuplex) {
  Duplex = Duplex || __webpack_require__(/*! ./_stream_duplex */ "./node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_duplex.js");
  options = options || {}; // Duplex streams are both readable and writable, but share
  // the same options object.
  // However, some cases require setting options to different
  // values for the readable and the writable sides of the duplex stream.
  // These options can be provided separately as readableXXX and writableXXX.

  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex; // object stream flag. Used to make read(n) ignore n and to
  // make all the buffer merging and length checks go away

  this.objectMode = !!options.objectMode;
  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode; // the point at which it stops calling _read() to fill the buffer
  // Note: 0 is a valid value, means "don't call _read preemptively ever"

  this.highWaterMark = getHighWaterMark(this, options, 'readableHighWaterMark', isDuplex); // A linked list is used to store data chunks instead of an array because the
  // linked list can remove elements from the beginning faster than
  // array.shift()

  this.buffer = new BufferList();
  this.length = 0;
  this.pipes = null;
  this.pipesCount = 0;
  this.flowing = null;
  this.ended = false;
  this.endEmitted = false;
  this.reading = false; // a flag to be able to tell if the event 'readable'/'data' is emitted
  // immediately, or on a later tick.  We set this to true at first, because
  // any actions that shouldn't happen until "later" should generally also
  // not happen before the first read call.

  this.sync = true; // whenever we return null, then we set a flag to say
  // that we're awaiting a 'readable' event emission.

  this.needReadable = false;
  this.emittedReadable = false;
  this.readableListening = false;
  this.resumeScheduled = false;
  this.paused = true; // Should close be emitted on destroy. Defaults to true.

  this.emitClose = options.emitClose !== false; // Should .destroy() be called after 'end' (and potentially 'finish')

  this.autoDestroy = !!options.autoDestroy; // has it been destroyed

  this.destroyed = false; // Crypto is kind of old and crusty.  Historically, its default string
  // encoding is 'binary' so we have to make this configurable.
  // Everything else in the universe uses 'utf8', though.

  this.defaultEncoding = options.defaultEncoding || 'utf8'; // the number of writers that are awaiting a drain event in .pipe()s

  this.awaitDrain = 0; // if true, a maybeReadMore has been scheduled

  this.readingMore = false;
  this.decoder = null;
  this.encoding = null;

  if (options.encoding) {
    if (!StringDecoder) StringDecoder = __webpack_require__(/*! string_decoder/ */ "./node_modules/browserify-sign/node_modules/string_decoder/lib/string_decoder.js").StringDecoder;
    this.decoder = new StringDecoder(options.encoding);
    this.encoding = options.encoding;
  }
}

function Readable(options) {
  Duplex = Duplex || __webpack_require__(/*! ./_stream_duplex */ "./node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_duplex.js");
  if (!(this instanceof Readable)) return new Readable(options); // Checking for a Stream.Duplex instance is faster here instead of inside
  // the ReadableState constructor, at least with V8 6.5

  var isDuplex = this instanceof Duplex;
  this._readableState = new ReadableState(options, this, isDuplex); // legacy

  this.readable = true;

  if (options) {
    if (typeof options.read === 'function') this._read = options.read;
    if (typeof options.destroy === 'function') this._destroy = options.destroy;
  }

  Stream.call(this);
}

Object.defineProperty(Readable.prototype, 'destroyed', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    if (this._readableState === undefined) {
      return false;
    }

    return this._readableState.destroyed;
  },
  set: function set(value) {
    // we ignore the value if the stream
    // has not been initialized yet
    if (!this._readableState) {
      return;
    } // backward compatibility, the user is explicitly
    // managing destroyed


    this._readableState.destroyed = value;
  }
});
Readable.prototype.destroy = destroyImpl.destroy;
Readable.prototype._undestroy = destroyImpl.undestroy;

Readable.prototype._destroy = function (err, cb) {
  cb(err);
}; // Manually shove something into the read() buffer.
// This returns true if the highWaterMark has not been hit yet,
// similar to how Writable.write() returns true if you should
// write() some more.


Readable.prototype.push = function (chunk, encoding) {
  var state = this._readableState;
  var skipChunkCheck;

  if (!state.objectMode) {
    if (typeof chunk === 'string') {
      encoding = encoding || state.defaultEncoding;

      if (encoding !== state.encoding) {
        chunk = Buffer.from(chunk, encoding);
        encoding = '';
      }

      skipChunkCheck = true;
    }
  } else {
    skipChunkCheck = true;
  }

  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);
}; // Unshift should *always* be something directly out of read()


Readable.prototype.unshift = function (chunk) {
  return readableAddChunk(this, chunk, null, true, false);
};

function readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {
  debug('readableAddChunk', chunk);
  var state = stream._readableState;

  if (chunk === null) {
    state.reading = false;
    onEofChunk(stream, state);
  } else {
    var er;
    if (!skipChunkCheck) er = chunkInvalid(state, chunk);

    if (er) {
      errorOrDestroy(stream, er);
    } else if (state.objectMode || chunk && chunk.length > 0) {
      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {
        chunk = _uint8ArrayToBuffer(chunk);
      }

      if (addToFront) {
        if (state.endEmitted) errorOrDestroy(stream, new ERR_STREAM_UNSHIFT_AFTER_END_EVENT());else addChunk(stream, state, chunk, true);
      } else if (state.ended) {
        errorOrDestroy(stream, new ERR_STREAM_PUSH_AFTER_EOF());
      } else if (state.destroyed) {
        return false;
      } else {
        state.reading = false;

        if (state.decoder && !encoding) {
          chunk = state.decoder.write(chunk);
          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);
        } else {
          addChunk(stream, state, chunk, false);
        }
      }
    } else if (!addToFront) {
      state.reading = false;
      maybeReadMore(stream, state);
    }
  } // We can push more data if we are below the highWaterMark.
  // Also, if we have no data yet, we can stand some more bytes.
  // This is to work around cases where hwm=0, such as the repl.


  return !state.ended && (state.length < state.highWaterMark || state.length === 0);
}

function addChunk(stream, state, chunk, addToFront) {
  if (state.flowing && state.length === 0 && !state.sync) {
    state.awaitDrain = 0;
    stream.emit('data', chunk);
  } else {
    // update the buffer info.
    state.length += state.objectMode ? 1 : chunk.length;
    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);
    if (state.needReadable) emitReadable(stream);
  }

  maybeReadMore(stream, state);
}

function chunkInvalid(state, chunk) {
  var er;

  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {
    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer', 'Uint8Array'], chunk);
  }

  return er;
}

Readable.prototype.isPaused = function () {
  return this._readableState.flowing === false;
}; // backwards compatibility.


Readable.prototype.setEncoding = function (enc) {
  if (!StringDecoder) StringDecoder = __webpack_require__(/*! string_decoder/ */ "./node_modules/browserify-sign/node_modules/string_decoder/lib/string_decoder.js").StringDecoder;
  var decoder = new StringDecoder(enc);
  this._readableState.decoder = decoder; // If setEncoding(null), decoder.encoding equals utf8

  this._readableState.encoding = this._readableState.decoder.encoding; // Iterate over current buffer to convert already stored Buffers:

  var p = this._readableState.buffer.head;
  var content = '';

  while (p !== null) {
    content += decoder.write(p.data);
    p = p.next;
  }

  this._readableState.buffer.clear();

  if (content !== '') this._readableState.buffer.push(content);
  this._readableState.length = content.length;
  return this;
}; // Don't raise the hwm > 1GB


var MAX_HWM = 0x40000000;

function computeNewHighWaterMark(n) {
  if (n >= MAX_HWM) {
    // TODO(ronag): Throw ERR_VALUE_OUT_OF_RANGE.
    n = MAX_HWM;
  } else {
    // Get the next highest power of 2 to prevent increasing hwm excessively in
    // tiny amounts
    n--;
    n |= n >>> 1;
    n |= n >>> 2;
    n |= n >>> 4;
    n |= n >>> 8;
    n |= n >>> 16;
    n++;
  }

  return n;
} // This function is designed to be inlinable, so please take care when making
// changes to the function body.


function howMuchToRead(n, state) {
  if (n <= 0 || state.length === 0 && state.ended) return 0;
  if (state.objectMode) return 1;

  if (n !== n) {
    // Only flow one buffer at a time
    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;
  } // If we're asking for more than the current hwm, then raise the hwm.


  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);
  if (n <= state.length) return n; // Don't have enough

  if (!state.ended) {
    state.needReadable = true;
    return 0;
  }

  return state.length;
} // you can override either this method, or the async _read(n) below.


Readable.prototype.read = function (n) {
  debug('read', n);
  n = parseInt(n, 10);
  var state = this._readableState;
  var nOrig = n;
  if (n !== 0) state.emittedReadable = false; // if we're doing read(0) to trigger a readable event, but we
  // already have a bunch of data in the buffer, then just trigger
  // the 'readable' event and move on.

  if (n === 0 && state.needReadable && ((state.highWaterMark !== 0 ? state.length >= state.highWaterMark : state.length > 0) || state.ended)) {
    debug('read: emitReadable', state.length, state.ended);
    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);
    return null;
  }

  n = howMuchToRead(n, state); // if we've ended, and we're now clear, then finish it up.

  if (n === 0 && state.ended) {
    if (state.length === 0) endReadable(this);
    return null;
  } // All the actual chunk generation logic needs to be
  // *below* the call to _read.  The reason is that in certain
  // synthetic stream cases, such as passthrough streams, _read
  // may be a completely synchronous operation which may change
  // the state of the read buffer, providing enough data when
  // before there was *not* enough.
  //
  // So, the steps are:
  // 1. Figure out what the state of things will be after we do
  // a read from the buffer.
  //
  // 2. If that resulting state will trigger a _read, then call _read.
  // Note that this may be asynchronous, or synchronous.  Yes, it is
  // deeply ugly to write APIs this way, but that still doesn't mean
  // that the Readable class should behave improperly, as streams are
  // designed to be sync/async agnostic.
  // Take note if the _read call is sync or async (ie, if the read call
  // has returned yet), so that we know whether or not it's safe to emit
  // 'readable' etc.
  //
  // 3. Actually pull the requested chunks out of the buffer and return.
  // if we need a readable event, then we need to do some reading.


  var doRead = state.needReadable;
  debug('need readable', doRead); // if we currently have less than the highWaterMark, then also read some

  if (state.length === 0 || state.length - n < state.highWaterMark) {
    doRead = true;
    debug('length less than watermark', doRead);
  } // however, if we've ended, then there's no point, and if we're already
  // reading, then it's unnecessary.


  if (state.ended || state.reading) {
    doRead = false;
    debug('reading or ended', doRead);
  } else if (doRead) {
    debug('do read');
    state.reading = true;
    state.sync = true; // if the length is currently zero, then we *need* a readable event.

    if (state.length === 0) state.needReadable = true; // call internal read method

    this._read(state.highWaterMark);

    state.sync = false; // If _read pushed data synchronously, then `reading` will be false,
    // and we need to re-evaluate how much data we can return to the user.

    if (!state.reading) n = howMuchToRead(nOrig, state);
  }

  var ret;
  if (n > 0) ret = fromList(n, state);else ret = null;

  if (ret === null) {
    state.needReadable = state.length <= state.highWaterMark;
    n = 0;
  } else {
    state.length -= n;
    state.awaitDrain = 0;
  }

  if (state.length === 0) {
    // If we have nothing in the buffer, then we want to know
    // as soon as we *do* get something into the buffer.
    if (!state.ended) state.needReadable = true; // If we tried to read() past the EOF, then emit end on the next tick.

    if (nOrig !== n && state.ended) endReadable(this);
  }

  if (ret !== null) this.emit('data', ret);
  return ret;
};

function onEofChunk(stream, state) {
  debug('onEofChunk');
  if (state.ended) return;

  if (state.decoder) {
    var chunk = state.decoder.end();

    if (chunk && chunk.length) {
      state.buffer.push(chunk);
      state.length += state.objectMode ? 1 : chunk.length;
    }
  }

  state.ended = true;

  if (state.sync) {
    // if we are sync, wait until next tick to emit the data.
    // Otherwise we risk emitting data in the flow()
    // the readable code triggers during a read() call
    emitReadable(stream);
  } else {
    // emit 'readable' now to make sure it gets picked up.
    state.needReadable = false;

    if (!state.emittedReadable) {
      state.emittedReadable = true;
      emitReadable_(stream);
    }
  }
} // Don't emit readable right away in sync mode, because this can trigger
// another read() call => stack overflow.  This way, it might trigger
// a nextTick recursion warning, but that's not so bad.


function emitReadable(stream) {
  var state = stream._readableState;
  debug('emitReadable', state.needReadable, state.emittedReadable);
  state.needReadable = false;

  if (!state.emittedReadable) {
    debug('emitReadable', state.flowing);
    state.emittedReadable = true;
    process.nextTick(emitReadable_, stream);
  }
}

function emitReadable_(stream) {
  var state = stream._readableState;
  debug('emitReadable_', state.destroyed, state.length, state.ended);

  if (!state.destroyed && (state.length || state.ended)) {
    stream.emit('readable');
    state.emittedReadable = false;
  } // The stream needs another readable event if
  // 1. It is not flowing, as the flow mechanism will take
  //    care of it.
  // 2. It is not ended.
  // 3. It is below the highWaterMark, so we can schedule
  //    another readable later.


  state.needReadable = !state.flowing && !state.ended && state.length <= state.highWaterMark;
  flow(stream);
} // at this point, the user has presumably seen the 'readable' event,
// and called read() to consume some data.  that may have triggered
// in turn another _read(n) call, in which case reading = true if
// it's in progress.
// However, if we're not ended, or reading, and the length < hwm,
// then go ahead and try to read some more preemptively.


function maybeReadMore(stream, state) {
  if (!state.readingMore) {
    state.readingMore = true;
    process.nextTick(maybeReadMore_, stream, state);
  }
}

function maybeReadMore_(stream, state) {
  // Attempt to read more data if we should.
  //
  // The conditions for reading more data are (one of):
  // - Not enough data buffered (state.length < state.highWaterMark). The loop
  //   is responsible for filling the buffer with enough data if such data
  //   is available. If highWaterMark is 0 and we are not in the flowing mode
  //   we should _not_ attempt to buffer any extra data. We'll get more data
  //   when the stream consumer calls read() instead.
  // - No data in the buffer, and the stream is in flowing mode. In this mode
  //   the loop below is responsible for ensuring read() is called. Failing to
  //   call read here would abort the flow and there's no other mechanism for
  //   continuing the flow if the stream consumer has just subscribed to the
  //   'data' event.
  //
  // In addition to the above conditions to keep reading data, the following
  // conditions prevent the data from being read:
  // - The stream has ended (state.ended).
  // - There is already a pending 'read' operation (state.reading). This is a
  //   case where the the stream has called the implementation defined _read()
  //   method, but they are processing the call asynchronously and have _not_
  //   called push() with new data. In this case we skip performing more
  //   read()s. The execution ends in this method again after the _read() ends
  //   up calling push() with more data.
  while (!state.reading && !state.ended && (state.length < state.highWaterMark || state.flowing && state.length === 0)) {
    var len = state.length;
    debug('maybeReadMore read 0');
    stream.read(0);
    if (len === state.length) // didn't get any data, stop spinning.
      break;
  }

  state.readingMore = false;
} // abstract method.  to be overridden in specific implementation classes.
// call cb(er, data) where data is <= n in length.
// for virtual (non-string, non-buffer) streams, "length" is somewhat
// arbitrary, and perhaps not very meaningful.


Readable.prototype._read = function (n) {
  errorOrDestroy(this, new ERR_METHOD_NOT_IMPLEMENTED('_read()'));
};

Readable.prototype.pipe = function (dest, pipeOpts) {
  var src = this;
  var state = this._readableState;

  switch (state.pipesCount) {
    case 0:
      state.pipes = dest;
      break;

    case 1:
      state.pipes = [state.pipes, dest];
      break;

    default:
      state.pipes.push(dest);
      break;
  }

  state.pipesCount += 1;
  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);
  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;
  var endFn = doEnd ? onend : unpipe;
  if (state.endEmitted) process.nextTick(endFn);else src.once('end', endFn);
  dest.on('unpipe', onunpipe);

  function onunpipe(readable, unpipeInfo) {
    debug('onunpipe');

    if (readable === src) {
      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {
        unpipeInfo.hasUnpiped = true;
        cleanup();
      }
    }
  }

  function onend() {
    debug('onend');
    dest.end();
  } // when the dest drains, it reduces the awaitDrain counter
  // on the source.  This would be more elegant with a .once()
  // handler in flow(), but adding and removing repeatedly is
  // too slow.


  var ondrain = pipeOnDrain(src);
  dest.on('drain', ondrain);
  var cleanedUp = false;

  function cleanup() {
    debug('cleanup'); // cleanup event handlers once the pipe is broken

    dest.removeListener('close', onclose);
    dest.removeListener('finish', onfinish);
    dest.removeListener('drain', ondrain);
    dest.removeListener('error', onerror);
    dest.removeListener('unpipe', onunpipe);
    src.removeListener('end', onend);
    src.removeListener('end', unpipe);
    src.removeListener('data', ondata);
    cleanedUp = true; // if the reader is waiting for a drain event from this
    // specific writer, then it would cause it to never start
    // flowing again.
    // So, if this is awaiting a drain, then we just call it now.
    // If we don't know, then assume that we are waiting for one.

    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();
  }

  src.on('data', ondata);

  function ondata(chunk) {
    debug('ondata');
    var ret = dest.write(chunk);
    debug('dest.write', ret);

    if (ret === false) {
      // If the user unpiped during `dest.write()`, it is possible
      // to get stuck in a permanently paused state if that write
      // also returned false.
      // => Check whether `dest` is still a piping destination.
      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {
        debug('false write response, pause', state.awaitDrain);
        state.awaitDrain++;
      }

      src.pause();
    }
  } // if the dest has an error, then stop piping into it.
  // however, don't suppress the throwing behavior for this.


  function onerror(er) {
    debug('onerror', er);
    unpipe();
    dest.removeListener('error', onerror);
    if (EElistenerCount(dest, 'error') === 0) errorOrDestroy(dest, er);
  } // Make sure our error handler is attached before userland ones.


  prependListener(dest, 'error', onerror); // Both close and finish should trigger unpipe, but only once.

  function onclose() {
    dest.removeListener('finish', onfinish);
    unpipe();
  }

  dest.once('close', onclose);

  function onfinish() {
    debug('onfinish');
    dest.removeListener('close', onclose);
    unpipe();
  }

  dest.once('finish', onfinish);

  function unpipe() {
    debug('unpipe');
    src.unpipe(dest);
  } // tell the dest that it's being piped to


  dest.emit('pipe', src); // start the flow if it hasn't been started already.

  if (!state.flowing) {
    debug('pipe resume');
    src.resume();
  }

  return dest;
};

function pipeOnDrain(src) {
  return function pipeOnDrainFunctionResult() {
    var state = src._readableState;
    debug('pipeOnDrain', state.awaitDrain);
    if (state.awaitDrain) state.awaitDrain--;

    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {
      state.flowing = true;
      flow(src);
    }
  };
}

Readable.prototype.unpipe = function (dest) {
  var state = this._readableState;
  var unpipeInfo = {
    hasUnpiped: false
  }; // if we're not piping anywhere, then do nothing.

  if (state.pipesCount === 0) return this; // just one destination.  most common case.

  if (state.pipesCount === 1) {
    // passed in one, but it's not the right one.
    if (dest && dest !== state.pipes) return this;
    if (!dest) dest = state.pipes; // got a match.

    state.pipes = null;
    state.pipesCount = 0;
    state.flowing = false;
    if (dest) dest.emit('unpipe', this, unpipeInfo);
    return this;
  } // slow case. multiple pipe destinations.


  if (!dest) {
    // remove all.
    var dests = state.pipes;
    var len = state.pipesCount;
    state.pipes = null;
    state.pipesCount = 0;
    state.flowing = false;

    for (var i = 0; i < len; i++) {
      dests[i].emit('unpipe', this, {
        hasUnpiped: false
      });
    }

    return this;
  } // try to find the right one.


  var index = indexOf(state.pipes, dest);
  if (index === -1) return this;
  state.pipes.splice(index, 1);
  state.pipesCount -= 1;
  if (state.pipesCount === 1) state.pipes = state.pipes[0];
  dest.emit('unpipe', this, unpipeInfo);
  return this;
}; // set up data events if they are asked for
// Ensure readable listeners eventually get something


Readable.prototype.on = function (ev, fn) {
  var res = Stream.prototype.on.call(this, ev, fn);
  var state = this._readableState;

  if (ev === 'data') {
    // update readableListening so that resume() may be a no-op
    // a few lines down. This is needed to support once('readable').
    state.readableListening = this.listenerCount('readable') > 0; // Try start flowing on next tick if stream isn't explicitly paused

    if (state.flowing !== false) this.resume();
  } else if (ev === 'readable') {
    if (!state.endEmitted && !state.readableListening) {
      state.readableListening = state.needReadable = true;
      state.flowing = false;
      state.emittedReadable = false;
      debug('on readable', state.length, state.reading);

      if (state.length) {
        emitReadable(this);
      } else if (!state.reading) {
        process.nextTick(nReadingNextTick, this);
      }
    }
  }

  return res;
};

Readable.prototype.addListener = Readable.prototype.on;

Readable.prototype.removeListener = function (ev, fn) {
  var res = Stream.prototype.removeListener.call(this, ev, fn);

  if (ev === 'readable') {
    // We need to check if there is someone still listening to
    // readable and reset the state. However this needs to happen
    // after readable has been emitted but before I/O (nextTick) to
    // support once('readable', fn) cycles. This means that calling
    // resume within the same tick will have no
    // effect.
    process.nextTick(updateReadableListening, this);
  }

  return res;
};

Readable.prototype.removeAllListeners = function (ev) {
  var res = Stream.prototype.removeAllListeners.apply(this, arguments);

  if (ev === 'readable' || ev === undefined) {
    // We need to check if there is someone still listening to
    // readable and reset the state. However this needs to happen
    // after readable has been emitted but before I/O (nextTick) to
    // support once('readable', fn) cycles. This means that calling
    // resume within the same tick will have no
    // effect.
    process.nextTick(updateReadableListening, this);
  }

  return res;
};

function updateReadableListening(self) {
  var state = self._readableState;
  state.readableListening = self.listenerCount('readable') > 0;

  if (state.resumeScheduled && !state.paused) {
    // flowing needs to be set to true now, otherwise
    // the upcoming resume will not flow.
    state.flowing = true; // crude way to check if we should resume
  } else if (self.listenerCount('data') > 0) {
    self.resume();
  }
}

function nReadingNextTick(self) {
  debug('readable nexttick read 0');
  self.read(0);
} // pause() and resume() are remnants of the legacy readable stream API
// If the user uses them, then switch into old mode.


Readable.prototype.resume = function () {
  var state = this._readableState;

  if (!state.flowing) {
    debug('resume'); // we flow only if there is no one listening
    // for readable, but we still have to call
    // resume()

    state.flowing = !state.readableListening;
    resume(this, state);
  }

  state.paused = false;
  return this;
};

function resume(stream, state) {
  if (!state.resumeScheduled) {
    state.resumeScheduled = true;
    process.nextTick(resume_, stream, state);
  }
}

function resume_(stream, state) {
  debug('resume', state.reading);

  if (!state.reading) {
    stream.read(0);
  }

  state.resumeScheduled = false;
  stream.emit('resume');
  flow(stream);
  if (state.flowing && !state.reading) stream.read(0);
}

Readable.prototype.pause = function () {
  debug('call pause flowing=%j', this._readableState.flowing);

  if (this._readableState.flowing !== false) {
    debug('pause');
    this._readableState.flowing = false;
    this.emit('pause');
  }

  this._readableState.paused = true;
  return this;
};

function flow(stream) {
  var state = stream._readableState;
  debug('flow', state.flowing);

  while (state.flowing && stream.read() !== null) {
    ;
  }
} // wrap an old-style stream as the async data source.
// This is *not* part of the readable stream interface.
// It is an ugly unfortunate mess of history.


Readable.prototype.wrap = function (stream) {
  var _this = this;

  var state = this._readableState;
  var paused = false;
  stream.on('end', function () {
    debug('wrapped end');

    if (state.decoder && !state.ended) {
      var chunk = state.decoder.end();
      if (chunk && chunk.length) _this.push(chunk);
    }

    _this.push(null);
  });
  stream.on('data', function (chunk) {
    debug('wrapped data');
    if (state.decoder) chunk = state.decoder.write(chunk); // don't skip over falsy values in objectMode

    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;

    var ret = _this.push(chunk);

    if (!ret) {
      paused = true;
      stream.pause();
    }
  }); // proxy all the other methods.
  // important when wrapping filters and duplexes.

  for (var i in stream) {
    if (this[i] === undefined && typeof stream[i] === 'function') {
      this[i] = function methodWrap(method) {
        return function methodWrapReturnFunction() {
          return stream[method].apply(stream, arguments);
        };
      }(i);
    }
  } // proxy certain important events.


  for (var n = 0; n < kProxyEvents.length; n++) {
    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));
  } // when we try to consume some more bytes, simply unpause the
  // underlying stream.


  this._read = function (n) {
    debug('wrapped _read', n);

    if (paused) {
      paused = false;
      stream.resume();
    }
  };

  return this;
};

if (typeof Symbol === 'function') {
  Readable.prototype[Symbol.asyncIterator] = function () {
    if (createReadableStreamAsyncIterator === undefined) {
      createReadableStreamAsyncIterator = __webpack_require__(/*! ./internal/streams/async_iterator */ "./node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/async_iterator.js");
    }

    return createReadableStreamAsyncIterator(this);
  };
}

Object.defineProperty(Readable.prototype, 'readableHighWaterMark', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._readableState.highWaterMark;
  }
});
Object.defineProperty(Readable.prototype, 'readableBuffer', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._readableState && this._readableState.buffer;
  }
});
Object.defineProperty(Readable.prototype, 'readableFlowing', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._readableState.flowing;
  },
  set: function set(state) {
    if (this._readableState) {
      this._readableState.flowing = state;
    }
  }
}); // exposed for testing purposes only.

Readable._fromList = fromList;
Object.defineProperty(Readable.prototype, 'readableLength', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._readableState.length;
  }
}); // Pluck off n bytes from an array of buffers.
// Length is the combined lengths of all the buffers in the list.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.

function fromList(n, state) {
  // nothing buffered
  if (state.length === 0) return null;
  var ret;
  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {
    // read it all, truncate the list
    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.first();else ret = state.buffer.concat(state.length);
    state.buffer.clear();
  } else {
    // read part of list
    ret = state.buffer.consume(n, state.decoder);
  }
  return ret;
}

function endReadable(stream) {
  var state = stream._readableState;
  debug('endReadable', state.endEmitted);

  if (!state.endEmitted) {
    state.ended = true;
    process.nextTick(endReadableNT, state, stream);
  }
}

function endReadableNT(state, stream) {
  debug('endReadableNT', state.endEmitted, state.length); // Check that we didn't get one last unshift.

  if (!state.endEmitted && state.length === 0) {
    state.endEmitted = true;
    stream.readable = false;
    stream.emit('end');

    if (state.autoDestroy) {
      // In case of duplex streams we need a way to detect
      // if the writable side is ready for autoDestroy as well
      var wState = stream._writableState;

      if (!wState || wState.autoDestroy && wState.finished) {
        stream.destroy();
      }
    }
  }
}

if (typeof Symbol === 'function') {
  Readable.from = function (iterable, opts) {
    if (from === undefined) {
      from = __webpack_require__(/*! ./internal/streams/from */ "./node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/from-browser.js");
    }

    return from(Readable, iterable, opts);
  };
}

function indexOf(xs, x) {
  for (var i = 0, l = xs.length; i < l; i++) {
    if (xs[i] === x) return i;
  }

  return -1;
}

/***/ }),

/***/ "./node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_transform.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_transform.js ***!
  \********************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
// a transform stream is a readable/writable stream where you do
// something with the data.  Sometimes it's called a "filter",
// but that's not a great name for it, since that implies a thing where
// some bits pass through, and others are simply ignored.  (That would
// be a valid example of a transform, of course.)
//
// While the output is causally related to the input, it's not a
// necessarily symmetric or synchronous transformation.  For example,
// a zlib stream might take multiple plain-text writes(), and then
// emit a single compressed chunk some time in the future.
//
// Here's how this works:
//
// The Transform stream has all the aspects of the readable and writable
// stream classes.  When you write(chunk), that calls _write(chunk,cb)
// internally, and returns false if there's a lot of pending writes
// buffered up.  When you call read(), that calls _read(n) until
// there's enough pending readable data buffered up.
//
// In a transform stream, the written data is placed in a buffer.  When
// _read(n) is called, it transforms the queued up data, calling the
// buffered _write cb's as it consumes chunks.  If consuming a single
// written chunk would result in multiple output chunks, then the first
// outputted bit calls the readcb, and subsequent chunks just go into
// the read buffer, and will cause it to emit 'readable' if necessary.
//
// This way, back-pressure is actually determined by the reading side,
// since _read has to be called to start processing a new chunk.  However,
// a pathological inflate type of transform can cause excessive buffering
// here.  For example, imagine a stream where every byte of input is
// interpreted as an integer from 0-255, and then results in that many
// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in
// 1kb of data being output.  In this case, you could write a very small
// amount of input, and end up with a very large amount of output.  In
// such a pathological inflating mechanism, there'd be no way to tell
// the system to stop doing the transform.  A single 4MB write could
// cause the system to run out of memory.
//
// However, even in such a pathological case, only a single written chunk
// would be consumed, and then the rest would wait (un-transformed) until
// the results of the previous transformed chunk were consumed.


module.exports = Transform;

var _require$codes = __webpack_require__(/*! ../errors */ "./node_modules/browserify-sign/node_modules/readable-stream/errors-browser.js").codes,
    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,
    ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,
    ERR_TRANSFORM_ALREADY_TRANSFORMING = _require$codes.ERR_TRANSFORM_ALREADY_TRANSFORMING,
    ERR_TRANSFORM_WITH_LENGTH_0 = _require$codes.ERR_TRANSFORM_WITH_LENGTH_0;

var Duplex = __webpack_require__(/*! ./_stream_duplex */ "./node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_duplex.js");

__webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")(Transform, Duplex);

function afterTransform(er, data) {
  var ts = this._transformState;
  ts.transforming = false;
  var cb = ts.writecb;

  if (cb === null) {
    return this.emit('error', new ERR_MULTIPLE_CALLBACK());
  }

  ts.writechunk = null;
  ts.writecb = null;
  if (data != null) // single equals check for both `null` and `undefined`
    this.push(data);
  cb(er);
  var rs = this._readableState;
  rs.reading = false;

  if (rs.needReadable || rs.length < rs.highWaterMark) {
    this._read(rs.highWaterMark);
  }
}

function Transform(options) {
  if (!(this instanceof Transform)) return new Transform(options);
  Duplex.call(this, options);
  this._transformState = {
    afterTransform: afterTransform.bind(this),
    needTransform: false,
    transforming: false,
    writecb: null,
    writechunk: null,
    writeencoding: null
  }; // start out asking for a readable event once data is transformed.

  this._readableState.needReadable = true; // we have implemented the _read method, and done the other things
  // that Readable wants before the first _read call, so unset the
  // sync guard flag.

  this._readableState.sync = false;

  if (options) {
    if (typeof options.transform === 'function') this._transform = options.transform;
    if (typeof options.flush === 'function') this._flush = options.flush;
  } // When the writable side finishes, then flush out anything remaining.


  this.on('prefinish', prefinish);
}

function prefinish() {
  var _this = this;

  if (typeof this._flush === 'function' && !this._readableState.destroyed) {
    this._flush(function (er, data) {
      done(_this, er, data);
    });
  } else {
    done(this, null, null);
  }
}

Transform.prototype.push = function (chunk, encoding) {
  this._transformState.needTransform = false;
  return Duplex.prototype.push.call(this, chunk, encoding);
}; // This is the part where you do stuff!
// override this function in implementation classes.
// 'chunk' is an input chunk.
//
// Call `push(newChunk)` to pass along transformed output
// to the readable side.  You may call 'push' zero or more times.
//
// Call `cb(err)` when you are done with this chunk.  If you pass
// an error, then that'll put the hurt on the whole operation.  If you
// never call cb(), then you'll never get another chunk.


Transform.prototype._transform = function (chunk, encoding, cb) {
  cb(new ERR_METHOD_NOT_IMPLEMENTED('_transform()'));
};

Transform.prototype._write = function (chunk, encoding, cb) {
  var ts = this._transformState;
  ts.writecb = cb;
  ts.writechunk = chunk;
  ts.writeencoding = encoding;

  if (!ts.transforming) {
    var rs = this._readableState;
    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);
  }
}; // Doesn't matter what the args are here.
// _transform does all the work.
// That we got here means that the readable side wants more data.


Transform.prototype._read = function (n) {
  var ts = this._transformState;

  if (ts.writechunk !== null && !ts.transforming) {
    ts.transforming = true;

    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);
  } else {
    // mark that we need a transform, so that any data that comes in
    // will get processed, now that we've asked for it.
    ts.needTransform = true;
  }
};

Transform.prototype._destroy = function (err, cb) {
  Duplex.prototype._destroy.call(this, err, function (err2) {
    cb(err2);
  });
};

function done(stream, er, data) {
  if (er) return stream.emit('error', er);
  if (data != null) // single equals check for both `null` and `undefined`
    stream.push(data); // TODO(BridgeAR): Write a test for these two error cases
  // if there's nothing in the write buffer, then that means
  // that nothing more will ever be provided

  if (stream._writableState.length) throw new ERR_TRANSFORM_WITH_LENGTH_0();
  if (stream._transformState.transforming) throw new ERR_TRANSFORM_ALREADY_TRANSFORMING();
  return stream.push(null);
}

/***/ }),

/***/ "./node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_writable.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_writable.js ***!
  \*******************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
// A bit simpler than readable streams.
// Implement an async ._write(chunk, encoding, cb), and it'll handle all
// the drain event emission and buffering.


module.exports = Writable;
/* <replacement> */

function WriteReq(chunk, encoding, cb) {
  this.chunk = chunk;
  this.encoding = encoding;
  this.callback = cb;
  this.next = null;
} // It seems a linked list but it is not
// there will be only 2 of these for each stream


function CorkedRequest(state) {
  var _this = this;

  this.next = null;
  this.entry = null;

  this.finish = function () {
    onCorkedFinish(_this, state);
  };
}
/* </replacement> */

/*<replacement>*/


var Duplex;
/*</replacement>*/

Writable.WritableState = WritableState;
/*<replacement>*/

var internalUtil = {
  deprecate: __webpack_require__(/*! util-deprecate */ "./node_modules/util-deprecate/browser.js")
};
/*</replacement>*/

/*<replacement>*/

var Stream = __webpack_require__(/*! ./internal/streams/stream */ "./node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/stream-browser.js");
/*</replacement>*/


var Buffer = __webpack_require__(/*! buffer */ "./node_modules/buffer/index.js").Buffer;

var OurUint8Array = __webpack_require__.g.Uint8Array || function () {};

function _uint8ArrayToBuffer(chunk) {
  return Buffer.from(chunk);
}

function _isUint8Array(obj) {
  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;
}

var destroyImpl = __webpack_require__(/*! ./internal/streams/destroy */ "./node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/destroy.js");

var _require = __webpack_require__(/*! ./internal/streams/state */ "./node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/state.js"),
    getHighWaterMark = _require.getHighWaterMark;

var _require$codes = __webpack_require__(/*! ../errors */ "./node_modules/browserify-sign/node_modules/readable-stream/errors-browser.js").codes,
    ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,
    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,
    ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,
    ERR_STREAM_CANNOT_PIPE = _require$codes.ERR_STREAM_CANNOT_PIPE,
    ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED,
    ERR_STREAM_NULL_VALUES = _require$codes.ERR_STREAM_NULL_VALUES,
    ERR_STREAM_WRITE_AFTER_END = _require$codes.ERR_STREAM_WRITE_AFTER_END,
    ERR_UNKNOWN_ENCODING = _require$codes.ERR_UNKNOWN_ENCODING;

var errorOrDestroy = destroyImpl.errorOrDestroy;

__webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")(Writable, Stream);

function nop() {}

function WritableState(options, stream, isDuplex) {
  Duplex = Duplex || __webpack_require__(/*! ./_stream_duplex */ "./node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_duplex.js");
  options = options || {}; // Duplex streams are both readable and writable, but share
  // the same options object.
  // However, some cases require setting options to different
  // values for the readable and the writable sides of the duplex stream,
  // e.g. options.readableObjectMode vs. options.writableObjectMode, etc.

  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex; // object stream flag to indicate whether or not this stream
  // contains buffers or objects.

  this.objectMode = !!options.objectMode;
  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode; // the point at which write() starts returning false
  // Note: 0 is a valid value, means that we always return false if
  // the entire buffer is not flushed immediately on write()

  this.highWaterMark = getHighWaterMark(this, options, 'writableHighWaterMark', isDuplex); // if _final has been called

  this.finalCalled = false; // drain event flag.

  this.needDrain = false; // at the start of calling end()

  this.ending = false; // when end() has been called, and returned

  this.ended = false; // when 'finish' is emitted

  this.finished = false; // has it been destroyed

  this.destroyed = false; // should we decode strings into buffers before passing to _write?
  // this is here so that some node-core streams can optimize string
  // handling at a lower level.

  var noDecode = options.decodeStrings === false;
  this.decodeStrings = !noDecode; // Crypto is kind of old and crusty.  Historically, its default string
  // encoding is 'binary' so we have to make this configurable.
  // Everything else in the universe uses 'utf8', though.

  this.defaultEncoding = options.defaultEncoding || 'utf8'; // not an actual buffer we keep track of, but a measurement
  // of how much we're waiting to get pushed to some underlying
  // socket or file.

  this.length = 0; // a flag to see when we're in the middle of a write.

  this.writing = false; // when true all writes will be buffered until .uncork() call

  this.corked = 0; // a flag to be able to tell if the onwrite cb is called immediately,
  // or on a later tick.  We set this to true at first, because any
  // actions that shouldn't happen until "later" should generally also
  // not happen before the first write call.

  this.sync = true; // a flag to know if we're processing previously buffered items, which
  // may call the _write() callback in the same tick, so that we don't
  // end up in an overlapped onwrite situation.

  this.bufferProcessing = false; // the callback that's passed to _write(chunk,cb)

  this.onwrite = function (er) {
    onwrite(stream, er);
  }; // the callback that the user supplies to write(chunk,encoding,cb)


  this.writecb = null; // the amount that is being written when _write is called.

  this.writelen = 0;
  this.bufferedRequest = null;
  this.lastBufferedRequest = null; // number of pending user-supplied write callbacks
  // this must be 0 before 'finish' can be emitted

  this.pendingcb = 0; // emit prefinish if the only thing we're waiting for is _write cbs
  // This is relevant for synchronous Transform streams

  this.prefinished = false; // True if the error was already emitted and should not be thrown again

  this.errorEmitted = false; // Should close be emitted on destroy. Defaults to true.

  this.emitClose = options.emitClose !== false; // Should .destroy() be called after 'finish' (and potentially 'end')

  this.autoDestroy = !!options.autoDestroy; // count buffered requests

  this.bufferedRequestCount = 0; // allocate the first CorkedRequest, there is always
  // one allocated and free to use, and we maintain at most two

  this.corkedRequestsFree = new CorkedRequest(this);
}

WritableState.prototype.getBuffer = function getBuffer() {
  var current = this.bufferedRequest;
  var out = [];

  while (current) {
    out.push(current);
    current = current.next;
  }

  return out;
};

(function () {
  try {
    Object.defineProperty(WritableState.prototype, 'buffer', {
      get: internalUtil.deprecate(function writableStateBufferGetter() {
        return this.getBuffer();
      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')
    });
  } catch (_) {}
})(); // Test _writableState for inheritance to account for Duplex streams,
// whose prototype chain only points to Readable.


var realHasInstance;

if (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {
  realHasInstance = Function.prototype[Symbol.hasInstance];
  Object.defineProperty(Writable, Symbol.hasInstance, {
    value: function value(object) {
      if (realHasInstance.call(this, object)) return true;
      if (this !== Writable) return false;
      return object && object._writableState instanceof WritableState;
    }
  });
} else {
  realHasInstance = function realHasInstance(object) {
    return object instanceof this;
  };
}

function Writable(options) {
  Duplex = Duplex || __webpack_require__(/*! ./_stream_duplex */ "./node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_duplex.js"); // Writable ctor is applied to Duplexes, too.
  // `realHasInstance` is necessary because using plain `instanceof`
  // would return false, as no `_writableState` property is attached.
  // Trying to use the custom `instanceof` for Writable here will also break the
  // Node.js LazyTransform implementation, which has a non-trivial getter for
  // `_writableState` that would lead to infinite recursion.
  // Checking for a Stream.Duplex instance is faster here instead of inside
  // the WritableState constructor, at least with V8 6.5

  var isDuplex = this instanceof Duplex;
  if (!isDuplex && !realHasInstance.call(Writable, this)) return new Writable(options);
  this._writableState = new WritableState(options, this, isDuplex); // legacy.

  this.writable = true;

  if (options) {
    if (typeof options.write === 'function') this._write = options.write;
    if (typeof options.writev === 'function') this._writev = options.writev;
    if (typeof options.destroy === 'function') this._destroy = options.destroy;
    if (typeof options.final === 'function') this._final = options.final;
  }

  Stream.call(this);
} // Otherwise people can pipe Writable streams, which is just wrong.


Writable.prototype.pipe = function () {
  errorOrDestroy(this, new ERR_STREAM_CANNOT_PIPE());
};

function writeAfterEnd(stream, cb) {
  var er = new ERR_STREAM_WRITE_AFTER_END(); // TODO: defer error events consistently everywhere, not just the cb

  errorOrDestroy(stream, er);
  process.nextTick(cb, er);
} // Checks that a user-supplied chunk is valid, especially for the particular
// mode the stream is in. Currently this means that `null` is never accepted
// and undefined/non-string values are only allowed in object mode.


function validChunk(stream, state, chunk, cb) {
  var er;

  if (chunk === null) {
    er = new ERR_STREAM_NULL_VALUES();
  } else if (typeof chunk !== 'string' && !state.objectMode) {
    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer'], chunk);
  }

  if (er) {
    errorOrDestroy(stream, er);
    process.nextTick(cb, er);
    return false;
  }

  return true;
}

Writable.prototype.write = function (chunk, encoding, cb) {
  var state = this._writableState;
  var ret = false;

  var isBuf = !state.objectMode && _isUint8Array(chunk);

  if (isBuf && !Buffer.isBuffer(chunk)) {
    chunk = _uint8ArrayToBuffer(chunk);
  }

  if (typeof encoding === 'function') {
    cb = encoding;
    encoding = null;
  }

  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;
  if (typeof cb !== 'function') cb = nop;
  if (state.ending) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {
    state.pendingcb++;
    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);
  }
  return ret;
};

Writable.prototype.cork = function () {
  this._writableState.corked++;
};

Writable.prototype.uncork = function () {
  var state = this._writableState;

  if (state.corked) {
    state.corked--;
    if (!state.writing && !state.corked && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);
  }
};

Writable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {
  // node::ParseEncoding() requires lower case.
  if (typeof encoding === 'string') encoding = encoding.toLowerCase();
  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new ERR_UNKNOWN_ENCODING(encoding);
  this._writableState.defaultEncoding = encoding;
  return this;
};

Object.defineProperty(Writable.prototype, 'writableBuffer', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._writableState && this._writableState.getBuffer();
  }
});

function decodeChunk(state, chunk, encoding) {
  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {
    chunk = Buffer.from(chunk, encoding);
  }

  return chunk;
}

Object.defineProperty(Writable.prototype, 'writableHighWaterMark', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._writableState.highWaterMark;
  }
}); // if we're already writing something, then just put this
// in the queue, and wait our turn.  Otherwise, call _write
// If we return false, then we need a drain event, so set that flag.

function writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {
  if (!isBuf) {
    var newChunk = decodeChunk(state, chunk, encoding);

    if (chunk !== newChunk) {
      isBuf = true;
      encoding = 'buffer';
      chunk = newChunk;
    }
  }

  var len = state.objectMode ? 1 : chunk.length;
  state.length += len;
  var ret = state.length < state.highWaterMark; // we must ensure that previous needDrain will not be reset to false.

  if (!ret) state.needDrain = true;

  if (state.writing || state.corked) {
    var last = state.lastBufferedRequest;
    state.lastBufferedRequest = {
      chunk: chunk,
      encoding: encoding,
      isBuf: isBuf,
      callback: cb,
      next: null
    };

    if (last) {
      last.next = state.lastBufferedRequest;
    } else {
      state.bufferedRequest = state.lastBufferedRequest;
    }

    state.bufferedRequestCount += 1;
  } else {
    doWrite(stream, state, false, len, chunk, encoding, cb);
  }

  return ret;
}

function doWrite(stream, state, writev, len, chunk, encoding, cb) {
  state.writelen = len;
  state.writecb = cb;
  state.writing = true;
  state.sync = true;
  if (state.destroyed) state.onwrite(new ERR_STREAM_DESTROYED('write'));else if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);
  state.sync = false;
}

function onwriteError(stream, state, sync, er, cb) {
  --state.pendingcb;

  if (sync) {
    // defer the callback if we are being called synchronously
    // to avoid piling up things on the stack
    process.nextTick(cb, er); // this can emit finish, and it will always happen
    // after error

    process.nextTick(finishMaybe, stream, state);
    stream._writableState.errorEmitted = true;
    errorOrDestroy(stream, er);
  } else {
    // the caller expect this to happen before if
    // it is async
    cb(er);
    stream._writableState.errorEmitted = true;
    errorOrDestroy(stream, er); // this can emit finish, but finish must
    // always follow error

    finishMaybe(stream, state);
  }
}

function onwriteStateUpdate(state) {
  state.writing = false;
  state.writecb = null;
  state.length -= state.writelen;
  state.writelen = 0;
}

function onwrite(stream, er) {
  var state = stream._writableState;
  var sync = state.sync;
  var cb = state.writecb;
  if (typeof cb !== 'function') throw new ERR_MULTIPLE_CALLBACK();
  onwriteStateUpdate(state);
  if (er) onwriteError(stream, state, sync, er, cb);else {
    // Check if we're actually ready to finish, but don't emit yet
    var finished = needFinish(state) || stream.destroyed;

    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {
      clearBuffer(stream, state);
    }

    if (sync) {
      process.nextTick(afterWrite, stream, state, finished, cb);
    } else {
      afterWrite(stream, state, finished, cb);
    }
  }
}

function afterWrite(stream, state, finished, cb) {
  if (!finished) onwriteDrain(stream, state);
  state.pendingcb--;
  cb();
  finishMaybe(stream, state);
} // Must force callback to be called on nextTick, so that we don't
// emit 'drain' before the write() consumer gets the 'false' return
// value, and has a chance to attach a 'drain' listener.


function onwriteDrain(stream, state) {
  if (state.length === 0 && state.needDrain) {
    state.needDrain = false;
    stream.emit('drain');
  }
} // if there's something in the buffer waiting, then process it


function clearBuffer(stream, state) {
  state.bufferProcessing = true;
  var entry = state.bufferedRequest;

  if (stream._writev && entry && entry.next) {
    // Fast case, write everything using _writev()
    var l = state.bufferedRequestCount;
    var buffer = new Array(l);
    var holder = state.corkedRequestsFree;
    holder.entry = entry;
    var count = 0;
    var allBuffers = true;

    while (entry) {
      buffer[count] = entry;
      if (!entry.isBuf) allBuffers = false;
      entry = entry.next;
      count += 1;
    }

    buffer.allBuffers = allBuffers;
    doWrite(stream, state, true, state.length, buffer, '', holder.finish); // doWrite is almost always async, defer these to save a bit of time
    // as the hot path ends with doWrite

    state.pendingcb++;
    state.lastBufferedRequest = null;

    if (holder.next) {
      state.corkedRequestsFree = holder.next;
      holder.next = null;
    } else {
      state.corkedRequestsFree = new CorkedRequest(state);
    }

    state.bufferedRequestCount = 0;
  } else {
    // Slow case, write chunks one-by-one
    while (entry) {
      var chunk = entry.chunk;
      var encoding = entry.encoding;
      var cb = entry.callback;
      var len = state.objectMode ? 1 : chunk.length;
      doWrite(stream, state, false, len, chunk, encoding, cb);
      entry = entry.next;
      state.bufferedRequestCount--; // if we didn't call the onwrite immediately, then
      // it means that we need to wait until it does.
      // also, that means that the chunk and cb are currently
      // being processed, so move the buffer counter past them.

      if (state.writing) {
        break;
      }
    }

    if (entry === null) state.lastBufferedRequest = null;
  }

  state.bufferedRequest = entry;
  state.bufferProcessing = false;
}

Writable.prototype._write = function (chunk, encoding, cb) {
  cb(new ERR_METHOD_NOT_IMPLEMENTED('_write()'));
};

Writable.prototype._writev = null;

Writable.prototype.end = function (chunk, encoding, cb) {
  var state = this._writableState;

  if (typeof chunk === 'function') {
    cb = chunk;
    chunk = null;
    encoding = null;
  } else if (typeof encoding === 'function') {
    cb = encoding;
    encoding = null;
  }

  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding); // .end() fully uncorks

  if (state.corked) {
    state.corked = 1;
    this.uncork();
  } // ignore unnecessary end() calls.


  if (!state.ending) endWritable(this, state, cb);
  return this;
};

Object.defineProperty(Writable.prototype, 'writableLength', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._writableState.length;
  }
});

function needFinish(state) {
  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;
}

function callFinal(stream, state) {
  stream._final(function (err) {
    state.pendingcb--;

    if (err) {
      errorOrDestroy(stream, err);
    }

    state.prefinished = true;
    stream.emit('prefinish');
    finishMaybe(stream, state);
  });
}

function prefinish(stream, state) {
  if (!state.prefinished && !state.finalCalled) {
    if (typeof stream._final === 'function' && !state.destroyed) {
      state.pendingcb++;
      state.finalCalled = true;
      process.nextTick(callFinal, stream, state);
    } else {
      state.prefinished = true;
      stream.emit('prefinish');
    }
  }
}

function finishMaybe(stream, state) {
  var need = needFinish(state);

  if (need) {
    prefinish(stream, state);

    if (state.pendingcb === 0) {
      state.finished = true;
      stream.emit('finish');

      if (state.autoDestroy) {
        // In case of duplex streams we need a way to detect
        // if the readable side is ready for autoDestroy as well
        var rState = stream._readableState;

        if (!rState || rState.autoDestroy && rState.endEmitted) {
          stream.destroy();
        }
      }
    }
  }

  return need;
}

function endWritable(stream, state, cb) {
  state.ending = true;
  finishMaybe(stream, state);

  if (cb) {
    if (state.finished) process.nextTick(cb);else stream.once('finish', cb);
  }

  state.ended = true;
  stream.writable = false;
}

function onCorkedFinish(corkReq, state, err) {
  var entry = corkReq.entry;
  corkReq.entry = null;

  while (entry) {
    var cb = entry.callback;
    state.pendingcb--;
    cb(err);
    entry = entry.next;
  } // reuse the free corkReq.


  state.corkedRequestsFree.next = corkReq;
}

Object.defineProperty(Writable.prototype, 'destroyed', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    if (this._writableState === undefined) {
      return false;
    }

    return this._writableState.destroyed;
  },
  set: function set(value) {
    // we ignore the value if the stream
    // has not been initialized yet
    if (!this._writableState) {
      return;
    } // backward compatibility, the user is explicitly
    // managing destroyed


    this._writableState.destroyed = value;
  }
});
Writable.prototype.destroy = destroyImpl.destroy;
Writable.prototype._undestroy = destroyImpl.undestroy;

Writable.prototype._destroy = function (err, cb) {
  cb(err);
};

/***/ }),

/***/ "./node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/async_iterator.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/async_iterator.js ***!
  \**********************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var _Object$setPrototypeO;

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var finished = __webpack_require__(/*! ./end-of-stream */ "./node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/end-of-stream.js");

var kLastResolve = Symbol('lastResolve');
var kLastReject = Symbol('lastReject');
var kError = Symbol('error');
var kEnded = Symbol('ended');
var kLastPromise = Symbol('lastPromise');
var kHandlePromise = Symbol('handlePromise');
var kStream = Symbol('stream');

function createIterResult(value, done) {
  return {
    value: value,
    done: done
  };
}

function readAndResolve(iter) {
  var resolve = iter[kLastResolve];

  if (resolve !== null) {
    var data = iter[kStream].read(); // we defer if data is null
    // we can be expecting either 'end' or
    // 'error'

    if (data !== null) {
      iter[kLastPromise] = null;
      iter[kLastResolve] = null;
      iter[kLastReject] = null;
      resolve(createIterResult(data, false));
    }
  }
}

function onReadable(iter) {
  // we wait for the next tick, because it might
  // emit an error with process.nextTick
  process.nextTick(readAndResolve, iter);
}

function wrapForNext(lastPromise, iter) {
  return function (resolve, reject) {
    lastPromise.then(function () {
      if (iter[kEnded]) {
        resolve(createIterResult(undefined, true));
        return;
      }

      iter[kHandlePromise](resolve, reject);
    }, reject);
  };
}

var AsyncIteratorPrototype = Object.getPrototypeOf(function () {});
var ReadableStreamAsyncIteratorPrototype = Object.setPrototypeOf((_Object$setPrototypeO = {
  get stream() {
    return this[kStream];
  },

  next: function next() {
    var _this = this;

    // if we have detected an error in the meanwhile
    // reject straight away
    var error = this[kError];

    if (error !== null) {
      return Promise.reject(error);
    }

    if (this[kEnded]) {
      return Promise.resolve(createIterResult(undefined, true));
    }

    if (this[kStream].destroyed) {
      // We need to defer via nextTick because if .destroy(err) is
      // called, the error will be emitted via nextTick, and
      // we cannot guarantee that there is no error lingering around
      // waiting to be emitted.
      return new Promise(function (resolve, reject) {
        process.nextTick(function () {
          if (_this[kError]) {
            reject(_this[kError]);
          } else {
            resolve(createIterResult(undefined, true));
          }
        });
      });
    } // if we have multiple next() calls
    // we will wait for the previous Promise to finish
    // this logic is optimized to support for await loops,
    // where next() is only called once at a time


    var lastPromise = this[kLastPromise];
    var promise;

    if (lastPromise) {
      promise = new Promise(wrapForNext(lastPromise, this));
    } else {
      // fast path needed to support multiple this.push()
      // without triggering the next() queue
      var data = this[kStream].read();

      if (data !== null) {
        return Promise.resolve(createIterResult(data, false));
      }

      promise = new Promise(this[kHandlePromise]);
    }

    this[kLastPromise] = promise;
    return promise;
  }
}, _defineProperty(_Object$setPrototypeO, Symbol.asyncIterator, function () {
  return this;
}), _defineProperty(_Object$setPrototypeO, "return", function _return() {
  var _this2 = this;

  // destroy(err, cb) is a private API
  // we can guarantee we have that here, because we control the
  // Readable class this is attached to
  return new Promise(function (resolve, reject) {
    _this2[kStream].destroy(null, function (err) {
      if (err) {
        reject(err);
        return;
      }

      resolve(createIterResult(undefined, true));
    });
  });
}), _Object$setPrototypeO), AsyncIteratorPrototype);

var createReadableStreamAsyncIterator = function createReadableStreamAsyncIterator(stream) {
  var _Object$create;

  var iterator = Object.create(ReadableStreamAsyncIteratorPrototype, (_Object$create = {}, _defineProperty(_Object$create, kStream, {
    value: stream,
    writable: true
  }), _defineProperty(_Object$create, kLastResolve, {
    value: null,
    writable: true
  }), _defineProperty(_Object$create, kLastReject, {
    value: null,
    writable: true
  }), _defineProperty(_Object$create, kError, {
    value: null,
    writable: true
  }), _defineProperty(_Object$create, kEnded, {
    value: stream._readableState.endEmitted,
    writable: true
  }), _defineProperty(_Object$create, kHandlePromise, {
    value: function value(resolve, reject) {
      var data = iterator[kStream].read();

      if (data) {
        iterator[kLastPromise] = null;
        iterator[kLastResolve] = null;
        iterator[kLastReject] = null;
        resolve(createIterResult(data, false));
      } else {
        iterator[kLastResolve] = resolve;
        iterator[kLastReject] = reject;
      }
    },
    writable: true
  }), _Object$create));
  iterator[kLastPromise] = null;
  finished(stream, function (err) {
    if (err && err.code !== 'ERR_STREAM_PREMATURE_CLOSE') {
      var reject = iterator[kLastReject]; // reject if we are waiting for data in the Promise
      // returned by next() and store the error

      if (reject !== null) {
        iterator[kLastPromise] = null;
        iterator[kLastResolve] = null;
        iterator[kLastReject] = null;
        reject(err);
      }

      iterator[kError] = err;
      return;
    }

    var resolve = iterator[kLastResolve];

    if (resolve !== null) {
      iterator[kLastPromise] = null;
      iterator[kLastResolve] = null;
      iterator[kLastReject] = null;
      resolve(createIterResult(undefined, true));
    }

    iterator[kEnded] = true;
  });
  stream.on('readable', onReadable.bind(null, iterator));
  return iterator;
};

module.exports = createReadableStreamAsyncIterator;

/***/ }),

/***/ "./node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/buffer_list.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/buffer_list.js ***!
  \*******************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var _require = __webpack_require__(/*! buffer */ "./node_modules/buffer/index.js"),
    Buffer = _require.Buffer;

var _require2 = __webpack_require__(/*! util */ "?cad2"),
    inspect = _require2.inspect;

var custom = inspect && inspect.custom || 'inspect';

function copyBuffer(src, target, offset) {
  Buffer.prototype.copy.call(src, target, offset);
}

module.exports =
/*#__PURE__*/
function () {
  function BufferList() {
    _classCallCheck(this, BufferList);

    this.head = null;
    this.tail = null;
    this.length = 0;
  }

  _createClass(BufferList, [{
    key: "push",
    value: function push(v) {
      var entry = {
        data: v,
        next: null
      };
      if (this.length > 0) this.tail.next = entry;else this.head = entry;
      this.tail = entry;
      ++this.length;
    }
  }, {
    key: "unshift",
    value: function unshift(v) {
      var entry = {
        data: v,
        next: this.head
      };
      if (this.length === 0) this.tail = entry;
      this.head = entry;
      ++this.length;
    }
  }, {
    key: "shift",
    value: function shift() {
      if (this.length === 0) return;
      var ret = this.head.data;
      if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;
      --this.length;
      return ret;
    }
  }, {
    key: "clear",
    value: function clear() {
      this.head = this.tail = null;
      this.length = 0;
    }
  }, {
    key: "join",
    value: function join(s) {
      if (this.length === 0) return '';
      var p = this.head;
      var ret = '' + p.data;

      while (p = p.next) {
        ret += s + p.data;
      }

      return ret;
    }
  }, {
    key: "concat",
    value: function concat(n) {
      if (this.length === 0) return Buffer.alloc(0);
      var ret = Buffer.allocUnsafe(n >>> 0);
      var p = this.head;
      var i = 0;

      while (p) {
        copyBuffer(p.data, ret, i);
        i += p.data.length;
        p = p.next;
      }

      return ret;
    } // Consumes a specified amount of bytes or characters from the buffered data.

  }, {
    key: "consume",
    value: function consume(n, hasStrings) {
      var ret;

      if (n < this.head.data.length) {
        // `slice` is the same for buffers and strings.
        ret = this.head.data.slice(0, n);
        this.head.data = this.head.data.slice(n);
      } else if (n === this.head.data.length) {
        // First chunk is a perfect match.
        ret = this.shift();
      } else {
        // Result spans more than one buffer.
        ret = hasStrings ? this._getString(n) : this._getBuffer(n);
      }

      return ret;
    }
  }, {
    key: "first",
    value: function first() {
      return this.head.data;
    } // Consumes a specified amount of characters from the buffered data.

  }, {
    key: "_getString",
    value: function _getString(n) {
      var p = this.head;
      var c = 1;
      var ret = p.data;
      n -= ret.length;

      while (p = p.next) {
        var str = p.data;
        var nb = n > str.length ? str.length : n;
        if (nb === str.length) ret += str;else ret += str.slice(0, n);
        n -= nb;

        if (n === 0) {
          if (nb === str.length) {
            ++c;
            if (p.next) this.head = p.next;else this.head = this.tail = null;
          } else {
            this.head = p;
            p.data = str.slice(nb);
          }

          break;
        }

        ++c;
      }

      this.length -= c;
      return ret;
    } // Consumes a specified amount of bytes from the buffered data.

  }, {
    key: "_getBuffer",
    value: function _getBuffer(n) {
      var ret = Buffer.allocUnsafe(n);
      var p = this.head;
      var c = 1;
      p.data.copy(ret);
      n -= p.data.length;

      while (p = p.next) {
        var buf = p.data;
        var nb = n > buf.length ? buf.length : n;
        buf.copy(ret, ret.length - n, 0, nb);
        n -= nb;

        if (n === 0) {
          if (nb === buf.length) {
            ++c;
            if (p.next) this.head = p.next;else this.head = this.tail = null;
          } else {
            this.head = p;
            p.data = buf.slice(nb);
          }

          break;
        }

        ++c;
      }

      this.length -= c;
      return ret;
    } // Make sure the linked list only shows the minimal necessary information.

  }, {
    key: custom,
    value: function value(_, options) {
      return inspect(this, _objectSpread({}, options, {
        // Only inspect one level.
        depth: 0,
        // It should not recurse.
        customInspect: false
      }));
    }
  }]);

  return BufferList;
}();

/***/ }),

/***/ "./node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/destroy.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/destroy.js ***!
  \***************************************************************************************************/
/***/ ((module) => {

"use strict";
 // undocumented cb() API, needed for core, not for public API

function destroy(err, cb) {
  var _this = this;

  var readableDestroyed = this._readableState && this._readableState.destroyed;
  var writableDestroyed = this._writableState && this._writableState.destroyed;

  if (readableDestroyed || writableDestroyed) {
    if (cb) {
      cb(err);
    } else if (err) {
      if (!this._writableState) {
        process.nextTick(emitErrorNT, this, err);
      } else if (!this._writableState.errorEmitted) {
        this._writableState.errorEmitted = true;
        process.nextTick(emitErrorNT, this, err);
      }
    }

    return this;
  } // we set destroyed to true before firing error callbacks in order
  // to make it re-entrance safe in case destroy() is called within callbacks


  if (this._readableState) {
    this._readableState.destroyed = true;
  } // if this is a duplex stream mark the writable part as destroyed as well


  if (this._writableState) {
    this._writableState.destroyed = true;
  }

  this._destroy(err || null, function (err) {
    if (!cb && err) {
      if (!_this._writableState) {
        process.nextTick(emitErrorAndCloseNT, _this, err);
      } else if (!_this._writableState.errorEmitted) {
        _this._writableState.errorEmitted = true;
        process.nextTick(emitErrorAndCloseNT, _this, err);
      } else {
        process.nextTick(emitCloseNT, _this);
      }
    } else if (cb) {
      process.nextTick(emitCloseNT, _this);
      cb(err);
    } else {
      process.nextTick(emitCloseNT, _this);
    }
  });

  return this;
}

function emitErrorAndCloseNT(self, err) {
  emitErrorNT(self, err);
  emitCloseNT(self);
}

function emitCloseNT(self) {
  if (self._writableState && !self._writableState.emitClose) return;
  if (self._readableState && !self._readableState.emitClose) return;
  self.emit('close');
}

function undestroy() {
  if (this._readableState) {
    this._readableState.destroyed = false;
    this._readableState.reading = false;
    this._readableState.ended = false;
    this._readableState.endEmitted = false;
  }

  if (this._writableState) {
    this._writableState.destroyed = false;
    this._writableState.ended = false;
    this._writableState.ending = false;
    this._writableState.finalCalled = false;
    this._writableState.prefinished = false;
    this._writableState.finished = false;
    this._writableState.errorEmitted = false;
  }
}

function emitErrorNT(self, err) {
  self.emit('error', err);
}

function errorOrDestroy(stream, err) {
  // We have tests that rely on errors being emitted
  // in the same tick, so changing this is semver major.
  // For now when you opt-in to autoDestroy we allow
  // the error to be emitted nextTick. In a future
  // semver major update we should change the default to this.
  var rState = stream._readableState;
  var wState = stream._writableState;
  if (rState && rState.autoDestroy || wState && wState.autoDestroy) stream.destroy(err);else stream.emit('error', err);
}

module.exports = {
  destroy: destroy,
  undestroy: undestroy,
  errorOrDestroy: errorOrDestroy
};

/***/ }),

/***/ "./node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/end-of-stream.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/end-of-stream.js ***!
  \*********************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
// Ported from https://github.com/mafintosh/end-of-stream with
// permission from the author, Mathias Buus (@mafintosh).


var ERR_STREAM_PREMATURE_CLOSE = __webpack_require__(/*! ../../../errors */ "./node_modules/browserify-sign/node_modules/readable-stream/errors-browser.js").codes.ERR_STREAM_PREMATURE_CLOSE;

function once(callback) {
  var called = false;
  return function () {
    if (called) return;
    called = true;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    callback.apply(this, args);
  };
}

function noop() {}

function isRequest(stream) {
  return stream.setHeader && typeof stream.abort === 'function';
}

function eos(stream, opts, callback) {
  if (typeof opts === 'function') return eos(stream, null, opts);
  if (!opts) opts = {};
  callback = once(callback || noop);
  var readable = opts.readable || opts.readable !== false && stream.readable;
  var writable = opts.writable || opts.writable !== false && stream.writable;

  var onlegacyfinish = function onlegacyfinish() {
    if (!stream.writable) onfinish();
  };

  var writableEnded = stream._writableState && stream._writableState.finished;

  var onfinish = function onfinish() {
    writable = false;
    writableEnded = true;
    if (!readable) callback.call(stream);
  };

  var readableEnded = stream._readableState && stream._readableState.endEmitted;

  var onend = function onend() {
    readable = false;
    readableEnded = true;
    if (!writable) callback.call(stream);
  };

  var onerror = function onerror(err) {
    callback.call(stream, err);
  };

  var onclose = function onclose() {
    var err;

    if (readable && !readableEnded) {
      if (!stream._readableState || !stream._readableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();
      return callback.call(stream, err);
    }

    if (writable && !writableEnded) {
      if (!stream._writableState || !stream._writableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();
      return callback.call(stream, err);
    }
  };

  var onrequest = function onrequest() {
    stream.req.on('finish', onfinish);
  };

  if (isRequest(stream)) {
    stream.on('complete', onfinish);
    stream.on('abort', onclose);
    if (stream.req) onrequest();else stream.on('request', onrequest);
  } else if (writable && !stream._writableState) {
    // legacy streams
    stream.on('end', onlegacyfinish);
    stream.on('close', onlegacyfinish);
  }

  stream.on('end', onend);
  stream.on('finish', onfinish);
  if (opts.error !== false) stream.on('error', onerror);
  stream.on('close', onclose);
  return function () {
    stream.removeListener('complete', onfinish);
    stream.removeListener('abort', onclose);
    stream.removeListener('request', onrequest);
    if (stream.req) stream.req.removeListener('finish', onfinish);
    stream.removeListener('end', onlegacyfinish);
    stream.removeListener('close', onlegacyfinish);
    stream.removeListener('finish', onfinish);
    stream.removeListener('end', onend);
    stream.removeListener('error', onerror);
    stream.removeListener('close', onclose);
  };
}

module.exports = eos;

/***/ }),

/***/ "./node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/from-browser.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/from-browser.js ***!
  \********************************************************************************************************/
/***/ ((module) => {

module.exports = function () {
  throw new Error('Readable.from is not available in the browser')
};


/***/ }),

/***/ "./node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/pipeline.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/pipeline.js ***!
  \****************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
// Ported from https://github.com/mafintosh/pump with
// permission from the author, Mathias Buus (@mafintosh).


var eos;

function once(callback) {
  var called = false;
  return function () {
    if (called) return;
    called = true;
    callback.apply(void 0, arguments);
  };
}

var _require$codes = __webpack_require__(/*! ../../../errors */ "./node_modules/browserify-sign/node_modules/readable-stream/errors-browser.js").codes,
    ERR_MISSING_ARGS = _require$codes.ERR_MISSING_ARGS,
    ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED;

function noop(err) {
  // Rethrow the error if it exists to avoid swallowing it
  if (err) throw err;
}

function isRequest(stream) {
  return stream.setHeader && typeof stream.abort === 'function';
}

function destroyer(stream, reading, writing, callback) {
  callback = once(callback);
  var closed = false;
  stream.on('close', function () {
    closed = true;
  });
  if (eos === undefined) eos = __webpack_require__(/*! ./end-of-stream */ "./node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/end-of-stream.js");
  eos(stream, {
    readable: reading,
    writable: writing
  }, function (err) {
    if (err) return callback(err);
    closed = true;
    callback();
  });
  var destroyed = false;
  return function (err) {
    if (closed) return;
    if (destroyed) return;
    destroyed = true; // request.destroy just do .end - .abort is what we want

    if (isRequest(stream)) return stream.abort();
    if (typeof stream.destroy === 'function') return stream.destroy();
    callback(err || new ERR_STREAM_DESTROYED('pipe'));
  };
}

function call(fn) {
  fn();
}

function pipe(from, to) {
  return from.pipe(to);
}

function popCallback(streams) {
  if (!streams.length) return noop;
  if (typeof streams[streams.length - 1] !== 'function') return noop;
  return streams.pop();
}

function pipeline() {
  for (var _len = arguments.length, streams = new Array(_len), _key = 0; _key < _len; _key++) {
    streams[_key] = arguments[_key];
  }

  var callback = popCallback(streams);
  if (Array.isArray(streams[0])) streams = streams[0];

  if (streams.length < 2) {
    throw new ERR_MISSING_ARGS('streams');
  }

  var error;
  var destroys = streams.map(function (stream, i) {
    var reading = i < streams.length - 1;
    var writing = i > 0;
    return destroyer(stream, reading, writing, function (err) {
      if (!error) error = err;
      if (err) destroys.forEach(call);
      if (reading) return;
      destroys.forEach(call);
      callback(error);
    });
  });
  return streams.reduce(pipe);
}

module.exports = pipeline;

/***/ }),

/***/ "./node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/state.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/state.js ***!
  \*************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var ERR_INVALID_OPT_VALUE = __webpack_require__(/*! ../../../errors */ "./node_modules/browserify-sign/node_modules/readable-stream/errors-browser.js").codes.ERR_INVALID_OPT_VALUE;

function highWaterMarkFrom(options, isDuplex, duplexKey) {
  return options.highWaterMark != null ? options.highWaterMark : isDuplex ? options[duplexKey] : null;
}

function getHighWaterMark(state, options, duplexKey, isDuplex) {
  var hwm = highWaterMarkFrom(options, isDuplex, duplexKey);

  if (hwm != null) {
    if (!(isFinite(hwm) && Math.floor(hwm) === hwm) || hwm < 0) {
      var name = isDuplex ? duplexKey : 'highWaterMark';
      throw new ERR_INVALID_OPT_VALUE(name, hwm);
    }

    return Math.floor(hwm);
  } // Default value


  return state.objectMode ? 16 : 16 * 1024;
}

module.exports = {
  getHighWaterMark: getHighWaterMark
};

/***/ }),

/***/ "./node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/stream-browser.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/stream-browser.js ***!
  \**********************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports = __webpack_require__(/*! events */ "./node_modules/events/events.js").EventEmitter;


/***/ }),

/***/ "./node_modules/browserify-sign/node_modules/readable-stream/readable-browser.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/browserify-sign/node_modules/readable-stream/readable-browser.js ***!
  \***************************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

exports = module.exports = __webpack_require__(/*! ./lib/_stream_readable.js */ "./node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_readable.js");
exports.Stream = exports;
exports.Readable = exports;
exports.Writable = __webpack_require__(/*! ./lib/_stream_writable.js */ "./node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_writable.js");
exports.Duplex = __webpack_require__(/*! ./lib/_stream_duplex.js */ "./node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_duplex.js");
exports.Transform = __webpack_require__(/*! ./lib/_stream_transform.js */ "./node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_transform.js");
exports.PassThrough = __webpack_require__(/*! ./lib/_stream_passthrough.js */ "./node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_passthrough.js");
exports.finished = __webpack_require__(/*! ./lib/internal/streams/end-of-stream.js */ "./node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/end-of-stream.js");
exports.pipeline = __webpack_require__(/*! ./lib/internal/streams/pipeline.js */ "./node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/pipeline.js");


/***/ }),

/***/ "./node_modules/browserify-sign/node_modules/string_decoder/lib/string_decoder.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/browserify-sign/node_modules/string_decoder/lib/string_decoder.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.



/*<replacement>*/

var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer;
/*</replacement>*/

var isEncoding = Buffer.isEncoding || function (encoding) {
  encoding = '' + encoding;
  switch (encoding && encoding.toLowerCase()) {
    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':
      return true;
    default:
      return false;
  }
};

function _normalizeEncoding(enc) {
  if (!enc) return 'utf8';
  var retried;
  while (true) {
    switch (enc) {
      case 'utf8':
      case 'utf-8':
        return 'utf8';
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return 'utf16le';
      case 'latin1':
      case 'binary':
        return 'latin1';
      case 'base64':
      case 'ascii':
      case 'hex':
        return enc;
      default:
        if (retried) return; // undefined
        enc = ('' + enc).toLowerCase();
        retried = true;
    }
  }
};

// Do not cache `Buffer.isEncoding` when checking encoding names as some
// modules monkey-patch it to support additional encodings
function normalizeEncoding(enc) {
  var nenc = _normalizeEncoding(enc);
  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);
  return nenc || enc;
}

// StringDecoder provides an interface for efficiently splitting a series of
// buffers into a series of JS strings without breaking apart multi-byte
// characters.
exports.StringDecoder = StringDecoder;
function StringDecoder(encoding) {
  this.encoding = normalizeEncoding(encoding);
  var nb;
  switch (this.encoding) {
    case 'utf16le':
      this.text = utf16Text;
      this.end = utf16End;
      nb = 4;
      break;
    case 'utf8':
      this.fillLast = utf8FillLast;
      nb = 4;
      break;
    case 'base64':
      this.text = base64Text;
      this.end = base64End;
      nb = 3;
      break;
    default:
      this.write = simpleWrite;
      this.end = simpleEnd;
      return;
  }
  this.lastNeed = 0;
  this.lastTotal = 0;
  this.lastChar = Buffer.allocUnsafe(nb);
}

StringDecoder.prototype.write = function (buf) {
  if (buf.length === 0) return '';
  var r;
  var i;
  if (this.lastNeed) {
    r = this.fillLast(buf);
    if (r === undefined) return '';
    i = this.lastNeed;
    this.lastNeed = 0;
  } else {
    i = 0;
  }
  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);
  return r || '';
};

StringDecoder.prototype.end = utf8End;

// Returns only complete characters in a Buffer
StringDecoder.prototype.text = utf8Text;

// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer
StringDecoder.prototype.fillLast = function (buf) {
  if (this.lastNeed <= buf.length) {
    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);
    return this.lastChar.toString(this.encoding, 0, this.lastTotal);
  }
  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);
  this.lastNeed -= buf.length;
};

// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a
// continuation byte. If an invalid byte is detected, -2 is returned.
function utf8CheckByte(byte) {
  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;
  return byte >> 6 === 0x02 ? -1 : -2;
}

// Checks at most 3 bytes at the end of a Buffer in order to detect an
// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)
// needed to complete the UTF-8 character (if applicable) are returned.
function utf8CheckIncomplete(self, buf, i) {
  var j = buf.length - 1;
  if (j < i) return 0;
  var nb = utf8CheckByte(buf[j]);
  if (nb >= 0) {
    if (nb > 0) self.lastNeed = nb - 1;
    return nb;
  }
  if (--j < i || nb === -2) return 0;
  nb = utf8CheckByte(buf[j]);
  if (nb >= 0) {
    if (nb > 0) self.lastNeed = nb - 2;
    return nb;
  }
  if (--j < i || nb === -2) return 0;
  nb = utf8CheckByte(buf[j]);
  if (nb >= 0) {
    if (nb > 0) {
      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;
    }
    return nb;
  }
  return 0;
}

// Validates as many continuation bytes for a multi-byte UTF-8 character as
// needed or are available. If we see a non-continuation byte where we expect
// one, we "replace" the validated continuation bytes we've seen so far with
// a single UTF-8 replacement character ('\ufffd'), to match v8's UTF-8 decoding
// behavior. The continuation byte check is included three times in the case
// where all of the continuation bytes for a character exist in the same buffer.
// It is also done this way as a slight performance increase instead of using a
// loop.
function utf8CheckExtraBytes(self, buf, p) {
  if ((buf[0] & 0xC0) !== 0x80) {
    self.lastNeed = 0;
    return '\ufffd';
  }
  if (self.lastNeed > 1 && buf.length > 1) {
    if ((buf[1] & 0xC0) !== 0x80) {
      self.lastNeed = 1;
      return '\ufffd';
    }
    if (self.lastNeed > 2 && buf.length > 2) {
      if ((buf[2] & 0xC0) !== 0x80) {
        self.lastNeed = 2;
        return '\ufffd';
      }
    }
  }
}

// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.
function utf8FillLast(buf) {
  var p = this.lastTotal - this.lastNeed;
  var r = utf8CheckExtraBytes(this, buf, p);
  if (r !== undefined) return r;
  if (this.lastNeed <= buf.length) {
    buf.copy(this.lastChar, p, 0, this.lastNeed);
    return this.lastChar.toString(this.encoding, 0, this.lastTotal);
  }
  buf.copy(this.lastChar, p, 0, buf.length);
  this.lastNeed -= buf.length;
}

// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a
// partial character, the character's bytes are buffered until the required
// number of bytes are available.
function utf8Text(buf, i) {
  var total = utf8CheckIncomplete(this, buf, i);
  if (!this.lastNeed) return buf.toString('utf8', i);
  this.lastTotal = total;
  var end = buf.length - (total - this.lastNeed);
  buf.copy(this.lastChar, 0, end);
  return buf.toString('utf8', i, end);
}

// For UTF-8, a replacement character is added when ending on a partial
// character.
function utf8End(buf) {
  var r = buf && buf.length ? this.write(buf) : '';
  if (this.lastNeed) return r + '\ufffd';
  return r;
}

// UTF-16LE typically needs two bytes per character, but even if we have an even
// number of bytes available, we need to check if we end on a leading/high
// surrogate. In that case, we need to wait for the next two bytes in order to
// decode the last character properly.
function utf16Text(buf, i) {
  if ((buf.length - i) % 2 === 0) {
    var r = buf.toString('utf16le', i);
    if (r) {
      var c = r.charCodeAt(r.length - 1);
      if (c >= 0xD800 && c <= 0xDBFF) {
        this.lastNeed = 2;
        this.lastTotal = 4;
        this.lastChar[0] = buf[buf.length - 2];
        this.lastChar[1] = buf[buf.length - 1];
        return r.slice(0, -1);
      }
    }
    return r;
  }
  this.lastNeed = 1;
  this.lastTotal = 2;
  this.lastChar[0] = buf[buf.length - 1];
  return buf.toString('utf16le', i, buf.length - 1);
}

// For UTF-16LE we do not explicitly append special replacement characters if we
// end on a partial character, we simply let v8 handle that.
function utf16End(buf) {
  var r = buf && buf.length ? this.write(buf) : '';
  if (this.lastNeed) {
    var end = this.lastTotal - this.lastNeed;
    return r + this.lastChar.toString('utf16le', 0, end);
  }
  return r;
}

function base64Text(buf, i) {
  var n = (buf.length - i) % 3;
  if (n === 0) return buf.toString('base64', i);
  this.lastNeed = 3 - n;
  this.lastTotal = 3;
  if (n === 1) {
    this.lastChar[0] = buf[buf.length - 1];
  } else {
    this.lastChar[0] = buf[buf.length - 2];
    this.lastChar[1] = buf[buf.length - 1];
  }
  return buf.toString('base64', i, buf.length - n);
}

function base64End(buf) {
  var r = buf && buf.length ? this.write(buf) : '';
  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);
  return r;
}

// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)
function simpleWrite(buf) {
  return buf.toString(this.encoding);
}

function simpleEnd(buf) {
  return buf && buf.length ? this.write(buf) : '';
}

/***/ }),

/***/ "./node_modules/buffer-xor/index.js":
/*!******************************************!*\
  !*** ./node_modules/buffer-xor/index.js ***!
  \******************************************/
/***/ ((module) => {

module.exports = function xor (a, b) {
  var length = Math.min(a.length, b.length)
  var buffer = new Buffer(length)

  for (var i = 0; i < length; ++i) {
    buffer[i] = a[i] ^ b[i]
  }

  return buffer
}


/***/ }),

/***/ "./node_modules/buffer/index.js":
/*!**************************************!*\
  !*** ./node_modules/buffer/index.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */
/* eslint-disable no-proto */



var base64 = __webpack_require__(/*! base64-js */ "./node_modules/base64-js/index.js")
var ieee754 = __webpack_require__(/*! ieee754 */ "./node_modules/ieee754/index.js")
var customInspectSymbol =
  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation
    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation
    : null

exports.Buffer = Buffer
exports.SlowBuffer = SlowBuffer
exports.INSPECT_MAX_BYTES = 50

var K_MAX_LENGTH = 0x7fffffff
exports.kMaxLength = K_MAX_LENGTH

/**
 * If `Buffer.TYPED_ARRAY_SUPPORT`:
 *   === true    Use Uint8Array implementation (fastest)
 *   === false   Print warning and recommend using `buffer` v4.x which has an Object
 *               implementation (most compatible, even IE6)
 *
 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
 * Opera 11.6+, iOS 4.2+.
 *
 * We report that the browser does not support typed arrays if the are not subclassable
 * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`
 * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support
 * for __proto__ and has a buggy typed array implementation.
 */
Buffer.TYPED_ARRAY_SUPPORT = typedArraySupport()

if (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&
    typeof console.error === 'function') {
  console.error(
    'This browser lacks typed array (Uint8Array) support which is required by ' +
    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'
  )
}

function typedArraySupport () {
  // Can typed array instances can be augmented?
  try {
    var arr = new Uint8Array(1)
    var proto = { foo: function () { return 42 } }
    Object.setPrototypeOf(proto, Uint8Array.prototype)
    Object.setPrototypeOf(arr, proto)
    return arr.foo() === 42
  } catch (e) {
    return false
  }
}

Object.defineProperty(Buffer.prototype, 'parent', {
  enumerable: true,
  get: function () {
    if (!Buffer.isBuffer(this)) return undefined
    return this.buffer
  }
})

Object.defineProperty(Buffer.prototype, 'offset', {
  enumerable: true,
  get: function () {
    if (!Buffer.isBuffer(this)) return undefined
    return this.byteOffset
  }
})

function createBuffer (length) {
  if (length > K_MAX_LENGTH) {
    throw new RangeError('The value "' + length + '" is invalid for option "size"')
  }
  // Return an augmented `Uint8Array` instance
  var buf = new Uint8Array(length)
  Object.setPrototypeOf(buf, Buffer.prototype)
  return buf
}

/**
 * The Buffer constructor returns instances of `Uint8Array` that have their
 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
 * returns a single octet.
 *
 * The `Uint8Array` prototype remains unmodified.
 */

function Buffer (arg, encodingOrOffset, length) {
  // Common case.
  if (typeof arg === 'number') {
    if (typeof encodingOrOffset === 'string') {
      throw new TypeError(
        'The "string" argument must be of type string. Received type number'
      )
    }
    return allocUnsafe(arg)
  }
  return from(arg, encodingOrOffset, length)
}

Buffer.poolSize = 8192 // not used by this implementation

function from (value, encodingOrOffset, length) {
  if (typeof value === 'string') {
    return fromString(value, encodingOrOffset)
  }

  if (ArrayBuffer.isView(value)) {
    return fromArrayView(value)
  }

  if (value == null) {
    throw new TypeError(
      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +
      'or Array-like Object. Received type ' + (typeof value)
    )
  }

  if (isInstance(value, ArrayBuffer) ||
      (value && isInstance(value.buffer, ArrayBuffer))) {
    return fromArrayBuffer(value, encodingOrOffset, length)
  }

  if (typeof SharedArrayBuffer !== 'undefined' &&
      (isInstance(value, SharedArrayBuffer) ||
      (value && isInstance(value.buffer, SharedArrayBuffer)))) {
    return fromArrayBuffer(value, encodingOrOffset, length)
  }

  if (typeof value === 'number') {
    throw new TypeError(
      'The "value" argument must not be of type number. Received type number'
    )
  }

  var valueOf = value.valueOf && value.valueOf()
  if (valueOf != null && valueOf !== value) {
    return Buffer.from(valueOf, encodingOrOffset, length)
  }

  var b = fromObject(value)
  if (b) return b

  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&
      typeof value[Symbol.toPrimitive] === 'function') {
    return Buffer.from(
      value[Symbol.toPrimitive]('string'), encodingOrOffset, length
    )
  }

  throw new TypeError(
    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +
    'or Array-like Object. Received type ' + (typeof value)
  )
}

/**
 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
 * if value is a number.
 * Buffer.from(str[, encoding])
 * Buffer.from(array)
 * Buffer.from(buffer)
 * Buffer.from(arrayBuffer[, byteOffset[, length]])
 **/
Buffer.from = function (value, encodingOrOffset, length) {
  return from(value, encodingOrOffset, length)
}

// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:
// https://github.com/feross/buffer/pull/148
Object.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)
Object.setPrototypeOf(Buffer, Uint8Array)

function assertSize (size) {
  if (typeof size !== 'number') {
    throw new TypeError('"size" argument must be of type number')
  } else if (size < 0) {
    throw new RangeError('The value "' + size + '" is invalid for option "size"')
  }
}

function alloc (size, fill, encoding) {
  assertSize(size)
  if (size <= 0) {
    return createBuffer(size)
  }
  if (fill !== undefined) {
    // Only pay attention to encoding if it's a string. This
    // prevents accidentally sending in a number that would
    // be interpreted as a start offset.
    return typeof encoding === 'string'
      ? createBuffer(size).fill(fill, encoding)
      : createBuffer(size).fill(fill)
  }
  return createBuffer(size)
}

/**
 * Creates a new filled Buffer instance.
 * alloc(size[, fill[, encoding]])
 **/
Buffer.alloc = function (size, fill, encoding) {
  return alloc(size, fill, encoding)
}

function allocUnsafe (size) {
  assertSize(size)
  return createBuffer(size < 0 ? 0 : checked(size) | 0)
}

/**
 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
 * */
Buffer.allocUnsafe = function (size) {
  return allocUnsafe(size)
}
/**
 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
 */
Buffer.allocUnsafeSlow = function (size) {
  return allocUnsafe(size)
}

function fromString (string, encoding) {
  if (typeof encoding !== 'string' || encoding === '') {
    encoding = 'utf8'
  }

  if (!Buffer.isEncoding(encoding)) {
    throw new TypeError('Unknown encoding: ' + encoding)
  }

  var length = byteLength(string, encoding) | 0
  var buf = createBuffer(length)

  var actual = buf.write(string, encoding)

  if (actual !== length) {
    // Writing a hex string, for example, that contains invalid characters will
    // cause everything after the first invalid character to be ignored. (e.g.
    // 'abxxcd' will be treated as 'ab')
    buf = buf.slice(0, actual)
  }

  return buf
}

function fromArrayLike (array) {
  var length = array.length < 0 ? 0 : checked(array.length) | 0
  var buf = createBuffer(length)
  for (var i = 0; i < length; i += 1) {
    buf[i] = array[i] & 255
  }
  return buf
}

function fromArrayView (arrayView) {
  if (isInstance(arrayView, Uint8Array)) {
    var copy = new Uint8Array(arrayView)
    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)
  }
  return fromArrayLike(arrayView)
}

function fromArrayBuffer (array, byteOffset, length) {
  if (byteOffset < 0 || array.byteLength < byteOffset) {
    throw new RangeError('"offset" is outside of buffer bounds')
  }

  if (array.byteLength < byteOffset + (length || 0)) {
    throw new RangeError('"length" is outside of buffer bounds')
  }

  var buf
  if (byteOffset === undefined && length === undefined) {
    buf = new Uint8Array(array)
  } else if (length === undefined) {
    buf = new Uint8Array(array, byteOffset)
  } else {
    buf = new Uint8Array(array, byteOffset, length)
  }

  // Return an augmented `Uint8Array` instance
  Object.setPrototypeOf(buf, Buffer.prototype)

  return buf
}

function fromObject (obj) {
  if (Buffer.isBuffer(obj)) {
    var len = checked(obj.length) | 0
    var buf = createBuffer(len)

    if (buf.length === 0) {
      return buf
    }

    obj.copy(buf, 0, 0, len)
    return buf
  }

  if (obj.length !== undefined) {
    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {
      return createBuffer(0)
    }
    return fromArrayLike(obj)
  }

  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {
    return fromArrayLike(obj.data)
  }
}

function checked (length) {
  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when
  // length is NaN (which is otherwise coerced to zero.)
  if (length >= K_MAX_LENGTH) {
    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +
                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')
  }
  return length | 0
}

function SlowBuffer (length) {
  if (+length != length) { // eslint-disable-line eqeqeq
    length = 0
  }
  return Buffer.alloc(+length)
}

Buffer.isBuffer = function isBuffer (b) {
  return b != null && b._isBuffer === true &&
    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false
}

Buffer.compare = function compare (a, b) {
  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)
  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)
  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
    throw new TypeError(
      'The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array'
    )
  }

  if (a === b) return 0

  var x = a.length
  var y = b.length

  for (var i = 0, len = Math.min(x, y); i < len; ++i) {
    if (a[i] !== b[i]) {
      x = a[i]
      y = b[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

Buffer.isEncoding = function isEncoding (encoding) {
  switch (String(encoding).toLowerCase()) {
    case 'hex':
    case 'utf8':
    case 'utf-8':
    case 'ascii':
    case 'latin1':
    case 'binary':
    case 'base64':
    case 'ucs2':
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      return true
    default:
      return false
  }
}

Buffer.concat = function concat (list, length) {
  if (!Array.isArray(list)) {
    throw new TypeError('"list" argument must be an Array of Buffers')
  }

  if (list.length === 0) {
    return Buffer.alloc(0)
  }

  var i
  if (length === undefined) {
    length = 0
    for (i = 0; i < list.length; ++i) {
      length += list[i].length
    }
  }

  var buffer = Buffer.allocUnsafe(length)
  var pos = 0
  for (i = 0; i < list.length; ++i) {
    var buf = list[i]
    if (isInstance(buf, Uint8Array)) {
      if (pos + buf.length > buffer.length) {
        Buffer.from(buf).copy(buffer, pos)
      } else {
        Uint8Array.prototype.set.call(
          buffer,
          buf,
          pos
        )
      }
    } else if (!Buffer.isBuffer(buf)) {
      throw new TypeError('"list" argument must be an Array of Buffers')
    } else {
      buf.copy(buffer, pos)
    }
    pos += buf.length
  }
  return buffer
}

function byteLength (string, encoding) {
  if (Buffer.isBuffer(string)) {
    return string.length
  }
  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {
    return string.byteLength
  }
  if (typeof string !== 'string') {
    throw new TypeError(
      'The "string" argument must be one of type string, Buffer, or ArrayBuffer. ' +
      'Received type ' + typeof string
    )
  }

  var len = string.length
  var mustMatch = (arguments.length > 2 && arguments[2] === true)
  if (!mustMatch && len === 0) return 0

  // Use a for loop to avoid recursion
  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'ascii':
      case 'latin1':
      case 'binary':
        return len
      case 'utf8':
      case 'utf-8':
        return utf8ToBytes(string).length
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return len * 2
      case 'hex':
        return len >>> 1
      case 'base64':
        return base64ToBytes(string).length
      default:
        if (loweredCase) {
          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8
        }
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}
Buffer.byteLength = byteLength

function slowToString (encoding, start, end) {
  var loweredCase = false

  // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
  // property of a typed array.

  // This behaves neither like String nor Uint8Array in that we set start/end
  // to their upper/lower bounds if the value passed is out of range.
  // undefined is handled specially as per ECMA-262 6th Edition,
  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
  if (start === undefined || start < 0) {
    start = 0
  }
  // Return early if start > this.length. Done here to prevent potential uint32
  // coercion fail below.
  if (start > this.length) {
    return ''
  }

  if (end === undefined || end > this.length) {
    end = this.length
  }

  if (end <= 0) {
    return ''
  }

  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.
  end >>>= 0
  start >>>= 0

  if (end <= start) {
    return ''
  }

  if (!encoding) encoding = 'utf8'

  while (true) {
    switch (encoding) {
      case 'hex':
        return hexSlice(this, start, end)

      case 'utf8':
      case 'utf-8':
        return utf8Slice(this, start, end)

      case 'ascii':
        return asciiSlice(this, start, end)

      case 'latin1':
      case 'binary':
        return latin1Slice(this, start, end)

      case 'base64':
        return base64Slice(this, start, end)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return utf16leSlice(this, start, end)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = (encoding + '').toLowerCase()
        loweredCase = true
    }
  }
}

// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)
// to detect a Buffer instance. It's not possible to use `instanceof Buffer`
// reliably in a browserify context because there could be multiple different
// copies of the 'buffer' package in use. This method works even for Buffer
// instances that were created from another copy of the `buffer` package.
// See: https://github.com/feross/buffer/issues/154
Buffer.prototype._isBuffer = true

function swap (b, n, m) {
  var i = b[n]
  b[n] = b[m]
  b[m] = i
}

Buffer.prototype.swap16 = function swap16 () {
  var len = this.length
  if (len % 2 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 16-bits')
  }
  for (var i = 0; i < len; i += 2) {
    swap(this, i, i + 1)
  }
  return this
}

Buffer.prototype.swap32 = function swap32 () {
  var len = this.length
  if (len % 4 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 32-bits')
  }
  for (var i = 0; i < len; i += 4) {
    swap(this, i, i + 3)
    swap(this, i + 1, i + 2)
  }
  return this
}

Buffer.prototype.swap64 = function swap64 () {
  var len = this.length
  if (len % 8 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 64-bits')
  }
  for (var i = 0; i < len; i += 8) {
    swap(this, i, i + 7)
    swap(this, i + 1, i + 6)
    swap(this, i + 2, i + 5)
    swap(this, i + 3, i + 4)
  }
  return this
}

Buffer.prototype.toString = function toString () {
  var length = this.length
  if (length === 0) return ''
  if (arguments.length === 0) return utf8Slice(this, 0, length)
  return slowToString.apply(this, arguments)
}

Buffer.prototype.toLocaleString = Buffer.prototype.toString

Buffer.prototype.equals = function equals (b) {
  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
  if (this === b) return true
  return Buffer.compare(this, b) === 0
}

Buffer.prototype.inspect = function inspect () {
  var str = ''
  var max = exports.INSPECT_MAX_BYTES
  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()
  if (this.length > max) str += ' ... '
  return '<Buffer ' + str + '>'
}
if (customInspectSymbol) {
  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect
}

Buffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {
  if (isInstance(target, Uint8Array)) {
    target = Buffer.from(target, target.offset, target.byteLength)
  }
  if (!Buffer.isBuffer(target)) {
    throw new TypeError(
      'The "target" argument must be one of type Buffer or Uint8Array. ' +
      'Received type ' + (typeof target)
    )
  }

  if (start === undefined) {
    start = 0
  }
  if (end === undefined) {
    end = target ? target.length : 0
  }
  if (thisStart === undefined) {
    thisStart = 0
  }
  if (thisEnd === undefined) {
    thisEnd = this.length
  }

  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
    throw new RangeError('out of range index')
  }

  if (thisStart >= thisEnd && start >= end) {
    return 0
  }
  if (thisStart >= thisEnd) {
    return -1
  }
  if (start >= end) {
    return 1
  }

  start >>>= 0
  end >>>= 0
  thisStart >>>= 0
  thisEnd >>>= 0

  if (this === target) return 0

  var x = thisEnd - thisStart
  var y = end - start
  var len = Math.min(x, y)

  var thisCopy = this.slice(thisStart, thisEnd)
  var targetCopy = target.slice(start, end)

  for (var i = 0; i < len; ++i) {
    if (thisCopy[i] !== targetCopy[i]) {
      x = thisCopy[i]
      y = targetCopy[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
// OR the last index of `val` in `buffer` at offset <= `byteOffset`.
//
// Arguments:
// - buffer - a Buffer to search
// - val - a string, Buffer, or number
// - byteOffset - an index into `buffer`; will be clamped to an int32
// - encoding - an optional encoding, relevant is val is a string
// - dir - true for indexOf, false for lastIndexOf
function bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {
  // Empty buffer means no match
  if (buffer.length === 0) return -1

  // Normalize byteOffset
  if (typeof byteOffset === 'string') {
    encoding = byteOffset
    byteOffset = 0
  } else if (byteOffset > 0x7fffffff) {
    byteOffset = 0x7fffffff
  } else if (byteOffset < -0x80000000) {
    byteOffset = -0x80000000
  }
  byteOffset = +byteOffset // Coerce to Number.
  if (numberIsNaN(byteOffset)) {
    // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
    byteOffset = dir ? 0 : (buffer.length - 1)
  }

  // Normalize byteOffset: negative offsets start from the end of the buffer
  if (byteOffset < 0) byteOffset = buffer.length + byteOffset
  if (byteOffset >= buffer.length) {
    if (dir) return -1
    else byteOffset = buffer.length - 1
  } else if (byteOffset < 0) {
    if (dir) byteOffset = 0
    else return -1
  }

  // Normalize val
  if (typeof val === 'string') {
    val = Buffer.from(val, encoding)
  }

  // Finally, search either indexOf (if dir is true) or lastIndexOf
  if (Buffer.isBuffer(val)) {
    // Special case: looking for empty string/buffer always fails
    if (val.length === 0) {
      return -1
    }
    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)
  } else if (typeof val === 'number') {
    val = val & 0xFF // Search for a byte value [0-255]
    if (typeof Uint8Array.prototype.indexOf === 'function') {
      if (dir) {
        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)
      } else {
        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)
      }
    }
    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)
  }

  throw new TypeError('val must be string, number or Buffer')
}

function arrayIndexOf (arr, val, byteOffset, encoding, dir) {
  var indexSize = 1
  var arrLength = arr.length
  var valLength = val.length

  if (encoding !== undefined) {
    encoding = String(encoding).toLowerCase()
    if (encoding === 'ucs2' || encoding === 'ucs-2' ||
        encoding === 'utf16le' || encoding === 'utf-16le') {
      if (arr.length < 2 || val.length < 2) {
        return -1
      }
      indexSize = 2
      arrLength /= 2
      valLength /= 2
      byteOffset /= 2
    }
  }

  function read (buf, i) {
    if (indexSize === 1) {
      return buf[i]
    } else {
      return buf.readUInt16BE(i * indexSize)
    }
  }

  var i
  if (dir) {
    var foundIndex = -1
    for (i = byteOffset; i < arrLength; i++) {
      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
        if (foundIndex === -1) foundIndex = i
        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize
      } else {
        if (foundIndex !== -1) i -= i - foundIndex
        foundIndex = -1
      }
    }
  } else {
    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength
    for (i = byteOffset; i >= 0; i--) {
      var found = true
      for (var j = 0; j < valLength; j++) {
        if (read(arr, i + j) !== read(val, j)) {
          found = false
          break
        }
      }
      if (found) return i
    }
  }

  return -1
}

Buffer.prototype.includes = function includes (val, byteOffset, encoding) {
  return this.indexOf(val, byteOffset, encoding) !== -1
}

Buffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)
}

Buffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)
}

function hexWrite (buf, string, offset, length) {
  offset = Number(offset) || 0
  var remaining = buf.length - offset
  if (!length) {
    length = remaining
  } else {
    length = Number(length)
    if (length > remaining) {
      length = remaining
    }
  }

  var strLen = string.length

  if (length > strLen / 2) {
    length = strLen / 2
  }
  for (var i = 0; i < length; ++i) {
    var parsed = parseInt(string.substr(i * 2, 2), 16)
    if (numberIsNaN(parsed)) return i
    buf[offset + i] = parsed
  }
  return i
}

function utf8Write (buf, string, offset, length) {
  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)
}

function asciiWrite (buf, string, offset, length) {
  return blitBuffer(asciiToBytes(string), buf, offset, length)
}

function base64Write (buf, string, offset, length) {
  return blitBuffer(base64ToBytes(string), buf, offset, length)
}

function ucs2Write (buf, string, offset, length) {
  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)
}

Buffer.prototype.write = function write (string, offset, length, encoding) {
  // Buffer#write(string)
  if (offset === undefined) {
    encoding = 'utf8'
    length = this.length
    offset = 0
  // Buffer#write(string, encoding)
  } else if (length === undefined && typeof offset === 'string') {
    encoding = offset
    length = this.length
    offset = 0
  // Buffer#write(string, offset[, length][, encoding])
  } else if (isFinite(offset)) {
    offset = offset >>> 0
    if (isFinite(length)) {
      length = length >>> 0
      if (encoding === undefined) encoding = 'utf8'
    } else {
      encoding = length
      length = undefined
    }
  } else {
    throw new Error(
      'Buffer.write(string, encoding, offset[, length]) is no longer supported'
    )
  }

  var remaining = this.length - offset
  if (length === undefined || length > remaining) length = remaining

  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
    throw new RangeError('Attempt to write outside buffer bounds')
  }

  if (!encoding) encoding = 'utf8'

  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'hex':
        return hexWrite(this, string, offset, length)

      case 'utf8':
      case 'utf-8':
        return utf8Write(this, string, offset, length)

      case 'ascii':
      case 'latin1':
      case 'binary':
        return asciiWrite(this, string, offset, length)

      case 'base64':
        // Warning: maxLength not taken into account in base64Write
        return base64Write(this, string, offset, length)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return ucs2Write(this, string, offset, length)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}

Buffer.prototype.toJSON = function toJSON () {
  return {
    type: 'Buffer',
    data: Array.prototype.slice.call(this._arr || this, 0)
  }
}

function base64Slice (buf, start, end) {
  if (start === 0 && end === buf.length) {
    return base64.fromByteArray(buf)
  } else {
    return base64.fromByteArray(buf.slice(start, end))
  }
}

function utf8Slice (buf, start, end) {
  end = Math.min(buf.length, end)
  var res = []

  var i = start
  while (i < end) {
    var firstByte = buf[i]
    var codePoint = null
    var bytesPerSequence = (firstByte > 0xEF)
      ? 4
      : (firstByte > 0xDF)
          ? 3
          : (firstByte > 0xBF)
              ? 2
              : 1

    if (i + bytesPerSequence <= end) {
      var secondByte, thirdByte, fourthByte, tempCodePoint

      switch (bytesPerSequence) {
        case 1:
          if (firstByte < 0x80) {
            codePoint = firstByte
          }
          break
        case 2:
          secondByte = buf[i + 1]
          if ((secondByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)
            if (tempCodePoint > 0x7F) {
              codePoint = tempCodePoint
            }
          }
          break
        case 3:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)
            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
              codePoint = tempCodePoint
            }
          }
          break
        case 4:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          fourthByte = buf[i + 3]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)
            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
              codePoint = tempCodePoint
            }
          }
      }
    }

    if (codePoint === null) {
      // we did not generate a valid codePoint so insert a
      // replacement char (U+FFFD) and advance only 1 byte
      codePoint = 0xFFFD
      bytesPerSequence = 1
    } else if (codePoint > 0xFFFF) {
      // encode to utf16 (surrogate pair dance)
      codePoint -= 0x10000
      res.push(codePoint >>> 10 & 0x3FF | 0xD800)
      codePoint = 0xDC00 | codePoint & 0x3FF
    }

    res.push(codePoint)
    i += bytesPerSequence
  }

  return decodeCodePointsArray(res)
}

// Based on http://stackoverflow.com/a/22747272/680742, the browser with
// the lowest limit is Chrome, with 0x10000 args.
// We go 1 magnitude less, for safety
var MAX_ARGUMENTS_LENGTH = 0x1000

function decodeCodePointsArray (codePoints) {
  var len = codePoints.length
  if (len <= MAX_ARGUMENTS_LENGTH) {
    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
  }

  // Decode in chunks to avoid "call stack size exceeded".
  var res = ''
  var i = 0
  while (i < len) {
    res += String.fromCharCode.apply(
      String,
      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)
    )
  }
  return res
}

function asciiSlice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i] & 0x7F)
  }
  return ret
}

function latin1Slice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i])
  }
  return ret
}

function hexSlice (buf, start, end) {
  var len = buf.length

  if (!start || start < 0) start = 0
  if (!end || end < 0 || end > len) end = len

  var out = ''
  for (var i = start; i < end; ++i) {
    out += hexSliceLookupTable[buf[i]]
  }
  return out
}

function utf16leSlice (buf, start, end) {
  var bytes = buf.slice(start, end)
  var res = ''
  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)
  for (var i = 0; i < bytes.length - 1; i += 2) {
    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))
  }
  return res
}

Buffer.prototype.slice = function slice (start, end) {
  var len = this.length
  start = ~~start
  end = end === undefined ? len : ~~end

  if (start < 0) {
    start += len
    if (start < 0) start = 0
  } else if (start > len) {
    start = len
  }

  if (end < 0) {
    end += len
    if (end < 0) end = 0
  } else if (end > len) {
    end = len
  }

  if (end < start) end = start

  var newBuf = this.subarray(start, end)
  // Return an augmented `Uint8Array` instance
  Object.setPrototypeOf(newBuf, Buffer.prototype)

  return newBuf
}

/*
 * Need to make sure that buffer isn't trying to write out of bounds.
 */
function checkOffset (offset, ext, length) {
  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')
  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')
}

Buffer.prototype.readUintLE =
Buffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }

  return val
}

Buffer.prototype.readUintBE =
Buffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) {
    checkOffset(offset, byteLength, this.length)
  }

  var val = this[offset + --byteLength]
  var mul = 1
  while (byteLength > 0 && (mul *= 0x100)) {
    val += this[offset + --byteLength] * mul
  }

  return val
}

Buffer.prototype.readUint8 =
Buffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 1, this.length)
  return this[offset]
}

Buffer.prototype.readUint16LE =
Buffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  return this[offset] | (this[offset + 1] << 8)
}

Buffer.prototype.readUint16BE =
Buffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  return (this[offset] << 8) | this[offset + 1]
}

Buffer.prototype.readUint32LE =
Buffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return ((this[offset]) |
      (this[offset + 1] << 8) |
      (this[offset + 2] << 16)) +
      (this[offset + 3] * 0x1000000)
}

Buffer.prototype.readUint32BE =
Buffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] * 0x1000000) +
    ((this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    this[offset + 3])
}

Buffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var i = byteLength
  var mul = 1
  var val = this[offset + --i]
  while (i > 0 && (mul *= 0x100)) {
    val += this[offset + --i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readInt8 = function readInt8 (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 1, this.length)
  if (!(this[offset] & 0x80)) return (this[offset])
  return ((0xff - this[offset] + 1) * -1)
}

Buffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset] | (this[offset + 1] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset + 1] | (this[offset] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset]) |
    (this[offset + 1] << 8) |
    (this[offset + 2] << 16) |
    (this[offset + 3] << 24)
}

Buffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] << 24) |
    (this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    (this[offset + 3])
}

Buffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, true, 23, 4)
}

Buffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, false, 23, 4)
}

Buffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, true, 52, 8)
}

Buffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, false, 52, 8)
}

function checkInt (buf, value, offset, ext, max, min) {
  if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance')
  if (value > max || value < min) throw new RangeError('"value" argument is out of bounds')
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
}

Buffer.prototype.writeUintLE =
Buffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var mul = 1
  var i = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUintBE =
Buffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var i = byteLength - 1
  var mul = 1
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUint8 =
Buffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeUint16LE =
Buffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  this[offset] = (value & 0xff)
  this[offset + 1] = (value >>> 8)
  return offset + 2
}

Buffer.prototype.writeUint16BE =
Buffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  this[offset] = (value >>> 8)
  this[offset + 1] = (value & 0xff)
  return offset + 2
}

Buffer.prototype.writeUint32LE =
Buffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  this[offset + 3] = (value >>> 24)
  this[offset + 2] = (value >>> 16)
  this[offset + 1] = (value >>> 8)
  this[offset] = (value & 0xff)
  return offset + 4
}

Buffer.prototype.writeUint32BE =
Buffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  this[offset] = (value >>> 24)
  this[offset + 1] = (value >>> 16)
  this[offset + 2] = (value >>> 8)
  this[offset + 3] = (value & 0xff)
  return offset + 4
}

Buffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    var limit = Math.pow(2, (8 * byteLength) - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = 0
  var mul = 1
  var sub = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    var limit = Math.pow(2, (8 * byteLength) - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = byteLength - 1
  var mul = 1
  var sub = 0
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)
  if (value < 0) value = 0xff + value + 1
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  this[offset] = (value & 0xff)
  this[offset + 1] = (value >>> 8)
  return offset + 2
}

Buffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  this[offset] = (value >>> 8)
  this[offset + 1] = (value & 0xff)
  return offset + 2
}

Buffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  this[offset] = (value & 0xff)
  this[offset + 1] = (value >>> 8)
  this[offset + 2] = (value >>> 16)
  this[offset + 3] = (value >>> 24)
  return offset + 4
}

Buffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (value < 0) value = 0xffffffff + value + 1
  this[offset] = (value >>> 24)
  this[offset + 1] = (value >>> 16)
  this[offset + 2] = (value >>> 8)
  this[offset + 3] = (value & 0xff)
  return offset + 4
}

function checkIEEE754 (buf, value, offset, ext, max, min) {
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
  if (offset < 0) throw new RangeError('Index out of range')
}

function writeFloat (buf, value, offset, littleEndian, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)
  }
  ieee754.write(buf, value, offset, littleEndian, 23, 4)
  return offset + 4
}

Buffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {
  return writeFloat(this, value, offset, true, noAssert)
}

Buffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {
  return writeFloat(this, value, offset, false, noAssert)
}

function writeDouble (buf, value, offset, littleEndian, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)
  }
  ieee754.write(buf, value, offset, littleEndian, 52, 8)
  return offset + 8
}

Buffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {
  return writeDouble(this, value, offset, true, noAssert)
}

Buffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {
  return writeDouble(this, value, offset, false, noAssert)
}

// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
Buffer.prototype.copy = function copy (target, targetStart, start, end) {
  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')
  if (!start) start = 0
  if (!end && end !== 0) end = this.length
  if (targetStart >= target.length) targetStart = target.length
  if (!targetStart) targetStart = 0
  if (end > 0 && end < start) end = start

  // Copy 0 bytes; we're done
  if (end === start) return 0
  if (target.length === 0 || this.length === 0) return 0

  // Fatal error conditions
  if (targetStart < 0) {
    throw new RangeError('targetStart out of bounds')
  }
  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')
  if (end < 0) throw new RangeError('sourceEnd out of bounds')

  // Are we oob?
  if (end > this.length) end = this.length
  if (target.length - targetStart < end - start) {
    end = target.length - targetStart + start
  }

  var len = end - start

  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {
    // Use built-in when available, missing from IE11
    this.copyWithin(targetStart, start, end)
  } else {
    Uint8Array.prototype.set.call(
      target,
      this.subarray(start, end),
      targetStart
    )
  }

  return len
}

// Usage:
//    buffer.fill(number[, offset[, end]])
//    buffer.fill(buffer[, offset[, end]])
//    buffer.fill(string[, offset[, end]][, encoding])
Buffer.prototype.fill = function fill (val, start, end, encoding) {
  // Handle string cases:
  if (typeof val === 'string') {
    if (typeof start === 'string') {
      encoding = start
      start = 0
      end = this.length
    } else if (typeof end === 'string') {
      encoding = end
      end = this.length
    }
    if (encoding !== undefined && typeof encoding !== 'string') {
      throw new TypeError('encoding must be a string')
    }
    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
      throw new TypeError('Unknown encoding: ' + encoding)
    }
    if (val.length === 1) {
      var code = val.charCodeAt(0)
      if ((encoding === 'utf8' && code < 128) ||
          encoding === 'latin1') {
        // Fast path: If `val` fits into a single byte, use that numeric value.
        val = code
      }
    }
  } else if (typeof val === 'number') {
    val = val & 255
  } else if (typeof val === 'boolean') {
    val = Number(val)
  }

  // Invalid ranges are not set to a default, so can range check early.
  if (start < 0 || this.length < start || this.length < end) {
    throw new RangeError('Out of range index')
  }

  if (end <= start) {
    return this
  }

  start = start >>> 0
  end = end === undefined ? this.length : end >>> 0

  if (!val) val = 0

  var i
  if (typeof val === 'number') {
    for (i = start; i < end; ++i) {
      this[i] = val
    }
  } else {
    var bytes = Buffer.isBuffer(val)
      ? val
      : Buffer.from(val, encoding)
    var len = bytes.length
    if (len === 0) {
      throw new TypeError('The value "' + val +
        '" is invalid for argument "value"')
    }
    for (i = 0; i < end - start; ++i) {
      this[i + start] = bytes[i % len]
    }
  }

  return this
}

// HELPER FUNCTIONS
// ================

var INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g

function base64clean (str) {
  // Node takes equal signs as end of the Base64 encoding
  str = str.split('=')[0]
  // Node strips out invalid characters like \n and \t from the string, base64-js does not
  str = str.trim().replace(INVALID_BASE64_RE, '')
  // Node converts strings with length < 2 to ''
  if (str.length < 2) return ''
  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
  while (str.length % 4 !== 0) {
    str = str + '='
  }
  return str
}

function utf8ToBytes (string, units) {
  units = units || Infinity
  var codePoint
  var length = string.length
  var leadSurrogate = null
  var bytes = []

  for (var i = 0; i < length; ++i) {
    codePoint = string.charCodeAt(i)

    // is surrogate component
    if (codePoint > 0xD7FF && codePoint < 0xE000) {
      // last char was a lead
      if (!leadSurrogate) {
        // no lead yet
        if (codePoint > 0xDBFF) {
          // unexpected trail
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        } else if (i + 1 === length) {
          // unpaired lead
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        }

        // valid lead
        leadSurrogate = codePoint

        continue
      }

      // 2 leads in a row
      if (codePoint < 0xDC00) {
        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
        leadSurrogate = codePoint
        continue
      }

      // valid surrogate pair
      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000
    } else if (leadSurrogate) {
      // valid bmp char, but last char was a lead
      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
    }

    leadSurrogate = null

    // encode utf8
    if (codePoint < 0x80) {
      if ((units -= 1) < 0) break
      bytes.push(codePoint)
    } else if (codePoint < 0x800) {
      if ((units -= 2) < 0) break
      bytes.push(
        codePoint >> 0x6 | 0xC0,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x10000) {
      if ((units -= 3) < 0) break
      bytes.push(
        codePoint >> 0xC | 0xE0,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x110000) {
      if ((units -= 4) < 0) break
      bytes.push(
        codePoint >> 0x12 | 0xF0,
        codePoint >> 0xC & 0x3F | 0x80,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else {
      throw new Error('Invalid code point')
    }
  }

  return bytes
}

function asciiToBytes (str) {
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    // Node's code seems to be doing this and not & 0x7F..
    byteArray.push(str.charCodeAt(i) & 0xFF)
  }
  return byteArray
}

function utf16leToBytes (str, units) {
  var c, hi, lo
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    if ((units -= 2) < 0) break

    c = str.charCodeAt(i)
    hi = c >> 8
    lo = c % 256
    byteArray.push(lo)
    byteArray.push(hi)
  }

  return byteArray
}

function base64ToBytes (str) {
  return base64.toByteArray(base64clean(str))
}

function blitBuffer (src, dst, offset, length) {
  for (var i = 0; i < length; ++i) {
    if ((i + offset >= dst.length) || (i >= src.length)) break
    dst[i + offset] = src[i]
  }
  return i
}

// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass
// the `instanceof` check but they should be treated as of that type.
// See: https://github.com/feross/buffer/issues/166
function isInstance (obj, type) {
  return obj instanceof type ||
    (obj != null && obj.constructor != null && obj.constructor.name != null &&
      obj.constructor.name === type.name)
}
function numberIsNaN (obj) {
  // For IE11 support
  return obj !== obj // eslint-disable-line no-self-compare
}

// Create lookup table for `toString('hex')`
// See: https://github.com/feross/buffer/issues/219
var hexSliceLookupTable = (function () {
  var alphabet = '0123456789abcdef'
  var table = new Array(256)
  for (var i = 0; i < 16; ++i) {
    var i16 = i * 16
    for (var j = 0; j < 16; ++j) {
      table[i16 + j] = alphabet[i] + alphabet[j]
    }
  }
  return table
})()


/***/ }),

/***/ "./node_modules/cipher-base/index.js":
/*!*******************************************!*\
  !*** ./node_modules/cipher-base/index.js ***!
  \*******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer
var Transform = Object(function webpackMissingModule() { var e = new Error("Cannot find module 'stream'"); e.code = 'MODULE_NOT_FOUND'; throw e; }()).Transform
var StringDecoder = __webpack_require__(/*! string_decoder */ "./node_modules/string_decoder/lib/string_decoder.js").StringDecoder
var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")

function CipherBase (hashMode) {
  Transform.call(this)
  this.hashMode = typeof hashMode === 'string'
  if (this.hashMode) {
    this[hashMode] = this._finalOrDigest
  } else {
    this.final = this._finalOrDigest
  }
  if (this._final) {
    this.__final = this._final
    this._final = null
  }
  this._decoder = null
  this._encoding = null
}
inherits(CipherBase, Transform)

CipherBase.prototype.update = function (data, inputEnc, outputEnc) {
  if (typeof data === 'string') {
    data = Buffer.from(data, inputEnc)
  }

  var outData = this._update(data)
  if (this.hashMode) return this

  if (outputEnc) {
    outData = this._toString(outData, outputEnc)
  }

  return outData
}

CipherBase.prototype.setAutoPadding = function () {}
CipherBase.prototype.getAuthTag = function () {
  throw new Error('trying to get auth tag in unsupported state')
}

CipherBase.prototype.setAuthTag = function () {
  throw new Error('trying to set auth tag in unsupported state')
}

CipherBase.prototype.setAAD = function () {
  throw new Error('trying to set aad in unsupported state')
}

CipherBase.prototype._transform = function (data, _, next) {
  var err
  try {
    if (this.hashMode) {
      this._update(data)
    } else {
      this.push(this._update(data))
    }
  } catch (e) {
    err = e
  } finally {
    next(err)
  }
}
CipherBase.prototype._flush = function (done) {
  var err
  try {
    this.push(this.__final())
  } catch (e) {
    err = e
  }

  done(err)
}
CipherBase.prototype._finalOrDigest = function (outputEnc) {
  var outData = this.__final() || Buffer.alloc(0)
  if (outputEnc) {
    outData = this._toString(outData, outputEnc, true)
  }
  return outData
}

CipherBase.prototype._toString = function (value, enc, fin) {
  if (!this._decoder) {
    this._decoder = new StringDecoder(enc)
    this._encoding = enc
  }

  if (this._encoding !== enc) throw new Error('can\'t switch encodings')

  var out = this._decoder.write(value)
  if (fin) {
    out += this._decoder.end()
  }

  return out
}

module.exports = CipherBase


/***/ }),

/***/ "./node_modules/create-ecdh/browser.js":
/*!*********************************************!*\
  !*** ./node_modules/create-ecdh/browser.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var elliptic = __webpack_require__(/*! elliptic */ "./node_modules/elliptic/lib/elliptic.js")
var BN = __webpack_require__(/*! bn.js */ "./node_modules/bn.js/lib/bn.js")

module.exports = function createECDH (curve) {
  return new ECDH(curve)
}

var aliases = {
  secp256k1: {
    name: 'secp256k1',
    byteLength: 32
  },
  secp224r1: {
    name: 'p224',
    byteLength: 28
  },
  prime256v1: {
    name: 'p256',
    byteLength: 32
  },
  prime192v1: {
    name: 'p192',
    byteLength: 24
  },
  ed25519: {
    name: 'ed25519',
    byteLength: 32
  },
  secp384r1: {
    name: 'p384',
    byteLength: 48
  },
  secp521r1: {
    name: 'p521',
    byteLength: 66
  }
}

aliases.p224 = aliases.secp224r1
aliases.p256 = aliases.secp256r1 = aliases.prime256v1
aliases.p192 = aliases.secp192r1 = aliases.prime192v1
aliases.p384 = aliases.secp384r1
aliases.p521 = aliases.secp521r1

function ECDH (curve) {
  this.curveType = aliases[curve]
  if (!this.curveType) {
    this.curveType = {
      name: curve
    }
  }
  this.curve = new elliptic.ec(this.curveType.name) // eslint-disable-line new-cap
  this.keys = void 0
}

ECDH.prototype.generateKeys = function (enc, format) {
  this.keys = this.curve.genKeyPair()
  return this.getPublicKey(enc, format)
}

ECDH.prototype.computeSecret = function (other, inenc, enc) {
  inenc = inenc || 'utf8'
  if (!Buffer.isBuffer(other)) {
    other = new Buffer(other, inenc)
  }
  var otherPub = this.curve.keyFromPublic(other).getPublic()
  var out = otherPub.mul(this.keys.getPrivate()).getX()
  return formatReturnValue(out, enc, this.curveType.byteLength)
}

ECDH.prototype.getPublicKey = function (enc, format) {
  var key = this.keys.getPublic(format === 'compressed', true)
  if (format === 'hybrid') {
    if (key[key.length - 1] % 2) {
      key[0] = 7
    } else {
      key[0] = 6
    }
  }
  return formatReturnValue(key, enc)
}

ECDH.prototype.getPrivateKey = function (enc) {
  return formatReturnValue(this.keys.getPrivate(), enc)
}

ECDH.prototype.setPublicKey = function (pub, enc) {
  enc = enc || 'utf8'
  if (!Buffer.isBuffer(pub)) {
    pub = new Buffer(pub, enc)
  }
  this.keys._importPublic(pub)
  return this
}

ECDH.prototype.setPrivateKey = function (priv, enc) {
  enc = enc || 'utf8'
  if (!Buffer.isBuffer(priv)) {
    priv = new Buffer(priv, enc)
  }

  var _priv = new BN(priv)
  _priv = _priv.toString(16)
  this.keys = this.curve.genKeyPair()
  this.keys._importPrivate(_priv)
  return this
}

function formatReturnValue (bn, enc, len) {
  if (!Array.isArray(bn)) {
    bn = bn.toArray()
  }
  var buf = new Buffer(bn)
  if (len && buf.length < len) {
    var zeros = new Buffer(len - buf.length)
    zeros.fill(0)
    buf = Buffer.concat([zeros, buf])
  }
  if (!enc) {
    return buf
  } else {
    return buf.toString(enc)
  }
}


/***/ }),

/***/ "./node_modules/create-hash/browser.js":
/*!*********************************************!*\
  !*** ./node_modules/create-hash/browser.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")
var MD5 = __webpack_require__(/*! md5.js */ "./node_modules/md5.js/index.js")
var RIPEMD160 = __webpack_require__(/*! ripemd160 */ "./node_modules/ripemd160/index.js")
var sha = __webpack_require__(/*! sha.js */ "./node_modules/sha.js/index.js")
var Base = __webpack_require__(/*! cipher-base */ "./node_modules/cipher-base/index.js")

function Hash (hash) {
  Base.call(this, 'digest')

  this._hash = hash
}

inherits(Hash, Base)

Hash.prototype._update = function (data) {
  this._hash.update(data)
}

Hash.prototype._final = function () {
  return this._hash.digest()
}

module.exports = function createHash (alg) {
  alg = alg.toLowerCase()
  if (alg === 'md5') return new MD5()
  if (alg === 'rmd160' || alg === 'ripemd160') return new RIPEMD160()

  return new Hash(sha(alg))
}


/***/ }),

/***/ "./node_modules/create-hash/md5.js":
/*!*****************************************!*\
  !*** ./node_modules/create-hash/md5.js ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var MD5 = __webpack_require__(/*! md5.js */ "./node_modules/md5.js/index.js")

module.exports = function (buffer) {
  return new MD5().update(buffer).digest()
}


/***/ }),

/***/ "./node_modules/create-hmac/browser.js":
/*!*********************************************!*\
  !*** ./node_modules/create-hmac/browser.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")
var Legacy = __webpack_require__(/*! ./legacy */ "./node_modules/create-hmac/legacy.js")
var Base = __webpack_require__(/*! cipher-base */ "./node_modules/cipher-base/index.js")
var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer
var md5 = __webpack_require__(/*! create-hash/md5 */ "./node_modules/create-hash/md5.js")
var RIPEMD160 = __webpack_require__(/*! ripemd160 */ "./node_modules/ripemd160/index.js")

var sha = __webpack_require__(/*! sha.js */ "./node_modules/sha.js/index.js")

var ZEROS = Buffer.alloc(128)

function Hmac (alg, key) {
  Base.call(this, 'digest')
  if (typeof key === 'string') {
    key = Buffer.from(key)
  }

  var blocksize = (alg === 'sha512' || alg === 'sha384') ? 128 : 64

  this._alg = alg
  this._key = key
  if (key.length > blocksize) {
    var hash = alg === 'rmd160' ? new RIPEMD160() : sha(alg)
    key = hash.update(key).digest()
  } else if (key.length < blocksize) {
    key = Buffer.concat([key, ZEROS], blocksize)
  }

  var ipad = this._ipad = Buffer.allocUnsafe(blocksize)
  var opad = this._opad = Buffer.allocUnsafe(blocksize)

  for (var i = 0; i < blocksize; i++) {
    ipad[i] = key[i] ^ 0x36
    opad[i] = key[i] ^ 0x5C
  }
  this._hash = alg === 'rmd160' ? new RIPEMD160() : sha(alg)
  this._hash.update(ipad)
}

inherits(Hmac, Base)

Hmac.prototype._update = function (data) {
  this._hash.update(data)
}

Hmac.prototype._final = function () {
  var h = this._hash.digest()
  var hash = this._alg === 'rmd160' ? new RIPEMD160() : sha(this._alg)
  return hash.update(this._opad).update(h).digest()
}

module.exports = function createHmac (alg, key) {
  alg = alg.toLowerCase()
  if (alg === 'rmd160' || alg === 'ripemd160') {
    return new Hmac('rmd160', key)
  }
  if (alg === 'md5') {
    return new Legacy(md5, key)
  }
  return new Hmac(alg, key)
}


/***/ }),

/***/ "./node_modules/create-hmac/legacy.js":
/*!********************************************!*\
  !*** ./node_modules/create-hmac/legacy.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")
var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer

var Base = __webpack_require__(/*! cipher-base */ "./node_modules/cipher-base/index.js")

var ZEROS = Buffer.alloc(128)
var blocksize = 64

function Hmac (alg, key) {
  Base.call(this, 'digest')
  if (typeof key === 'string') {
    key = Buffer.from(key)
  }

  this._alg = alg
  this._key = key

  if (key.length > blocksize) {
    key = alg(key)
  } else if (key.length < blocksize) {
    key = Buffer.concat([key, ZEROS], blocksize)
  }

  var ipad = this._ipad = Buffer.allocUnsafe(blocksize)
  var opad = this._opad = Buffer.allocUnsafe(blocksize)

  for (var i = 0; i < blocksize; i++) {
    ipad[i] = key[i] ^ 0x36
    opad[i] = key[i] ^ 0x5C
  }

  this._hash = [ipad]
}

inherits(Hmac, Base)

Hmac.prototype._update = function (data) {
  this._hash.push(data)
}

Hmac.prototype._final = function () {
  var h = this._alg(Buffer.concat(this._hash))
  return this._alg(Buffer.concat([this._opad, h]))
}
module.exports = Hmac


/***/ }),

/***/ "./node_modules/crypto-browserify/index.js":
/*!*************************************************!*\
  !*** ./node_modules/crypto-browserify/index.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


exports.randomBytes = exports.rng = exports.pseudoRandomBytes = exports.prng = __webpack_require__(/*! randombytes */ "./node_modules/randombytes/browser.js")
exports.createHash = exports.Hash = __webpack_require__(/*! create-hash */ "./node_modules/create-hash/browser.js")
exports.createHmac = exports.Hmac = __webpack_require__(/*! create-hmac */ "./node_modules/create-hmac/browser.js")

var algos = __webpack_require__(/*! browserify-sign/algos */ "./node_modules/browserify-sign/algos.js")
var algoKeys = Object.keys(algos)
var hashes = ['sha1', 'sha224', 'sha256', 'sha384', 'sha512', 'md5', 'rmd160'].concat(algoKeys)
exports.getHashes = function () {
  return hashes
}

var p = __webpack_require__(/*! pbkdf2 */ "./node_modules/pbkdf2/browser.js")
exports.pbkdf2 = p.pbkdf2
exports.pbkdf2Sync = p.pbkdf2Sync

var aes = __webpack_require__(/*! browserify-cipher */ "./node_modules/browserify-cipher/browser.js")

exports.Cipher = aes.Cipher
exports.createCipher = aes.createCipher
exports.Cipheriv = aes.Cipheriv
exports.createCipheriv = aes.createCipheriv
exports.Decipher = aes.Decipher
exports.createDecipher = aes.createDecipher
exports.Decipheriv = aes.Decipheriv
exports.createDecipheriv = aes.createDecipheriv
exports.getCiphers = aes.getCiphers
exports.listCiphers = aes.listCiphers

var dh = __webpack_require__(/*! diffie-hellman */ "./node_modules/diffie-hellman/browser.js")

exports.DiffieHellmanGroup = dh.DiffieHellmanGroup
exports.createDiffieHellmanGroup = dh.createDiffieHellmanGroup
exports.getDiffieHellman = dh.getDiffieHellman
exports.createDiffieHellman = dh.createDiffieHellman
exports.DiffieHellman = dh.DiffieHellman

var sign = __webpack_require__(/*! browserify-sign */ "./node_modules/browserify-sign/browser/index.js")

exports.createSign = sign.createSign
exports.Sign = sign.Sign
exports.createVerify = sign.createVerify
exports.Verify = sign.Verify

exports.createECDH = __webpack_require__(/*! create-ecdh */ "./node_modules/create-ecdh/browser.js")

var publicEncrypt = __webpack_require__(/*! public-encrypt */ "./node_modules/public-encrypt/browser.js")

exports.publicEncrypt = publicEncrypt.publicEncrypt
exports.privateEncrypt = publicEncrypt.privateEncrypt
exports.publicDecrypt = publicEncrypt.publicDecrypt
exports.privateDecrypt = publicEncrypt.privateDecrypt

// the least I can do is make error messages for the rest of the node.js/crypto api.
// ;[
//   'createCredentials'
// ].forEach(function (name) {
//   exports[name] = function () {
//     throw new Error([
//       'sorry, ' + name + ' is not implemented yet',
//       'we accept pull requests',
//       'https://github.com/crypto-browserify/crypto-browserify'
//     ].join('\n'))
//   }
// })

var rf = __webpack_require__(/*! randomfill */ "./node_modules/randomfill/browser.js")

exports.randomFill = rf.randomFill
exports.randomFillSync = rf.randomFillSync

exports.createCredentials = function () {
  throw new Error([
    'sorry, createCredentials is not implemented yet',
    'we accept pull requests',
    'https://github.com/crypto-browserify/crypto-browserify'
  ].join('\n'))
}

exports.constants = {
  'DH_CHECK_P_NOT_SAFE_PRIME': 2,
  'DH_CHECK_P_NOT_PRIME': 1,
  'DH_UNABLE_TO_CHECK_GENERATOR': 4,
  'DH_NOT_SUITABLE_GENERATOR': 8,
  'NPN_ENABLED': 1,
  'ALPN_ENABLED': 1,
  'RSA_PKCS1_PADDING': 1,
  'RSA_SSLV23_PADDING': 2,
  'RSA_NO_PADDING': 3,
  'RSA_PKCS1_OAEP_PADDING': 4,
  'RSA_X931_PADDING': 5,
  'RSA_PKCS1_PSS_PADDING': 6,
  'POINT_CONVERSION_COMPRESSED': 2,
  'POINT_CONVERSION_UNCOMPRESSED': 4,
  'POINT_CONVERSION_HYBRID': 6
}


/***/ }),

/***/ "./node_modules/dayjs/dayjs.min.js":
/*!*****************************************!*\
  !*** ./node_modules/dayjs/dayjs.min.js ***!
  \*****************************************/
/***/ (function(module) {

!function(t,e){ true?module.exports=e():0}(this,(function(){"use strict";var t=1e3,e=6e4,n=36e5,r="millisecond",i="second",s="minute",u="hour",a="day",o="week",f="month",h="quarter",c="year",d="date",$="Invalid Date",l=/^(\d{4})[-/]?(\d{1,2})?[-/]?(\d{0,2})[Tt\s]*(\d{1,2})?:?(\d{1,2})?:?(\d{1,2})?[.:]?(\d+)?$/,y=/\[([^\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g,M={name:"en",weekdays:"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),months:"January_February_March_April_May_June_July_August_September_October_November_December".split("_")},m=function(t,e,n){var r=String(t);return!r||r.length>=e?t:""+Array(e+1-r.length).join(n)+t},g={s:m,z:function(t){var e=-t.utcOffset(),n=Math.abs(e),r=Math.floor(n/60),i=n%60;return(e<=0?"+":"-")+m(r,2,"0")+":"+m(i,2,"0")},m:function t(e,n){if(e.date()<n.date())return-t(n,e);var r=12*(n.year()-e.year())+(n.month()-e.month()),i=e.clone().add(r,f),s=n-i<0,u=e.clone().add(r+(s?-1:1),f);return+(-(r+(n-i)/(s?i-u:u-i))||0)},a:function(t){return t<0?Math.ceil(t)||0:Math.floor(t)},p:function(t){return{M:f,y:c,w:o,d:a,D:d,h:u,m:s,s:i,ms:r,Q:h}[t]||String(t||"").toLowerCase().replace(/s$/,"")},u:function(t){return void 0===t}},D="en",v={};v[D]=M;var p=function(t){return t instanceof _},S=function(t,e,n){var r;if(!t)return D;if("string"==typeof t)v[t]&&(r=t),e&&(v[t]=e,r=t);else{var i=t.name;v[i]=t,r=i}return!n&&r&&(D=r),r||!n&&D},w=function(t,e){if(p(t))return t.clone();var n="object"==typeof e?e:{};return n.date=t,n.args=arguments,new _(n)},O=g;O.l=S,O.i=p,O.w=function(t,e){return w(t,{locale:e.$L,utc:e.$u,x:e.$x,$offset:e.$offset})};var _=function(){function M(t){this.$L=S(t.locale,null,!0),this.parse(t)}var m=M.prototype;return m.parse=function(t){this.$d=function(t){var e=t.date,n=t.utc;if(null===e)return new Date(NaN);if(O.u(e))return new Date;if(e instanceof Date)return new Date(e);if("string"==typeof e&&!/Z$/i.test(e)){var r=e.match(l);if(r){var i=r[2]-1||0,s=(r[7]||"0").substring(0,3);return n?new Date(Date.UTC(r[1],i,r[3]||1,r[4]||0,r[5]||0,r[6]||0,s)):new Date(r[1],i,r[3]||1,r[4]||0,r[5]||0,r[6]||0,s)}}return new Date(e)}(t),this.$x=t.x||{},this.init()},m.init=function(){var t=this.$d;this.$y=t.getFullYear(),this.$M=t.getMonth(),this.$D=t.getDate(),this.$W=t.getDay(),this.$H=t.getHours(),this.$m=t.getMinutes(),this.$s=t.getSeconds(),this.$ms=t.getMilliseconds()},m.$utils=function(){return O},m.isValid=function(){return!(this.$d.toString()===$)},m.isSame=function(t,e){var n=w(t);return this.startOf(e)<=n&&n<=this.endOf(e)},m.isAfter=function(t,e){return w(t)<this.startOf(e)},m.isBefore=function(t,e){return this.endOf(e)<w(t)},m.$g=function(t,e,n){return O.u(t)?this[e]:this.set(n,t)},m.unix=function(){return Math.floor(this.valueOf()/1e3)},m.valueOf=function(){return this.$d.getTime()},m.startOf=function(t,e){var n=this,r=!!O.u(e)||e,h=O.p(t),$=function(t,e){var i=O.w(n.$u?Date.UTC(n.$y,e,t):new Date(n.$y,e,t),n);return r?i:i.endOf(a)},l=function(t,e){return O.w(n.toDate()[t].apply(n.toDate("s"),(r?[0,0,0,0]:[23,59,59,999]).slice(e)),n)},y=this.$W,M=this.$M,m=this.$D,g="set"+(this.$u?"UTC":"");switch(h){case c:return r?$(1,0):$(31,11);case f:return r?$(1,M):$(0,M+1);case o:var D=this.$locale().weekStart||0,v=(y<D?y+7:y)-D;return $(r?m-v:m+(6-v),M);case a:case d:return l(g+"Hours",0);case u:return l(g+"Minutes",1);case s:return l(g+"Seconds",2);case i:return l(g+"Milliseconds",3);default:return this.clone()}},m.endOf=function(t){return this.startOf(t,!1)},m.$set=function(t,e){var n,o=O.p(t),h="set"+(this.$u?"UTC":""),$=(n={},n[a]=h+"Date",n[d]=h+"Date",n[f]=h+"Month",n[c]=h+"FullYear",n[u]=h+"Hours",n[s]=h+"Minutes",n[i]=h+"Seconds",n[r]=h+"Milliseconds",n)[o],l=o===a?this.$D+(e-this.$W):e;if(o===f||o===c){var y=this.clone().set(d,1);y.$d[$](l),y.init(),this.$d=y.set(d,Math.min(this.$D,y.daysInMonth())).$d}else $&&this.$d[$](l);return this.init(),this},m.set=function(t,e){return this.clone().$set(t,e)},m.get=function(t){return this[O.p(t)]()},m.add=function(r,h){var d,$=this;r=Number(r);var l=O.p(h),y=function(t){var e=w($);return O.w(e.date(e.date()+Math.round(t*r)),$)};if(l===f)return this.set(f,this.$M+r);if(l===c)return this.set(c,this.$y+r);if(l===a)return y(1);if(l===o)return y(7);var M=(d={},d[s]=e,d[u]=n,d[i]=t,d)[l]||1,m=this.$d.getTime()+r*M;return O.w(m,this)},m.subtract=function(t,e){return this.add(-1*t,e)},m.format=function(t){var e=this,n=this.$locale();if(!this.isValid())return n.invalidDate||$;var r=t||"YYYY-MM-DDTHH:mm:ssZ",i=O.z(this),s=this.$H,u=this.$m,a=this.$M,o=n.weekdays,f=n.months,h=function(t,n,i,s){return t&&(t[n]||t(e,r))||i[n].substr(0,s)},c=function(t){return O.s(s%12||12,t,"0")},d=n.meridiem||function(t,e,n){var r=t<12?"AM":"PM";return n?r.toLowerCase():r},l={YY:String(this.$y).slice(-2),YYYY:this.$y,M:a+1,MM:O.s(a+1,2,"0"),MMM:h(n.monthsShort,a,f,3),MMMM:h(f,a),D:this.$D,DD:O.s(this.$D,2,"0"),d:String(this.$W),dd:h(n.weekdaysMin,this.$W,o,2),ddd:h(n.weekdaysShort,this.$W,o,3),dddd:o[this.$W],H:String(s),HH:O.s(s,2,"0"),h:c(1),hh:c(2),a:d(s,u,!0),A:d(s,u,!1),m:String(u),mm:O.s(u,2,"0"),s:String(this.$s),ss:O.s(this.$s,2,"0"),SSS:O.s(this.$ms,3,"0"),Z:i};return r.replace(y,(function(t,e){return e||l[t]||i.replace(":","")}))},m.utcOffset=function(){return 15*-Math.round(this.$d.getTimezoneOffset()/15)},m.diff=function(r,d,$){var l,y=O.p(d),M=w(r),m=(M.utcOffset()-this.utcOffset())*e,g=this-M,D=O.m(this,M);return D=(l={},l[c]=D/12,l[f]=D,l[h]=D/3,l[o]=(g-m)/6048e5,l[a]=(g-m)/864e5,l[u]=g/n,l[s]=g/e,l[i]=g/t,l)[y]||g,$?D:O.a(D)},m.daysInMonth=function(){return this.endOf(f).$D},m.$locale=function(){return v[this.$L]},m.locale=function(t,e){if(!t)return this.$L;var n=this.clone(),r=S(t,e,!0);return r&&(n.$L=r),n},m.clone=function(){return O.w(this.$d,this)},m.toDate=function(){return new Date(this.valueOf())},m.toJSON=function(){return this.isValid()?this.toISOString():null},m.toISOString=function(){return this.$d.toISOString()},m.toString=function(){return this.$d.toUTCString()},M}(),b=_.prototype;return w.prototype=b,[["$ms",r],["$s",i],["$m",s],["$H",u],["$W",a],["$M",f],["$y",c],["$D",d]].forEach((function(t){b[t[1]]=function(e){return this.$g(e,t[0],t[1])}})),w.extend=function(t,e){return t.$i||(t(e,_,w),t.$i=!0),w},w.locale=S,w.isDayjs=p,w.unix=function(t){return w(1e3*t)},w.en=v[D],w.Ls=v,w.p={},w}));

/***/ }),

/***/ "./node_modules/dayjs/plugin/advancedFormat.js":
/*!*****************************************************!*\
  !*** ./node_modules/dayjs/plugin/advancedFormat.js ***!
  \*****************************************************/
/***/ (function(module) {

!function(e,t){ true?module.exports=t():0}(this,(function(){"use strict";return function(e,t,r){var n=t.prototype,s=n.format;r.en.ordinal=function(e){var t=["th","st","nd","rd"],r=e%100;return"["+e+(t[(r-20)%10]||t[r]||t[0])+"]"},n.format=function(e){var t=this,r=this.$locale(),n=this.$utils(),a=(e||"YYYY-MM-DDTHH:mm:ssZ").replace(/\[([^\]]+)]|Q|wo|ww|w|WW|W|zzz|z|gggg|GGGG|Do|X|x|k{1,2}|S/g,(function(e){switch(e){case"Q":return Math.ceil((t.$M+1)/3);case"Do":return r.ordinal(t.$D);case"gggg":return t.weekYear();case"GGGG":return t.isoWeekYear();case"wo":return r.ordinal(t.week(),"W");case"w":case"ww":return n.s(t.week(),"w"===e?1:2,"0");case"W":case"WW":return n.s(t.isoWeek(),"W"===e?1:2,"0");case"k":case"kk":return n.s(String(0===t.$H?24:t.$H),"k"===e?1:2,"0");case"X":return Math.floor(t.$d.getTime()/1e3);case"x":return t.$d.getTime();case"z":return"["+t.offsetName()+"]";case"zzz":return"["+t.offsetName("long")+"]";default:return e}}));return s.bind(this)(a)}}}));

/***/ }),

/***/ "./node_modules/dayjs/plugin/relativeTime.js":
/*!***************************************************!*\
  !*** ./node_modules/dayjs/plugin/relativeTime.js ***!
  \***************************************************/
/***/ (function(module) {

!function(r,e){ true?module.exports=e():0}(this,(function(){"use strict";return function(r,e,t){r=r||{};var n=e.prototype,o={future:"in %s",past:"%s ago",s:"a few seconds",m:"a minute",mm:"%d minutes",h:"an hour",hh:"%d hours",d:"a day",dd:"%d days",M:"a month",MM:"%d months",y:"a year",yy:"%d years"};function i(r,e,t,o){return n.fromToBase(r,e,t,o)}t.en.relativeTime=o,n.fromToBase=function(e,n,i,d,u){for(var f,a,s,l=i.$locale().relativeTime||o,h=r.thresholds||[{l:"s",r:44,d:"second"},{l:"m",r:89},{l:"mm",r:44,d:"minute"},{l:"h",r:89},{l:"hh",r:21,d:"hour"},{l:"d",r:35},{l:"dd",r:25,d:"day"},{l:"M",r:45},{l:"MM",r:10,d:"month"},{l:"y",r:17},{l:"yy",d:"year"}],m=h.length,c=0;c<m;c+=1){var y=h[c];y.d&&(f=d?t(e).diff(i,y.d,!0):i.diff(e,y.d,!0));var p=(r.rounding||Math.round)(Math.abs(f));if(s=f>0,p<=y.r||!y.r){p<=1&&c>0&&(y=h[c-1]);var v=l[y.l];u&&(p=u(""+p)),a="string"==typeof v?v.replace("%d",p):v(p,n,y.l,s);break}}if(n)return a;var M=s?l.future:l.past;return"function"==typeof M?M(a):M.replace("%s",a)},n.to=function(r,e){return i(r,e,this,!0)},n.from=function(r,e){return i(r,e,this)};var d=function(r){return r.$u?t.utc():t()};n.toNow=function(r){return this.to(d(this),r)},n.fromNow=function(r){return this.from(d(this),r)}}}));

/***/ }),

/***/ "./node_modules/dayjs/plugin/updateLocale.js":
/*!***************************************************!*\
  !*** ./node_modules/dayjs/plugin/updateLocale.js ***!
  \***************************************************/
/***/ (function(module) {

!function(e,n){ true?module.exports=n():0}(this,(function(){"use strict";return function(e,n,t){t.updateLocale=function(e,n){var o=t.Ls[e];if(o)return(n?Object.keys(n):[]).forEach((function(e){o[e]=n[e]})),o}}}));

/***/ }),

/***/ "./node_modules/deprecation/dist-web/index.js":
/*!****************************************************!*\
  !*** ./node_modules/deprecation/dist-web/index.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Deprecation": () => (/* binding */ Deprecation)
/* harmony export */ });
class Deprecation extends Error {
  constructor(message) {
    super(message); // Maintains proper stack trace (only available on V8)

    /* istanbul ignore next */

    if (Error.captureStackTrace) {
      Error.captureStackTrace(this, this.constructor);
    }

    this.name = 'Deprecation';
  }

}




/***/ }),

/***/ "./node_modules/des.js/lib/des.js":
/*!****************************************!*\
  !*** ./node_modules/des.js/lib/des.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


exports.utils = __webpack_require__(/*! ./des/utils */ "./node_modules/des.js/lib/des/utils.js");
exports.Cipher = __webpack_require__(/*! ./des/cipher */ "./node_modules/des.js/lib/des/cipher.js");
exports.DES = __webpack_require__(/*! ./des/des */ "./node_modules/des.js/lib/des/des.js");
exports.CBC = __webpack_require__(/*! ./des/cbc */ "./node_modules/des.js/lib/des/cbc.js");
exports.EDE = __webpack_require__(/*! ./des/ede */ "./node_modules/des.js/lib/des/ede.js");


/***/ }),

/***/ "./node_modules/des.js/lib/des/cbc.js":
/*!********************************************!*\
  !*** ./node_modules/des.js/lib/des/cbc.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


var assert = __webpack_require__(/*! minimalistic-assert */ "./node_modules/minimalistic-assert/index.js");
var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js");

var proto = {};

function CBCState(iv) {
  assert.equal(iv.length, 8, 'Invalid IV length');

  this.iv = new Array(8);
  for (var i = 0; i < this.iv.length; i++)
    this.iv[i] = iv[i];
}

function instantiate(Base) {
  function CBC(options) {
    Base.call(this, options);
    this._cbcInit();
  }
  inherits(CBC, Base);

  var keys = Object.keys(proto);
  for (var i = 0; i < keys.length; i++) {
    var key = keys[i];
    CBC.prototype[key] = proto[key];
  }

  CBC.create = function create(options) {
    return new CBC(options);
  };

  return CBC;
}

exports.instantiate = instantiate;

proto._cbcInit = function _cbcInit() {
  var state = new CBCState(this.options.iv);
  this._cbcState = state;
};

proto._update = function _update(inp, inOff, out, outOff) {
  var state = this._cbcState;
  var superProto = this.constructor.super_.prototype;

  var iv = state.iv;
  if (this.type === 'encrypt') {
    for (var i = 0; i < this.blockSize; i++)
      iv[i] ^= inp[inOff + i];

    superProto._update.call(this, iv, 0, out, outOff);

    for (var i = 0; i < this.blockSize; i++)
      iv[i] = out[outOff + i];
  } else {
    superProto._update.call(this, inp, inOff, out, outOff);

    for (var i = 0; i < this.blockSize; i++)
      out[outOff + i] ^= iv[i];

    for (var i = 0; i < this.blockSize; i++)
      iv[i] = inp[inOff + i];
  }
};


/***/ }),

/***/ "./node_modules/des.js/lib/des/cipher.js":
/*!***********************************************!*\
  !*** ./node_modules/des.js/lib/des/cipher.js ***!
  \***********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var assert = __webpack_require__(/*! minimalistic-assert */ "./node_modules/minimalistic-assert/index.js");

function Cipher(options) {
  this.options = options;

  this.type = this.options.type;
  this.blockSize = 8;
  this._init();

  this.buffer = new Array(this.blockSize);
  this.bufferOff = 0;
}
module.exports = Cipher;

Cipher.prototype._init = function _init() {
  // Might be overrided
};

Cipher.prototype.update = function update(data) {
  if (data.length === 0)
    return [];

  if (this.type === 'decrypt')
    return this._updateDecrypt(data);
  else
    return this._updateEncrypt(data);
};

Cipher.prototype._buffer = function _buffer(data, off) {
  // Append data to buffer
  var min = Math.min(this.buffer.length - this.bufferOff, data.length - off);
  for (var i = 0; i < min; i++)
    this.buffer[this.bufferOff + i] = data[off + i];
  this.bufferOff += min;

  // Shift next
  return min;
};

Cipher.prototype._flushBuffer = function _flushBuffer(out, off) {
  this._update(this.buffer, 0, out, off);
  this.bufferOff = 0;
  return this.blockSize;
};

Cipher.prototype._updateEncrypt = function _updateEncrypt(data) {
  var inputOff = 0;
  var outputOff = 0;

  var count = ((this.bufferOff + data.length) / this.blockSize) | 0;
  var out = new Array(count * this.blockSize);

  if (this.bufferOff !== 0) {
    inputOff += this._buffer(data, inputOff);

    if (this.bufferOff === this.buffer.length)
      outputOff += this._flushBuffer(out, outputOff);
  }

  // Write blocks
  var max = data.length - ((data.length - inputOff) % this.blockSize);
  for (; inputOff < max; inputOff += this.blockSize) {
    this._update(data, inputOff, out, outputOff);
    outputOff += this.blockSize;
  }

  // Queue rest
  for (; inputOff < data.length; inputOff++, this.bufferOff++)
    this.buffer[this.bufferOff] = data[inputOff];

  return out;
};

Cipher.prototype._updateDecrypt = function _updateDecrypt(data) {
  var inputOff = 0;
  var outputOff = 0;

  var count = Math.ceil((this.bufferOff + data.length) / this.blockSize) - 1;
  var out = new Array(count * this.blockSize);

  // TODO(indutny): optimize it, this is far from optimal
  for (; count > 0; count--) {
    inputOff += this._buffer(data, inputOff);
    outputOff += this._flushBuffer(out, outputOff);
  }

  // Buffer rest of the input
  inputOff += this._buffer(data, inputOff);

  return out;
};

Cipher.prototype.final = function final(buffer) {
  var first;
  if (buffer)
    first = this.update(buffer);

  var last;
  if (this.type === 'encrypt')
    last = this._finalEncrypt();
  else
    last = this._finalDecrypt();

  if (first)
    return first.concat(last);
  else
    return last;
};

Cipher.prototype._pad = function _pad(buffer, off) {
  if (off === 0)
    return false;

  while (off < buffer.length)
    buffer[off++] = 0;

  return true;
};

Cipher.prototype._finalEncrypt = function _finalEncrypt() {
  if (!this._pad(this.buffer, this.bufferOff))
    return [];

  var out = new Array(this.blockSize);
  this._update(this.buffer, 0, out, 0);
  return out;
};

Cipher.prototype._unpad = function _unpad(buffer) {
  return buffer;
};

Cipher.prototype._finalDecrypt = function _finalDecrypt() {
  assert.equal(this.bufferOff, this.blockSize, 'Not enough data to decrypt');
  var out = new Array(this.blockSize);
  this._flushBuffer(out, 0);

  return this._unpad(out);
};


/***/ }),

/***/ "./node_modules/des.js/lib/des/des.js":
/*!********************************************!*\
  !*** ./node_modules/des.js/lib/des/des.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var assert = __webpack_require__(/*! minimalistic-assert */ "./node_modules/minimalistic-assert/index.js");
var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js");

var utils = __webpack_require__(/*! ./utils */ "./node_modules/des.js/lib/des/utils.js");
var Cipher = __webpack_require__(/*! ./cipher */ "./node_modules/des.js/lib/des/cipher.js");

function DESState() {
  this.tmp = new Array(2);
  this.keys = null;
}

function DES(options) {
  Cipher.call(this, options);

  var state = new DESState();
  this._desState = state;

  this.deriveKeys(state, options.key);
}
inherits(DES, Cipher);
module.exports = DES;

DES.create = function create(options) {
  return new DES(options);
};

var shiftTable = [
  1, 1, 2, 2, 2, 2, 2, 2,
  1, 2, 2, 2, 2, 2, 2, 1
];

DES.prototype.deriveKeys = function deriveKeys(state, key) {
  state.keys = new Array(16 * 2);

  assert.equal(key.length, this.blockSize, 'Invalid key length');

  var kL = utils.readUInt32BE(key, 0);
  var kR = utils.readUInt32BE(key, 4);

  utils.pc1(kL, kR, state.tmp, 0);
  kL = state.tmp[0];
  kR = state.tmp[1];
  for (var i = 0; i < state.keys.length; i += 2) {
    var shift = shiftTable[i >>> 1];
    kL = utils.r28shl(kL, shift);
    kR = utils.r28shl(kR, shift);
    utils.pc2(kL, kR, state.keys, i);
  }
};

DES.prototype._update = function _update(inp, inOff, out, outOff) {
  var state = this._desState;

  var l = utils.readUInt32BE(inp, inOff);
  var r = utils.readUInt32BE(inp, inOff + 4);

  // Initial Permutation
  utils.ip(l, r, state.tmp, 0);
  l = state.tmp[0];
  r = state.tmp[1];

  if (this.type === 'encrypt')
    this._encrypt(state, l, r, state.tmp, 0);
  else
    this._decrypt(state, l, r, state.tmp, 0);

  l = state.tmp[0];
  r = state.tmp[1];

  utils.writeUInt32BE(out, l, outOff);
  utils.writeUInt32BE(out, r, outOff + 4);
};

DES.prototype._pad = function _pad(buffer, off) {
  var value = buffer.length - off;
  for (var i = off; i < buffer.length; i++)
    buffer[i] = value;

  return true;
};

DES.prototype._unpad = function _unpad(buffer) {
  var pad = buffer[buffer.length - 1];
  for (var i = buffer.length - pad; i < buffer.length; i++)
    assert.equal(buffer[i], pad);

  return buffer.slice(0, buffer.length - pad);
};

DES.prototype._encrypt = function _encrypt(state, lStart, rStart, out, off) {
  var l = lStart;
  var r = rStart;

  // Apply f() x16 times
  for (var i = 0; i < state.keys.length; i += 2) {
    var keyL = state.keys[i];
    var keyR = state.keys[i + 1];

    // f(r, k)
    utils.expand(r, state.tmp, 0);

    keyL ^= state.tmp[0];
    keyR ^= state.tmp[1];
    var s = utils.substitute(keyL, keyR);
    var f = utils.permute(s);

    var t = r;
    r = (l ^ f) >>> 0;
    l = t;
  }

  // Reverse Initial Permutation
  utils.rip(r, l, out, off);
};

DES.prototype._decrypt = function _decrypt(state, lStart, rStart, out, off) {
  var l = rStart;
  var r = lStart;

  // Apply f() x16 times
  for (var i = state.keys.length - 2; i >= 0; i -= 2) {
    var keyL = state.keys[i];
    var keyR = state.keys[i + 1];

    // f(r, k)
    utils.expand(l, state.tmp, 0);

    keyL ^= state.tmp[0];
    keyR ^= state.tmp[1];
    var s = utils.substitute(keyL, keyR);
    var f = utils.permute(s);

    var t = l;
    l = (r ^ f) >>> 0;
    r = t;
  }

  // Reverse Initial Permutation
  utils.rip(l, r, out, off);
};


/***/ }),

/***/ "./node_modules/des.js/lib/des/ede.js":
/*!********************************************!*\
  !*** ./node_modules/des.js/lib/des/ede.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var assert = __webpack_require__(/*! minimalistic-assert */ "./node_modules/minimalistic-assert/index.js");
var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js");

var Cipher = __webpack_require__(/*! ./cipher */ "./node_modules/des.js/lib/des/cipher.js");
var DES = __webpack_require__(/*! ./des */ "./node_modules/des.js/lib/des/des.js");

function EDEState(type, key) {
  assert.equal(key.length, 24, 'Invalid key length');

  var k1 = key.slice(0, 8);
  var k2 = key.slice(8, 16);
  var k3 = key.slice(16, 24);

  if (type === 'encrypt') {
    this.ciphers = [
      DES.create({ type: 'encrypt', key: k1 }),
      DES.create({ type: 'decrypt', key: k2 }),
      DES.create({ type: 'encrypt', key: k3 })
    ];
  } else {
    this.ciphers = [
      DES.create({ type: 'decrypt', key: k3 }),
      DES.create({ type: 'encrypt', key: k2 }),
      DES.create({ type: 'decrypt', key: k1 })
    ];
  }
}

function EDE(options) {
  Cipher.call(this, options);

  var state = new EDEState(this.type, this.options.key);
  this._edeState = state;
}
inherits(EDE, Cipher);

module.exports = EDE;

EDE.create = function create(options) {
  return new EDE(options);
};

EDE.prototype._update = function _update(inp, inOff, out, outOff) {
  var state = this._edeState;

  state.ciphers[0]._update(inp, inOff, out, outOff);
  state.ciphers[1]._update(out, outOff, out, outOff);
  state.ciphers[2]._update(out, outOff, out, outOff);
};

EDE.prototype._pad = DES.prototype._pad;
EDE.prototype._unpad = DES.prototype._unpad;


/***/ }),

/***/ "./node_modules/des.js/lib/des/utils.js":
/*!**********************************************!*\
  !*** ./node_modules/des.js/lib/des/utils.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";


exports.readUInt32BE = function readUInt32BE(bytes, off) {
  var res =  (bytes[0 + off] << 24) |
             (bytes[1 + off] << 16) |
             (bytes[2 + off] << 8) |
             bytes[3 + off];
  return res >>> 0;
};

exports.writeUInt32BE = function writeUInt32BE(bytes, value, off) {
  bytes[0 + off] = value >>> 24;
  bytes[1 + off] = (value >>> 16) & 0xff;
  bytes[2 + off] = (value >>> 8) & 0xff;
  bytes[3 + off] = value & 0xff;
};

exports.ip = function ip(inL, inR, out, off) {
  var outL = 0;
  var outR = 0;

  for (var i = 6; i >= 0; i -= 2) {
    for (var j = 0; j <= 24; j += 8) {
      outL <<= 1;
      outL |= (inR >>> (j + i)) & 1;
    }
    for (var j = 0; j <= 24; j += 8) {
      outL <<= 1;
      outL |= (inL >>> (j + i)) & 1;
    }
  }

  for (var i = 6; i >= 0; i -= 2) {
    for (var j = 1; j <= 25; j += 8) {
      outR <<= 1;
      outR |= (inR >>> (j + i)) & 1;
    }
    for (var j = 1; j <= 25; j += 8) {
      outR <<= 1;
      outR |= (inL >>> (j + i)) & 1;
    }
  }

  out[off + 0] = outL >>> 0;
  out[off + 1] = outR >>> 0;
};

exports.rip = function rip(inL, inR, out, off) {
  var outL = 0;
  var outR = 0;

  for (var i = 0; i < 4; i++) {
    for (var j = 24; j >= 0; j -= 8) {
      outL <<= 1;
      outL |= (inR >>> (j + i)) & 1;
      outL <<= 1;
      outL |= (inL >>> (j + i)) & 1;
    }
  }
  for (var i = 4; i < 8; i++) {
    for (var j = 24; j >= 0; j -= 8) {
      outR <<= 1;
      outR |= (inR >>> (j + i)) & 1;
      outR <<= 1;
      outR |= (inL >>> (j + i)) & 1;
    }
  }

  out[off + 0] = outL >>> 0;
  out[off + 1] = outR >>> 0;
};

exports.pc1 = function pc1(inL, inR, out, off) {
  var outL = 0;
  var outR = 0;

  // 7, 15, 23, 31, 39, 47, 55, 63
  // 6, 14, 22, 30, 39, 47, 55, 63
  // 5, 13, 21, 29, 39, 47, 55, 63
  // 4, 12, 20, 28
  for (var i = 7; i >= 5; i--) {
    for (var j = 0; j <= 24; j += 8) {
      outL <<= 1;
      outL |= (inR >> (j + i)) & 1;
    }
    for (var j = 0; j <= 24; j += 8) {
      outL <<= 1;
      outL |= (inL >> (j + i)) & 1;
    }
  }
  for (var j = 0; j <= 24; j += 8) {
    outL <<= 1;
    outL |= (inR >> (j + i)) & 1;
  }

  // 1, 9, 17, 25, 33, 41, 49, 57
  // 2, 10, 18, 26, 34, 42, 50, 58
  // 3, 11, 19, 27, 35, 43, 51, 59
  // 36, 44, 52, 60
  for (var i = 1; i <= 3; i++) {
    for (var j = 0; j <= 24; j += 8) {
      outR <<= 1;
      outR |= (inR >> (j + i)) & 1;
    }
    for (var j = 0; j <= 24; j += 8) {
      outR <<= 1;
      outR |= (inL >> (j + i)) & 1;
    }
  }
  for (var j = 0; j <= 24; j += 8) {
    outR <<= 1;
    outR |= (inL >> (j + i)) & 1;
  }

  out[off + 0] = outL >>> 0;
  out[off + 1] = outR >>> 0;
};

exports.r28shl = function r28shl(num, shift) {
  return ((num << shift) & 0xfffffff) | (num >>> (28 - shift));
};

var pc2table = [
  // inL => outL
  14, 11, 17, 4, 27, 23, 25, 0,
  13, 22, 7, 18, 5, 9, 16, 24,
  2, 20, 12, 21, 1, 8, 15, 26,

  // inR => outR
  15, 4, 25, 19, 9, 1, 26, 16,
  5, 11, 23, 8, 12, 7, 17, 0,
  22, 3, 10, 14, 6, 20, 27, 24
];

exports.pc2 = function pc2(inL, inR, out, off) {
  var outL = 0;
  var outR = 0;

  var len = pc2table.length >>> 1;
  for (var i = 0; i < len; i++) {
    outL <<= 1;
    outL |= (inL >>> pc2table[i]) & 0x1;
  }
  for (var i = len; i < pc2table.length; i++) {
    outR <<= 1;
    outR |= (inR >>> pc2table[i]) & 0x1;
  }

  out[off + 0] = outL >>> 0;
  out[off + 1] = outR >>> 0;
};

exports.expand = function expand(r, out, off) {
  var outL = 0;
  var outR = 0;

  outL = ((r & 1) << 5) | (r >>> 27);
  for (var i = 23; i >= 15; i -= 4) {
    outL <<= 6;
    outL |= (r >>> i) & 0x3f;
  }
  for (var i = 11; i >= 3; i -= 4) {
    outR |= (r >>> i) & 0x3f;
    outR <<= 6;
  }
  outR |= ((r & 0x1f) << 1) | (r >>> 31);

  out[off + 0] = outL >>> 0;
  out[off + 1] = outR >>> 0;
};

var sTable = [
  14, 0, 4, 15, 13, 7, 1, 4, 2, 14, 15, 2, 11, 13, 8, 1,
  3, 10, 10, 6, 6, 12, 12, 11, 5, 9, 9, 5, 0, 3, 7, 8,
  4, 15, 1, 12, 14, 8, 8, 2, 13, 4, 6, 9, 2, 1, 11, 7,
  15, 5, 12, 11, 9, 3, 7, 14, 3, 10, 10, 0, 5, 6, 0, 13,

  15, 3, 1, 13, 8, 4, 14, 7, 6, 15, 11, 2, 3, 8, 4, 14,
  9, 12, 7, 0, 2, 1, 13, 10, 12, 6, 0, 9, 5, 11, 10, 5,
  0, 13, 14, 8, 7, 10, 11, 1, 10, 3, 4, 15, 13, 4, 1, 2,
  5, 11, 8, 6, 12, 7, 6, 12, 9, 0, 3, 5, 2, 14, 15, 9,

  10, 13, 0, 7, 9, 0, 14, 9, 6, 3, 3, 4, 15, 6, 5, 10,
  1, 2, 13, 8, 12, 5, 7, 14, 11, 12, 4, 11, 2, 15, 8, 1,
  13, 1, 6, 10, 4, 13, 9, 0, 8, 6, 15, 9, 3, 8, 0, 7,
  11, 4, 1, 15, 2, 14, 12, 3, 5, 11, 10, 5, 14, 2, 7, 12,

  7, 13, 13, 8, 14, 11, 3, 5, 0, 6, 6, 15, 9, 0, 10, 3,
  1, 4, 2, 7, 8, 2, 5, 12, 11, 1, 12, 10, 4, 14, 15, 9,
  10, 3, 6, 15, 9, 0, 0, 6, 12, 10, 11, 1, 7, 13, 13, 8,
  15, 9, 1, 4, 3, 5, 14, 11, 5, 12, 2, 7, 8, 2, 4, 14,

  2, 14, 12, 11, 4, 2, 1, 12, 7, 4, 10, 7, 11, 13, 6, 1,
  8, 5, 5, 0, 3, 15, 15, 10, 13, 3, 0, 9, 14, 8, 9, 6,
  4, 11, 2, 8, 1, 12, 11, 7, 10, 1, 13, 14, 7, 2, 8, 13,
  15, 6, 9, 15, 12, 0, 5, 9, 6, 10, 3, 4, 0, 5, 14, 3,

  12, 10, 1, 15, 10, 4, 15, 2, 9, 7, 2, 12, 6, 9, 8, 5,
  0, 6, 13, 1, 3, 13, 4, 14, 14, 0, 7, 11, 5, 3, 11, 8,
  9, 4, 14, 3, 15, 2, 5, 12, 2, 9, 8, 5, 12, 15, 3, 10,
  7, 11, 0, 14, 4, 1, 10, 7, 1, 6, 13, 0, 11, 8, 6, 13,

  4, 13, 11, 0, 2, 11, 14, 7, 15, 4, 0, 9, 8, 1, 13, 10,
  3, 14, 12, 3, 9, 5, 7, 12, 5, 2, 10, 15, 6, 8, 1, 6,
  1, 6, 4, 11, 11, 13, 13, 8, 12, 1, 3, 4, 7, 10, 14, 7,
  10, 9, 15, 5, 6, 0, 8, 15, 0, 14, 5, 2, 9, 3, 2, 12,

  13, 1, 2, 15, 8, 13, 4, 8, 6, 10, 15, 3, 11, 7, 1, 4,
  10, 12, 9, 5, 3, 6, 14, 11, 5, 0, 0, 14, 12, 9, 7, 2,
  7, 2, 11, 1, 4, 14, 1, 7, 9, 4, 12, 10, 14, 8, 2, 13,
  0, 15, 6, 12, 10, 9, 13, 0, 15, 3, 3, 5, 5, 6, 8, 11
];

exports.substitute = function substitute(inL, inR) {
  var out = 0;
  for (var i = 0; i < 4; i++) {
    var b = (inL >>> (18 - i * 6)) & 0x3f;
    var sb = sTable[i * 0x40 + b];

    out <<= 4;
    out |= sb;
  }
  for (var i = 0; i < 4; i++) {
    var b = (inR >>> (18 - i * 6)) & 0x3f;
    var sb = sTable[4 * 0x40 + i * 0x40 + b];

    out <<= 4;
    out |= sb;
  }
  return out >>> 0;
};

var permuteTable = [
  16, 25, 12, 11, 3, 20, 4, 15, 31, 17, 9, 6, 27, 14, 1, 22,
  30, 24, 8, 18, 0, 5, 29, 23, 13, 19, 2, 26, 10, 21, 28, 7
];

exports.permute = function permute(num) {
  var out = 0;
  for (var i = 0; i < permuteTable.length; i++) {
    out <<= 1;
    out |= (num >>> permuteTable[i]) & 0x1;
  }
  return out >>> 0;
};

exports.padSplit = function padSplit(num, size, group) {
  var str = num.toString(2);
  while (str.length < size)
    str = '0' + str;

  var out = [];
  for (var i = 0; i < size; i += group)
    out.push(str.slice(i, i + group));
  return out.join(' ');
};


/***/ }),

/***/ "./node_modules/diffie-hellman/browser.js":
/*!************************************************!*\
  !*** ./node_modules/diffie-hellman/browser.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

var generatePrime = __webpack_require__(/*! ./lib/generatePrime */ "./node_modules/diffie-hellman/lib/generatePrime.js")
var primes = __webpack_require__(/*! ./lib/primes.json */ "./node_modules/diffie-hellman/lib/primes.json")

var DH = __webpack_require__(/*! ./lib/dh */ "./node_modules/diffie-hellman/lib/dh.js")

function getDiffieHellman (mod) {
  var prime = new Buffer(primes[mod].prime, 'hex')
  var gen = new Buffer(primes[mod].gen, 'hex')

  return new DH(prime, gen)
}

var ENCODINGS = {
  'binary': true, 'hex': true, 'base64': true
}

function createDiffieHellman (prime, enc, generator, genc) {
  if (Buffer.isBuffer(enc) || ENCODINGS[enc] === undefined) {
    return createDiffieHellman(prime, 'binary', enc, generator)
  }

  enc = enc || 'binary'
  genc = genc || 'binary'
  generator = generator || new Buffer([2])

  if (!Buffer.isBuffer(generator)) {
    generator = new Buffer(generator, genc)
  }

  if (typeof prime === 'number') {
    return new DH(generatePrime(prime, generator), generator, true)
  }

  if (!Buffer.isBuffer(prime)) {
    prime = new Buffer(prime, enc)
  }

  return new DH(prime, generator, true)
}

exports.DiffieHellmanGroup = exports.createDiffieHellmanGroup = exports.getDiffieHellman = getDiffieHellman
exports.createDiffieHellman = exports.DiffieHellman = createDiffieHellman


/***/ }),

/***/ "./node_modules/diffie-hellman/lib/dh.js":
/*!***********************************************!*\
  !*** ./node_modules/diffie-hellman/lib/dh.js ***!
  \***********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var BN = __webpack_require__(/*! bn.js */ "./node_modules/bn.js/lib/bn.js");
var MillerRabin = __webpack_require__(/*! miller-rabin */ "./node_modules/miller-rabin/lib/mr.js");
var millerRabin = new MillerRabin();
var TWENTYFOUR = new BN(24);
var ELEVEN = new BN(11);
var TEN = new BN(10);
var THREE = new BN(3);
var SEVEN = new BN(7);
var primes = __webpack_require__(/*! ./generatePrime */ "./node_modules/diffie-hellman/lib/generatePrime.js");
var randomBytes = __webpack_require__(/*! randombytes */ "./node_modules/randombytes/browser.js");
module.exports = DH;

function setPublicKey(pub, enc) {
  enc = enc || 'utf8';
  if (!Buffer.isBuffer(pub)) {
    pub = new Buffer(pub, enc);
  }
  this._pub = new BN(pub);
  return this;
}

function setPrivateKey(priv, enc) {
  enc = enc || 'utf8';
  if (!Buffer.isBuffer(priv)) {
    priv = new Buffer(priv, enc);
  }
  this._priv = new BN(priv);
  return this;
}

var primeCache = {};
function checkPrime(prime, generator) {
  var gen = generator.toString('hex');
  var hex = [gen, prime.toString(16)].join('_');
  if (hex in primeCache) {
    return primeCache[hex];
  }
  var error = 0;

  if (prime.isEven() ||
    !primes.simpleSieve ||
    !primes.fermatTest(prime) ||
    !millerRabin.test(prime)) {
    //not a prime so +1
    error += 1;

    if (gen === '02' || gen === '05') {
      // we'd be able to check the generator
      // it would fail so +8
      error += 8;
    } else {
      //we wouldn't be able to test the generator
      // so +4
      error += 4;
    }
    primeCache[hex] = error;
    return error;
  }
  if (!millerRabin.test(prime.shrn(1))) {
    //not a safe prime
    error += 2;
  }
  var rem;
  switch (gen) {
    case '02':
      if (prime.mod(TWENTYFOUR).cmp(ELEVEN)) {
        // unsuidable generator
        error += 8;
      }
      break;
    case '05':
      rem = prime.mod(TEN);
      if (rem.cmp(THREE) && rem.cmp(SEVEN)) {
        // prime mod 10 needs to equal 3 or 7
        error += 8;
      }
      break;
    default:
      error += 4;
  }
  primeCache[hex] = error;
  return error;
}

function DH(prime, generator, malleable) {
  this.setGenerator(generator);
  this.__prime = new BN(prime);
  this._prime = BN.mont(this.__prime);
  this._primeLen = prime.length;
  this._pub = undefined;
  this._priv = undefined;
  this._primeCode = undefined;
  if (malleable) {
    this.setPublicKey = setPublicKey;
    this.setPrivateKey = setPrivateKey;
  } else {
    this._primeCode = 8;
  }
}
Object.defineProperty(DH.prototype, 'verifyError', {
  enumerable: true,
  get: function () {
    if (typeof this._primeCode !== 'number') {
      this._primeCode = checkPrime(this.__prime, this.__gen);
    }
    return this._primeCode;
  }
});
DH.prototype.generateKeys = function () {
  if (!this._priv) {
    this._priv = new BN(randomBytes(this._primeLen));
  }
  this._pub = this._gen.toRed(this._prime).redPow(this._priv).fromRed();
  return this.getPublicKey();
};

DH.prototype.computeSecret = function (other) {
  other = new BN(other);
  other = other.toRed(this._prime);
  var secret = other.redPow(this._priv).fromRed();
  var out = new Buffer(secret.toArray());
  var prime = this.getPrime();
  if (out.length < prime.length) {
    var front = new Buffer(prime.length - out.length);
    front.fill(0);
    out = Buffer.concat([front, out]);
  }
  return out;
};

DH.prototype.getPublicKey = function getPublicKey(enc) {
  return formatReturnValue(this._pub, enc);
};

DH.prototype.getPrivateKey = function getPrivateKey(enc) {
  return formatReturnValue(this._priv, enc);
};

DH.prototype.getPrime = function (enc) {
  return formatReturnValue(this.__prime, enc);
};

DH.prototype.getGenerator = function (enc) {
  return formatReturnValue(this._gen, enc);
};

DH.prototype.setGenerator = function (gen, enc) {
  enc = enc || 'utf8';
  if (!Buffer.isBuffer(gen)) {
    gen = new Buffer(gen, enc);
  }
  this.__gen = gen;
  this._gen = new BN(gen);
  return this;
};

function formatReturnValue(bn, enc) {
  var buf = new Buffer(bn.toArray());
  if (!enc) {
    return buf;
  } else {
    return buf.toString(enc);
  }
}


/***/ }),

/***/ "./node_modules/diffie-hellman/lib/generatePrime.js":
/*!**********************************************************!*\
  !*** ./node_modules/diffie-hellman/lib/generatePrime.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var randomBytes = __webpack_require__(/*! randombytes */ "./node_modules/randombytes/browser.js");
module.exports = findPrime;
findPrime.simpleSieve = simpleSieve;
findPrime.fermatTest = fermatTest;
var BN = __webpack_require__(/*! bn.js */ "./node_modules/bn.js/lib/bn.js");
var TWENTYFOUR = new BN(24);
var MillerRabin = __webpack_require__(/*! miller-rabin */ "./node_modules/miller-rabin/lib/mr.js");
var millerRabin = new MillerRabin();
var ONE = new BN(1);
var TWO = new BN(2);
var FIVE = new BN(5);
var SIXTEEN = new BN(16);
var EIGHT = new BN(8);
var TEN = new BN(10);
var THREE = new BN(3);
var SEVEN = new BN(7);
var ELEVEN = new BN(11);
var FOUR = new BN(4);
var TWELVE = new BN(12);
var primes = null;

function _getPrimes() {
  if (primes !== null)
    return primes;

  var limit = 0x100000;
  var res = [];
  res[0] = 2;
  for (var i = 1, k = 3; k < limit; k += 2) {
    var sqrt = Math.ceil(Math.sqrt(k));
    for (var j = 0; j < i && res[j] <= sqrt; j++)
      if (k % res[j] === 0)
        break;

    if (i !== j && res[j] <= sqrt)
      continue;

    res[i++] = k;
  }
  primes = res;
  return res;
}

function simpleSieve(p) {
  var primes = _getPrimes();

  for (var i = 0; i < primes.length; i++)
    if (p.modn(primes[i]) === 0) {
      if (p.cmpn(primes[i]) === 0) {
        return true;
      } else {
        return false;
      }
    }

  return true;
}

function fermatTest(p) {
  var red = BN.mont(p);
  return TWO.toRed(red).redPow(p.subn(1)).fromRed().cmpn(1) === 0;
}

function findPrime(bits, gen) {
  if (bits < 16) {
    // this is what openssl does
    if (gen === 2 || gen === 5) {
      return new BN([0x8c, 0x7b]);
    } else {
      return new BN([0x8c, 0x27]);
    }
  }
  gen = new BN(gen);

  var num, n2;

  while (true) {
    num = new BN(randomBytes(Math.ceil(bits / 8)));
    while (num.bitLength() > bits) {
      num.ishrn(1);
    }
    if (num.isEven()) {
      num.iadd(ONE);
    }
    if (!num.testn(1)) {
      num.iadd(TWO);
    }
    if (!gen.cmp(TWO)) {
      while (num.mod(TWENTYFOUR).cmp(ELEVEN)) {
        num.iadd(FOUR);
      }
    } else if (!gen.cmp(FIVE)) {
      while (num.mod(TEN).cmp(THREE)) {
        num.iadd(FOUR);
      }
    }
    n2 = num.shrn(1);
    if (simpleSieve(n2) && simpleSieve(num) &&
      fermatTest(n2) && fermatTest(num) &&
      millerRabin.test(n2) && millerRabin.test(num)) {
      return num;
    }
  }

}


/***/ }),

/***/ "./node_modules/elliptic/lib/elliptic.js":
/*!***********************************************!*\
  !*** ./node_modules/elliptic/lib/elliptic.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


var elliptic = exports;

elliptic.version = __webpack_require__(/*! ../package.json */ "./node_modules/elliptic/package.json").version;
elliptic.utils = __webpack_require__(/*! ./elliptic/utils */ "./node_modules/elliptic/lib/elliptic/utils.js");
elliptic.rand = __webpack_require__(/*! brorand */ "./node_modules/brorand/index.js");
elliptic.curve = __webpack_require__(/*! ./elliptic/curve */ "./node_modules/elliptic/lib/elliptic/curve/index.js");
elliptic.curves = __webpack_require__(/*! ./elliptic/curves */ "./node_modules/elliptic/lib/elliptic/curves.js");

// Protocols
elliptic.ec = __webpack_require__(/*! ./elliptic/ec */ "./node_modules/elliptic/lib/elliptic/ec/index.js");
elliptic.eddsa = __webpack_require__(/*! ./elliptic/eddsa */ "./node_modules/elliptic/lib/elliptic/eddsa/index.js");


/***/ }),

/***/ "./node_modules/elliptic/lib/elliptic/curve/base.js":
/*!**********************************************************!*\
  !*** ./node_modules/elliptic/lib/elliptic/curve/base.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var BN = __webpack_require__(/*! bn.js */ "./node_modules/bn.js/lib/bn.js");
var utils = __webpack_require__(/*! ../utils */ "./node_modules/elliptic/lib/elliptic/utils.js");
var getNAF = utils.getNAF;
var getJSF = utils.getJSF;
var assert = utils.assert;

function BaseCurve(type, conf) {
  this.type = type;
  this.p = new BN(conf.p, 16);

  // Use Montgomery, when there is no fast reduction for the prime
  this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p);

  // Useful for many curves
  this.zero = new BN(0).toRed(this.red);
  this.one = new BN(1).toRed(this.red);
  this.two = new BN(2).toRed(this.red);

  // Curve configuration, optional
  this.n = conf.n && new BN(conf.n, 16);
  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);

  // Temporary arrays
  this._wnafT1 = new Array(4);
  this._wnafT2 = new Array(4);
  this._wnafT3 = new Array(4);
  this._wnafT4 = new Array(4);

  this._bitLength = this.n ? this.n.bitLength() : 0;

  // Generalized Greg Maxwell's trick
  var adjustCount = this.n && this.p.div(this.n);
  if (!adjustCount || adjustCount.cmpn(100) > 0) {
    this.redN = null;
  } else {
    this._maxwellTrick = true;
    this.redN = this.n.toRed(this.red);
  }
}
module.exports = BaseCurve;

BaseCurve.prototype.point = function point() {
  throw new Error('Not implemented');
};

BaseCurve.prototype.validate = function validate() {
  throw new Error('Not implemented');
};

BaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {
  assert(p.precomputed);
  var doubles = p._getDoubles();

  var naf = getNAF(k, 1, this._bitLength);
  var I = (1 << (doubles.step + 1)) - (doubles.step % 2 === 0 ? 2 : 1);
  I /= 3;

  // Translate into more windowed form
  var repr = [];
  var j;
  var nafW;
  for (j = 0; j < naf.length; j += doubles.step) {
    nafW = 0;
    for (var l = j + doubles.step - 1; l >= j; l--)
      nafW = (nafW << 1) + naf[l];
    repr.push(nafW);
  }

  var a = this.jpoint(null, null, null);
  var b = this.jpoint(null, null, null);
  for (var i = I; i > 0; i--) {
    for (j = 0; j < repr.length; j++) {
      nafW = repr[j];
      if (nafW === i)
        b = b.mixedAdd(doubles.points[j]);
      else if (nafW === -i)
        b = b.mixedAdd(doubles.points[j].neg());
    }
    a = a.add(b);
  }
  return a.toP();
};

BaseCurve.prototype._wnafMul = function _wnafMul(p, k) {
  var w = 4;

  // Precompute window
  var nafPoints = p._getNAFPoints(w);
  w = nafPoints.wnd;
  var wnd = nafPoints.points;

  // Get NAF form
  var naf = getNAF(k, w, this._bitLength);

  // Add `this`*(N+1) for every w-NAF index
  var acc = this.jpoint(null, null, null);
  for (var i = naf.length - 1; i >= 0; i--) {
    // Count zeroes
    for (var l = 0; i >= 0 && naf[i] === 0; i--)
      l++;
    if (i >= 0)
      l++;
    acc = acc.dblp(l);

    if (i < 0)
      break;
    var z = naf[i];
    assert(z !== 0);
    if (p.type === 'affine') {
      // J +- P
      if (z > 0)
        acc = acc.mixedAdd(wnd[(z - 1) >> 1]);
      else
        acc = acc.mixedAdd(wnd[(-z - 1) >> 1].neg());
    } else {
      // J +- J
      if (z > 0)
        acc = acc.add(wnd[(z - 1) >> 1]);
      else
        acc = acc.add(wnd[(-z - 1) >> 1].neg());
    }
  }
  return p.type === 'affine' ? acc.toP() : acc;
};

BaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW,
  points,
  coeffs,
  len,
  jacobianResult) {
  var wndWidth = this._wnafT1;
  var wnd = this._wnafT2;
  var naf = this._wnafT3;

  // Fill all arrays
  var max = 0;
  var i;
  var j;
  var p;
  for (i = 0; i < len; i++) {
    p = points[i];
    var nafPoints = p._getNAFPoints(defW);
    wndWidth[i] = nafPoints.wnd;
    wnd[i] = nafPoints.points;
  }

  // Comb small window NAFs
  for (i = len - 1; i >= 1; i -= 2) {
    var a = i - 1;
    var b = i;
    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {
      naf[a] = getNAF(coeffs[a], wndWidth[a], this._bitLength);
      naf[b] = getNAF(coeffs[b], wndWidth[b], this._bitLength);
      max = Math.max(naf[a].length, max);
      max = Math.max(naf[b].length, max);
      continue;
    }

    var comb = [
      points[a], /* 1 */
      null, /* 3 */
      null, /* 5 */
      points[b], /* 7 */
    ];

    // Try to avoid Projective points, if possible
    if (points[a].y.cmp(points[b].y) === 0) {
      comb[1] = points[a].add(points[b]);
      comb[2] = points[a].toJ().mixedAdd(points[b].neg());
    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {
      comb[1] = points[a].toJ().mixedAdd(points[b]);
      comb[2] = points[a].add(points[b].neg());
    } else {
      comb[1] = points[a].toJ().mixedAdd(points[b]);
      comb[2] = points[a].toJ().mixedAdd(points[b].neg());
    }

    var index = [
      -3, /* -1 -1 */
      -1, /* -1 0 */
      -5, /* -1 1 */
      -7, /* 0 -1 */
      0, /* 0 0 */
      7, /* 0 1 */
      5, /* 1 -1 */
      1, /* 1 0 */
      3,  /* 1 1 */
    ];

    var jsf = getJSF(coeffs[a], coeffs[b]);
    max = Math.max(jsf[0].length, max);
    naf[a] = new Array(max);
    naf[b] = new Array(max);
    for (j = 0; j < max; j++) {
      var ja = jsf[0][j] | 0;
      var jb = jsf[1][j] | 0;

      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];
      naf[b][j] = 0;
      wnd[a] = comb;
    }
  }

  var acc = this.jpoint(null, null, null);
  var tmp = this._wnafT4;
  for (i = max; i >= 0; i--) {
    var k = 0;

    while (i >= 0) {
      var zero = true;
      for (j = 0; j < len; j++) {
        tmp[j] = naf[j][i] | 0;
        if (tmp[j] !== 0)
          zero = false;
      }
      if (!zero)
        break;
      k++;
      i--;
    }
    if (i >= 0)
      k++;
    acc = acc.dblp(k);
    if (i < 0)
      break;

    for (j = 0; j < len; j++) {
      var z = tmp[j];
      p;
      if (z === 0)
        continue;
      else if (z > 0)
        p = wnd[j][(z - 1) >> 1];
      else if (z < 0)
        p = wnd[j][(-z - 1) >> 1].neg();

      if (p.type === 'affine')
        acc = acc.mixedAdd(p);
      else
        acc = acc.add(p);
    }
  }
  // Zeroify references
  for (i = 0; i < len; i++)
    wnd[i] = null;

  if (jacobianResult)
    return acc;
  else
    return acc.toP();
};

function BasePoint(curve, type) {
  this.curve = curve;
  this.type = type;
  this.precomputed = null;
}
BaseCurve.BasePoint = BasePoint;

BasePoint.prototype.eq = function eq(/*other*/) {
  throw new Error('Not implemented');
};

BasePoint.prototype.validate = function validate() {
  return this.curve.validate(this);
};

BaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {
  bytes = utils.toArray(bytes, enc);

  var len = this.p.byteLength();

  // uncompressed, hybrid-odd, hybrid-even
  if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) &&
      bytes.length - 1 === 2 * len) {
    if (bytes[0] === 0x06)
      assert(bytes[bytes.length - 1] % 2 === 0);
    else if (bytes[0] === 0x07)
      assert(bytes[bytes.length - 1] % 2 === 1);

    var res =  this.point(bytes.slice(1, 1 + len),
      bytes.slice(1 + len, 1 + 2 * len));

    return res;
  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) &&
              bytes.length - 1 === len) {
    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);
  }
  throw new Error('Unknown point format');
};

BasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {
  return this.encode(enc, true);
};

BasePoint.prototype._encode = function _encode(compact) {
  var len = this.curve.p.byteLength();
  var x = this.getX().toArray('be', len);

  if (compact)
    return [ this.getY().isEven() ? 0x02 : 0x03 ].concat(x);

  return [ 0x04 ].concat(x, this.getY().toArray('be', len));
};

BasePoint.prototype.encode = function encode(enc, compact) {
  return utils.encode(this._encode(compact), enc);
};

BasePoint.prototype.precompute = function precompute(power) {
  if (this.precomputed)
    return this;

  var precomputed = {
    doubles: null,
    naf: null,
    beta: null,
  };
  precomputed.naf = this._getNAFPoints(8);
  precomputed.doubles = this._getDoubles(4, power);
  precomputed.beta = this._getBeta();
  this.precomputed = precomputed;

  return this;
};

BasePoint.prototype._hasDoubles = function _hasDoubles(k) {
  if (!this.precomputed)
    return false;

  var doubles = this.precomputed.doubles;
  if (!doubles)
    return false;

  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);
};

BasePoint.prototype._getDoubles = function _getDoubles(step, power) {
  if (this.precomputed && this.precomputed.doubles)
    return this.precomputed.doubles;

  var doubles = [ this ];
  var acc = this;
  for (var i = 0; i < power; i += step) {
    for (var j = 0; j < step; j++)
      acc = acc.dbl();
    doubles.push(acc);
  }
  return {
    step: step,
    points: doubles,
  };
};

BasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {
  if (this.precomputed && this.precomputed.naf)
    return this.precomputed.naf;

  var res = [ this ];
  var max = (1 << wnd) - 1;
  var dbl = max === 1 ? null : this.dbl();
  for (var i = 1; i < max; i++)
    res[i] = res[i - 1].add(dbl);
  return {
    wnd: wnd,
    points: res,
  };
};

BasePoint.prototype._getBeta = function _getBeta() {
  return null;
};

BasePoint.prototype.dblp = function dblp(k) {
  var r = this;
  for (var i = 0; i < k; i++)
    r = r.dbl();
  return r;
};


/***/ }),

/***/ "./node_modules/elliptic/lib/elliptic/curve/edwards.js":
/*!*************************************************************!*\
  !*** ./node_modules/elliptic/lib/elliptic/curve/edwards.js ***!
  \*************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(/*! ../utils */ "./node_modules/elliptic/lib/elliptic/utils.js");
var BN = __webpack_require__(/*! bn.js */ "./node_modules/bn.js/lib/bn.js");
var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js");
var Base = __webpack_require__(/*! ./base */ "./node_modules/elliptic/lib/elliptic/curve/base.js");

var assert = utils.assert;

function EdwardsCurve(conf) {
  // NOTE: Important as we are creating point in Base.call()
  this.twisted = (conf.a | 0) !== 1;
  this.mOneA = this.twisted && (conf.a | 0) === -1;
  this.extended = this.mOneA;

  Base.call(this, 'edwards', conf);

  this.a = new BN(conf.a, 16).umod(this.red.m);
  this.a = this.a.toRed(this.red);
  this.c = new BN(conf.c, 16).toRed(this.red);
  this.c2 = this.c.redSqr();
  this.d = new BN(conf.d, 16).toRed(this.red);
  this.dd = this.d.redAdd(this.d);

  assert(!this.twisted || this.c.fromRed().cmpn(1) === 0);
  this.oneC = (conf.c | 0) === 1;
}
inherits(EdwardsCurve, Base);
module.exports = EdwardsCurve;

EdwardsCurve.prototype._mulA = function _mulA(num) {
  if (this.mOneA)
    return num.redNeg();
  else
    return this.a.redMul(num);
};

EdwardsCurve.prototype._mulC = function _mulC(num) {
  if (this.oneC)
    return num;
  else
    return this.c.redMul(num);
};

// Just for compatibility with Short curve
EdwardsCurve.prototype.jpoint = function jpoint(x, y, z, t) {
  return this.point(x, y, z, t);
};

EdwardsCurve.prototype.pointFromX = function pointFromX(x, odd) {
  x = new BN(x, 16);
  if (!x.red)
    x = x.toRed(this.red);

  var x2 = x.redSqr();
  var rhs = this.c2.redSub(this.a.redMul(x2));
  var lhs = this.one.redSub(this.c2.redMul(this.d).redMul(x2));

  var y2 = rhs.redMul(lhs.redInvm());
  var y = y2.redSqrt();
  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)
    throw new Error('invalid point');

  var isOdd = y.fromRed().isOdd();
  if (odd && !isOdd || !odd && isOdd)
    y = y.redNeg();

  return this.point(x, y);
};

EdwardsCurve.prototype.pointFromY = function pointFromY(y, odd) {
  y = new BN(y, 16);
  if (!y.red)
    y = y.toRed(this.red);

  // x^2 = (y^2 - c^2) / (c^2 d y^2 - a)
  var y2 = y.redSqr();
  var lhs = y2.redSub(this.c2);
  var rhs = y2.redMul(this.d).redMul(this.c2).redSub(this.a);
  var x2 = lhs.redMul(rhs.redInvm());

  if (x2.cmp(this.zero) === 0) {
    if (odd)
      throw new Error('invalid point');
    else
      return this.point(this.zero, y);
  }

  var x = x2.redSqrt();
  if (x.redSqr().redSub(x2).cmp(this.zero) !== 0)
    throw new Error('invalid point');

  if (x.fromRed().isOdd() !== odd)
    x = x.redNeg();

  return this.point(x, y);
};

EdwardsCurve.prototype.validate = function validate(point) {
  if (point.isInfinity())
    return true;

  // Curve: A * X^2 + Y^2 = C^2 * (1 + D * X^2 * Y^2)
  point.normalize();

  var x2 = point.x.redSqr();
  var y2 = point.y.redSqr();
  var lhs = x2.redMul(this.a).redAdd(y2);
  var rhs = this.c2.redMul(this.one.redAdd(this.d.redMul(x2).redMul(y2)));

  return lhs.cmp(rhs) === 0;
};

function Point(curve, x, y, z, t) {
  Base.BasePoint.call(this, curve, 'projective');
  if (x === null && y === null && z === null) {
    this.x = this.curve.zero;
    this.y = this.curve.one;
    this.z = this.curve.one;
    this.t = this.curve.zero;
    this.zOne = true;
  } else {
    this.x = new BN(x, 16);
    this.y = new BN(y, 16);
    this.z = z ? new BN(z, 16) : this.curve.one;
    this.t = t && new BN(t, 16);
    if (!this.x.red)
      this.x = this.x.toRed(this.curve.red);
    if (!this.y.red)
      this.y = this.y.toRed(this.curve.red);
    if (!this.z.red)
      this.z = this.z.toRed(this.curve.red);
    if (this.t && !this.t.red)
      this.t = this.t.toRed(this.curve.red);
    this.zOne = this.z === this.curve.one;

    // Use extended coordinates
    if (this.curve.extended && !this.t) {
      this.t = this.x.redMul(this.y);
      if (!this.zOne)
        this.t = this.t.redMul(this.z.redInvm());
    }
  }
}
inherits(Point, Base.BasePoint);

EdwardsCurve.prototype.pointFromJSON = function pointFromJSON(obj) {
  return Point.fromJSON(this, obj);
};

EdwardsCurve.prototype.point = function point(x, y, z, t) {
  return new Point(this, x, y, z, t);
};

Point.fromJSON = function fromJSON(curve, obj) {
  return new Point(curve, obj[0], obj[1], obj[2]);
};

Point.prototype.inspect = function inspect() {
  if (this.isInfinity())
    return '<EC Point Infinity>';
  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +
      ' y: ' + this.y.fromRed().toString(16, 2) +
      ' z: ' + this.z.fromRed().toString(16, 2) + '>';
};

Point.prototype.isInfinity = function isInfinity() {
  // XXX This code assumes that zero is always zero in red
  return this.x.cmpn(0) === 0 &&
    (this.y.cmp(this.z) === 0 ||
    (this.zOne && this.y.cmp(this.curve.c) === 0));
};

Point.prototype._extDbl = function _extDbl() {
  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html
  //     #doubling-dbl-2008-hwcd
  // 4M + 4S

  // A = X1^2
  var a = this.x.redSqr();
  // B = Y1^2
  var b = this.y.redSqr();
  // C = 2 * Z1^2
  var c = this.z.redSqr();
  c = c.redIAdd(c);
  // D = a * A
  var d = this.curve._mulA(a);
  // E = (X1 + Y1)^2 - A - B
  var e = this.x.redAdd(this.y).redSqr().redISub(a).redISub(b);
  // G = D + B
  var g = d.redAdd(b);
  // F = G - C
  var f = g.redSub(c);
  // H = D - B
  var h = d.redSub(b);
  // X3 = E * F
  var nx = e.redMul(f);
  // Y3 = G * H
  var ny = g.redMul(h);
  // T3 = E * H
  var nt = e.redMul(h);
  // Z3 = F * G
  var nz = f.redMul(g);
  return this.curve.point(nx, ny, nz, nt);
};

Point.prototype._projDbl = function _projDbl() {
  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html
  //     #doubling-dbl-2008-bbjlp
  //     #doubling-dbl-2007-bl
  // and others
  // Generally 3M + 4S or 2M + 4S

  // B = (X1 + Y1)^2
  var b = this.x.redAdd(this.y).redSqr();
  // C = X1^2
  var c = this.x.redSqr();
  // D = Y1^2
  var d = this.y.redSqr();

  var nx;
  var ny;
  var nz;
  var e;
  var h;
  var j;
  if (this.curve.twisted) {
    // E = a * C
    e = this.curve._mulA(c);
    // F = E + D
    var f = e.redAdd(d);
    if (this.zOne) {
      // X3 = (B - C - D) * (F - 2)
      nx = b.redSub(c).redSub(d).redMul(f.redSub(this.curve.two));
      // Y3 = F * (E - D)
      ny = f.redMul(e.redSub(d));
      // Z3 = F^2 - 2 * F
      nz = f.redSqr().redSub(f).redSub(f);
    } else {
      // H = Z1^2
      h = this.z.redSqr();
      // J = F - 2 * H
      j = f.redSub(h).redISub(h);
      // X3 = (B-C-D)*J
      nx = b.redSub(c).redISub(d).redMul(j);
      // Y3 = F * (E - D)
      ny = f.redMul(e.redSub(d));
      // Z3 = F * J
      nz = f.redMul(j);
    }
  } else {
    // E = C + D
    e = c.redAdd(d);
    // H = (c * Z1)^2
    h = this.curve._mulC(this.z).redSqr();
    // J = E - 2 * H
    j = e.redSub(h).redSub(h);
    // X3 = c * (B - E) * J
    nx = this.curve._mulC(b.redISub(e)).redMul(j);
    // Y3 = c * E * (C - D)
    ny = this.curve._mulC(e).redMul(c.redISub(d));
    // Z3 = E * J
    nz = e.redMul(j);
  }
  return this.curve.point(nx, ny, nz);
};

Point.prototype.dbl = function dbl() {
  if (this.isInfinity())
    return this;

  // Double in extended coordinates
  if (this.curve.extended)
    return this._extDbl();
  else
    return this._projDbl();
};

Point.prototype._extAdd = function _extAdd(p) {
  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html
  //     #addition-add-2008-hwcd-3
  // 8M

  // A = (Y1 - X1) * (Y2 - X2)
  var a = this.y.redSub(this.x).redMul(p.y.redSub(p.x));
  // B = (Y1 + X1) * (Y2 + X2)
  var b = this.y.redAdd(this.x).redMul(p.y.redAdd(p.x));
  // C = T1 * k * T2
  var c = this.t.redMul(this.curve.dd).redMul(p.t);
  // D = Z1 * 2 * Z2
  var d = this.z.redMul(p.z.redAdd(p.z));
  // E = B - A
  var e = b.redSub(a);
  // F = D - C
  var f = d.redSub(c);
  // G = D + C
  var g = d.redAdd(c);
  // H = B + A
  var h = b.redAdd(a);
  // X3 = E * F
  var nx = e.redMul(f);
  // Y3 = G * H
  var ny = g.redMul(h);
  // T3 = E * H
  var nt = e.redMul(h);
  // Z3 = F * G
  var nz = f.redMul(g);
  return this.curve.point(nx, ny, nz, nt);
};

Point.prototype._projAdd = function _projAdd(p) {
  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html
  //     #addition-add-2008-bbjlp
  //     #addition-add-2007-bl
  // 10M + 1S

  // A = Z1 * Z2
  var a = this.z.redMul(p.z);
  // B = A^2
  var b = a.redSqr();
  // C = X1 * X2
  var c = this.x.redMul(p.x);
  // D = Y1 * Y2
  var d = this.y.redMul(p.y);
  // E = d * C * D
  var e = this.curve.d.redMul(c).redMul(d);
  // F = B - E
  var f = b.redSub(e);
  // G = B + E
  var g = b.redAdd(e);
  // X3 = A * F * ((X1 + Y1) * (X2 + Y2) - C - D)
  var tmp = this.x.redAdd(this.y).redMul(p.x.redAdd(p.y)).redISub(c).redISub(d);
  var nx = a.redMul(f).redMul(tmp);
  var ny;
  var nz;
  if (this.curve.twisted) {
    // Y3 = A * G * (D - a * C)
    ny = a.redMul(g).redMul(d.redSub(this.curve._mulA(c)));
    // Z3 = F * G
    nz = f.redMul(g);
  } else {
    // Y3 = A * G * (D - C)
    ny = a.redMul(g).redMul(d.redSub(c));
    // Z3 = c * F * G
    nz = this.curve._mulC(f).redMul(g);
  }
  return this.curve.point(nx, ny, nz);
};

Point.prototype.add = function add(p) {
  if (this.isInfinity())
    return p;
  if (p.isInfinity())
    return this;

  if (this.curve.extended)
    return this._extAdd(p);
  else
    return this._projAdd(p);
};

Point.prototype.mul = function mul(k) {
  if (this._hasDoubles(k))
    return this.curve._fixedNafMul(this, k);
  else
    return this.curve._wnafMul(this, k);
};

Point.prototype.mulAdd = function mulAdd(k1, p, k2) {
  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, false);
};

Point.prototype.jmulAdd = function jmulAdd(k1, p, k2) {
  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, true);
};

Point.prototype.normalize = function normalize() {
  if (this.zOne)
    return this;

  // Normalize coordinates
  var zi = this.z.redInvm();
  this.x = this.x.redMul(zi);
  this.y = this.y.redMul(zi);
  if (this.t)
    this.t = this.t.redMul(zi);
  this.z = this.curve.one;
  this.zOne = true;
  return this;
};

Point.prototype.neg = function neg() {
  return this.curve.point(this.x.redNeg(),
    this.y,
    this.z,
    this.t && this.t.redNeg());
};

Point.prototype.getX = function getX() {
  this.normalize();
  return this.x.fromRed();
};

Point.prototype.getY = function getY() {
  this.normalize();
  return this.y.fromRed();
};

Point.prototype.eq = function eq(other) {
  return this === other ||
         this.getX().cmp(other.getX()) === 0 &&
         this.getY().cmp(other.getY()) === 0;
};

Point.prototype.eqXToP = function eqXToP(x) {
  var rx = x.toRed(this.curve.red).redMul(this.z);
  if (this.x.cmp(rx) === 0)
    return true;

  var xc = x.clone();
  var t = this.curve.redN.redMul(this.z);
  for (;;) {
    xc.iadd(this.curve.n);
    if (xc.cmp(this.curve.p) >= 0)
      return false;

    rx.redIAdd(t);
    if (this.x.cmp(rx) === 0)
      return true;
  }
};

// Compatibility with BaseCurve
Point.prototype.toP = Point.prototype.normalize;
Point.prototype.mixedAdd = Point.prototype.add;


/***/ }),

/***/ "./node_modules/elliptic/lib/elliptic/curve/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/elliptic/lib/elliptic/curve/index.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


var curve = exports;

curve.base = __webpack_require__(/*! ./base */ "./node_modules/elliptic/lib/elliptic/curve/base.js");
curve.short = __webpack_require__(/*! ./short */ "./node_modules/elliptic/lib/elliptic/curve/short.js");
curve.mont = __webpack_require__(/*! ./mont */ "./node_modules/elliptic/lib/elliptic/curve/mont.js");
curve.edwards = __webpack_require__(/*! ./edwards */ "./node_modules/elliptic/lib/elliptic/curve/edwards.js");


/***/ }),

/***/ "./node_modules/elliptic/lib/elliptic/curve/mont.js":
/*!**********************************************************!*\
  !*** ./node_modules/elliptic/lib/elliptic/curve/mont.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var BN = __webpack_require__(/*! bn.js */ "./node_modules/bn.js/lib/bn.js");
var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js");
var Base = __webpack_require__(/*! ./base */ "./node_modules/elliptic/lib/elliptic/curve/base.js");

var utils = __webpack_require__(/*! ../utils */ "./node_modules/elliptic/lib/elliptic/utils.js");

function MontCurve(conf) {
  Base.call(this, 'mont', conf);

  this.a = new BN(conf.a, 16).toRed(this.red);
  this.b = new BN(conf.b, 16).toRed(this.red);
  this.i4 = new BN(4).toRed(this.red).redInvm();
  this.two = new BN(2).toRed(this.red);
  this.a24 = this.i4.redMul(this.a.redAdd(this.two));
}
inherits(MontCurve, Base);
module.exports = MontCurve;

MontCurve.prototype.validate = function validate(point) {
  var x = point.normalize().x;
  var x2 = x.redSqr();
  var rhs = x2.redMul(x).redAdd(x2.redMul(this.a)).redAdd(x);
  var y = rhs.redSqrt();

  return y.redSqr().cmp(rhs) === 0;
};

function Point(curve, x, z) {
  Base.BasePoint.call(this, curve, 'projective');
  if (x === null && z === null) {
    this.x = this.curve.one;
    this.z = this.curve.zero;
  } else {
    this.x = new BN(x, 16);
    this.z = new BN(z, 16);
    if (!this.x.red)
      this.x = this.x.toRed(this.curve.red);
    if (!this.z.red)
      this.z = this.z.toRed(this.curve.red);
  }
}
inherits(Point, Base.BasePoint);

MontCurve.prototype.decodePoint = function decodePoint(bytes, enc) {
  return this.point(utils.toArray(bytes, enc), 1);
};

MontCurve.prototype.point = function point(x, z) {
  return new Point(this, x, z);
};

MontCurve.prototype.pointFromJSON = function pointFromJSON(obj) {
  return Point.fromJSON(this, obj);
};

Point.prototype.precompute = function precompute() {
  // No-op
};

Point.prototype._encode = function _encode() {
  return this.getX().toArray('be', this.curve.p.byteLength());
};

Point.fromJSON = function fromJSON(curve, obj) {
  return new Point(curve, obj[0], obj[1] || curve.one);
};

Point.prototype.inspect = function inspect() {
  if (this.isInfinity())
    return '<EC Point Infinity>';
  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +
      ' z: ' + this.z.fromRed().toString(16, 2) + '>';
};

Point.prototype.isInfinity = function isInfinity() {
  // XXX This code assumes that zero is always zero in red
  return this.z.cmpn(0) === 0;
};

Point.prototype.dbl = function dbl() {
  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#doubling-dbl-1987-m-3
  // 2M + 2S + 4A

  // A = X1 + Z1
  var a = this.x.redAdd(this.z);
  // AA = A^2
  var aa = a.redSqr();
  // B = X1 - Z1
  var b = this.x.redSub(this.z);
  // BB = B^2
  var bb = b.redSqr();
  // C = AA - BB
  var c = aa.redSub(bb);
  // X3 = AA * BB
  var nx = aa.redMul(bb);
  // Z3 = C * (BB + A24 * C)
  var nz = c.redMul(bb.redAdd(this.curve.a24.redMul(c)));
  return this.curve.point(nx, nz);
};

Point.prototype.add = function add() {
  throw new Error('Not supported on Montgomery curve');
};

Point.prototype.diffAdd = function diffAdd(p, diff) {
  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#diffadd-dadd-1987-m-3
  // 4M + 2S + 6A

  // A = X2 + Z2
  var a = this.x.redAdd(this.z);
  // B = X2 - Z2
  var b = this.x.redSub(this.z);
  // C = X3 + Z3
  var c = p.x.redAdd(p.z);
  // D = X3 - Z3
  var d = p.x.redSub(p.z);
  // DA = D * A
  var da = d.redMul(a);
  // CB = C * B
  var cb = c.redMul(b);
  // X5 = Z1 * (DA + CB)^2
  var nx = diff.z.redMul(da.redAdd(cb).redSqr());
  // Z5 = X1 * (DA - CB)^2
  var nz = diff.x.redMul(da.redISub(cb).redSqr());
  return this.curve.point(nx, nz);
};

Point.prototype.mul = function mul(k) {
  var t = k.clone();
  var a = this; // (N / 2) * Q + Q
  var b = this.curve.point(null, null); // (N / 2) * Q
  var c = this; // Q

  for (var bits = []; t.cmpn(0) !== 0; t.iushrn(1))
    bits.push(t.andln(1));

  for (var i = bits.length - 1; i >= 0; i--) {
    if (bits[i] === 0) {
      // N * Q + Q = ((N / 2) * Q + Q)) + (N / 2) * Q
      a = a.diffAdd(b, c);
      // N * Q = 2 * ((N / 2) * Q + Q))
      b = b.dbl();
    } else {
      // N * Q = ((N / 2) * Q + Q) + ((N / 2) * Q)
      b = a.diffAdd(b, c);
      // N * Q + Q = 2 * ((N / 2) * Q + Q)
      a = a.dbl();
    }
  }
  return b;
};

Point.prototype.mulAdd = function mulAdd() {
  throw new Error('Not supported on Montgomery curve');
};

Point.prototype.jumlAdd = function jumlAdd() {
  throw new Error('Not supported on Montgomery curve');
};

Point.prototype.eq = function eq(other) {
  return this.getX().cmp(other.getX()) === 0;
};

Point.prototype.normalize = function normalize() {
  this.x = this.x.redMul(this.z.redInvm());
  this.z = this.curve.one;
  return this;
};

Point.prototype.getX = function getX() {
  // Normalize coordinates
  this.normalize();

  return this.x.fromRed();
};


/***/ }),

/***/ "./node_modules/elliptic/lib/elliptic/curve/short.js":
/*!***********************************************************!*\
  !*** ./node_modules/elliptic/lib/elliptic/curve/short.js ***!
  \***********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(/*! ../utils */ "./node_modules/elliptic/lib/elliptic/utils.js");
var BN = __webpack_require__(/*! bn.js */ "./node_modules/bn.js/lib/bn.js");
var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js");
var Base = __webpack_require__(/*! ./base */ "./node_modules/elliptic/lib/elliptic/curve/base.js");

var assert = utils.assert;

function ShortCurve(conf) {
  Base.call(this, 'short', conf);

  this.a = new BN(conf.a, 16).toRed(this.red);
  this.b = new BN(conf.b, 16).toRed(this.red);
  this.tinv = this.two.redInvm();

  this.zeroA = this.a.fromRed().cmpn(0) === 0;
  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;

  // If the curve is endomorphic, precalculate beta and lambda
  this.endo = this._getEndomorphism(conf);
  this._endoWnafT1 = new Array(4);
  this._endoWnafT2 = new Array(4);
}
inherits(ShortCurve, Base);
module.exports = ShortCurve;

ShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {
  // No efficient endomorphism
  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)
    return;

  // Compute beta and lambda, that lambda * P = (beta * Px; Py)
  var beta;
  var lambda;
  if (conf.beta) {
    beta = new BN(conf.beta, 16).toRed(this.red);
  } else {
    var betas = this._getEndoRoots(this.p);
    // Choose the smallest beta
    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];
    beta = beta.toRed(this.red);
  }
  if (conf.lambda) {
    lambda = new BN(conf.lambda, 16);
  } else {
    // Choose the lambda that is matching selected beta
    var lambdas = this._getEndoRoots(this.n);
    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {
      lambda = lambdas[0];
    } else {
      lambda = lambdas[1];
      assert(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);
    }
  }

  // Get basis vectors, used for balanced length-two representation
  var basis;
  if (conf.basis) {
    basis = conf.basis.map(function(vec) {
      return {
        a: new BN(vec.a, 16),
        b: new BN(vec.b, 16),
      };
    });
  } else {
    basis = this._getEndoBasis(lambda);
  }

  return {
    beta: beta,
    lambda: lambda,
    basis: basis,
  };
};

ShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {
  // Find roots of for x^2 + x + 1 in F
  // Root = (-1 +- Sqrt(-3)) / 2
  //
  var red = num === this.p ? this.red : BN.mont(num);
  var tinv = new BN(2).toRed(red).redInvm();
  var ntinv = tinv.redNeg();

  var s = new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);

  var l1 = ntinv.redAdd(s).fromRed();
  var l2 = ntinv.redSub(s).fromRed();
  return [ l1, l2 ];
};

ShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {
  // aprxSqrt >= sqrt(this.n)
  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));

  // 3.74
  // Run EGCD, until r(L + 1) < aprxSqrt
  var u = lambda;
  var v = this.n.clone();
  var x1 = new BN(1);
  var y1 = new BN(0);
  var x2 = new BN(0);
  var y2 = new BN(1);

  // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)
  var a0;
  var b0;
  // First vector
  var a1;
  var b1;
  // Second vector
  var a2;
  var b2;

  var prevR;
  var i = 0;
  var r;
  var x;
  while (u.cmpn(0) !== 0) {
    var q = v.div(u);
    r = v.sub(q.mul(u));
    x = x2.sub(q.mul(x1));
    var y = y2.sub(q.mul(y1));

    if (!a1 && r.cmp(aprxSqrt) < 0) {
      a0 = prevR.neg();
      b0 = x1;
      a1 = r.neg();
      b1 = x;
    } else if (a1 && ++i === 2) {
      break;
    }
    prevR = r;

    v = u;
    u = r;
    x2 = x1;
    x1 = x;
    y2 = y1;
    y1 = y;
  }
  a2 = r.neg();
  b2 = x;

  var len1 = a1.sqr().add(b1.sqr());
  var len2 = a2.sqr().add(b2.sqr());
  if (len2.cmp(len1) >= 0) {
    a2 = a0;
    b2 = b0;
  }

  // Normalize signs
  if (a1.negative) {
    a1 = a1.neg();
    b1 = b1.neg();
  }
  if (a2.negative) {
    a2 = a2.neg();
    b2 = b2.neg();
  }

  return [
    { a: a1, b: b1 },
    { a: a2, b: b2 },
  ];
};

ShortCurve.prototype._endoSplit = function _endoSplit(k) {
  var basis = this.endo.basis;
  var v1 = basis[0];
  var v2 = basis[1];

  var c1 = v2.b.mul(k).divRound(this.n);
  var c2 = v1.b.neg().mul(k).divRound(this.n);

  var p1 = c1.mul(v1.a);
  var p2 = c2.mul(v2.a);
  var q1 = c1.mul(v1.b);
  var q2 = c2.mul(v2.b);

  // Calculate answer
  var k1 = k.sub(p1).sub(p2);
  var k2 = q1.add(q2).neg();
  return { k1: k1, k2: k2 };
};

ShortCurve.prototype.pointFromX = function pointFromX(x, odd) {
  x = new BN(x, 16);
  if (!x.red)
    x = x.toRed(this.red);

  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);
  var y = y2.redSqrt();
  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)
    throw new Error('invalid point');

  // XXX Is there any way to tell if the number is odd without converting it
  // to non-red form?
  var isOdd = y.fromRed().isOdd();
  if (odd && !isOdd || !odd && isOdd)
    y = y.redNeg();

  return this.point(x, y);
};

ShortCurve.prototype.validate = function validate(point) {
  if (point.inf)
    return true;

  var x = point.x;
  var y = point.y;

  var ax = this.a.redMul(x);
  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);
  return y.redSqr().redISub(rhs).cmpn(0) === 0;
};

ShortCurve.prototype._endoWnafMulAdd =
    function _endoWnafMulAdd(points, coeffs, jacobianResult) {
      var npoints = this._endoWnafT1;
      var ncoeffs = this._endoWnafT2;
      for (var i = 0; i < points.length; i++) {
        var split = this._endoSplit(coeffs[i]);
        var p = points[i];
        var beta = p._getBeta();

        if (split.k1.negative) {
          split.k1.ineg();
          p = p.neg(true);
        }
        if (split.k2.negative) {
          split.k2.ineg();
          beta = beta.neg(true);
        }

        npoints[i * 2] = p;
        npoints[i * 2 + 1] = beta;
        ncoeffs[i * 2] = split.k1;
        ncoeffs[i * 2 + 1] = split.k2;
      }
      var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);

      // Clean-up references to points and coefficients
      for (var j = 0; j < i * 2; j++) {
        npoints[j] = null;
        ncoeffs[j] = null;
      }
      return res;
    };

function Point(curve, x, y, isRed) {
  Base.BasePoint.call(this, curve, 'affine');
  if (x === null && y === null) {
    this.x = null;
    this.y = null;
    this.inf = true;
  } else {
    this.x = new BN(x, 16);
    this.y = new BN(y, 16);
    // Force redgomery representation when loading from JSON
    if (isRed) {
      this.x.forceRed(this.curve.red);
      this.y.forceRed(this.curve.red);
    }
    if (!this.x.red)
      this.x = this.x.toRed(this.curve.red);
    if (!this.y.red)
      this.y = this.y.toRed(this.curve.red);
    this.inf = false;
  }
}
inherits(Point, Base.BasePoint);

ShortCurve.prototype.point = function point(x, y, isRed) {
  return new Point(this, x, y, isRed);
};

ShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {
  return Point.fromJSON(this, obj, red);
};

Point.prototype._getBeta = function _getBeta() {
  if (!this.curve.endo)
    return;

  var pre = this.precomputed;
  if (pre && pre.beta)
    return pre.beta;

  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);
  if (pre) {
    var curve = this.curve;
    var endoMul = function(p) {
      return curve.point(p.x.redMul(curve.endo.beta), p.y);
    };
    pre.beta = beta;
    beta.precomputed = {
      beta: null,
      naf: pre.naf && {
        wnd: pre.naf.wnd,
        points: pre.naf.points.map(endoMul),
      },
      doubles: pre.doubles && {
        step: pre.doubles.step,
        points: pre.doubles.points.map(endoMul),
      },
    };
  }
  return beta;
};

Point.prototype.toJSON = function toJSON() {
  if (!this.precomputed)
    return [ this.x, this.y ];

  return [ this.x, this.y, this.precomputed && {
    doubles: this.precomputed.doubles && {
      step: this.precomputed.doubles.step,
      points: this.precomputed.doubles.points.slice(1),
    },
    naf: this.precomputed.naf && {
      wnd: this.precomputed.naf.wnd,
      points: this.precomputed.naf.points.slice(1),
    },
  } ];
};

Point.fromJSON = function fromJSON(curve, obj, red) {
  if (typeof obj === 'string')
    obj = JSON.parse(obj);
  var res = curve.point(obj[0], obj[1], red);
  if (!obj[2])
    return res;

  function obj2point(obj) {
    return curve.point(obj[0], obj[1], red);
  }

  var pre = obj[2];
  res.precomputed = {
    beta: null,
    doubles: pre.doubles && {
      step: pre.doubles.step,
      points: [ res ].concat(pre.doubles.points.map(obj2point)),
    },
    naf: pre.naf && {
      wnd: pre.naf.wnd,
      points: [ res ].concat(pre.naf.points.map(obj2point)),
    },
  };
  return res;
};

Point.prototype.inspect = function inspect() {
  if (this.isInfinity())
    return '<EC Point Infinity>';
  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +
      ' y: ' + this.y.fromRed().toString(16, 2) + '>';
};

Point.prototype.isInfinity = function isInfinity() {
  return this.inf;
};

Point.prototype.add = function add(p) {
  // O + P = P
  if (this.inf)
    return p;

  // P + O = P
  if (p.inf)
    return this;

  // P + P = 2P
  if (this.eq(p))
    return this.dbl();

  // P + (-P) = O
  if (this.neg().eq(p))
    return this.curve.point(null, null);

  // P + Q = O
  if (this.x.cmp(p.x) === 0)
    return this.curve.point(null, null);

  var c = this.y.redSub(p.y);
  if (c.cmpn(0) !== 0)
    c = c.redMul(this.x.redSub(p.x).redInvm());
  var nx = c.redSqr().redISub(this.x).redISub(p.x);
  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);
  return this.curve.point(nx, ny);
};

Point.prototype.dbl = function dbl() {
  if (this.inf)
    return this;

  // 2P = O
  var ys1 = this.y.redAdd(this.y);
  if (ys1.cmpn(0) === 0)
    return this.curve.point(null, null);

  var a = this.curve.a;

  var x2 = this.x.redSqr();
  var dyinv = ys1.redInvm();
  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);

  var nx = c.redSqr().redISub(this.x.redAdd(this.x));
  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);
  return this.curve.point(nx, ny);
};

Point.prototype.getX = function getX() {
  return this.x.fromRed();
};

Point.prototype.getY = function getY() {
  return this.y.fromRed();
};

Point.prototype.mul = function mul(k) {
  k = new BN(k, 16);
  if (this.isInfinity())
    return this;
  else if (this._hasDoubles(k))
    return this.curve._fixedNafMul(this, k);
  else if (this.curve.endo)
    return this.curve._endoWnafMulAdd([ this ], [ k ]);
  else
    return this.curve._wnafMul(this, k);
};

Point.prototype.mulAdd = function mulAdd(k1, p2, k2) {
  var points = [ this, p2 ];
  var coeffs = [ k1, k2 ];
  if (this.curve.endo)
    return this.curve._endoWnafMulAdd(points, coeffs);
  else
    return this.curve._wnafMulAdd(1, points, coeffs, 2);
};

Point.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {
  var points = [ this, p2 ];
  var coeffs = [ k1, k2 ];
  if (this.curve.endo)
    return this.curve._endoWnafMulAdd(points, coeffs, true);
  else
    return this.curve._wnafMulAdd(1, points, coeffs, 2, true);
};

Point.prototype.eq = function eq(p) {
  return this === p ||
         this.inf === p.inf &&
             (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);
};

Point.prototype.neg = function neg(_precompute) {
  if (this.inf)
    return this;

  var res = this.curve.point(this.x, this.y.redNeg());
  if (_precompute && this.precomputed) {
    var pre = this.precomputed;
    var negate = function(p) {
      return p.neg();
    };
    res.precomputed = {
      naf: pre.naf && {
        wnd: pre.naf.wnd,
        points: pre.naf.points.map(negate),
      },
      doubles: pre.doubles && {
        step: pre.doubles.step,
        points: pre.doubles.points.map(negate),
      },
    };
  }
  return res;
};

Point.prototype.toJ = function toJ() {
  if (this.inf)
    return this.curve.jpoint(null, null, null);

  var res = this.curve.jpoint(this.x, this.y, this.curve.one);
  return res;
};

function JPoint(curve, x, y, z) {
  Base.BasePoint.call(this, curve, 'jacobian');
  if (x === null && y === null && z === null) {
    this.x = this.curve.one;
    this.y = this.curve.one;
    this.z = new BN(0);
  } else {
    this.x = new BN(x, 16);
    this.y = new BN(y, 16);
    this.z = new BN(z, 16);
  }
  if (!this.x.red)
    this.x = this.x.toRed(this.curve.red);
  if (!this.y.red)
    this.y = this.y.toRed(this.curve.red);
  if (!this.z.red)
    this.z = this.z.toRed(this.curve.red);

  this.zOne = this.z === this.curve.one;
}
inherits(JPoint, Base.BasePoint);

ShortCurve.prototype.jpoint = function jpoint(x, y, z) {
  return new JPoint(this, x, y, z);
};

JPoint.prototype.toP = function toP() {
  if (this.isInfinity())
    return this.curve.point(null, null);

  var zinv = this.z.redInvm();
  var zinv2 = zinv.redSqr();
  var ax = this.x.redMul(zinv2);
  var ay = this.y.redMul(zinv2).redMul(zinv);

  return this.curve.point(ax, ay);
};

JPoint.prototype.neg = function neg() {
  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);
};

JPoint.prototype.add = function add(p) {
  // O + P = P
  if (this.isInfinity())
    return p;

  // P + O = P
  if (p.isInfinity())
    return this;

  // 12M + 4S + 7A
  var pz2 = p.z.redSqr();
  var z2 = this.z.redSqr();
  var u1 = this.x.redMul(pz2);
  var u2 = p.x.redMul(z2);
  var s1 = this.y.redMul(pz2.redMul(p.z));
  var s2 = p.y.redMul(z2.redMul(this.z));

  var h = u1.redSub(u2);
  var r = s1.redSub(s2);
  if (h.cmpn(0) === 0) {
    if (r.cmpn(0) !== 0)
      return this.curve.jpoint(null, null, null);
    else
      return this.dbl();
  }

  var h2 = h.redSqr();
  var h3 = h2.redMul(h);
  var v = u1.redMul(h2);

  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);
  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));
  var nz = this.z.redMul(p.z).redMul(h);

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype.mixedAdd = function mixedAdd(p) {
  // O + P = P
  if (this.isInfinity())
    return p.toJ();

  // P + O = P
  if (p.isInfinity())
    return this;

  // 8M + 3S + 7A
  var z2 = this.z.redSqr();
  var u1 = this.x;
  var u2 = p.x.redMul(z2);
  var s1 = this.y;
  var s2 = p.y.redMul(z2).redMul(this.z);

  var h = u1.redSub(u2);
  var r = s1.redSub(s2);
  if (h.cmpn(0) === 0) {
    if (r.cmpn(0) !== 0)
      return this.curve.jpoint(null, null, null);
    else
      return this.dbl();
  }

  var h2 = h.redSqr();
  var h3 = h2.redMul(h);
  var v = u1.redMul(h2);

  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);
  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));
  var nz = this.z.redMul(h);

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype.dblp = function dblp(pow) {
  if (pow === 0)
    return this;
  if (this.isInfinity())
    return this;
  if (!pow)
    return this.dbl();

  var i;
  if (this.curve.zeroA || this.curve.threeA) {
    var r = this;
    for (i = 0; i < pow; i++)
      r = r.dbl();
    return r;
  }

  // 1M + 2S + 1A + N * (4S + 5M + 8A)
  // N = 1 => 6M + 6S + 9A
  var a = this.curve.a;
  var tinv = this.curve.tinv;

  var jx = this.x;
  var jy = this.y;
  var jz = this.z;
  var jz4 = jz.redSqr().redSqr();

  // Reuse results
  var jyd = jy.redAdd(jy);
  for (i = 0; i < pow; i++) {
    var jx2 = jx.redSqr();
    var jyd2 = jyd.redSqr();
    var jyd4 = jyd2.redSqr();
    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));

    var t1 = jx.redMul(jyd2);
    var nx = c.redSqr().redISub(t1.redAdd(t1));
    var t2 = t1.redISub(nx);
    var dny = c.redMul(t2);
    dny = dny.redIAdd(dny).redISub(jyd4);
    var nz = jyd.redMul(jz);
    if (i + 1 < pow)
      jz4 = jz4.redMul(jyd4);

    jx = nx;
    jz = nz;
    jyd = dny;
  }

  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);
};

JPoint.prototype.dbl = function dbl() {
  if (this.isInfinity())
    return this;

  if (this.curve.zeroA)
    return this._zeroDbl();
  else if (this.curve.threeA)
    return this._threeDbl();
  else
    return this._dbl();
};

JPoint.prototype._zeroDbl = function _zeroDbl() {
  var nx;
  var ny;
  var nz;
  // Z = 1
  if (this.zOne) {
    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html
    //     #doubling-mdbl-2007-bl
    // 1M + 5S + 14A

    // XX = X1^2
    var xx = this.x.redSqr();
    // YY = Y1^2
    var yy = this.y.redSqr();
    // YYYY = YY^2
    var yyyy = yy.redSqr();
    // S = 2 * ((X1 + YY)^2 - XX - YYYY)
    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
    s = s.redIAdd(s);
    // M = 3 * XX + a; a = 0
    var m = xx.redAdd(xx).redIAdd(xx);
    // T = M ^ 2 - 2*S
    var t = m.redSqr().redISub(s).redISub(s);

    // 8 * YYYY
    var yyyy8 = yyyy.redIAdd(yyyy);
    yyyy8 = yyyy8.redIAdd(yyyy8);
    yyyy8 = yyyy8.redIAdd(yyyy8);

    // X3 = T
    nx = t;
    // Y3 = M * (S - T) - 8 * YYYY
    ny = m.redMul(s.redISub(t)).redISub(yyyy8);
    // Z3 = 2*Y1
    nz = this.y.redAdd(this.y);
  } else {
    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html
    //     #doubling-dbl-2009-l
    // 2M + 5S + 13A

    // A = X1^2
    var a = this.x.redSqr();
    // B = Y1^2
    var b = this.y.redSqr();
    // C = B^2
    var c = b.redSqr();
    // D = 2 * ((X1 + B)^2 - A - C)
    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);
    d = d.redIAdd(d);
    // E = 3 * A
    var e = a.redAdd(a).redIAdd(a);
    // F = E^2
    var f = e.redSqr();

    // 8 * C
    var c8 = c.redIAdd(c);
    c8 = c8.redIAdd(c8);
    c8 = c8.redIAdd(c8);

    // X3 = F - 2 * D
    nx = f.redISub(d).redISub(d);
    // Y3 = E * (D - X3) - 8 * C
    ny = e.redMul(d.redISub(nx)).redISub(c8);
    // Z3 = 2 * Y1 * Z1
    nz = this.y.redMul(this.z);
    nz = nz.redIAdd(nz);
  }

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype._threeDbl = function _threeDbl() {
  var nx;
  var ny;
  var nz;
  // Z = 1
  if (this.zOne) {
    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html
    //     #doubling-mdbl-2007-bl
    // 1M + 5S + 15A

    // XX = X1^2
    var xx = this.x.redSqr();
    // YY = Y1^2
    var yy = this.y.redSqr();
    // YYYY = YY^2
    var yyyy = yy.redSqr();
    // S = 2 * ((X1 + YY)^2 - XX - YYYY)
    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
    s = s.redIAdd(s);
    // M = 3 * XX + a
    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);
    // T = M^2 - 2 * S
    var t = m.redSqr().redISub(s).redISub(s);
    // X3 = T
    nx = t;
    // Y3 = M * (S - T) - 8 * YYYY
    var yyyy8 = yyyy.redIAdd(yyyy);
    yyyy8 = yyyy8.redIAdd(yyyy8);
    yyyy8 = yyyy8.redIAdd(yyyy8);
    ny = m.redMul(s.redISub(t)).redISub(yyyy8);
    // Z3 = 2 * Y1
    nz = this.y.redAdd(this.y);
  } else {
    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b
    // 3M + 5S

    // delta = Z1^2
    var delta = this.z.redSqr();
    // gamma = Y1^2
    var gamma = this.y.redSqr();
    // beta = X1 * gamma
    var beta = this.x.redMul(gamma);
    // alpha = 3 * (X1 - delta) * (X1 + delta)
    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));
    alpha = alpha.redAdd(alpha).redIAdd(alpha);
    // X3 = alpha^2 - 8 * beta
    var beta4 = beta.redIAdd(beta);
    beta4 = beta4.redIAdd(beta4);
    var beta8 = beta4.redAdd(beta4);
    nx = alpha.redSqr().redISub(beta8);
    // Z3 = (Y1 + Z1)^2 - gamma - delta
    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);
    // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2
    var ggamma8 = gamma.redSqr();
    ggamma8 = ggamma8.redIAdd(ggamma8);
    ggamma8 = ggamma8.redIAdd(ggamma8);
    ggamma8 = ggamma8.redIAdd(ggamma8);
    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);
  }

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype._dbl = function _dbl() {
  var a = this.curve.a;

  // 4M + 6S + 10A
  var jx = this.x;
  var jy = this.y;
  var jz = this.z;
  var jz4 = jz.redSqr().redSqr();

  var jx2 = jx.redSqr();
  var jy2 = jy.redSqr();

  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));

  var jxd4 = jx.redAdd(jx);
  jxd4 = jxd4.redIAdd(jxd4);
  var t1 = jxd4.redMul(jy2);
  var nx = c.redSqr().redISub(t1.redAdd(t1));
  var t2 = t1.redISub(nx);

  var jyd8 = jy2.redSqr();
  jyd8 = jyd8.redIAdd(jyd8);
  jyd8 = jyd8.redIAdd(jyd8);
  jyd8 = jyd8.redIAdd(jyd8);
  var ny = c.redMul(t2).redISub(jyd8);
  var nz = jy.redAdd(jy).redMul(jz);

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype.trpl = function trpl() {
  if (!this.curve.zeroA)
    return this.dbl().add(this);

  // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl
  // 5M + 10S + ...

  // XX = X1^2
  var xx = this.x.redSqr();
  // YY = Y1^2
  var yy = this.y.redSqr();
  // ZZ = Z1^2
  var zz = this.z.redSqr();
  // YYYY = YY^2
  var yyyy = yy.redSqr();
  // M = 3 * XX + a * ZZ2; a = 0
  var m = xx.redAdd(xx).redIAdd(xx);
  // MM = M^2
  var mm = m.redSqr();
  // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM
  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
  e = e.redIAdd(e);
  e = e.redAdd(e).redIAdd(e);
  e = e.redISub(mm);
  // EE = E^2
  var ee = e.redSqr();
  // T = 16*YYYY
  var t = yyyy.redIAdd(yyyy);
  t = t.redIAdd(t);
  t = t.redIAdd(t);
  t = t.redIAdd(t);
  // U = (M + E)^2 - MM - EE - T
  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);
  // X3 = 4 * (X1 * EE - 4 * YY * U)
  var yyu4 = yy.redMul(u);
  yyu4 = yyu4.redIAdd(yyu4);
  yyu4 = yyu4.redIAdd(yyu4);
  var nx = this.x.redMul(ee).redISub(yyu4);
  nx = nx.redIAdd(nx);
  nx = nx.redIAdd(nx);
  // Y3 = 8 * Y1 * (U * (T - U) - E * EE)
  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));
  ny = ny.redIAdd(ny);
  ny = ny.redIAdd(ny);
  ny = ny.redIAdd(ny);
  // Z3 = (Z1 + E)^2 - ZZ - EE
  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype.mul = function mul(k, kbase) {
  k = new BN(k, kbase);

  return this.curve._wnafMul(this, k);
};

JPoint.prototype.eq = function eq(p) {
  if (p.type === 'affine')
    return this.eq(p.toJ());

  if (this === p)
    return true;

  // x1 * z2^2 == x2 * z1^2
  var z2 = this.z.redSqr();
  var pz2 = p.z.redSqr();
  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)
    return false;

  // y1 * z2^3 == y2 * z1^3
  var z3 = z2.redMul(this.z);
  var pz3 = pz2.redMul(p.z);
  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;
};

JPoint.prototype.eqXToP = function eqXToP(x) {
  var zs = this.z.redSqr();
  var rx = x.toRed(this.curve.red).redMul(zs);
  if (this.x.cmp(rx) === 0)
    return true;

  var xc = x.clone();
  var t = this.curve.redN.redMul(zs);
  for (;;) {
    xc.iadd(this.curve.n);
    if (xc.cmp(this.curve.p) >= 0)
      return false;

    rx.redIAdd(t);
    if (this.x.cmp(rx) === 0)
      return true;
  }
};

JPoint.prototype.inspect = function inspect() {
  if (this.isInfinity())
    return '<EC JPoint Infinity>';
  return '<EC JPoint x: ' + this.x.toString(16, 2) +
      ' y: ' + this.y.toString(16, 2) +
      ' z: ' + this.z.toString(16, 2) + '>';
};

JPoint.prototype.isInfinity = function isInfinity() {
  // XXX This code assumes that zero is always zero in red
  return this.z.cmpn(0) === 0;
};


/***/ }),

/***/ "./node_modules/elliptic/lib/elliptic/curves.js":
/*!******************************************************!*\
  !*** ./node_modules/elliptic/lib/elliptic/curves.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


var curves = exports;

var hash = __webpack_require__(/*! hash.js */ "./node_modules/hash.js/lib/hash.js");
var curve = __webpack_require__(/*! ./curve */ "./node_modules/elliptic/lib/elliptic/curve/index.js");
var utils = __webpack_require__(/*! ./utils */ "./node_modules/elliptic/lib/elliptic/utils.js");

var assert = utils.assert;

function PresetCurve(options) {
  if (options.type === 'short')
    this.curve = new curve.short(options);
  else if (options.type === 'edwards')
    this.curve = new curve.edwards(options);
  else
    this.curve = new curve.mont(options);
  this.g = this.curve.g;
  this.n = this.curve.n;
  this.hash = options.hash;

  assert(this.g.validate(), 'Invalid curve');
  assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');
}
curves.PresetCurve = PresetCurve;

function defineCurve(name, options) {
  Object.defineProperty(curves, name, {
    configurable: true,
    enumerable: true,
    get: function() {
      var curve = new PresetCurve(options);
      Object.defineProperty(curves, name, {
        configurable: true,
        enumerable: true,
        value: curve,
      });
      return curve;
    },
  });
}

defineCurve('p192', {
  type: 'short',
  prime: 'p192',
  p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',
  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',
  b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',
  n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',
  hash: hash.sha256,
  gRed: false,
  g: [
    '188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012',
    '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811',
  ],
});

defineCurve('p224', {
  type: 'short',
  prime: 'p224',
  p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',
  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',
  b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',
  n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',
  hash: hash.sha256,
  gRed: false,
  g: [
    'b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21',
    'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34',
  ],
});

defineCurve('p256', {
  type: 'short',
  prime: null,
  p: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',
  a: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',
  b: '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',
  n: 'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',
  hash: hash.sha256,
  gRed: false,
  g: [
    '6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296',
    '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5',
  ],
});

defineCurve('p384', {
  type: 'short',
  prime: null,
  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'fffffffe ffffffff 00000000 00000000 ffffffff',
  a: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'fffffffe ffffffff 00000000 00000000 fffffffc',
  b: 'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f ' +
     '5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef',
  n: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 ' +
     'f4372ddf 581a0db2 48b0a77a ecec196a ccc52973',
  hash: hash.sha384,
  gRed: false,
  g: [
    'aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 ' +
    '5502f25d bf55296c 3a545e38 72760ab7',
    '3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 ' +
    '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f',
  ],
});

defineCurve('p521', {
  type: 'short',
  prime: null,
  p: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'ffffffff ffffffff ffffffff ffffffff ffffffff',
  a: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'ffffffff ffffffff ffffffff ffffffff fffffffc',
  b: '00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b ' +
     '99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd ' +
     '3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00',
  n: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 ' +
     'f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409',
  hash: hash.sha512,
  gRed: false,
  g: [
    '000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 ' +
    '053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 ' +
    'a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66',
    '00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 ' +
    '579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 ' +
    '3fad0761 353c7086 a272c240 88be9476 9fd16650',
  ],
});

defineCurve('curve25519', {
  type: 'mont',
  prime: 'p25519',
  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',
  a: '76d06',
  b: '1',
  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',
  hash: hash.sha256,
  gRed: false,
  g: [
    '9',
  ],
});

defineCurve('ed25519', {
  type: 'edwards',
  prime: 'p25519',
  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',
  a: '-1',
  c: '1',
  // -121665 * (121666^(-1)) (mod P)
  d: '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',
  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',
  hash: hash.sha256,
  gRed: false,
  g: [
    '216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a',

    // 4/5
    '6666666666666666666666666666666666666666666666666666666666666658',
  ],
});

var pre;
try {
  pre = __webpack_require__(/*! ./precomputed/secp256k1 */ "./node_modules/elliptic/lib/elliptic/precomputed/secp256k1.js");
} catch (e) {
  pre = undefined;
}

defineCurve('secp256k1', {
  type: 'short',
  prime: 'k256',
  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',
  a: '0',
  b: '7',
  n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',
  h: '1',
  hash: hash.sha256,

  // Precomputed endomorphism
  beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',
  lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',
  basis: [
    {
      a: '3086d221a7d46bcde86c90e49284eb15',
      b: '-e4437ed6010e88286f547fa90abfe4c3',
    },
    {
      a: '114ca50f7a8e2f3f657c1108d9d44cfd8',
      b: '3086d221a7d46bcde86c90e49284eb15',
    },
  ],

  gRed: false,
  g: [
    '79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798',
    '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8',
    pre,
  ],
});


/***/ }),

/***/ "./node_modules/elliptic/lib/elliptic/ec/index.js":
/*!********************************************************!*\
  !*** ./node_modules/elliptic/lib/elliptic/ec/index.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var BN = __webpack_require__(/*! bn.js */ "./node_modules/bn.js/lib/bn.js");
var HmacDRBG = __webpack_require__(/*! hmac-drbg */ "./node_modules/hmac-drbg/lib/hmac-drbg.js");
var utils = __webpack_require__(/*! ../utils */ "./node_modules/elliptic/lib/elliptic/utils.js");
var curves = __webpack_require__(/*! ../curves */ "./node_modules/elliptic/lib/elliptic/curves.js");
var rand = __webpack_require__(/*! brorand */ "./node_modules/brorand/index.js");
var assert = utils.assert;

var KeyPair = __webpack_require__(/*! ./key */ "./node_modules/elliptic/lib/elliptic/ec/key.js");
var Signature = __webpack_require__(/*! ./signature */ "./node_modules/elliptic/lib/elliptic/ec/signature.js");

function EC(options) {
  if (!(this instanceof EC))
    return new EC(options);

  // Shortcut `elliptic.ec(curve-name)`
  if (typeof options === 'string') {
    assert(Object.prototype.hasOwnProperty.call(curves, options),
      'Unknown curve ' + options);

    options = curves[options];
  }

  // Shortcut for `elliptic.ec(elliptic.curves.curveName)`
  if (options instanceof curves.PresetCurve)
    options = { curve: options };

  this.curve = options.curve.curve;
  this.n = this.curve.n;
  this.nh = this.n.ushrn(1);
  this.g = this.curve.g;

  // Point on curve
  this.g = options.curve.g;
  this.g.precompute(options.curve.n.bitLength() + 1);

  // Hash for function for DRBG
  this.hash = options.hash || options.curve.hash;
}
module.exports = EC;

EC.prototype.keyPair = function keyPair(options) {
  return new KeyPair(this, options);
};

EC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {
  return KeyPair.fromPrivate(this, priv, enc);
};

EC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {
  return KeyPair.fromPublic(this, pub, enc);
};

EC.prototype.genKeyPair = function genKeyPair(options) {
  if (!options)
    options = {};

  // Instantiate Hmac_DRBG
  var drbg = new HmacDRBG({
    hash: this.hash,
    pers: options.pers,
    persEnc: options.persEnc || 'utf8',
    entropy: options.entropy || rand(this.hash.hmacStrength),
    entropyEnc: options.entropy && options.entropyEnc || 'utf8',
    nonce: this.n.toArray(),
  });

  var bytes = this.n.byteLength();
  var ns2 = this.n.sub(new BN(2));
  for (;;) {
    var priv = new BN(drbg.generate(bytes));
    if (priv.cmp(ns2) > 0)
      continue;

    priv.iaddn(1);
    return this.keyFromPrivate(priv);
  }
};

EC.prototype._truncateToN = function _truncateToN(msg, truncOnly) {
  var delta = msg.byteLength() * 8 - this.n.bitLength();
  if (delta > 0)
    msg = msg.ushrn(delta);
  if (!truncOnly && msg.cmp(this.n) >= 0)
    return msg.sub(this.n);
  else
    return msg;
};

EC.prototype.sign = function sign(msg, key, enc, options) {
  if (typeof enc === 'object') {
    options = enc;
    enc = null;
  }
  if (!options)
    options = {};

  key = this.keyFromPrivate(key, enc);
  msg = this._truncateToN(new BN(msg, 16));

  // Zero-extend key to provide enough entropy
  var bytes = this.n.byteLength();
  var bkey = key.getPrivate().toArray('be', bytes);

  // Zero-extend nonce to have the same byte size as N
  var nonce = msg.toArray('be', bytes);

  // Instantiate Hmac_DRBG
  var drbg = new HmacDRBG({
    hash: this.hash,
    entropy: bkey,
    nonce: nonce,
    pers: options.pers,
    persEnc: options.persEnc || 'utf8',
  });

  // Number of bytes to generate
  var ns1 = this.n.sub(new BN(1));

  for (var iter = 0; ; iter++) {
    var k = options.k ?
      options.k(iter) :
      new BN(drbg.generate(this.n.byteLength()));
    k = this._truncateToN(k, true);
    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0)
      continue;

    var kp = this.g.mul(k);
    if (kp.isInfinity())
      continue;

    var kpX = kp.getX();
    var r = kpX.umod(this.n);
    if (r.cmpn(0) === 0)
      continue;

    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));
    s = s.umod(this.n);
    if (s.cmpn(0) === 0)
      continue;

    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) |
                        (kpX.cmp(r) !== 0 ? 2 : 0);

    // Use complement of `s`, if it is > `n / 2`
    if (options.canonical && s.cmp(this.nh) > 0) {
      s = this.n.sub(s);
      recoveryParam ^= 1;
    }

    return new Signature({ r: r, s: s, recoveryParam: recoveryParam });
  }
};

EC.prototype.verify = function verify(msg, signature, key, enc) {
  msg = this._truncateToN(new BN(msg, 16));
  key = this.keyFromPublic(key, enc);
  signature = new Signature(signature, 'hex');

  // Perform primitive values validation
  var r = signature.r;
  var s = signature.s;
  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0)
    return false;
  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)
    return false;

  // Validate signature
  var sinv = s.invm(this.n);
  var u1 = sinv.mul(msg).umod(this.n);
  var u2 = sinv.mul(r).umod(this.n);
  var p;

  if (!this.curve._maxwellTrick) {
    p = this.g.mulAdd(u1, key.getPublic(), u2);
    if (p.isInfinity())
      return false;

    return p.getX().umod(this.n).cmp(r) === 0;
  }

  // NOTE: Greg Maxwell's trick, inspired by:
  // https://git.io/vad3K

  p = this.g.jmulAdd(u1, key.getPublic(), u2);
  if (p.isInfinity())
    return false;

  // Compare `p.x` of Jacobian point with `r`,
  // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the
  // inverse of `p.z^2`
  return p.eqXToP(r);
};

EC.prototype.recoverPubKey = function(msg, signature, j, enc) {
  assert((3 & j) === j, 'The recovery param is more than two bits');
  signature = new Signature(signature, enc);

  var n = this.n;
  var e = new BN(msg);
  var r = signature.r;
  var s = signature.s;

  // A set LSB signifies that the y-coordinate is odd
  var isYOdd = j & 1;
  var isSecondKey = j >> 1;
  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey)
    throw new Error('Unable to find sencond key candinate');

  // 1.1. Let x = r + jn.
  if (isSecondKey)
    r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);
  else
    r = this.curve.pointFromX(r, isYOdd);

  var rInv = signature.r.invm(n);
  var s1 = n.sub(e).mul(rInv).umod(n);
  var s2 = s.mul(rInv).umod(n);

  // 1.6.1 Compute Q = r^-1 (sR -  eG)
  //               Q = r^-1 (sR + -eG)
  return this.g.mulAdd(s1, r, s2);
};

EC.prototype.getKeyRecoveryParam = function(e, signature, Q, enc) {
  signature = new Signature(signature, enc);
  if (signature.recoveryParam !== null)
    return signature.recoveryParam;

  for (var i = 0; i < 4; i++) {
    var Qprime;
    try {
      Qprime = this.recoverPubKey(e, signature, i);
    } catch (e) {
      continue;
    }

    if (Qprime.eq(Q))
      return i;
  }
  throw new Error('Unable to find valid recovery factor');
};


/***/ }),

/***/ "./node_modules/elliptic/lib/elliptic/ec/key.js":
/*!******************************************************!*\
  !*** ./node_modules/elliptic/lib/elliptic/ec/key.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var BN = __webpack_require__(/*! bn.js */ "./node_modules/bn.js/lib/bn.js");
var utils = __webpack_require__(/*! ../utils */ "./node_modules/elliptic/lib/elliptic/utils.js");
var assert = utils.assert;

function KeyPair(ec, options) {
  this.ec = ec;
  this.priv = null;
  this.pub = null;

  // KeyPair(ec, { priv: ..., pub: ... })
  if (options.priv)
    this._importPrivate(options.priv, options.privEnc);
  if (options.pub)
    this._importPublic(options.pub, options.pubEnc);
}
module.exports = KeyPair;

KeyPair.fromPublic = function fromPublic(ec, pub, enc) {
  if (pub instanceof KeyPair)
    return pub;

  return new KeyPair(ec, {
    pub: pub,
    pubEnc: enc,
  });
};

KeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {
  if (priv instanceof KeyPair)
    return priv;

  return new KeyPair(ec, {
    priv: priv,
    privEnc: enc,
  });
};

KeyPair.prototype.validate = function validate() {
  var pub = this.getPublic();

  if (pub.isInfinity())
    return { result: false, reason: 'Invalid public key' };
  if (!pub.validate())
    return { result: false, reason: 'Public key is not a point' };
  if (!pub.mul(this.ec.curve.n).isInfinity())
    return { result: false, reason: 'Public key * N != O' };

  return { result: true, reason: null };
};

KeyPair.prototype.getPublic = function getPublic(compact, enc) {
  // compact is optional argument
  if (typeof compact === 'string') {
    enc = compact;
    compact = null;
  }

  if (!this.pub)
    this.pub = this.ec.g.mul(this.priv);

  if (!enc)
    return this.pub;

  return this.pub.encode(enc, compact);
};

KeyPair.prototype.getPrivate = function getPrivate(enc) {
  if (enc === 'hex')
    return this.priv.toString(16, 2);
  else
    return this.priv;
};

KeyPair.prototype._importPrivate = function _importPrivate(key, enc) {
  this.priv = new BN(key, enc || 16);

  // Ensure that the priv won't be bigger than n, otherwise we may fail
  // in fixed multiplication method
  this.priv = this.priv.umod(this.ec.curve.n);
};

KeyPair.prototype._importPublic = function _importPublic(key, enc) {
  if (key.x || key.y) {
    // Montgomery points only have an `x` coordinate.
    // Weierstrass/Edwards points on the other hand have both `x` and
    // `y` coordinates.
    if (this.ec.curve.type === 'mont') {
      assert(key.x, 'Need x coordinate');
    } else if (this.ec.curve.type === 'short' ||
               this.ec.curve.type === 'edwards') {
      assert(key.x && key.y, 'Need both x and y coordinate');
    }
    this.pub = this.ec.curve.point(key.x, key.y);
    return;
  }
  this.pub = this.ec.curve.decodePoint(key, enc);
};

// ECDH
KeyPair.prototype.derive = function derive(pub) {
  if(!pub.validate()) {
    assert(pub.validate(), 'public point not validated');
  }
  return pub.mul(this.priv).getX();
};

// ECDSA
KeyPair.prototype.sign = function sign(msg, enc, options) {
  return this.ec.sign(msg, this, enc, options);
};

KeyPair.prototype.verify = function verify(msg, signature) {
  return this.ec.verify(msg, signature, this);
};

KeyPair.prototype.inspect = function inspect() {
  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) +
         ' pub: ' + (this.pub && this.pub.inspect()) + ' >';
};


/***/ }),

/***/ "./node_modules/elliptic/lib/elliptic/ec/signature.js":
/*!************************************************************!*\
  !*** ./node_modules/elliptic/lib/elliptic/ec/signature.js ***!
  \************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var BN = __webpack_require__(/*! bn.js */ "./node_modules/bn.js/lib/bn.js");

var utils = __webpack_require__(/*! ../utils */ "./node_modules/elliptic/lib/elliptic/utils.js");
var assert = utils.assert;

function Signature(options, enc) {
  if (options instanceof Signature)
    return options;

  if (this._importDER(options, enc))
    return;

  assert(options.r && options.s, 'Signature without r or s');
  this.r = new BN(options.r, 16);
  this.s = new BN(options.s, 16);
  if (options.recoveryParam === undefined)
    this.recoveryParam = null;
  else
    this.recoveryParam = options.recoveryParam;
}
module.exports = Signature;

function Position() {
  this.place = 0;
}

function getLength(buf, p) {
  var initial = buf[p.place++];
  if (!(initial & 0x80)) {
    return initial;
  }
  var octetLen = initial & 0xf;

  // Indefinite length or overflow
  if (octetLen === 0 || octetLen > 4) {
    return false;
  }

  var val = 0;
  for (var i = 0, off = p.place; i < octetLen; i++, off++) {
    val <<= 8;
    val |= buf[off];
    val >>>= 0;
  }

  // Leading zeroes
  if (val <= 0x7f) {
    return false;
  }

  p.place = off;
  return val;
}

function rmPadding(buf) {
  var i = 0;
  var len = buf.length - 1;
  while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {
    i++;
  }
  if (i === 0) {
    return buf;
  }
  return buf.slice(i);
}

Signature.prototype._importDER = function _importDER(data, enc) {
  data = utils.toArray(data, enc);
  var p = new Position();
  if (data[p.place++] !== 0x30) {
    return false;
  }
  var len = getLength(data, p);
  if (len === false) {
    return false;
  }
  if ((len + p.place) !== data.length) {
    return false;
  }
  if (data[p.place++] !== 0x02) {
    return false;
  }
  var rlen = getLength(data, p);
  if (rlen === false) {
    return false;
  }
  var r = data.slice(p.place, rlen + p.place);
  p.place += rlen;
  if (data[p.place++] !== 0x02) {
    return false;
  }
  var slen = getLength(data, p);
  if (slen === false) {
    return false;
  }
  if (data.length !== slen + p.place) {
    return false;
  }
  var s = data.slice(p.place, slen + p.place);
  if (r[0] === 0) {
    if (r[1] & 0x80) {
      r = r.slice(1);
    } else {
      // Leading zeroes
      return false;
    }
  }
  if (s[0] === 0) {
    if (s[1] & 0x80) {
      s = s.slice(1);
    } else {
      // Leading zeroes
      return false;
    }
  }

  this.r = new BN(r);
  this.s = new BN(s);
  this.recoveryParam = null;

  return true;
};

function constructLength(arr, len) {
  if (len < 0x80) {
    arr.push(len);
    return;
  }
  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);
  arr.push(octets | 0x80);
  while (--octets) {
    arr.push((len >>> (octets << 3)) & 0xff);
  }
  arr.push(len);
}

Signature.prototype.toDER = function toDER(enc) {
  var r = this.r.toArray();
  var s = this.s.toArray();

  // Pad values
  if (r[0] & 0x80)
    r = [ 0 ].concat(r);
  // Pad values
  if (s[0] & 0x80)
    s = [ 0 ].concat(s);

  r = rmPadding(r);
  s = rmPadding(s);

  while (!s[0] && !(s[1] & 0x80)) {
    s = s.slice(1);
  }
  var arr = [ 0x02 ];
  constructLength(arr, r.length);
  arr = arr.concat(r);
  arr.push(0x02);
  constructLength(arr, s.length);
  var backHalf = arr.concat(s);
  var res = [ 0x30 ];
  constructLength(res, backHalf.length);
  res = res.concat(backHalf);
  return utils.encode(res, enc);
};


/***/ }),

/***/ "./node_modules/elliptic/lib/elliptic/eddsa/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/elliptic/lib/elliptic/eddsa/index.js ***!
  \***********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var hash = __webpack_require__(/*! hash.js */ "./node_modules/hash.js/lib/hash.js");
var curves = __webpack_require__(/*! ../curves */ "./node_modules/elliptic/lib/elliptic/curves.js");
var utils = __webpack_require__(/*! ../utils */ "./node_modules/elliptic/lib/elliptic/utils.js");
var assert = utils.assert;
var parseBytes = utils.parseBytes;
var KeyPair = __webpack_require__(/*! ./key */ "./node_modules/elliptic/lib/elliptic/eddsa/key.js");
var Signature = __webpack_require__(/*! ./signature */ "./node_modules/elliptic/lib/elliptic/eddsa/signature.js");

function EDDSA(curve) {
  assert(curve === 'ed25519', 'only tested with ed25519 so far');

  if (!(this instanceof EDDSA))
    return new EDDSA(curve);

  curve = curves[curve].curve;
  this.curve = curve;
  this.g = curve.g;
  this.g.precompute(curve.n.bitLength() + 1);

  this.pointClass = curve.point().constructor;
  this.encodingLength = Math.ceil(curve.n.bitLength() / 8);
  this.hash = hash.sha512;
}

module.exports = EDDSA;

/**
* @param {Array|String} message - message bytes
* @param {Array|String|KeyPair} secret - secret bytes or a keypair
* @returns {Signature} - signature
*/
EDDSA.prototype.sign = function sign(message, secret) {
  message = parseBytes(message);
  var key = this.keyFromSecret(secret);
  var r = this.hashInt(key.messagePrefix(), message);
  var R = this.g.mul(r);
  var Rencoded = this.encodePoint(R);
  var s_ = this.hashInt(Rencoded, key.pubBytes(), message)
    .mul(key.priv());
  var S = r.add(s_).umod(this.curve.n);
  return this.makeSignature({ R: R, S: S, Rencoded: Rencoded });
};

/**
* @param {Array} message - message bytes
* @param {Array|String|Signature} sig - sig bytes
* @param {Array|String|Point|KeyPair} pub - public key
* @returns {Boolean} - true if public key matches sig of message
*/
EDDSA.prototype.verify = function verify(message, sig, pub) {
  message = parseBytes(message);
  sig = this.makeSignature(sig);
  var key = this.keyFromPublic(pub);
  var h = this.hashInt(sig.Rencoded(), key.pubBytes(), message);
  var SG = this.g.mul(sig.S());
  var RplusAh = sig.R().add(key.pub().mul(h));
  return RplusAh.eq(SG);
};

EDDSA.prototype.hashInt = function hashInt() {
  var hash = this.hash();
  for (var i = 0; i < arguments.length; i++)
    hash.update(arguments[i]);
  return utils.intFromLE(hash.digest()).umod(this.curve.n);
};

EDDSA.prototype.keyFromPublic = function keyFromPublic(pub) {
  return KeyPair.fromPublic(this, pub);
};

EDDSA.prototype.keyFromSecret = function keyFromSecret(secret) {
  return KeyPair.fromSecret(this, secret);
};

EDDSA.prototype.makeSignature = function makeSignature(sig) {
  if (sig instanceof Signature)
    return sig;
  return new Signature(this, sig);
};

/**
* * https://tools.ietf.org/html/draft-josefsson-eddsa-ed25519-03#section-5.2
*
* EDDSA defines methods for encoding and decoding points and integers. These are
* helper convenience methods, that pass along to utility functions implied
* parameters.
*
*/
EDDSA.prototype.encodePoint = function encodePoint(point) {
  var enc = point.getY().toArray('le', this.encodingLength);
  enc[this.encodingLength - 1] |= point.getX().isOdd() ? 0x80 : 0;
  return enc;
};

EDDSA.prototype.decodePoint = function decodePoint(bytes) {
  bytes = utils.parseBytes(bytes);

  var lastIx = bytes.length - 1;
  var normed = bytes.slice(0, lastIx).concat(bytes[lastIx] & ~0x80);
  var xIsOdd = (bytes[lastIx] & 0x80) !== 0;

  var y = utils.intFromLE(normed);
  return this.curve.pointFromY(y, xIsOdd);
};

EDDSA.prototype.encodeInt = function encodeInt(num) {
  return num.toArray('le', this.encodingLength);
};

EDDSA.prototype.decodeInt = function decodeInt(bytes) {
  return utils.intFromLE(bytes);
};

EDDSA.prototype.isPoint = function isPoint(val) {
  return val instanceof this.pointClass;
};


/***/ }),

/***/ "./node_modules/elliptic/lib/elliptic/eddsa/key.js":
/*!*********************************************************!*\
  !*** ./node_modules/elliptic/lib/elliptic/eddsa/key.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(/*! ../utils */ "./node_modules/elliptic/lib/elliptic/utils.js");
var assert = utils.assert;
var parseBytes = utils.parseBytes;
var cachedProperty = utils.cachedProperty;

/**
* @param {EDDSA} eddsa - instance
* @param {Object} params - public/private key parameters
*
* @param {Array<Byte>} [params.secret] - secret seed bytes
* @param {Point} [params.pub] - public key point (aka `A` in eddsa terms)
* @param {Array<Byte>} [params.pub] - public key point encoded as bytes
*
*/
function KeyPair(eddsa, params) {
  this.eddsa = eddsa;
  this._secret = parseBytes(params.secret);
  if (eddsa.isPoint(params.pub))
    this._pub = params.pub;
  else
    this._pubBytes = parseBytes(params.pub);
}

KeyPair.fromPublic = function fromPublic(eddsa, pub) {
  if (pub instanceof KeyPair)
    return pub;
  return new KeyPair(eddsa, { pub: pub });
};

KeyPair.fromSecret = function fromSecret(eddsa, secret) {
  if (secret instanceof KeyPair)
    return secret;
  return new KeyPair(eddsa, { secret: secret });
};

KeyPair.prototype.secret = function secret() {
  return this._secret;
};

cachedProperty(KeyPair, 'pubBytes', function pubBytes() {
  return this.eddsa.encodePoint(this.pub());
});

cachedProperty(KeyPair, 'pub', function pub() {
  if (this._pubBytes)
    return this.eddsa.decodePoint(this._pubBytes);
  return this.eddsa.g.mul(this.priv());
});

cachedProperty(KeyPair, 'privBytes', function privBytes() {
  var eddsa = this.eddsa;
  var hash = this.hash();
  var lastIx = eddsa.encodingLength - 1;

  var a = hash.slice(0, eddsa.encodingLength);
  a[0] &= 248;
  a[lastIx] &= 127;
  a[lastIx] |= 64;

  return a;
});

cachedProperty(KeyPair, 'priv', function priv() {
  return this.eddsa.decodeInt(this.privBytes());
});

cachedProperty(KeyPair, 'hash', function hash() {
  return this.eddsa.hash().update(this.secret()).digest();
});

cachedProperty(KeyPair, 'messagePrefix', function messagePrefix() {
  return this.hash().slice(this.eddsa.encodingLength);
});

KeyPair.prototype.sign = function sign(message) {
  assert(this._secret, 'KeyPair can only verify');
  return this.eddsa.sign(message, this);
};

KeyPair.prototype.verify = function verify(message, sig) {
  return this.eddsa.verify(message, sig, this);
};

KeyPair.prototype.getSecret = function getSecret(enc) {
  assert(this._secret, 'KeyPair is public only');
  return utils.encode(this.secret(), enc);
};

KeyPair.prototype.getPublic = function getPublic(enc) {
  return utils.encode(this.pubBytes(), enc);
};

module.exports = KeyPair;


/***/ }),

/***/ "./node_modules/elliptic/lib/elliptic/eddsa/signature.js":
/*!***************************************************************!*\
  !*** ./node_modules/elliptic/lib/elliptic/eddsa/signature.js ***!
  \***************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var BN = __webpack_require__(/*! bn.js */ "./node_modules/bn.js/lib/bn.js");
var utils = __webpack_require__(/*! ../utils */ "./node_modules/elliptic/lib/elliptic/utils.js");
var assert = utils.assert;
var cachedProperty = utils.cachedProperty;
var parseBytes = utils.parseBytes;

/**
* @param {EDDSA} eddsa - eddsa instance
* @param {Array<Bytes>|Object} sig -
* @param {Array<Bytes>|Point} [sig.R] - R point as Point or bytes
* @param {Array<Bytes>|bn} [sig.S] - S scalar as bn or bytes
* @param {Array<Bytes>} [sig.Rencoded] - R point encoded
* @param {Array<Bytes>} [sig.Sencoded] - S scalar encoded
*/
function Signature(eddsa, sig) {
  this.eddsa = eddsa;

  if (typeof sig !== 'object')
    sig = parseBytes(sig);

  if (Array.isArray(sig)) {
    sig = {
      R: sig.slice(0, eddsa.encodingLength),
      S: sig.slice(eddsa.encodingLength),
    };
  }

  assert(sig.R && sig.S, 'Signature without R or S');

  if (eddsa.isPoint(sig.R))
    this._R = sig.R;
  if (sig.S instanceof BN)
    this._S = sig.S;

  this._Rencoded = Array.isArray(sig.R) ? sig.R : sig.Rencoded;
  this._Sencoded = Array.isArray(sig.S) ? sig.S : sig.Sencoded;
}

cachedProperty(Signature, 'S', function S() {
  return this.eddsa.decodeInt(this.Sencoded());
});

cachedProperty(Signature, 'R', function R() {
  return this.eddsa.decodePoint(this.Rencoded());
});

cachedProperty(Signature, 'Rencoded', function Rencoded() {
  return this.eddsa.encodePoint(this.R());
});

cachedProperty(Signature, 'Sencoded', function Sencoded() {
  return this.eddsa.encodeInt(this.S());
});

Signature.prototype.toBytes = function toBytes() {
  return this.Rencoded().concat(this.Sencoded());
};

Signature.prototype.toHex = function toHex() {
  return utils.encode(this.toBytes(), 'hex').toUpperCase();
};

module.exports = Signature;


/***/ }),

/***/ "./node_modules/elliptic/lib/elliptic/precomputed/secp256k1.js":
/*!*********************************************************************!*\
  !*** ./node_modules/elliptic/lib/elliptic/precomputed/secp256k1.js ***!
  \*********************************************************************/
/***/ ((module) => {

module.exports = {
  doubles: {
    step: 4,
    points: [
      [
        'e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a',
        'f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821',
      ],
      [
        '8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508',
        '11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf',
      ],
      [
        '175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739',
        'd3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695',
      ],
      [
        '363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640',
        '4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9',
      ],
      [
        '8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c',
        '4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36',
      ],
      [
        '723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda',
        '96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f',
      ],
      [
        'eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa',
        '5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999',
      ],
      [
        '100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0',
        'cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09',
      ],
      [
        'e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d',
        '9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d',
      ],
      [
        'feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d',
        'e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088',
      ],
      [
        'da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1',
        '9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d',
      ],
      [
        '53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0',
        '5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8',
      ],
      [
        '8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047',
        '10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a',
      ],
      [
        '385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862',
        '283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453',
      ],
      [
        '6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7',
        '7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160',
      ],
      [
        '3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd',
        '56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0',
      ],
      [
        '85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83',
        '7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6',
      ],
      [
        '948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a',
        '53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589',
      ],
      [
        '6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8',
        'bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17',
      ],
      [
        'e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d',
        '4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda',
      ],
      [
        'e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725',
        '7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd',
      ],
      [
        '213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754',
        '4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2',
      ],
      [
        '4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c',
        '17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6',
      ],
      [
        'fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6',
        '6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f',
      ],
      [
        '76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39',
        'c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01',
      ],
      [
        'c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891',
        '893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3',
      ],
      [
        'd895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b',
        'febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f',
      ],
      [
        'b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03',
        '2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7',
      ],
      [
        'e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d',
        'eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78',
      ],
      [
        'a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070',
        '7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1',
      ],
      [
        '90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4',
        'e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150',
      ],
      [
        '8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da',
        '662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82',
      ],
      [
        'e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11',
        '1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc',
      ],
      [
        '8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e',
        'efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b',
      ],
      [
        'e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41',
        '2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51',
      ],
      [
        'b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef',
        '67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45',
      ],
      [
        'd68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8',
        'db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120',
      ],
      [
        '324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d',
        '648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84',
      ],
      [
        '4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96',
        '35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d',
      ],
      [
        '9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd',
        'ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d',
      ],
      [
        '6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5',
        '9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8',
      ],
      [
        'a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266',
        '40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8',
      ],
      [
        '7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71',
        '34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac',
      ],
      [
        '928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac',
        'c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f',
      ],
      [
        '85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751',
        '1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962',
      ],
      [
        'ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e',
        '493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907',
      ],
      [
        '827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241',
        'c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec',
      ],
      [
        'eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3',
        'be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d',
      ],
      [
        'e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f',
        '4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414',
      ],
      [
        '1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19',
        'aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd',
      ],
      [
        '146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be',
        'b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0',
      ],
      [
        'fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9',
        '6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811',
      ],
      [
        'da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2',
        '8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1',
      ],
      [
        'a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13',
        '7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c',
      ],
      [
        '174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c',
        'ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73',
      ],
      [
        '959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba',
        '2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd',
      ],
      [
        'd2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151',
        'e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405',
      ],
      [
        '64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073',
        'd99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589',
      ],
      [
        '8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458',
        '38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e',
      ],
      [
        '13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b',
        '69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27',
      ],
      [
        'bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366',
        'd3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1',
      ],
      [
        '8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa',
        '40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482',
      ],
      [
        '8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0',
        '620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945',
      ],
      [
        'dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787',
        '7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573',
      ],
      [
        'f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e',
        'ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82',
      ],
    ],
  },
  naf: {
    wnd: 7,
    points: [
      [
        'f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9',
        '388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672',
      ],
      [
        '2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4',
        'd8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6',
      ],
      [
        '5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc',
        '6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da',
      ],
      [
        'acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe',
        'cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37',
      ],
      [
        '774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb',
        'd984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b',
      ],
      [
        'f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8',
        'ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81',
      ],
      [
        'd7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e',
        '581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58',
      ],
      [
        'defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34',
        '4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77',
      ],
      [
        '2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c',
        '85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a',
      ],
      [
        '352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5',
        '321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c',
      ],
      [
        '2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f',
        '2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67',
      ],
      [
        '9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714',
        '73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402',
      ],
      [
        'daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729',
        'a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55',
      ],
      [
        'c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db',
        '2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482',
      ],
      [
        '6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4',
        'e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82',
      ],
      [
        '1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5',
        'b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396',
      ],
      [
        '605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479',
        '2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49',
      ],
      [
        '62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d',
        '80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf',
      ],
      [
        '80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f',
        '1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a',
      ],
      [
        '7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb',
        'd0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7',
      ],
      [
        'd528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9',
        'eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933',
      ],
      [
        '49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963',
        '758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a',
      ],
      [
        '77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74',
        '958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6',
      ],
      [
        'f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530',
        'e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37',
      ],
      [
        '463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b',
        '5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e',
      ],
      [
        'f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247',
        'cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6',
      ],
      [
        'caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1',
        'cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476',
      ],
      [
        '2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120',
        '4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40',
      ],
      [
        '7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435',
        '91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61',
      ],
      [
        '754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18',
        '673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683',
      ],
      [
        'e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8',
        '59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5',
      ],
      [
        '186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb',
        '3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b',
      ],
      [
        'df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f',
        '55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417',
      ],
      [
        '5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143',
        'efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868',
      ],
      [
        '290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba',
        'e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a',
      ],
      [
        'af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45',
        'f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6',
      ],
      [
        '766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a',
        '744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996',
      ],
      [
        '59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e',
        'c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e',
      ],
      [
        'f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8',
        'e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d',
      ],
      [
        '7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c',
        '30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2',
      ],
      [
        '948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519',
        'e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e',
      ],
      [
        '7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab',
        '100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437',
      ],
      [
        '3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca',
        'ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311',
      ],
      [
        'd3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf',
        '8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4',
      ],
      [
        '1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610',
        '68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575',
      ],
      [
        '733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4',
        'f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d',
      ],
      [
        '15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c',
        'd56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d',
      ],
      [
        'a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940',
        'edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629',
      ],
      [
        'e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980',
        'a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06',
      ],
      [
        '311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3',
        '66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374',
      ],
      [
        '34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf',
        '9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee',
      ],
      [
        'f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63',
        '4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1',
      ],
      [
        'd7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448',
        'fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b',
      ],
      [
        '32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf',
        '5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661',
      ],
      [
        '7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5',
        '8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6',
      ],
      [
        'ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6',
        '8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e',
      ],
      [
        '16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5',
        '5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d',
      ],
      [
        'eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99',
        'f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc',
      ],
      [
        '78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51',
        'f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4',
      ],
      [
        '494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5',
        '42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c',
      ],
      [
        'a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5',
        '204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b',
      ],
      [
        'c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997',
        '4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913',
      ],
      [
        '841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881',
        '73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154',
      ],
      [
        '5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5',
        '39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865',
      ],
      [
        '36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66',
        'd2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc',
      ],
      [
        '336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726',
        'ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224',
      ],
      [
        '8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede',
        '6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e',
      ],
      [
        '1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94',
        '60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6',
      ],
      [
        '85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31',
        '3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511',
      ],
      [
        '29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51',
        'b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b',
      ],
      [
        'a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252',
        'ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2',
      ],
      [
        '4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5',
        'cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c',
      ],
      [
        'd24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b',
        '6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3',
      ],
      [
        'ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4',
        '322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d',
      ],
      [
        'af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f',
        '6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700',
      ],
      [
        'e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889',
        '2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4',
      ],
      [
        '591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246',
        'b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196',
      ],
      [
        '11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984',
        '998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4',
      ],
      [
        '3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a',
        'b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257',
      ],
      [
        'cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030',
        'bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13',
      ],
      [
        'c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197',
        '6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096',
      ],
      [
        'c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593',
        'c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38',
      ],
      [
        'a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef',
        '21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f',
      ],
      [
        '347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38',
        '60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448',
      ],
      [
        'da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a',
        '49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a',
      ],
      [
        'c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111',
        '5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4',
      ],
      [
        '4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502',
        '7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437',
      ],
      [
        '3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea',
        'be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7',
      ],
      [
        'cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26',
        '8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d',
      ],
      [
        'b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986',
        '39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a',
      ],
      [
        'd4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e',
        '62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54',
      ],
      [
        '48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4',
        '25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77',
      ],
      [
        'dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda',
        'ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517',
      ],
      [
        '6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859',
        'cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10',
      ],
      [
        'e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f',
        'f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125',
      ],
      [
        'eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c',
        '6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e',
      ],
      [
        '13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942',
        'fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1',
      ],
      [
        'ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a',
        '1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2',
      ],
      [
        'b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80',
        '5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423',
      ],
      [
        'ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d',
        '438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8',
      ],
      [
        '8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1',
        'cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758',
      ],
      [
        '52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63',
        'c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375',
      ],
      [
        'e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352',
        '6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d',
      ],
      [
        '7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193',
        'ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec',
      ],
      [
        '5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00',
        '9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0',
      ],
      [
        '32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58',
        'ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c',
      ],
      [
        'e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7',
        'd3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4',
      ],
      [
        '8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8',
        'c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f',
      ],
      [
        '4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e',
        '67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649',
      ],
      [
        '3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d',
        'cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826',
      ],
      [
        '674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b',
        '299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5',
      ],
      [
        'd32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f',
        'f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87',
      ],
      [
        '30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6',
        '462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b',
      ],
      [
        'be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297',
        '62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc',
      ],
      [
        '93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a',
        '7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c',
      ],
      [
        'b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c',
        'ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f',
      ],
      [
        'd5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52',
        '4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a',
      ],
      [
        'd3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb',
        'bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46',
      ],
      [
        '463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065',
        'bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f',
      ],
      [
        '7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917',
        '603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03',
      ],
      [
        '74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9',
        'cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08',
      ],
      [
        '30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3',
        '553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8',
      ],
      [
        '9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57',
        '712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373',
      ],
      [
        '176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66',
        'ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3',
      ],
      [
        '75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8',
        '9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8',
      ],
      [
        '809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721',
        '9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1',
      ],
      [
        '1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180',
        '4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9',
      ],
    ],
  },
};


/***/ }),

/***/ "./node_modules/elliptic/lib/elliptic/utils.js":
/*!*****************************************************!*\
  !*** ./node_modules/elliptic/lib/elliptic/utils.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


var utils = exports;
var BN = __webpack_require__(/*! bn.js */ "./node_modules/bn.js/lib/bn.js");
var minAssert = __webpack_require__(/*! minimalistic-assert */ "./node_modules/minimalistic-assert/index.js");
var minUtils = __webpack_require__(/*! minimalistic-crypto-utils */ "./node_modules/minimalistic-crypto-utils/lib/utils.js");

utils.assert = minAssert;
utils.toArray = minUtils.toArray;
utils.zero2 = minUtils.zero2;
utils.toHex = minUtils.toHex;
utils.encode = minUtils.encode;

// Represent num in a w-NAF form
function getNAF(num, w, bits) {
  var naf = new Array(Math.max(num.bitLength(), bits) + 1);
  naf.fill(0);

  var ws = 1 << (w + 1);
  var k = num.clone();

  for (var i = 0; i < naf.length; i++) {
    var z;
    var mod = k.andln(ws - 1);
    if (k.isOdd()) {
      if (mod > (ws >> 1) - 1)
        z = (ws >> 1) - mod;
      else
        z = mod;
      k.isubn(z);
    } else {
      z = 0;
    }

    naf[i] = z;
    k.iushrn(1);
  }

  return naf;
}
utils.getNAF = getNAF;

// Represent k1, k2 in a Joint Sparse Form
function getJSF(k1, k2) {
  var jsf = [
    [],
    [],
  ];

  k1 = k1.clone();
  k2 = k2.clone();
  var d1 = 0;
  var d2 = 0;
  var m8;
  while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {
    // First phase
    var m14 = (k1.andln(3) + d1) & 3;
    var m24 = (k2.andln(3) + d2) & 3;
    if (m14 === 3)
      m14 = -1;
    if (m24 === 3)
      m24 = -1;
    var u1;
    if ((m14 & 1) === 0) {
      u1 = 0;
    } else {
      m8 = (k1.andln(7) + d1) & 7;
      if ((m8 === 3 || m8 === 5) && m24 === 2)
        u1 = -m14;
      else
        u1 = m14;
    }
    jsf[0].push(u1);

    var u2;
    if ((m24 & 1) === 0) {
      u2 = 0;
    } else {
      m8 = (k2.andln(7) + d2) & 7;
      if ((m8 === 3 || m8 === 5) && m14 === 2)
        u2 = -m24;
      else
        u2 = m24;
    }
    jsf[1].push(u2);

    // Second phase
    if (2 * d1 === u1 + 1)
      d1 = 1 - d1;
    if (2 * d2 === u2 + 1)
      d2 = 1 - d2;
    k1.iushrn(1);
    k2.iushrn(1);
  }

  return jsf;
}
utils.getJSF = getJSF;

function cachedProperty(obj, name, computer) {
  var key = '_' + name;
  obj.prototype[name] = function cachedProperty() {
    return this[key] !== undefined ? this[key] :
      this[key] = computer.call(this);
  };
}
utils.cachedProperty = cachedProperty;

function parseBytes(bytes) {
  return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') :
    bytes;
}
utils.parseBytes = parseBytes;

function intFromLE(bytes) {
  return new BN(bytes, 'hex', 'le');
}
utils.intFromLE = intFromLE;



/***/ }),

/***/ "./src/annotations/annotationProvider.ts":
/*!***********************************************!*\
  !*** ./src/annotations/annotationProvider.ts ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AnnotationStatus": () => (/* binding */ AnnotationStatus),
/* harmony export */   "AnnotationProviderBase": () => (/* binding */ AnnotationProviderBase)
/* harmony export */ });
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../constants */ "./src/constants.ts");
/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../logger */ "./src/logger.ts");

var __defProp = Object.defineProperty;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};



var AnnotationStatus;
(function(AnnotationStatus2) {
  AnnotationStatus2["Computing"] = "computing";
  AnnotationStatus2["Computed"] = "computed";
})(AnnotationStatus || (AnnotationStatus = {}));
class AnnotationProviderBase {
  constructor(annotationType, editor, trackedDocument) {
    this.annotationType = annotationType;
    this.editor = editor;
    this.trackedDocument = trackedDocument;
    __publicField(this, "annotationContext");
    __publicField(this, "correlationKey");
    __publicField(this, "document");
    __publicField(this, "status");
    __publicField(this, "decorations");
    __publicField(this, "disposable");
    this.correlationKey = AnnotationProviderBase.getCorrelationKey(this.editor);
    this.document = this.editor.document;
    this.disposable = vscode__WEBPACK_IMPORTED_MODULE_0__.Disposable.from(vscode__WEBPACK_IMPORTED_MODULE_0__.window.onDidChangeTextEditorSelection(this.onTextEditorSelectionChanged, this));
  }
  static getCorrelationKey(editor) {
    return `${editor == null ? void 0 : editor.document.uri.toString()}|${editor == null ? void 0 : editor.viewColumn}`;
  }
  dispose() {
    this.clear();
    this.disposable.dispose();
  }
  onTextEditorSelectionChanged(e) {
    if (this.document !== e.textEditor.document)
      return;
    void this.selection({ line: e.selections[0].active.line });
  }
  get editorUri() {
    var _a, _b;
    return (_b = (_a = this.editor) == null ? void 0 : _a.document) == null ? void 0 : _b.uri;
  }
  clear() {
    var _a;
    this.annotationContext = void 0;
    this.status = void 0;
    if (this.editor == null)
      return;
    if ((_a = this.decorations) == null ? void 0 : _a.length) {
      for (const d of this.decorations) {
        try {
          this.editor.setDecorations(d.decorationType, []);
        } catch {
        }
      }
      this.decorations = void 0;
    }
  }
  mustReopen(_context) {
    return false;
  }
  async restore(editor) {
    var _a;
    if (this.editor._disposed === false)
      return;
    this.status = AnnotationStatus.Computing;
    if (editor === vscode__WEBPACK_IMPORTED_MODULE_0__.window.activeTextEditor) {
      await (0,_constants__WEBPACK_IMPORTED_MODULE_1__.setContext)(_constants__WEBPACK_IMPORTED_MODULE_1__.ContextKeys.AnnotationStatus, this.status);
    }
    this.editor = editor;
    this.correlationKey = AnnotationProviderBase.getCorrelationKey(editor);
    this.document = editor.document;
    if ((_a = this.decorations) == null ? void 0 : _a.length) {
      for (const d of this.decorations) {
        this.editor.setDecorations(d.decorationType, d.rangesOrOptions);
      }
    }
    this.status = AnnotationStatus.Computed;
    if (editor === vscode__WEBPACK_IMPORTED_MODULE_0__.window.activeTextEditor) {
      await (0,_constants__WEBPACK_IMPORTED_MODULE_1__.setContext)(_constants__WEBPACK_IMPORTED_MODULE_1__.ContextKeys.AnnotationStatus, this.status);
    }
  }
  async provideAnnotation(context) {
    this.status = AnnotationStatus.Computing;
    try {
      if (await this.onProvideAnnotation(context)) {
        this.status = AnnotationStatus.Computed;
        return true;
      }
    } catch (ex) {
      _logger__WEBPACK_IMPORTED_MODULE_2__.Logger.error(ex);
    }
    this.status = void 0;
    return false;
  }
  setDecorations(decorations) {
    var _a, _b;
    if ((_a = this.decorations) == null ? void 0 : _a.length) {
      this.clear();
    }
    this.decorations = decorations;
    if ((_b = this.decorations) == null ? void 0 : _b.length) {
      for (const d of this.decorations) {
        this.editor.setDecorations(d.decorationType, d.rangesOrOptions);
      }
    }
  }
}


/***/ }),

/***/ "./src/annotations/annotations.ts":
/*!****************************************!*\
  !*** ./src/annotations/annotations.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getHeatmapColors": () => (/* binding */ getHeatmapColors),
/* harmony export */   "Annotations": () => (/* binding */ Annotations)
/* harmony export */ });
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../config */ "./src/config.ts");
/* harmony import */ var _configuration__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../configuration */ "./src/configuration.ts");
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../constants */ "./src/constants.ts");
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../container */ "./src/container.ts");
/* harmony import */ var _git_git__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../git/git */ "./src/git/git.ts");
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../system */ "./src/system.ts");
/* harmony import */ var _webviews_apps_shared_colors__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../webviews/apps/shared/colors */ "./src/webviews/apps/shared/colors.ts");









const defaultHeatmapHotColor = "#f66a0a";
const defaultHeatmapColdColor = "#0a60f6";
const defaultHeatmapColors = [
  "#f66a0a",
  "#ef6939",
  "#e96950",
  "#e26862",
  "#db6871",
  "#d3677e",
  "#cc678a",
  "#c46696",
  "#bb66a0",
  "#b365a9",
  "#a965b3",
  "#a064bb",
  "#9664c4",
  "#8a63cc",
  "#7e63d3",
  "#7162db",
  "#6262e2",
  "#5061e9",
  "#3961ef",
  "#0a60f6"
];
let heatmapColors;
async function getHeatmapColors() {
  if (heatmapColors == null) {
    let colors;
    if (_container__WEBPACK_IMPORTED_MODULE_4__.Container.config.heatmap.coldColor === defaultHeatmapColdColor && _container__WEBPACK_IMPORTED_MODULE_4__.Container.config.heatmap.hotColor === defaultHeatmapHotColor) {
      colors = defaultHeatmapColors;
    } else {
      const chroma = (await __webpack_require__.e(/*! import() | heatmap-chroma */ "heatmap-chroma").then(__webpack_require__.t.bind(__webpack_require__, /*! chroma-js */ "./node_modules/chroma-js/chroma.js", 23))).default;
      colors = chroma.scale([_container__WEBPACK_IMPORTED_MODULE_4__.Container.config.heatmap.hotColor, _container__WEBPACK_IMPORTED_MODULE_4__.Container.config.heatmap.coldColor]).mode("lrgb").classes(20).colors(20);
    }
    heatmapColors = {
      hot: colors.slice(0, 10),
      cold: colors.slice(10, 20)
    };
    const disposable = _configuration__WEBPACK_IMPORTED_MODULE_2__.configuration.onDidChange((e) => {
      if (_configuration__WEBPACK_IMPORTED_MODULE_2__.configuration.changed(e, "heatmap.ageThreshold") || _configuration__WEBPACK_IMPORTED_MODULE_2__.configuration.changed(e, "heatmap.hotColor") || _configuration__WEBPACK_IMPORTED_MODULE_2__.configuration.changed(e, "heatmap.coldColor")) {
        disposable.dispose();
        heatmapColors = void 0;
      }
    });
  }
  return heatmapColors;
}
class Annotations {
  static applyHeatmap(decoration, date, heatmap) {
    const [r, g, b, a] = this.getHeatmapColor(date, heatmap);
    decoration.renderOptions.before.borderColor = `rgba(${r},${g},${b},${a})`;
  }
  static addOrUpdateGutterHeatmapDecoration(date, heatmap, range, map) {
    const [r, g, b, a] = this.getHeatmapColor(date, heatmap);
    const { locations } = _container__WEBPACK_IMPORTED_MODULE_4__.Container.config.heatmap;
    const gutter = locations.includes(_config__WEBPACK_IMPORTED_MODULE_1__.HeatmapLocations.Gutter);
    const overview = locations.includes(_config__WEBPACK_IMPORTED_MODULE_1__.HeatmapLocations.Overview);
    const key = `${r},${g},${b},${a}`;
    let colorDecoration = map.get(key);
    if (colorDecoration == null) {
      colorDecoration = {
        decorationType: vscode__WEBPACK_IMPORTED_MODULE_0__.window.createTextEditorDecorationType({
          gutterIconPath: gutter ? vscode__WEBPACK_IMPORTED_MODULE_0__.Uri.parse(`data:image/svg+xml,${encodeURIComponent(`<svg xmlns='http://www.w3.org/2000/svg' width='18' height='18' viewBox='0 0 18 18'><rect fill='rgb(${r},${g},${b})' fill-opacity='${a}' x='7' y='0' width='2' height='18'/></svg>`)}`) : void 0,
          gutterIconSize: gutter ? "contain" : void 0,
          overviewRulerLane: overview ? vscode__WEBPACK_IMPORTED_MODULE_0__.OverviewRulerLane.Center : void 0,
          overviewRulerColor: overview ? `rgba(${r},${g},${b},${a})` : void 0
        }),
        rangesOrOptions: [range]
      };
      map.set(key, colorDecoration);
    } else {
      colorDecoration.rangesOrOptions.push(range);
    }
    return colorDecoration.decorationType;
  }
  static gutter(commit, format, dateFormatOrFormatOptions, renderOptions) {
    const decoration = {
      renderOptions: {
        before: { ...renderOptions }
      }
    };
    if (commit.isUncommitted) {
      decoration.renderOptions.before.color = renderOptions.uncommittedColor;
    }
    const message = _git_git__WEBPACK_IMPORTED_MODULE_5__.CommitFormatter.fromTemplate(format, commit, dateFormatOrFormatOptions);
    decoration.renderOptions.before.contentText = _system__WEBPACK_IMPORTED_MODULE_6__.Strings.pad(message.replace(/ /g, _constants__WEBPACK_IMPORTED_MODULE_3__.GlyphChars.Space), 1, 1);
    return decoration;
  }
  static gutterRenderOptions(separateLines, heatmap, avatars, format, options) {
    let chars = 0;
    for (const token of Object.values(options.tokenOptions)) {
      if (token === void 0)
        continue;
      if (token.truncateTo == null) {
        chars = -1;
        break;
      }
      chars += token.truncateTo;
    }
    if (chars >= 0) {
      chars += _system__WEBPACK_IMPORTED_MODULE_6__.Strings.getWidth(_system__WEBPACK_IMPORTED_MODULE_6__.Strings.interpolate(format, void 0));
      if (chars > 0) {
        chars += 3;
      }
    }
    let borderStyle = void 0;
    let borderWidth = void 0;
    if (heatmap.enabled) {
      borderStyle = "solid";
      borderWidth = heatmap.location === "left" ? "0 0 0 2px" : "0 2px 0 0";
    }
    let width;
    if (chars >= 0) {
      const spacing = _configuration__WEBPACK_IMPORTED_MODULE_2__.configuration.getAny("editor.letterSpacing");
      if (spacing != null && spacing !== 0) {
        width = `calc(${chars}ch + ${Math.round(chars * spacing) + (avatars ? 13 : -6)}px)`;
      } else {
        width = `calc(${chars}ch ${avatars ? "+ 13px" : "- 6px"})`;
      }
    }
    return {
      backgroundColor: new vscode__WEBPACK_IMPORTED_MODULE_0__.ThemeColor(_constants__WEBPACK_IMPORTED_MODULE_3__.Colors.GutterBackgroundColor),
      borderStyle,
      borderWidth,
      color: new vscode__WEBPACK_IMPORTED_MODULE_0__.ThemeColor(_constants__WEBPACK_IMPORTED_MODULE_3__.Colors.GutterForegroundColor),
      fontWeight: "normal",
      fontStyle: "normal",
      height: "100%",
      margin: "0 26px -1px 0",
      textDecoration: `${separateLines ? "overline solid rgba(0, 0, 0, .2)" : "none"};box-sizing: border-box${avatars ? ";padding: 0 0 0 18px" : ""}`,
      width,
      uncommittedColor: new vscode__WEBPACK_IMPORTED_MODULE_0__.ThemeColor(_constants__WEBPACK_IMPORTED_MODULE_3__.Colors.GutterUncommittedForegroundColor)
    };
  }
  static trailing(commit, format, formatOptions, scrollable = true) {
    const message = _git_git__WEBPACK_IMPORTED_MODULE_5__.CommitFormatter.fromTemplate(format, commit, {
      ...formatOptions,
      messageTruncateAtNewLine: true
    });
    return {
      renderOptions: {
        after: {
          backgroundColor: new vscode__WEBPACK_IMPORTED_MODULE_0__.ThemeColor(_constants__WEBPACK_IMPORTED_MODULE_3__.Colors.TrailingLineBackgroundColor),
          color: new vscode__WEBPACK_IMPORTED_MODULE_0__.ThemeColor(_constants__WEBPACK_IMPORTED_MODULE_3__.Colors.TrailingLineForegroundColor),
          contentText: _system__WEBPACK_IMPORTED_MODULE_6__.Strings.pad(message.replace(/ /g, _constants__WEBPACK_IMPORTED_MODULE_3__.GlyphChars.Space), 1, 1),
          fontWeight: "normal",
          fontStyle: "normal",
          textDecoration: `none;${scrollable ? "" : " position: absolute;"}`
        }
      }
    };
  }
  static getHeatmapColor(date, heatmap) {
    const age = heatmap.computeRelativeAge(date);
    const colors = date.getTime() < heatmap.coldThresholdTimestamp ? heatmap.colors.cold : heatmap.colors.hot;
    const color = (0,_webviews_apps_shared_colors__WEBPACK_IMPORTED_MODULE_7__.toRgba)(colors[age]);
    const a = color == null ? 0 : age === 0 ? 1 : age <= 5 ? 0.8 : 0.6;
    return [...color != null ? color : [0, 0, 0], a];
  }
}


/***/ }),

/***/ "./src/annotations/autolinks.ts":
/*!**************************************!*\
  !*** ./src/annotations/autolinks.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Autolinks": () => (/* binding */ Autolinks)
/* harmony export */ });
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _configuration__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../configuration */ "./src/configuration.ts");
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../constants */ "./src/constants.ts");
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../container */ "./src/container.ts");
/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../logger */ "./src/logger.ts");
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../system */ "./src/system.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};






const numRegex = /<num>/g;
function isDynamic(ref) {
  return ref.prefix === void 0 && ref.url === void 0;
}
function isCacheable(ref) {
  return ref.prefix !== void 0 && ref.url !== void 0;
}
class Autolinks {
  constructor() {
    __publicField(this, "_disposable");
    __publicField(this, "_references", []);
    this._disposable = vscode__WEBPACK_IMPORTED_MODULE_0__.Disposable.from(_configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.onDidChange(this.onConfigurationChanged, this));
    this.onConfigurationChanged();
  }
  dispose() {
    var _a;
    (_a = this._disposable) == null ? void 0 : _a.dispose();
  }
  onConfigurationChanged(e) {
    var _a;
    if (_configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.changed(e, "autolinks")) {
      this._references = (_a = _container__WEBPACK_IMPORTED_MODULE_3__.Container.config.autolinks) != null ? _a : [];
    }
  }
  async getIssueOrPullRequestLinks(message, remote, { timeout } = {}) {
    var _a, _b;
    if (!((_a = remote.provider) == null ? void 0 : _a.hasApi()))
      return void 0;
    const { provider } = remote;
    const connected = (_b = provider.maybeConnected) != null ? _b : await provider.isConnected();
    if (!connected)
      return void 0;
    const ids = new Set();
    let match;
    let num;
    for (const ref of provider.autolinks) {
      if (!isCacheable(ref))
        continue;
      if (ref.messageRegex === void 0) {
        ref.messageRegex = new RegExp(`(?<=^|\\s|\\(|\\\\\\[)(${_system__WEBPACK_IMPORTED_MODULE_5__.Strings.escapeRegex(ref.prefix)}([${ref.alphanumeric ? "\\w" : "0-9"}]+))\\b`, ref.ignoreCase ? "gi" : "g");
      }
      do {
        match = ref.messageRegex.exec(message);
        if (match == null)
          break;
        [, , num] = match;
        ids.add(num);
      } while (true);
    }
    if (ids.size === 0)
      return void 0;
    const issuesOrPullRequests = await _system__WEBPACK_IMPORTED_MODULE_5__.Promises.raceAll(ids.values(), (id) => provider.getIssueOrPullRequest(id), timeout);
    if (issuesOrPullRequests.size === 0 || _system__WEBPACK_IMPORTED_MODULE_5__.Iterables.every(issuesOrPullRequests.values(), (pr) => pr === void 0)) {
      return void 0;
    }
    return issuesOrPullRequests;
  }
  linkify(text, markdown, remotes, issuesOrPullRequests, footnotes) {
    for (const ref of this._references) {
      if (this.ensureAutolinkCached(ref, issuesOrPullRequests)) {
        if (ref.linkify != null) {
          text = ref.linkify(text, markdown, footnotes);
        }
      }
    }
    if (remotes != null && remotes.length !== 0) {
      for (const r of remotes) {
        if (r.provider === void 0)
          continue;
        for (const ref of r.provider.autolinks) {
          if (this.ensureAutolinkCached(ref, issuesOrPullRequests)) {
            if (ref.linkify != null) {
              text = ref.linkify(text, markdown, footnotes);
            }
          }
        }
      }
    }
    return text;
  }
  ensureAutolinkCached(ref, issuesOrPullRequests) {
    if (isDynamic(ref))
      return true;
    try {
      if (ref.messageMarkdownRegex === void 0) {
        ref.messageMarkdownRegex = new RegExp(`(?<=^|\\s|\\(|\\\\\\[)(${_system__WEBPACK_IMPORTED_MODULE_5__.Strings.escapeRegex(_system__WEBPACK_IMPORTED_MODULE_5__.Strings.escapeMarkdown(ref.prefix))}([${ref.alphanumeric ? "\\w" : "0-9"}]+))\\b`, ref.ignoreCase ? "gi" : "g");
      }
      if (issuesOrPullRequests == null || issuesOrPullRequests.size === 0) {
        const replacement = `[$1](${ref.url.replace(numRegex, "$2")}${ref.title ? ` "${ref.title.replace(numRegex, "$2")}"` : ""})`;
        ref.linkify = (text, markdown) => markdown ? text.replace(ref.messageMarkdownRegex, replacement) : text;
        return true;
      }
      ref.linkify = (text, markdown, footnotes) => {
        const includeFootnotes = footnotes == null;
        let index;
        if (markdown) {
          return text.replace(ref.messageMarkdownRegex, (_substring, linkText, num) => {
            var _a, _b;
            const issue = issuesOrPullRequests == null ? void 0 : issuesOrPullRequests.get(num);
            const issueUrl = ref.url.replace(numRegex, num);
            let title = "";
            if (ref.title) {
              title = ` "${ref.title.replace(numRegex, num)}`;
              if (issue != null) {
                if (issue instanceof _system__WEBPACK_IMPORTED_MODULE_5__.Promises.CancellationError) {
                  title += `
${_constants__WEBPACK_IMPORTED_MODULE_2__.GlyphChars.Dash.repeat(2)}
Details timed out`;
                } else {
                  const issueTitle = issue.title.replace(/([")\\])/g, "\\$1").trim();
                  if (footnotes != null) {
                    index = footnotes.size + 1;
                    footnotes.set(index, `[**${issue.type === "PullRequest" ? "$(git-pull-request)" : "$(info)"} ${issueTitle}**](${issueUrl}${title}")\\
${_constants__WEBPACK_IMPORTED_MODULE_2__.GlyphChars.Space.repeat(5)}${linkText} ${issue.closed ? "closed" : "opened"} ${_system__WEBPACK_IMPORTED_MODULE_5__.Dates.getFormatter((_a = issue.closedDate) != null ? _a : issue.date).fromNow()}`);
                  }
                  title += `
${_constants__WEBPACK_IMPORTED_MODULE_2__.GlyphChars.Dash.repeat(2)}
${issueTitle}
${issue.closed ? "Closed" : "Opened"}, ${_system__WEBPACK_IMPORTED_MODULE_5__.Dates.getFormatter((_b = issue.closedDate) != null ? _b : issue.date).fromNow()}`;
                }
              }
              title += '"';
            }
            return `[${linkText}](${issueUrl}${title})`;
          });
        }
        text = text.replace(ref.messageRegex, (_substring, linkText, num) => {
          var _a;
          const issue = issuesOrPullRequests == null ? void 0 : issuesOrPullRequests.get(num);
          if (issue == null)
            return linkText;
          if (footnotes === void 0) {
            footnotes = new Map();
          }
          index = footnotes.size + 1;
          footnotes.set(index, `${linkText}: ${issue instanceof _system__WEBPACK_IMPORTED_MODULE_5__.Promises.CancellationError ? "Details timed out" : `${issue.title}  ${_constants__WEBPACK_IMPORTED_MODULE_2__.GlyphChars.Dot}  ${issue.closed ? "Closed" : "Opened"}, ${_system__WEBPACK_IMPORTED_MODULE_5__.Dates.getFormatter((_a = issue.closedDate) != null ? _a : issue.date).fromNow()}`}`);
          return `${linkText}${_system__WEBPACK_IMPORTED_MODULE_5__.Strings.getSuperscript(index)}`;
        });
        return includeFootnotes && footnotes != null && footnotes.size !== 0 ? `${text}
${_constants__WEBPACK_IMPORTED_MODULE_2__.GlyphChars.Dash.repeat(2)}
${_system__WEBPACK_IMPORTED_MODULE_5__.Iterables.join(_system__WEBPACK_IMPORTED_MODULE_5__.Iterables.map(footnotes, ([i, footnote]) => `${_system__WEBPACK_IMPORTED_MODULE_5__.Strings.getSuperscript(i)} ${footnote}`), "\n")}` : text;
      };
    } catch (ex) {
      _logger__WEBPACK_IMPORTED_MODULE_4__.Logger.error(ex, `Failed to create autolink generator: prefix=${ref.prefix}, url=${ref.url}, title=${ref.title}`);
      ref.linkify = null;
    }
    return true;
  }
}
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.debug)({
    args: {
      0: (message) => message.substring(0, 50),
      1: (_) => false,
      2: ({ timeout }) => timeout
    }
  })
], Autolinks.prototype, "getIssueOrPullRequestLinks", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.debug)({
    args: {
      0: (text) => text.substring(0, 30),
      2: (_) => false,
      3: (_) => false
    }
  })
], Autolinks.prototype, "linkify", 1);


/***/ }),

/***/ "./src/annotations/blameAnnotationProvider.ts":
/*!****************************************************!*\
  !*** ./src/annotations/blameAnnotationProvider.ts ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "BlameAnnotationProviderBase": () => (/* binding */ BlameAnnotationProviderBase)
/* harmony export */ });
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../container */ "./src/container.ts");
/* harmony import */ var _git_gitUri__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../git/gitUri */ "./src/git/gitUri.ts");
/* harmony import */ var _hovers_hovers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../hovers/hovers */ "./src/hovers/hovers.ts");
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../system */ "./src/system.ts");
/* harmony import */ var _annotationProvider__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./annotationProvider */ "./src/annotations/annotationProvider.ts");
/* harmony import */ var _annotations__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./annotations */ "./src/annotations/annotations.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};







class BlameAnnotationProviderBase extends _annotationProvider__WEBPACK_IMPORTED_MODULE_5__.AnnotationProviderBase {
  constructor(annotationType, editor, trackedDocument) {
    super(annotationType, editor, trackedDocument);
    __publicField(this, "blame");
    __publicField(this, "hoverProviderDisposable");
    this.blame = editor.document.isDirty ? _container__WEBPACK_IMPORTED_MODULE_1__.Container.git.getBlameForFileContents(this.trackedDocument.uri, editor.document.getText()) : _container__WEBPACK_IMPORTED_MODULE_1__.Container.git.getBlameForFile(this.trackedDocument.uri);
    if (editor.document.isDirty) {
      trackedDocument.setForceDirtyStateChangeOnNextDocumentChange();
    }
  }
  clear() {
    if (this.hoverProviderDisposable != null) {
      this.hoverProviderDisposable.dispose();
      this.hoverProviderDisposable = void 0;
    }
    super.clear();
  }
  async validate() {
    const blame = await this.blame;
    return blame != null && blame.lines.length !== 0;
  }
  async getBlame() {
    const blame = await this.blame;
    if (blame == null || blame.lines.length === 0)
      return void 0;
    return blame;
  }
  async getComputedHeatmap(blame) {
    const dates = [];
    let commit;
    let previousSha;
    for (const l of blame.lines) {
      if (previousSha === l.sha)
        continue;
      previousSha = l.sha;
      commit = blame.commits.get(l.sha);
      if (commit == null)
        continue;
      dates.push(commit.date);
    }
    dates.sort((a, b) => a.getTime() - b.getTime());
    const coldThresholdDate = new Date();
    coldThresholdDate.setDate(coldThresholdDate.getDate() - (_container__WEBPACK_IMPORTED_MODULE_1__.Container.config.heatmap.ageThreshold || 90));
    const coldThresholdTimestamp = coldThresholdDate.getTime();
    const hotDates = [];
    const coldDates = [];
    for (const d of dates) {
      if (d.getTime() < coldThresholdTimestamp) {
        coldDates.push(d);
      } else {
        hotDates.push(d);
      }
    }
    let lookupTable;
    if (hotDates.length && coldDates.length) {
      lookupTable = {
        hot: getRelativeAgeLookupTable(hotDates),
        cold: getRelativeAgeLookupTable(coldDates)
      };
    } else {
      lookupTable = getRelativeAgeLookupTable(dates);
    }
    return {
      coldThresholdTimestamp,
      colors: await (0,_annotations__WEBPACK_IMPORTED_MODULE_6__.getHeatmapColors)(),
      computeRelativeAge: (date) => {
        const lookup = Array.isArray(lookupTable) ? lookupTable : date.getTime() < coldThresholdTimestamp ? lookupTable.cold : lookupTable.hot;
        const time = date.getTime();
        let index = 0;
        for (let i = 0; i < lookup.length; i++) {
          index = i;
          if (time >= lookup[i])
            break;
        }
        return index;
      }
    };
  }
  registerHoverProviders(providers) {
    if (!_container__WEBPACK_IMPORTED_MODULE_1__.Container.config.hovers.enabled || !_container__WEBPACK_IMPORTED_MODULE_1__.Container.config.hovers.annotations.enabled || !providers.details && !providers.changes) {
      return;
    }
    this.hoverProviderDisposable = vscode__WEBPACK_IMPORTED_MODULE_0__.languages.registerHoverProvider({ pattern: this.document.uri.fsPath }, {
      provideHover: (document, position, token) => this.provideHover(providers, document, position, token)
    });
  }
  async provideHover(providers, document, position, _token) {
    if (_container__WEBPACK_IMPORTED_MODULE_1__.Container.config.hovers.annotations.over !== "line" && position.character !== 0)
      return void 0;
    const blame = await this.getBlame();
    if (blame == null)
      return void 0;
    const line = blame.lines[position.line];
    const commit = blame.commits.get(line.sha);
    if (commit == null)
      return void 0;
    const messages = (await Promise.all([
      providers.details ? this.getDetailsHoverMessage(commit, document) : void 0,
      providers.changes ? _hovers_hovers__WEBPACK_IMPORTED_MODULE_3__.Hovers.changesMessage(commit, await _git_gitUri__WEBPACK_IMPORTED_MODULE_2__.GitUri.fromUri(document.uri), position.line) : void 0
    ])).filter((m) => Boolean(m));
    return new vscode__WEBPACK_IMPORTED_MODULE_0__.Hover(messages, document.validateRange(new vscode__WEBPACK_IMPORTED_MODULE_0__.Range(position.line, 0, position.line, Number.MAX_SAFE_INTEGER)));
  }
  async getDetailsHoverMessage(commit, document) {
    var _a;
    let logCommit = void 0;
    if (!commit.isUncommitted) {
      logCommit = await _container__WEBPACK_IMPORTED_MODULE_1__.Container.git.getCommitForFile(commit.repoPath, commit.uri.fsPath, {
        ref: commit.sha
      });
      if (logCommit != null) {
        logCommit.previousFileName = commit.previousFileName;
        logCommit.previousSha = commit.previousSha;
      }
    }
    let editorLine = this.editor.selection.active.line;
    const line = editorLine + 1;
    const commitLine = (_a = commit.lines.find((l) => l.line === line)) != null ? _a : commit.lines[0];
    editorLine = commitLine.originalLine - 1;
    return _hovers_hovers__WEBPACK_IMPORTED_MODULE_3__.Hovers.detailsMessage(logCommit != null ? logCommit : commit, await _git_gitUri__WEBPACK_IMPORTED_MODULE_2__.GitUri.fromUri(document.uri), editorLine, _container__WEBPACK_IMPORTED_MODULE_1__.Container.config.defaultDateFormat);
  }
}
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_4__.log)({ args: false })
], BlameAnnotationProviderBase.prototype, "getComputedHeatmap", 1);
function getRelativeAgeLookupTable(dates) {
  const lookup = [];
  const half = Math.floor(dates.length / 2);
  const median = dates.length % 2 ? dates[half].getTime() : (dates[half - 1].getTime() + dates[half].getTime()) / 2;
  const newest = dates[dates.length - 1].getTime();
  let step = (newest - median) / 5;
  for (let i = 5; i > 0; i--) {
    lookup.push(median + step * i);
  }
  lookup.push(median);
  const oldest = dates[0].getTime();
  step = (median - oldest) / 4;
  for (let i = 1; i <= 4; i++) {
    lookup.push(median - step * i);
  }
  return lookup;
}


/***/ }),

/***/ "./src/annotations/fileAnnotationController.ts":
/*!*****************************************************!*\
  !*** ./src/annotations/fileAnnotationController.ts ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AnnotationClearReason": () => (/* binding */ AnnotationClearReason),
/* harmony export */   "Decorations": () => (/* binding */ Decorations),
/* harmony export */   "FileAnnotationController": () => (/* binding */ FileAnnotationController)
/* harmony export */ });
/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! path */ "./node_modules/path-browserify/index.js");
/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _configuration__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../configuration */ "./src/configuration.ts");
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../constants */ "./src/constants.ts");
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../container */ "./src/container.ts");
/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../logger */ "./src/logger.ts");
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../system */ "./src/system.ts");
/* harmony import */ var _annotationProvider__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./annotationProvider */ "./src/annotations/annotationProvider.ts");
/* harmony import */ var _gutterBlameAnnotationProvider__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./gutterBlameAnnotationProvider */ "./src/annotations/gutterBlameAnnotationProvider.ts");
/* harmony import */ var _gutterChangesAnnotationProvider__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./gutterChangesAnnotationProvider */ "./src/annotations/gutterChangesAnnotationProvider.ts");
/* harmony import */ var _gutterHeatmapBlameAnnotationProvider__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./gutterHeatmapBlameAnnotationProvider */ "./src/annotations/gutterHeatmapBlameAnnotationProvider.ts");

var __defProp = Object.defineProperty;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};











var AnnotationClearReason;
(function(AnnotationClearReason2) {
  AnnotationClearReason2["User"] = "User";
  AnnotationClearReason2["BlameabilityChanged"] = "BlameabilityChanged";
  AnnotationClearReason2["ColumnChanged"] = "ColumnChanged";
  AnnotationClearReason2["Disposing"] = "Disposing";
  AnnotationClearReason2["DocumentChanged"] = "DocumentChanged";
  AnnotationClearReason2["DocumentClosed"] = "DocumentClosed";
})(AnnotationClearReason || (AnnotationClearReason = {}));
const Decorations = {
  gutterBlameAnnotation: vscode__WEBPACK_IMPORTED_MODULE_1__.window.createTextEditorDecorationType({
    rangeBehavior: vscode__WEBPACK_IMPORTED_MODULE_1__.DecorationRangeBehavior.ClosedOpen,
    textDecoration: "none"
  }),
  gutterBlameHighlight: void 0,
  changesLineChangedAnnotation: void 0,
  changesLineAddedAnnotation: void 0,
  changesLineDeletedAnnotation: void 0
};
class FileAnnotationController {
  constructor() {
    __publicField(this, "_onDidToggleAnnotations", new vscode__WEBPACK_IMPORTED_MODULE_1__.EventEmitter());
    __publicField(this, "_annotationsDisposable");
    __publicField(this, "_annotationProviders", new Map());
    __publicField(this, "_disposable");
    __publicField(this, "_editor");
    __publicField(this, "_keyboardScope");
    __publicField(this, "_toggleModes");
    __publicField(this, "_windowAnnotationType");
    this._disposable = vscode__WEBPACK_IMPORTED_MODULE_1__.Disposable.from(_configuration__WEBPACK_IMPORTED_MODULE_2__.configuration.onDidChange(this.onConfigurationChanged, this));
    this._toggleModes = new Map();
    this.onConfigurationChanged();
  }
  get onDidToggleAnnotations() {
    return this._onDidToggleAnnotations.event;
  }
  dispose() {
    var _a, _b, _c, _d, _e, _f, _g;
    void this.clearAll();
    (_a = Decorations.gutterBlameAnnotation) == null ? void 0 : _a.dispose();
    (_b = Decorations.gutterBlameHighlight) == null ? void 0 : _b.dispose();
    (_c = Decorations.changesLineChangedAnnotation) == null ? void 0 : _c.dispose();
    (_d = Decorations.changesLineAddedAnnotation) == null ? void 0 : _d.dispose();
    (_e = Decorations.changesLineDeletedAnnotation) == null ? void 0 : _e.dispose();
    (_f = this._annotationsDisposable) == null ? void 0 : _f.dispose();
    (_g = this._disposable) == null ? void 0 : _g.dispose();
  }
  onConfigurationChanged(e) {
    var _a, _b, _c, _d, _e;
    const cfg = _container__WEBPACK_IMPORTED_MODULE_4__.Container.config;
    if (_configuration__WEBPACK_IMPORTED_MODULE_2__.configuration.changed(e, "blame.highlight")) {
      (_a = Decorations.gutterBlameHighlight) == null ? void 0 : _a.dispose();
      Decorations.gutterBlameHighlight = void 0;
      const highlight = cfg.blame.highlight;
      if (highlight.enabled) {
        const { locations } = highlight;
        const gutterHighlightColor = "#00bcf2";
        const gutterHighlightUri = locations.includes(_configuration__WEBPACK_IMPORTED_MODULE_2__.BlameHighlightLocations.Gutter) ? vscode__WEBPACK_IMPORTED_MODULE_1__.Uri.parse(`data:image/svg+xml,${encodeURIComponent(`<svg xmlns='http://www.w3.org/2000/svg' width='18' height='18' viewBox='0 0 18 18'><rect fill='${gutterHighlightColor}' fill-opacity='0.6' x='7' y='0' width='3' height='18'/></svg>`)}`) : void 0;
        Decorations.gutterBlameHighlight = vscode__WEBPACK_IMPORTED_MODULE_1__.window.createTextEditorDecorationType({
          gutterIconPath: gutterHighlightUri,
          gutterIconSize: "contain",
          isWholeLine: true,
          overviewRulerLane: vscode__WEBPACK_IMPORTED_MODULE_1__.OverviewRulerLane.Right,
          backgroundColor: locations.includes(_configuration__WEBPACK_IMPORTED_MODULE_2__.BlameHighlightLocations.Line) ? new vscode__WEBPACK_IMPORTED_MODULE_1__.ThemeColor(_constants__WEBPACK_IMPORTED_MODULE_3__.Colors.LineHighlightBackgroundColor) : void 0,
          overviewRulerColor: locations.includes(_configuration__WEBPACK_IMPORTED_MODULE_2__.BlameHighlightLocations.Overview) ? new vscode__WEBPACK_IMPORTED_MODULE_1__.ThemeColor(_constants__WEBPACK_IMPORTED_MODULE_3__.Colors.LineHighlightOverviewRulerColor) : void 0
        });
      }
    }
    if (_configuration__WEBPACK_IMPORTED_MODULE_2__.configuration.changed(e, "changes.locations")) {
      (_b = Decorations.changesLineAddedAnnotation) == null ? void 0 : _b.dispose();
      (_c = Decorations.changesLineChangedAnnotation) == null ? void 0 : _c.dispose();
      (_d = Decorations.changesLineDeletedAnnotation) == null ? void 0 : _d.dispose();
      const { locations } = cfg.changes;
      Decorations.changesLineAddedAnnotation = vscode__WEBPACK_IMPORTED_MODULE_1__.window.createTextEditorDecorationType({
        gutterIconPath: locations.includes(_configuration__WEBPACK_IMPORTED_MODULE_2__.ChangesLocations.Gutter) ? vscode__WEBPACK_IMPORTED_MODULE_1__.Uri.parse(`data:image/svg+xml,${encodeURIComponent("<svg xmlns='http://www.w3.org/2000/svg' width='18' height='18' viewBox='0 0 18 18'><rect fill='#587c0c' x='13' y='0' width='3' height='18'/></svg>")}`) : void 0,
        gutterIconSize: "contain",
        overviewRulerLane: vscode__WEBPACK_IMPORTED_MODULE_1__.OverviewRulerLane.Left,
        overviewRulerColor: locations.includes(_configuration__WEBPACK_IMPORTED_MODULE_2__.ChangesLocations.Overview) ? new vscode__WEBPACK_IMPORTED_MODULE_1__.ThemeColor("editorOverviewRuler.addedForeground") : void 0
      });
      Decorations.changesLineChangedAnnotation = vscode__WEBPACK_IMPORTED_MODULE_1__.window.createTextEditorDecorationType({
        gutterIconPath: locations.includes(_configuration__WEBPACK_IMPORTED_MODULE_2__.ChangesLocations.Gutter) ? vscode__WEBPACK_IMPORTED_MODULE_1__.Uri.parse(`data:image/svg+xml,${encodeURIComponent("<svg xmlns='http://www.w3.org/2000/svg' width='18' height='18' viewBox='0 0 18 18'><rect fill='#0c7d9d' x='13' y='0' width='3' height='18'/></svg>")}`) : void 0,
        gutterIconSize: "contain",
        overviewRulerLane: vscode__WEBPACK_IMPORTED_MODULE_1__.OverviewRulerLane.Left,
        overviewRulerColor: locations.includes(_configuration__WEBPACK_IMPORTED_MODULE_2__.ChangesLocations.Overview) ? new vscode__WEBPACK_IMPORTED_MODULE_1__.ThemeColor("editorOverviewRuler.modifiedForeground") : void 0
      });
      Decorations.changesLineDeletedAnnotation = vscode__WEBPACK_IMPORTED_MODULE_1__.window.createTextEditorDecorationType({
        gutterIconPath: locations.includes(_configuration__WEBPACK_IMPORTED_MODULE_2__.ChangesLocations.Gutter) ? vscode__WEBPACK_IMPORTED_MODULE_1__.Uri.parse(`data:image/svg+xml,${encodeURIComponent("<svg xmlns='http://www.w3.org/2000/svg' width='18' height='18' viewBox='0 0 18 18'><polygon fill='#94151b' points='13,10 13,18 17,14'/></svg>")}`) : void 0,
        gutterIconSize: "contain",
        overviewRulerLane: vscode__WEBPACK_IMPORTED_MODULE_1__.OverviewRulerLane.Left,
        overviewRulerColor: locations.includes(_configuration__WEBPACK_IMPORTED_MODULE_2__.ChangesLocations.Overview) ? new vscode__WEBPACK_IMPORTED_MODULE_1__.ThemeColor("editorOverviewRuler.deletedForeground") : void 0
      });
    }
    const initializing = e == null;
    if (_configuration__WEBPACK_IMPORTED_MODULE_2__.configuration.changed(e, "blame.toggleMode")) {
      this._toggleModes.set(_configuration__WEBPACK_IMPORTED_MODULE_2__.FileAnnotationType.Blame, cfg.blame.toggleMode);
      if (!initializing && cfg.blame.toggleMode === _configuration__WEBPACK_IMPORTED_MODULE_2__.AnnotationsToggleMode.File) {
        void this.clearAll();
      }
    }
    if (_configuration__WEBPACK_IMPORTED_MODULE_2__.configuration.changed(e, "changes.toggleMode")) {
      this._toggleModes.set(_configuration__WEBPACK_IMPORTED_MODULE_2__.FileAnnotationType.Changes, cfg.changes.toggleMode);
      if (!initializing && cfg.changes.toggleMode === _configuration__WEBPACK_IMPORTED_MODULE_2__.AnnotationsToggleMode.File) {
        void this.clearAll();
      }
    }
    if (_configuration__WEBPACK_IMPORTED_MODULE_2__.configuration.changed(e, "heatmap.toggleMode")) {
      this._toggleModes.set(_configuration__WEBPACK_IMPORTED_MODULE_2__.FileAnnotationType.Heatmap, cfg.heatmap.toggleMode);
      if (!initializing && cfg.heatmap.toggleMode === _configuration__WEBPACK_IMPORTED_MODULE_2__.AnnotationsToggleMode.File) {
        void this.clearAll();
      }
    }
    if (initializing)
      return;
    if (_configuration__WEBPACK_IMPORTED_MODULE_2__.configuration.changed(e, "blame") || _configuration__WEBPACK_IMPORTED_MODULE_2__.configuration.changed(e, "changes") || _configuration__WEBPACK_IMPORTED_MODULE_2__.configuration.changed(e, "heatmap") || _configuration__WEBPACK_IMPORTED_MODULE_2__.configuration.changed(e, "hovers") || _configuration__WEBPACK_IMPORTED_MODULE_2__.configuration.changed(e, "defaultDateFormat") || _configuration__WEBPACK_IMPORTED_MODULE_2__.configuration.changed(e, "defaultDateSource") || _configuration__WEBPACK_IMPORTED_MODULE_2__.configuration.changed(e, "defaultDateStyle") || _configuration__WEBPACK_IMPORTED_MODULE_2__.configuration.changed(e, "defaultGravatarsStyle")) {
      for (const provider of this._annotationProviders.values()) {
        if (provider == null)
          continue;
        void this.show(provider.editor, (_e = provider.annotationType) != null ? _e : _configuration__WEBPACK_IMPORTED_MODULE_2__.FileAnnotationType.Blame);
      }
    }
  }
  async onActiveTextEditorChanged(editor) {
    if (editor != null && !(0,_constants__WEBPACK_IMPORTED_MODULE_3__.isTextEditor)(editor))
      return;
    this._editor = editor;
    if (this.isInWindowToggle()) {
      await this.show(editor, this._windowAnnotationType);
      return;
    }
    const provider = this.getProvider(editor);
    if (provider == null) {
      void (0,_constants__WEBPACK_IMPORTED_MODULE_3__.setContext)(_constants__WEBPACK_IMPORTED_MODULE_3__.ContextKeys.AnnotationStatus, void 0);
      void this.detachKeyboardHook();
    } else {
      void (0,_constants__WEBPACK_IMPORTED_MODULE_3__.setContext)(_constants__WEBPACK_IMPORTED_MODULE_3__.ContextKeys.AnnotationStatus, provider.status);
      void this.attachKeyboardHook();
    }
  }
  onBlameStateChanged(e) {
    if (e.blameable)
      return;
    const editor = vscode__WEBPACK_IMPORTED_MODULE_1__.window.activeTextEditor;
    if (editor == null)
      return;
    void this.clear(editor, AnnotationClearReason.BlameabilityChanged);
  }
  onDirtyStateChanged(e) {
    for (const [key, p] of this._annotationProviders) {
      if (!e.document.is(p.document))
        continue;
      void this.clearCore(key, AnnotationClearReason.DocumentChanged);
    }
  }
  onTextDocumentClosed(document) {
    if (!_container__WEBPACK_IMPORTED_MODULE_4__.Container.git.isTrackable(document.uri))
      return;
    for (const [key, p] of this._annotationProviders) {
      if (p.document !== document)
        continue;
      void this.clearCore(key, AnnotationClearReason.DocumentClosed);
    }
  }
  onTextEditorViewColumnChanged(e) {
    const provider = this.getProvider(e.textEditor);
    if (provider == null) {
      const fuzzyProvider = _system__WEBPACK_IMPORTED_MODULE_6__.Iterables.find(this._annotationProviders.values(), (p) => p.editor.document === e.textEditor.document);
      if (fuzzyProvider == null)
        return;
      void this.clearCore(fuzzyProvider.correlationKey, AnnotationClearReason.ColumnChanged);
      return;
    }
    void provider.restore(e.textEditor);
  }
  onVisibleTextEditorsChanged(editors) {
    let provider;
    for (const e of editors) {
      provider = this.getProvider(e);
      if (provider == null)
        continue;
      void provider.restore(e);
    }
  }
  isInWindowToggle() {
    return this.getToggleMode(this._windowAnnotationType) === _configuration__WEBPACK_IMPORTED_MODULE_2__.AnnotationsToggleMode.Window;
  }
  getToggleMode(annotationType) {
    var _a;
    if (annotationType == null)
      return _configuration__WEBPACK_IMPORTED_MODULE_2__.AnnotationsToggleMode.File;
    return (_a = this._toggleModes.get(annotationType)) != null ? _a : _configuration__WEBPACK_IMPORTED_MODULE_2__.AnnotationsToggleMode.File;
  }
  clear(editor, reason = AnnotationClearReason.User) {
    if (this.isInWindowToggle()) {
      return this.clearAll();
    }
    return this.clearCore(_annotationProvider__WEBPACK_IMPORTED_MODULE_7__.AnnotationProviderBase.getCorrelationKey(editor), reason);
  }
  async clearAll() {
    this._windowAnnotationType = void 0;
    for (const [key] of this._annotationProviders) {
      await this.clearCore(key, AnnotationClearReason.Disposing);
    }
  }
  async getAnnotationType(editor) {
    const provider = this.getProvider(editor);
    if (provider == null)
      return void 0;
    const trackedDocument = await _container__WEBPACK_IMPORTED_MODULE_4__.Container.tracker.get(editor.document);
    if (trackedDocument == null || !trackedDocument.isBlameable)
      return void 0;
    return provider.annotationType;
  }
  getProvider(editor) {
    if (editor == null || editor.document == null)
      return void 0;
    return this._annotationProviders.get(_annotationProvider__WEBPACK_IMPORTED_MODULE_7__.AnnotationProviderBase.getCorrelationKey(editor));
  }
  async show(editor, type, context) {
    if (this.getToggleMode(type) === _configuration__WEBPACK_IMPORTED_MODULE_2__.AnnotationsToggleMode.Window) {
      let first = this._windowAnnotationType == null;
      const reset = !first && this._windowAnnotationType !== type;
      this._windowAnnotationType = type;
      if (reset) {
        await this.clearAll();
        first = true;
      }
      if (first) {
        for (const e of vscode__WEBPACK_IMPORTED_MODULE_1__.window.visibleTextEditors) {
          if (e === editor)
            continue;
          void this.show(e, type);
        }
      }
    }
    if (editor == null)
      return false;
    this._editor = editor;
    const trackedDocument = await _container__WEBPACK_IMPORTED_MODULE_4__.Container.tracker.getOrAdd(editor.document);
    if (!trackedDocument.isBlameable)
      return false;
    const currentProvider = this.getProvider(editor);
    if ((currentProvider == null ? void 0 : currentProvider.annotationType) === type) {
      await currentProvider.provideAnnotation(context);
      await currentProvider.selection(context == null ? void 0 : context.selection);
      return true;
    }
    const provider = await vscode__WEBPACK_IMPORTED_MODULE_1__.window.withProgress({ location: vscode__WEBPACK_IMPORTED_MODULE_1__.ProgressLocation.Window }, async (progress) => {
      await (0,_constants__WEBPACK_IMPORTED_MODULE_3__.setContext)(_constants__WEBPACK_IMPORTED_MODULE_3__.ContextKeys.AnnotationStatus, _annotationProvider__WEBPACK_IMPORTED_MODULE_7__.AnnotationStatus.Computing);
      const computingAnnotations = this.showAnnotationsCore(currentProvider, editor, type, context, progress);
      const provider2 = await computingAnnotations;
      if (editor === this._editor) {
        await (0,_constants__WEBPACK_IMPORTED_MODULE_3__.setContext)(_constants__WEBPACK_IMPORTED_MODULE_3__.ContextKeys.AnnotationStatus, provider2 == null ? void 0 : provider2.status);
      }
      return computingAnnotations;
    });
    return provider != null;
  }
  async toggle(editor, type, context, on) {
    if (editor != null) {
      const trackedDocument = await _container__WEBPACK_IMPORTED_MODULE_4__.Container.tracker.getOrAdd(editor.document);
      if (type === _configuration__WEBPACK_IMPORTED_MODULE_2__.FileAnnotationType.Changes && !trackedDocument.isTracked || !trackedDocument.isBlameable) {
        return false;
      }
    }
    const provider = this.getProvider(editor);
    if (provider == null)
      return this.show(editor, type, context);
    const reopen = provider.annotationType !== type || provider.mustReopen(context);
    if (on === true && !reopen)
      return true;
    if (this.isInWindowToggle()) {
      await this.clearAll();
    } else {
      await this.clearCore(provider.correlationKey, AnnotationClearReason.User);
    }
    if (!reopen)
      return false;
    return this.show(editor, type, context);
  }
  async attachKeyboardHook() {
    if (this._keyboardScope == null) {
      this._keyboardScope = await _container__WEBPACK_IMPORTED_MODULE_4__.Container.keyboard.beginScope({
        escape: {
          onDidPressKey: async () => {
            const e = this._editor;
            if (e == null)
              return void 0;
            await this.clear(e, AnnotationClearReason.User);
            return void 0;
          }
        }
      });
    }
  }
  async clearCore(key, reason) {
    var _a;
    const provider = this._annotationProviders.get(key);
    if (provider == null)
      return;
    _logger__WEBPACK_IMPORTED_MODULE_5__.Logger.log(`${reason}:`, `Clear annotations for ${key}`);
    this._annotationProviders.delete(key);
    provider.dispose();
    if (this._annotationProviders.size === 0 || key === _annotationProvider__WEBPACK_IMPORTED_MODULE_7__.AnnotationProviderBase.getCorrelationKey(this._editor)) {
      await (0,_constants__WEBPACK_IMPORTED_MODULE_3__.setContext)(_constants__WEBPACK_IMPORTED_MODULE_3__.ContextKeys.AnnotationStatus, void 0);
      await this.detachKeyboardHook();
    }
    if (this._annotationProviders.size === 0) {
      _logger__WEBPACK_IMPORTED_MODULE_5__.Logger.log("Remove all listener registrations for annotations");
      (_a = this._annotationsDisposable) == null ? void 0 : _a.dispose();
      this._annotationsDisposable = void 0;
    }
    this._onDidToggleAnnotations.fire();
  }
  async detachKeyboardHook() {
    if (this._keyboardScope == null)
      return;
    await this._keyboardScope.dispose();
    this._keyboardScope = void 0;
  }
  async showAnnotationsCore(currentProvider, editor, type, context, progress) {
    if (progress != null) {
      let annotationsLabel = "annotations";
      switch (type) {
        case _configuration__WEBPACK_IMPORTED_MODULE_2__.FileAnnotationType.Blame:
          annotationsLabel = "blame annotations";
          break;
        case _configuration__WEBPACK_IMPORTED_MODULE_2__.FileAnnotationType.Changes:
          annotationsLabel = "changes annotations";
          break;
        case _configuration__WEBPACK_IMPORTED_MODULE_2__.FileAnnotationType.Heatmap:
          annotationsLabel = "heatmap annotations";
          break;
      }
      progress.report({
        message: `Computing ${annotationsLabel} for ${path__WEBPACK_IMPORTED_MODULE_0__.basename(editor.document.fileName)}`
      });
    }
    await this.attachKeyboardHook();
    const trackedDocument = await _container__WEBPACK_IMPORTED_MODULE_4__.Container.tracker.getOrAdd(editor.document);
    let provider = void 0;
    switch (type) {
      case _configuration__WEBPACK_IMPORTED_MODULE_2__.FileAnnotationType.Blame:
        provider = new _gutterBlameAnnotationProvider__WEBPACK_IMPORTED_MODULE_8__.GutterBlameAnnotationProvider(editor, trackedDocument);
        break;
      case _configuration__WEBPACK_IMPORTED_MODULE_2__.FileAnnotationType.Changes:
        provider = new _gutterChangesAnnotationProvider__WEBPACK_IMPORTED_MODULE_9__.GutterChangesAnnotationProvider(editor, trackedDocument);
        break;
      case _configuration__WEBPACK_IMPORTED_MODULE_2__.FileAnnotationType.Heatmap:
        provider = new _gutterHeatmapBlameAnnotationProvider__WEBPACK_IMPORTED_MODULE_10__.GutterHeatmapBlameAnnotationProvider(editor, trackedDocument);
        break;
    }
    if (provider == null || !await provider.validate())
      return void 0;
    if (currentProvider != null) {
      await this.clearCore(currentProvider.correlationKey, AnnotationClearReason.User);
    }
    if (this._annotationsDisposable == null && this._annotationProviders.size === 0) {
      _logger__WEBPACK_IMPORTED_MODULE_5__.Logger.log("Add listener registrations for annotations");
      this._annotationsDisposable = vscode__WEBPACK_IMPORTED_MODULE_1__.Disposable.from(vscode__WEBPACK_IMPORTED_MODULE_1__.window.onDidChangeActiveTextEditor(_system__WEBPACK_IMPORTED_MODULE_6__.Functions.debounce(this.onActiveTextEditorChanged, 50), this), vscode__WEBPACK_IMPORTED_MODULE_1__.window.onDidChangeTextEditorViewColumn(this.onTextEditorViewColumnChanged, this), vscode__WEBPACK_IMPORTED_MODULE_1__.window.onDidChangeVisibleTextEditors(_system__WEBPACK_IMPORTED_MODULE_6__.Functions.debounce(this.onVisibleTextEditorsChanged, 50), this), vscode__WEBPACK_IMPORTED_MODULE_1__.workspace.onDidCloseTextDocument(this.onTextDocumentClosed, this), _container__WEBPACK_IMPORTED_MODULE_4__.Container.tracker.onDidChangeBlameState(this.onBlameStateChanged, this), _container__WEBPACK_IMPORTED_MODULE_4__.Container.tracker.onDidChangeDirtyState(this.onDirtyStateChanged, this));
    }
    this._annotationProviders.set(provider.correlationKey, provider);
    if (await provider.provideAnnotation(context)) {
      this._onDidToggleAnnotations.fire();
      return provider;
    }
    await this.clearCore(provider.correlationKey, AnnotationClearReason.Disposing);
    return void 0;
  }
}


/***/ }),

/***/ "./src/annotations/gutterBlameAnnotationProvider.ts":
/*!**********************************************************!*\
  !*** ./src/annotations/gutterBlameAnnotationProvider.ts ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "GutterBlameAnnotationProvider": () => (/* binding */ GutterBlameAnnotationProvider)
/* harmony export */ });
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _configuration__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../configuration */ "./src/configuration.ts");
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../constants */ "./src/constants.ts");
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../container */ "./src/container.ts");
/* harmony import */ var _git_git__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../git/git */ "./src/git/git.ts");
/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../logger */ "./src/logger.ts");
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../system */ "./src/system.ts");
/* harmony import */ var _annotations__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./annotations */ "./src/annotations/annotations.ts");
/* harmony import */ var _blameAnnotationProvider__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./blameAnnotationProvider */ "./src/annotations/blameAnnotationProvider.ts");
/* harmony import */ var _fileAnnotationController__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./fileAnnotationController */ "./src/annotations/fileAnnotationController.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};










class GutterBlameAnnotationProvider extends _blameAnnotationProvider__WEBPACK_IMPORTED_MODULE_8__.BlameAnnotationProviderBase {
  constructor(editor, trackedDocument) {
    super(_configuration__WEBPACK_IMPORTED_MODULE_1__.FileAnnotationType.Blame, editor, trackedDocument);
  }
  clear() {
    super.clear();
    if (_fileAnnotationController__WEBPACK_IMPORTED_MODULE_9__.Decorations.gutterBlameHighlight != null) {
      try {
        this.editor.setDecorations(_fileAnnotationController__WEBPACK_IMPORTED_MODULE_9__.Decorations.gutterBlameHighlight, []);
      } catch {
      }
    }
  }
  async onProvideAnnotation(context, _type) {
    const cc = _logger__WEBPACK_IMPORTED_MODULE_5__.Logger.getCorrelationContext();
    this.annotationContext = context;
    const blame = await this.getBlame();
    if (blame == null)
      return false;
    let start = process.hrtime();
    const cfg = _container__WEBPACK_IMPORTED_MODULE_3__.Container.config.blame;
    const tokenOptions = _system__WEBPACK_IMPORTED_MODULE_6__.Strings.getTokensFromTemplate(cfg.format).reduce((map, token) => {
      map[token.key] = token.options;
      return map;
    }, Object.create(null));
    let getBranchAndTagTips;
    if (_git_git__WEBPACK_IMPORTED_MODULE_4__.CommitFormatter.has(cfg.format, "tips")) {
      getBranchAndTagTips = await _container__WEBPACK_IMPORTED_MODULE_3__.Container.git.getBranchesAndTagsTipsFn(blame.repoPath);
    }
    const options = {
      dateFormat: cfg.dateFormat === null ? _container__WEBPACK_IMPORTED_MODULE_3__.Container.config.defaultDateFormat : cfg.dateFormat,
      getBranchAndTagTips,
      tokenOptions
    };
    const avatars = cfg.avatars;
    const gravatarDefault = _container__WEBPACK_IMPORTED_MODULE_3__.Container.config.defaultGravatarsStyle;
    const separateLines = cfg.separateLines;
    const renderOptions = _annotations__WEBPACK_IMPORTED_MODULE_7__.Annotations.gutterRenderOptions(separateLines, cfg.heatmap, cfg.avatars, cfg.format, options);
    const decorationOptions = [];
    const decorationsMap = new Map();
    const avatarDecorationsMap = avatars ? new Map() : void 0;
    let commit;
    let compacted = false;
    let gutter;
    let previousSha;
    let computedHeatmap;
    if (cfg.heatmap.enabled) {
      computedHeatmap = await this.getComputedHeatmap(blame);
    }
    for (const l of blame.lines) {
      const editorLine = l.line - 1;
      if (previousSha === l.sha) {
        if (gutter == null)
          continue;
        gutter = { ...gutter };
        if (cfg.compact && !compacted) {
          gutter.renderOptions = {
            before: {
              ...gutter.renderOptions.before,
              contentText: _constants__WEBPACK_IMPORTED_MODULE_2__.GlyphChars.Space.repeat(_system__WEBPACK_IMPORTED_MODULE_6__.Strings.getWidth(gutter.renderOptions.before.contentText))
            }
          };
          if (separateLines) {
            gutter.renderOptions.before.textDecoration = `none;box-sizing: border-box${avatars ? ";padding: 0 0 0 18px" : ""}`;
          }
          compacted = true;
        }
        gutter.range = new vscode__WEBPACK_IMPORTED_MODULE_0__.Range(editorLine, 0, editorLine, 0);
        decorationOptions.push(gutter);
        continue;
      }
      compacted = false;
      previousSha = l.sha;
      commit = blame.commits.get(l.sha);
      if (commit == null)
        continue;
      gutter = decorationsMap.get(l.sha);
      if (gutter != null) {
        gutter = {
          ...gutter,
          range: new vscode__WEBPACK_IMPORTED_MODULE_0__.Range(editorLine, 0, editorLine, 0)
        };
        decorationOptions.push(gutter);
        continue;
      }
      gutter = _annotations__WEBPACK_IMPORTED_MODULE_7__.Annotations.gutter(commit, cfg.format, options, renderOptions);
      if (computedHeatmap != null) {
        _annotations__WEBPACK_IMPORTED_MODULE_7__.Annotations.applyHeatmap(gutter, commit.date, computedHeatmap);
      }
      gutter.range = new vscode__WEBPACK_IMPORTED_MODULE_0__.Range(editorLine, 0, editorLine, 0);
      decorationOptions.push(gutter);
      if (avatars && commit.email != null) {
        await this.applyAvatarDecoration(commit, gutter, gravatarDefault, avatarDecorationsMap);
      }
      decorationsMap.set(l.sha, gutter);
    }
    _logger__WEBPACK_IMPORTED_MODULE_5__.Logger.log(cc, `${_system__WEBPACK_IMPORTED_MODULE_6__.Strings.getDurationMilliseconds(start)} ms to compute gutter blame annotations`);
    if (decorationOptions.length) {
      start = process.hrtime();
      this.setDecorations([
        { decorationType: _fileAnnotationController__WEBPACK_IMPORTED_MODULE_9__.Decorations.gutterBlameAnnotation, rangesOrOptions: decorationOptions }
      ]);
      _logger__WEBPACK_IMPORTED_MODULE_5__.Logger.log(cc, `${_system__WEBPACK_IMPORTED_MODULE_6__.Strings.getDurationMilliseconds(start)} ms to apply all gutter blame annotations`);
    }
    this.registerHoverProviders(_container__WEBPACK_IMPORTED_MODULE_3__.Container.config.hovers.annotations);
    return true;
  }
  async selection(selection, blame) {
    if (selection === false || _fileAnnotationController__WEBPACK_IMPORTED_MODULE_9__.Decorations.gutterBlameHighlight == null)
      return;
    if (blame == null) {
      blame = await this.blame;
      if (!(blame == null ? void 0 : blame.lines.length))
        return;
    }
    let sha = void 0;
    if ((selection == null ? void 0 : selection.sha) != null) {
      sha = selection.sha;
    } else if ((selection == null ? void 0 : selection.line) != null) {
      if (selection.line >= 0) {
        const commitLine = blame.lines[selection.line];
        sha = commitLine == null ? void 0 : commitLine.sha;
      }
    } else {
      sha = _system__WEBPACK_IMPORTED_MODULE_6__.Iterables.first(blame.commits.values()).sha;
    }
    if (!sha) {
      this.editor.setDecorations(_fileAnnotationController__WEBPACK_IMPORTED_MODULE_9__.Decorations.gutterBlameHighlight, []);
      return;
    }
    const highlightDecorationRanges = _system__WEBPACK_IMPORTED_MODULE_6__.Arrays.filterMap(blame.lines, (l) => l.sha === sha ? this.editor.document.validateRange(new vscode__WEBPACK_IMPORTED_MODULE_0__.Range(l.line - 1, 0, l.line - 1, Number.MAX_SAFE_INTEGER)) : void 0);
    this.editor.setDecorations(_fileAnnotationController__WEBPACK_IMPORTED_MODULE_9__.Decorations.gutterBlameHighlight, highlightDecorationRanges);
  }
  async applyAvatarDecoration(commit, gutter, gravatarDefault, map) {
    let avatarDecoration = map.get(commit.email);
    if (avatarDecoration == null) {
      const url = (await commit.getAvatarUri({ defaultStyle: gravatarDefault, size: 16 })).toString(true);
      avatarDecoration = {
        contentText: "",
        height: "16px",
        width: "16px",
        textDecoration: `none;position:absolute;top:1px;left:5px;background:url(${encodeURI(url)});background-size:16px 16px;margin-left: 0 !important`
      };
      map.set(commit.email, avatarDecoration);
    }
    gutter.renderOptions.after = avatarDecoration;
  }
}
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_6__.log)()
], GutterBlameAnnotationProvider.prototype, "onProvideAnnotation", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_6__.log)({ args: false })
], GutterBlameAnnotationProvider.prototype, "selection", 1);


/***/ }),

/***/ "./src/annotations/gutterChangesAnnotationProvider.ts":
/*!************************************************************!*\
  !*** ./src/annotations/gutterChangesAnnotationProvider.ts ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "GutterChangesAnnotationProvider": () => (/* binding */ GutterChangesAnnotationProvider)
/* harmony export */ });
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _configuration__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../configuration */ "./src/configuration.ts");
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../container */ "./src/container.ts");
/* harmony import */ var _hovers_hovers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../hovers/hovers */ "./src/hovers/hovers.ts");
/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../logger */ "./src/logger.ts");
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../system */ "./src/system.ts");
/* harmony import */ var _annotationProvider__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./annotationProvider */ "./src/annotations/annotationProvider.ts");
/* harmony import */ var _fileAnnotationController__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./fileAnnotationController */ "./src/annotations/fileAnnotationController.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};








class GutterChangesAnnotationProvider extends _annotationProvider__WEBPACK_IMPORTED_MODULE_6__.AnnotationProviderBase {
  constructor(editor, trackedDocument) {
    super(_configuration__WEBPACK_IMPORTED_MODULE_1__.FileAnnotationType.Changes, editor, trackedDocument);
    __publicField(this, "state");
    __publicField(this, "hoverProviderDisposable");
  }
  mustReopen(context) {
    var _a, _b;
    return ((_a = this.annotationContext) == null ? void 0 : _a.sha) !== (context == null ? void 0 : context.sha) || ((_b = this.annotationContext) == null ? void 0 : _b.only) !== (context == null ? void 0 : context.only);
  }
  clear() {
    this.state = void 0;
    if (this.hoverProviderDisposable != null) {
      this.hoverProviderDisposable.dispose();
      this.hoverProviderDisposable = void 0;
    }
    super.clear();
  }
  selection(_selection) {
    return Promise.resolve();
  }
  validate() {
    return Promise.resolve(true);
  }
  async onProvideAnnotation(context) {
    var _a, _b, _c, _d;
    const cc = _logger__WEBPACK_IMPORTED_MODULE_4__.Logger.getCorrelationContext();
    if (this.mustReopen(context)) {
      this.clear();
    }
    this.annotationContext = context;
    let ref1 = this.trackedDocument.uri.sha;
    let ref2 = (context == null ? void 0 : context.sha) != null && context.sha !== ref1 ? `${context.sha}^` : void 0;
    let commit;
    let localChanges = ref1 == null && ref2 == null;
    if (localChanges) {
      let ref = await _container__WEBPACK_IMPORTED_MODULE_2__.Container.git.getOldestUnpushedRefForFile(this.trackedDocument.uri.repoPath, this.trackedDocument.uri.fsPath);
      if (ref != null) {
        ref = `${ref}^`;
        commit = await _container__WEBPACK_IMPORTED_MODULE_2__.Container.git.getCommitForFile(this.trackedDocument.uri.repoPath, this.trackedDocument.uri.fsPath, { ref });
        if (commit != null) {
          if (ref2 != null) {
            ref2 = ref;
          } else {
            ref1 = ref;
            ref2 = "";
          }
        } else {
          localChanges = false;
        }
      } else {
        const status = await _container__WEBPACK_IMPORTED_MODULE_2__.Container.git.getStatusForFile(this.trackedDocument.uri.repoPath, this.trackedDocument.uri.fsPath);
        const commits = status == null ? void 0 : status.toPsuedoCommits(await _container__WEBPACK_IMPORTED_MODULE_2__.Container.git.getCurrentUser(this.trackedDocument.uri.repoPath));
        if (commits == null ? void 0 : commits.length) {
          commit = await _container__WEBPACK_IMPORTED_MODULE_2__.Container.git.getCommitForFile(this.trackedDocument.uri.repoPath, this.trackedDocument.uri.fsPath);
          ref1 = "HEAD";
        } else if (this.trackedDocument.dirty) {
          ref1 = "HEAD";
        } else {
          localChanges = false;
        }
      }
    }
    if (!localChanges) {
      commit = await _container__WEBPACK_IMPORTED_MODULE_2__.Container.git.getCommitForFile(this.trackedDocument.uri.repoPath, this.trackedDocument.uri.fsPath, {
        ref: ref2 != null ? ref2 : ref1
      });
      if (commit == null)
        return false;
      if (ref2 != null) {
        ref2 = commit.ref;
      } else {
        ref1 = `${commit.ref}^`;
        ref2 = commit.ref;
      }
    }
    const diffs = (await Promise.all(ref2 == null && this.editor.document.isDirty ? [
      _container__WEBPACK_IMPORTED_MODULE_2__.Container.git.getDiffForFileContents(this.trackedDocument.uri, ref1, this.editor.document.getText()),
      _container__WEBPACK_IMPORTED_MODULE_2__.Container.git.getDiffForFile(this.trackedDocument.uri, ref1, ref2)
    ] : [_container__WEBPACK_IMPORTED_MODULE_2__.Container.git.getDiffForFile(this.trackedDocument.uri, ref1, ref2)])).filter((d) => Boolean(d));
    if (!(diffs == null ? void 0 : diffs.length))
      return false;
    let start = process.hrtime();
    const decorationsMap = new Map();
    const blame = (context == null ? void 0 : context.sha) != null && (context == null ? void 0 : context.only) ? ((_a = this.editor) == null ? void 0 : _a.document.isDirty) ? await _container__WEBPACK_IMPORTED_MODULE_2__.Container.git.getBlameForFileContents(this.trackedDocument.uri, this.editor.document.getText()) : await _container__WEBPACK_IMPORTED_MODULE_2__.Container.git.getBlameForFile(this.trackedDocument.uri) : void 0;
    let selection;
    for (const diff of diffs) {
      for (const hunk of diff.hunks) {
        if (blame != null) {
          let skip = true;
          const sha = context.sha;
          for (let i = hunk.current.position.start - 1; i < hunk.current.position.end; i++) {
            if (blame.lines[i].sha === sha) {
              skip = false;
            }
          }
          if (skip) {
            continue;
          }
        }
        let count = Math.max(hunk.current.position.start - 2, -1);
        let index = -1;
        for (const hunkLine of hunk.lines) {
          index++;
          count++;
          if (((_b = hunkLine.current) == null ? void 0 : _b.state) === "unchanged")
            continue;
          const range = this.editor.document.validateRange(new vscode__WEBPACK_IMPORTED_MODULE_0__.Range(new vscode__WEBPACK_IMPORTED_MODULE_0__.Position(count, 0), new vscode__WEBPACK_IMPORTED_MODULE_0__.Position(count, Number.MAX_SAFE_INTEGER)));
          if (selection == null) {
            selection = new vscode__WEBPACK_IMPORTED_MODULE_0__.Selection(range.start, range.end);
          }
          let state;
          if (hunkLine.current == null) {
            const previous = hunk.lines[index - 1];
            if (hunkLine.previous != null && (previous == null || previous.current != null)) {
              if (hunk.previous.count > hunk.current.count) {
                state = "removed";
              } else {
                continue;
              }
            } else {
              continue;
            }
          } else if (((_c = hunkLine.current) == null ? void 0 : _c.state) === "added") {
            if (((_d = hunkLine.previous) == null ? void 0 : _d.state) === "removed") {
              state = "changed";
            } else {
              state = "added";
            }
          } else if ((hunkLine == null ? void 0 : hunkLine.current.state) === "removed") {
            if (hunk.previous.count > hunk.current.count) {
              state = "removed";
            } else {
              continue;
            }
          } else {
            state = "changed";
          }
          let decoration = decorationsMap.get(state);
          if (decoration == null) {
            decoration = {
              decorationType: state === "added" ? _fileAnnotationController__WEBPACK_IMPORTED_MODULE_7__.Decorations.changesLineAddedAnnotation : state === "removed" ? _fileAnnotationController__WEBPACK_IMPORTED_MODULE_7__.Decorations.changesLineDeletedAnnotation : _fileAnnotationController__WEBPACK_IMPORTED_MODULE_7__.Decorations.changesLineChangedAnnotation,
              rangesOrOptions: [{ range }]
            };
            decorationsMap.set(state, decoration);
          } else {
            decoration.rangesOrOptions.push({ range });
          }
        }
      }
    }
    _logger__WEBPACK_IMPORTED_MODULE_4__.Logger.log(cc, `${_system__WEBPACK_IMPORTED_MODULE_5__.Strings.getDurationMilliseconds(start)} ms to compute recent changes annotations`);
    if (decorationsMap.size) {
      start = process.hrtime();
      this.setDecorations([...decorationsMap.values()]);
      _logger__WEBPACK_IMPORTED_MODULE_4__.Logger.log(cc, `${_system__WEBPACK_IMPORTED_MODULE_5__.Strings.getDurationMilliseconds(start)} ms to apply recent changes annotations`);
      if (selection != null && (context == null ? void 0 : context.selection) !== false) {
        this.editor.selection = selection;
        this.editor.revealRange(selection, vscode__WEBPACK_IMPORTED_MODULE_0__.TextEditorRevealType.InCenterIfOutsideViewport);
      }
    }
    this.state = { commit, diffs };
    this.registerHoverProvider();
    return true;
  }
  registerHoverProvider() {
    if (!_container__WEBPACK_IMPORTED_MODULE_2__.Container.config.hovers.enabled || !_container__WEBPACK_IMPORTED_MODULE_2__.Container.config.hovers.annotations.enabled) {
      return;
    }
    this.hoverProviderDisposable = vscode__WEBPACK_IMPORTED_MODULE_0__.languages.registerHoverProvider({ pattern: this.document.uri.fsPath }, {
      provideHover: (document, position, token) => this.provideHover(document, position, token)
    });
  }
  provideHover(document, position, _token) {
    if (this.state == null)
      return void 0;
    if (_container__WEBPACK_IMPORTED_MODULE_2__.Container.config.hovers.annotations.over !== "line" && position.character !== 0)
      return void 0;
    const { commit, diffs } = this.state;
    for (const diff of diffs) {
      for (const hunk of diff.hunks) {
        const hasMoreDeletedLines = hunk.state === "changed" && hunk.previous.count > hunk.current.count;
        if (position.line >= hunk.current.position.start - 1 && position.line <= hunk.current.position.end - (hasMoreDeletedLines ? 0 : 1)) {
          return new vscode__WEBPACK_IMPORTED_MODULE_0__.Hover(_hovers_hovers__WEBPACK_IMPORTED_MODULE_3__.Hovers.localChangesMessage(commit, this.trackedDocument.uri, position.line, hunk), document.validateRange(new vscode__WEBPACK_IMPORTED_MODULE_0__.Range(hunk.current.position.start - 1, 0, hunk.current.position.end - (hasMoreDeletedLines ? 0 : 1), Number.MAX_SAFE_INTEGER)));
        }
      }
    }
    return void 0;
  }
}
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.log)()
], GutterChangesAnnotationProvider.prototype, "onProvideAnnotation", 1);


/***/ }),

/***/ "./src/annotations/gutterHeatmapBlameAnnotationProvider.ts":
/*!*****************************************************************!*\
  !*** ./src/annotations/gutterHeatmapBlameAnnotationProvider.ts ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "GutterHeatmapBlameAnnotationProvider": () => (/* binding */ GutterHeatmapBlameAnnotationProvider)
/* harmony export */ });
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _configuration__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../configuration */ "./src/configuration.ts");
/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../logger */ "./src/logger.ts");
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../system */ "./src/system.ts");
/* harmony import */ var _annotations__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./annotations */ "./src/annotations/annotations.ts");
/* harmony import */ var _blameAnnotationProvider__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./blameAnnotationProvider */ "./src/annotations/blameAnnotationProvider.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};






class GutterHeatmapBlameAnnotationProvider extends _blameAnnotationProvider__WEBPACK_IMPORTED_MODULE_5__.BlameAnnotationProviderBase {
  constructor(editor, trackedDocument) {
    super(_configuration__WEBPACK_IMPORTED_MODULE_1__.FileAnnotationType.Heatmap, editor, trackedDocument);
  }
  async onProvideAnnotation(context, _type) {
    const cc = _logger__WEBPACK_IMPORTED_MODULE_2__.Logger.getCorrelationContext();
    this.annotationContext = context;
    const blame = await this.getBlame();
    if (blame == null)
      return false;
    let start = process.hrtime();
    const decorationsMap = new Map();
    const computedHeatmap = await this.getComputedHeatmap(blame);
    let commit;
    for (const l of blame.lines) {
      const editorLine = l.line - 1;
      commit = blame.commits.get(l.sha);
      if (commit == null)
        continue;
      _annotations__WEBPACK_IMPORTED_MODULE_4__.Annotations.addOrUpdateGutterHeatmapDecoration(commit.date, computedHeatmap, new vscode__WEBPACK_IMPORTED_MODULE_0__.Range(editorLine, 0, editorLine, 0), decorationsMap);
    }
    _logger__WEBPACK_IMPORTED_MODULE_2__.Logger.log(cc, `${_system__WEBPACK_IMPORTED_MODULE_3__.Strings.getDurationMilliseconds(start)} ms to compute heatmap annotations`);
    if (decorationsMap.size) {
      start = process.hrtime();
      this.setDecorations([...decorationsMap.values()]);
      _logger__WEBPACK_IMPORTED_MODULE_2__.Logger.log(cc, `${_system__WEBPACK_IMPORTED_MODULE_3__.Strings.getDurationMilliseconds(start)} ms to apply recent changes annotations`);
    }
    return true;
  }
  selection(_selection) {
    return Promise.resolve();
  }
}
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_3__.log)()
], GutterHeatmapBlameAnnotationProvider.prototype, "onProvideAnnotation", 1);


/***/ }),

/***/ "./src/annotations/lineAnnotationController.ts":
/*!*****************************************************!*\
  !*** ./src/annotations/lineAnnotationController.ts ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "LineAnnotationController": () => (/* binding */ LineAnnotationController)
/* harmony export */ });
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _configuration__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../configuration */ "./src/configuration.ts");
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../constants */ "./src/constants.ts");
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../container */ "./src/container.ts");
/* harmony import */ var _git_git__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../git/git */ "./src/git/git.ts");
/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../logger */ "./src/logger.ts");
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../system */ "./src/system.ts");
/* harmony import */ var _annotations__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./annotations */ "./src/annotations/annotations.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};








const annotationDecoration = vscode__WEBPACK_IMPORTED_MODULE_0__.window.createTextEditorDecorationType({
  after: {
    margin: "0 0 0 3em",
    textDecoration: "none"
  },
  rangeBehavior: vscode__WEBPACK_IMPORTED_MODULE_0__.DecorationRangeBehavior.ClosedOpen
});
class LineAnnotationController {
  constructor() {
    __publicField(this, "_cancellation");
    __publicField(this, "_disposable");
    __publicField(this, "_editor");
    __publicField(this, "_enabled", false);
    __publicField(this, "_suspended", false);
    this._disposable = vscode__WEBPACK_IMPORTED_MODULE_0__.Disposable.from(_configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.onDidChange(this.onConfigurationChanged, this), _container__WEBPACK_IMPORTED_MODULE_3__.Container.fileAnnotations.onDidToggleAnnotations(this.onFileAnnotationsToggled, this), _git_git__WEBPACK_IMPORTED_MODULE_4__.Authentication.onDidChange(() => void this.refresh(vscode__WEBPACK_IMPORTED_MODULE_0__.window.activeTextEditor)));
    this.onConfigurationChanged();
  }
  dispose() {
    this.clearAnnotations(this._editor);
    _container__WEBPACK_IMPORTED_MODULE_3__.Container.lineTracker.stop(this);
    this._disposable.dispose();
  }
  onConfigurationChanged(e) {
    if (!_configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.changed(e, "currentLine"))
      return;
    if (_configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.changed(e, "currentLine.enabled")) {
      if (_container__WEBPACK_IMPORTED_MODULE_3__.Container.config.currentLine.enabled) {
        this._enabled = true;
        this.resume();
      } else {
        this._enabled = false;
        this.setLineTracker(false);
      }
    }
    void this.refresh(vscode__WEBPACK_IMPORTED_MODULE_0__.window.activeTextEditor);
  }
  get suspended() {
    return !this._enabled || this._suspended;
  }
  resume() {
    this.setLineTracker(true);
    if (this._suspended) {
      this._suspended = false;
      return true;
    }
    return false;
  }
  suspend() {
    this.setLineTracker(false);
    if (!this._suspended) {
      this._suspended = true;
      return true;
    }
    return false;
  }
  onActiveLinesChanged(e) {
    if (!e.pending && e.selections !== void 0) {
      void this.refresh(e.editor);
      return;
    }
    this.clear(e.editor);
  }
  onFileAnnotationsToggled() {
    void this.refresh(vscode__WEBPACK_IMPORTED_MODULE_0__.window.activeTextEditor);
  }
  clear(editor) {
    var _a;
    (_a = this._cancellation) == null ? void 0 : _a.cancel();
    if (this._editor !== editor && this._editor != null) {
      this.clearAnnotations(this._editor);
    }
    this.clearAnnotations(editor);
  }
  async toggle(editor) {
    this._enabled = !(this._enabled && !this.suspended);
    if (this._enabled) {
      if (this.resume()) {
        await this.refresh(editor);
      }
    } else if (this.suspend()) {
      await this.refresh(editor);
    }
  }
  clearAnnotations(editor) {
    if (editor === void 0 || editor._disposed === true)
      return;
    editor.setDecorations(annotationDecoration, []);
  }
  async getPullRequests(repoPath, lines, { timeout } = {}) {
    if (lines.length === 0)
      return void 0;
    const remote = await _container__WEBPACK_IMPORTED_MODULE_3__.Container.git.getRichRemoteProvider(repoPath);
    if ((remote == null ? void 0 : remote.provider) == null)
      return void 0;
    const refs = new Set();
    for (const [, commit] of lines) {
      refs.add(commit.ref);
    }
    if (refs.size === 0)
      return void 0;
    const { provider } = remote;
    const prs = await _system__WEBPACK_IMPORTED_MODULE_6__.Promises.raceAll(refs.values(), (ref) => _container__WEBPACK_IMPORTED_MODULE_3__.Container.git.getPullRequestForCommit(ref, provider), timeout);
    if (prs.size === 0 || _system__WEBPACK_IMPORTED_MODULE_6__.Iterables.every(prs.values(), (pr) => pr == null))
      return void 0;
    return prs;
  }
  async refresh(editor, options) {
    var _a, _b;
    if (editor == null && this._editor == null)
      return;
    const cc = _logger__WEBPACK_IMPORTED_MODULE_5__.Logger.getCorrelationContext();
    const selections = _container__WEBPACK_IMPORTED_MODULE_3__.Container.lineTracker.selections;
    if (editor == null || selections == null || !(0,_constants__WEBPACK_IMPORTED_MODULE_2__.isTextEditor)(editor)) {
      if (cc != null) {
        cc.exitDetails = ` ${_constants__WEBPACK_IMPORTED_MODULE_2__.GlyphChars.Dot} Skipped because there is no valid editor or no valid selections`;
      }
      this.clear(this._editor);
      return;
    }
    if (this._editor !== editor) {
      this.clear(this._editor);
      this._editor = editor;
    }
    const cfg = _container__WEBPACK_IMPORTED_MODULE_3__.Container.config.currentLine;
    if (this.suspended) {
      if (cc != null) {
        cc.exitDetails = ` ${_constants__WEBPACK_IMPORTED_MODULE_2__.GlyphChars.Dot} Skipped because the controller is suspended`;
      }
      this.clear(editor);
      return;
    }
    const trackedDocument = await _container__WEBPACK_IMPORTED_MODULE_3__.Container.tracker.getOrAdd(editor.document);
    if (!trackedDocument.isBlameable && this.suspended) {
      if (cc != null) {
        cc.exitDetails = ` ${_constants__WEBPACK_IMPORTED_MODULE_2__.GlyphChars.Dot} Skipped because the ${this.suspended ? "controller is suspended" : `document(${trackedDocument.uri.toString(true)}) is not blameable`}`;
      }
      this.clear(editor);
      return;
    }
    if (editor.document == null || !_container__WEBPACK_IMPORTED_MODULE_3__.Container.lineTracker.includes(selections)) {
      if (cc != null) {
        cc.exitDetails = ` ${_constants__WEBPACK_IMPORTED_MODULE_2__.GlyphChars.Dot} Skipped because the ${editor.document == null ? "editor is gone" : `selection(s)=${selections.map((s) => `[${s.anchor}-${s.active}]`).join()} are no longer current`}`;
      }
      return;
    }
    if (cc != null) {
      cc.exitDetails = ` ${_constants__WEBPACK_IMPORTED_MODULE_2__.GlyphChars.Dot} selection(s)=${selections.map((s) => `[${s.anchor}-${s.active}]`).join()}`;
    }
    const commitLines = [
      ..._system__WEBPACK_IMPORTED_MODULE_6__.Iterables.filterMap(selections, (selection) => {
        const state = _container__WEBPACK_IMPORTED_MODULE_3__.Container.lineTracker.getState(selection.active);
        if ((state == null ? void 0 : state.commit) == null) {
          _logger__WEBPACK_IMPORTED_MODULE_5__.Logger.debug(cc, `Line ${selection.active} returned no commit`);
          return void 0;
        }
        return [selection.active, state.commit];
      })
    ];
    const repoPath = trackedDocument.uri.repoPath;
    const timeout = 100;
    const [getBranchAndTagTips, prs] = await Promise.all([
      _git_git__WEBPACK_IMPORTED_MODULE_4__.CommitFormatter.has(cfg.format, "tips") ? _container__WEBPACK_IMPORTED_MODULE_3__.Container.git.getBranchesAndTagsTipsFn(repoPath) : void 0,
      repoPath != null && cfg.pullRequests.enabled && _git_git__WEBPACK_IMPORTED_MODULE_4__.CommitFormatter.has(cfg.format, "pullRequest", "pullRequestAgo", "pullRequestAgoOrDate", "pullRequestDate", "pullRequestState") ? (_a = options == null ? void 0 : options.prs) != null ? _a : this.getPullRequests(repoPath, commitLines.filter(([, commit]) => !commit.isUncommitted), { timeout }) : void 0
    ]);
    if (prs != null) {
      (_b = this._cancellation) == null ? void 0 : _b.cancel();
      this._cancellation = new vscode__WEBPACK_IMPORTED_MODULE_0__.CancellationTokenSource();
      void this.waitForAnyPendingPullRequests(editor, prs, this._cancellation.token, timeout, cc);
    }
    const decorations = [];
    for (const [l, commit] of commitLines) {
      const decoration = _annotations__WEBPACK_IMPORTED_MODULE_7__.Annotations.trailing(commit, cfg.format, {
        dateFormat: cfg.dateFormat === null ? _container__WEBPACK_IMPORTED_MODULE_3__.Container.config.defaultDateFormat : cfg.dateFormat,
        getBranchAndTagTips,
        pullRequestOrRemote: prs == null ? void 0 : prs.get(commit.ref),
        pullRequestPendingMessage: `PR ${_constants__WEBPACK_IMPORTED_MODULE_2__.GlyphChars.Ellipsis}`
      }, cfg.scrollable);
      decoration.range = editor.document.validateRange(new vscode__WEBPACK_IMPORTED_MODULE_0__.Range(l, Number.MAX_SAFE_INTEGER, l, Number.MAX_SAFE_INTEGER));
      decorations.push(decoration);
    }
    editor.setDecorations(annotationDecoration, decorations);
  }
  setLineTracker(enabled) {
    if (enabled) {
      if (!_container__WEBPACK_IMPORTED_MODULE_3__.Container.lineTracker.isSubscribed(this)) {
        _container__WEBPACK_IMPORTED_MODULE_3__.Container.lineTracker.start(this, _container__WEBPACK_IMPORTED_MODULE_3__.Container.lineTracker.onDidChangeActiveLines(this.onActiveLinesChanged, this));
      }
      return;
    }
    _container__WEBPACK_IMPORTED_MODULE_3__.Container.lineTracker.stop(this);
  }
  async waitForAnyPendingPullRequests(editor, prs, cancellationToken, timeout, cc) {
    const count = _system__WEBPACK_IMPORTED_MODULE_6__.Iterables.count(prs.values(), (pr) => pr instanceof _system__WEBPACK_IMPORTED_MODULE_6__.Promises.CancellationError);
    if (cancellationToken.isCancellationRequested || count === 0)
      return;
    _logger__WEBPACK_IMPORTED_MODULE_5__.Logger.debug(cc, `${_constants__WEBPACK_IMPORTED_MODULE_2__.GlyphChars.Dot} ${count} pull request queries took too long (over ${timeout} ms)`);
    const resolved = new Map();
    for (const [key, value] of prs) {
      resolved.set(key, value instanceof _system__WEBPACK_IMPORTED_MODULE_6__.Promises.CancellationError ? await value.promise : value);
    }
    if (cancellationToken.isCancellationRequested || editor !== this._editor)
      return;
    _logger__WEBPACK_IMPORTED_MODULE_5__.Logger.debug(cc, `${_constants__WEBPACK_IMPORTED_MODULE_2__.GlyphChars.Dot} ${count} pull request queries completed; refreshing...`);
    void this.refresh(editor, { prs: resolved });
  }
}
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_6__.log)()
], LineAnnotationController.prototype, "resume", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_6__.log)()
], LineAnnotationController.prototype, "suspend", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_6__.debug)({
    args: {
      0: (e) => {
        var _a, _b;
        return `editor=${(_a = e.editor) == null ? void 0 : _a.document.uri.toString(true)}, selections=${(_b = e.selections) == null ? void 0 : _b.map((s) => `[${s.anchor}-${s.active}]`).join(",")}, pending=${Boolean(e.pending)}, reason=${e.reason}`;
      }
    }
  })
], LineAnnotationController.prototype, "onActiveLinesChanged", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_6__.debug)({ args: false, singleLine: true })
], LineAnnotationController.prototype, "clear", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_6__.log)({ args: false })
], LineAnnotationController.prototype, "toggle", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_6__.debug)({ args: false })
], LineAnnotationController.prototype, "refresh", 1);


/***/ }),

/***/ "./src/api/actionRunners.ts":
/*!**********************************!*\
  !*** ./src/api/actionRunners.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ActionRunnerType": () => (/* binding */ ActionRunnerType),
/* harmony export */   "builtInActionRunnerName": () => (/* binding */ builtInActionRunnerName),
/* harmony export */   "ActionRunners": () => (/* binding */ ActionRunners)
/* harmony export */ });
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _commands_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../commands/common */ "./src/commands/common.ts");
/* harmony import */ var _configuration__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../configuration */ "./src/configuration.ts");
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../constants */ "./src/constants.ts");
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../container */ "./src/container.ts");
/* harmony import */ var _quickpicks__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../quickpicks */ "./src/quickpicks.ts");

var __defProp = Object.defineProperty;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};






const actions = ["createPullRequest", "openPullRequest", "hover.commands"];
var ActionRunnerType;
(function(ActionRunnerType2) {
  ActionRunnerType2[ActionRunnerType2["BuiltIn"] = 0] = "BuiltIn";
  ActionRunnerType2[ActionRunnerType2["BuiltInPartner"] = 1] = "BuiltInPartner";
  ActionRunnerType2[ActionRunnerType2["Partner"] = 2] = "Partner";
  ActionRunnerType2[ActionRunnerType2["BuiltInPartnerInstaller"] = 3] = "BuiltInPartnerInstaller";
})(ActionRunnerType || (ActionRunnerType = {}));
const builtInActionRunnerName = "Built In";
class ActionRunnerQuickPickItem {
  constructor(runner, context) {
    this.runner = runner;
    __publicField(this, "_label");
    this._label = typeof runner.label === "string" ? runner.label : runner.label(context);
  }
  get label() {
    return this._label;
  }
  get detail() {
    return this.runner.name;
  }
}
class NoActionRunnersQuickPickItem {
  constructor() {
    __publicField(this, "runner");
  }
  get label() {
    return "No actions were found";
  }
  get detail() {
    return void 0;
  }
}
let runnerId = 0;
function nextRunnerId() {
  if (runnerId === Number.MAX_SAFE_INTEGER) {
    runnerId = 1;
  } else {
    runnerId++;
  }
  return runnerId;
}
class RegisteredActionRunner {
  constructor(type, runner, unregister) {
    this.type = type;
    this.runner = runner;
    this.unregister = unregister;
    __publicField(this, "id");
    this.id = nextRunnerId();
  }
  dispose() {
    this.unregister();
  }
  get name() {
    return this.runner.name;
  }
  get label() {
    return this.runner.label;
  }
  get order() {
    switch (this.type) {
      case 0:
        return 0;
      case 1:
        return 1;
      case 2:
        return this.partnerId ? 1 : 2;
      case 3:
        return 3;
      default:
        return 100;
    }
  }
  get partnerId() {
    return this.runner.partnerId;
  }
  run(context) {
    return this.runner.run(context);
  }
}
class ActionRunners {
  constructor() {
    __publicField(this, "_onDidChange", new vscode__WEBPACK_IMPORTED_MODULE_0__.EventEmitter());
    __publicField(this, "_actionRunners", new Map());
    __publicField(this, "_disposable");
    const subscriptions = [
      _configuration__WEBPACK_IMPORTED_MODULE_2__.configuration.onDidChange((e) => {
        if (!_configuration__WEBPACK_IMPORTED_MODULE_2__.configuration.changed(e, "partners"))
          return;
        void this._updateAllContextKeys();
      })
    ];
    for (const action of actions) {
      subscriptions.push(vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(`${_commands_common__WEBPACK_IMPORTED_MODULE_1__.Commands.ActionPrefix}${action}`, (context, runnerId2) => this.run(context, runnerId2)));
    }
    this._disposable = vscode__WEBPACK_IMPORTED_MODULE_0__.Disposable.from(...subscriptions);
  }
  get onDidChange() {
    return this._onDidChange.event;
  }
  dispose() {
    this._disposable.dispose();
    for (const runners of this._actionRunners.values()) {
      for (const runner of runners) {
        runner.dispose();
      }
    }
    this._actionRunners.clear();
  }
  count(action) {
    var _a, _b;
    return (_b = (_a = this.get(action)) == null ? void 0 : _a.length) != null ? _b : 0;
  }
  get(action) {
    return filterOnlyEnabledRunners(this._actionRunners.get(action));
  }
  has(action) {
    return this.count(action) > 0;
  }
  register(action, runner, type = 2) {
    let runners = this._actionRunners.get(action);
    if (runners == null) {
      runners = [];
      this._actionRunners.set(action, runners);
    }
    const onChanged = (action2) => {
      void this._updateContextKeys(action2);
      this._onDidChange.fire(action2);
    };
    const runnersMap = this._actionRunners;
    const registeredRunner = new RegisteredActionRunner(type, runner, function() {
      if (runners.length === 1) {
        runnersMap.delete(action);
        onChanged(action);
      } else {
        const index = runners.indexOf(this);
        if (index !== -1) {
          runners.splice(index, 1);
        }
      }
    });
    runners.push(registeredRunner);
    onChanged(action);
    return {
      dispose: () => registeredRunner.dispose()
    };
  }
  registerBuiltIn(action, runner) {
    return this.register(action, { ...runner, partnerId: void 0, name: builtInActionRunnerName }, 0);
  }
  registerBuiltInPartner(partnerId, action, runner) {
    return this.register(action, { ...runner, partnerId }, 1);
  }
  registerBuiltInPartnerInstaller(partnerId, action, runner) {
    return this.register(action, { ...runner, partnerId, name: `${runner.name} (Not Installed)` }, 3);
  }
  async run(context, runnerId2) {
    let runners = this.get(context.type);
    if (runners == null || runners.length === 0)
      return;
    if (runnerId2 != null) {
      runners = runners.filter((r) => r.id === runnerId2);
    }
    if (runners.length === 0)
      return;
    let runner;
    if (runners.length > 1 || runners.every((r) => r.type !== 0)) {
      const items = runners.sort((a, b) => a.order - b.order || a.name.localeCompare(b.name, void 0, { numeric: true, sensitivity: "base" })).map((r) => new ActionRunnerQuickPickItem(r, context));
      if (items.length === 0) {
        items.push(new NoActionRunnersQuickPickItem());
      }
      const quickpick = vscode__WEBPACK_IMPORTED_MODULE_0__.window.createQuickPick();
      quickpick.ignoreFocusOut = (0,_quickpicks__WEBPACK_IMPORTED_MODULE_5__.getQuickPickIgnoreFocusOut)();
      const disposables = [];
      try {
        const pick = await new Promise((resolve) => {
          disposables.push(quickpick.onDidHide(() => resolve(void 0)), quickpick.onDidAccept(() => {
            if (quickpick.activeItems.length !== 0) {
              resolve(quickpick.activeItems[0]);
            }
          }));
          let title;
          let placeholder;
          switch (context.type) {
            case "createPullRequest":
              title = "Create Pull Request";
              placeholder = "Choose how to create a pull request";
              break;
            case "openPullRequest":
              title = "Open Pull Request";
              placeholder = "Choose how to open the pull request";
              break;
            case "hover.commands":
              title = "Need Help or Want to Collaborate?";
              placeholder = "Choose what you would like to do";
              break;
            default:
              debugger;
              break;
          }
          quickpick.title = title;
          quickpick.placeholder = placeholder;
          quickpick.matchOnDetail = true;
          quickpick.items = items;
          quickpick.show();
        });
        if (pick == null)
          return;
        runner = pick.runner;
      } finally {
        quickpick.dispose();
        disposables.forEach((d) => d.dispose());
      }
    } else {
      [runner] = runners;
    }
    await (runner == null ? void 0 : runner.run(context));
  }
  async _updateContextKeys(action) {
    await (0,_constants__WEBPACK_IMPORTED_MODULE_3__.setContext)(`${_constants__WEBPACK_IMPORTED_MODULE_3__.ContextKeys.ActionPrefix}${action}`, this.count(action));
  }
  async _updateAllContextKeys() {
    for (const action of actions) {
      await this._updateContextKeys(action);
    }
  }
}
function filterOnlyEnabledRunners(runners) {
  if (runners == null || runners.length === 0)
    return void 0;
  const partners = _container__WEBPACK_IMPORTED_MODULE_4__.Container.config.partners;
  if (partners == null)
    return runners;
  return runners.filter((r) => {
    var _a;
    return r.partnerId == null || r.partnerId != null && ((_a = partners[r.partnerId]) == null ? void 0 : _a.enabled) !== false;
  });
}


/***/ }),

/***/ "./src/api/api.ts":
/*!************************!*\
  !*** ./src/api/api.ts ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Api": () => (/* binding */ Api),
/* harmony export */   "preview": () => (/* binding */ preview)
/* harmony export */ });
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../container */ "./src/container.ts");
/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../logger */ "./src/logger.ts");
/* harmony import */ var _actionRunners__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./actionRunners */ "./src/api/actionRunners.ts");




const emptyDisposable = Object.freeze({
  dispose: () => {
  }
});
class Api {
  registerActionRunner(action, runner) {
    if (runner.name === _actionRunners__WEBPACK_IMPORTED_MODULE_2__.builtInActionRunnerName) {
      throw new Error(`Cannot use the reserved name '${_actionRunners__WEBPACK_IMPORTED_MODULE_2__.builtInActionRunnerName}'`);
    }
    if (action === "hover.commandHelp") {
      action = "hover.commands";
    }
    return _container__WEBPACK_IMPORTED_MODULE_0__.Container.actionRunners.register(action, runner);
  }
}
function preview() {
  return (target, key, descriptor) => {
    let fn;
    if (typeof descriptor.value === "function") {
      fn = descriptor.value;
    } else if (typeof descriptor.get === "function") {
      fn = descriptor.get;
    }
    if (fn == null)
      throw new Error("Not supported");
    descriptor.value = function(...args) {
      if (_container__WEBPACK_IMPORTED_MODULE_0__.Container.insiders || _logger__WEBPACK_IMPORTED_MODULE_1__.Logger.isDebugging)
        return fn.apply(this, args);
      console.error("GitLens preview APIs are only available in the Insiders edition");
      return emptyDisposable;
    };
  };
}


/***/ }),

/***/ "./src/avatars.ts":
/*!************************!*\
  !*** ./src/avatars.ts ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Avatars": () => (/* binding */ Avatars),
/* harmony export */   "getAvatarUri": () => (/* binding */ getAvatarUri),
/* harmony export */   "getPresenceDataUri": () => (/* binding */ getPresenceDataUri),
/* harmony export */   "resetAvatarCache": () => (/* binding */ resetAvatarCache)
/* harmony export */ });
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./config */ "./src/config.ts");
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./constants */ "./src/constants.ts");
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./container */ "./src/container.ts");
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./system */ "./src/system.ts");
/* harmony import */ var _system_date__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./system/date */ "./src/system/date.ts");







const _onDidFetchAvatar = new vscode__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
_onDidFetchAvatar.event(_system__WEBPACK_IMPORTED_MODULE_4__.Functions.debounce(() => {
  const avatars = avatarCache != null ? [
    ..._system__WEBPACK_IMPORTED_MODULE_4__.Iterables.filterMap(avatarCache, ([key, avatar]) => avatar.uri != null ? [
      key,
      {
        uri: avatar.uri.toString(),
        timestamp: avatar.timestamp
      }
    ] : void 0)
  ] : void 0;
  void _container__WEBPACK_IMPORTED_MODULE_3__.Container.context.globalState.update(_constants__WEBPACK_IMPORTED_MODULE_2__.GlobalState.Avatars, avatars);
}, 1e3));
var Avatars;
(function(Avatars2) {
  Avatars2.onDidFetch = _onDidFetchAvatar.event;
})(Avatars || (Avatars = {}));
let avatarCache;
const avatarQueue = new Map();
const missingGravatarHash = "00000000000000000000000000000000";
const presenceCache = new Map();
const gitHubNoReplyAddressRegex = /^(?:(?<userId>\d+)\+)?(?<userName>[a-zA-Z\d-]{1,39})@users\.noreply\.github\.com$/;
const retryDecay = [
  _system_date__WEBPACK_IMPORTED_MODULE_5__.MillisecondsPerDay * 7,
  _system_date__WEBPACK_IMPORTED_MODULE_5__.MillisecondsPerMinute,
  _system_date__WEBPACK_IMPORTED_MODULE_5__.MillisecondsPerMinute * 5,
  _system_date__WEBPACK_IMPORTED_MODULE_5__.MillisecondsPerMinute * 10,
  _system_date__WEBPACK_IMPORTED_MODULE_5__.MillisecondsPerHour,
  _system_date__WEBPACK_IMPORTED_MODULE_5__.MillisecondsPerDay,
  _system_date__WEBPACK_IMPORTED_MODULE_5__.MillisecondsPerDay * 7
];
function getAvatarUri(email, repoPathOrCommit, { defaultStyle, size = 16 } = {}) {
  var _a, _b;
  ensureAvatarCache(avatarCache);
  if (email == null || email.length === 0) {
    const avatar2 = createOrUpdateAvatar(`${missingGravatarHash}:${size}`, void 0, missingGravatarHash, size, defaultStyle);
    return (_a = avatar2.uri) != null ? _a : avatar2.fallback;
  }
  const hash = _system__WEBPACK_IMPORTED_MODULE_4__.Strings.md5(email.trim().toLowerCase(), "hex");
  const key = `${hash}:${size}`;
  const avatar = createOrUpdateAvatar(key, getAvatarUriFromGitHubNoReplyAddress(email, size), hash, size, defaultStyle);
  if (avatar.uri != null)
    return avatar.uri;
  let query = avatarQueue.get(key);
  if (query == null && repoPathOrCommit != null && hasAvatarExpired(avatar)) {
    query = getAvatarUriFromRemoteProvider(avatar, key, email, repoPathOrCommit, { size }).then((uri) => {
      var _a2;
      return (_a2 = uri != null ? uri : avatar.uri) != null ? _a2 : avatar.fallback;
    });
    avatarQueue.set(key, query.finally(() => avatarQueue.delete(key)));
  }
  if (query != null)
    return query;
  return (_b = avatar.uri) != null ? _b : avatar.fallback;
}
function createOrUpdateAvatar(key, uri, hash, size, defaultStyle) {
  let avatar = avatarCache.get(key);
  if (avatar == null) {
    avatar = {
      uri,
      fallback: getAvatarUriFromGravatar(hash, size, defaultStyle),
      timestamp: 0,
      retries: 0
    };
    avatarCache.set(key, avatar);
  } else if (avatar.fallback == null) {
    avatar.fallback = getAvatarUriFromGravatar(hash, size, defaultStyle);
  }
  return avatar;
}
function ensureAvatarCache(cache) {
  var _a;
  if (cache == null) {
    const avatars = (_a = _container__WEBPACK_IMPORTED_MODULE_3__.Container.context.globalState.get(_constants__WEBPACK_IMPORTED_MODULE_2__.GlobalState.Avatars)) == null ? void 0 : _a.map(([key, avatar]) => [
      key,
      {
        uri: vscode__WEBPACK_IMPORTED_MODULE_0__.Uri.parse(avatar.uri),
        timestamp: avatar.timestamp,
        retries: 0
      }
    ]);
    avatarCache = new Map(avatars);
  }
}
function hasAvatarExpired(avatar) {
  return Date.now() >= avatar.timestamp + retryDecay[Math.min(avatar.retries, retryDecay.length - 1)];
}
function getAvatarUriFromGravatar(hash, size, defaultStyle = _config__WEBPACK_IMPORTED_MODULE_1__.GravatarDefaultStyle.Robot) {
  return vscode__WEBPACK_IMPORTED_MODULE_0__.Uri.parse(`https://www.gravatar.com/avatar/${hash}.jpg?s=${size}&d=${defaultStyle}`);
}
function getAvatarUriFromGitHubNoReplyAddress(email, size = 16) {
  const match = gitHubNoReplyAddressRegex.exec(email);
  if (match == null)
    return void 0;
  const [, userId, userName] = match;
  return vscode__WEBPACK_IMPORTED_MODULE_0__.Uri.parse(`https://avatars.githubusercontent.com/${userId ? `u/${userId}` : userName}?size=${size}`);
}
async function getAvatarUriFromRemoteProvider(avatar, key, email, repoPathOrCommit, { size = 16 } = {}) {
  ensureAvatarCache(avatarCache);
  try {
    let account;
    if (_container__WEBPACK_IMPORTED_MODULE_3__.Container.config.integrations.enabled) {
      if (typeof repoPathOrCommit !== "string") {
        const remote = await _container__WEBPACK_IMPORTED_MODULE_3__.Container.git.getRichRemoteProvider(repoPathOrCommit.repoPath);
        account = await (remote == null ? void 0 : remote.provider.getAccountForCommit(repoPathOrCommit.ref, { avatarSize: size }));
      }
    }
    if (account == null) {
      avatar.uri = void 0;
      avatar.timestamp = Number.MAX_SAFE_INTEGER;
      avatar.retries = 0;
      return void 0;
    }
    avatar.uri = vscode__WEBPACK_IMPORTED_MODULE_0__.Uri.parse(account.avatarUrl);
    avatar.timestamp = Date.now();
    avatar.retries = 0;
    if (account.email != null && _system__WEBPACK_IMPORTED_MODULE_4__.Strings.equalsIgnoreCase(email, account.email)) {
      avatarCache.set(`${_system__WEBPACK_IMPORTED_MODULE_4__.Strings.md5(account.email.trim().toLowerCase(), "hex")}:${size}`, { ...avatar });
    }
    _onDidFetchAvatar.fire({ email });
    return avatar.uri;
  } catch {
    avatar.uri = void 0;
    avatar.timestamp = Date.now();
    avatar.retries++;
    return void 0;
  }
}
const presenceStatusColorMap = new Map([
  ["online", "#28ca42"],
  ["away", "#cecece"],
  ["busy", "#ca5628"],
  ["dnd", "#ca5628"],
  ["offline", "#cecece"]
]);
function getPresenceDataUri(status) {
  let dataUri = presenceCache.get(status);
  if (dataUri == null) {
    const contents = _system__WEBPACK_IMPORTED_MODULE_4__.Strings.base64(`<?xml version="1.0" encoding="utf-8"?>
<svg xmlns="http://www.w3.org/2000/svg" width="4" height="16" viewBox="0 0 4 16">
	<circle cx="2" cy="14" r="2" fill="${presenceStatusColorMap.get(status)}"/>
</svg>`);
    dataUri = encodeURI(`data:image/svg+xml;base64,${contents}`);
    presenceCache.set(status, dataUri);
  }
  return dataUri;
}
function resetAvatarCache(reset) {
  var _a, _b;
  switch (reset) {
    case "all":
      void _container__WEBPACK_IMPORTED_MODULE_3__.Container.context.globalState.update(_constants__WEBPACK_IMPORTED_MODULE_2__.GlobalState.Avatars, void 0);
      avatarCache == null ? void 0 : avatarCache.clear();
      avatarQueue.clear();
      break;
    case "failed":
      for (const avatar of (_a = avatarCache == null ? void 0 : avatarCache.values()) != null ? _a : []) {
        if (avatar.uri == null) {
          avatar.timestamp = 0;
          avatar.retries = 0;
        }
      }
      break;
    case "fallback":
      for (const avatar of (_b = avatarCache == null ? void 0 : avatarCache.values()) != null ? _b : []) {
        avatar.fallback = void 0;
      }
      break;
  }
}


/***/ }),

/***/ "./src/codelens/codeLensController.ts":
/*!********************************************!*\
  !*** ./src/codelens/codeLensController.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "GitCodeLensController": () => (/* binding */ GitCodeLensController)
/* harmony export */ });
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _configuration__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../configuration */ "./src/configuration.ts");
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../constants */ "./src/constants.ts");
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../container */ "./src/container.ts");
/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../logger */ "./src/logger.ts");
/* harmony import */ var _codeLensProvider__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./codeLensProvider */ "./src/codelens/codeLensProvider.ts");

var __defProp = Object.defineProperty;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};






class GitCodeLensController {
  constructor() {
    __publicField(this, "_canToggle", false);
    __publicField(this, "_disposable");
    __publicField(this, "_provider");
    __publicField(this, "_providerDisposable");
    this._disposable = vscode__WEBPACK_IMPORTED_MODULE_0__.Disposable.from(_configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.onDidChange(this.onConfigurationChanged, this));
    this.onConfigurationChanged();
  }
  dispose() {
    var _a, _b;
    (_a = this._providerDisposable) == null ? void 0 : _a.dispose();
    (_b = this._disposable) == null ? void 0 : _b.dispose();
  }
  onConfigurationChanged(e) {
    var _a;
    if (_configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.changed(e, "codeLens") || _configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.changed(e, "defaultDateFormat") || _configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.changed(e, "defaultDateSource") || _configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.changed(e, "defaultDateStyle")) {
      if (e != null) {
        _logger__WEBPACK_IMPORTED_MODULE_4__.Logger.log("CodeLens config changed; resetting CodeLens provider");
      }
      const cfg = _container__WEBPACK_IMPORTED_MODULE_3__.Container.config.codeLens;
      if (cfg.enabled && (cfg.recentChange.enabled || cfg.authors.enabled)) {
        this.ensureProvider();
      } else {
        (_a = this._providerDisposable) == null ? void 0 : _a.dispose();
        this._provider = void 0;
      }
      this._canToggle = cfg.recentChange.enabled || cfg.authors.enabled;
      void (0,_constants__WEBPACK_IMPORTED_MODULE_2__.setContext)(_constants__WEBPACK_IMPORTED_MODULE_2__.ContextKeys.DisabledToggleCodeLens, !this._canToggle);
    }
  }
  onBlameStateChanged(e) {
    if (this._provider === void 0 || !e.blameable)
      return;
    _logger__WEBPACK_IMPORTED_MODULE_4__.Logger.log("Blame state changed; resetting CodeLens provider");
    this._provider.reset("saved");
  }
  onDirtyIdleTriggered(e) {
    if (this._provider === void 0 || !e.document.isBlameable)
      return;
    const maxLines = _container__WEBPACK_IMPORTED_MODULE_3__.Container.config.advanced.blame.sizeThresholdAfterEdit;
    if (maxLines > 0 && e.document.lineCount > maxLines)
      return;
    _logger__WEBPACK_IMPORTED_MODULE_4__.Logger.log("Dirty idle triggered; resetting CodeLens provider");
    this._provider.reset("idle");
  }
  toggleCodeLens() {
    var _a;
    if (!this._canToggle)
      return;
    _logger__WEBPACK_IMPORTED_MODULE_4__.Logger.log("toggleCodeLens()");
    if (this._provider !== void 0) {
      (_a = this._providerDisposable) == null ? void 0 : _a.dispose();
      this._provider = void 0;
      return;
    }
    this.ensureProvider();
  }
  ensureProvider() {
    var _a;
    if (this._provider !== void 0) {
      this._provider.reset();
      return;
    }
    (_a = this._providerDisposable) == null ? void 0 : _a.dispose();
    this._provider = new _codeLensProvider__WEBPACK_IMPORTED_MODULE_5__.GitCodeLensProvider(_container__WEBPACK_IMPORTED_MODULE_3__.Container.context, _container__WEBPACK_IMPORTED_MODULE_3__.Container.git, _container__WEBPACK_IMPORTED_MODULE_3__.Container.tracker);
    this._providerDisposable = vscode__WEBPACK_IMPORTED_MODULE_0__.Disposable.from(vscode__WEBPACK_IMPORTED_MODULE_0__.languages.registerCodeLensProvider(_codeLensProvider__WEBPACK_IMPORTED_MODULE_5__.GitCodeLensProvider.selector, this._provider), _container__WEBPACK_IMPORTED_MODULE_3__.Container.tracker.onDidChangeBlameState(this.onBlameStateChanged, this), _container__WEBPACK_IMPORTED_MODULE_3__.Container.tracker.onDidTriggerDirtyIdle(this.onDirtyIdleTriggered, this));
  }
}


/***/ }),

/***/ "./src/codelens/codeLensProvider.ts":
/*!******************************************!*\
  !*** ./src/codelens/codeLensProvider.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "GitRecentChangeCodeLens": () => (/* binding */ GitRecentChangeCodeLens),
/* harmony export */   "GitAuthorsCodeLens": () => (/* binding */ GitAuthorsCodeLens),
/* harmony export */   "GitCodeLensProvider": () => (/* binding */ GitCodeLensProvider)
/* harmony export */ });
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _commands__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../commands */ "./src/commands.ts");
/* harmony import */ var _configuration__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../configuration */ "./src/configuration.ts");
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../constants */ "./src/constants.ts");
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../container */ "./src/container.ts");
/* harmony import */ var _git_git__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../git/git */ "./src/git/git.ts");
/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../logger */ "./src/logger.ts");
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../system */ "./src/system.ts");

var __defProp = Object.defineProperty;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};








class GitRecentChangeCodeLens extends vscode__WEBPACK_IMPORTED_MODULE_0__.CodeLens {
  constructor(languageId, symbol, uri, blame, blameRange, isFullRange, range, desiredCommand, command2) {
    super(range, command2);
    this.languageId = languageId;
    this.symbol = symbol;
    this.uri = uri;
    this.blame = blame;
    this.blameRange = blameRange;
    this.isFullRange = isFullRange;
    this.desiredCommand = desiredCommand;
  }
  getBlame() {
    var _a;
    return (_a = this.blame) == null ? void 0 : _a.call(this);
  }
}
class GitAuthorsCodeLens extends vscode__WEBPACK_IMPORTED_MODULE_0__.CodeLens {
  constructor(languageId, symbol, uri, blame, blameRange, isFullRange, range, desiredCommand) {
    super(range);
    this.languageId = languageId;
    this.symbol = symbol;
    this.uri = uri;
    this.blame = blame;
    this.blameRange = blameRange;
    this.isFullRange = isFullRange;
    this.desiredCommand = desiredCommand;
  }
  getBlame() {
    return this.blame();
  }
}
class GitCodeLensProvider {
  constructor(_context, _git, _tracker) {
    this._git = _git;
    this._tracker = _tracker;
    __publicField(this, "_onDidChangeCodeLenses", new vscode__WEBPACK_IMPORTED_MODULE_0__.EventEmitter());
  }
  get onDidChangeCodeLenses() {
    return this._onDidChangeCodeLenses.event;
  }
  reset(_reason) {
    this._onDidChangeCodeLenses.fire();
  }
  async provideCodeLenses(document, token) {
    var _a;
    const trackedDocument = await this._tracker.getOrAdd(document);
    if (!trackedDocument.isBlameable)
      return [];
    let dirty = false;
    if (document.isDirty) {
      if (trackedDocument.isDirtyIdle) {
        const maxLines = _container__WEBPACK_IMPORTED_MODULE_4__.Container.config.advanced.blame.sizeThresholdAfterEdit;
        if (maxLines > 0 && document.lineCount > maxLines) {
          dirty = true;
        }
      } else {
        dirty = true;
      }
    }
    const cfg = _configuration__WEBPACK_IMPORTED_MODULE_2__.configuration.get("codeLens", document);
    let languageScope = (_a = cfg.scopesByLanguage) == null ? void 0 : _a.find((ll) => {
      var _a2;
      return ((_a2 = ll.language) == null ? void 0 : _a2.toLowerCase()) === document.languageId;
    });
    if (languageScope == null) {
      languageScope = {
        language: document.languageId
      };
    }
    if (languageScope.scopes == null) {
      languageScope.scopes = cfg.scopes;
    }
    if (languageScope.symbolScopes == null) {
      languageScope.symbolScopes = cfg.symbolScopes;
    }
    languageScope.symbolScopes = languageScope.symbolScopes != null ? languageScope.symbolScopes = languageScope.symbolScopes.map((s) => s.toLowerCase()) : [];
    const lenses = [];
    const gitUri = trackedDocument.uri;
    let blame;
    let symbols;
    if (!dirty) {
      if (token.isCancellationRequested)
        return lenses;
      if (languageScope.scopes.length === 1 && languageScope.scopes.includes(_configuration__WEBPACK_IMPORTED_MODULE_2__.CodeLensScopes.Document)) {
        blame = document.isDirty ? await this._git.getBlameForFileContents(gitUri, document.getText()) : await this._git.getBlameForFile(gitUri);
      } else {
        [blame, symbols] = await Promise.all([
          document.isDirty ? this._git.getBlameForFileContents(gitUri, document.getText()) : this._git.getBlameForFile(gitUri),
          vscode__WEBPACK_IMPORTED_MODULE_0__.commands.executeCommand(_constants__WEBPACK_IMPORTED_MODULE_3__.BuiltInCommands.ExecuteDocumentSymbolProvider, document.uri)
        ]);
      }
      if (blame === void 0 || blame.lines.length === 0)
        return lenses;
    } else if (languageScope.scopes.length !== 1 || !languageScope.scopes.includes(_configuration__WEBPACK_IMPORTED_MODULE_2__.CodeLensScopes.Document)) {
      symbols = await vscode__WEBPACK_IMPORTED_MODULE_0__.commands.executeCommand(_constants__WEBPACK_IMPORTED_MODULE_3__.BuiltInCommands.ExecuteDocumentSymbolProvider, document.uri);
    }
    if (token.isCancellationRequested)
      return lenses;
    const documentRangeFn = _system__WEBPACK_IMPORTED_MODULE_7__.Functions.once(() => document.validateRange(new vscode__WEBPACK_IMPORTED_MODULE_0__.Range(0, 0, 1e6, 1e6)));
    const dirtyCommand = dirty ? { command: void 0, title: this.getDirtyTitle(cfg) } : void 0;
    if (symbols !== void 0) {
      _logger__WEBPACK_IMPORTED_MODULE_6__.Logger.log("GitCodeLensProvider.provideCodeLenses:", `${symbols.length} symbol(s) found`);
      for (const sym of symbols) {
        this.provideCodeLens(lenses, document, sym, languageScope, documentRangeFn, blame, gitUri, cfg, dirty, dirtyCommand);
      }
    }
    if ((languageScope.scopes.includes(_configuration__WEBPACK_IMPORTED_MODULE_2__.CodeLensScopes.Document) || languageScope.symbolScopes.includes("file")) && !languageScope.symbolScopes.includes("!file")) {
      if (lenses.find((l) => l.range.start.line === 0 && l.range.end.line === 0) == null) {
        const blameRange = documentRangeFn();
        let blameForRangeFn = void 0;
        if (dirty || cfg.recentChange.enabled) {
          if (!dirty) {
            blameForRangeFn = _system__WEBPACK_IMPORTED_MODULE_7__.Functions.once(() => this._git.getBlameForRangeSync(blame, gitUri, blameRange));
          }
          const fileSymbol = new vscode__WEBPACK_IMPORTED_MODULE_0__.SymbolInformation(gitUri.fileName, vscode__WEBPACK_IMPORTED_MODULE_0__.SymbolKind.File, "", new vscode__WEBPACK_IMPORTED_MODULE_0__.Location(gitUri.documentUri(), new vscode__WEBPACK_IMPORTED_MODULE_0__.Range(0, 0, 0, blameRange.start.character)));
          lenses.push(new GitRecentChangeCodeLens(document.languageId, fileSymbol, gitUri, blameForRangeFn, blameRange, true, getRangeFromSymbol(fileSymbol), cfg.recentChange.command, dirtyCommand));
        }
        if (!dirty && cfg.authors.enabled) {
          if (blameForRangeFn === void 0) {
            blameForRangeFn = _system__WEBPACK_IMPORTED_MODULE_7__.Functions.once(() => this._git.getBlameForRangeSync(blame, gitUri, blameRange));
          }
          const fileSymbol = new vscode__WEBPACK_IMPORTED_MODULE_0__.SymbolInformation(gitUri.fileName, vscode__WEBPACK_IMPORTED_MODULE_0__.SymbolKind.File, "", new vscode__WEBPACK_IMPORTED_MODULE_0__.Location(gitUri.documentUri(), new vscode__WEBPACK_IMPORTED_MODULE_0__.Range(0, 1, 0, blameRange.start.character)));
          lenses.push(new GitAuthorsCodeLens(document.languageId, fileSymbol, gitUri, blameForRangeFn, blameRange, true, getRangeFromSymbol(fileSymbol), cfg.authors.command));
        }
      }
    }
    return lenses;
  }
  getValidateSymbolRange(symbol, languageScope, documentRangeFn, includeSingleLineSymbols) {
    let valid = false;
    let range;
    const symbolName = vscode__WEBPACK_IMPORTED_MODULE_0__.SymbolKind[symbol.kind].toLowerCase();
    switch (symbol.kind) {
      case vscode__WEBPACK_IMPORTED_MODULE_0__.SymbolKind.File:
        if (languageScope.scopes.includes(_configuration__WEBPACK_IMPORTED_MODULE_2__.CodeLensScopes.Containers) || languageScope.symbolScopes.includes(symbolName)) {
          valid = !languageScope.symbolScopes.includes(`!${symbolName}`);
        }
        if (valid) {
          range = documentRangeFn();
        }
        break;
      case vscode__WEBPACK_IMPORTED_MODULE_0__.SymbolKind.Package:
        if (languageScope.scopes.includes(_configuration__WEBPACK_IMPORTED_MODULE_2__.CodeLensScopes.Containers) || languageScope.symbolScopes.includes(symbolName)) {
          valid = !languageScope.symbolScopes.includes(`!${symbolName}`);
        }
        if (valid) {
          range = getRangeFromSymbol(symbol);
          if (range.start.line === 0 && range.end.line === 0) {
            range = documentRangeFn();
          }
        }
        break;
      case vscode__WEBPACK_IMPORTED_MODULE_0__.SymbolKind.Class:
      case vscode__WEBPACK_IMPORTED_MODULE_0__.SymbolKind.Interface:
      case vscode__WEBPACK_IMPORTED_MODULE_0__.SymbolKind.Module:
      case vscode__WEBPACK_IMPORTED_MODULE_0__.SymbolKind.Namespace:
      case vscode__WEBPACK_IMPORTED_MODULE_0__.SymbolKind.Struct:
        if (languageScope.scopes.includes(_configuration__WEBPACK_IMPORTED_MODULE_2__.CodeLensScopes.Containers) || languageScope.symbolScopes.includes(symbolName)) {
          range = getRangeFromSymbol(symbol);
          valid = !languageScope.symbolScopes.includes(`!${symbolName}`) && (includeSingleLineSymbols || !range.isSingleLine);
        }
        break;
      case vscode__WEBPACK_IMPORTED_MODULE_0__.SymbolKind.Constructor:
      case vscode__WEBPACK_IMPORTED_MODULE_0__.SymbolKind.Enum:
      case vscode__WEBPACK_IMPORTED_MODULE_0__.SymbolKind.Function:
      case vscode__WEBPACK_IMPORTED_MODULE_0__.SymbolKind.Method:
      case vscode__WEBPACK_IMPORTED_MODULE_0__.SymbolKind.Property:
        if (languageScope.scopes.includes(_configuration__WEBPACK_IMPORTED_MODULE_2__.CodeLensScopes.Blocks) || languageScope.symbolScopes.includes(symbolName)) {
          range = getRangeFromSymbol(symbol);
          valid = !languageScope.symbolScopes.includes(`!${symbolName}`) && (includeSingleLineSymbols || !range.isSingleLine);
        }
        break;
      case vscode__WEBPACK_IMPORTED_MODULE_0__.SymbolKind.String:
        if (languageScope.symbolScopes.includes(symbolName) || languageScope.language === "markdown" && languageScope.scopes.includes(_configuration__WEBPACK_IMPORTED_MODULE_2__.CodeLensScopes.Containers)) {
          range = getRangeFromSymbol(symbol);
          valid = !languageScope.symbolScopes.includes(`!${symbolName}`) && (includeSingleLineSymbols || !range.isSingleLine);
        }
        break;
      default:
        if (languageScope.symbolScopes.includes(symbolName)) {
          range = getRangeFromSymbol(symbol);
          valid = !languageScope.symbolScopes.includes(`!${symbolName}`) && (includeSingleLineSymbols || !range.isSingleLine);
        }
        break;
    }
    return valid ? range != null ? range : getRangeFromSymbol(symbol) : void 0;
  }
  provideCodeLens(lenses, document, symbol, languageScope, documentRangeFn, blame, gitUri, cfg, dirty, dirtyCommand) {
    try {
      const blameRange = this.getValidateSymbolRange(symbol, languageScope, documentRangeFn, cfg.includeSingleLineSymbols);
      if (blameRange === void 0)
        return;
      const line = document.lineAt(getRangeFromSymbol(symbol).start);
      if (lenses.length && lenses[lenses.length - 1].range.start.line === line.lineNumber)
        return;
      let startChar = 0;
      let blameForRangeFn;
      if (dirty || cfg.recentChange.enabled) {
        if (!dirty) {
          blameForRangeFn = _system__WEBPACK_IMPORTED_MODULE_7__.Functions.once(() => this._git.getBlameForRangeSync(blame, gitUri, blameRange));
        }
        lenses.push(new GitRecentChangeCodeLens(document.languageId, symbol, gitUri, blameForRangeFn, blameRange, false, line.range.with(new vscode__WEBPACK_IMPORTED_MODULE_0__.Position(line.range.start.line, startChar)), cfg.recentChange.command, dirtyCommand));
        startChar++;
      }
      if (cfg.authors.enabled) {
        let multiline = !blameRange.isSingleLine;
        if (!multiline && document.languageId === "csharp") {
          switch (symbol.kind) {
            case vscode__WEBPACK_IMPORTED_MODULE_0__.SymbolKind.File:
              break;
            case vscode__WEBPACK_IMPORTED_MODULE_0__.SymbolKind.Package:
            case vscode__WEBPACK_IMPORTED_MODULE_0__.SymbolKind.Module:
            case vscode__WEBPACK_IMPORTED_MODULE_0__.SymbolKind.Namespace:
            case vscode__WEBPACK_IMPORTED_MODULE_0__.SymbolKind.Class:
            case vscode__WEBPACK_IMPORTED_MODULE_0__.SymbolKind.Interface:
            case vscode__WEBPACK_IMPORTED_MODULE_0__.SymbolKind.Constructor:
            case vscode__WEBPACK_IMPORTED_MODULE_0__.SymbolKind.Method:
            case vscode__WEBPACK_IMPORTED_MODULE_0__.SymbolKind.Function:
            case vscode__WEBPACK_IMPORTED_MODULE_0__.SymbolKind.Enum:
              multiline = true;
              break;
          }
        }
        if (multiline && !dirty) {
          if (blameForRangeFn === void 0) {
            blameForRangeFn = _system__WEBPACK_IMPORTED_MODULE_7__.Functions.once(() => this._git.getBlameForRangeSync(blame, gitUri, blameRange));
          }
          lenses.push(new GitAuthorsCodeLens(document.languageId, symbol, gitUri, blameForRangeFn, blameRange, false, line.range.with(new vscode__WEBPACK_IMPORTED_MODULE_0__.Position(line.range.start.line, startChar)), cfg.authors.command));
        }
      }
    } finally {
      if (isDocumentSymbol(symbol)) {
        for (const child of symbol.children) {
          this.provideCodeLens(lenses, document, child, languageScope, documentRangeFn, blame, gitUri, cfg, dirty, dirtyCommand);
        }
      }
    }
  }
  resolveCodeLens(lens, token) {
    if (lens instanceof GitRecentChangeCodeLens)
      return this.resolveGitRecentChangeCodeLens(lens, token);
    if (lens instanceof GitAuthorsCodeLens)
      return this.resolveGitAuthorsCodeLens(lens, token);
    return Promise.reject(void 0);
  }
  resolveGitRecentChangeCodeLens(lens, _token) {
    const blame = lens.getBlame();
    if (blame === void 0)
      return lens;
    const recentCommit = _system__WEBPACK_IMPORTED_MODULE_7__.Iterables.first(blame.commits.values());
    let title = `${recentCommit.author}, ${recentCommit.formattedDate}`;
    if (_container__WEBPACK_IMPORTED_MODULE_4__.Container.config.debug) {
      title += ` [${lens.languageId}: ${vscode__WEBPACK_IMPORTED_MODULE_0__.SymbolKind[lens.symbol.kind]}(${lens.range.start.character}-${lens.range.end.character}${lens.symbol.containerName ? `|${lens.symbol.containerName}` : ""}), Lines (${lens.blameRange.start.line + 1}-${lens.blameRange.end.line + 1}), Commit (${recentCommit.shortSha})]`;
    }
    if (lens.desiredCommand === false) {
      return this.applyCommandWithNoClickAction(title, lens);
    }
    switch (lens.desiredCommand) {
      case _configuration__WEBPACK_IMPORTED_MODULE_2__.CodeLensCommand.CopyRemoteCommitUrl:
        return this.applyCopyOrOpenCommitOnRemoteCommand(title, lens, recentCommit, true);
      case _configuration__WEBPACK_IMPORTED_MODULE_2__.CodeLensCommand.CopyRemoteFileUrl:
        return this.applyCopyOrOpenFileOnRemoteCommand(title, lens, recentCommit, true);
      case _configuration__WEBPACK_IMPORTED_MODULE_2__.CodeLensCommand.DiffWithPrevious:
        return this.applyDiffWithPreviousCommand(title, lens, recentCommit);
      case _configuration__WEBPACK_IMPORTED_MODULE_2__.CodeLensCommand.OpenCommitOnRemote:
        return this.applyCopyOrOpenCommitOnRemoteCommand(title, lens, recentCommit);
      case _configuration__WEBPACK_IMPORTED_MODULE_2__.CodeLensCommand.OpenFileOnRemote:
        return this.applyCopyOrOpenFileOnRemoteCommand(title, lens, recentCommit);
      case _configuration__WEBPACK_IMPORTED_MODULE_2__.CodeLensCommand.RevealCommitInView:
        return this.applyRevealCommitInViewCommand(title, lens, recentCommit);
      case _configuration__WEBPACK_IMPORTED_MODULE_2__.CodeLensCommand.ShowCommitsInView:
        return this.applyShowCommitsInViewCommand(title, lens, blame, recentCommit);
      case _configuration__WEBPACK_IMPORTED_MODULE_2__.CodeLensCommand.ShowQuickCommitDetails:
        return this.applyShowQuickCommitDetailsCommand(title, lens, recentCommit);
      case _configuration__WEBPACK_IMPORTED_MODULE_2__.CodeLensCommand.ShowQuickCommitFileDetails:
        return this.applyShowQuickCommitFileDetailsCommand(title, lens, recentCommit);
      case _configuration__WEBPACK_IMPORTED_MODULE_2__.CodeLensCommand.ShowQuickCurrentBranchHistory:
        return this.applyShowQuickCurrentBranchHistoryCommand(title, lens);
      case _configuration__WEBPACK_IMPORTED_MODULE_2__.CodeLensCommand.ShowQuickFileHistory:
        return this.applyShowQuickFileHistoryCommand(title, lens);
      case _configuration__WEBPACK_IMPORTED_MODULE_2__.CodeLensCommand.ToggleFileBlame:
        return this.applyToggleFileBlameCommand(title, lens);
      case _configuration__WEBPACK_IMPORTED_MODULE_2__.CodeLensCommand.ToggleFileChanges:
        return this.applyToggleFileChangesCommand(title, lens, recentCommit);
      case _configuration__WEBPACK_IMPORTED_MODULE_2__.CodeLensCommand.ToggleFileChangesOnly:
        return this.applyToggleFileChangesCommand(title, lens, recentCommit, true);
      case _configuration__WEBPACK_IMPORTED_MODULE_2__.CodeLensCommand.ToggleFileHeatmap:
        return this.applyToggleFileHeatmapCommand(title, lens);
      default:
        return lens;
    }
  }
  resolveGitAuthorsCodeLens(lens, _token) {
    var _a;
    const blame = lens.getBlame();
    if (blame === void 0)
      return lens;
    const count = blame.authors.size;
    const author = _system__WEBPACK_IMPORTED_MODULE_7__.Iterables.first(blame.authors.values()).name;
    let title = `${count} ${count > 1 ? "authors" : "author"} (${author}${count > 1 ? " and others" : ""})`;
    if (_container__WEBPACK_IMPORTED_MODULE_4__.Container.config.debug) {
      title += ` [${lens.languageId}: ${vscode__WEBPACK_IMPORTED_MODULE_0__.SymbolKind[lens.symbol.kind]}(${lens.range.start.character}-${lens.range.end.character}${lens.symbol.containerName ? `|${lens.symbol.containerName}` : ""}), Lines (${lens.blameRange.start.line + 1}-${lens.blameRange.end.line + 1}), Authors (${_system__WEBPACK_IMPORTED_MODULE_7__.Iterables.join(_system__WEBPACK_IMPORTED_MODULE_7__.Iterables.map(blame.authors.values(), (a) => a.name), ", ")})]`;
    }
    if (lens.desiredCommand === false) {
      return this.applyCommandWithNoClickAction(title, lens);
    }
    const commit = (_a = _system__WEBPACK_IMPORTED_MODULE_7__.Iterables.find(blame.commits.values(), (c) => c.author === author)) != null ? _a : _system__WEBPACK_IMPORTED_MODULE_7__.Iterables.first(blame.commits.values());
    switch (lens.desiredCommand) {
      case _configuration__WEBPACK_IMPORTED_MODULE_2__.CodeLensCommand.CopyRemoteCommitUrl:
        return this.applyCopyOrOpenCommitOnRemoteCommand(title, lens, commit, true);
      case _configuration__WEBPACK_IMPORTED_MODULE_2__.CodeLensCommand.CopyRemoteFileUrl:
        return this.applyCopyOrOpenFileOnRemoteCommand(title, lens, commit, true);
      case _configuration__WEBPACK_IMPORTED_MODULE_2__.CodeLensCommand.DiffWithPrevious:
        return this.applyDiffWithPreviousCommand(title, lens, commit);
      case _configuration__WEBPACK_IMPORTED_MODULE_2__.CodeLensCommand.OpenCommitOnRemote:
        return this.applyCopyOrOpenCommitOnRemoteCommand(title, lens, commit);
      case _configuration__WEBPACK_IMPORTED_MODULE_2__.CodeLensCommand.OpenFileOnRemote:
        return this.applyCopyOrOpenFileOnRemoteCommand(title, lens, commit);
      case _configuration__WEBPACK_IMPORTED_MODULE_2__.CodeLensCommand.RevealCommitInView:
        return this.applyRevealCommitInViewCommand(title, lens, commit);
      case _configuration__WEBPACK_IMPORTED_MODULE_2__.CodeLensCommand.ShowCommitsInView:
        return this.applyShowCommitsInViewCommand(title, lens, blame);
      case _configuration__WEBPACK_IMPORTED_MODULE_2__.CodeLensCommand.ShowQuickCommitDetails:
        return this.applyShowQuickCommitDetailsCommand(title, lens, commit);
      case _configuration__WEBPACK_IMPORTED_MODULE_2__.CodeLensCommand.ShowQuickCommitFileDetails:
        return this.applyShowQuickCommitFileDetailsCommand(title, lens, commit);
      case _configuration__WEBPACK_IMPORTED_MODULE_2__.CodeLensCommand.ShowQuickCurrentBranchHistory:
        return this.applyShowQuickCurrentBranchHistoryCommand(title, lens);
      case _configuration__WEBPACK_IMPORTED_MODULE_2__.CodeLensCommand.ShowQuickFileHistory:
        return this.applyShowQuickFileHistoryCommand(title, lens);
      case _configuration__WEBPACK_IMPORTED_MODULE_2__.CodeLensCommand.ToggleFileBlame:
        return this.applyToggleFileBlameCommand(title, lens);
      case _configuration__WEBPACK_IMPORTED_MODULE_2__.CodeLensCommand.ToggleFileChanges:
        return this.applyToggleFileChangesCommand(title, lens, commit);
      case _configuration__WEBPACK_IMPORTED_MODULE_2__.CodeLensCommand.ToggleFileChangesOnly:
        return this.applyToggleFileChangesCommand(title, lens, commit, true);
      case _configuration__WEBPACK_IMPORTED_MODULE_2__.CodeLensCommand.ToggleFileHeatmap:
        return this.applyToggleFileHeatmapCommand(title, lens);
      default:
        return lens;
    }
  }
  applyDiffWithPreviousCommand(title, lens, commit) {
    lens.command = (0,_commands__WEBPACK_IMPORTED_MODULE_1__.command)({
      title,
      command: _commands__WEBPACK_IMPORTED_MODULE_1__.Commands.DiffWithPrevious,
      arguments: [
        void 0,
        {
          commit,
          uri: lens.uri.toFileUri()
        }
      ]
    });
    return lens;
  }
  applyCopyOrOpenCommitOnRemoteCommand(title, lens, commit, clipboard = false) {
    lens.command = (0,_commands__WEBPACK_IMPORTED_MODULE_1__.command)({
      title,
      command: _commands__WEBPACK_IMPORTED_MODULE_1__.Commands.OpenOnRemote,
      arguments: [
        {
          resource: {
            type: _git_git__WEBPACK_IMPORTED_MODULE_5__.RemoteResourceType.Commit,
            sha: commit.sha
          },
          repoPath: commit.repoPath,
          clipboard
        }
      ]
    });
    return lens;
  }
  applyCopyOrOpenFileOnRemoteCommand(title, lens, commit, clipboard = false) {
    lens.command = (0,_commands__WEBPACK_IMPORTED_MODULE_1__.command)({
      title,
      command: _commands__WEBPACK_IMPORTED_MODULE_1__.Commands.OpenOnRemote,
      arguments: [
        {
          resource: {
            type: _git_git__WEBPACK_IMPORTED_MODULE_5__.RemoteResourceType.Revision,
            fileName: commit.fileName,
            sha: commit.sha
          },
          repoPath: commit.repoPath,
          clipboard
        }
      ]
    });
    return lens;
  }
  applyRevealCommitInViewCommand(title, lens, commit) {
    lens.command = (0,_commands__WEBPACK_IMPORTED_MODULE_1__.command)({
      title,
      command: (commit == null ? void 0 : commit.isUncommitted) ? "" : _configuration__WEBPACK_IMPORTED_MODULE_2__.CodeLensCommand.RevealCommitInView,
      arguments: [
        lens.uri.toFileUri(),
        {
          commit,
          sha: commit === void 0 ? void 0 : commit.sha
        }
      ]
    });
    return lens;
  }
  applyShowCommitsInViewCommand(title, lens, blame, commit) {
    let refs;
    if (commit === void 0) {
      refs = [..._system__WEBPACK_IMPORTED_MODULE_7__.Iterables.filterMap(blame.commits.values(), (c) => c.isUncommitted ? void 0 : c.ref)];
    } else {
      refs = [commit.ref];
    }
    lens.command = (0,_commands__WEBPACK_IMPORTED_MODULE_1__.command)({
      title,
      command: refs.length === 0 ? "" : _commands__WEBPACK_IMPORTED_MODULE_1__.Commands.ShowCommitsInView,
      arguments: [
        {
          repoPath: blame.repoPath,
          refs
        }
      ]
    });
    return lens;
  }
  applyShowQuickCommitDetailsCommand(title, lens, commit) {
    lens.command = (0,_commands__WEBPACK_IMPORTED_MODULE_1__.command)({
      title,
      command: (commit == null ? void 0 : commit.isUncommitted) ? "" : _configuration__WEBPACK_IMPORTED_MODULE_2__.CodeLensCommand.ShowQuickCommitDetails,
      arguments: [
        lens.uri.toFileUri(),
        {
          commit,
          sha: commit === void 0 ? void 0 : commit.sha
        }
      ]
    });
    return lens;
  }
  applyShowQuickCommitFileDetailsCommand(title, lens, commit) {
    lens.command = (0,_commands__WEBPACK_IMPORTED_MODULE_1__.command)({
      title,
      command: (commit == null ? void 0 : commit.isUncommitted) ? "" : _configuration__WEBPACK_IMPORTED_MODULE_2__.CodeLensCommand.ShowQuickCommitFileDetails,
      arguments: [
        lens.uri.toFileUri(),
        {
          commit,
          sha: commit === void 0 ? void 0 : commit.sha
        }
      ]
    });
    return lens;
  }
  applyShowQuickCurrentBranchHistoryCommand(title, lens) {
    lens.command = (0,_commands__WEBPACK_IMPORTED_MODULE_1__.command)({
      title,
      command: _configuration__WEBPACK_IMPORTED_MODULE_2__.CodeLensCommand.ShowQuickCurrentBranchHistory,
      arguments: [lens.uri.toFileUri()]
    });
    return lens;
  }
  applyShowQuickFileHistoryCommand(title, lens) {
    lens.command = (0,_commands__WEBPACK_IMPORTED_MODULE_1__.command)({
      title,
      command: _configuration__WEBPACK_IMPORTED_MODULE_2__.CodeLensCommand.ShowQuickFileHistory,
      arguments: [
        lens.uri.toFileUri(),
        {
          range: lens.isFullRange ? void 0 : lens.blameRange
        }
      ]
    });
    return lens;
  }
  applyToggleFileBlameCommand(title, lens) {
    lens.command = (0,_commands__WEBPACK_IMPORTED_MODULE_1__.command)({
      title,
      command: _commands__WEBPACK_IMPORTED_MODULE_1__.Commands.ToggleFileBlame,
      arguments: [lens.uri.toFileUri()]
    });
    return lens;
  }
  applyToggleFileChangesCommand(title, lens, commit, only) {
    lens.command = (0,_commands__WEBPACK_IMPORTED_MODULE_1__.command)({
      title,
      command: _commands__WEBPACK_IMPORTED_MODULE_1__.Commands.ToggleFileChanges,
      arguments: [
        lens.uri.toFileUri(),
        {
          type: _configuration__WEBPACK_IMPORTED_MODULE_2__.FileAnnotationType.Changes,
          context: { sha: commit.sha, only, selection: false }
        }
      ]
    });
    return lens;
  }
  applyToggleFileHeatmapCommand(title, lens) {
    lens.command = (0,_commands__WEBPACK_IMPORTED_MODULE_1__.command)({
      title,
      command: _commands__WEBPACK_IMPORTED_MODULE_1__.Commands.ToggleFileHeatmap,
      arguments: [lens.uri.toFileUri()]
    });
    return lens;
  }
  applyCommandWithNoClickAction(title, lens) {
    lens.command = {
      title,
      command: ""
    };
    return lens;
  }
  getDirtyTitle(cfg) {
    if (cfg.recentChange.enabled && cfg.authors.enabled) {
      return _container__WEBPACK_IMPORTED_MODULE_4__.Container.config.strings.codeLens.unsavedChanges.recentChangeAndAuthors;
    }
    if (cfg.recentChange.enabled)
      return _container__WEBPACK_IMPORTED_MODULE_4__.Container.config.strings.codeLens.unsavedChanges.recentChangeOnly;
    return _container__WEBPACK_IMPORTED_MODULE_4__.Container.config.strings.codeLens.unsavedChanges.authorsOnly;
  }
}
__publicField(GitCodeLensProvider, "selector", [
  { scheme: _constants__WEBPACK_IMPORTED_MODULE_3__.DocumentSchemes.File },
  { scheme: _constants__WEBPACK_IMPORTED_MODULE_3__.DocumentSchemes.Git },
  { scheme: _constants__WEBPACK_IMPORTED_MODULE_3__.DocumentSchemes.GitLens },
  { scheme: _constants__WEBPACK_IMPORTED_MODULE_3__.DocumentSchemes.PRs },
  { scheme: _constants__WEBPACK_IMPORTED_MODULE_3__.DocumentSchemes.Vsls }
]);
function getRangeFromSymbol(symbol) {
  return isDocumentSymbol(symbol) ? symbol.range : symbol.location.range;
}
function isDocumentSymbol(symbol) {
  return _system__WEBPACK_IMPORTED_MODULE_7__.Functions.is(symbol, "children");
}


/***/ }),

/***/ "./src/commands.ts":
/*!*************************!*\
  !*** ./src/commands.ts ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "command": () => (/* binding */ command),
/* harmony export */   "AddAuthorsCommand": () => (/* reexport safe */ _commands_addAuthors__WEBPACK_IMPORTED_MODULE_0__.AddAuthorsCommand),
/* harmony export */   "BrowseRepoAtRevisionCommand": () => (/* reexport safe */ _commands_browseRepoAtRevision__WEBPACK_IMPORTED_MODULE_1__.BrowseRepoAtRevisionCommand),
/* harmony export */   "CloseUnchangedFilesCommand": () => (/* reexport safe */ _commands_closeUnchangedFiles__WEBPACK_IMPORTED_MODULE_2__.CloseUnchangedFilesCommand),
/* harmony export */   "CloseViewCommand": () => (/* reexport safe */ _commands_closeView__WEBPACK_IMPORTED_MODULE_3__.CloseViewCommand),
/* harmony export */   "ActiveEditorCachedCommand": () => (/* reexport safe */ _commands_common__WEBPACK_IMPORTED_MODULE_4__.ActiveEditorCachedCommand),
/* harmony export */   "ActiveEditorCommand": () => (/* reexport safe */ _commands_common__WEBPACK_IMPORTED_MODULE_4__.ActiveEditorCommand),
/* harmony export */   "Command": () => (/* reexport safe */ _commands_common__WEBPACK_IMPORTED_MODULE_4__.Command),
/* harmony export */   "Commands": () => (/* reexport safe */ _commands_common__WEBPACK_IMPORTED_MODULE_4__.Commands),
/* harmony export */   "EditorCommand": () => (/* reexport safe */ _commands_common__WEBPACK_IMPORTED_MODULE_4__.EditorCommand),
/* harmony export */   "executeActionCommand": () => (/* reexport safe */ _commands_common__WEBPACK_IMPORTED_MODULE_4__.executeActionCommand),
/* harmony export */   "executeCommand": () => (/* reexport safe */ _commands_common__WEBPACK_IMPORTED_MODULE_4__.executeCommand),
/* harmony export */   "executeEditorCommand": () => (/* reexport safe */ _commands_common__WEBPACK_IMPORTED_MODULE_4__.executeEditorCommand),
/* harmony export */   "findEditor": () => (/* reexport safe */ _commands_common__WEBPACK_IMPORTED_MODULE_4__.findEditor),
/* harmony export */   "findOrOpenEditor": () => (/* reexport safe */ _commands_common__WEBPACK_IMPORTED_MODULE_4__.findOrOpenEditor),
/* harmony export */   "findOrOpenEditors": () => (/* reexport safe */ _commands_common__WEBPACK_IMPORTED_MODULE_4__.findOrOpenEditors),
/* harmony export */   "getCommandUri": () => (/* reexport safe */ _commands_common__WEBPACK_IMPORTED_MODULE_4__.getCommandUri),
/* harmony export */   "getLastCommand": () => (/* reexport safe */ _commands_common__WEBPACK_IMPORTED_MODULE_4__.getLastCommand),
/* harmony export */   "getMarkdownActionCommand": () => (/* reexport safe */ _commands_common__WEBPACK_IMPORTED_MODULE_4__.getMarkdownActionCommand),
/* harmony export */   "getRepoPathOrActiveOrPrompt": () => (/* reexport safe */ _commands_common__WEBPACK_IMPORTED_MODULE_4__.getRepoPathOrActiveOrPrompt),
/* harmony export */   "getRepoPathOrPrompt": () => (/* reexport safe */ _commands_common__WEBPACK_IMPORTED_MODULE_4__.getRepoPathOrPrompt),
/* harmony export */   "isCommandContextGitTimelineItem": () => (/* reexport safe */ _commands_common__WEBPACK_IMPORTED_MODULE_4__.isCommandContextGitTimelineItem),
/* harmony export */   "isCommandContextViewNodeHasBranch": () => (/* reexport safe */ _commands_common__WEBPACK_IMPORTED_MODULE_4__.isCommandContextViewNodeHasBranch),
/* harmony export */   "isCommandContextViewNodeHasCommit": () => (/* reexport safe */ _commands_common__WEBPACK_IMPORTED_MODULE_4__.isCommandContextViewNodeHasCommit),
/* harmony export */   "isCommandContextViewNodeHasContributor": () => (/* reexport safe */ _commands_common__WEBPACK_IMPORTED_MODULE_4__.isCommandContextViewNodeHasContributor),
/* harmony export */   "isCommandContextViewNodeHasFile": () => (/* reexport safe */ _commands_common__WEBPACK_IMPORTED_MODULE_4__.isCommandContextViewNodeHasFile),
/* harmony export */   "isCommandContextViewNodeHasFileCommit": () => (/* reexport safe */ _commands_common__WEBPACK_IMPORTED_MODULE_4__.isCommandContextViewNodeHasFileCommit),
/* harmony export */   "isCommandContextViewNodeHasFileRefs": () => (/* reexport safe */ _commands_common__WEBPACK_IMPORTED_MODULE_4__.isCommandContextViewNodeHasFileRefs),
/* harmony export */   "isCommandContextViewNodeHasRef": () => (/* reexport safe */ _commands_common__WEBPACK_IMPORTED_MODULE_4__.isCommandContextViewNodeHasRef),
/* harmony export */   "isCommandContextViewNodeHasRemote": () => (/* reexport safe */ _commands_common__WEBPACK_IMPORTED_MODULE_4__.isCommandContextViewNodeHasRemote),
/* harmony export */   "isCommandContextViewNodeHasRepoPath": () => (/* reexport safe */ _commands_common__WEBPACK_IMPORTED_MODULE_4__.isCommandContextViewNodeHasRepoPath),
/* harmony export */   "isCommandContextViewNodeHasRepository": () => (/* reexport safe */ _commands_common__WEBPACK_IMPORTED_MODULE_4__.isCommandContextViewNodeHasRepository),
/* harmony export */   "isCommandContextViewNodeHasTag": () => (/* reexport safe */ _commands_common__WEBPACK_IMPORTED_MODULE_4__.isCommandContextViewNodeHasTag),
/* harmony export */   "openEditor": () => (/* reexport safe */ _commands_common__WEBPACK_IMPORTED_MODULE_4__.openEditor),
/* harmony export */   "openWorkspace": () => (/* reexport safe */ _commands_common__WEBPACK_IMPORTED_MODULE_4__.openWorkspace),
/* harmony export */   "registerCommands": () => (/* reexport safe */ _commands_common__WEBPACK_IMPORTED_MODULE_4__.registerCommands),
/* harmony export */   "CompareWithCommand": () => (/* reexport safe */ _commands_compareWith__WEBPACK_IMPORTED_MODULE_5__.CompareWithCommand),
/* harmony export */   "CopyCurrentBranchCommand": () => (/* reexport safe */ _commands_copyCurrentBranch__WEBPACK_IMPORTED_MODULE_6__.CopyCurrentBranchCommand),
/* harmony export */   "CopyMessageToClipboardCommand": () => (/* reexport safe */ _commands_copyMessageToClipboard__WEBPACK_IMPORTED_MODULE_7__.CopyMessageToClipboardCommand),
/* harmony export */   "CopyShaToClipboardCommand": () => (/* reexport safe */ _commands_copyShaToClipboard__WEBPACK_IMPORTED_MODULE_8__.CopyShaToClipboardCommand),
/* harmony export */   "CreatePullRequestOnRemoteCommand": () => (/* reexport safe */ _commands_createPullRequestOnRemote__WEBPACK_IMPORTED_MODULE_9__.CreatePullRequestOnRemoteCommand),
/* harmony export */   "OpenDirectoryCompareCommand": () => (/* reexport safe */ _commands_openDirectoryCompare__WEBPACK_IMPORTED_MODULE_10__.OpenDirectoryCompareCommand),
/* harmony export */   "DiffLineWithPreviousCommand": () => (/* reexport safe */ _commands_diffLineWithPrevious__WEBPACK_IMPORTED_MODULE_11__.DiffLineWithPreviousCommand),
/* harmony export */   "DiffLineWithWorkingCommand": () => (/* reexport safe */ _commands_diffLineWithWorking__WEBPACK_IMPORTED_MODULE_12__.DiffLineWithWorkingCommand),
/* harmony export */   "DiffWithCommand": () => (/* reexport safe */ _commands_diffWith__WEBPACK_IMPORTED_MODULE_13__.DiffWithCommand),
/* harmony export */   "DiffWithNextCommand": () => (/* reexport safe */ _commands_diffWithNext__WEBPACK_IMPORTED_MODULE_14__.DiffWithNextCommand),
/* harmony export */   "DiffWithPreviousCommand": () => (/* reexport safe */ _commands_diffWithPrevious__WEBPACK_IMPORTED_MODULE_15__.DiffWithPreviousCommand),
/* harmony export */   "DiffWithRevisionCommand": () => (/* reexport safe */ _commands_diffWithRevision__WEBPACK_IMPORTED_MODULE_16__.DiffWithRevisionCommand),
/* harmony export */   "DiffWithRevisionFromCommand": () => (/* reexport safe */ _commands_diffWithRevisionFrom__WEBPACK_IMPORTED_MODULE_17__.DiffWithRevisionFromCommand),
/* harmony export */   "DiffWithWorkingCommand": () => (/* reexport safe */ _commands_diffWithWorking__WEBPACK_IMPORTED_MODULE_18__.DiffWithWorkingCommand),
/* harmony export */   "ExternalDiffCommand": () => (/* reexport safe */ _commands_externalDiff__WEBPACK_IMPORTED_MODULE_19__.ExternalDiffCommand),
/* harmony export */   "GitActions": () => (/* reexport safe */ _commands_gitCommands__WEBPACK_IMPORTED_MODULE_20__.GitActions),
/* harmony export */   "GitCommandsCommand": () => (/* reexport safe */ _commands_gitCommands__WEBPACK_IMPORTED_MODULE_20__.GitCommandsCommand),
/* harmony export */   "executeGitCommand": () => (/* reexport safe */ _commands_gitCommands__WEBPACK_IMPORTED_MODULE_20__.executeGitCommand),
/* harmony export */   "InviteToLiveShareCommand": () => (/* reexport safe */ _commands_inviteToLiveShare__WEBPACK_IMPORTED_MODULE_21__.InviteToLiveShareCommand),
/* harmony export */   "DisableDebugLoggingCommand": () => (/* reexport safe */ _commands_logging__WEBPACK_IMPORTED_MODULE_22__.DisableDebugLoggingCommand),
/* harmony export */   "EnableDebugLoggingCommand": () => (/* reexport safe */ _commands_logging__WEBPACK_IMPORTED_MODULE_22__.EnableDebugLoggingCommand),
/* harmony export */   "OpenAssociatedPullRequestOnRemoteCommand": () => (/* reexport safe */ _commands_openAssociatedPullRequestOnRemote__WEBPACK_IMPORTED_MODULE_23__.OpenAssociatedPullRequestOnRemoteCommand),
/* harmony export */   "OpenBranchesOnRemoteCommand": () => (/* reexport safe */ _commands_openBranchesOnRemote__WEBPACK_IMPORTED_MODULE_24__.OpenBranchesOnRemoteCommand),
/* harmony export */   "OpenBranchOnRemoteCommand": () => (/* reexport safe */ _commands_openBranchOnRemote__WEBPACK_IMPORTED_MODULE_25__.OpenBranchOnRemoteCommand),
/* harmony export */   "OpenChangedFilesCommand": () => (/* reexport safe */ _commands_openChangedFiles__WEBPACK_IMPORTED_MODULE_26__.OpenChangedFilesCommand),
/* harmony export */   "OpenCommitOnRemoteCommand": () => (/* reexport safe */ _commands_openCommitOnRemote__WEBPACK_IMPORTED_MODULE_27__.OpenCommitOnRemoteCommand),
/* harmony export */   "OpenComparisonOnRemoteCommand": () => (/* reexport safe */ _commands_openComparisonOnRemote__WEBPACK_IMPORTED_MODULE_28__.OpenComparisonOnRemoteCommand),
/* harmony export */   "OpenFileFromRemoteCommand": () => (/* reexport safe */ _commands_openFileFromRemote__WEBPACK_IMPORTED_MODULE_29__.OpenFileFromRemoteCommand),
/* harmony export */   "OpenFileOnRemoteCommand": () => (/* reexport safe */ _commands_openFileOnRemote__WEBPACK_IMPORTED_MODULE_30__.OpenFileOnRemoteCommand),
/* harmony export */   "OpenFileAtRevisionCommand": () => (/* reexport safe */ _commands_openFileAtRevision__WEBPACK_IMPORTED_MODULE_31__.OpenFileAtRevisionCommand),
/* harmony export */   "OpenFileAtRevisionFromCommand": () => (/* reexport safe */ _commands_openFileAtRevisionFrom__WEBPACK_IMPORTED_MODULE_32__.OpenFileAtRevisionFromCommand),
/* harmony export */   "OpenOnRemoteCommand": () => (/* reexport safe */ _commands_openOnRemote__WEBPACK_IMPORTED_MODULE_33__.OpenOnRemoteCommand),
/* harmony export */   "OpenPullRequestOnRemoteCommand": () => (/* reexport safe */ _commands_openPullRequestOnRemote__WEBPACK_IMPORTED_MODULE_34__.OpenPullRequestOnRemoteCommand),
/* harmony export */   "OpenRepoOnRemoteCommand": () => (/* reexport safe */ _commands_openRepoOnRemote__WEBPACK_IMPORTED_MODULE_35__.OpenRepoOnRemoteCommand),
/* harmony export */   "OpenRevisionFileCommand": () => (/* reexport safe */ _commands_openRevisionFile__WEBPACK_IMPORTED_MODULE_36__.OpenRevisionFileCommand),
/* harmony export */   "OpenWorkingFileCommand": () => (/* reexport safe */ _commands_openWorkingFile__WEBPACK_IMPORTED_MODULE_37__.OpenWorkingFileCommand),
/* harmony export */   "DisableRebaseEditorCommand": () => (/* reexport safe */ _commands_rebaseEditor__WEBPACK_IMPORTED_MODULE_38__.DisableRebaseEditorCommand),
/* harmony export */   "EnableRebaseEditorCommand": () => (/* reexport safe */ _commands_rebaseEditor__WEBPACK_IMPORTED_MODULE_38__.EnableRebaseEditorCommand),
/* harmony export */   "RefreshHoverCommand": () => (/* reexport safe */ _commands_refreshHover__WEBPACK_IMPORTED_MODULE_39__.RefreshHoverCommand),
/* harmony export */   "ConnectRemoteProviderCommand": () => (/* reexport safe */ _commands_remoteProviders__WEBPACK_IMPORTED_MODULE_40__.ConnectRemoteProviderCommand),
/* harmony export */   "DisconnectRemoteProviderCommand": () => (/* reexport safe */ _commands_remoteProviders__WEBPACK_IMPORTED_MODULE_40__.DisconnectRemoteProviderCommand),
/* harmony export */   "FetchRepositoriesCommand": () => (/* reexport safe */ _commands_repositories__WEBPACK_IMPORTED_MODULE_41__.FetchRepositoriesCommand),
/* harmony export */   "PullRepositoriesCommand": () => (/* reexport safe */ _commands_repositories__WEBPACK_IMPORTED_MODULE_41__.PullRepositoriesCommand),
/* harmony export */   "PushRepositoriesCommand": () => (/* reexport safe */ _commands_repositories__WEBPACK_IMPORTED_MODULE_41__.PushRepositoriesCommand),
/* harmony export */   "ResetAvatarCacheCommand": () => (/* reexport safe */ _commands_resetAvatarCache__WEBPACK_IMPORTED_MODULE_42__.ResetAvatarCacheCommand),
/* harmony export */   "ResetSuppressedWarningsCommand": () => (/* reexport safe */ _commands_resetSuppressedWarnings__WEBPACK_IMPORTED_MODULE_43__.ResetSuppressedWarningsCommand),
/* harmony export */   "SetViewsLayoutCommand": () => (/* reexport safe */ _commands_setViewsLayout__WEBPACK_IMPORTED_MODULE_44__.SetViewsLayoutCommand),
/* harmony export */   "SearchCommitsCommand": () => (/* reexport safe */ _commands_searchCommits__WEBPACK_IMPORTED_MODULE_45__.SearchCommitsCommand),
/* harmony export */   "ShowCommitsInViewCommand": () => (/* reexport safe */ _commands_showCommitsInView__WEBPACK_IMPORTED_MODULE_46__.ShowCommitsInViewCommand),
/* harmony export */   "ShowLastQuickPickCommand": () => (/* reexport safe */ _commands_showLastQuickPick__WEBPACK_IMPORTED_MODULE_47__.ShowLastQuickPickCommand),
/* harmony export */   "ShowQuickBranchHistoryCommand": () => (/* reexport safe */ _commands_showQuickBranchHistory__WEBPACK_IMPORTED_MODULE_48__.ShowQuickBranchHistoryCommand),
/* harmony export */   "ShowQuickCommitCommand": () => (/* reexport safe */ _commands_showQuickCommit__WEBPACK_IMPORTED_MODULE_49__.ShowQuickCommitCommand),
/* harmony export */   "ShowQuickCommitFileCommand": () => (/* reexport safe */ _commands_showQuickCommitFile__WEBPACK_IMPORTED_MODULE_50__.ShowQuickCommitFileCommand),
/* harmony export */   "ShowQuickFileHistoryCommand": () => (/* reexport safe */ _commands_showQuickFileHistory__WEBPACK_IMPORTED_MODULE_51__.ShowQuickFileHistoryCommand),
/* harmony export */   "ShowQuickRepoStatusCommand": () => (/* reexport safe */ _commands_showQuickRepoStatus__WEBPACK_IMPORTED_MODULE_52__.ShowQuickRepoStatusCommand),
/* harmony export */   "ShowQuickStashListCommand": () => (/* reexport safe */ _commands_showQuickStashList__WEBPACK_IMPORTED_MODULE_53__.ShowQuickStashListCommand),
/* harmony export */   "ShowViewCommand": () => (/* reexport safe */ _commands_showView__WEBPACK_IMPORTED_MODULE_54__.ShowViewCommand),
/* harmony export */   "StashApplyCommand": () => (/* reexport safe */ _commands_stashApply__WEBPACK_IMPORTED_MODULE_55__.StashApplyCommand),
/* harmony export */   "StashSaveCommand": () => (/* reexport safe */ _commands_stashSave__WEBPACK_IMPORTED_MODULE_56__.StashSaveCommand),
/* harmony export */   "SupportGitLensCommand": () => (/* reexport safe */ _commands_supportGitLens__WEBPACK_IMPORTED_MODULE_57__.SupportGitLensCommand),
/* harmony export */   "SwitchModeCommand": () => (/* reexport safe */ _commands_switchMode__WEBPACK_IMPORTED_MODULE_58__.SwitchModeCommand),
/* harmony export */   "ToggleReviewModeCommand": () => (/* reexport safe */ _commands_switchMode__WEBPACK_IMPORTED_MODULE_58__.ToggleReviewModeCommand),
/* harmony export */   "ToggleZenModeCommand": () => (/* reexport safe */ _commands_switchMode__WEBPACK_IMPORTED_MODULE_58__.ToggleZenModeCommand),
/* harmony export */   "ToggleCodeLensCommand": () => (/* reexport safe */ _commands_toggleCodeLens__WEBPACK_IMPORTED_MODULE_59__.ToggleCodeLensCommand),
/* harmony export */   "ClearFileAnnotationsCommand": () => (/* reexport safe */ _commands_toggleFileAnnotations__WEBPACK_IMPORTED_MODULE_60__.ClearFileAnnotationsCommand),
/* harmony export */   "ToggleFileBlameCommand": () => (/* reexport safe */ _commands_toggleFileAnnotations__WEBPACK_IMPORTED_MODULE_60__.ToggleFileBlameCommand),
/* harmony export */   "ToggleFileChangesCommand": () => (/* reexport safe */ _commands_toggleFileAnnotations__WEBPACK_IMPORTED_MODULE_60__.ToggleFileChangesCommand),
/* harmony export */   "ToggleFileHeatmapCommand": () => (/* reexport safe */ _commands_toggleFileAnnotations__WEBPACK_IMPORTED_MODULE_60__.ToggleFileHeatmapCommand),
/* harmony export */   "ToggleLineBlameCommand": () => (/* reexport safe */ _commands_toggleLineBlame__WEBPACK_IMPORTED_MODULE_61__.ToggleLineBlameCommand)
/* harmony export */ });
/* harmony import */ var _commands_addAuthors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./commands/addAuthors */ "./src/commands/addAuthors.ts");
/* harmony import */ var _commands_browseRepoAtRevision__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./commands/browseRepoAtRevision */ "./src/commands/browseRepoAtRevision.ts");
/* harmony import */ var _commands_closeUnchangedFiles__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./commands/closeUnchangedFiles */ "./src/commands/closeUnchangedFiles.ts");
/* harmony import */ var _commands_closeView__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./commands/closeView */ "./src/commands/closeView.ts");
/* harmony import */ var _commands_common__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./commands/common */ "./src/commands/common.ts");
/* harmony import */ var _commands_compareWith__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./commands/compareWith */ "./src/commands/compareWith.ts");
/* harmony import */ var _commands_copyCurrentBranch__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./commands/copyCurrentBranch */ "./src/commands/copyCurrentBranch.ts");
/* harmony import */ var _commands_copyMessageToClipboard__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./commands/copyMessageToClipboard */ "./src/commands/copyMessageToClipboard.ts");
/* harmony import */ var _commands_copyShaToClipboard__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./commands/copyShaToClipboard */ "./src/commands/copyShaToClipboard.ts");
/* harmony import */ var _commands_createPullRequestOnRemote__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./commands/createPullRequestOnRemote */ "./src/commands/createPullRequestOnRemote.ts");
/* harmony import */ var _commands_openDirectoryCompare__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./commands/openDirectoryCompare */ "./src/commands/openDirectoryCompare.ts");
/* harmony import */ var _commands_diffLineWithPrevious__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./commands/diffLineWithPrevious */ "./src/commands/diffLineWithPrevious.ts");
/* harmony import */ var _commands_diffLineWithWorking__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./commands/diffLineWithWorking */ "./src/commands/diffLineWithWorking.ts");
/* harmony import */ var _commands_diffWith__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./commands/diffWith */ "./src/commands/diffWith.ts");
/* harmony import */ var _commands_diffWithNext__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./commands/diffWithNext */ "./src/commands/diffWithNext.ts");
/* harmony import */ var _commands_diffWithPrevious__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./commands/diffWithPrevious */ "./src/commands/diffWithPrevious.ts");
/* harmony import */ var _commands_diffWithRevision__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./commands/diffWithRevision */ "./src/commands/diffWithRevision.ts");
/* harmony import */ var _commands_diffWithRevisionFrom__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./commands/diffWithRevisionFrom */ "./src/commands/diffWithRevisionFrom.ts");
/* harmony import */ var _commands_diffWithWorking__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./commands/diffWithWorking */ "./src/commands/diffWithWorking.ts");
/* harmony import */ var _commands_externalDiff__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./commands/externalDiff */ "./src/commands/externalDiff.ts");
/* harmony import */ var _commands_gitCommands__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./commands/gitCommands */ "./src/commands/gitCommands.ts");
/* harmony import */ var _commands_inviteToLiveShare__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./commands/inviteToLiveShare */ "./src/commands/inviteToLiveShare.ts");
/* harmony import */ var _commands_logging__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./commands/logging */ "./src/commands/logging.ts");
/* harmony import */ var _commands_openAssociatedPullRequestOnRemote__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./commands/openAssociatedPullRequestOnRemote */ "./src/commands/openAssociatedPullRequestOnRemote.ts");
/* harmony import */ var _commands_openBranchesOnRemote__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./commands/openBranchesOnRemote */ "./src/commands/openBranchesOnRemote.ts");
/* harmony import */ var _commands_openBranchOnRemote__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./commands/openBranchOnRemote */ "./src/commands/openBranchOnRemote.ts");
/* harmony import */ var _commands_openChangedFiles__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./commands/openChangedFiles */ "./src/commands/openChangedFiles.ts");
/* harmony import */ var _commands_openCommitOnRemote__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./commands/openCommitOnRemote */ "./src/commands/openCommitOnRemote.ts");
/* harmony import */ var _commands_openComparisonOnRemote__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./commands/openComparisonOnRemote */ "./src/commands/openComparisonOnRemote.ts");
/* harmony import */ var _commands_openFileFromRemote__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./commands/openFileFromRemote */ "./src/commands/openFileFromRemote.ts");
/* harmony import */ var _commands_openFileOnRemote__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./commands/openFileOnRemote */ "./src/commands/openFileOnRemote.ts");
/* harmony import */ var _commands_openFileAtRevision__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./commands/openFileAtRevision */ "./src/commands/openFileAtRevision.ts");
/* harmony import */ var _commands_openFileAtRevisionFrom__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./commands/openFileAtRevisionFrom */ "./src/commands/openFileAtRevisionFrom.ts");
/* harmony import */ var _commands_openOnRemote__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./commands/openOnRemote */ "./src/commands/openOnRemote.ts");
/* harmony import */ var _commands_openPullRequestOnRemote__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./commands/openPullRequestOnRemote */ "./src/commands/openPullRequestOnRemote.ts");
/* harmony import */ var _commands_openRepoOnRemote__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ./commands/openRepoOnRemote */ "./src/commands/openRepoOnRemote.ts");
/* harmony import */ var _commands_openRevisionFile__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ./commands/openRevisionFile */ "./src/commands/openRevisionFile.ts");
/* harmony import */ var _commands_openWorkingFile__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ./commands/openWorkingFile */ "./src/commands/openWorkingFile.ts");
/* harmony import */ var _commands_rebaseEditor__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ./commands/rebaseEditor */ "./src/commands/rebaseEditor.ts");
/* harmony import */ var _commands_refreshHover__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ./commands/refreshHover */ "./src/commands/refreshHover.ts");
/* harmony import */ var _commands_remoteProviders__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! ./commands/remoteProviders */ "./src/commands/remoteProviders.ts");
/* harmony import */ var _commands_repositories__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! ./commands/repositories */ "./src/commands/repositories.ts");
/* harmony import */ var _commands_resetAvatarCache__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! ./commands/resetAvatarCache */ "./src/commands/resetAvatarCache.ts");
/* harmony import */ var _commands_resetSuppressedWarnings__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! ./commands/resetSuppressedWarnings */ "./src/commands/resetSuppressedWarnings.ts");
/* harmony import */ var _commands_setViewsLayout__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! ./commands/setViewsLayout */ "./src/commands/setViewsLayout.ts");
/* harmony import */ var _commands_searchCommits__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(/*! ./commands/searchCommits */ "./src/commands/searchCommits.ts");
/* harmony import */ var _commands_showCommitsInView__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(/*! ./commands/showCommitsInView */ "./src/commands/showCommitsInView.ts");
/* harmony import */ var _commands_showLastQuickPick__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(/*! ./commands/showLastQuickPick */ "./src/commands/showLastQuickPick.ts");
/* harmony import */ var _commands_showQuickBranchHistory__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(/*! ./commands/showQuickBranchHistory */ "./src/commands/showQuickBranchHistory.ts");
/* harmony import */ var _commands_showQuickCommit__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(/*! ./commands/showQuickCommit */ "./src/commands/showQuickCommit.ts");
/* harmony import */ var _commands_showQuickCommitFile__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(/*! ./commands/showQuickCommitFile */ "./src/commands/showQuickCommitFile.ts");
/* harmony import */ var _commands_showQuickFileHistory__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(/*! ./commands/showQuickFileHistory */ "./src/commands/showQuickFileHistory.ts");
/* harmony import */ var _commands_showQuickRepoStatus__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__(/*! ./commands/showQuickRepoStatus */ "./src/commands/showQuickRepoStatus.ts");
/* harmony import */ var _commands_showQuickStashList__WEBPACK_IMPORTED_MODULE_53__ = __webpack_require__(/*! ./commands/showQuickStashList */ "./src/commands/showQuickStashList.ts");
/* harmony import */ var _commands_showView__WEBPACK_IMPORTED_MODULE_54__ = __webpack_require__(/*! ./commands/showView */ "./src/commands/showView.ts");
/* harmony import */ var _commands_stashApply__WEBPACK_IMPORTED_MODULE_55__ = __webpack_require__(/*! ./commands/stashApply */ "./src/commands/stashApply.ts");
/* harmony import */ var _commands_stashSave__WEBPACK_IMPORTED_MODULE_56__ = __webpack_require__(/*! ./commands/stashSave */ "./src/commands/stashSave.ts");
/* harmony import */ var _commands_supportGitLens__WEBPACK_IMPORTED_MODULE_57__ = __webpack_require__(/*! ./commands/supportGitLens */ "./src/commands/supportGitLens.ts");
/* harmony import */ var _commands_switchMode__WEBPACK_IMPORTED_MODULE_58__ = __webpack_require__(/*! ./commands/switchMode */ "./src/commands/switchMode.ts");
/* harmony import */ var _commands_toggleCodeLens__WEBPACK_IMPORTED_MODULE_59__ = __webpack_require__(/*! ./commands/toggleCodeLens */ "./src/commands/toggleCodeLens.ts");
/* harmony import */ var _commands_toggleFileAnnotations__WEBPACK_IMPORTED_MODULE_60__ = __webpack_require__(/*! ./commands/toggleFileAnnotations */ "./src/commands/toggleFileAnnotations.ts");
/* harmony import */ var _commands_toggleLineBlame__WEBPACK_IMPORTED_MODULE_61__ = __webpack_require__(/*! ./commands/toggleLineBlame */ "./src/commands/toggleLineBlame.ts");

function command(command2) {
  return command2;
}
































































/***/ }),

/***/ "./src/commands/addAuthors.ts":
/*!************************************!*\
  !*** ./src/commands/addAuthors.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AddAuthorsCommand": () => (/* binding */ AddAuthorsCommand)
/* harmony export */ });
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../container */ "./src/container.ts");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./common */ "./src/commands/common.ts");
/* harmony import */ var _gitCommands__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./gitCommands */ "./src/commands/gitCommands.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};



let AddAuthorsCommand = class extends _common__WEBPACK_IMPORTED_MODULE_1__.Command {
  constructor() {
    super(_common__WEBPACK_IMPORTED_MODULE_1__.Commands.AddAuthors);
  }
  async execute(sourceControl) {
    let repo;
    if ((sourceControl == null ? void 0 : sourceControl.rootUri) != null) {
      repo = await _container__WEBPACK_IMPORTED_MODULE_0__.Container.git.getRepository(sourceControl.rootUri);
    }
    return (0,_gitCommands__WEBPACK_IMPORTED_MODULE_2__.executeGitCommand)({
      command: "co-authors",
      state: { repo, contributors: void 0 }
    });
  }
};
AddAuthorsCommand = __decorateClass([
  (0,_common__WEBPACK_IMPORTED_MODULE_1__.command)()
], AddAuthorsCommand);


/***/ }),

/***/ "./src/commands/browseRepoAtRevision.ts":
/*!**********************************************!*\
  !*** ./src/commands/browseRepoAtRevision.ts ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "BrowseRepoAtRevisionCommand": () => (/* binding */ BrowseRepoAtRevisionCommand)
/* harmony export */ });
/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! path */ "./node_modules/path-browserify/index.js");
/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../constants */ "./src/constants.ts");
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../container */ "./src/container.ts");
/* harmony import */ var _git_fsProvider__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../git/fsProvider */ "./src/git/fsProvider.ts");
/* harmony import */ var _git_gitUri__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../git/gitUri */ "./src/git/gitUri.ts");
/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../logger */ "./src/logger.ts");
/* harmony import */ var _messages__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../messages */ "./src/messages.ts");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./common */ "./src/commands/common.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};









let BrowseRepoAtRevisionCommand = class extends _common__WEBPACK_IMPORTED_MODULE_8__.ActiveEditorCommand {
  constructor() {
    super([
      _common__WEBPACK_IMPORTED_MODULE_8__.Commands.BrowseRepoAtRevision,
      _common__WEBPACK_IMPORTED_MODULE_8__.Commands.BrowseRepoAtRevisionInNewWindow,
      _common__WEBPACK_IMPORTED_MODULE_8__.Commands.BrowseRepoBeforeRevision,
      _common__WEBPACK_IMPORTED_MODULE_8__.Commands.BrowseRepoBeforeRevisionInNewWindow
    ]);
  }
  preExecute(context, args) {
    switch (context.command) {
      case _common__WEBPACK_IMPORTED_MODULE_8__.Commands.BrowseRepoAtRevisionInNewWindow:
        args = { ...args, before: false, openInNewWindow: true };
        break;
      case _common__WEBPACK_IMPORTED_MODULE_8__.Commands.BrowseRepoBeforeRevision:
        args = { ...args, before: true, openInNewWindow: false };
        break;
      case _common__WEBPACK_IMPORTED_MODULE_8__.Commands.BrowseRepoBeforeRevisionInNewWindow:
        args = { ...args, before: true, openInNewWindow: true };
        break;
    }
    return this.execute(context.editor, context.uri, args);
  }
  async execute(editor, uri, args) {
    args = { ...args };
    try {
      if (args.uri == null) {
        uri = (0,_common__WEBPACK_IMPORTED_MODULE_8__.getCommandUri)(uri, editor);
        if (uri == null)
          return;
      } else {
        uri = args.uri;
      }
      let gitUri = await _git_gitUri__WEBPACK_IMPORTED_MODULE_5__.GitUri.fromUri(uri);
      if (gitUri.sha == null)
        return;
      const sha = (args == null ? void 0 : args.before) ? await _container__WEBPACK_IMPORTED_MODULE_3__.Container.git.resolveReference(gitUri.repoPath, `${gitUri.sha}^`) : gitUri.sha;
      uri = (0,_git_fsProvider__WEBPACK_IMPORTED_MODULE_4__.toGitLensFSUri)(sha, gitUri.repoPath);
      gitUri = _git_gitUri__WEBPACK_IMPORTED_MODULE_5__.GitUri.fromRevisionUri(uri);
      (0,_common__WEBPACK_IMPORTED_MODULE_8__.openWorkspace)(uri, `${path__WEBPACK_IMPORTED_MODULE_0__.basename(gitUri.repoPath)} @ ${gitUri.shortSha}`, {
        openInNewWindow: args.openInNewWindow
      });
      if (!args.openInNewWindow) {
        void vscode__WEBPACK_IMPORTED_MODULE_1__.commands.executeCommand(_constants__WEBPACK_IMPORTED_MODULE_2__.BuiltInCommands.FocusFilesExplorer);
      }
    } catch (ex) {
      _logger__WEBPACK_IMPORTED_MODULE_6__.Logger.error(ex, "BrowseRepoAtRevisionCommand");
      void _messages__WEBPACK_IMPORTED_MODULE_7__.Messages.showGenericErrorMessage("Unable to open the repository at the specified revision");
    }
  }
};
BrowseRepoAtRevisionCommand = __decorateClass([
  (0,_common__WEBPACK_IMPORTED_MODULE_8__.command)()
], BrowseRepoAtRevisionCommand);


/***/ }),

/***/ "./src/commands/closeUnchangedFiles.ts":
/*!*********************************************!*\
  !*** ./src/commands/closeUnchangedFiles.ts ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CloseUnchangedFilesCommand": () => (/* binding */ CloseUnchangedFilesCommand)
/* harmony export */ });
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _comparers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../comparers */ "./src/comparers.ts");
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../constants */ "./src/constants.ts");
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../container */ "./src/container.ts");
/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../logger */ "./src/logger.ts");
/* harmony import */ var _messages__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../messages */ "./src/messages.ts");
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../system */ "./src/system.ts");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./common */ "./src/commands/common.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};








let CloseUnchangedFilesCommand = class extends _common__WEBPACK_IMPORTED_MODULE_7__.Command {
  constructor() {
    super(_common__WEBPACK_IMPORTED_MODULE_7__.Commands.CloseUnchangedFiles);
    __publicField(this, "_onEditorChangedFn");
  }
  async execute(args) {
    args = { ...args };
    try {
      if (args.uris == null) {
        const repoPath = await (0,_common__WEBPACK_IMPORTED_MODULE_7__.getRepoPathOrPrompt)("Close All Unchanged Files");
        if (!repoPath)
          return;
        const status = await _container__WEBPACK_IMPORTED_MODULE_3__.Container.git.getStatusForRepo(repoPath);
        if (status == null) {
          void vscode__WEBPACK_IMPORTED_MODULE_0__.window.showWarningMessage("Unable to close unchanged files");
          return;
        }
        args.uris = status.files.map((f) => f.uri);
      }
      if (args.uris.length === 0) {
        void vscode__WEBPACK_IMPORTED_MODULE_0__.commands.executeCommand(_constants__WEBPACK_IMPORTED_MODULE_2__.BuiltInCommands.CloseAllEditors);
        return;
      }
      const disposable = vscode__WEBPACK_IMPORTED_MODULE_0__.window.onDidChangeActiveTextEditor(_system__WEBPACK_IMPORTED_MODULE_6__.Functions.debounce((e) => {
        var _a;
        return (_a = this._onEditorChangedFn) == null ? void 0 : _a.call(this, e);
      }, 50));
      let editor = vscode__WEBPACK_IMPORTED_MODULE_0__.window.activeTextEditor;
      let count = 0;
      let loopCount = 0;
      const editors = [];
      while (true) {
        if (editor != null) {
          let found = false;
          for (const e of editors) {
            if (_comparers__WEBPACK_IMPORTED_MODULE_1__.TextEditorComparer.equals(e, editor, { usePosition: true })) {
              found = true;
              break;
            }
          }
          if (found)
            break;
          count++;
          editors.push(editor);
        } else if (count !== 0) {
          count++;
        }
        editor = await this.nextEditor();
        loopCount++;
        if (loopCount >= 4 && editors.length === 0)
          break;
      }
      if (editors.length) {
        editor = vscode__WEBPACK_IMPORTED_MODULE_0__.window.activeTextEditor;
        for (let i = 0; i <= count; i++) {
          if (editor == null || editor.document.isDirty || args.uris.some((uri) => _comparers__WEBPACK_IMPORTED_MODULE_1__.UriComparer.equals(uri, editor == null ? void 0 : editor.document.uri))) {
            editor = await this.nextEditor();
          } else {
            editor = await this.closeEditor();
          }
        }
      }
      disposable.dispose();
    } catch (ex) {
      _logger__WEBPACK_IMPORTED_MODULE_4__.Logger.error(ex, "CloseUnchangedFilesCommand");
      void _messages__WEBPACK_IMPORTED_MODULE_5__.Messages.showGenericErrorMessage("Unable to close all unchanged files");
    }
  }
  async closeEditor(timeout = 500) {
    const editor = vscode__WEBPACK_IMPORTED_MODULE_0__.window.activeTextEditor;
    void await vscode__WEBPACK_IMPORTED_MODULE_0__.commands.executeCommand(_constants__WEBPACK_IMPORTED_MODULE_2__.BuiltInCommands.CloseActiveEditor);
    if (editor !== vscode__WEBPACK_IMPORTED_MODULE_0__.window.activeTextEditor) {
      return vscode__WEBPACK_IMPORTED_MODULE_0__.window.activeTextEditor;
    }
    return this.waitForEditorChange(timeout);
  }
  async nextEditor(timeout = 500) {
    const editor = vscode__WEBPACK_IMPORTED_MODULE_0__.window.activeTextEditor;
    void await vscode__WEBPACK_IMPORTED_MODULE_0__.commands.executeCommand(_constants__WEBPACK_IMPORTED_MODULE_2__.BuiltInCommands.NextEditor);
    if (editor !== vscode__WEBPACK_IMPORTED_MODULE_0__.window.activeTextEditor) {
      return vscode__WEBPACK_IMPORTED_MODULE_0__.window.activeTextEditor;
    }
    return this.waitForEditorChange(timeout);
  }
  waitForEditorChange(timeout = 500) {
    return new Promise((resolve) => {
      let timer;
      this._onEditorChangedFn = (editor) => {
        if (timer != null) {
          clearTimeout(timer);
          timer = void 0;
          resolve(editor);
        }
      };
      timer = setTimeout(() => {
        timer = void 0;
        resolve(vscode__WEBPACK_IMPORTED_MODULE_0__.window.activeTextEditor);
      }, timeout);
    });
  }
};
CloseUnchangedFilesCommand = __decorateClass([
  (0,_common__WEBPACK_IMPORTED_MODULE_7__.command)()
], CloseUnchangedFilesCommand);


/***/ }),

/***/ "./src/commands/closeView.ts":
/*!***********************************!*\
  !*** ./src/commands/closeView.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CloseViewCommand": () => (/* binding */ CloseViewCommand)
/* harmony export */ });
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../constants */ "./src/constants.ts");
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../container */ "./src/container.ts");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./common */ "./src/commands/common.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};



let CloseViewCommand = class extends _common__WEBPACK_IMPORTED_MODULE_2__.Command {
  constructor() {
    super([_common__WEBPACK_IMPORTED_MODULE_2__.Commands.CloseWelcomeView, _common__WEBPACK_IMPORTED_MODULE_2__.Commands.CloseUpdatesView]);
  }
  preExecute(context) {
    return this.execute(context.command);
  }
  async execute(command2) {
    switch (command2) {
      case _common__WEBPACK_IMPORTED_MODULE_2__.Commands.CloseWelcomeView:
        await _container__WEBPACK_IMPORTED_MODULE_1__.Container.context.globalState.update(_constants__WEBPACK_IMPORTED_MODULE_0__.SyncedState.WelcomeViewVisible, false);
        await (0,_constants__WEBPACK_IMPORTED_MODULE_0__.setContext)(_constants__WEBPACK_IMPORTED_MODULE_0__.ContextKeys.ViewsWelcomeVisible, false);
        break;
      case _common__WEBPACK_IMPORTED_MODULE_2__.Commands.CloseUpdatesView:
        await _container__WEBPACK_IMPORTED_MODULE_1__.Container.context.globalState.update(_constants__WEBPACK_IMPORTED_MODULE_0__.SyncedState.UpdatesViewVisible, false);
        await (0,_constants__WEBPACK_IMPORTED_MODULE_0__.setContext)(_constants__WEBPACK_IMPORTED_MODULE_0__.ContextKeys.ViewsUpdatesVisible, false);
        break;
    }
  }
};
CloseViewCommand = __decorateClass([
  (0,_common__WEBPACK_IMPORTED_MODULE_2__.command)()
], CloseViewCommand);


/***/ }),

/***/ "./src/commands/common.ts":
/*!********************************!*\
  !*** ./src/commands/common.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Commands": () => (/* binding */ Commands),
/* harmony export */   "executeActionCommand": () => (/* binding */ executeActionCommand),
/* harmony export */   "getMarkdownActionCommand": () => (/* binding */ getMarkdownActionCommand),
/* harmony export */   "executeCommand": () => (/* binding */ executeCommand),
/* harmony export */   "executeEditorCommand": () => (/* binding */ executeEditorCommand),
/* harmony export */   "command": () => (/* binding */ command),
/* harmony export */   "registerCommands": () => (/* binding */ registerCommands),
/* harmony export */   "getCommandUri": () => (/* binding */ getCommandUri),
/* harmony export */   "getRepoPathOrActiveOrPrompt": () => (/* binding */ getRepoPathOrActiveOrPrompt),
/* harmony export */   "getRepoPathOrPrompt": () => (/* binding */ getRepoPathOrPrompt),
/* harmony export */   "isCommandContextGitTimelineItem": () => (/* binding */ isCommandContextGitTimelineItem),
/* harmony export */   "isCommandContextViewNodeHasBranch": () => (/* binding */ isCommandContextViewNodeHasBranch),
/* harmony export */   "isCommandContextViewNodeHasCommit": () => (/* binding */ isCommandContextViewNodeHasCommit),
/* harmony export */   "isCommandContextViewNodeHasContributor": () => (/* binding */ isCommandContextViewNodeHasContributor),
/* harmony export */   "isCommandContextViewNodeHasFile": () => (/* binding */ isCommandContextViewNodeHasFile),
/* harmony export */   "isCommandContextViewNodeHasFileCommit": () => (/* binding */ isCommandContextViewNodeHasFileCommit),
/* harmony export */   "isCommandContextViewNodeHasFileRefs": () => (/* binding */ isCommandContextViewNodeHasFileRefs),
/* harmony export */   "isCommandContextViewNodeHasRef": () => (/* binding */ isCommandContextViewNodeHasRef),
/* harmony export */   "isCommandContextViewNodeHasRemote": () => (/* binding */ isCommandContextViewNodeHasRemote),
/* harmony export */   "isCommandContextViewNodeHasRepository": () => (/* binding */ isCommandContextViewNodeHasRepository),
/* harmony export */   "isCommandContextViewNodeHasRepoPath": () => (/* binding */ isCommandContextViewNodeHasRepoPath),
/* harmony export */   "isCommandContextViewNodeHasTag": () => (/* binding */ isCommandContextViewNodeHasTag),
/* harmony export */   "Command": () => (/* binding */ Command),
/* harmony export */   "ActiveEditorCommand": () => (/* binding */ ActiveEditorCommand),
/* harmony export */   "getLastCommand": () => (/* binding */ getLastCommand),
/* harmony export */   "ActiveEditorCachedCommand": () => (/* binding */ ActiveEditorCachedCommand),
/* harmony export */   "EditorCommand": () => (/* binding */ EditorCommand),
/* harmony export */   "findEditor": () => (/* binding */ findEditor),
/* harmony export */   "findOrOpenEditor": () => (/* binding */ findOrOpenEditor),
/* harmony export */   "findOrOpenEditors": () => (/* binding */ findOrOpenEditors),
/* harmony export */   "openEditor": () => (/* binding */ openEditor),
/* harmony export */   "openWorkspace": () => (/* binding */ openWorkspace)
/* harmony export */ });
/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! path */ "./node_modules/path-browserify/index.js");
/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../constants */ "./src/constants.ts");
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../container */ "./src/container.ts");
/* harmony import */ var _git_git__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../git/git */ "./src/git/git.ts");
/* harmony import */ var _git_gitUri__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../git/gitUri */ "./src/git/gitUri.ts");
/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../logger */ "./src/logger.ts");
/* harmony import */ var _quickpicks__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../quickpicks */ "./src/quickpicks.ts");
/* harmony import */ var _views_nodes__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../views/nodes */ "./src/views/nodes.ts");

var __defProp = Object.defineProperty;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};









var Commands;
(function(Commands2) {
  Commands2["ActionPrefix"] = "gitlens.action.";
  Commands2["AddAuthors"] = "gitlens.addAuthors";
  Commands2["BrowseRepoAtRevision"] = "gitlens.browseRepoAtRevision";
  Commands2["BrowseRepoAtRevisionInNewWindow"] = "gitlens.browseRepoAtRevisionInNewWindow";
  Commands2["BrowseRepoBeforeRevision"] = "gitlens.browseRepoBeforeRevision";
  Commands2["BrowseRepoBeforeRevisionInNewWindow"] = "gitlens.browseRepoBeforeRevisionInNewWindow";
  Commands2["ClearFileAnnotations"] = "gitlens.clearFileAnnotations";
  Commands2["CloseUnchangedFiles"] = "gitlens.closeUnchangedFiles";
  Commands2["CloseUpdatesView"] = "gitlens.closeUpdatesView";
  Commands2["CloseWelcomeView"] = "gitlens.closeWelcomeView";
  Commands2["CompareWith"] = "gitlens.compareWith";
  Commands2["CompareHeadWith"] = "gitlens.compareHeadWith";
  Commands2["CompareWorkingWith"] = "gitlens.compareWorkingWith";
  Commands2["ComputingFileAnnotations"] = "gitlens.computingFileAnnotations";
  Commands2["ConnectRemoteProvider"] = "gitlens.connectRemoteProvider";
  Commands2["CopyCurrentBranch"] = "gitlens.copyCurrentBranch";
  Commands2["CopyMessageToClipboard"] = "gitlens.copyMessageToClipboard";
  Commands2["CopyRemoteBranchesUrl"] = "gitlens.copyRemoteBranchesUrl";
  Commands2["CopyRemoteBranchUrl"] = "gitlens.copyRemoteBranchUrl";
  Commands2["CopyRemoteCommitUrl"] = "gitlens.copyRemoteCommitUrl";
  Commands2["CopyRemoteComparisonUrl"] = "gitlens.copyRemoteComparisonUrl";
  Commands2["CopyRemoteFileUrl"] = "gitlens.copyRemoteFileUrlToClipboard";
  Commands2["CopyRemoteFileUrlWithoutRange"] = "gitlens.copyRemoteFileUrlWithoutRange";
  Commands2["CopyRemoteFileUrlFrom"] = "gitlens.copyRemoteFileUrlFrom";
  Commands2["CopyRemotePullRequestUrl"] = "gitlens.copyRemotePullRequestUrl";
  Commands2["CopyRemoteRepositoryUrl"] = "gitlens.copyRemoteRepositoryUrl";
  Commands2["CopyShaToClipboard"] = "gitlens.copyShaToClipboard";
  Commands2["CreatePullRequestOnRemote"] = "gitlens.createPullRequestOnRemote";
  Commands2["DiffDirectory"] = "gitlens.diffDirectory";
  Commands2["DiffDirectoryWithHead"] = "gitlens.diffDirectoryWithHead";
  Commands2["DiffWith"] = "gitlens.diffWith";
  Commands2["DiffWithNext"] = "gitlens.diffWithNext";
  Commands2["DiffWithNextInDiffLeft"] = "gitlens.diffWithNextInDiffLeft";
  Commands2["DiffWithNextInDiffRight"] = "gitlens.diffWithNextInDiffRight";
  Commands2["DiffWithPrevious"] = "gitlens.diffWithPrevious";
  Commands2["DiffWithPreviousInDiffLeft"] = "gitlens.diffWithPreviousInDiffLeft";
  Commands2["DiffWithPreviousInDiffRight"] = "gitlens.diffWithPreviousInDiffRight";
  Commands2["DiffLineWithPrevious"] = "gitlens.diffLineWithPrevious";
  Commands2["DiffWithRevision"] = "gitlens.diffWithRevision";
  Commands2["DiffWithRevisionFrom"] = "gitlens.diffWithRevisionFrom";
  Commands2["DiffWithWorking"] = "gitlens.diffWithWorking";
  Commands2["DiffWithWorkingInDiffLeft"] = "gitlens.diffWithWorkingInDiffLeft";
  Commands2["DiffWithWorkingInDiffRight"] = "gitlens.diffWithWorkingInDiffRight";
  Commands2["DiffLineWithWorking"] = "gitlens.diffLineWithWorking";
  Commands2["DisconnectRemoteProvider"] = "gitlens.disconnectRemoteProvider";
  Commands2["DisableDebugLogging"] = "gitlens.disableDebugLogging";
  Commands2["EnableDebugLogging"] = "gitlens.enableDebugLogging";
  Commands2["DisableRebaseEditor"] = "gitlens.disableRebaseEditor";
  Commands2["EnableRebaseEditor"] = "gitlens.enableRebaseEditor";
  Commands2["ExternalDiff"] = "gitlens.externalDiff";
  Commands2["ExternalDiffAll"] = "gitlens.externalDiffAll";
  Commands2["FetchRepositories"] = "gitlens.fetchRepositories";
  Commands2["InviteToLiveShare"] = "gitlens.inviteToLiveShare";
  Commands2["OpenBlamePriorToChange"] = "gitlens.openBlamePriorToChange";
  Commands2["OpenBranchesOnRemote"] = "gitlens.openBranchesOnRemote";
  Commands2["OpenBranchOnRemote"] = "gitlens.openBranchOnRemote";
  Commands2["OpenChangedFiles"] = "gitlens.openChangedFiles";
  Commands2["OpenCommitOnRemote"] = "gitlens.openCommitOnRemote";
  Commands2["OpenComparisonOnRemote"] = "gitlens.openComparisonOnRemote";
  Commands2["OpenFileHistory"] = "gitlens.openFileHistory";
  Commands2["OpenFileFromRemote"] = "gitlens.openFileFromRemote";
  Commands2["OpenFileOnRemote"] = "gitlens.openFileOnRemote";
  Commands2["OpenFileOnRemoteFrom"] = "gitlens.openFileOnRemoteFrom";
  Commands2["OpenFileAtRevision"] = "gitlens.openFileRevision";
  Commands2["OpenFileAtRevisionFrom"] = "gitlens.openFileRevisionFrom";
  Commands2["OpenFolderHistory"] = "gitlens.openFolderHistory";
  Commands2["OpenOnRemote"] = "gitlens.openOnRemote";
  Commands2["OpenPullRequestOnRemote"] = "gitlens.openPullRequestOnRemote";
  Commands2["OpenAssociatedPullRequestOnRemote"] = "gitlens.openAssociatedPullRequestOnRemote";
  Commands2["OpenRepoOnRemote"] = "gitlens.openRepoOnRemote";
  Commands2["OpenRevisionFile"] = "gitlens.openRevisionFile";
  Commands2["OpenRevisionFileInDiffLeft"] = "gitlens.openRevisionFileInDiffLeft";
  Commands2["OpenRevisionFileInDiffRight"] = "gitlens.openRevisionFileInDiffRight";
  Commands2["OpenWorkingFile"] = "gitlens.openWorkingFile";
  Commands2["OpenWorkingFileInDiffLeft"] = "gitlens.openWorkingFileInDiffLeft";
  Commands2["OpenWorkingFileInDiffRight"] = "gitlens.openWorkingFileInDiffRight";
  Commands2["PullRepositories"] = "gitlens.pullRepositories";
  Commands2["PushRepositories"] = "gitlens.pushRepositories";
  Commands2["GitCommands"] = "gitlens.gitCommands";
  Commands2["GitCommandsBranch"] = "gitlens.gitCommands.branch";
  Commands2["GitCommandsCherryPick"] = "gitlens.gitCommands.cherryPick";
  Commands2["GitCommandsMerge"] = "gitlens.gitCommands.merge";
  Commands2["GitCommandsRebase"] = "gitlens.gitCommands.rebase";
  Commands2["GitCommandsReset"] = "gitlens.gitCommands.reset";
  Commands2["GitCommandsRevert"] = "gitlens.gitCommands.revert";
  Commands2["GitCommandsSwitch"] = "gitlens.gitCommands.switch";
  Commands2["GitCommandsTag"] = "gitlens.gitCommands.tag";
  Commands2["QuickOpenFileHistory"] = "gitlens.quickOpenFileHistory";
  Commands2["RefreshHover"] = "gitlens.refreshHover";
  Commands2["ResetAvatarCache"] = "gitlens.resetAvatarCache";
  Commands2["ResetSuppressedWarnings"] = "gitlens.resetSuppressedWarnings";
  Commands2["RevealCommitInView"] = "gitlens.revealCommitInView";
  Commands2["SearchCommits"] = "gitlens.showCommitSearch";
  Commands2["SearchCommitsInView"] = "gitlens.views.searchAndCompare.searchCommits";
  Commands2["SetViewsLayout"] = "gitlens.setViewsLayout";
  Commands2["ShowBranchesView"] = "gitlens.showBranchesView";
  Commands2["ShowCommitInView"] = "gitlens.showCommitInView";
  Commands2["ShowCommitsInView"] = "gitlens.showCommitsInView";
  Commands2["ShowCommitsView"] = "gitlens.showCommitsView";
  Commands2["ShowContributorsView"] = "gitlens.showContributorsView";
  Commands2["ShowFileHistoryView"] = "gitlens.showFileHistoryView";
  Commands2["ShowLastQuickPick"] = "gitlens.showLastQuickPick";
  Commands2["ShowLineHistoryView"] = "gitlens.showLineHistoryView";
  Commands2["ShowQuickBranchHistory"] = "gitlens.showQuickBranchHistory";
  Commands2["ShowQuickCommit"] = "gitlens.showQuickCommitDetails";
  Commands2["ShowQuickCommitFile"] = "gitlens.showQuickCommitFileDetails";
  Commands2["ShowQuickCurrentBranchHistory"] = "gitlens.showQuickRepoHistory";
  Commands2["ShowQuickFileHistory"] = "gitlens.showQuickFileHistory";
  Commands2["ShowQuickRepoStatus"] = "gitlens.showQuickRepoStatus";
  Commands2["ShowQuickCommitRevision"] = "gitlens.showQuickRevisionDetails";
  Commands2["ShowQuickCommitRevisionInDiffLeft"] = "gitlens.showQuickRevisionDetailsInDiffLeft";
  Commands2["ShowQuickCommitRevisionInDiffRight"] = "gitlens.showQuickRevisionDetailsInDiffRight";
  Commands2["ShowQuickStashList"] = "gitlens.showQuickStashList";
  Commands2["ShowRemotesView"] = "gitlens.showRemotesView";
  Commands2["ShowRepositoriesView"] = "gitlens.showRepositoriesView";
  Commands2["ShowSearchAndCompareView"] = "gitlens.showSearchAndCompareView";
  Commands2["ShowSettingsPage"] = "gitlens.showSettingsPage";
  Commands2["ShowSettingsPageAndJumpToBranchesView"] = "gitlens.showSettingsPage#branches-view";
  Commands2["ShowSettingsPageAndJumpToCommitsView"] = "gitlens.showSettingsPage#commits-view";
  Commands2["ShowSettingsPageAndJumpToContributorsView"] = "gitlens.showSettingsPage#contributors-view";
  Commands2["ShowSettingsPageAndJumpToFileHistoryView"] = "gitlens.showSettingsPage#file-history-view";
  Commands2["ShowSettingsPageAndJumpToLineHistoryView"] = "gitlens.showSettingsPage#line-history-view";
  Commands2["ShowSettingsPageAndJumpToRemotesView"] = "gitlens.showSettingsPage#remotes-view";
  Commands2["ShowSettingsPageAndJumpToRepositoriesView"] = "gitlens.showSettingsPage#repositories-view";
  Commands2["ShowSettingsPageAndJumpToSearchAndCompareView"] = "gitlens.showSettingsPage#search-compare-view";
  Commands2["ShowSettingsPageAndJumpToStashesView"] = "gitlens.showSettingsPage#stashes-view";
  Commands2["ShowSettingsPageAndJumpToTagsView"] = "gitlens.showSettingsPage#tags-view";
  Commands2["ShowSettingsPageAndJumpToViews"] = "gitlens.showSettingsPage#views";
  Commands2["ShowStashesView"] = "gitlens.showStashesView";
  Commands2["ShowTagsView"] = "gitlens.showTagsView";
  Commands2["ShowWelcomePage"] = "gitlens.showWelcomePage";
  Commands2["ShowWelcomeView"] = "gitlens.showWelcomeView";
  Commands2["StashApply"] = "gitlens.stashApply";
  Commands2["StashSave"] = "gitlens.stashSave";
  Commands2["StashSaveFiles"] = "gitlens.stashSaveFiles";
  Commands2["SupportGitLens"] = "gitlens.supportGitLens";
  Commands2["SwitchMode"] = "gitlens.switchMode";
  Commands2["ToggleCodeLens"] = "gitlens.toggleCodeLens";
  Commands2["ToggleFileBlame"] = "gitlens.toggleFileBlame";
  Commands2["ToggleFileBlameInDiffLeft"] = "gitlens.toggleFileBlameInDiffLeft";
  Commands2["ToggleFileBlameInDiffRight"] = "gitlens.toggleFileBlameInDiffRight";
  Commands2["ToggleFileChanges"] = "gitlens.toggleFileChanges";
  Commands2["ToggleFileChangesOnly"] = "gitlens.toggleFileChangesOnly";
  Commands2["ToggleFileHeatmap"] = "gitlens.toggleFileHeatmap";
  Commands2["ToggleFileHeatmapInDiffLeft"] = "gitlens.toggleFileHeatmapInDiffLeft";
  Commands2["ToggleFileHeatmapInDiffRight"] = "gitlens.toggleFileHeatmapInDiffRight";
  Commands2["ToggleLineBlame"] = "gitlens.toggleLineBlame";
  Commands2["ToggleReviewMode"] = "gitlens.toggleReviewMode";
  Commands2["ToggleZenMode"] = "gitlens.toggleZenMode";
  Commands2["ViewsOpenDirectoryDiff"] = "gitlens.views.openDirectoryDiff";
  Commands2["ViewsOpenDirectoryDiffWithWorking"] = "gitlens.views.openDirectoryDiffWithWorking";
  Commands2["Deprecated_DiffHeadWith"] = "gitlens.diffHeadWith";
  Commands2["Deprecated_DiffWorkingWith"] = "gitlens.diffWorkingWith";
  Commands2["Deprecated_OpenBranchesInRemote"] = "gitlens.openBranchesInRemote";
  Commands2["Deprecated_OpenBranchInRemote"] = "gitlens.openBranchInRemote";
  Commands2["Deprecated_OpenCommitInRemote"] = "gitlens.openCommitInRemote";
  Commands2["Deprecated_OpenFileInRemote"] = "gitlens.openFileInRemote";
  Commands2["Deprecated_OpenInRemote"] = "gitlens.openInRemote";
  Commands2["Deprecated_OpenRepoInRemote"] = "gitlens.openRepoInRemote";
  Commands2["Deprecated_ShowFileHistoryInView"] = "gitlens.showFileHistoryInView";
})(Commands || (Commands = {}));
function executeActionCommand(action, args) {
  return vscode__WEBPACK_IMPORTED_MODULE_1__.commands.executeCommand(`${Commands.ActionPrefix}${action}`, { ...args, type: action });
}
function getMarkdownActionCommand(action, args) {
  return Command.getMarkdownCommandArgsCore(`${Commands.ActionPrefix}${action}`, {
    ...args,
    type: action
  });
}
function executeCommand(command2, args) {
  return vscode__WEBPACK_IMPORTED_MODULE_1__.commands.executeCommand(command2, args);
}
function executeEditorCommand(command2, uri, args) {
  return vscode__WEBPACK_IMPORTED_MODULE_1__.commands.executeCommand(command2, uri, args);
}
const registrableCommands = [];
function command() {
  return (target) => {
    registrableCommands.push(target);
  };
}
function registerCommands(context) {
  for (const c of registrableCommands) {
    context.subscriptions.push(new c());
  }
}
function getCommandUri(uri, editor) {
  var _a, _b;
  return (_b = (_a = editor == null ? void 0 : editor.document) == null ? void 0 : _a.uri) != null ? _b : uri;
}
async function getRepoPathOrActiveOrPrompt(uri, editor, title) {
  const repoPath = await _container__WEBPACK_IMPORTED_MODULE_3__.Container.git.getRepoPathOrActive(uri, editor);
  if (repoPath)
    return repoPath;
  const pick = await _quickpicks__WEBPACK_IMPORTED_MODULE_7__.RepositoryPicker.show(title);
  if (pick instanceof _quickpicks__WEBPACK_IMPORTED_MODULE_7__.CommandQuickPickItem) {
    await pick.execute();
    return void 0;
  }
  return pick == null ? void 0 : pick.repoPath;
}
async function getRepoPathOrPrompt(title, uri) {
  const repoPath = await _container__WEBPACK_IMPORTED_MODULE_3__.Container.git.getRepoPath(uri);
  if (repoPath)
    return repoPath;
  const pick = await _quickpicks__WEBPACK_IMPORTED_MODULE_7__.RepositoryPicker.show(title);
  if (pick instanceof _quickpicks__WEBPACK_IMPORTED_MODULE_7__.CommandQuickPickItem) {
    void await pick.execute();
    return void 0;
  }
  return pick == null ? void 0 : pick.repoPath;
}
function isCommandContextGitTimelineItem(context) {
  return context.type === "timeline-item:git";
}
function isCommandContextViewNodeHasBranch(context) {
  if (context.type !== "viewItem")
    return false;
  return _git_git__WEBPACK_IMPORTED_MODULE_4__.GitBranch.is(context.node.branch);
}
function isCommandContextViewNodeHasCommit(context) {
  if (context.type !== "viewItem")
    return false;
  return _git_git__WEBPACK_IMPORTED_MODULE_4__.GitCommit.is(context.node.commit);
}
function isCommandContextViewNodeHasContributor(context) {
  if (context.type !== "viewItem")
    return false;
  return _git_git__WEBPACK_IMPORTED_MODULE_4__.GitContributor.is(context.node.contributor);
}
function isCommandContextViewNodeHasFile(context) {
  if (context.type !== "viewItem")
    return false;
  const node = context.node;
  return node.file != null && (node.file.repoPath != null || node.repoPath != null);
}
function isCommandContextViewNodeHasFileCommit(context) {
  if (context.type !== "viewItem")
    return false;
  const node = context.node;
  return node.file != null && _git_git__WEBPACK_IMPORTED_MODULE_4__.GitCommit.is(node.commit) && (node.file.repoPath != null || node.repoPath != null);
}
function isCommandContextViewNodeHasFileRefs(context) {
  if (context.type !== "viewItem")
    return false;
  const node = context.node;
  return node.file != null && node.ref1 != null && node.ref2 != null && (node.file.repoPath != null || node.repoPath != null);
}
function isCommandContextViewNodeHasRef(context) {
  return context.type === "viewItem" && context.node instanceof _views_nodes__WEBPACK_IMPORTED_MODULE_8__.ViewRefNode;
}
function isCommandContextViewNodeHasRemote(context) {
  if (context.type !== "viewItem")
    return false;
  return _git_git__WEBPACK_IMPORTED_MODULE_4__.GitRemote.is(context.node.remote);
}
function isCommandContextViewNodeHasRepository(context) {
  if (context.type !== "viewItem")
    return false;
  return context.node.repo instanceof _git_git__WEBPACK_IMPORTED_MODULE_4__.Repository;
}
function isCommandContextViewNodeHasRepoPath(context) {
  if (context.type !== "viewItem")
    return false;
  return typeof context.node.repoPath === "string";
}
function isCommandContextViewNodeHasTag(context) {
  if (context.type !== "viewItem")
    return false;
  return _git_git__WEBPACK_IMPORTED_MODULE_4__.GitTag.is(context.node.tag);
}
function isScmResourceGroup(group) {
  if (group == null)
    return false;
  return group.id != null && group.label != null && group.resourceStates != null && Array.isArray(group.resourceStates);
}
function isScmResourceState(resource) {
  if (resource == null)
    return false;
  return resource.resourceUri != null;
}
function isTimelineItem(item) {
  if (item == null)
    return false;
  return item.timestamp != null && item.label != null;
}
function isGitTimelineItem(item) {
  if (item == null)
    return false;
  return isTimelineItem(item) && item.ref != null && item.previousRef != null && item.message != null;
}
class Command {
  constructor(command2) {
    __publicField(this, "contextParsingOptions", { expectsEditor: false });
    __publicField(this, "_disposable");
    if (typeof command2 === "string") {
      this._disposable = vscode__WEBPACK_IMPORTED_MODULE_1__.commands.registerCommand(command2, (...args) => this._execute(command2, ...args), this);
      return;
    }
    const subscriptions = command2.map((cmd) => vscode__WEBPACK_IMPORTED_MODULE_1__.commands.registerCommand(cmd, (...args) => this._execute(cmd, ...args), this));
    this._disposable = vscode__WEBPACK_IMPORTED_MODULE_1__.Disposable.from(...subscriptions);
  }
  static getMarkdownCommandArgsCore(command2, args) {
    return `command:${command2}?${encodeURIComponent(JSON.stringify(args))}`;
  }
  dispose() {
    this._disposable.dispose();
  }
  preExecute(context, ...args) {
    return this.execute(...args);
  }
  _execute(command2, ...args) {
    const [context, rest] = Command.parseContext(command2, { ...this.contextParsingOptions }, ...args);
    return this.preExecute(context, ...rest);
  }
  static parseContext(command2, options, ...args) {
    var _a, _b;
    let editor = void 0;
    let firstArg = args[0];
    if (options.expectsEditor) {
      if (firstArg == null || firstArg.id != null && ((_a = firstArg.document) == null ? void 0 : _a.uri) != null) {
        editor = firstArg;
        args = args.slice(1);
        firstArg = args[0];
      }
      if (args.length > 0 && (firstArg == null || firstArg instanceof vscode__WEBPACK_IMPORTED_MODULE_1__.Uri)) {
        const [uri, ...rest] = args;
        if (uri != null) {
          if (editor == null && (uri.toString() === ((_b = vscode__WEBPACK_IMPORTED_MODULE_1__.window.activeTextEditor) == null ? void 0 : _b.document.uri.toString()) || command2.endsWith("InDiffLeft"))) {
            editor = vscode__WEBPACK_IMPORTED_MODULE_1__.window.activeTextEditor;
          }
          const uris = rest[0];
          if (uris != null && Array.isArray(uris) && uris.length !== 0 && uris[0] instanceof vscode__WEBPACK_IMPORTED_MODULE_1__.Uri) {
            return [
              { command: command2, type: "uris", editor, uri, uris },
              rest.slice(1)
            ];
          }
          return [{ command: command2, type: "uri", editor, uri }, rest];
        }
        args = args.slice(1);
      } else if (editor == null) {
        editor = vscode__WEBPACK_IMPORTED_MODULE_1__.window.activeTextEditor;
      }
    }
    if (firstArg instanceof _views_nodes__WEBPACK_IMPORTED_MODULE_8__.ViewNode) {
      const [node, ...rest] = args;
      return [{ command: command2, type: "viewItem", node, uri: node.uri }, rest];
    }
    if (isScmResourceState(firstArg)) {
      const states = [];
      let count = 0;
      for (const arg of args) {
        if (!isScmResourceState(arg))
          break;
        count++;
        states.push(arg);
      }
      return [
        { command: command2, type: "scm-states", scmResourceStates: states, uri: states[0].resourceUri },
        args.slice(count)
      ];
    }
    if (isScmResourceGroup(firstArg)) {
      const groups = [];
      let count = 0;
      for (const arg of args) {
        if (!isScmResourceGroup(arg))
          break;
        count++;
        groups.push(arg);
      }
      return [{ command: command2, type: "scm-groups", scmResourceGroups: groups }, args.slice(count)];
    }
    if (isGitTimelineItem(firstArg)) {
      const [item, uri, ...rest] = args;
      return [{ command: command2, type: "timeline-item:git", item, uri }, rest];
    }
    return [{ command: command2, type: "unknown", editor, uri: editor == null ? void 0 : editor.document.uri }, args];
  }
}
class ActiveEditorCommand extends Command {
  constructor(command2) {
    super(command2);
    __publicField(this, "contextParsingOptions", { expectsEditor: true });
  }
  preExecute(context, ...args) {
    return this.execute(context.editor, context.uri, ...args);
  }
  _execute(command2, ...args) {
    return super._execute(command2, void 0, ...args);
  }
}
let lastCommand = void 0;
function getLastCommand() {
  return lastCommand;
}
class ActiveEditorCachedCommand extends ActiveEditorCommand {
  constructor(command2) {
    super(command2);
  }
  _execute(command2, ...args) {
    lastCommand = {
      command: command2,
      args
    };
    return super._execute(command2, ...args);
  }
}
class EditorCommand {
  constructor(command2) {
    __publicField(this, "_disposable");
    if (!Array.isArray(command2)) {
      command2 = [command2];
    }
    const subscriptions = [];
    for (const cmd of command2) {
      subscriptions.push(vscode__WEBPACK_IMPORTED_MODULE_1__.commands.registerTextEditorCommand(cmd, (editor, edit, ...args) => this.executeCore(cmd, editor, edit, ...args), this));
    }
    this._disposable = vscode__WEBPACK_IMPORTED_MODULE_1__.Disposable.from(...subscriptions);
  }
  dispose() {
    this._disposable.dispose();
  }
  executeCore(command2, editor, edit, ...args) {
    return this.execute(editor, edit, ...args);
  }
}
function findEditor(uri) {
  const active = vscode__WEBPACK_IMPORTED_MODULE_1__.window.activeTextEditor;
  const normalizedUri = uri.toString();
  for (const e of [...active != null ? [active] : [], ...vscode__WEBPACK_IMPORTED_MODULE_1__.window.visibleTextEditors]) {
    if (e.document.uri.toString() === normalizedUri && (e == null ? void 0 : e.viewColumn) != null) {
      return e;
    }
  }
  return void 0;
}
async function findOrOpenEditor(uri, options) {
  var _a;
  const e = findEditor(uri);
  if (e != null) {
    if (!(options == null ? void 0 : options.preserveFocus)) {
      await vscode__WEBPACK_IMPORTED_MODULE_1__.window.showTextDocument(e.document, { ...options, viewColumn: e.viewColumn });
    }
    return e;
  }
  return openEditor(uri, { viewColumn: (_a = vscode__WEBPACK_IMPORTED_MODULE_1__.window.activeTextEditor) == null ? void 0 : _a.viewColumn, ...options });
}
function findOrOpenEditors(uris) {
  const normalizedUris = new Map(uris.map((uri) => [uri.toString(), uri]));
  for (const e of vscode__WEBPACK_IMPORTED_MODULE_1__.window.visibleTextEditors) {
    if ((e == null ? void 0 : e.viewColumn) != null) {
      normalizedUris.delete(e.document.uri.toString());
    }
  }
  for (const uri of normalizedUris.values()) {
    void vscode__WEBPACK_IMPORTED_MODULE_1__.commands.executeCommand(_constants__WEBPACK_IMPORTED_MODULE_2__.BuiltInCommands.Open, uri, { background: true, preview: false });
  }
}
async function openEditor(uri, options = {}) {
  var _a;
  const { rethrow, ...opts } = options;
  try {
    if (_git_gitUri__WEBPACK_IMPORTED_MODULE_5__.GitUri.is(uri)) {
      uri = uri.documentUri();
    }
    if (uri.scheme === _constants__WEBPACK_IMPORTED_MODULE_2__.DocumentSchemes.GitLens && _constants__WEBPACK_IMPORTED_MODULE_2__.ImageMimetypes[path__WEBPACK_IMPORTED_MODULE_0__.extname(uri.fsPath)]) {
      await vscode__WEBPACK_IMPORTED_MODULE_1__.commands.executeCommand(_constants__WEBPACK_IMPORTED_MODULE_2__.BuiltInCommands.Open, uri);
      return void 0;
    }
    const document = await vscode__WEBPACK_IMPORTED_MODULE_1__.workspace.openTextDocument(uri);
    return vscode__WEBPACK_IMPORTED_MODULE_1__.window.showTextDocument(document, {
      preserveFocus: false,
      preview: true,
      viewColumn: vscode__WEBPACK_IMPORTED_MODULE_1__.ViewColumn.Active,
      ...opts
    });
  } catch (ex) {
    const msg = (_a = ex == null ? void 0 : ex.toString()) != null ? _a : "";
    if (msg.includes("File seems to be binary and cannot be opened as text")) {
      await vscode__WEBPACK_IMPORTED_MODULE_1__.commands.executeCommand(_constants__WEBPACK_IMPORTED_MODULE_2__.BuiltInCommands.Open, uri);
      return void 0;
    }
    if (rethrow)
      throw ex;
    _logger__WEBPACK_IMPORTED_MODULE_6__.Logger.error(ex, "openEditor");
    return void 0;
  }
}
function openWorkspace(uri, name, options = {}) {
  if (options.openInNewWindow) {
    void vscode__WEBPACK_IMPORTED_MODULE_1__.commands.executeCommand(_constants__WEBPACK_IMPORTED_MODULE_2__.BuiltInCommands.OpenFolder, uri, true);
    return true;
  }
  return vscode__WEBPACK_IMPORTED_MODULE_1__.workspace.updateWorkspaceFolders(vscode__WEBPACK_IMPORTED_MODULE_1__.workspace.workspaceFolders != null ? vscode__WEBPACK_IMPORTED_MODULE_1__.workspace.workspaceFolders.length : 0, null, { uri, name });
}


/***/ }),

/***/ "./src/commands/compareWith.ts":
/*!*************************************!*\
  !*** ./src/commands/compareWith.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CompareWithCommand": () => (/* binding */ CompareWithCommand)
/* harmony export */ });
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../container */ "./src/container.ts");
/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../logger */ "./src/logger.ts");
/* harmony import */ var _messages__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../messages */ "./src/messages.ts");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./common */ "./src/commands/common.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};




let CompareWithCommand = class extends _common__WEBPACK_IMPORTED_MODULE_3__.ActiveEditorCommand {
  constructor() {
    super([
      _common__WEBPACK_IMPORTED_MODULE_3__.Commands.CompareWith,
      _common__WEBPACK_IMPORTED_MODULE_3__.Commands.CompareHeadWith,
      _common__WEBPACK_IMPORTED_MODULE_3__.Commands.CompareWorkingWith,
      _common__WEBPACK_IMPORTED_MODULE_3__.Commands.Deprecated_DiffHeadWith,
      _common__WEBPACK_IMPORTED_MODULE_3__.Commands.Deprecated_DiffWorkingWith
    ]);
  }
  preExecute(context, args) {
    switch (context.command) {
      case _common__WEBPACK_IMPORTED_MODULE_3__.Commands.CompareWith:
        args = { ...args };
        break;
      case _common__WEBPACK_IMPORTED_MODULE_3__.Commands.CompareHeadWith:
      case _common__WEBPACK_IMPORTED_MODULE_3__.Commands.Deprecated_DiffHeadWith:
        args = { ...args };
        args.ref1 = "HEAD";
        break;
      case _common__WEBPACK_IMPORTED_MODULE_3__.Commands.CompareWorkingWith:
      case _common__WEBPACK_IMPORTED_MODULE_3__.Commands.Deprecated_DiffWorkingWith:
        args = { ...args };
        args.ref1 = "";
        break;
    }
    return this.execute(context.editor, context.uri, args);
  }
  async execute(editor, uri, args) {
    uri = (0,_common__WEBPACK_IMPORTED_MODULE_3__.getCommandUri)(uri, editor);
    args = { ...args };
    try {
      let title;
      switch (args.ref1) {
        case null:
          title = "Compare";
          break;
        case "":
          title = "Compare Working Tree with";
          break;
        case "HEAD":
          title = "Compare HEAD with";
          break;
        default:
          title = `Compare ${args.ref1} with`;
          break;
      }
      const repoPath = await (0,_common__WEBPACK_IMPORTED_MODULE_3__.getRepoPathOrActiveOrPrompt)(uri, editor, title);
      if (!repoPath)
        return;
      if (args.ref1 != null && args.ref2 != null) {
        void await _container__WEBPACK_IMPORTED_MODULE_0__.Container.searchAndCompareView.compare(repoPath, args.ref1, args.ref2);
      } else {
        _container__WEBPACK_IMPORTED_MODULE_0__.Container.searchAndCompareView.selectForCompare(repoPath, args.ref1, { prompt: true });
      }
    } catch (ex) {
      _logger__WEBPACK_IMPORTED_MODULE_1__.Logger.error(ex, "CompareWithCommmand");
      void _messages__WEBPACK_IMPORTED_MODULE_2__.Messages.showGenericErrorMessage("Unable to open comparison");
    }
  }
};
CompareWithCommand = __decorateClass([
  (0,_common__WEBPACK_IMPORTED_MODULE_3__.command)()
], CompareWithCommand);


/***/ }),

/***/ "./src/commands/copyCurrentBranch.ts":
/*!*******************************************!*\
  !*** ./src/commands/copyCurrentBranch.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CopyCurrentBranchCommand": () => (/* binding */ CopyCurrentBranchCommand)
/* harmony export */ });
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../container */ "./src/container.ts");
/* harmony import */ var _git_gitUri__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../git/gitUri */ "./src/git/gitUri.ts");
/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../logger */ "./src/logger.ts");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./common */ "./src/commands/common.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};





let CopyCurrentBranchCommand = class extends _common__WEBPACK_IMPORTED_MODULE_4__.ActiveEditorCommand {
  constructor() {
    super(_common__WEBPACK_IMPORTED_MODULE_4__.Commands.CopyCurrentBranch);
  }
  async execute(editor, uri) {
    uri = (0,_common__WEBPACK_IMPORTED_MODULE_4__.getCommandUri)(uri, editor);
    const gitUri = uri != null ? await _git_gitUri__WEBPACK_IMPORTED_MODULE_2__.GitUri.fromUri(uri) : void 0;
    const repoPath = await (0,_common__WEBPACK_IMPORTED_MODULE_4__.getRepoPathOrActiveOrPrompt)(gitUri, editor, "Copy Current Branch Name");
    if (!repoPath)
      return;
    try {
      const branch = await _container__WEBPACK_IMPORTED_MODULE_1__.Container.git.getBranch(repoPath);
      if (branch == null ? void 0 : branch.name) {
        await vscode__WEBPACK_IMPORTED_MODULE_0__.env.clipboard.writeText(branch.name);
      }
    } catch (ex) {
      _logger__WEBPACK_IMPORTED_MODULE_3__.Logger.error(ex, "CopyCurrentBranchCommand");
      void vscode__WEBPACK_IMPORTED_MODULE_0__.window.showErrorMessage("Unable to copy current branch name. See output channel for more details");
    }
  }
};
CopyCurrentBranchCommand = __decorateClass([
  (0,_common__WEBPACK_IMPORTED_MODULE_4__.command)()
], CopyCurrentBranchCommand);


/***/ }),

/***/ "./src/commands/copyMessageToClipboard.ts":
/*!************************************************!*\
  !*** ./src/commands/copyMessageToClipboard.ts ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CopyMessageToClipboardCommand": () => (/* binding */ CopyMessageToClipboardCommand)
/* harmony export */ });
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../container */ "./src/container.ts");
/* harmony import */ var _git_gitUri__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../git/gitUri */ "./src/git/gitUri.ts");
/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../logger */ "./src/logger.ts");
/* harmony import */ var _messages__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../messages */ "./src/messages.ts");
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../system */ "./src/system.ts");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./common */ "./src/commands/common.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};







let CopyMessageToClipboardCommand = class extends _common__WEBPACK_IMPORTED_MODULE_6__.ActiveEditorCommand {
  constructor() {
    super(_common__WEBPACK_IMPORTED_MODULE_6__.Commands.CopyMessageToClipboard);
  }
  preExecute(context, args) {
    if ((0,_common__WEBPACK_IMPORTED_MODULE_6__.isCommandContextViewNodeHasCommit)(context)) {
      args = { ...args };
      args.sha = context.node.commit.sha;
      return this.execute(context.editor, context.node.commit.uri, args);
    } else if ((0,_common__WEBPACK_IMPORTED_MODULE_6__.isCommandContextViewNodeHasBranch)(context)) {
      args = { ...args };
      args.sha = context.node.branch.sha;
      return this.execute(context.editor, context.node.uri, args);
    } else if ((0,_common__WEBPACK_IMPORTED_MODULE_6__.isCommandContextViewNodeHasTag)(context)) {
      args = { ...args };
      args.sha = context.node.tag.sha;
      return this.execute(context.editor, context.node.uri, args);
    }
    return this.execute(context.editor, context.uri, args);
  }
  async execute(editor, uri, args) {
    var _a;
    uri = (0,_common__WEBPACK_IMPORTED_MODULE_6__.getCommandUri)(uri, editor);
    args = { ...args };
    try {
      let repoPath;
      if (uri == null) {
        repoPath = await _container__WEBPACK_IMPORTED_MODULE_1__.Container.git.getActiveRepoPath(editor);
        if (!repoPath)
          return;
        const log = await _container__WEBPACK_IMPORTED_MODULE_1__.Container.git.getLog(repoPath, { limit: 1 });
        if (log == null)
          return;
        args.message = _system__WEBPACK_IMPORTED_MODULE_5__.Iterables.first(log.commits.values()).message;
      } else if (args.message == null) {
        const gitUri = await _git_gitUri__WEBPACK_IMPORTED_MODULE_2__.GitUri.fromUri(uri);
        repoPath = gitUri.repoPath;
        if (args.sha == null) {
          const blameline = (_a = editor == null ? void 0 : editor.selection.active.line) != null ? _a : 0;
          if (blameline < 0)
            return;
          try {
            const blame = (editor == null ? void 0 : editor.document.isDirty) ? await _container__WEBPACK_IMPORTED_MODULE_1__.Container.git.getBlameForLineContents(gitUri, blameline, editor.document.getText()) : await _container__WEBPACK_IMPORTED_MODULE_1__.Container.git.getBlameForLine(gitUri, blameline);
            if (blame == null)
              return;
            if (blame.commit.isUncommitted)
              return;
            args.sha = blame.commit.sha;
            if (!repoPath) {
              repoPath = blame.commit.repoPath;
            }
          } catch (ex) {
            _logger__WEBPACK_IMPORTED_MODULE_3__.Logger.error(ex, "CopyMessageToClipboardCommand", `getBlameForLine(${blameline})`);
            void _messages__WEBPACK_IMPORTED_MODULE_4__.Messages.showGenericErrorMessage("Unable to copy message");
            return;
          }
        }
        const commit = await _container__WEBPACK_IMPORTED_MODULE_1__.Container.git.getCommit(repoPath, args.sha);
        if (commit == null)
          return;
        args.message = commit.message;
      }
      void await vscode__WEBPACK_IMPORTED_MODULE_0__.env.clipboard.writeText(args.message);
    } catch (ex) {
      _logger__WEBPACK_IMPORTED_MODULE_3__.Logger.error(ex, "CopyMessageToClipboardCommand");
      void _messages__WEBPACK_IMPORTED_MODULE_4__.Messages.showGenericErrorMessage("Unable to copy message");
    }
  }
};
CopyMessageToClipboardCommand = __decorateClass([
  (0,_common__WEBPACK_IMPORTED_MODULE_6__.command)()
], CopyMessageToClipboardCommand);


/***/ }),

/***/ "./src/commands/copyShaToClipboard.ts":
/*!********************************************!*\
  !*** ./src/commands/copyShaToClipboard.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CopyShaToClipboardCommand": () => (/* binding */ CopyShaToClipboardCommand)
/* harmony export */ });
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../container */ "./src/container.ts");
/* harmony import */ var _git_gitUri__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../git/gitUri */ "./src/git/gitUri.ts");
/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../logger */ "./src/logger.ts");
/* harmony import */ var _messages__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../messages */ "./src/messages.ts");
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../system */ "./src/system.ts");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./common */ "./src/commands/common.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};







let CopyShaToClipboardCommand = class extends _common__WEBPACK_IMPORTED_MODULE_6__.ActiveEditorCommand {
  constructor() {
    super(_common__WEBPACK_IMPORTED_MODULE_6__.Commands.CopyShaToClipboard);
  }
  preExecute(context, args) {
    if ((0,_common__WEBPACK_IMPORTED_MODULE_6__.isCommandContextViewNodeHasCommit)(context)) {
      args = { ...args };
      args.sha = _container__WEBPACK_IMPORTED_MODULE_1__.Container.config.advanced.abbreviateShaOnCopy ? context.node.commit.shortSha : context.node.commit.sha;
      return this.execute(context.editor, context.node.commit.uri, args);
    } else if ((0,_common__WEBPACK_IMPORTED_MODULE_6__.isCommandContextViewNodeHasBranch)(context)) {
      args = { ...args };
      args.sha = context.node.branch.sha;
      return this.execute(context.editor, context.node.uri, args);
    } else if ((0,_common__WEBPACK_IMPORTED_MODULE_6__.isCommandContextViewNodeHasTag)(context)) {
      args = { ...args };
      args.sha = context.node.tag.sha;
      return this.execute(context.editor, context.node.uri, args);
    }
    return this.execute(context.editor, context.uri, args);
  }
  async execute(editor, uri, args) {
    var _a;
    uri = (0,_common__WEBPACK_IMPORTED_MODULE_6__.getCommandUri)(uri, editor);
    args = { ...args };
    try {
      if (uri == null) {
        const repoPath = await _container__WEBPACK_IMPORTED_MODULE_1__.Container.git.getActiveRepoPath(editor);
        if (!repoPath)
          return;
        const log = await _container__WEBPACK_IMPORTED_MODULE_1__.Container.git.getLog(repoPath, { limit: 1 });
        if (log == null)
          return;
        args.sha = _system__WEBPACK_IMPORTED_MODULE_5__.Iterables.first(log.commits.values()).sha;
      } else if (args.sha == null) {
        const blameline = (_a = editor == null ? void 0 : editor.selection.active.line) != null ? _a : 0;
        if (blameline < 0)
          return;
        try {
          const gitUri = await _git_gitUri__WEBPACK_IMPORTED_MODULE_2__.GitUri.fromUri(uri);
          const blame = (editor == null ? void 0 : editor.document.isDirty) ? await _container__WEBPACK_IMPORTED_MODULE_1__.Container.git.getBlameForLineContents(gitUri, blameline, editor.document.getText()) : await _container__WEBPACK_IMPORTED_MODULE_1__.Container.git.getBlameForLine(gitUri, blameline);
          if (blame == null)
            return;
          args.sha = blame.commit.sha;
        } catch (ex) {
          _logger__WEBPACK_IMPORTED_MODULE_3__.Logger.error(ex, "CopyShaToClipboardCommand", `getBlameForLine(${blameline})`);
          void _messages__WEBPACK_IMPORTED_MODULE_4__.Messages.showGenericErrorMessage("Unable to copy commit SHA");
          return;
        }
      }
      void await vscode__WEBPACK_IMPORTED_MODULE_0__.env.clipboard.writeText(args.sha);
    } catch (ex) {
      _logger__WEBPACK_IMPORTED_MODULE_3__.Logger.error(ex, "CopyShaToClipboardCommand");
      void _messages__WEBPACK_IMPORTED_MODULE_4__.Messages.showGenericErrorMessage("Unable to copy commit SHA");
    }
  }
};
CopyShaToClipboardCommand = __decorateClass([
  (0,_common__WEBPACK_IMPORTED_MODULE_6__.command)()
], CopyShaToClipboardCommand);


/***/ }),

/***/ "./src/commands/createPullRequestOnRemote.ts":
/*!***************************************************!*\
  !*** ./src/commands/createPullRequestOnRemote.ts ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CreatePullRequestOnRemoteCommand": () => (/* binding */ CreatePullRequestOnRemoteCommand)
/* harmony export */ });
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../container */ "./src/container.ts");
/* harmony import */ var _git_git__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../git/git */ "./src/git/git.ts");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./common */ "./src/commands/common.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};



let CreatePullRequestOnRemoteCommand = class extends _common__WEBPACK_IMPORTED_MODULE_2__.Command {
  constructor() {
    super(_common__WEBPACK_IMPORTED_MODULE_2__.Commands.CreatePullRequestOnRemote);
  }
  async execute(args) {
    if ((args == null ? void 0 : args.repoPath) == null)
      return;
    const repo = await _container__WEBPACK_IMPORTED_MODULE_0__.Container.git.getRepository(args.repoPath);
    if (repo == null)
      return;
    const compareRemote = await repo.getRemote(args.remote);
    if ((compareRemote == null ? void 0 : compareRemote.provider) == null)
      return;
    const providerId = compareRemote.provider.id;
    const remotes = await repo.getRemotes({
      filter: (r) => {
        var _a;
        return ((_a = r.provider) == null ? void 0 : _a.id) === providerId;
      }
    });
    const resource = {
      type: _git_git__WEBPACK_IMPORTED_MODULE_1__.RemoteResourceType.CreatePullRequest,
      base: {
        branch: args.base,
        remote: void 0
      },
      compare: {
        branch: args.compare,
        remote: { path: compareRemote.path, url: compareRemote.url }
      }
    };
    void await (0,_common__WEBPACK_IMPORTED_MODULE_2__.executeCommand)(_common__WEBPACK_IMPORTED_MODULE_2__.Commands.OpenOnRemote, {
      resource,
      remotes
    });
  }
};
CreatePullRequestOnRemoteCommand = __decorateClass([
  (0,_common__WEBPACK_IMPORTED_MODULE_2__.command)()
], CreatePullRequestOnRemoteCommand);


/***/ }),

/***/ "./src/commands/diffLineWithPrevious.ts":
/*!**********************************************!*\
  !*** ./src/commands/diffLineWithPrevious.ts ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DiffLineWithPreviousCommand": () => (/* binding */ DiffLineWithPreviousCommand)
/* harmony export */ });
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../container */ "./src/container.ts");
/* harmony import */ var _git_gitUri__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../git/gitUri */ "./src/git/gitUri.ts");
/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../logger */ "./src/logger.ts");
/* harmony import */ var _messages__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../messages */ "./src/messages.ts");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./common */ "./src/commands/common.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};





let DiffLineWithPreviousCommand = class extends _common__WEBPACK_IMPORTED_MODULE_4__.ActiveEditorCommand {
  constructor() {
    super(_common__WEBPACK_IMPORTED_MODULE_4__.Commands.DiffLineWithPrevious);
  }
  async execute(editor, uri, args) {
    var _a, _b, _c;
    uri = (0,_common__WEBPACK_IMPORTED_MODULE_4__.getCommandUri)(uri, editor);
    if (uri == null)
      return;
    args = { ...args };
    if (args.line == null) {
      args.line = (_a = editor == null ? void 0 : editor.selection.active.line) != null ? _a : 0;
    }
    const gitUri = args.commit != null ? _git_gitUri__WEBPACK_IMPORTED_MODULE_1__.GitUri.fromCommit(args.commit) : await _git_gitUri__WEBPACK_IMPORTED_MODULE_1__.GitUri.fromUri(uri);
    try {
      const diffUris = await _container__WEBPACK_IMPORTED_MODULE_0__.Container.git.getPreviousLineDiffUris(gitUri.repoPath, gitUri, args.line, gitUri.sha);
      if (diffUris == null || diffUris.previous == null) {
        void _messages__WEBPACK_IMPORTED_MODULE_3__.Messages.showCommitHasNoPreviousCommitWarningMessage();
        return;
      }
      void await (0,_common__WEBPACK_IMPORTED_MODULE_4__.executeCommand)(_common__WEBPACK_IMPORTED_MODULE_4__.Commands.DiffWith, {
        repoPath: diffUris.current.repoPath,
        lhs: {
          sha: (_b = diffUris.previous.sha) != null ? _b : "",
          uri: diffUris.previous.documentUri()
        },
        rhs: {
          sha: (_c = diffUris.current.sha) != null ? _c : "",
          uri: diffUris.current.documentUri()
        },
        line: diffUris.line,
        showOptions: args.showOptions
      });
    } catch (ex) {
      _logger__WEBPACK_IMPORTED_MODULE_2__.Logger.error(ex, "DiffLineWithPreviousCommand", `getPreviousLineDiffUris(${gitUri.repoPath}, ${gitUri.fsPath}, ${gitUri.sha})`);
      void _messages__WEBPACK_IMPORTED_MODULE_3__.Messages.showGenericErrorMessage("Unable to open compare");
    }
  }
};
DiffLineWithPreviousCommand = __decorateClass([
  (0,_common__WEBPACK_IMPORTED_MODULE_4__.command)()
], DiffLineWithPreviousCommand);


/***/ }),

/***/ "./src/commands/diffLineWithWorking.ts":
/*!*********************************************!*\
  !*** ./src/commands/diffLineWithWorking.ts ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DiffLineWithWorkingCommand": () => (/* binding */ DiffLineWithWorkingCommand)
/* harmony export */ });
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../container */ "./src/container.ts");
/* harmony import */ var _git_git__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../git/git */ "./src/git/git.ts");
/* harmony import */ var _git_gitUri__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../git/gitUri */ "./src/git/gitUri.ts");
/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../logger */ "./src/logger.ts");
/* harmony import */ var _messages__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../messages */ "./src/messages.ts");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./common */ "./src/commands/common.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};







let DiffLineWithWorkingCommand = class extends _common__WEBPACK_IMPORTED_MODULE_6__.ActiveEditorCommand {
  constructor() {
    super(_common__WEBPACK_IMPORTED_MODULE_6__.Commands.DiffLineWithWorking);
  }
  async execute(editor, uri, args) {
    var _a;
    uri = (0,_common__WEBPACK_IMPORTED_MODULE_6__.getCommandUri)(uri, editor);
    if (uri == null)
      return;
    const gitUri = await _git_gitUri__WEBPACK_IMPORTED_MODULE_3__.GitUri.fromUri(uri);
    args = { ...args };
    if (args.line == null) {
      args.line = (_a = editor == null ? void 0 : editor.selection.active.line) != null ? _a : 0;
    }
    if (args.commit == null || args.commit.isUncommitted) {
      const blameline = args.line;
      if (blameline < 0)
        return;
      try {
        const blame = (editor == null ? void 0 : editor.document.isDirty) ? await _container__WEBPACK_IMPORTED_MODULE_1__.Container.git.getBlameForLineContents(gitUri, blameline, editor.document.getText()) : await _container__WEBPACK_IMPORTED_MODULE_1__.Container.git.getBlameForLine(gitUri, blameline);
        if (blame == null) {
          void _messages__WEBPACK_IMPORTED_MODULE_5__.Messages.showFileNotUnderSourceControlWarningMessage("Unable to open compare");
          return;
        }
        args.commit = blame.commit;
        if (args.commit.isUncommitted) {
          const status = await _container__WEBPACK_IMPORTED_MODULE_1__.Container.git.getStatusForFile(gitUri.repoPath, gitUri.fsPath);
          args.commit = args.commit.with({
            sha: (status == null ? void 0 : status.indexStatus) != null ? _git_git__WEBPACK_IMPORTED_MODULE_2__.GitRevision.uncommittedStaged : args.commit.previousSha,
            fileName: args.commit.previousFileName,
            originalFileName: null,
            previousSha: null,
            previousFileName: null
          });
          args.line = blame.line.line - 1;
        }
      } catch (ex) {
        _logger__WEBPACK_IMPORTED_MODULE_4__.Logger.error(ex, "DiffLineWithWorkingCommand", `getBlameForLine(${blameline})`);
        void _messages__WEBPACK_IMPORTED_MODULE_5__.Messages.showGenericErrorMessage("Unable to open compare");
        return;
      }
    }
    const workingUri = await args.commit.getWorkingUri();
    if (workingUri == null) {
      void vscode__WEBPACK_IMPORTED_MODULE_0__.window.showWarningMessage("Unable to open compare. File has been deleted from the working tree");
      return;
    }
    void await (0,_common__WEBPACK_IMPORTED_MODULE_6__.executeCommand)(_common__WEBPACK_IMPORTED_MODULE_6__.Commands.DiffWith, {
      repoPath: args.commit.repoPath,
      lhs: {
        sha: args.commit.sha,
        uri: args.commit.uri
      },
      rhs: {
        sha: "",
        uri: workingUri
      },
      line: args.line,
      showOptions: args.showOptions
    });
  }
};
DiffLineWithWorkingCommand = __decorateClass([
  (0,_common__WEBPACK_IMPORTED_MODULE_6__.command)()
], DiffLineWithWorkingCommand);


/***/ }),

/***/ "./src/commands/diffWith.ts":
/*!**********************************!*\
  !*** ./src/commands/diffWith.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DiffWithCommand": () => (/* binding */ DiffWithCommand)
/* harmony export */ });
/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! path */ "./node_modules/path-browserify/index.js");
/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../constants */ "./src/constants.ts");
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../container */ "./src/container.ts");
/* harmony import */ var _git_git__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../git/git */ "./src/git/git.ts");
/* harmony import */ var _git_gitUri__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../git/gitUri */ "./src/git/gitUri.ts");
/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../logger */ "./src/logger.ts");
/* harmony import */ var _messages__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../messages */ "./src/messages.ts");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./common */ "./src/commands/common.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};









let DiffWithCommand = class extends _common__WEBPACK_IMPORTED_MODULE_8__.Command {
  static getMarkdownCommandArgs(argsOrCommit, line) {
    let args;
    if (_git_git__WEBPACK_IMPORTED_MODULE_4__.GitCommit.is(argsOrCommit)) {
      const commit = argsOrCommit;
      if (commit.isUncommitted) {
        args = {
          repoPath: commit.repoPath,
          lhs: {
            sha: "HEAD",
            uri: commit.uri
          },
          rhs: {
            sha: "",
            uri: commit.uri
          },
          line
        };
      } else {
        args = {
          repoPath: commit.repoPath,
          lhs: {
            sha: commit.previousSha != null ? commit.previousSha : _git_git__WEBPACK_IMPORTED_MODULE_4__.GitRevision.deletedOrMissing,
            uri: commit.previousUri
          },
          rhs: {
            sha: commit.sha,
            uri: commit.uri
          },
          line
        };
      }
    } else {
      args = argsOrCommit;
    }
    return super.getMarkdownCommandArgsCore(_common__WEBPACK_IMPORTED_MODULE_8__.Commands.DiffWith, args);
  }
  constructor() {
    super(_common__WEBPACK_IMPORTED_MODULE_8__.Commands.DiffWith);
  }
  async execute(args) {
    var _a;
    if ((args == null ? void 0 : args.lhs) == null || (args == null ? void 0 : args.rhs) == null)
      return;
    args = {
      ...args,
      lhs: { ...args.lhs },
      rhs: { ...args.rhs },
      showOptions: args.showOptions == null ? void 0 : { ...args.showOptions }
    };
    if (args.repoPath == null)
      return;
    try {
      let lhsSha = args.lhs.sha;
      let rhsSha = args.rhs.sha;
      [args.lhs.sha, args.rhs.sha] = await Promise.all([
        await _container__WEBPACK_IMPORTED_MODULE_3__.Container.git.resolveReference(args.repoPath, args.lhs.sha, args.lhs.uri, { timeout: 100 }),
        await _container__WEBPACK_IMPORTED_MODULE_3__.Container.git.resolveReference(args.repoPath, args.rhs.sha, args.rhs.uri, { timeout: 100 })
      ]);
      if (args.lhs.sha !== _git_git__WEBPACK_IMPORTED_MODULE_4__.GitRevision.deletedOrMissing) {
        lhsSha = args.lhs.sha;
      }
      if (args.rhs.sha && args.rhs.sha !== _git_git__WEBPACK_IMPORTED_MODULE_4__.GitRevision.deletedOrMissing) {
        const status = await _container__WEBPACK_IMPORTED_MODULE_3__.Container.git.getFileStatusForCommit(args.repoPath, args.rhs.uri.fsPath, args.rhs.sha);
        if ((status == null ? void 0 : status.status) === "D") {
          args.rhs.sha = _git_git__WEBPACK_IMPORTED_MODULE_4__.GitRevision.deletedOrMissing;
        } else {
          rhsSha = args.rhs.sha;
        }
        if ((status == null ? void 0 : status.status) === "A" && args.lhs.sha.endsWith("^")) {
          args.lhs.sha = _git_git__WEBPACK_IMPORTED_MODULE_4__.GitRevision.deletedOrMissing;
        }
      }
      const [lhs, rhs] = await Promise.all([
        _container__WEBPACK_IMPORTED_MODULE_3__.Container.git.getVersionedUri(args.repoPath, args.lhs.uri.fsPath, args.lhs.sha),
        _container__WEBPACK_IMPORTED_MODULE_3__.Container.git.getVersionedUri(args.repoPath, args.rhs.uri.fsPath, args.rhs.sha)
      ]);
      let rhsSuffix = _git_git__WEBPACK_IMPORTED_MODULE_4__.GitRevision.shorten(rhsSha, { strings: { uncommitted: "Working Tree" } });
      if (rhs == null) {
        if (_git_git__WEBPACK_IMPORTED_MODULE_4__.GitRevision.isUncommitted(args.rhs.sha)) {
          rhsSuffix = "deleted";
        } else if (rhsSuffix.length === 0 && args.rhs.sha === _git_git__WEBPACK_IMPORTED_MODULE_4__.GitRevision.deletedOrMissing) {
          rhsSuffix = "not in Working Tree";
        } else {
          rhsSuffix = `deleted${rhsSuffix.length === 0 ? "" : ` in ${rhsSuffix}`}`;
        }
      } else if (lhs == null) {
        rhsSuffix = `added${rhsSuffix.length === 0 ? "" : ` in ${rhsSuffix}`}`;
      }
      let lhsSuffix = args.lhs.sha !== _git_git__WEBPACK_IMPORTED_MODULE_4__.GitRevision.deletedOrMissing ? _git_git__WEBPACK_IMPORTED_MODULE_4__.GitRevision.shorten(lhsSha) : "";
      if (lhs == null && args.rhs.sha.length === 0) {
        if (rhs != null) {
          lhsSuffix = lhsSuffix.length === 0 ? "" : `not in ${lhsSuffix}`;
          rhsSuffix = "";
        } else {
          lhsSuffix = `deleted${lhsSuffix.length === 0 ? "" : ` in ${lhsSuffix}`}`;
        }
      }
      if (args.lhs.title == null && (lhs != null || lhsSuffix.length !== 0)) {
        args.lhs.title = `${path__WEBPACK_IMPORTED_MODULE_0__.basename(args.lhs.uri.fsPath)}${lhsSuffix ? ` (${lhsSuffix})` : ""}`;
      }
      if (args.rhs.title == null) {
        args.rhs.title = `${path__WEBPACK_IMPORTED_MODULE_0__.basename(args.rhs.uri.fsPath)}${rhsSuffix ? ` (${rhsSuffix})` : ""}`;
      }
      const title = args.lhs.title != null && args.rhs.title != null ? `${args.lhs.title} ${_constants__WEBPACK_IMPORTED_MODULE_2__.GlyphChars.ArrowLeftRightLong} ${args.rhs.title}` : (_a = args.lhs.title) != null ? _a : args.rhs.title;
      if (args.showOptions == null) {
        args.showOptions = {};
      }
      if (args.showOptions.viewColumn == null) {
        args.showOptions.viewColumn = vscode__WEBPACK_IMPORTED_MODULE_1__.ViewColumn.Active;
      }
      if (args.line != null && args.line !== 0) {
        args.showOptions.selection = new vscode__WEBPACK_IMPORTED_MODULE_1__.Range(args.line, 0, args.line, 0);
      }
      void await vscode__WEBPACK_IMPORTED_MODULE_1__.commands.executeCommand(_constants__WEBPACK_IMPORTED_MODULE_2__.BuiltInCommands.Diff, lhs != null ? lhs : _git_gitUri__WEBPACK_IMPORTED_MODULE_5__.GitUri.toRevisionUri(_git_git__WEBPACK_IMPORTED_MODULE_4__.GitRevision.deletedOrMissing, args.lhs.uri.fsPath, args.repoPath), rhs != null ? rhs : _git_gitUri__WEBPACK_IMPORTED_MODULE_5__.GitUri.toRevisionUri(_git_git__WEBPACK_IMPORTED_MODULE_4__.GitRevision.deletedOrMissing, args.rhs.uri.fsPath, args.repoPath), title, args.showOptions);
    } catch (ex) {
      _logger__WEBPACK_IMPORTED_MODULE_6__.Logger.error(ex, "DiffWithCommand", "getVersionedFile");
      void _messages__WEBPACK_IMPORTED_MODULE_7__.Messages.showGenericErrorMessage("Unable to open compare");
    }
  }
};
DiffWithCommand = __decorateClass([
  (0,_common__WEBPACK_IMPORTED_MODULE_8__.command)()
], DiffWithCommand);


/***/ }),

/***/ "./src/commands/diffWithNext.ts":
/*!**************************************!*\
  !*** ./src/commands/diffWithNext.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DiffWithNextCommand": () => (/* binding */ DiffWithNextCommand)
/* harmony export */ });
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../container */ "./src/container.ts");
/* harmony import */ var _git_gitUri__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../git/gitUri */ "./src/git/gitUri.ts");
/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../logger */ "./src/logger.ts");
/* harmony import */ var _messages__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../messages */ "./src/messages.ts");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./common */ "./src/commands/common.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};





let DiffWithNextCommand = class extends _common__WEBPACK_IMPORTED_MODULE_4__.ActiveEditorCommand {
  constructor() {
    super([_common__WEBPACK_IMPORTED_MODULE_4__.Commands.DiffWithNext, _common__WEBPACK_IMPORTED_MODULE_4__.Commands.DiffWithNextInDiffLeft, _common__WEBPACK_IMPORTED_MODULE_4__.Commands.DiffWithNextInDiffRight]);
  }
  preExecute(context, args) {
    if (context.command === _common__WEBPACK_IMPORTED_MODULE_4__.Commands.DiffWithNextInDiffLeft) {
      args = { ...args, inDiffLeftEditor: true };
    }
    return this.execute(context.editor, context.uri, args);
  }
  async execute(editor, uri, args) {
    var _a, _b, _c;
    uri = (0,_common__WEBPACK_IMPORTED_MODULE_4__.getCommandUri)(uri, editor);
    if (uri == null)
      return;
    args = { ...args };
    if (args.line == null) {
      args.line = (_a = editor == null ? void 0 : editor.selection.active.line) != null ? _a : 0;
    }
    const gitUri = args.commit != null ? _git_gitUri__WEBPACK_IMPORTED_MODULE_1__.GitUri.fromCommit(args.commit) : await _git_gitUri__WEBPACK_IMPORTED_MODULE_1__.GitUri.fromUri(uri);
    try {
      const diffUris = await _container__WEBPACK_IMPORTED_MODULE_0__.Container.git.getNextDiffUris(gitUri.repoPath, gitUri, gitUri.sha, args.inDiffLeftEditor ? 1 : 0);
      if (diffUris == null || diffUris.next == null)
        return;
      void await (0,_common__WEBPACK_IMPORTED_MODULE_4__.executeCommand)(_common__WEBPACK_IMPORTED_MODULE_4__.Commands.DiffWith, {
        repoPath: diffUris.current.repoPath,
        lhs: {
          sha: (_b = diffUris.current.sha) != null ? _b : "",
          uri: diffUris.current.documentUri()
        },
        rhs: {
          sha: (_c = diffUris.next.sha) != null ? _c : "",
          uri: diffUris.next.documentUri()
        },
        line: args.line,
        showOptions: args.showOptions
      });
    } catch (ex) {
      _logger__WEBPACK_IMPORTED_MODULE_2__.Logger.error(ex, "DiffWithNextCommand", `getNextDiffUris(${gitUri.repoPath}, ${gitUri.fsPath}, ${gitUri.sha})`);
      void _messages__WEBPACK_IMPORTED_MODULE_3__.Messages.showGenericErrorMessage("Unable to open compare");
    }
  }
};
DiffWithNextCommand = __decorateClass([
  (0,_common__WEBPACK_IMPORTED_MODULE_4__.command)()
], DiffWithNextCommand);


/***/ }),

/***/ "./src/commands/diffWithPrevious.ts":
/*!******************************************!*\
  !*** ./src/commands/diffWithPrevious.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DiffWithPreviousCommand": () => (/* binding */ DiffWithPreviousCommand)
/* harmony export */ });
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../container */ "./src/container.ts");
/* harmony import */ var _git_git__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../git/git */ "./src/git/git.ts");
/* harmony import */ var _git_gitUri__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../git/gitUri */ "./src/git/gitUri.ts");
/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../logger */ "./src/logger.ts");
/* harmony import */ var _messages__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../messages */ "./src/messages.ts");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./common */ "./src/commands/common.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};






let DiffWithPreviousCommand = class extends _common__WEBPACK_IMPORTED_MODULE_5__.ActiveEditorCommand {
  constructor() {
    super([_common__WEBPACK_IMPORTED_MODULE_5__.Commands.DiffWithPrevious, _common__WEBPACK_IMPORTED_MODULE_5__.Commands.DiffWithPreviousInDiffLeft, _common__WEBPACK_IMPORTED_MODULE_5__.Commands.DiffWithPreviousInDiffRight]);
  }
  preExecute(context, args) {
    if (context.command === _common__WEBPACK_IMPORTED_MODULE_5__.Commands.DiffWithPreviousInDiffRight) {
      args = { ...args, inDiffRightEditor: true };
    }
    return this.execute(context.editor, context.uri, args);
  }
  async execute(editor, uri, args) {
    var _a, _b, _c;
    args = { ...args };
    if (args.uri == null) {
      uri = (0,_common__WEBPACK_IMPORTED_MODULE_5__.getCommandUri)(uri, editor);
      if (uri == null)
        return;
    } else {
      uri = args.uri;
    }
    if (args.line == null) {
      args.line = (_a = editor == null ? void 0 : editor.selection.active.line) != null ? _a : 0;
    }
    let gitUri;
    if (args.commit != null) {
      if (!args.commit.isUncommitted) {
        void await (0,_common__WEBPACK_IMPORTED_MODULE_5__.executeCommand)(_common__WEBPACK_IMPORTED_MODULE_5__.Commands.DiffWith, {
          repoPath: args.commit.repoPath,
          lhs: {
            sha: `${args.commit.sha}^`,
            uri: args.commit.originalUri
          },
          rhs: {
            sha: args.commit.sha || "",
            uri: args.commit.uri
          },
          line: args.line,
          showOptions: args.showOptions
        });
        return;
      }
      gitUri = _git_gitUri__WEBPACK_IMPORTED_MODULE_2__.GitUri.fromCommit(args.commit);
    } else {
      gitUri = await _git_gitUri__WEBPACK_IMPORTED_MODULE_2__.GitUri.fromUri(uri);
    }
    try {
      const diffUris = await _container__WEBPACK_IMPORTED_MODULE_0__.Container.git.getPreviousDiffUris(gitUri.repoPath, gitUri, gitUri.sha, args.inDiffRightEditor ? 1 : 0);
      if (diffUris == null || diffUris.previous == null) {
        if (diffUris == null) {
          void _messages__WEBPACK_IMPORTED_MODULE_4__.Messages.showCommitHasNoPreviousCommitWarningMessage();
          return;
        }
        if (diffUris.current.sha == null) {
          void await (0,_common__WEBPACK_IMPORTED_MODULE_5__.findOrOpenEditor)(diffUris.current, args.showOptions);
          return;
        }
        if (!diffUris.current.isUncommittedStaged) {
          void _messages__WEBPACK_IMPORTED_MODULE_4__.Messages.showCommitHasNoPreviousCommitWarningMessage();
          return;
        }
        diffUris.previous = _git_gitUri__WEBPACK_IMPORTED_MODULE_2__.GitUri.fromFile(diffUris.current.fileName, diffUris.current.repoPath, _git_git__WEBPACK_IMPORTED_MODULE_1__.GitRevision.deletedOrMissing);
      }
      void await (0,_common__WEBPACK_IMPORTED_MODULE_5__.executeCommand)(_common__WEBPACK_IMPORTED_MODULE_5__.Commands.DiffWith, {
        repoPath: diffUris.current.repoPath,
        lhs: {
          sha: (_b = diffUris.previous.sha) != null ? _b : "",
          uri: diffUris.previous.documentUri()
        },
        rhs: {
          sha: (_c = diffUris.current.sha) != null ? _c : "",
          uri: diffUris.current.documentUri()
        },
        line: args.line,
        showOptions: args.showOptions
      });
    } catch (ex) {
      _logger__WEBPACK_IMPORTED_MODULE_3__.Logger.error(ex, "DiffWithPreviousCommand", `getPreviousDiffUris(${gitUri.repoPath}, ${gitUri.fsPath}, ${gitUri.sha})`);
      void _messages__WEBPACK_IMPORTED_MODULE_4__.Messages.showGenericErrorMessage("Unable to open compare");
    }
  }
};
DiffWithPreviousCommand = __decorateClass([
  (0,_common__WEBPACK_IMPORTED_MODULE_5__.command)()
], DiffWithPreviousCommand);


/***/ }),

/***/ "./src/commands/diffWithRevision.ts":
/*!******************************************!*\
  !*** ./src/commands/diffWithRevision.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DiffWithRevisionCommand": () => (/* binding */ DiffWithRevisionCommand)
/* harmony export */ });
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../constants */ "./src/constants.ts");
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../container */ "./src/container.ts");
/* harmony import */ var _git_git__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../git/git */ "./src/git/git.ts");
/* harmony import */ var _git_gitUri__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../git/gitUri */ "./src/git/gitUri.ts");
/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../logger */ "./src/logger.ts");
/* harmony import */ var _messages__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../messages */ "./src/messages.ts");
/* harmony import */ var _quickpicks__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../quickpicks */ "./src/quickpicks.ts");
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../system */ "./src/system.ts");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./common */ "./src/commands/common.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};









let DiffWithRevisionCommand = class extends _common__WEBPACK_IMPORTED_MODULE_8__.ActiveEditorCommand {
  constructor() {
    super(_common__WEBPACK_IMPORTED_MODULE_8__.Commands.DiffWithRevision);
  }
  async execute(editor, uri, args) {
    var _a;
    uri = (0,_common__WEBPACK_IMPORTED_MODULE_8__.getCommandUri)(uri, editor);
    if (uri == null)
      return;
    const gitUri = await _git_gitUri__WEBPACK_IMPORTED_MODULE_3__.GitUri.fromUri(uri);
    args = { ...args };
    if (args.line == null) {
      args.line = (_a = editor == null ? void 0 : editor.selection.active.line) != null ? _a : 0;
    }
    try {
      const log = _container__WEBPACK_IMPORTED_MODULE_1__.Container.git.getLogForFile(gitUri.repoPath, gitUri.fsPath).then((log2) => log2 != null ? log2 : gitUri.sha ? _container__WEBPACK_IMPORTED_MODULE_1__.Container.git.getLogForFile(gitUri.repoPath, gitUri.fsPath, { ref: gitUri.sha }) : void 0);
      const title = `Open Changes with Revision${_system__WEBPACK_IMPORTED_MODULE_7__.Strings.pad(_constants__WEBPACK_IMPORTED_MODULE_0__.GlyphChars.Dot, 2, 2)}`;
      const pick = await _quickpicks__WEBPACK_IMPORTED_MODULE_6__.CommitPicker.show(log, `${title}${gitUri.getFormattedFilename({
        suffix: gitUri.sha ? `:${_git_git__WEBPACK_IMPORTED_MODULE_2__.GitRevision.shorten(gitUri.sha)}` : void 0,
        truncateTo: _constants__WEBPACK_IMPORTED_MODULE_0__.quickPickTitleMaxChars - title.length
      })}`, "Choose a commit to compare with", {
        picked: gitUri.sha,
        keys: ["right", "alt+right", "ctrl+right"],
        onDidPressKey: async (key, item) => {
          void await (0,_common__WEBPACK_IMPORTED_MODULE_8__.executeCommand)(_common__WEBPACK_IMPORTED_MODULE_8__.Commands.DiffWith, {
            repoPath: gitUri.repoPath,
            lhs: {
              sha: item.item.ref,
              uri: gitUri
            },
            rhs: {
              sha: "",
              uri: gitUri
            },
            line: args.line,
            showOptions: args.showOptions
          });
        },
        showOtherReferences: _quickpicks__WEBPACK_IMPORTED_MODULE_6__.CommandQuickPickItem.fromCommand("Choose a branch or tag...", _common__WEBPACK_IMPORTED_MODULE_8__.Commands.DiffWithRevisionFrom)
      });
      if (pick == null)
        return;
      void await (0,_common__WEBPACK_IMPORTED_MODULE_8__.executeCommand)(_common__WEBPACK_IMPORTED_MODULE_8__.Commands.DiffWith, {
        repoPath: gitUri.repoPath,
        lhs: {
          sha: pick.ref,
          uri: gitUri
        },
        rhs: {
          sha: "",
          uri: gitUri
        },
        line: args.line,
        showOptions: args.showOptions
      });
    } catch (ex) {
      _logger__WEBPACK_IMPORTED_MODULE_4__.Logger.error(ex, "DiffWithRevisionCommand");
      void _messages__WEBPACK_IMPORTED_MODULE_5__.Messages.showGenericErrorMessage("Unable to open compare");
    }
  }
};
DiffWithRevisionCommand = __decorateClass([
  (0,_common__WEBPACK_IMPORTED_MODULE_8__.command)()
], DiffWithRevisionCommand);


/***/ }),

/***/ "./src/commands/diffWithRevisionFrom.ts":
/*!**********************************************!*\
  !*** ./src/commands/diffWithRevisionFrom.ts ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DiffWithRevisionFromCommand": () => (/* binding */ DiffWithRevisionFromCommand)
/* harmony export */ });
/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! path */ "./node_modules/path-browserify/index.js");
/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../constants */ "./src/constants.ts");
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../container */ "./src/container.ts");
/* harmony import */ var _git_git__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../git/git */ "./src/git/git.ts");
/* harmony import */ var _git_gitUri__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../git/gitUri */ "./src/git/gitUri.ts");
/* harmony import */ var _messages__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../messages */ "./src/messages.ts");
/* harmony import */ var _quickpicks__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../quickpicks */ "./src/quickpicks.ts");
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../system */ "./src/system.ts");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./common */ "./src/commands/common.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};









let DiffWithRevisionFromCommand = class extends _common__WEBPACK_IMPORTED_MODULE_8__.ActiveEditorCommand {
  constructor() {
    super(_common__WEBPACK_IMPORTED_MODULE_8__.Commands.DiffWithRevisionFrom);
  }
  async execute(editor, uri, args) {
    var _a;
    uri = (0,_common__WEBPACK_IMPORTED_MODULE_8__.getCommandUri)(uri, editor);
    if (uri == null)
      return;
    const gitUri = await _git_gitUri__WEBPACK_IMPORTED_MODULE_4__.GitUri.fromUri(uri);
    if (!gitUri.repoPath) {
      void _messages__WEBPACK_IMPORTED_MODULE_5__.Messages.showNoRepositoryWarningMessage("Unable to open file compare");
      return;
    }
    args = { ...args };
    if (args.line == null) {
      args.line = (_a = editor == null ? void 0 : editor.selection.active.line) != null ? _a : 0;
    }
    const title = `Open Changes with Branch or Tag${_system__WEBPACK_IMPORTED_MODULE_7__.Strings.pad(_constants__WEBPACK_IMPORTED_MODULE_1__.GlyphChars.Dot, 2, 2)}`;
    const pick = await _quickpicks__WEBPACK_IMPORTED_MODULE_6__.ReferencePicker.show(gitUri.repoPath, `${title}${gitUri.getFormattedFilename({ truncateTo: _constants__WEBPACK_IMPORTED_MODULE_1__.quickPickTitleMaxChars - title.length })}`, "Choose a branch or tag to compare with", {
      allowEnteringRefs: true
    });
    if (pick == null)
      return;
    const ref = pick.ref;
    if (ref == null)
      return;
    let renamedUri;
    let renamedTitle;
    const files = await _container__WEBPACK_IMPORTED_MODULE_2__.Container.git.getDiffStatus(gitUri.repoPath, "HEAD", ref, { filters: ["R", "C"] });
    if (files != null) {
      const fileName = _system__WEBPACK_IMPORTED_MODULE_7__.Strings.normalizePath(path__WEBPACK_IMPORTED_MODULE_0__.relative(gitUri.repoPath, gitUri.fsPath));
      const rename = files.find((s) => s.fileName === fileName);
      if ((rename == null ? void 0 : rename.originalFileName) != null) {
        renamedUri = _git_gitUri__WEBPACK_IMPORTED_MODULE_4__.GitUri.resolveToUri(rename.originalFileName, gitUri.repoPath);
        renamedTitle = `${path__WEBPACK_IMPORTED_MODULE_0__.basename(rename.originalFileName)} (${_git_git__WEBPACK_IMPORTED_MODULE_3__.GitRevision.shorten(ref)})`;
      }
    }
    void await (0,_common__WEBPACK_IMPORTED_MODULE_8__.executeCommand)(_common__WEBPACK_IMPORTED_MODULE_8__.Commands.DiffWith, {
      repoPath: gitUri.repoPath,
      lhs: {
        sha: _git_git__WEBPACK_IMPORTED_MODULE_3__.GitReference.isBranch(pick) && pick.remote ? `remotes/${ref}` : ref,
        uri: renamedUri != null ? renamedUri : gitUri,
        title: renamedTitle != null ? renamedTitle : `${path__WEBPACK_IMPORTED_MODULE_0__.basename(gitUri.fsPath)} (${_git_git__WEBPACK_IMPORTED_MODULE_3__.GitRevision.shorten(ref)})`
      },
      rhs: {
        sha: "",
        uri: gitUri
      },
      line: args.line,
      showOptions: args.showOptions
    });
  }
};
DiffWithRevisionFromCommand = __decorateClass([
  (0,_common__WEBPACK_IMPORTED_MODULE_8__.command)()
], DiffWithRevisionFromCommand);


/***/ }),

/***/ "./src/commands/diffWithWorking.ts":
/*!*****************************************!*\
  !*** ./src/commands/diffWithWorking.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DiffWithWorkingCommand": () => (/* binding */ DiffWithWorkingCommand)
/* harmony export */ });
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../container */ "./src/container.ts");
/* harmony import */ var _git_git__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../git/git */ "./src/git/git.ts");
/* harmony import */ var _git_gitUri__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../git/gitUri */ "./src/git/gitUri.ts");
/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../logger */ "./src/logger.ts");
/* harmony import */ var _messages__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../messages */ "./src/messages.ts");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./common */ "./src/commands/common.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};







let DiffWithWorkingCommand = class extends _common__WEBPACK_IMPORTED_MODULE_6__.ActiveEditorCommand {
  constructor() {
    super([_common__WEBPACK_IMPORTED_MODULE_6__.Commands.DiffWithWorking, _common__WEBPACK_IMPORTED_MODULE_6__.Commands.DiffWithWorkingInDiffLeft, _common__WEBPACK_IMPORTED_MODULE_6__.Commands.DiffWithWorkingInDiffRight]);
  }
  async execute(editor, uri, args) {
    var _a, _b;
    args = { ...args };
    if (args.uri == null) {
      uri = (0,_common__WEBPACK_IMPORTED_MODULE_6__.getCommandUri)(uri, editor);
      if (uri == null)
        return;
    } else {
      uri = args.uri;
    }
    let gitUri = await _git_gitUri__WEBPACK_IMPORTED_MODULE_3__.GitUri.fromUri(uri);
    if (args.line == null) {
      args.line = (_a = editor == null ? void 0 : editor.selection.active.line) != null ? _a : 0;
    }
    if (args.inDiffRightEditor) {
      try {
        const diffUris = await _container__WEBPACK_IMPORTED_MODULE_1__.Container.git.getPreviousDiffUris(gitUri.repoPath, gitUri, gitUri.sha, 0);
        gitUri = (_b = diffUris == null ? void 0 : diffUris.previous) != null ? _b : gitUri;
      } catch (ex) {
        _logger__WEBPACK_IMPORTED_MODULE_4__.Logger.error(ex, "DiffWithWorkingCommand", `getPreviousDiffUris(${gitUri.repoPath}, ${gitUri.fsPath}, ${gitUri.sha})`);
        void _messages__WEBPACK_IMPORTED_MODULE_5__.Messages.showGenericErrorMessage("Unable to open compare");
        return;
      }
    }
    if (gitUri.sha == null) {
      void vscode__WEBPACK_IMPORTED_MODULE_0__.window.showInformationMessage("File matches the working tree");
      return;
    }
    if (gitUri.sha === _git_git__WEBPACK_IMPORTED_MODULE_2__.GitRevision.deletedOrMissing) {
      void vscode__WEBPACK_IMPORTED_MODULE_0__.window.showWarningMessage("Unable to open compare. File has been deleted from the working tree");
      return;
    }
    if (gitUri.isUncommittedStaged) {
      const status = await _container__WEBPACK_IMPORTED_MODULE_1__.Container.git.getStatusForFile(gitUri.repoPath, gitUri.fsPath);
      if ((status == null ? void 0 : status.indexStatus) != null) {
        void await (0,_common__WEBPACK_IMPORTED_MODULE_6__.executeCommand)(_common__WEBPACK_IMPORTED_MODULE_6__.Commands.DiffWith, {
          repoPath: gitUri.repoPath,
          lhs: {
            sha: _git_git__WEBPACK_IMPORTED_MODULE_2__.GitRevision.uncommittedStaged,
            uri: gitUri.documentUri()
          },
          rhs: {
            sha: "",
            uri: gitUri.documentUri()
          },
          line: args.line,
          showOptions: args.showOptions
        });
        return;
      }
    }
    uri = gitUri.toFileUri();
    const workingUri = await _container__WEBPACK_IMPORTED_MODULE_1__.Container.git.getWorkingUri(gitUri.repoPath, uri);
    if (workingUri == null) {
      void vscode__WEBPACK_IMPORTED_MODULE_0__.window.showWarningMessage("Unable to open compare. File has been deleted from the working tree");
      return;
    }
    void await (0,_common__WEBPACK_IMPORTED_MODULE_6__.executeCommand)(_common__WEBPACK_IMPORTED_MODULE_6__.Commands.DiffWith, {
      repoPath: gitUri.repoPath,
      lhs: {
        sha: gitUri.sha,
        uri
      },
      rhs: {
        sha: "",
        uri: workingUri
      },
      line: args.line,
      showOptions: args.showOptions
    });
  }
};
DiffWithWorkingCommand = __decorateClass([
  (0,_common__WEBPACK_IMPORTED_MODULE_6__.command)()
], DiffWithWorkingCommand);


/***/ }),

/***/ "./src/commands/externalDiff.ts":
/*!**************************************!*\
  !*** ./src/commands/externalDiff.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ExternalDiffCommand": () => (/* binding */ ExternalDiffCommand)
/* harmony export */ });
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../container */ "./src/container.ts");
/* harmony import */ var _git_git__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../git/git */ "./src/git/git.ts");
/* harmony import */ var _git_gitUri__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../git/gitUri */ "./src/git/gitUri.ts");
/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../logger */ "./src/logger.ts");
/* harmony import */ var _messages__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../messages */ "./src/messages.ts");
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../system */ "./src/system.ts");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./common */ "./src/commands/common.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};








var Status;
(function(Status2) {
  Status2[Status2["INDEX_MODIFIED"] = 0] = "INDEX_MODIFIED";
  Status2[Status2["INDEX_ADDED"] = 1] = "INDEX_ADDED";
  Status2[Status2["INDEX_DELETED"] = 2] = "INDEX_DELETED";
  Status2[Status2["INDEX_RENAMED"] = 3] = "INDEX_RENAMED";
  Status2[Status2["INDEX_COPIED"] = 4] = "INDEX_COPIED";
  Status2[Status2["MODIFIED"] = 5] = "MODIFIED";
  Status2[Status2["DELETED"] = 6] = "DELETED";
  Status2[Status2["UNTRACKED"] = 7] = "UNTRACKED";
  Status2[Status2["IGNORED"] = 8] = "IGNORED";
  Status2[Status2["ADDED_BY_US"] = 9] = "ADDED_BY_US";
  Status2[Status2["ADDED_BY_THEM"] = 10] = "ADDED_BY_THEM";
  Status2[Status2["DELETED_BY_US"] = 11] = "DELETED_BY_US";
  Status2[Status2["DELETED_BY_THEM"] = 12] = "DELETED_BY_THEM";
  Status2[Status2["BOTH_ADDED"] = 13] = "BOTH_ADDED";
  Status2[Status2["BOTH_DELETED"] = 14] = "BOTH_DELETED";
  Status2[Status2["BOTH_MODIFIED"] = 15] = "BOTH_MODIFIED";
})(Status || (Status = {}));
var ResourceGroupType;
(function(ResourceGroupType2) {
  ResourceGroupType2[ResourceGroupType2["Merge"] = 0] = "Merge";
  ResourceGroupType2[ResourceGroupType2["Index"] = 1] = "Index";
  ResourceGroupType2[ResourceGroupType2["WorkingTree"] = 2] = "WorkingTree";
})(ResourceGroupType || (ResourceGroupType = {}));
let ExternalDiffCommand = class extends _common__WEBPACK_IMPORTED_MODULE_7__.Command {
  constructor() {
    super([_common__WEBPACK_IMPORTED_MODULE_7__.Commands.ExternalDiff, _common__WEBPACK_IMPORTED_MODULE_7__.Commands.ExternalDiffAll]);
  }
  async preExecute(context, args) {
    var _a, _b;
    args = { ...args };
    if ((0,_common__WEBPACK_IMPORTED_MODULE_7__.isCommandContextViewNodeHasFileCommit)(context)) {
      const ref1 = _git_git__WEBPACK_IMPORTED_MODULE_2__.GitRevision.isUncommitted(context.node.commit.previousFileSha) ? "" : context.node.commit.previousFileSha;
      const ref2 = context.node.commit.isUncommitted ? "" : context.node.commit.sha;
      args.files = [
        {
          uri: _git_gitUri__WEBPACK_IMPORTED_MODULE_3__.GitUri.fromFile(context.node.file, (_a = context.node.file.repoPath) != null ? _a : context.node.repoPath),
          staged: context.node.commit.isUncommittedStaged || context.node.file.indexStatus != null,
          ref1,
          ref2
        }
      ];
      return this.execute(args);
    }
    if ((0,_common__WEBPACK_IMPORTED_MODULE_7__.isCommandContextViewNodeHasFileRefs)(context)) {
      args.files = [
        {
          uri: _git_gitUri__WEBPACK_IMPORTED_MODULE_3__.GitUri.fromFile(context.node.file, (_b = context.node.file.repoPath) != null ? _b : context.node.repoPath),
          staged: context.node.file.indexStatus != null,
          ref1: context.node.ref1,
          ref2: context.node.ref2
        }
      ];
      return this.execute(args);
    }
    if (args.files == null) {
      if (context.type === "scm-states") {
        args.files = context.scmResourceStates.map((r) => ({
          uri: r.resourceUri,
          staged: r.resourceGroupType === 1
        }));
      } else if (context.type === "scm-groups") {
        args.files = _system__WEBPACK_IMPORTED_MODULE_6__.Arrays.filterMap(context.scmResourceGroups[0].resourceStates, (r) => this.isModified(r) ? {
          uri: r.resourceUri,
          staged: r.resourceGroupType === 1
        } : void 0);
      }
    }
    if (context.command === _common__WEBPACK_IMPORTED_MODULE_7__.Commands.ExternalDiffAll) {
      if (args.files == null) {
        const repoPath = await (0,_common__WEBPACK_IMPORTED_MODULE_7__.getRepoPathOrPrompt)("Open All Changes (difftool)");
        if (!repoPath)
          return void 0;
        const status = await _container__WEBPACK_IMPORTED_MODULE_1__.Container.git.getStatusForRepo(repoPath);
        if (status == null) {
          return vscode__WEBPACK_IMPORTED_MODULE_0__.window.showInformationMessage("The repository doesn't have any changes");
        }
        args.files = [];
        for (const file of status.files) {
          if (file.indexStatus === "M") {
            args.files.push({ uri: file.uri, staged: true });
          }
          if (file.workingTreeStatus === "M") {
            args.files.push({ uri: file.uri, staged: false });
          }
        }
      }
    }
    return this.execute(args);
  }
  isModified(resource) {
    const status = resource.type;
    return status === 15 || status === 0 || status === 5;
  }
  async execute(args) {
    args = { ...args };
    try {
      let repoPath;
      if (args.files == null) {
        const editor = vscode__WEBPACK_IMPORTED_MODULE_0__.window.activeTextEditor;
        if (editor == null)
          return;
        repoPath = await _container__WEBPACK_IMPORTED_MODULE_1__.Container.git.getRepoPathOrActive(void 0, editor);
        if (!repoPath)
          return;
        const uri = editor.document.uri;
        const status = await _container__WEBPACK_IMPORTED_MODULE_1__.Container.git.getStatusForFile(repoPath, uri.fsPath);
        if (status == null) {
          void vscode__WEBPACK_IMPORTED_MODULE_0__.window.showInformationMessage("The current file doesn't have any changes");
          return;
        }
        args.files = [];
        if (status.indexStatus === "M") {
          args.files.push({ uri: status.uri, staged: true });
        }
        if (status.workingTreeStatus === "M") {
          args.files.push({ uri: status.uri, staged: false });
        }
      } else {
        repoPath = await _container__WEBPACK_IMPORTED_MODULE_1__.Container.git.getRepoPath(args.files[0].uri.fsPath);
        if (!repoPath)
          return;
      }
      const tool = _container__WEBPACK_IMPORTED_MODULE_1__.Container.config.advanced.externalDiffTool || await _container__WEBPACK_IMPORTED_MODULE_1__.Container.git.getDiffTool(repoPath);
      if (!tool) {
        const viewDocs = "View Git Docs";
        const result = await vscode__WEBPACK_IMPORTED_MODULE_0__.window.showWarningMessage("Unable to open changes because no Git diff tool is configured", viewDocs);
        if (result === viewDocs) {
          void vscode__WEBPACK_IMPORTED_MODULE_0__.env.openExternal(vscode__WEBPACK_IMPORTED_MODULE_0__.Uri.parse("https://git-scm.com/docs/git-config#Documentation/git-config.txt-difftool"));
        }
        return;
      }
      for (const file of args.files) {
        void _container__WEBPACK_IMPORTED_MODULE_1__.Container.git.openDiffTool(repoPath, file.uri, {
          ref1: file.ref1,
          ref2: file.ref2,
          staged: file.staged,
          tool
        });
      }
    } catch (ex) {
      _logger__WEBPACK_IMPORTED_MODULE_4__.Logger.error(ex, "ExternalDiffCommand");
      void _messages__WEBPACK_IMPORTED_MODULE_5__.Messages.showGenericErrorMessage("Unable to open changes in diff tool");
    }
  }
};
ExternalDiffCommand = __decorateClass([
  (0,_common__WEBPACK_IMPORTED_MODULE_7__.command)()
], ExternalDiffCommand);


/***/ }),

/***/ "./src/commands/gitCommands.actions.ts":
/*!*********************************************!*\
  !*** ./src/commands/gitCommands.actions.ts ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "executeGitCommand": () => (/* binding */ executeGitCommand),
/* harmony export */   "GitActions": () => (/* binding */ GitActions)
/* harmony export */ });
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _commands__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../commands */ "./src/commands.ts");
/* harmony import */ var _configuration__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../configuration */ "./src/configuration.ts");
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../container */ "./src/container.ts");
/* harmony import */ var _git_git__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../git/git */ "./src/git/git.ts");
/* harmony import */ var _git_gitUri__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../git/gitUri */ "./src/git/gitUri.ts");
/* harmony import */ var _quickpicks__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../quickpicks */ "./src/quickpicks.ts");







async function executeGitCommand(args) {
  void await (0,_commands__WEBPACK_IMPORTED_MODULE_1__.executeCommand)(_commands__WEBPACK_IMPORTED_MODULE_1__.Commands.GitCommands, args);
}
async function ensureRepo(repo) {
  return typeof repo === "string" ? await _container__WEBPACK_IMPORTED_MODULE_3__.Container.git.getRepository(repo) : repo;
}
var GitActions;
(function(GitActions2) {
  async function browseAtRevision(uri, options) {
    void await (0,_commands__WEBPACK_IMPORTED_MODULE_1__.executeEditorCommand)(_commands__WEBPACK_IMPORTED_MODULE_1__.Commands.BrowseRepoAtRevision, void 0, {
      uri,
      before: options == null ? void 0 : options.before,
      openInNewWindow: options == null ? void 0 : options.openInNewWindow
    });
  }
  GitActions2.browseAtRevision = browseAtRevision;
  function cherryPick(repo, refs) {
    return executeGitCommand({
      command: "cherry-pick",
      state: { repo, references: refs }
    });
  }
  GitActions2.cherryPick = cherryPick;
  function fetch(repos, ref) {
    return executeGitCommand({ command: "fetch", state: { repos, reference: ref } });
  }
  GitActions2.fetch = fetch;
  function merge(repo, ref) {
    return executeGitCommand({ command: "merge", state: { repo, reference: ref } });
  }
  GitActions2.merge = merge;
  function pull(repos, ref) {
    return executeGitCommand({ command: "pull", state: { repos, reference: ref } });
  }
  GitActions2.pull = pull;
  function push(repos, force, ref) {
    return executeGitCommand({
      command: "push",
      state: { repos, flags: force ? ["--force"] : [], reference: ref }
    });
  }
  GitActions2.push = push;
  function rebase(repo, ref, interactive = true) {
    return executeGitCommand({
      command: "rebase",
      state: { repo, reference: ref, flags: interactive ? ["--interactive"] : [] }
    });
  }
  GitActions2.rebase = rebase;
  function reset(repo, ref, flags) {
    return executeGitCommand({
      command: "reset",
      confirm: flags == null || flags.includes("--hard"),
      state: { repo, reference: ref, flags }
    });
  }
  GitActions2.reset = reset;
  function revert(repo, refs) {
    return executeGitCommand({
      command: "revert",
      state: { repo, references: refs }
    });
  }
  GitActions2.revert = revert;
  function switchTo(repos, ref) {
    return executeGitCommand({
      command: "switch",
      state: { repos, reference: ref }
    });
  }
  GitActions2.switchTo = switchTo;
  let Branch;
  (function(Branch2) {
    function create(repo, ref, name) {
      return executeGitCommand({
        command: "branch",
        state: {
          subcommand: "create",
          repo,
          reference: ref,
          name
        }
      });
    }
    Branch2.create = create;
    function remove(repo, refs) {
      return executeGitCommand({
        command: "branch",
        state: {
          subcommand: "delete",
          repo,
          references: refs
        }
      });
    }
    Branch2.remove = remove;
    function rename(repo, ref, name) {
      return executeGitCommand({
        command: "branch",
        state: {
          subcommand: "rename",
          repo,
          reference: ref,
          name
        }
      });
    }
    Branch2.rename = rename;
    async function reveal(branch, options) {
      if (!_configuration__WEBPACK_IMPORTED_MODULE_2__.configuration.get(`views.${branch.remote ? "remotes" : "branches"}.reveal`) || _container__WEBPACK_IMPORTED_MODULE_3__.Container.repositoriesView.visible && !(branch.remote ? _container__WEBPACK_IMPORTED_MODULE_3__.Container.remotesView.visible : _container__WEBPACK_IMPORTED_MODULE_3__.Container.branchesView.visible)) {
        return _container__WEBPACK_IMPORTED_MODULE_3__.Container.repositoriesView.revealBranch(branch, options);
      }
      let node;
      if (branch.remote) {
        node = await _container__WEBPACK_IMPORTED_MODULE_3__.Container.remotesView.revealBranch(branch, options);
      } else {
        node = await _container__WEBPACK_IMPORTED_MODULE_3__.Container.branchesView.revealBranch(branch, options);
      }
      return node;
    }
    Branch2.reveal = reveal;
  })(Branch = GitActions2.Branch || (GitActions2.Branch = {}));
  let Commit;
  (function(Commit2) {
    async function applyChanges(file, ref1, ref2) {
      void await GitActions2.Commit.openFile(file, ref1, { preserveFocus: true, preview: false });
      void await _container__WEBPACK_IMPORTED_MODULE_3__.Container.git.applyChangesToWorkingFile(_git_gitUri__WEBPACK_IMPORTED_MODULE_5__.GitUri.fromFile(file, ref1.repoPath, ref1.ref), ref1.ref, ref2 == null ? void 0 : ref2.ref);
    }
    Commit2.applyChanges = applyChanges;
    async function copyIdToClipboard(ref) {
      void await vscode__WEBPACK_IMPORTED_MODULE_0__.env.clipboard.writeText(ref.ref);
    }
    Commit2.copyIdToClipboard = copyIdToClipboard;
    async function copyMessageToClipboard(ref) {
      let message;
      if (_git_git__WEBPACK_IMPORTED_MODULE_4__.GitLogCommit.is(ref)) {
        message = ref.message;
      } else {
        const commit = await _container__WEBPACK_IMPORTED_MODULE_3__.Container.git.getCommit(ref.repoPath, ref.ref);
        if (commit == null)
          return;
        message = commit.message;
      }
      void await vscode__WEBPACK_IMPORTED_MODULE_0__.env.clipboard.writeText(message);
    }
    Commit2.copyMessageToClipboard = copyMessageToClipboard;
    async function openAllChanges(commitOrFiles, refsOrOptions, options) {
      let files;
      let refs;
      if (_git_git__WEBPACK_IMPORTED_MODULE_4__.GitLogCommit.is(commitOrFiles)) {
        files = commitOrFiles.files;
        refs = {
          repoPath: commitOrFiles.repoPath,
          ref1: commitOrFiles.previousSha != null ? commitOrFiles.previousSha : _git_git__WEBPACK_IMPORTED_MODULE_4__.GitRevision.deletedOrMissing,
          ref2: commitOrFiles.sha
        };
        options = refsOrOptions;
      } else {
        files = commitOrFiles;
        refs = refsOrOptions;
      }
      if (files.length > 10) {
        const result = await vscode__WEBPACK_IMPORTED_MODULE_0__.window.showWarningMessage(`Are your sure you want to open the changes for all ${files.length} files?`, { title: "Yes" }, { title: "No", isCloseAffordance: true });
        if (result == null || result.title === "No")
          return;
      }
      options = { preserveFocus: true, preview: false, ...options };
      for (const file of files) {
        await openChanges(file, refs, options);
      }
    }
    Commit2.openAllChanges = openAllChanges;
    async function openAllChangesWithDiffTool(commitOrFiles, ref) {
      let files;
      if (_git_git__WEBPACK_IMPORTED_MODULE_4__.GitLogCommit.is(commitOrFiles)) {
        files = commitOrFiles.files;
        ref = {
          repoPath: commitOrFiles.repoPath,
          ref: commitOrFiles.sha
        };
      } else {
        files = commitOrFiles;
      }
      if (files.length > 10) {
        const result = await vscode__WEBPACK_IMPORTED_MODULE_0__.window.showWarningMessage(`Are your sure you want to open the changes for all ${files.length} files?`, { title: "Yes" }, { title: "No", isCloseAffordance: true });
        if (result == null || result.title === "No")
          return;
      }
      for (const file of files) {
        void openChangesWithDiffTool(file, ref);
      }
    }
    Commit2.openAllChangesWithDiffTool = openAllChangesWithDiffTool;
    async function openAllChangesWithWorking(commitOrFiles, refOrOptions, options) {
      let files;
      let ref;
      if (_git_git__WEBPACK_IMPORTED_MODULE_4__.GitLogCommit.is(commitOrFiles)) {
        files = commitOrFiles.files;
        ref = {
          repoPath: commitOrFiles.repoPath,
          ref: commitOrFiles.sha
        };
        options = refOrOptions;
      } else {
        files = commitOrFiles;
        ref = refOrOptions;
      }
      if (files.length > 10) {
        const result = await vscode__WEBPACK_IMPORTED_MODULE_0__.window.showWarningMessage(`Are your sure you want to open the changes for all ${files.length} files?`, { title: "Yes" }, { title: "No", isCloseAffordance: true });
        if (result == null || result.title === "No")
          return;
      }
      options = { preserveFocus: true, preview: false, ...options };
      for (const file of files) {
        void await openChangesWithWorking(file, ref, options);
      }
    }
    Commit2.openAllChangesWithWorking = openAllChangesWithWorking;
    async function openChanges(file, commitOrRefs, options) {
      if (typeof file === "string") {
        if (!_git_git__WEBPACK_IMPORTED_MODULE_4__.GitLogCommit.is(commitOrRefs))
          throw new Error("Invalid arguments");
        const f = commitOrRefs.findFile(file);
        if (f == null)
          throw new Error("Invalid arguments");
        file = f;
      }
      if (file.status === "A")
        return;
      const refs = _git_git__WEBPACK_IMPORTED_MODULE_4__.GitLogCommit.is(commitOrRefs) ? {
        repoPath: commitOrRefs.repoPath,
        ref1: commitOrRefs.previousSha != null ? commitOrRefs.previousSha : _git_git__WEBPACK_IMPORTED_MODULE_4__.GitRevision.deletedOrMissing,
        ref2: commitOrRefs.sha
      } : commitOrRefs;
      options = { preserveFocus: true, preview: false, ...options };
      const uri1 = _git_gitUri__WEBPACK_IMPORTED_MODULE_5__.GitUri.fromFile(file, refs.repoPath);
      const uri2 = file.status === "R" || file.status === "C" ? _git_gitUri__WEBPACK_IMPORTED_MODULE_5__.GitUri.fromFile(file, refs.repoPath, refs.ref2, true) : uri1;
      void await (0,_commands__WEBPACK_IMPORTED_MODULE_1__.executeCommand)(_commands__WEBPACK_IMPORTED_MODULE_1__.Commands.DiffWith, {
        repoPath: refs.repoPath,
        lhs: { uri: uri1, sha: refs.ref1 },
        rhs: { uri: uri2, sha: refs.ref2 },
        showOptions: options
      });
    }
    Commit2.openChanges = openChanges;
    async function openChangesWithDiffTool(file, commitOrRef, tool) {
      var _a;
      if (typeof file === "string") {
        if (!_git_git__WEBPACK_IMPORTED_MODULE_4__.GitLogCommit.is(commitOrRef))
          throw new Error("Invalid arguments");
        const f = commitOrRef.findFile(file);
        if (f == null)
          throw new Error("Invalid arguments");
        file = f;
      }
      return _container__WEBPACK_IMPORTED_MODULE_3__.Container.git.openDiffTool(commitOrRef.repoPath, _git_gitUri__WEBPACK_IMPORTED_MODULE_5__.GitUri.fromFile(file, (_a = file.repoPath) != null ? _a : commitOrRef.repoPath), {
        ref1: _git_git__WEBPACK_IMPORTED_MODULE_4__.GitRevision.isUncommitted(commitOrRef.ref) ? "" : `${commitOrRef.ref}^`,
        ref2: _git_git__WEBPACK_IMPORTED_MODULE_4__.GitRevision.isUncommitted(commitOrRef.ref) ? "" : commitOrRef.ref,
        staged: _git_git__WEBPACK_IMPORTED_MODULE_4__.GitRevision.isUncommittedStaged(commitOrRef.ref) || file.indexStatus != null,
        tool
      });
    }
    Commit2.openChangesWithDiffTool = openChangesWithDiffTool;
    async function openChangesWithWorking(file, commitOrRef, options) {
      if (typeof file === "string") {
        if (!_git_git__WEBPACK_IMPORTED_MODULE_4__.GitLogCommit.is(commitOrRef))
          throw new Error("Invalid arguments");
        const f = commitOrRef.files.find((f2) => f2.fileName === file);
        if (f == null)
          throw new Error("Invalid arguments");
        file = f;
      }
      if (file.status === "D")
        return;
      let ref;
      if (_git_git__WEBPACK_IMPORTED_MODULE_4__.GitLogCommit.is(commitOrRef)) {
        ref = {
          repoPath: commitOrRef.repoPath,
          ref: commitOrRef.sha
        };
      } else {
        ref = commitOrRef;
      }
      options = { preserveFocus: true, preview: false, ...options };
      void await (0,_commands__WEBPACK_IMPORTED_MODULE_1__.executeEditorCommand)(_commands__WEBPACK_IMPORTED_MODULE_1__.Commands.DiffWithWorking, void 0, {
        uri: _git_gitUri__WEBPACK_IMPORTED_MODULE_5__.GitUri.fromFile(file, ref.repoPath, ref.ref),
        showOptions: options
      });
    }
    Commit2.openChangesWithWorking = openChangesWithWorking;
    async function openDirectoryCompare(repoPath, ref, ref2, tool) {
      return _container__WEBPACK_IMPORTED_MODULE_3__.Container.git.openDirectoryCompare(repoPath, ref, ref2, tool);
    }
    Commit2.openDirectoryCompare = openDirectoryCompare;
    async function openDirectoryCompareWithPrevious(ref) {
      return openDirectoryCompare(ref.repoPath, ref.ref, `${ref.ref}^`);
    }
    Commit2.openDirectoryCompareWithPrevious = openDirectoryCompareWithPrevious;
    async function openDirectoryCompareWithWorking(ref) {
      return openDirectoryCompare(ref.repoPath, ref.ref, void 0);
    }
    Commit2.openDirectoryCompareWithWorking = openDirectoryCompareWithWorking;
    async function openFile(fileOrUri, refOrOptions, options) {
      let uri;
      if (fileOrUri instanceof vscode__WEBPACK_IMPORTED_MODULE_0__.Uri) {
        uri = fileOrUri;
        options = refOrOptions;
      } else {
        const ref = refOrOptions;
        uri = _git_gitUri__WEBPACK_IMPORTED_MODULE_5__.GitUri.fromFile(fileOrUri, ref.repoPath, ref.ref);
      }
      options = { preserveFocus: true, preview: false, ...options };
      void await (0,_commands__WEBPACK_IMPORTED_MODULE_1__.executeEditorCommand)(_commands__WEBPACK_IMPORTED_MODULE_1__.Commands.OpenWorkingFile, void 0, {
        uri,
        showOptions: options
      });
    }
    Commit2.openFile = openFile;
    async function openFileAtRevision(fileOrRevisionUri, commitOrOptions, options) {
      let uri;
      if (fileOrRevisionUri instanceof vscode__WEBPACK_IMPORTED_MODULE_0__.Uri) {
        if (_git_git__WEBPACK_IMPORTED_MODULE_4__.GitLogCommit.is(commitOrOptions))
          throw new Error("Invalid arguments");
        uri = fileOrRevisionUri;
        options = commitOrOptions;
      } else {
        if (!_git_git__WEBPACK_IMPORTED_MODULE_4__.GitLogCommit.is(commitOrOptions))
          throw new Error("Invalid arguments");
        const commit = commitOrOptions;
        let file;
        if (typeof fileOrRevisionUri === "string") {
          const f = commit.findFile(fileOrRevisionUri);
          if (f == null)
            throw new Error("Invalid arguments");
          file = f;
        } else {
          file = fileOrRevisionUri;
        }
        uri = _git_gitUri__WEBPACK_IMPORTED_MODULE_5__.GitUri.toRevisionUri(file.status === "D" ? commit.previousFileSha : commit.sha, file, commit.repoPath);
      }
      const { annotationType, line, ...opts } = {
        preserveFocus: true,
        preview: false,
        ...options
      };
      if (line != null && line !== 0) {
        opts.selection = new vscode__WEBPACK_IMPORTED_MODULE_0__.Range(line, 0, line, 0);
      }
      const editor = await (0,_commands__WEBPACK_IMPORTED_MODULE_1__.findOrOpenEditor)(uri, opts);
      if (annotationType != null && editor != null) {
        void await _container__WEBPACK_IMPORTED_MODULE_3__.Container.fileAnnotations.show(editor, annotationType, { selection: { line } });
      }
    }
    Commit2.openFileAtRevision = openFileAtRevision;
    async function openFiles(commitOrFiles, repoPath, ref) {
      let files;
      if (_git_git__WEBPACK_IMPORTED_MODULE_4__.GitLogCommit.is(commitOrFiles)) {
        files = commitOrFiles.files;
        repoPath = commitOrFiles.repoPath;
        ref = commitOrFiles.sha;
      } else {
        files = commitOrFiles;
      }
      if (files.length > 10) {
        const result = await vscode__WEBPACK_IMPORTED_MODULE_0__.window.showWarningMessage(`Are your sure you want to open all ${files.length} files?`, { title: "Yes" }, { title: "No", isCloseAffordance: true });
        if (result == null || result.title === "No")
          return;
      }
      const uris = (await Promise.all(files.map((file) => _container__WEBPACK_IMPORTED_MODULE_3__.Container.git.getWorkingUri(repoPath, _git_gitUri__WEBPACK_IMPORTED_MODULE_5__.GitUri.fromFile(file, repoPath, ref))))).filter((u) => Boolean(u));
      (0,_commands__WEBPACK_IMPORTED_MODULE_1__.findOrOpenEditors)(uris);
    }
    Commit2.openFiles = openFiles;
    async function openFilesAtRevision(commitOrFiles, repoPath, ref1, ref2) {
      let files;
      if (_git_git__WEBPACK_IMPORTED_MODULE_4__.GitLogCommit.is(commitOrFiles)) {
        files = commitOrFiles.files;
        repoPath = commitOrFiles.repoPath;
        ref1 = commitOrFiles.sha;
        ref2 = commitOrFiles.previousFileSha;
      } else {
        files = commitOrFiles;
      }
      if (files.length > 10) {
        const result = await vscode__WEBPACK_IMPORTED_MODULE_0__.window.showWarningMessage(`Are your sure you want to open all ${files.length} file revisions?`, { title: "Yes" }, { title: "No", isCloseAffordance: true });
        if (result == null || result.title === "No")
          return;
      }
      (0,_commands__WEBPACK_IMPORTED_MODULE_1__.findOrOpenEditors)(files.map((file) => _git_gitUri__WEBPACK_IMPORTED_MODULE_5__.GitUri.toRevisionUri(file.status === "D" ? ref2 : ref1, file, repoPath)));
    }
    Commit2.openFilesAtRevision = openFilesAtRevision;
    async function restoreFile(file, ref) {
      void await _container__WEBPACK_IMPORTED_MODULE_3__.Container.git.checkout(ref.repoPath, ref.ref, {
        fileName: typeof file === "string" ? file : file.fileName
      });
    }
    Commit2.restoreFile = restoreFile;
    async function reveal(commit, options) {
      if (!_configuration__WEBPACK_IMPORTED_MODULE_2__.configuration.get("views.commits.reveal") || _container__WEBPACK_IMPORTED_MODULE_3__.Container.repositoriesView.visible && !_container__WEBPACK_IMPORTED_MODULE_3__.Container.commitsView.visible) {
        return _container__WEBPACK_IMPORTED_MODULE_3__.Container.repositoriesView.revealCommit(commit, options);
      }
      let node = await _container__WEBPACK_IMPORTED_MODULE_3__.Container.commitsView.revealCommit(commit, options);
      if (node != null)
        return node;
      node = await _container__WEBPACK_IMPORTED_MODULE_3__.Container.branchesView.revealCommit(commit, options);
      if (node != null)
        return node;
      node = await _container__WEBPACK_IMPORTED_MODULE_3__.Container.remotesView.revealCommit(commit, options);
      if (node != null)
        return node;
      return void 0;
    }
    Commit2.reveal = reveal;
  })(Commit = GitActions2.Commit || (GitActions2.Commit = {}));
  let Contributor;
  (function(Contributor2) {
    function addAuthors(repo, contributors) {
      return executeGitCommand({
        command: "co-authors",
        state: { repo, contributors }
      });
    }
    Contributor2.addAuthors = addAuthors;
  })(Contributor = GitActions2.Contributor || (GitActions2.Contributor = {}));
  let Tag;
  (function(Tag2) {
    function create(repo, ref, name) {
      return executeGitCommand({
        command: "tag",
        state: {
          subcommand: "create",
          repo,
          reference: ref,
          name
        }
      });
    }
    Tag2.create = create;
    function remove(repo, refs) {
      return executeGitCommand({
        command: "tag",
        state: {
          subcommand: "delete",
          repo,
          references: refs
        }
      });
    }
    Tag2.remove = remove;
    async function reveal(tag, options) {
      if (!_configuration__WEBPACK_IMPORTED_MODULE_2__.configuration.get("views.tags.reveal") || _container__WEBPACK_IMPORTED_MODULE_3__.Container.repositoriesView.visible && !_container__WEBPACK_IMPORTED_MODULE_3__.Container.tagsView.visible) {
        return _container__WEBPACK_IMPORTED_MODULE_3__.Container.repositoriesView.revealTag(tag, options);
      }
      const node = await _container__WEBPACK_IMPORTED_MODULE_3__.Container.tagsView.revealTag(tag, options);
      return node;
    }
    Tag2.reveal = reveal;
  })(Tag = GitActions2.Tag || (GitActions2.Tag = {}));
  let Remote;
  (function(Remote2) {
    async function add(repo) {
      if (repo == null) {
        repo = _container__WEBPACK_IMPORTED_MODULE_3__.Container.git.getHighlanderRepoPath();
        if (repo == null) {
          const pick = await _quickpicks__WEBPACK_IMPORTED_MODULE_6__.RepositoryPicker.show(void 0, "Choose a repository to add a remote to");
          repo = pick == null ? void 0 : pick.item;
          if (repo == null)
            return void 0;
        }
      }
      const name = await vscode__WEBPACK_IMPORTED_MODULE_0__.window.showInputBox({
        prompt: "Please provide a name for the remote",
        placeHolder: "Remote name",
        value: void 0,
        ignoreFocusOut: true
      });
      if (name == null || name.length === 0)
        return void 0;
      const url = await vscode__WEBPACK_IMPORTED_MODULE_0__.window.showInputBox({
        prompt: "Please provide the repository url for the remote",
        placeHolder: "Remote repository url",
        value: void 0,
        ignoreFocusOut: true
      });
      if (url == null || url.length === 0)
        return void 0;
      repo = await ensureRepo(repo);
      void await _container__WEBPACK_IMPORTED_MODULE_3__.Container.git.addRemote(repo.path, name, url);
      void await repo.fetch({ remote: name });
      return name;
    }
    Remote2.add = add;
    async function fetch2(repo, remote) {
      if (typeof repo === "string") {
        const r = await _container__WEBPACK_IMPORTED_MODULE_3__.Container.git.getRepository(repo);
        if (r == null)
          return;
        repo = r;
      }
      void await repo.fetch({ remote });
    }
    Remote2.fetch = fetch2;
    async function prune(repo, remote) {
      void await _container__WEBPACK_IMPORTED_MODULE_3__.Container.git.pruneRemote(typeof repo === "string" ? repo : repo.path, remote);
    }
    Remote2.prune = prune;
    async function reveal(remote, options) {
      const node = await _container__WEBPACK_IMPORTED_MODULE_3__.Container.remotesView.revealRemote(remote, options);
      return node;
    }
    Remote2.reveal = reveal;
  })(Remote = GitActions2.Remote || (GitActions2.Remote = {}));
  let Stash;
  (function(Stash2) {
    function apply(repo, ref) {
      return executeGitCommand({
        command: "stash",
        state: { subcommand: "apply", repo, reference: ref }
      });
    }
    Stash2.apply = apply;
    function drop(repo, ref) {
      return executeGitCommand({
        command: "stash",
        state: { subcommand: "drop", repo, reference: ref }
      });
    }
    Stash2.drop = drop;
    function pop(repo, ref) {
      return executeGitCommand({
        command: "stash",
        state: { subcommand: "pop", repo, reference: ref }
      });
    }
    Stash2.pop = pop;
    function push2(repo, uris, message, keepStaged = false) {
      return executeGitCommand({
        command: "stash",
        state: {
          subcommand: "push",
          repo,
          uris,
          message,
          flags: keepStaged ? ["--keep-index"] : void 0
        }
      });
    }
    Stash2.push = push2;
    async function reveal(stash, options) {
      if (!_configuration__WEBPACK_IMPORTED_MODULE_2__.configuration.get("views.stashes.reveal") || _container__WEBPACK_IMPORTED_MODULE_3__.Container.repositoriesView.visible && !_container__WEBPACK_IMPORTED_MODULE_3__.Container.stashesView.visible) {
        return _container__WEBPACK_IMPORTED_MODULE_3__.Container.repositoriesView.revealStash(stash, options);
      }
      const node = await _container__WEBPACK_IMPORTED_MODULE_3__.Container.stashesView.revealStash(stash, options);
      return node;
    }
    Stash2.reveal = reveal;
  })(Stash = GitActions2.Stash || (GitActions2.Stash = {}));
})(GitActions || (GitActions = {}));


/***/ }),

/***/ "./src/commands/gitCommands.ts":
/*!*************************************!*\
  !*** ./src/commands/gitCommands.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "GitActions": () => (/* reexport safe */ _gitCommands_actions__WEBPACK_IMPORTED_MODULE_26__.GitActions),
/* harmony export */   "executeGitCommand": () => (/* reexport safe */ _gitCommands_actions__WEBPACK_IMPORTED_MODULE_26__.executeGitCommand),
/* harmony export */   "GitCommandsCommand": () => (/* binding */ GitCommandsCommand)
/* harmony export */ });
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _configuration__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../configuration */ "./src/configuration.ts");
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../constants */ "./src/constants.ts");
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../container */ "./src/container.ts");
/* harmony import */ var _quickpicks__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../quickpicks */ "./src/quickpicks.ts");
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../system */ "./src/system.ts");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./common */ "./src/commands/common.ts");
/* harmony import */ var _git_branch__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./git/branch */ "./src/commands/git/branch.ts");
/* harmony import */ var _git_cherry_pick__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./git/cherry-pick */ "./src/commands/git/cherry-pick.ts");
/* harmony import */ var _git_coauthors__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./git/coauthors */ "./src/commands/git/coauthors.ts");
/* harmony import */ var _git_fetch__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./git/fetch */ "./src/commands/git/fetch.ts");
/* harmony import */ var _git_log__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./git/log */ "./src/commands/git/log.ts");
/* harmony import */ var _git_merge__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./git/merge */ "./src/commands/git/merge.ts");
/* harmony import */ var _git_pull__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./git/pull */ "./src/commands/git/pull.ts");
/* harmony import */ var _git_push__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./git/push */ "./src/commands/git/push.ts");
/* harmony import */ var _git_rebase__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./git/rebase */ "./src/commands/git/rebase.ts");
/* harmony import */ var _git_reset__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./git/reset */ "./src/commands/git/reset.ts");
/* harmony import */ var _git_revert__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./git/revert */ "./src/commands/git/revert.ts");
/* harmony import */ var _git_search__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./git/search */ "./src/commands/git/search.ts");
/* harmony import */ var _git_show__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./git/show */ "./src/commands/git/show.ts");
/* harmony import */ var _git_stash__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./git/stash */ "./src/commands/git/stash.ts");
/* harmony import */ var _git_status__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./git/status */ "./src/commands/git/status.ts");
/* harmony import */ var _git_switch__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./git/switch */ "./src/commands/git/switch.ts");
/* harmony import */ var _git_tag__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./git/tag */ "./src/commands/git/tag.ts");
/* harmony import */ var _quickCommand__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./quickCommand */ "./src/commands/quickCommand.ts");
/* harmony import */ var _quickCommand_buttons__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./quickCommand.buttons */ "./src/commands/quickCommand.buttons.ts");
/* harmony import */ var _gitCommands_actions__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./gitCommands.actions */ "./src/commands/gitCommands.actions.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};



























const sanitizeLabel = /\$\(.+?\)|\s/g;
const showLoadingSymbol = Symbol("ShowLoading");
function* nullSteps() {
}
let GitCommandsCommand = class extends _common__WEBPACK_IMPORTED_MODULE_6__.Command {
  constructor() {
    super([
      _common__WEBPACK_IMPORTED_MODULE_6__.Commands.GitCommands,
      _common__WEBPACK_IMPORTED_MODULE_6__.Commands.GitCommandsBranch,
      _common__WEBPACK_IMPORTED_MODULE_6__.Commands.GitCommandsCherryPick,
      _common__WEBPACK_IMPORTED_MODULE_6__.Commands.GitCommandsMerge,
      _common__WEBPACK_IMPORTED_MODULE_6__.Commands.GitCommandsRebase,
      _common__WEBPACK_IMPORTED_MODULE_6__.Commands.GitCommandsReset,
      _common__WEBPACK_IMPORTED_MODULE_6__.Commands.GitCommandsRevert,
      _common__WEBPACK_IMPORTED_MODULE_6__.Commands.GitCommandsSwitch,
      _common__WEBPACK_IMPORTED_MODULE_6__.Commands.GitCommandsTag
    ]);
    __publicField(this, "startedWith", "menu");
  }
  static getSteps(args, pickedVia) {
    const commandsStep = new PickCommandStep(args);
    const command2 = commandsStep.find(args.command);
    if (command2 == null)
      return nullSteps();
    commandsStep.setCommand(command2, pickedVia);
    return command2.executeSteps();
  }
  preExecute(context, args) {
    switch (context.command) {
      case _common__WEBPACK_IMPORTED_MODULE_6__.Commands.GitCommandsBranch:
        args = { command: "branch" };
        break;
      case _common__WEBPACK_IMPORTED_MODULE_6__.Commands.GitCommandsCherryPick:
        args = { command: "cherry-pick" };
        break;
      case _common__WEBPACK_IMPORTED_MODULE_6__.Commands.GitCommandsMerge:
        args = { command: "merge" };
        break;
      case _common__WEBPACK_IMPORTED_MODULE_6__.Commands.GitCommandsRebase:
        args = { command: "rebase" };
        break;
      case _common__WEBPACK_IMPORTED_MODULE_6__.Commands.GitCommandsReset:
        args = { command: "reset" };
        break;
      case _common__WEBPACK_IMPORTED_MODULE_6__.Commands.GitCommandsRevert:
        args = { command: "revert" };
        break;
      case _common__WEBPACK_IMPORTED_MODULE_6__.Commands.GitCommandsSwitch:
        args = { command: "switch" };
        break;
      case _common__WEBPACK_IMPORTED_MODULE_6__.Commands.GitCommandsTag:
        args = { command: "tag" };
        break;
    }
    return this.execute(args);
  }
  async execute(args) {
    const commandsStep = new PickCommandStep(args);
    const command2 = (args == null ? void 0 : args.command) != null ? commandsStep.find(args.command) : void 0;
    this.startedWith = command2 != null ? "command" : "menu";
    let ignoreFocusOut;
    let step;
    if (command2 == null) {
      step = commandsStep;
    } else {
      step = await this.showLoadingIfNeeded(command2, this.getCommandStep(command2, commandsStep));
    }
    if ((step == null ? void 0 : step.ignoreFocusOut) === true) {
      step.ignoreFocusOut = void 0;
    }
    while (step != null) {
      if (step === commandsStep && command2 != null) {
        step = await this.getCommandStep(command2, commandsStep);
        continue;
      }
      if (ignoreFocusOut && step.ignoreFocusOut == null) {
        step.ignoreFocusOut = true;
      }
      if ((0,_quickCommand__WEBPACK_IMPORTED_MODULE_24__.isQuickPickStep)(step)) {
        step = await this.showPickStep(step, commandsStep);
        if ((step == null ? void 0 : step.ignoreFocusOut) === true) {
          ignoreFocusOut = true;
        }
        continue;
      }
      if ((0,_quickCommand__WEBPACK_IMPORTED_MODULE_24__.isQuickInputStep)(step)) {
        step = await this.showInputStep(step, commandsStep);
        if ((step == null ? void 0 : step.ignoreFocusOut) === true) {
          ignoreFocusOut = true;
        }
        continue;
      }
      break;
    }
  }
  async showLoadingIfNeeded(command2, stepPromise) {
    const stepOrTimeout = await Promise.race([stepPromise, new Promise((resolve) => setTimeout(() => resolve(showLoadingSymbol), 250))]);
    if (stepOrTimeout !== showLoadingSymbol) {
      return stepOrTimeout;
    }
    const quickpick = vscode__WEBPACK_IMPORTED_MODULE_0__.window.createQuickPick();
    quickpick.ignoreFocusOut = false;
    const disposables = [];
    let step;
    try {
      return await new Promise(async (resolve) => {
        disposables.push(quickpick.onDidHide(() => resolve(step)));
        quickpick.title = command2.title;
        quickpick.placeholder = "Loading...";
        quickpick.busy = true;
        quickpick.enabled = false;
        quickpick.show();
        step = await stepPromise;
        quickpick.hide();
      });
    } finally {
      quickpick.dispose();
      disposables.forEach((d) => d.dispose());
    }
  }
  getButtons(step, command2) {
    const buttons = [];
    if (step != null) {
      if (step.buttons != null) {
        buttons.push(...step.buttons);
        return buttons;
      }
      buttons.push(vscode__WEBPACK_IMPORTED_MODULE_0__.QuickInputButtons.Back);
      if (step.additionalButtons != null) {
        buttons.push(...step.additionalButtons);
      }
    }
    if (command2 == null ? void 0 : command2.canConfirm) {
      if (command2.canSkipConfirm) {
        const willConfirmToggle = new _quickCommand_buttons__WEBPACK_IMPORTED_MODULE_25__.QuickCommandButtons.WillConfirmToggle(command2.confirm(), async () => {
          var _a;
          if ((command2 == null ? void 0 : command2.skipConfirmKey) == null)
            return;
          const skipConfirmations = (_a = _configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.get("gitCommands.skipConfirmations")) != null ? _a : [];
          const index = skipConfirmations.indexOf(command2.skipConfirmKey);
          if (index !== -1) {
            skipConfirmations.splice(index, 1);
          } else {
            skipConfirmations.push(command2.skipConfirmKey);
          }
          void await _configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.updateEffective("gitCommands.skipConfirmations", skipConfirmations);
        });
        buttons.push(willConfirmToggle);
      } else {
        buttons.push(_quickCommand_buttons__WEBPACK_IMPORTED_MODULE_25__.QuickCommandButtons.WillConfirmForced);
      }
    }
    return buttons;
  }
  async getCommandStep(command2, commandsStep) {
    commandsStep.setCommand(command2, "command");
    const next = await command2.next();
    if (next.done)
      return void 0;
    return next.value;
  }
  async nextStep(quickInput, command2, value) {
    quickInput.busy = true;
    const next = await command2.next(value);
    if (next.done)
      return void 0;
    quickInput.value = "";
    return next.value;
  }
  async showInputStep(step, commandsStep) {
    var _a;
    const input = vscode__WEBPACK_IMPORTED_MODULE_0__.window.createInputBox();
    input.ignoreFocusOut = !_configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.get("gitCommands.closeOnFocusOut") ? true : (_a = step.ignoreFocusOut) != null ? _a : false;
    const disposables = [];
    try {
      return await new Promise((resolve) => {
        const goBack = async () => {
          var _a2;
          input.value = "";
          if (commandsStep.command != null) {
            input.busy = true;
            resolve((_a2 = await commandsStep.command.previous()) != null ? _a2 : commandsStep);
          }
        };
        const mapping = {
          left: { onDidPressKey: goBack }
        };
        if (step.onDidPressKey != null && step.keys != null && step.keys.length !== 0) {
          for (const key of step.keys) {
            mapping[key] = {
              onDidPressKey: (key2) => step.onDidPressKey(input, key2)
            };
          }
        }
        const scope = _container__WEBPACK_IMPORTED_MODULE_3__.Container.keyboard.createScope(mapping);
        void scope.start();
        disposables.push(scope, input.onDidHide(() => resolve(void 0)), input.onDidTriggerButton(async (e) => {
          var _a2, _b;
          if (e === vscode__WEBPACK_IMPORTED_MODULE_0__.QuickInputButtons.Back) {
            void goBack();
            return;
          }
          if (e === _quickCommand_buttons__WEBPACK_IMPORTED_MODULE_25__.QuickCommandButtons.WillConfirmForced)
            return;
          if (e instanceof _quickCommand_buttons__WEBPACK_IMPORTED_MODULE_25__.ToggleQuickInputButton && e.onDidClick != null) {
            const result = e.onDidClick(input);
            input.buttons = this.getButtons(step, commandsStep.command);
            if (await result === true) {
              resolve((_a2 = commandsStep.command) == null ? void 0 : _a2.retry());
              return;
            }
            if (_system__WEBPACK_IMPORTED_MODULE_5__.Promises.is(result)) {
              input.buttons = this.getButtons(step, commandsStep.command);
            }
            return;
          }
          if (step.onDidClickButton != null) {
            const result = step.onDidClickButton(input, e);
            input.buttons = this.getButtons(step, commandsStep.command);
            if (await result === true) {
              resolve((_b = commandsStep.command) == null ? void 0 : _b.retry());
            }
          }
        }), input.onDidChangeValue(async (e) => {
          if (scope != null) {
            if (e.length !== 0) {
              await scope.pause(["left", "right"]);
            } else {
              await scope.resume();
            }
          }
          if (step.validate == null)
            return;
          const [, message] = await step.validate(e);
          input.validationMessage = message;
        }), input.onDidAccept(async () => {
          resolve(await this.nextStep(input, commandsStep.command, input.value));
        }));
        input.buttons = this.getButtons(step, commandsStep.command);
        input.title = step.title;
        input.placeholder = step.placeholder;
        input.prompt = step.prompt;
        if (step.value != null) {
          input.value = step.value;
        }
        if (commandsStep.command != null && step === commandsStep) {
          commandsStep.setCommand(void 0, "menu");
        }
        input.show();
        if (step.value != null) {
          input._onDidChangeValueEmitter.fire(input.value);
        }
      });
    } finally {
      input.dispose();
      disposables.forEach((d) => d.dispose());
    }
  }
  async showPickStep(step, commandsStep) {
    var _a;
    const originalIgnoreFocusOut = !_configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.get("gitCommands.closeOnFocusOut") ? true : (_a = step.ignoreFocusOut) != null ? _a : false;
    const originalStepIgnoreFocusOut = step.ignoreFocusOut;
    const quickpick = vscode__WEBPACK_IMPORTED_MODULE_0__.window.createQuickPick();
    quickpick.ignoreFocusOut = originalIgnoreFocusOut;
    const disposables = [];
    try {
      return await new Promise((resolve) => {
        var _a2, _b;
        async function goBack() {
          var _a3;
          quickpick.value = "";
          if (commandsStep.command != null) {
            quickpick.busy = true;
            resolve((_a3 = await commandsStep.command.previous()) != null ? _a3 : commandsStep);
          }
        }
        async function loadMore() {
          var _a3;
          if (step.onDidLoadMore == null)
            return;
          quickpick.busy = true;
          quickpick.enabled = false;
          try {
            const items = await ((_a3 = step.onDidLoadMore) == null ? void 0 : _a3.call(step, quickpick));
            let activeIndex = -1;
            if (quickpick.activeItems.length !== 0) {
              const active = quickpick.activeItems[0];
              activeIndex = quickpick.items.indexOf(active);
              if (_quickpicks__WEBPACK_IMPORTED_MODULE_4__.DirectiveQuickPickItem.is(active)) {
                activeIndex--;
              }
            }
            quickpick.items = step.items = items;
            if (activeIndex) {
              quickpick.activeItems = [quickpick.items[activeIndex]];
            }
          } finally {
            quickpick.busy = false;
            quickpick.enabled = true;
          }
        }
        const mapping = {
          left: { onDidPressKey: goBack }
        };
        if (step.onDidPressKey != null && step.keys != null && step.keys.length !== 0) {
          for (const key of step.keys) {
            mapping[key] = {
              onDidPressKey: (key2) => step.onDidPressKey(quickpick, key2)
            };
          }
        }
        const scope = _container__WEBPACK_IMPORTED_MODULE_3__.Container.keyboard.createScope(mapping);
        void scope.start();
        let overrideItems = false;
        disposables.push(scope, quickpick.onDidHide(() => resolve(void 0)), quickpick.onDidTriggerButton(async (e) => {
          var _a3, _b2;
          if (e === vscode__WEBPACK_IMPORTED_MODULE_0__.QuickInputButtons.Back) {
            void goBack();
            return;
          }
          if (e === _quickCommand_buttons__WEBPACK_IMPORTED_MODULE_25__.QuickCommandButtons.WillConfirmForced)
            return;
          if (e === _quickCommand_buttons__WEBPACK_IMPORTED_MODULE_25__.QuickCommandButtons.LoadMore) {
            void loadMore();
            return;
          }
          if (e instanceof _quickCommand_buttons__WEBPACK_IMPORTED_MODULE_25__.ToggleQuickInputButton && e.onDidClick != null) {
            let activeCommand;
            if (commandsStep.command == null && quickpick.activeItems.length !== 0) {
              const active = quickpick.activeItems[0];
              if (_quickCommand__WEBPACK_IMPORTED_MODULE_24__.QuickCommand.is(active)) {
                activeCommand = active;
              }
            }
            const result = e.onDidClick(quickpick);
            quickpick.buttons = this.getButtons(activeCommand != null ? activeCommand.value : step, activeCommand != null ? activeCommand : commandsStep.command);
            if (await result === true) {
              resolve((_a3 = commandsStep.command) == null ? void 0 : _a3.retry());
              return;
            }
            if (_system__WEBPACK_IMPORTED_MODULE_5__.Promises.is(result)) {
              quickpick.buttons = this.getButtons(activeCommand != null ? activeCommand.value : step, activeCommand != null ? activeCommand : commandsStep.command);
            }
            return;
          }
          if (step.onDidClickButton != null) {
            const result = step.onDidClickButton(quickpick, e);
            quickpick.buttons = this.getButtons(step, commandsStep.command);
            if (await result === true) {
              resolve((_b2 = commandsStep.command) == null ? void 0 : _b2.retry());
            }
          }
        }), quickpick.onDidChangeValue(async (e) => {
          if (scope != null) {
            if (e.length !== 0) {
              await scope.pause(["left", "right"]);
            } else {
              await scope.resume();
            }
          }
          if (step.onDidChangeValue != null) {
            const cancel = await step.onDidChangeValue(quickpick);
            if (cancel)
              return;
          }
          if (e.length !== 0 && !quickpick.ignoreFocusOut) {
            quickpick.ignoreFocusOut = true;
            step.ignoreFocusOut = true;
          } else if (e.length === 0 && quickpick.ignoreFocusOut && !originalIgnoreFocusOut) {
            quickpick.ignoreFocusOut = originalIgnoreFocusOut;
            step.ignoreFocusOut = originalStepIgnoreFocusOut;
          }
          if (!overrideItems) {
            if (quickpick.canSelectMany && e === " ") {
              quickpick.value = "";
              quickpick.selectedItems = quickpick.selectedItems.length === quickpick.items.length ? [] : quickpick.items;
              return;
            }
            if (e.endsWith(" ")) {
              if (quickpick.canSelectMany && quickpick.selectedItems.length !== 0) {
                return;
              }
              let items;
              if (commandsStep.command == null) {
                const command2 = commandsStep.find(quickpick.value.trim(), true);
                if (command2 == null)
                  return;
                commandsStep.setCommand(command2, this.startedWith);
              } else {
                const cmd = quickpick.value.trim().toLowerCase();
                const item = step.items.find((i) => i.label.replace(sanitizeLabel, "").toLowerCase() === cmd);
                if (item == null)
                  return;
                items = [item];
              }
              resolve(await this.nextStep(quickpick, commandsStep.command, items));
              return;
            }
          }
          if (!quickpick.canSelectMany && commandsStep.command != null && e.trim().length !== 0 && (overrideItems || quickpick.activeItems.length === 0)) {
            if (step.onValidateValue == null)
              return;
            overrideItems = await step.onValidateValue(quickpick, e.trim(), step.items);
          } else {
            overrideItems = false;
          }
          if (!overrideItems && quickpick.items.length !== step.items.length) {
            quickpick.items = step.items;
          }
        }), quickpick.onDidChangeActive(() => {
          if (commandsStep.command != null || quickpick.activeItems.length === 0)
            return;
          const command2 = quickpick.activeItems[0];
          if (!_quickCommand__WEBPACK_IMPORTED_MODULE_24__.QuickCommand.is(command2))
            return;
          quickpick.buttons = this.getButtons(void 0, command2);
        }), quickpick.onDidChangeSelection((e) => {
          if (!quickpick.canSelectMany)
            return;
          if (e.length !== 0 && !quickpick.ignoreFocusOut) {
            quickpick.ignoreFocusOut = true;
            step.ignoreFocusOut = true;
          } else if ((e == null ? void 0 : e.length) === 0 && quickpick.ignoreFocusOut && !originalIgnoreFocusOut) {
            quickpick.ignoreFocusOut = originalIgnoreFocusOut;
            step.ignoreFocusOut = originalStepIgnoreFocusOut;
          }
        }), quickpick.onDidAccept(async () => {
          let items = quickpick.selectedItems;
          if (items.length === 0) {
            if (!quickpick.canSelectMany || quickpick.activeItems.length === 0) {
              const value = quickpick.value.trim();
              if (value.length === 0 && !step.allowEmpty)
                return;
              if (step.onDidAccept == null) {
                if (step.allowEmpty) {
                  resolve(await this.nextStep(quickpick, commandsStep.command, []));
                }
                return;
              }
              quickpick.busy = true;
              if (await step.onDidAccept(quickpick)) {
                resolve(await this.nextStep(quickpick, commandsStep.command, value));
              }
              quickpick.busy = false;
              return;
            }
            items = quickpick.activeItems;
          }
          if (items.length === 1) {
            const [item] = items;
            if (_quickpicks__WEBPACK_IMPORTED_MODULE_4__.DirectiveQuickPickItem.is(item)) {
              switch (item.directive) {
                case _quickpicks__WEBPACK_IMPORTED_MODULE_4__.Directive.Cancel:
                  resolve(void 0);
                  return;
                case _quickpicks__WEBPACK_IMPORTED_MODULE_4__.Directive.Back:
                  void goBack();
                  return;
                case _quickpicks__WEBPACK_IMPORTED_MODULE_4__.Directive.LoadMore:
                  void loadMore();
                  return;
              }
            }
          }
          if (commandsStep.command == null) {
            const [command2] = items;
            if (!_quickCommand__WEBPACK_IMPORTED_MODULE_24__.QuickCommand.is(command2))
              return;
            commandsStep.setCommand(command2, this.startedWith);
          }
          if (!quickpick.canSelectMany) {
            if (step.onDidAccept != null) {
              quickpick.busy = true;
              const next = await step.onDidAccept(quickpick);
              quickpick.busy = false;
              if (!next)
                return;
            }
          }
          resolve(await this.nextStep(quickpick, commandsStep.command, items));
        }));
        quickpick.title = step.title;
        quickpick.placeholder = step.placeholder;
        quickpick.matchOnDescription = Boolean(step.matchOnDescription);
        quickpick.matchOnDetail = Boolean(step.matchOnDetail);
        quickpick.canSelectMany = Boolean(step.multiselect);
        quickpick.items = step.items;
        if (quickpick.canSelectMany) {
          quickpick.selectedItems = (_a2 = step.selectedItems) != null ? _a2 : quickpick.items.filter((i) => i.picked);
          quickpick.activeItems = quickpick.selectedItems;
        } else {
          quickpick.activeItems = (_b = step.selectedItems) != null ? _b : quickpick.items.filter((i) => i.picked);
        }
        if (commandsStep.command != null && step === commandsStep) {
          commandsStep.setCommand(void 0, "menu");
        }
        quickpick.buttons = this.getButtons(step, commandsStep.command);
        if (step.value != null) {
          quickpick.value = step.value;
        }
        quickpick.show();
        if (step.value != null) {
          quickpick._onDidChangeValueEmitter.fire(quickpick.value);
        }
      });
    } finally {
      quickpick.dispose();
      disposables.forEach((d) => d.dispose());
    }
  }
};
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.log)({ args: false, correlate: true, singleLine: true, timed: false })
], GitCommandsCommand.prototype, "execute", 1);
GitCommandsCommand = __decorateClass([
  (0,_common__WEBPACK_IMPORTED_MODULE_6__.command)()
], GitCommandsCommand);
class PickCommandStep {
  constructor(args) {
    __publicField(this, "buttons", []);
    __publicField(this, "hiddenItems");
    __publicField(this, "ignoreFocusOut", false);
    __publicField(this, "items");
    __publicField(this, "matchOnDescription", true);
    __publicField(this, "placeholder", "Choose a git command");
    __publicField(this, "title", "GitLens");
    __publicField(this, "_command");
    this.items = [
      new _git_branch__WEBPACK_IMPORTED_MODULE_7__.BranchGitCommand((args == null ? void 0 : args.command) === "branch" ? args : void 0),
      new _git_cherry_pick__WEBPACK_IMPORTED_MODULE_8__.CherryPickGitCommand((args == null ? void 0 : args.command) === "cherry-pick" ? args : void 0),
      new _git_coauthors__WEBPACK_IMPORTED_MODULE_9__.CoAuthorsGitCommand((args == null ? void 0 : args.command) === "co-authors" ? args : void 0),
      new _git_fetch__WEBPACK_IMPORTED_MODULE_10__.FetchGitCommand((args == null ? void 0 : args.command) === "fetch" ? args : void 0),
      new _git_log__WEBPACK_IMPORTED_MODULE_11__.LogGitCommand((args == null ? void 0 : args.command) === "log" ? args : void 0),
      new _git_merge__WEBPACK_IMPORTED_MODULE_12__.MergeGitCommand((args == null ? void 0 : args.command) === "merge" ? args : void 0),
      new _git_pull__WEBPACK_IMPORTED_MODULE_13__.PullGitCommand((args == null ? void 0 : args.command) === "pull" ? args : void 0),
      new _git_push__WEBPACK_IMPORTED_MODULE_14__.PushGitCommand((args == null ? void 0 : args.command) === "push" ? args : void 0),
      new _git_rebase__WEBPACK_IMPORTED_MODULE_15__.RebaseGitCommand((args == null ? void 0 : args.command) === "rebase" ? args : void 0),
      new _git_reset__WEBPACK_IMPORTED_MODULE_16__.ResetGitCommand((args == null ? void 0 : args.command) === "reset" ? args : void 0),
      new _git_revert__WEBPACK_IMPORTED_MODULE_17__.RevertGitCommand((args == null ? void 0 : args.command) === "revert" ? args : void 0),
      new _git_search__WEBPACK_IMPORTED_MODULE_18__.SearchGitCommand((args == null ? void 0 : args.command) === "search" || (args == null ? void 0 : args.command) === "grep" ? args : void 0),
      new _git_show__WEBPACK_IMPORTED_MODULE_19__.ShowGitCommand((args == null ? void 0 : args.command) === "show" ? args : void 0),
      new _git_stash__WEBPACK_IMPORTED_MODULE_20__.StashGitCommand((args == null ? void 0 : args.command) === "stash" ? args : void 0),
      new _git_status__WEBPACK_IMPORTED_MODULE_21__.StatusGitCommand((args == null ? void 0 : args.command) === "status" ? args : void 0),
      new _git_switch__WEBPACK_IMPORTED_MODULE_22__.SwitchGitCommand((args == null ? void 0 : args.command) === "switch" || (args == null ? void 0 : args.command) === "checkout" ? args : void 0),
      new _git_tag__WEBPACK_IMPORTED_MODULE_23__.TagGitCommand((args == null ? void 0 : args.command) === "tag" ? args : void 0)
    ];
    if (_container__WEBPACK_IMPORTED_MODULE_3__.Container.config.gitCommands.sortBy === _configuration__WEBPACK_IMPORTED_MODULE_1__.GitCommandSorting.Usage) {
      const usage = _container__WEBPACK_IMPORTED_MODULE_3__.Container.context.workspaceState.get(_constants__WEBPACK_IMPORTED_MODULE_2__.WorkspaceState.GitCommandPaletteUsage);
      if (usage != null) {
        this.items.sort((a, b) => {
          var _a, _b;
          return ((_a = usage[b.key]) != null ? _a : 0) - ((_b = usage[a.key]) != null ? _b : 0);
        });
      }
    }
    this.hiddenItems = [];
  }
  get command() {
    return this._command;
  }
  find(commandName, fuzzy = false) {
    var _a, _b;
    if (fuzzy) {
      const cmd = commandName.toLowerCase();
      return (_a = this.items.find((c) => c.isFuzzyMatch(cmd))) != null ? _a : this.hiddenItems.find((c) => c.isFuzzyMatch(cmd));
    }
    return (_b = this.items.find((c) => c.isMatch(commandName))) != null ? _b : this.hiddenItems.find((c) => c.isMatch(commandName));
  }
  setCommand(command2, via) {
    if (this._command != null) {
      this._command.picked = false;
    }
    if (command2 != null) {
      command2.picked = true;
      command2.pickedVia = via;
    }
    this._command = command2;
    if (command2 != null) {
      void this.updateCommandUsage(command2.key, Date.now());
    }
  }
  async updateCommandUsage(id, timestamp) {
    let usage = _container__WEBPACK_IMPORTED_MODULE_3__.Container.context.workspaceState.get(_constants__WEBPACK_IMPORTED_MODULE_2__.WorkspaceState.GitCommandPaletteUsage);
    if (usage === void 0) {
      usage = Object.create(null);
    }
    usage[id] = timestamp;
    await _container__WEBPACK_IMPORTED_MODULE_3__.Container.context.workspaceState.update(_constants__WEBPACK_IMPORTED_MODULE_2__.WorkspaceState.GitCommandPaletteUsage, usage);
  }
}


/***/ }),

/***/ "./src/commands/git/branch.ts":
/*!************************************!*\
  !*** ./src/commands/git/branch.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "BranchGitCommand": () => (/* binding */ BranchGitCommand)
/* harmony export */ });
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../container */ "./src/container.ts");
/* harmony import */ var _git_git__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../git/git */ "./src/git/git.ts");
/* harmony import */ var _quickpicks__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../quickpicks */ "./src/quickpicks.ts");
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../system */ "./src/system.ts");
/* harmony import */ var _quickCommand__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../quickCommand */ "./src/commands/quickCommand.ts");

var __defProp = Object.defineProperty;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};






const subcommandToTitleMap = new Map([
  ["create", "Create"],
  ["delete", "Delete"],
  ["rename", "Rename"]
]);
function getTitle(title, subcommand) {
  return subcommand == null ? title : `${subcommandToTitleMap.get(subcommand)} ${title}`;
}
class BranchGitCommand extends _quickCommand__WEBPACK_IMPORTED_MODULE_5__.QuickCommand {
  constructor(args) {
    super("branch", "branch", "Branch", {
      description: "create, rename, or delete branches"
    });
    __publicField(this, "subcommand");
    var _a, _b;
    let counter = 0;
    if (((_a = args == null ? void 0 : args.state) == null ? void 0 : _a.subcommand) != null) {
      counter++;
      switch (args == null ? void 0 : args.state.subcommand) {
        case "create":
          if (args.state.reference != null) {
            counter++;
          }
          if (args.state.name != null) {
            counter++;
          }
          break;
        case "delete":
          if (args.state.references != null && (!Array.isArray(args.state.references) || args.state.references.length !== 0)) {
            counter++;
          }
          break;
        case "rename":
          if (args.state.reference != null) {
            counter++;
          }
          if (args.state.name != null) {
            counter++;
          }
          break;
      }
    }
    if (((_b = args == null ? void 0 : args.state) == null ? void 0 : _b.repo) != null) {
      counter++;
    }
    this.initialState = {
      counter,
      confirm: args == null ? void 0 : args.confirm,
      ...args == null ? void 0 : args.state
    };
  }
  get canConfirm() {
    return this.subcommand != null;
  }
  get canSkipConfirm() {
    return this.subcommand === "delete" || this.subcommand === "rename" ? false : super.canSkipConfirm;
  }
  get skipConfirmKey() {
    return `${this.key}${this.subcommand == null ? "" : `-${this.subcommand}`}:${this.pickedVia}`;
  }
  async *steps(state) {
    const context = {
      repos: [...await _container__WEBPACK_IMPORTED_MODULE_1__.Container.git.getOrderedRepositories()],
      showTags: false,
      title: this.title
    };
    let skippedStepTwo = false;
    while (this.canStepsContinue(state)) {
      context.title = this.title;
      if (state.counter < 1 || state.subcommand == null) {
        this.subcommand = void 0;
        const result = yield* this.pickSubcommandStep(state);
        if (result === _quickCommand__WEBPACK_IMPORTED_MODULE_5__.StepResult.Break)
          break;
        state.subcommand = result;
      }
      this.subcommand = state.subcommand;
      context.title = getTitle(state.subcommand === "delete" ? "Branches" : this.title, state.subcommand);
      if (state.counter < 2 || state.repo == null || typeof state.repo === "string") {
        skippedStepTwo = false;
        if (context.repos.length === 1) {
          skippedStepTwo = true;
          state.counter++;
          state.repo = context.repos[0];
        } else {
          const result = yield* (0,_quickCommand__WEBPACK_IMPORTED_MODULE_5__.pickRepositoryStep)(state, context);
          if (result === _quickCommand__WEBPACK_IMPORTED_MODULE_5__.StepResult.Break)
            continue;
          state.repo = result;
        }
      }
      switch (state.subcommand) {
        case "create":
          yield* this.createCommandSteps(state, context);
          state.name = void 0;
          break;
        case "delete":
          yield* this.deleteCommandSteps(state, context);
          break;
        case "rename":
          yield* this.renameCommandSteps(state, context);
          state.name = void 0;
          break;
        default:
          _quickCommand__WEBPACK_IMPORTED_MODULE_5__.QuickCommand.endSteps(state);
          break;
      }
      if (skippedStepTwo) {
        state.counter--;
      }
    }
    return state.counter < 0 ? _quickCommand__WEBPACK_IMPORTED_MODULE_5__.StepResult.Break : void 0;
  }
  *pickSubcommandStep(state) {
    const step = _quickCommand__WEBPACK_IMPORTED_MODULE_5__.QuickCommand.createPickStep({
      title: this.title,
      placeholder: `Choose a ${this.label} command`,
      items: [
        {
          label: "create",
          description: "creates a new branch",
          picked: state.subcommand === "create",
          item: "create"
        },
        {
          label: "delete",
          description: "deletes the specified branches",
          picked: state.subcommand === "delete",
          item: "delete"
        },
        {
          label: "rename",
          description: "renames the specified branch",
          picked: state.subcommand === "rename",
          item: "rename"
        }
      ],
      buttons: [vscode__WEBPACK_IMPORTED_MODULE_0__.QuickInputButtons.Back]
    });
    const selection = yield step;
    return _quickCommand__WEBPACK_IMPORTED_MODULE_5__.QuickCommand.canPickStepContinue(step, state, selection) ? selection[0].item : _quickCommand__WEBPACK_IMPORTED_MODULE_5__.StepResult.Break;
  }
  async *createCommandSteps(state, context) {
    var _a, _b, _c, _d;
    if (state.flags == null) {
      state.flags = [];
    }
    while (this.canStepsContinue(state)) {
      if (state.counter < 3 || state.reference == null) {
        const result = yield* (0,_quickCommand__WEBPACK_IMPORTED_MODULE_5__.pickBranchOrTagStep)(state, context, {
          placeholder: (context2) => `Choose a branch${context2.showTags ? " or tag" : ""} to create the new branch from`,
          picked: (_c = (_a = state.reference) == null ? void 0 : _a.ref) != null ? _c : (_b = await state.repo.getBranch()) == null ? void 0 : _b.ref,
          titleContext: " from",
          value: _git_git__WEBPACK_IMPORTED_MODULE_2__.GitReference.isRevision(state.reference) ? state.reference.ref : void 0
        });
        if (result === _quickCommand__WEBPACK_IMPORTED_MODULE_5__.StepResult.Break)
          break;
        state.reference = result;
      }
      if (state.counter < 4 || state.name == null) {
        const result = yield* (0,_quickCommand__WEBPACK_IMPORTED_MODULE_5__.inputBranchNameStep)(state, context, {
          placeholder: "Please provide a name for the new branch",
          titleContext: ` from ${_git_git__WEBPACK_IMPORTED_MODULE_2__.GitReference.toString(state.reference, {
            capitalize: true,
            icon: false,
            label: state.reference.refType !== "branch"
          })}`,
          value: (_d = state.name) != null ? _d : _git_git__WEBPACK_IMPORTED_MODULE_2__.GitReference.getNameWithoutRemote(state.reference)
        });
        if (result === _quickCommand__WEBPACK_IMPORTED_MODULE_5__.StepResult.Break)
          continue;
        state.name = result;
      }
      if (this.confirm(state.confirm)) {
        const result = yield* this.createCommandConfirmStep(state, context);
        if (result === _quickCommand__WEBPACK_IMPORTED_MODULE_5__.StepResult.Break)
          continue;
        state.flags = result;
      }
      _quickCommand__WEBPACK_IMPORTED_MODULE_5__.QuickCommand.endSteps(state);
      if (state.flags.includes("--switch")) {
        void await state.repo.switch(state.reference.ref, { createBranch: state.name });
      } else {
        void state.repo.branch(...state.flags, state.name, state.reference.ref);
      }
    }
  }
  *createCommandConfirmStep(state, context) {
    const step = _quickCommand__WEBPACK_IMPORTED_MODULE_5__.QuickCommand.createConfirmStep((0,_quickCommand__WEBPACK_IMPORTED_MODULE_5__.appendReposToTitle)(`Confirm ${context.title}`, state, context), [
      _quickpicks__WEBPACK_IMPORTED_MODULE_3__.FlagsQuickPickItem.create(state.flags, [], {
        label: context.title,
        detail: `Will create a new branch named ${state.name} from ${_git_git__WEBPACK_IMPORTED_MODULE_2__.GitReference.toString(state.reference)}`
      }),
      _quickpicks__WEBPACK_IMPORTED_MODULE_3__.FlagsQuickPickItem.create(state.flags, ["--switch"], {
        label: `${context.title} and Switch`,
        description: "--switch",
        detail: `Will create and switch to a new branch named ${state.name} from ${_git_git__WEBPACK_IMPORTED_MODULE_2__.GitReference.toString(state.reference)}`
      })
    ], context);
    const selection = yield step;
    return _quickCommand__WEBPACK_IMPORTED_MODULE_5__.QuickCommand.canPickStepContinue(step, state, selection) ? selection[0].item : _quickCommand__WEBPACK_IMPORTED_MODULE_5__.StepResult.Break;
  }
  async *deleteCommandSteps(state, context) {
    var _a;
    if (state.flags == null) {
      state.flags = [];
    }
    while (this.canStepsContinue(state)) {
      if (state.references != null && !Array.isArray(state.references)) {
        state.references = [state.references];
      }
      if (state.counter < 3 || state.references == null || Array.isArray(state.references) && state.references.length === 0) {
        context.title = getTitle("Branches", state.subcommand);
        const result2 = yield* (0,_quickCommand__WEBPACK_IMPORTED_MODULE_5__.pickBranchesStep)(state, context, {
          filter: (b) => !b.current,
          picked: (_a = state.references) == null ? void 0 : _a.map((r) => r.ref),
          placeholder: "Choose branches to delete",
          sort: { current: false, missingUpstream: true }
        });
        if (result2 === _quickCommand__WEBPACK_IMPORTED_MODULE_5__.StepResult.Break)
          break;
        state.references = result2;
      }
      context.title = getTitle(_system__WEBPACK_IMPORTED_MODULE_4__.Strings.pluralize("Branch", state.references.length, {
        number: "",
        plural: "Branches"
      }).trim(), state.subcommand);
      const result = yield* this.deleteCommandConfirmStep(state, context);
      if (result === _quickCommand__WEBPACK_IMPORTED_MODULE_5__.StepResult.Break)
        continue;
      state.flags = result;
      _quickCommand__WEBPACK_IMPORTED_MODULE_5__.QuickCommand.endSteps(state);
      void state.repo.branchDelete(state.references, {
        force: state.flags.includes("--force"),
        remote: state.flags.includes("--remotes")
      });
    }
  }
  *deleteCommandConfirmStep(state, context) {
    const confirmations = [
      _quickpicks__WEBPACK_IMPORTED_MODULE_3__.FlagsQuickPickItem.create(state.flags, [], {
        label: context.title,
        detail: `Will delete ${_git_git__WEBPACK_IMPORTED_MODULE_2__.GitReference.toString(state.references)}`
      })
    ];
    if (!state.references.every((b) => b.remote)) {
      confirmations.push(_quickpicks__WEBPACK_IMPORTED_MODULE_3__.FlagsQuickPickItem.create(state.flags, ["--force"], {
        label: `Force ${context.title}`,
        description: "--force",
        detail: `Will forcibly delete ${_git_git__WEBPACK_IMPORTED_MODULE_2__.GitReference.toString(state.references)}`
      }));
      if (state.references.some((b) => b.upstream != null)) {
        confirmations.push(_quickpicks__WEBPACK_IMPORTED_MODULE_3__.FlagsQuickPickItem.create(state.flags, ["--remotes"], {
          label: `${context.title} & Remote${state.references.filter((b) => !b.remote).length > 1 ? "s" : ""}`,
          description: "--remotes",
          detail: `Will delete ${_git_git__WEBPACK_IMPORTED_MODULE_2__.GitReference.toString(state.references)} and any remote tracking branches`
        }), _quickpicks__WEBPACK_IMPORTED_MODULE_3__.FlagsQuickPickItem.create(state.flags, ["--force", "--remotes"], {
          label: `Force ${context.title} & Remote${state.references.filter((b) => !b.remote).length > 1 ? "s" : ""}`,
          description: "--force --remotes",
          detail: `Will forcibly delete ${_git_git__WEBPACK_IMPORTED_MODULE_2__.GitReference.toString(state.references)} and any remote tracking branches`
        }));
      }
    }
    const step = _quickCommand__WEBPACK_IMPORTED_MODULE_5__.QuickCommand.createConfirmStep((0,_quickCommand__WEBPACK_IMPORTED_MODULE_5__.appendReposToTitle)(`Confirm ${context.title}`, state, context), confirmations, context);
    const selection = yield step;
    return _quickCommand__WEBPACK_IMPORTED_MODULE_5__.QuickCommand.canPickStepContinue(step, state, selection) ? selection[0].item : _quickCommand__WEBPACK_IMPORTED_MODULE_5__.StepResult.Break;
  }
  async *renameCommandSteps(state, context) {
    var _a, _b;
    if (state.flags == null) {
      state.flags = [];
    }
    while (this.canStepsContinue(state)) {
      if (state.counter < 3 || state.reference == null) {
        const result2 = yield* (0,_quickCommand__WEBPACK_IMPORTED_MODULE_5__.pickBranchStep)(state, context, {
          filter: (b) => !b.remote,
          picked: (_a = state.reference) == null ? void 0 : _a.ref,
          placeholder: "Choose a branch to rename"
        });
        if (result2 === _quickCommand__WEBPACK_IMPORTED_MODULE_5__.StepResult.Break)
          break;
        state.reference = result2;
      }
      if (state.counter < 4 || state.name == null) {
        const result2 = yield* (0,_quickCommand__WEBPACK_IMPORTED_MODULE_5__.inputBranchNameStep)(state, context, {
          placeholder: `Please provide a new name for ${_git_git__WEBPACK_IMPORTED_MODULE_2__.GitReference.toString(state.reference, {
            icon: false
          })}`,
          titleContext: ` ${_git_git__WEBPACK_IMPORTED_MODULE_2__.GitReference.toString(state.reference, false)}`,
          value: (_b = state.name) != null ? _b : state.reference.name
        });
        if (result2 === _quickCommand__WEBPACK_IMPORTED_MODULE_5__.StepResult.Break)
          continue;
        state.name = result2;
      }
      const result = yield* this.renameCommandConfirmStep(state, context);
      if (result === _quickCommand__WEBPACK_IMPORTED_MODULE_5__.StepResult.Break)
        continue;
      state.flags = result;
      _quickCommand__WEBPACK_IMPORTED_MODULE_5__.QuickCommand.endSteps(state);
      void state.repo.branch(...state.flags, state.reference.ref, state.name);
    }
  }
  *renameCommandConfirmStep(state, context) {
    const step = _quickCommand__WEBPACK_IMPORTED_MODULE_5__.QuickCommand.createConfirmStep((0,_quickCommand__WEBPACK_IMPORTED_MODULE_5__.appendReposToTitle)(`Confirm ${context.title}`, state, context), [
      _quickpicks__WEBPACK_IMPORTED_MODULE_3__.FlagsQuickPickItem.create(state.flags, ["-m"], {
        label: context.title,
        detail: `Will rename ${_git_git__WEBPACK_IMPORTED_MODULE_2__.GitReference.toString(state.reference)} to ${state.name}`
      })
    ], context);
    const selection = yield step;
    return _quickCommand__WEBPACK_IMPORTED_MODULE_5__.QuickCommand.canPickStepContinue(step, state, selection) ? selection[0].item : _quickCommand__WEBPACK_IMPORTED_MODULE_5__.StepResult.Break;
  }
}


/***/ }),

/***/ "./src/commands/git/cherry-pick.ts":
/*!*****************************************!*\
  !*** ./src/commands/git/cherry-pick.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CherryPickGitCommand": () => (/* binding */ CherryPickGitCommand)
/* harmony export */ });
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../container */ "./src/container.ts");
/* harmony import */ var _git_git__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../git/git */ "./src/git/git.ts");
/* harmony import */ var _quickpicks__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../quickpicks */ "./src/quickpicks.ts");
/* harmony import */ var _quickCommand__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../quickCommand */ "./src/commands/quickCommand.ts");





class CherryPickGitCommand extends _quickCommand__WEBPACK_IMPORTED_MODULE_3__.QuickCommand {
  constructor(args) {
    super("cherry-pick", "cherry-pick", "Cherry Pick", {
      description: "integrates changes from specified commits into the current branch"
    });
    var _a, _b;
    let counter = 0;
    if (((_a = args == null ? void 0 : args.state) == null ? void 0 : _a.repo) != null) {
      counter++;
    }
    if (((_b = args == null ? void 0 : args.state) == null ? void 0 : _b.references) != null && (!Array.isArray(args.state.references) || args.state.references.length !== 0)) {
      counter++;
    }
    this.initialState = {
      counter,
      confirm: true,
      ...args == null ? void 0 : args.state
    };
  }
  get canSkipConfirm() {
    return false;
  }
  execute(state) {
    state.repo.cherryPick(...state.flags, ...state.references.map((c) => c.ref).reverse());
  }
  isFuzzyMatch(name) {
    return super.isFuzzyMatch(name) || name === "cherry";
  }
  async *steps(state) {
    var _a, _b, _c, _d;
    const context = {
      repos: [...await _container__WEBPACK_IMPORTED_MODULE_0__.Container.git.getOrderedRepositories()],
      cache: new Map(),
      destination: void 0,
      selectedBranchOrTag: void 0,
      showTags: true,
      title: this.title
    };
    if (state.flags == null) {
      state.flags = [];
    }
    if (state.references != null && !Array.isArray(state.references)) {
      state.references = [state.references];
    }
    let skippedStepOne = false;
    while (this.canStepsContinue(state)) {
      context.title = this.title;
      if (state.counter < 1 || state.repo == null || typeof state.repo === "string") {
        skippedStepOne = false;
        if (context.repos.length === 1) {
          skippedStepOne = true;
          if (state.repo == null) {
            state.counter++;
          }
          state.repo = context.repos[0];
        } else {
          const result = yield* (0,_quickCommand__WEBPACK_IMPORTED_MODULE_3__.pickRepositoryStep)(state, context);
          if (result === _quickCommand__WEBPACK_IMPORTED_MODULE_3__.StepResult.Break)
            break;
          state.repo = result;
        }
      }
      if (context.destination == null) {
        const branch = await state.repo.getBranch();
        if (branch == null)
          break;
        context.destination = branch;
      }
      context.title = `${this.title} into ${_git_git__WEBPACK_IMPORTED_MODULE_1__.GitReference.toString(context.destination, { icon: false })}`;
      if (state.counter < 2 || state.references == null || state.references.length === 0) {
        const result = yield* (0,_quickCommand__WEBPACK_IMPORTED_MODULE_3__.pickBranchOrTagStep)(state, context, {
          filter: { branches: (b) => b.id !== context.destination.id },
          placeholder: (context2) => `Choose a branch${context2.showTags ? " or tag" : ""} to cherry-pick from`,
          picked: (_a = context.selectedBranchOrTag) == null ? void 0 : _a.ref,
          value: context.selectedBranchOrTag == null ? (_c = (_b = state.references) == null ? void 0 : _b[0]) == null ? void 0 : _c.ref : void 0
        });
        if (result === _quickCommand__WEBPACK_IMPORTED_MODULE_3__.StepResult.Break) {
          if (skippedStepOne) {
            state.counter--;
          }
          continue;
        }
        if (_git_git__WEBPACK_IMPORTED_MODULE_1__.GitReference.isRevision(result)) {
          state.references = [result];
          context.selectedBranchOrTag = void 0;
        } else {
          context.selectedBranchOrTag = result;
        }
      }
      if (state.counter < 3 && context.selectedBranchOrTag != null) {
        const ref = _git_git__WEBPACK_IMPORTED_MODULE_1__.GitRevision.createRange(context.destination.ref, context.selectedBranchOrTag.ref);
        let log = context.cache.get(ref);
        if (log == null) {
          log = _container__WEBPACK_IMPORTED_MODULE_0__.Container.git.getLog(state.repo.path, { ref, merges: false });
          context.cache.set(ref, log);
        }
        const result = yield* (0,_quickCommand__WEBPACK_IMPORTED_MODULE_3__.pickCommitsStep)(state, context, {
          log: await log,
          onDidLoadMore: (log2) => context.cache.set(ref, Promise.resolve(log2)),
          picked: (_d = state.references) == null ? void 0 : _d.map((r) => r.ref),
          placeholder: (context2, log2) => log2 == null ? `No pickable commits found on ${_git_git__WEBPACK_IMPORTED_MODULE_1__.GitReference.toString(context2.selectedBranchOrTag, {
            icon: false
          })}` : `Choose commits to cherry-pick into ${_git_git__WEBPACK_IMPORTED_MODULE_1__.GitReference.toString(context2.destination, {
            icon: false
          })}`
        });
        if (result === _quickCommand__WEBPACK_IMPORTED_MODULE_3__.StepResult.Break)
          continue;
        state.references = result;
      }
      if (this.confirm(state.confirm)) {
        const result = yield* this.confirmStep(state, context);
        if (result === _quickCommand__WEBPACK_IMPORTED_MODULE_3__.StepResult.Break)
          continue;
        state.flags = result;
      }
      _quickCommand__WEBPACK_IMPORTED_MODULE_3__.QuickCommand.endSteps(state);
      this.execute(state);
    }
    return state.counter < 0 ? _quickCommand__WEBPACK_IMPORTED_MODULE_3__.StepResult.Break : void 0;
  }
  *confirmStep(state, context) {
    const step = _quickCommand__WEBPACK_IMPORTED_MODULE_3__.QuickCommand.createConfirmStep((0,_quickCommand__WEBPACK_IMPORTED_MODULE_3__.appendReposToTitle)(`Confirm ${context.title}`, state, context), [
      _quickpicks__WEBPACK_IMPORTED_MODULE_2__.FlagsQuickPickItem.create(state.flags, [], {
        label: this.title,
        detail: `Will apply ${_git_git__WEBPACK_IMPORTED_MODULE_1__.GitReference.toString(state.references)} to ${_git_git__WEBPACK_IMPORTED_MODULE_1__.GitReference.toString(context.destination)}`
      }),
      _quickpicks__WEBPACK_IMPORTED_MODULE_2__.FlagsQuickPickItem.create(state.flags, ["--edit"], {
        label: `${this.title} & Edit`,
        description: "--edit",
        detail: `Will edit and apply ${_git_git__WEBPACK_IMPORTED_MODULE_1__.GitReference.toString(state.references)} to ${_git_git__WEBPACK_IMPORTED_MODULE_1__.GitReference.toString(context.destination)}`
      })
    ], context);
    const selection = yield step;
    return _quickCommand__WEBPACK_IMPORTED_MODULE_3__.QuickCommand.canPickStepContinue(step, state, selection) ? selection[0].item : _quickCommand__WEBPACK_IMPORTED_MODULE_3__.StepResult.Break;
  }
}


/***/ }),

/***/ "./src/commands/git/coauthors.ts":
/*!***************************************!*\
  !*** ./src/commands/git/coauthors.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CoAuthorsGitCommand": () => (/* binding */ CoAuthorsGitCommand)
/* harmony export */ });
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../container */ "./src/container.ts");
/* harmony import */ var _git_gitService__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../git/gitService */ "./src/git/gitService.ts");
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../system */ "./src/system.ts");
/* harmony import */ var _quickCommand__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../quickCommand */ "./src/commands/quickCommand.ts");






class CoAuthorsGitCommand extends _quickCommand__WEBPACK_IMPORTED_MODULE_4__.QuickCommand {
  constructor(args) {
    super("co-authors", "co-authors", "Add Co-Authors", { description: "adds co-authors to a commit message" });
    var _a, _b;
    let counter = 0;
    if (((_a = args == null ? void 0 : args.state) == null ? void 0 : _a.repo) != null) {
      counter++;
    }
    if (((_b = args == null ? void 0 : args.state) == null ? void 0 : _b.contributors) != null && (!Array.isArray(args.state.contributors) || args.state.contributors.length !== 0)) {
      counter++;
    }
    this.initialState = {
      counter,
      confirm: false,
      ...args == null ? void 0 : args.state
    };
  }
  get canConfirm() {
    return false;
  }
  async execute(state) {
    const repo = await _git_gitService__WEBPACK_IMPORTED_MODULE_2__.GitService.getOrOpenBuiltInGitRepository(state.repo.path);
    if (repo == null)
      return;
    let message = repo.inputBox.value;
    const index = message.indexOf("Co-authored-by: ");
    if (index !== -1) {
      message = message.substring(0, index - 1).trimRight();
    }
    if (state.contributors != null && !Array.isArray(state.contributors)) {
      state.contributors = [state.contributors];
    }
    for (const c of state.contributors) {
      let newlines;
      if (message.includes("Co-authored-by: ")) {
        newlines = "\n";
      } else if (message.length !== 0 && message.endsWith("\n")) {
        newlines = "\n\n";
      } else {
        newlines = "\n\n\n";
      }
      message += `${newlines}Co-authored-by: ${c.toCoauthor()}`;
    }
    repo.inputBox.value = message;
    void await vscode__WEBPACK_IMPORTED_MODULE_0__.commands.executeCommand("workbench.view.scm");
  }
  async *steps(state) {
    const context = {
      repos: [...await _container__WEBPACK_IMPORTED_MODULE_1__.Container.git.getOrderedRepositories()],
      activeRepo: void 0,
      title: this.title
    };
    const gitApi = await _git_gitService__WEBPACK_IMPORTED_MODULE_2__.GitService.getBuiltInGitApi();
    if (gitApi != null) {
      context.repos = context.repos.filter((repo) => gitApi.repositories.find((r) => _system__WEBPACK_IMPORTED_MODULE_3__.Strings.normalizePath(r.rootUri.fsPath) === repo.path));
      context.activeRepo = await _container__WEBPACK_IMPORTED_MODULE_1__.Container.git.getActiveRepository();
      if (context.activeRepo != null && !gitApi.repositories.some((r) => r.rootUri.fsPath === context.activeRepo.path)) {
        context.activeRepo = void 0;
      }
    }
    let skippedStepOne = false;
    while (this.canStepsContinue(state)) {
      context.title = this.title;
      if (state.counter < 1 || state.repo == null || typeof state.repo === "string") {
        skippedStepOne = false;
        if (context.repos.length === 1) {
          skippedStepOne = true;
          if (state.repo == null) {
            state.counter++;
          }
          state.repo = context.repos[0];
        } else {
          const result = yield* (0,_quickCommand__WEBPACK_IMPORTED_MODULE_4__.pickRepositoryStep)(state, context);
          if (result === _quickCommand__WEBPACK_IMPORTED_MODULE_4__.StepResult.Break)
            break;
          state.repo = result;
        }
      }
      if (state.counter < 2 || state.contributors == null) {
        const result = yield* (0,_quickCommand__WEBPACK_IMPORTED_MODULE_4__.pickContributorsStep)(state, context, "Choose contributors to add as co-authors");
        if (result === _quickCommand__WEBPACK_IMPORTED_MODULE_4__.StepResult.Break) {
          if (skippedStepOne) {
            state.counter--;
          }
          continue;
        }
        state.contributors = result;
      }
      _quickCommand__WEBPACK_IMPORTED_MODULE_4__.QuickCommand.endSteps(state);
      void this.execute(state);
    }
    return state.counter < 0 ? _quickCommand__WEBPACK_IMPORTED_MODULE_4__.StepResult.Break : void 0;
  }
}


/***/ }),

/***/ "./src/commands/git/fetch.ts":
/*!***********************************!*\
  !*** ./src/commands/git/fetch.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "FetchGitCommand": () => (/* binding */ FetchGitCommand)
/* harmony export */ });
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../constants */ "./src/constants.ts");
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../container */ "./src/container.ts");
/* harmony import */ var _git_git__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../git/git */ "./src/git/git.ts");
/* harmony import */ var _quickpicks__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../quickpicks */ "./src/quickpicks.ts");
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../system */ "./src/system.ts");
/* harmony import */ var _quickCommand__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../quickCommand */ "./src/commands/quickCommand.ts");







class FetchGitCommand extends _quickCommand__WEBPACK_IMPORTED_MODULE_5__.QuickCommand {
  constructor(args) {
    super("fetch", "fetch", "Fetch", { description: "fetches changes from one or more remotes" });
    var _a;
    let counter = 0;
    if (((_a = args == null ? void 0 : args.state) == null ? void 0 : _a.repos) != null && (!Array.isArray(args.state.repos) || args.state.repos.length !== 0)) {
      counter++;
    }
    this.initialState = {
      counter,
      confirm: args == null ? void 0 : args.confirm,
      ...args == null ? void 0 : args.state
    };
  }
  execute(state) {
    if (_git_git__WEBPACK_IMPORTED_MODULE_2__.GitReference.isBranch(state.reference)) {
      return state.repos[0].fetch({ branch: state.reference });
    }
    return _container__WEBPACK_IMPORTED_MODULE_1__.Container.git.fetchAll(state.repos, {
      all: state.flags.includes("--all"),
      prune: state.flags.includes("--prune")
    });
  }
  async *steps(state) {
    const context = {
      repos: [...await _container__WEBPACK_IMPORTED_MODULE_1__.Container.git.getOrderedRepositories()],
      title: this.title
    };
    if (state.flags == null) {
      state.flags = [];
    }
    if (state.repos != null && !Array.isArray(state.repos)) {
      state.repos = [state.repos];
    }
    let skippedStepOne = false;
    while (this.canStepsContinue(state)) {
      context.title = this.title;
      if (state.counter < 1 || state.repos == null || state.repos.length === 0 || _system__WEBPACK_IMPORTED_MODULE_4__.Arrays.isStringArray(state.repos)) {
        skippedStepOne = false;
        if (context.repos.length === 1) {
          skippedStepOne = true;
          state.counter++;
          state.repos = [context.repos[0]];
        } else {
          const result = yield* (0,_quickCommand__WEBPACK_IMPORTED_MODULE_5__.pickRepositoriesStep)(state, context, { skipIfPossible: state.counter >= 1 });
          if (result === _quickCommand__WEBPACK_IMPORTED_MODULE_5__.StepResult.Break)
            break;
          state.repos = result;
        }
      }
      if (this.confirm(state.confirm)) {
        const result = yield* this.confirmStep(state, context);
        if (result === _quickCommand__WEBPACK_IMPORTED_MODULE_5__.StepResult.Break) {
          if (skippedStepOne) {
            state.counter--;
          }
          continue;
        }
        state.flags = result;
      }
      _quickCommand__WEBPACK_IMPORTED_MODULE_5__.QuickCommand.endSteps(state);
      void this.execute(state);
    }
    return state.counter < 0 ? _quickCommand__WEBPACK_IMPORTED_MODULE_5__.StepResult.Break : void 0;
  }
  async *confirmStep(state, context) {
    let lastFetchedOn = "";
    if (state.repos.length === 1) {
      const lastFetched = await state.repos[0].getLastFetched();
      if (lastFetched !== 0) {
        lastFetchedOn = `${_system__WEBPACK_IMPORTED_MODULE_4__.Strings.pad(_constants__WEBPACK_IMPORTED_MODULE_0__.GlyphChars.Dot, 2, 2)}Last fetched ${_system__WEBPACK_IMPORTED_MODULE_4__.Dates.getFormatter(new Date(lastFetched)).fromNow()}`;
      }
    }
    let step;
    if (state.repos.length === 1 && _git_git__WEBPACK_IMPORTED_MODULE_2__.GitReference.isBranch(state.reference)) {
      step = this.createConfirmStep((0,_quickCommand__WEBPACK_IMPORTED_MODULE_5__.appendReposToTitle)(`Confirm ${context.title}`, state, context, lastFetchedOn), [
        _quickpicks__WEBPACK_IMPORTED_MODULE_3__.FlagsQuickPickItem.create(state.flags, [], {
          label: this.title,
          detail: `Will fetch ${_git_git__WEBPACK_IMPORTED_MODULE_2__.GitReference.toString(state.reference)}`
        })
      ]);
    } else {
      const reposToFetch = state.repos.length === 1 ? `$(repo) ${state.repos[0].formattedName}` : `${state.repos.length} repositories`;
      step = _quickCommand__WEBPACK_IMPORTED_MODULE_5__.QuickCommand.createConfirmStep((0,_quickCommand__WEBPACK_IMPORTED_MODULE_5__.appendReposToTitle)(`Confirm ${this.title}`, state, context, lastFetchedOn), [
        _quickpicks__WEBPACK_IMPORTED_MODULE_3__.FlagsQuickPickItem.create(state.flags, [], {
          label: this.title,
          detail: `Will fetch ${reposToFetch}`
        }),
        _quickpicks__WEBPACK_IMPORTED_MODULE_3__.FlagsQuickPickItem.create(state.flags, ["--prune"], {
          label: `${this.title} & Prune`,
          description: "--prune",
          detail: `Will fetch and prune ${reposToFetch}`
        }),
        _quickpicks__WEBPACK_IMPORTED_MODULE_3__.FlagsQuickPickItem.create(state.flags, ["--all"], {
          label: `${this.title} All`,
          description: "--all",
          detail: `Will fetch all remotes of ${reposToFetch}`
        }),
        _quickpicks__WEBPACK_IMPORTED_MODULE_3__.FlagsQuickPickItem.create(state.flags, ["--all", "--prune"], {
          label: `${this.title} All & Prune`,
          description: "--all --prune",
          detail: `Will fetch and prune all remotes of ${reposToFetch}`
        })
      ], context);
    }
    const selection = yield step;
    return _quickCommand__WEBPACK_IMPORTED_MODULE_5__.QuickCommand.canPickStepContinue(step, state, selection) ? selection[0].item : _quickCommand__WEBPACK_IMPORTED_MODULE_5__.StepResult.Break;
  }
}


/***/ }),

/***/ "./src/commands/git/log.ts":
/*!*********************************!*\
  !*** ./src/commands/git/log.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "LogGitCommand": () => (/* binding */ LogGitCommand)
/* harmony export */ });
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../constants */ "./src/constants.ts");
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../container */ "./src/container.ts");
/* harmony import */ var _git_git__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../git/git */ "./src/git/git.ts");
/* harmony import */ var _git_gitUri__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../git/gitUri */ "./src/git/gitUri.ts");
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../system */ "./src/system.ts");
/* harmony import */ var _gitCommands__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../gitCommands */ "./src/commands/gitCommands.ts");
/* harmony import */ var _quickCommand__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../quickCommand */ "./src/commands/quickCommand.ts");








class LogGitCommand extends _quickCommand__WEBPACK_IMPORTED_MODULE_6__.QuickCommand {
  constructor(args) {
    super("log", "history", "Commits", {
      description: "aka log, shows commit history"
    });
    var _a, _b;
    let counter = 0;
    if (((_a = args == null ? void 0 : args.state) == null ? void 0 : _a.repo) != null) {
      counter++;
    }
    if (((_b = args == null ? void 0 : args.state) == null ? void 0 : _b.reference) != null) {
      counter++;
      if (args.state.reference !== "HEAD" && _git_git__WEBPACK_IMPORTED_MODULE_2__.GitReference.isRevision(args.state.reference) && !_git_git__WEBPACK_IMPORTED_MODULE_2__.GitReference.isRevisionRange(args.state.reference)) {
        counter++;
      }
    }
    this.initialState = {
      counter,
      confirm: false,
      ...args == null ? void 0 : args.state
    };
  }
  get canConfirm() {
    return false;
  }
  isFuzzyMatch(name) {
    return super.isFuzzyMatch(name) || name === "log";
  }
  async *steps(state) {
    var _a, _b, _c;
    const context = {
      repos: [...await _container__WEBPACK_IMPORTED_MODULE_1__.Container.git.getOrderedRepositories()],
      cache: new Map(),
      selectedBranchOrTag: void 0,
      title: this.title
    };
    let skippedStepOne = false;
    while (this.canStepsContinue(state)) {
      context.title = this.title;
      if (state.counter < 1 || state.repo == null || typeof state.repo === "string") {
        skippedStepOne = false;
        if (context.repos.length === 1) {
          skippedStepOne = true;
          if (state.repo == null) {
            state.counter++;
          }
          state.repo = context.repos[0];
        } else {
          const result2 = yield* (0,_quickCommand__WEBPACK_IMPORTED_MODULE_6__.pickRepositoryStep)(state, context);
          if (result2 === _quickCommand__WEBPACK_IMPORTED_MODULE_6__.StepResult.Break)
            break;
          state.repo = result2;
        }
      }
      if (state.reference === "HEAD") {
        const branch = await state.repo.getBranch();
        state.reference = branch;
      }
      if (state.counter < 2 || state.reference == null) {
        const result2 = yield* (0,_quickCommand__WEBPACK_IMPORTED_MODULE_6__.pickBranchOrTagStep)(state, context, {
          placeholder: "Choose a branch or tag to show its commit history",
          picked: (_a = context.selectedBranchOrTag) == null ? void 0 : _a.ref,
          value: context.selectedBranchOrTag == null ? (_b = state.reference) == null ? void 0 : _b.ref : void 0,
          ranges: true
        });
        if (result2 === _quickCommand__WEBPACK_IMPORTED_MODULE_6__.StepResult.Break) {
          if (skippedStepOne) {
            state.counter--;
          }
          continue;
        }
        state.reference = result2;
        context.selectedBranchOrTag = void 0;
      }
      if (!_git_git__WEBPACK_IMPORTED_MODULE_2__.GitReference.isRevision(state.reference) || _git_git__WEBPACK_IMPORTED_MODULE_2__.GitReference.isRevisionRange(state.reference)) {
        context.selectedBranchOrTag = state.reference;
      }
      context.title = `${this.title}${_system__WEBPACK_IMPORTED_MODULE_4__.Strings.pad(_constants__WEBPACK_IMPORTED_MODULE_0__.GlyphChars.Dot, 2, 2)}${_git_git__WEBPACK_IMPORTED_MODULE_2__.GitReference.toString(context.selectedBranchOrTag, { icon: false })}`;
      if (state.fileName) {
        context.title += `${_system__WEBPACK_IMPORTED_MODULE_4__.Strings.pad(_constants__WEBPACK_IMPORTED_MODULE_0__.GlyphChars.Dot, 2, 2)}${_git_gitUri__WEBPACK_IMPORTED_MODULE_3__.GitUri.getFormattedFilename(state.fileName, {
          truncateTo: _constants__WEBPACK_IMPORTED_MODULE_0__.quickPickTitleMaxChars - context.title.length - 3
        })}`;
      }
      if (state.counter < 3 && context.selectedBranchOrTag != null) {
        const ref = context.selectedBranchOrTag.ref;
        let log = context.cache.get(ref);
        if (log == null) {
          log = state.fileName != null ? _container__WEBPACK_IMPORTED_MODULE_1__.Container.git.getLogForFile(state.repo.path, state.fileName, { ref }) : _container__WEBPACK_IMPORTED_MODULE_1__.Container.git.getLog(state.repo.path, { ref });
          context.cache.set(ref, log);
        }
        const result2 = yield* (0,_quickCommand__WEBPACK_IMPORTED_MODULE_6__.pickCommitStep)(state, context, {
          ignoreFocusOut: true,
          log: await log,
          onDidLoadMore: (log2) => context.cache.set(ref, Promise.resolve(log2)),
          placeholder: (context2, log2) => log2 == null ? `No commits found in ${_git_git__WEBPACK_IMPORTED_MODULE_2__.GitReference.toString(context2.selectedBranchOrTag, {
            icon: false
          })}` : "Choose a commit",
          picked: (_c = state.reference) == null ? void 0 : _c.ref
        });
        if (result2 === _quickCommand__WEBPACK_IMPORTED_MODULE_6__.StepResult.Break)
          continue;
        state.reference = result2;
      }
      if (!(state.reference instanceof _git_git__WEBPACK_IMPORTED_MODULE_2__.GitLogCommit) || state.reference.isFile) {
        state.reference = await _container__WEBPACK_IMPORTED_MODULE_1__.Container.git.getCommit(state.repo.path, state.reference.ref);
      }
      const result = yield* _gitCommands__WEBPACK_IMPORTED_MODULE_5__.GitCommandsCommand.getSteps({
        command: "show",
        state: {
          repo: state.repo,
          reference: state.reference,
          fileName: state.fileName
        }
      }, this.pickedVia);
      state.counter--;
      if (result === _quickCommand__WEBPACK_IMPORTED_MODULE_6__.StepResult.Break) {
        _quickCommand__WEBPACK_IMPORTED_MODULE_6__.QuickCommand.endSteps(state);
      }
    }
    return state.counter < 0 ? _quickCommand__WEBPACK_IMPORTED_MODULE_6__.StepResult.Break : void 0;
  }
}


/***/ }),

/***/ "./src/commands/git/merge.ts":
/*!***********************************!*\
  !*** ./src/commands/git/merge.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "MergeGitCommand": () => (/* binding */ MergeGitCommand)
/* harmony export */ });
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../container */ "./src/container.ts");
/* harmony import */ var _git_git__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../git/git */ "./src/git/git.ts");
/* harmony import */ var _quickpicks__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../quickpicks */ "./src/quickpicks.ts");
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../system */ "./src/system.ts");
/* harmony import */ var _quickCommand__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../quickCommand */ "./src/commands/quickCommand.ts");






class MergeGitCommand extends _quickCommand__WEBPACK_IMPORTED_MODULE_4__.QuickCommand {
  constructor(args) {
    super("merge", "merge", "Merge", {
      description: "integrates changes from a specified branch into the current branch"
    });
    var _a, _b;
    let counter = 0;
    if (((_a = args == null ? void 0 : args.state) == null ? void 0 : _a.repo) != null) {
      counter++;
    }
    if (((_b = args == null ? void 0 : args.state) == null ? void 0 : _b.reference) != null) {
      counter++;
    }
    this.initialState = {
      counter,
      confirm: true,
      ...args == null ? void 0 : args.state
    };
  }
  get canSkipConfirm() {
    return false;
  }
  execute(state) {
    return state.repo.merge(...state.flags, state.reference.ref);
  }
  async *steps(state) {
    var _a, _b, _c;
    const context = {
      repos: [...await _container__WEBPACK_IMPORTED_MODULE_0__.Container.git.getOrderedRepositories()],
      cache: new Map(),
      destination: void 0,
      pickCommit: false,
      selectedBranchOrTag: void 0,
      showTags: true,
      title: this.title
    };
    if (state.flags == null) {
      state.flags = [];
    }
    let skippedStepOne = false;
    while (this.canStepsContinue(state)) {
      context.title = this.title;
      if (state.counter < 1 || state.repo == null || typeof state.repo === "string") {
        skippedStepOne = false;
        if (context.repos.length === 1) {
          skippedStepOne = true;
          if (state.repo == null) {
            state.counter++;
          }
          state.repo = context.repos[0];
        } else {
          const result2 = yield* (0,_quickCommand__WEBPACK_IMPORTED_MODULE_4__.pickRepositoryStep)(state, context);
          if (result2 === _quickCommand__WEBPACK_IMPORTED_MODULE_4__.StepResult.Break)
            break;
          state.repo = result2;
        }
      }
      if (context.destination == null) {
        const branch = await state.repo.getBranch();
        if (branch == null)
          break;
        context.destination = branch;
      }
      context.title = `${this.title} into ${_git_git__WEBPACK_IMPORTED_MODULE_1__.GitReference.toString(context.destination, { icon: false })}`;
      if (state.counter < 2 || state.reference == null) {
        const pickCommitToggle = new _quickCommand__WEBPACK_IMPORTED_MODULE_4__.QuickCommandButtons.PickCommitToggle(context.pickCommit, context, () => {
          context.pickCommit = !context.pickCommit;
          pickCommitToggle.on = context.pickCommit;
        });
        const result2 = yield* (0,_quickCommand__WEBPACK_IMPORTED_MODULE_4__.pickBranchOrTagStep)(state, context, {
          placeholder: (context2) => `Choose a branch${context2.showTags ? " or tag" : ""} to merge`,
          picked: (_a = context.selectedBranchOrTag) == null ? void 0 : _a.ref,
          value: context.selectedBranchOrTag == null ? (_b = state.reference) == null ? void 0 : _b.ref : void 0,
          additionalButtons: [pickCommitToggle]
        });
        if (result2 === _quickCommand__WEBPACK_IMPORTED_MODULE_4__.StepResult.Break) {
          if (skippedStepOne) {
            state.counter--;
          }
          continue;
        }
        state.reference = result2;
        context.selectedBranchOrTag = void 0;
      }
      if (!_git_git__WEBPACK_IMPORTED_MODULE_1__.GitReference.isRevision(state.reference)) {
        context.selectedBranchOrTag = state.reference;
      }
      if (state.counter < 3 && context.selectedBranchOrTag != null && (context.pickCommit || state.reference.ref === context.destination.ref)) {
        const ref = context.selectedBranchOrTag.ref;
        let log = context.cache.get(ref);
        if (log == null) {
          log = _container__WEBPACK_IMPORTED_MODULE_0__.Container.git.getLog(state.repo.path, { ref, merges: false });
          context.cache.set(ref, log);
        }
        const result2 = yield* (0,_quickCommand__WEBPACK_IMPORTED_MODULE_4__.pickCommitStep)(state, context, {
          ignoreFocusOut: true,
          log: await log,
          onDidLoadMore: (log2) => context.cache.set(ref, Promise.resolve(log2)),
          placeholder: (context2, log2) => log2 == null ? `No commits found on ${_git_git__WEBPACK_IMPORTED_MODULE_1__.GitReference.toString(context2.selectedBranchOrTag, {
            icon: false
          })}` : `Choose a commit to merge into ${_git_git__WEBPACK_IMPORTED_MODULE_1__.GitReference.toString(context2.destination, {
            icon: false
          })}`,
          picked: (_c = state.reference) == null ? void 0 : _c.ref
        });
        if (result2 === _quickCommand__WEBPACK_IMPORTED_MODULE_4__.StepResult.Break)
          continue;
        state.reference = result2;
      }
      const result = yield* this.confirmStep(state, context);
      if (result === _quickCommand__WEBPACK_IMPORTED_MODULE_4__.StepResult.Break)
        continue;
      state.flags = result;
      _quickCommand__WEBPACK_IMPORTED_MODULE_4__.QuickCommand.endSteps(state);
      this.execute(state);
    }
    return state.counter < 0 ? _quickCommand__WEBPACK_IMPORTED_MODULE_4__.StepResult.Break : void 0;
  }
  async *confirmStep(state, context) {
    const aheadBehind = await _container__WEBPACK_IMPORTED_MODULE_0__.Container.git.getAheadBehindCommitCount(state.repo.path, [
      _git_git__WEBPACK_IMPORTED_MODULE_1__.GitRevision.createRange(context.destination.name, state.reference.name)
    ]);
    const count = aheadBehind != null ? aheadBehind.ahead + aheadBehind.behind : 0;
    if (count === 0) {
      const step2 = this.createConfirmStep((0,_quickCommand__WEBPACK_IMPORTED_MODULE_4__.appendReposToTitle)(`Confirm ${context.title}`, state, context), [], _quickpicks__WEBPACK_IMPORTED_MODULE_2__.DirectiveQuickPickItem.create(_quickpicks__WEBPACK_IMPORTED_MODULE_2__.Directive.Cancel, true, {
        label: `Cancel ${this.title}`,
        detail: `${_git_git__WEBPACK_IMPORTED_MODULE_1__.GitReference.toString(context.destination, {
          capitalize: true
        })} is up to date with ${_git_git__WEBPACK_IMPORTED_MODULE_1__.GitReference.toString(state.reference)}`
      }));
      const selection2 = yield step2;
      _quickCommand__WEBPACK_IMPORTED_MODULE_4__.QuickCommand.canPickStepContinue(step2, state, selection2);
      return _quickCommand__WEBPACK_IMPORTED_MODULE_4__.StepResult.Break;
    }
    const step = this.createConfirmStep((0,_quickCommand__WEBPACK_IMPORTED_MODULE_4__.appendReposToTitle)(`Confirm ${context.title}`, state, context), [
      _quickpicks__WEBPACK_IMPORTED_MODULE_2__.FlagsQuickPickItem.create(state.flags, [], {
        label: this.title,
        detail: `Will merge ${_system__WEBPACK_IMPORTED_MODULE_3__.Strings.pluralize("commit", count)} from ${_git_git__WEBPACK_IMPORTED_MODULE_1__.GitReference.toString(state.reference)} into ${_git_git__WEBPACK_IMPORTED_MODULE_1__.GitReference.toString(context.destination)}`
      }),
      _quickpicks__WEBPACK_IMPORTED_MODULE_2__.FlagsQuickPickItem.create(state.flags, ["--ff-only"], {
        label: `Fast-forward ${this.title}`,
        description: "--ff-only",
        detail: `Will fast-forward merge ${_system__WEBPACK_IMPORTED_MODULE_3__.Strings.pluralize("commit", count)} from ${_git_git__WEBPACK_IMPORTED_MODULE_1__.GitReference.toString(state.reference)} into ${_git_git__WEBPACK_IMPORTED_MODULE_1__.GitReference.toString(context.destination)}`
      }),
      _quickpicks__WEBPACK_IMPORTED_MODULE_2__.FlagsQuickPickItem.create(state.flags, ["--no-ff"], {
        label: `No Fast-forward ${this.title}`,
        description: "--no-ff",
        detail: `Will create a merge commit when merging ${_system__WEBPACK_IMPORTED_MODULE_3__.Strings.pluralize("commit", count)} from ${_git_git__WEBPACK_IMPORTED_MODULE_1__.GitReference.toString(state.reference)} into ${_git_git__WEBPACK_IMPORTED_MODULE_1__.GitReference.toString(context.destination)}`
      }),
      _quickpicks__WEBPACK_IMPORTED_MODULE_2__.FlagsQuickPickItem.create(state.flags, ["--squash"], {
        label: `Squash ${this.title}`,
        description: "--squash",
        detail: `Will squash ${_system__WEBPACK_IMPORTED_MODULE_3__.Strings.pluralize("commit", count)} from ${_git_git__WEBPACK_IMPORTED_MODULE_1__.GitReference.toString(state.reference)} into one when merging into ${_git_git__WEBPACK_IMPORTED_MODULE_1__.GitReference.toString(context.destination)}`
      })
    ]);
    const selection = yield step;
    return _quickCommand__WEBPACK_IMPORTED_MODULE_4__.QuickCommand.canPickStepContinue(step, state, selection) ? selection[0].item : _quickCommand__WEBPACK_IMPORTED_MODULE_4__.StepResult.Break;
  }
}


/***/ }),

/***/ "./src/commands/git/pull.ts":
/*!**********************************!*\
  !*** ./src/commands/git/pull.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PullGitCommand": () => (/* binding */ PullGitCommand)
/* harmony export */ });
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../constants */ "./src/constants.ts");
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../container */ "./src/container.ts");
/* harmony import */ var _git_git__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../git/git */ "./src/git/git.ts");
/* harmony import */ var _quickpicks__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../quickpicks */ "./src/quickpicks.ts");
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../system */ "./src/system.ts");
/* harmony import */ var _quickCommand__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../quickCommand */ "./src/commands/quickCommand.ts");







class PullGitCommand extends _quickCommand__WEBPACK_IMPORTED_MODULE_5__.QuickCommand {
  constructor(args) {
    super("pull", "pull", "Pull", {
      description: "fetches and integrates changes from a remote into the current branch"
    });
    var _a;
    let counter = 0;
    if (((_a = args == null ? void 0 : args.state) == null ? void 0 : _a.repos) != null && (!Array.isArray(args.state.repos) || args.state.repos.length !== 0)) {
      counter++;
    }
    this.initialState = {
      counter,
      confirm: args == null ? void 0 : args.confirm,
      ...args == null ? void 0 : args.state
    };
  }
  async execute(state) {
    if (_git_git__WEBPACK_IMPORTED_MODULE_2__.GitReference.isBranch(state.reference)) {
      if (!_git_git__WEBPACK_IMPORTED_MODULE_2__.GitBranch.is(state.reference) || !state.reference.current) {
        const currentBranch = await state.repos[0].getBranch();
        if ((currentBranch == null ? void 0 : currentBranch.name) !== state.reference.name) {
          return state.repos[0].fetch({ branch: state.reference, pull: true });
        }
      }
    }
    return _container__WEBPACK_IMPORTED_MODULE_1__.Container.git.pullAll(state.repos, { rebase: state.flags.includes("--rebase") });
  }
  async *steps(state) {
    const context = {
      repos: [...await _container__WEBPACK_IMPORTED_MODULE_1__.Container.git.getOrderedRepositories()],
      title: this.title
    };
    if (state.flags == null) {
      state.flags = [];
    }
    if (state.repos != null && !Array.isArray(state.repos)) {
      state.repos = [state.repos];
    }
    let skippedStepOne = false;
    while (this.canStepsContinue(state)) {
      context.title = this.title;
      if (state.counter < 1 || state.repos == null || state.repos.length === 0 || _system__WEBPACK_IMPORTED_MODULE_4__.Arrays.isStringArray(state.repos)) {
        skippedStepOne = false;
        if (context.repos.length === 1) {
          skippedStepOne = true;
          state.counter++;
          state.repos = [context.repos[0]];
        } else {
          const result = yield* (0,_quickCommand__WEBPACK_IMPORTED_MODULE_5__.pickRepositoriesStep)(state, context, { skipIfPossible: state.counter >= 1 });
          if (result === _quickCommand__WEBPACK_IMPORTED_MODULE_5__.StepResult.Break)
            break;
          state.repos = result;
        }
      }
      if (this.confirm(state.confirm)) {
        const result = yield* this.confirmStep(state, context);
        if (result === _quickCommand__WEBPACK_IMPORTED_MODULE_5__.StepResult.Break) {
          if (skippedStepOne) {
            state.counter--;
          }
          continue;
        }
        state.flags = result;
      }
      _quickCommand__WEBPACK_IMPORTED_MODULE_5__.QuickCommand.endSteps(state);
      void this.execute(state);
    }
    return state.counter < 0 ? _quickCommand__WEBPACK_IMPORTED_MODULE_5__.StepResult.Break : void 0;
  }
  async *confirmStep(state, context) {
    let step;
    if (state.repos.length > 1) {
      step = this.createConfirmStep((0,_quickCommand__WEBPACK_IMPORTED_MODULE_5__.appendReposToTitle)(`Confirm ${context.title}`, state, context), [
        _quickpicks__WEBPACK_IMPORTED_MODULE_3__.FlagsQuickPickItem.create(state.flags, [], {
          label: this.title,
          detail: `Will pull ${state.repos.length} repositories`
        }),
        _quickpicks__WEBPACK_IMPORTED_MODULE_3__.FlagsQuickPickItem.create(state.flags, ["--rebase"], {
          label: `${this.title} with Rebase`,
          description: "--rebase",
          detail: `Will pull ${state.repos.length} repositories by rebasing`
        })
      ]);
    } else if (_git_git__WEBPACK_IMPORTED_MODULE_2__.GitReference.isBranch(state.reference)) {
      if (state.reference.remote) {
        step = this.createConfirmStep((0,_quickCommand__WEBPACK_IMPORTED_MODULE_5__.appendReposToTitle)(`Confirm ${context.title}`, state, context), [], _quickpicks__WEBPACK_IMPORTED_MODULE_3__.DirectiveQuickPickItem.create(_quickpicks__WEBPACK_IMPORTED_MODULE_3__.Directive.Cancel, true, {
          label: `Cancel ${this.title}`,
          detail: "Cannot pull a remote branch"
        }));
      } else {
        const [repo] = state.repos;
        const branch = await repo.getBranch(state.reference.name);
        if ((branch == null ? void 0 : branch.upstream) == null) {
          step = this.createConfirmStep((0,_quickCommand__WEBPACK_IMPORTED_MODULE_5__.appendReposToTitle)(`Confirm ${context.title}`, state, context), [], _quickpicks__WEBPACK_IMPORTED_MODULE_3__.DirectiveQuickPickItem.create(_quickpicks__WEBPACK_IMPORTED_MODULE_3__.Directive.Cancel, true, {
            label: `Cancel ${this.title}`,
            detail: "Cannot pull a branch until it has been published"
          }));
        } else {
          step = this.createConfirmStep((0,_quickCommand__WEBPACK_IMPORTED_MODULE_5__.appendReposToTitle)(`Confirm ${context.title}`, state, context), [
            _quickpicks__WEBPACK_IMPORTED_MODULE_3__.FlagsQuickPickItem.create(state.flags, [], {
              label: this.title,
              detail: `Will pull${branch.state.behind ? ` ${_system__WEBPACK_IMPORTED_MODULE_4__.Strings.pluralize("commit", branch.state.behind)} into ${_git_git__WEBPACK_IMPORTED_MODULE_2__.GitReference.toString(branch)}` : ` into ${_git_git__WEBPACK_IMPORTED_MODULE_2__.GitReference.toString(branch)}`}`
            })
          ]);
        }
      }
    } else {
      const [repo] = state.repos;
      const [status, lastFetched] = await Promise.all([repo.getStatus(), repo.getLastFetched()]);
      let lastFetchedOn = "";
      if (lastFetched !== 0) {
        lastFetchedOn = `${_system__WEBPACK_IMPORTED_MODULE_4__.Strings.pad(_constants__WEBPACK_IMPORTED_MODULE_0__.GlyphChars.Dot, 2, 2)}Last fetched ${_system__WEBPACK_IMPORTED_MODULE_4__.Dates.getFormatter(new Date(lastFetched)).fromNow()}`;
      }
      const pullDetails = (status == null ? void 0 : status.state.behind) != null ? ` ${_system__WEBPACK_IMPORTED_MODULE_4__.Strings.pluralize("commit", status.state.behind)} into $(repo) ${repo.formattedName}` : ` into $(repo) ${repo.formattedName}`;
      step = this.createConfirmStep((0,_quickCommand__WEBPACK_IMPORTED_MODULE_5__.appendReposToTitle)(`Confirm ${context.title}`, state, context, lastFetchedOn), [
        _quickpicks__WEBPACK_IMPORTED_MODULE_3__.FlagsQuickPickItem.create(state.flags, [], {
          label: this.title,
          detail: `Will pull${pullDetails}`
        }),
        _quickpicks__WEBPACK_IMPORTED_MODULE_3__.FlagsQuickPickItem.create(state.flags, ["--rebase"], {
          label: `${this.title} with Rebase`,
          description: "--rebase",
          detail: `Will pull and rebase${pullDetails}`
        })
      ], void 0, {
        additionalButtons: [_quickCommand__WEBPACK_IMPORTED_MODULE_5__.QuickCommandButtons.Fetch],
        onDidClickButton: async (quickpick, button) => {
          if (button !== _quickCommand__WEBPACK_IMPORTED_MODULE_5__.QuickCommandButtons.Fetch || quickpick.busy)
            return false;
          quickpick.title = `Confirm ${context.title}${_system__WEBPACK_IMPORTED_MODULE_4__.Strings.pad(_constants__WEBPACK_IMPORTED_MODULE_0__.GlyphChars.Dot, 2, 2)}Fetching${_constants__WEBPACK_IMPORTED_MODULE_0__.GlyphChars.Ellipsis}`;
          quickpick.busy = true;
          quickpick.enabled = false;
          try {
            await repo.fetch({ progress: true });
            return true;
          } finally {
            quickpick.busy = false;
            quickpick.enabled = true;
          }
        }
      });
    }
    const selection = yield step;
    return _quickCommand__WEBPACK_IMPORTED_MODULE_5__.QuickCommand.canPickStepContinue(step, state, selection) ? selection[0].item : _quickCommand__WEBPACK_IMPORTED_MODULE_5__.StepResult.Break;
  }
}


/***/ }),

/***/ "./src/commands/git/push.ts":
/*!**********************************!*\
  !*** ./src/commands/git/push.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PushGitCommand": () => (/* binding */ PushGitCommand)
/* harmony export */ });
/* harmony import */ var _configuration__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../configuration */ "./src/configuration.ts");
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../constants */ "./src/constants.ts");
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../container */ "./src/container.ts");
/* harmony import */ var _git_git__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../git/git */ "./src/git/git.ts");
/* harmony import */ var _quickpicks__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../quickpicks */ "./src/quickpicks.ts");
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../system */ "./src/system.ts");
/* harmony import */ var _quickCommand__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../quickCommand */ "./src/commands/quickCommand.ts");








class PushGitCommand extends _quickCommand__WEBPACK_IMPORTED_MODULE_6__.QuickCommand {
  constructor(args) {
    super("push", "push", "Push", {
      description: "pushes changes from the current branch to a remote"
    });
    var _a;
    let counter = 0;
    if (((_a = args == null ? void 0 : args.state) == null ? void 0 : _a.repos) != null && (!Array.isArray(args.state.repos) || args.state.repos.length !== 0)) {
      counter++;
    }
    this.initialState = {
      counter,
      confirm: args == null ? void 0 : args.confirm,
      ...args == null ? void 0 : args.state
    };
  }
  execute(state) {
    const index = state.flags.indexOf("--set-upstream");
    if (index !== -1) {
      if (!_git_git__WEBPACK_IMPORTED_MODULE_3__.GitReference.isBranch(state.reference))
        return Promise.resolve();
      return _container__WEBPACK_IMPORTED_MODULE_2__.Container.git.pushAll(state.repos, {
        force: false,
        publish: { remote: state.flags[index + 1] },
        reference: state.reference
      });
    }
    return _container__WEBPACK_IMPORTED_MODULE_2__.Container.git.pushAll(state.repos, {
      force: state.flags.includes("--force"),
      reference: state.reference
    });
  }
  async *steps(state) {
    const context = {
      repos: [...await _container__WEBPACK_IMPORTED_MODULE_2__.Container.git.getOrderedRepositories()],
      title: this.title
    };
    if (state.flags == null) {
      state.flags = [];
    }
    if (state.repos != null && !Array.isArray(state.repos)) {
      state.repos = [state.repos];
    }
    let skippedStepOne = false;
    while (this.canStepsContinue(state)) {
      context.title = this.title;
      if (state.counter < 1 || state.repos == null || state.repos.length === 0 || _system__WEBPACK_IMPORTED_MODULE_5__.Arrays.isStringArray(state.repos)) {
        skippedStepOne = false;
        if (context.repos.length === 1) {
          skippedStepOne = true;
          state.counter++;
          state.repos = [context.repos[0]];
        } else if (state.reference != null) {
          const result = yield* (0,_quickCommand__WEBPACK_IMPORTED_MODULE_6__.pickRepositoryStep)({ ...state, repos: void 0, repo: state.reference.repoPath }, context);
          if (result === _quickCommand__WEBPACK_IMPORTED_MODULE_6__.StepResult.Break)
            break;
          state.repos = [result];
        } else {
          const result = yield* (0,_quickCommand__WEBPACK_IMPORTED_MODULE_6__.pickRepositoriesStep)(state, context, { skipIfPossible: state.counter >= 1 });
          if (result === _quickCommand__WEBPACK_IMPORTED_MODULE_6__.StepResult.Break)
            break;
          state.repos = result;
        }
      }
      if (this.confirm(state.confirm)) {
        const result = yield* this.confirmStep(state, context);
        if (result === _quickCommand__WEBPACK_IMPORTED_MODULE_6__.StepResult.Break) {
          if (skippedStepOne) {
            state.counter--;
          }
          continue;
        }
        state.flags = result;
      }
      _quickCommand__WEBPACK_IMPORTED_MODULE_6__.QuickCommand.endSteps(state);
      void this.execute(state);
    }
    return state.counter < 0 ? _quickCommand__WEBPACK_IMPORTED_MODULE_6__.StepResult.Break : void 0;
  }
  async *confirmStep(state, context) {
    var _a, _b, _c;
    const useForceWithLease = (_a = _configuration__WEBPACK_IMPORTED_MODULE_0__.configuration.getAny(_constants__WEBPACK_IMPORTED_MODULE_1__.BuiltInGitConfiguration.UseForcePushWithLease)) != null ? _a : false;
    let step;
    if (state.repos.length > 1) {
      step = this.createConfirmStep((0,_quickCommand__WEBPACK_IMPORTED_MODULE_6__.appendReposToTitle)(`Confirm ${context.title}`, state, context), [
        _quickpicks__WEBPACK_IMPORTED_MODULE_4__.FlagsQuickPickItem.create(state.flags, [], {
          label: this.title,
          detail: `Will push ${state.repos.length} repositories`
        }),
        _quickpicks__WEBPACK_IMPORTED_MODULE_4__.FlagsQuickPickItem.create(state.flags, ["--force"], {
          label: `Force ${this.title}${useForceWithLease ? " (with lease)" : ""}`,
          description: `--force${useForceWithLease ? "-with-lease" : ""}`,
          detail: `Will force push${useForceWithLease ? " (with lease)" : ""} ${state.repos.length} repositories`
        })
      ]);
    } else {
      const [repo] = state.repos;
      const items = [];
      if (_git_git__WEBPACK_IMPORTED_MODULE_3__.GitReference.isBranch(state.reference)) {
        if (state.reference.remote) {
          step = this.createConfirmStep((0,_quickCommand__WEBPACK_IMPORTED_MODULE_6__.appendReposToTitle)(`Confirm ${context.title}`, state, context), [], _quickpicks__WEBPACK_IMPORTED_MODULE_4__.DirectiveQuickPickItem.create(_quickpicks__WEBPACK_IMPORTED_MODULE_4__.Directive.Cancel, true, {
            label: `Cancel ${this.title}`,
            detail: "Cannot push remote branch"
          }));
        } else {
          const branch = await repo.getBranch(state.reference.name);
          if (branch != null && (branch == null ? void 0 : branch.upstream) == null) {
            for (const remote of await repo.getRemotes()) {
              items.push(_quickpicks__WEBPACK_IMPORTED_MODULE_4__.FlagsQuickPickItem.create(state.flags, ["--set-upstream", remote.name, branch.name], {
                label: `Publish ${branch.name} to ${remote.name}`,
                detail: `Will publish ${_git_git__WEBPACK_IMPORTED_MODULE_3__.GitReference.toString(branch)} to ${remote.name}`
              }));
            }
            if (items.length) {
              step = this.createConfirmStep((0,_quickCommand__WEBPACK_IMPORTED_MODULE_6__.appendReposToTitle)("Confirm Publish", state, context), items, void 0, { placeholder: "Confirm Publish" });
            } else {
              step = this.createConfirmStep((0,_quickCommand__WEBPACK_IMPORTED_MODULE_6__.appendReposToTitle)("Confirm Publish", state, context), [], _quickpicks__WEBPACK_IMPORTED_MODULE_4__.DirectiveQuickPickItem.create(_quickpicks__WEBPACK_IMPORTED_MODULE_4__.Directive.Cancel, true, {
                label: "Cancel Publish",
                detail: "Cannot publish; No remotes found"
              }), { placeholder: "Confirm Publish" });
            }
          } else if (branch != null && (branch == null ? void 0 : branch.state.behind) > 0) {
            const currentBranch = await repo.getBranch();
            step = this.createConfirmStep((0,_quickCommand__WEBPACK_IMPORTED_MODULE_6__.appendReposToTitle)(`Confirm ${context.title}`, state, context), branch.id === (currentBranch == null ? void 0 : currentBranch.id) ? [
              _quickpicks__WEBPACK_IMPORTED_MODULE_4__.FlagsQuickPickItem.create(state.flags, ["--force"], {
                label: `Force ${this.title}${useForceWithLease ? " (with lease)" : ""}`,
                description: `--force${useForceWithLease ? "-with-lease" : ""}`,
                detail: `Will force push${useForceWithLease ? " (with lease)" : ""} ${(branch == null ? void 0 : branch.state.ahead) ? ` ${_system__WEBPACK_IMPORTED_MODULE_5__.Strings.pluralize("commit", branch.state.ahead)}` : ""}${branch.getRemoteName() ? ` to ${branch.getRemoteName()}` : ""}${branch != null && branch.state.behind > 0 ? `, overwriting ${_system__WEBPACK_IMPORTED_MODULE_5__.Strings.pluralize("commit", branch.state.behind)}${(branch == null ? void 0 : branch.getRemoteName()) ? ` on ${branch.getRemoteName()}` : ""}` : ""}`
              })
            ] : [], _quickpicks__WEBPACK_IMPORTED_MODULE_4__.DirectiveQuickPickItem.create(_quickpicks__WEBPACK_IMPORTED_MODULE_4__.Directive.Cancel, true, {
              label: `Cancel ${this.title}`,
              detail: `Cannot push; ${_git_git__WEBPACK_IMPORTED_MODULE_3__.GitReference.toString(branch)} is behind ${branch.getRemoteName()} by ${_system__WEBPACK_IMPORTED_MODULE_5__.Strings.pluralize("commit", branch.state.behind)}`
            }));
          } else if (branch != null && (branch == null ? void 0 : branch.state.ahead) > 0) {
            step = this.createConfirmStep((0,_quickCommand__WEBPACK_IMPORTED_MODULE_6__.appendReposToTitle)(`Confirm ${context.title}`, state, context), [
              _quickpicks__WEBPACK_IMPORTED_MODULE_4__.FlagsQuickPickItem.create(state.flags, [branch.getRemoteName()], {
                label: this.title,
                detail: `Will push ${_system__WEBPACK_IMPORTED_MODULE_5__.Strings.pluralize("commit", branch.state.ahead)} from ${_git_git__WEBPACK_IMPORTED_MODULE_3__.GitReference.toString(branch)} to ${branch.getRemoteName()}`
              })
            ]);
          } else {
            step = this.createConfirmStep((0,_quickCommand__WEBPACK_IMPORTED_MODULE_6__.appendReposToTitle)(`Confirm ${context.title}`, state, context), [], _quickpicks__WEBPACK_IMPORTED_MODULE_4__.DirectiveQuickPickItem.create(_quickpicks__WEBPACK_IMPORTED_MODULE_4__.Directive.Cancel, true, {
              label: `Cancel ${this.title}`,
              detail: "No commits found to push"
            }));
          }
        }
      } else {
        const status = await repo.getStatus();
        const branch = {
          refType: "branch",
          name: (_b = status == null ? void 0 : status.branch) != null ? _b : "HEAD",
          ref: (_c = status == null ? void 0 : status.branch) != null ? _c : "HEAD",
          remote: false,
          repoPath: repo.path
        };
        if ((status == null ? void 0 : status.state.ahead) === 0) {
          if (state.reference == null && status.upstream == null) {
            state.reference = branch;
            for (const remote of await repo.getRemotes()) {
              items.push(_quickpicks__WEBPACK_IMPORTED_MODULE_4__.FlagsQuickPickItem.create(state.flags, ["--set-upstream", remote.name, status.branch], {
                label: `Publish ${branch.name} to ${remote.name}`,
                detail: `Will publish ${_git_git__WEBPACK_IMPORTED_MODULE_3__.GitReference.toString(branch)} to ${remote.name}`
              }));
            }
          }
          if (items.length) {
            step = this.createConfirmStep((0,_quickCommand__WEBPACK_IMPORTED_MODULE_6__.appendReposToTitle)("Confirm Publish", state, context), items, void 0, { placeholder: "Confirm Publish" });
          } else if (status.upstream == null) {
            step = this.createConfirmStep((0,_quickCommand__WEBPACK_IMPORTED_MODULE_6__.appendReposToTitle)("Confirm Publish", state, context), [], _quickpicks__WEBPACK_IMPORTED_MODULE_4__.DirectiveQuickPickItem.create(_quickpicks__WEBPACK_IMPORTED_MODULE_4__.Directive.Cancel, true, {
              label: "Cancel Publish",
              detail: "Cannot publish; No remotes found"
            }), { placeholder: "Confirm Publish" });
          } else {
            step = this.createConfirmStep((0,_quickCommand__WEBPACK_IMPORTED_MODULE_6__.appendReposToTitle)("Confirm Push", state, context), [], _quickpicks__WEBPACK_IMPORTED_MODULE_4__.DirectiveQuickPickItem.create(_quickpicks__WEBPACK_IMPORTED_MODULE_4__.Directive.Cancel, true, {
              label: `Cancel ${this.title}`,
              detail: `Cannot push; No commits ahead of ${_git_git__WEBPACK_IMPORTED_MODULE_3__.GitBranch.getRemote(status.upstream)}`
            }));
          }
        } else {
          let lastFetchedOn = "";
          const lastFetched = await repo.getLastFetched();
          if (lastFetched !== 0) {
            lastFetchedOn = `${_system__WEBPACK_IMPORTED_MODULE_5__.Strings.pad(_constants__WEBPACK_IMPORTED_MODULE_1__.GlyphChars.Dot, 2, 2)}Last fetched ${_system__WEBPACK_IMPORTED_MODULE_5__.Dates.getFormatter(new Date(lastFetched)).fromNow()}`;
          }
          let pushDetails;
          if (state.reference != null) {
            pushDetails = `${(status == null ? void 0 : status.state.ahead) ? ` commits up to and including ${_git_git__WEBPACK_IMPORTED_MODULE_3__.GitReference.toString(state.reference, {
              label: false
            })}` : ""}${(status == null ? void 0 : status.upstream) ? ` to ${_git_git__WEBPACK_IMPORTED_MODULE_3__.GitBranch.getRemote(status.upstream)}` : ""}`;
          } else {
            pushDetails = `${(status == null ? void 0 : status.state.ahead) ? ` ${_system__WEBPACK_IMPORTED_MODULE_5__.Strings.pluralize("commit", status.state.ahead)}` : ""}${(status == null ? void 0 : status.upstream) ? ` to ${_git_git__WEBPACK_IMPORTED_MODULE_3__.GitBranch.getRemote(status.upstream)}` : ""}`;
          }
          step = this.createConfirmStep((0,_quickCommand__WEBPACK_IMPORTED_MODULE_6__.appendReposToTitle)(`Confirm ${context.title}`, state, context, lastFetchedOn), [
            ...(status == null ? void 0 : status.state.behind) ? [] : [
              _quickpicks__WEBPACK_IMPORTED_MODULE_4__.FlagsQuickPickItem.create(state.flags, [], {
                label: this.title,
                detail: `Will push${pushDetails}`
              })
            ],
            _quickpicks__WEBPACK_IMPORTED_MODULE_4__.FlagsQuickPickItem.create(state.flags, ["--force"], {
              label: `Force ${this.title}${useForceWithLease ? " (with lease)" : ""}`,
              description: `--force${useForceWithLease ? "-with-lease" : ""}`,
              detail: `Will force push${useForceWithLease ? " (with lease)" : ""} ${pushDetails}${status != null && status.state.behind > 0 ? `, overwriting ${_system__WEBPACK_IMPORTED_MODULE_5__.Strings.pluralize("commit", status.state.behind)}${(status == null ? void 0 : status.upstream) ? ` on ${_git_git__WEBPACK_IMPORTED_MODULE_3__.GitBranch.getRemote(status.upstream)}` : ""}` : ""}`
            })
          ], (status == null ? void 0 : status.state.behind) ? _quickpicks__WEBPACK_IMPORTED_MODULE_4__.DirectiveQuickPickItem.create(_quickpicks__WEBPACK_IMPORTED_MODULE_4__.Directive.Cancel, true, {
            label: `Cancel ${this.title}`,
            detail: `Cannot push; ${_git_git__WEBPACK_IMPORTED_MODULE_3__.GitReference.toString(branch)} is behind${(status == null ? void 0 : status.upstream) ? ` ${_git_git__WEBPACK_IMPORTED_MODULE_3__.GitBranch.getRemote(status.upstream)}` : ""} by ${_system__WEBPACK_IMPORTED_MODULE_5__.Strings.pluralize("commit", status.state.behind)}`
          }) : void 0);
          step.additionalButtons = [_quickCommand__WEBPACK_IMPORTED_MODULE_6__.QuickCommandButtons.Fetch];
          step.onDidClickButton = async (quickpick, button) => {
            if (button !== _quickCommand__WEBPACK_IMPORTED_MODULE_6__.QuickCommandButtons.Fetch || quickpick.busy)
              return false;
            quickpick.title = `Confirm ${context.title}${_system__WEBPACK_IMPORTED_MODULE_5__.Strings.pad(_constants__WEBPACK_IMPORTED_MODULE_1__.GlyphChars.Dot, 2, 2)}Fetching${_constants__WEBPACK_IMPORTED_MODULE_1__.GlyphChars.Ellipsis}`;
            quickpick.busy = true;
            quickpick.enabled = false;
            try {
              await repo.fetch({ progress: true });
              return true;
            } finally {
              quickpick.busy = false;
              quickpick.enabled = true;
            }
          };
        }
      }
    }
    const selection = yield step;
    return _quickCommand__WEBPACK_IMPORTED_MODULE_6__.QuickCommand.canPickStepContinue(step, state, selection) ? selection[0].item : _quickCommand__WEBPACK_IMPORTED_MODULE_6__.StepResult.Break;
  }
}


/***/ }),

/***/ "./src/commands/git/rebase.ts":
/*!************************************!*\
  !*** ./src/commands/git/rebase.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "RebaseGitCommand": () => (/* binding */ RebaseGitCommand)
/* harmony export */ });
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../container */ "./src/container.ts");
/* harmony import */ var _git_git__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../git/git */ "./src/git/git.ts");
/* harmony import */ var _quickpicks__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../quickpicks */ "./src/quickpicks.ts");
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../system */ "./src/system.ts");
/* harmony import */ var _quickCommand__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../quickCommand */ "./src/commands/quickCommand.ts");







class RebaseGitCommand extends _quickCommand__WEBPACK_IMPORTED_MODULE_5__.QuickCommand {
  constructor(args) {
    super("rebase", "rebase", "Rebase", {
      description: "integrates changes from a specified branch into the current branch, by changing the base of the branch and reapplying the commits on top"
    });
    var _a, _b;
    let counter = 0;
    if (((_a = args == null ? void 0 : args.state) == null ? void 0 : _a.repo) != null) {
      counter++;
    }
    if (((_b = args == null ? void 0 : args.state) == null ? void 0 : _b.reference) != null) {
      counter++;
    }
    this.initialState = {
      counter,
      confirm: true,
      ...args == null ? void 0 : args.state
    };
  }
  get canSkipConfirm() {
    return false;
  }
  async execute(state) {
    let configs;
    if (state.flags.includes("--interactive")) {
      await _container__WEBPACK_IMPORTED_MODULE_1__.Container.rebaseEditor.enableForNextUse();
      let editor;
      switch (vscode__WEBPACK_IMPORTED_MODULE_0__.env.appName) {
        case "Visual Studio Code - Insiders":
          editor = "code-insiders --wait --reuse-window";
          break;
        case "Visual Studio Code - Exploration":
          editor = "code-exploration --wait --reuse-window";
          break;
        default:
          editor = "code --wait --reuse-window";
          break;
      }
      configs = ["-c", `sequence.editor="${editor}"`];
    }
    return state.repo.rebase(configs, ...state.flags, state.reference.ref);
  }
  async *steps(state) {
    var _a, _b, _c;
    const context = {
      repos: [...await _container__WEBPACK_IMPORTED_MODULE_1__.Container.git.getOrderedRepositories()],
      cache: new Map(),
      destination: void 0,
      pickCommit: false,
      selectedBranchOrTag: void 0,
      showTags: true,
      title: this.title
    };
    if (state.flags == null) {
      state.flags = [];
    }
    let skippedStepOne = false;
    while (this.canStepsContinue(state)) {
      context.title = this.title;
      if (state.counter < 1 || state.repo == null || typeof state.repo === "string") {
        skippedStepOne = false;
        if (context.repos.length === 1) {
          skippedStepOne = true;
          if (state.repo == null) {
            state.counter++;
          }
          state.repo = context.repos[0];
        } else {
          const result2 = yield* (0,_quickCommand__WEBPACK_IMPORTED_MODULE_5__.pickRepositoryStep)(state, context);
          if (result2 === _quickCommand__WEBPACK_IMPORTED_MODULE_5__.StepResult.Break)
            break;
          state.repo = result2;
        }
      }
      if (context.destination == null) {
        const branch = await state.repo.getBranch();
        if (branch == null)
          break;
        context.destination = branch;
      }
      context.title = `${this.title} ${_git_git__WEBPACK_IMPORTED_MODULE_2__.GitReference.toString(context.destination, { icon: false })}`;
      if (state.counter < 2 || state.reference == null) {
        const pickCommitToggle = new _quickCommand__WEBPACK_IMPORTED_MODULE_5__.QuickCommandButtons.PickCommitToggle(context.pickCommit, context, () => {
          context.pickCommit = !context.pickCommit;
          pickCommitToggle.on = context.pickCommit;
        });
        const result2 = yield* (0,_quickCommand__WEBPACK_IMPORTED_MODULE_5__.pickBranchOrTagStep)(state, context, {
          placeholder: (context2) => `Choose a branch${context2.showTags ? " or tag" : ""} to rebase`,
          picked: (_a = context.selectedBranchOrTag) == null ? void 0 : _a.ref,
          value: context.selectedBranchOrTag == null ? (_b = state.reference) == null ? void 0 : _b.ref : void 0,
          additionalButtons: [pickCommitToggle]
        });
        if (result2 === _quickCommand__WEBPACK_IMPORTED_MODULE_5__.StepResult.Break) {
          if (skippedStepOne) {
            state.counter--;
          }
          continue;
        }
        state.reference = result2;
        context.selectedBranchOrTag = void 0;
      }
      if (!_git_git__WEBPACK_IMPORTED_MODULE_2__.GitReference.isRevision(state.reference)) {
        context.selectedBranchOrTag = state.reference;
      }
      if (state.counter < 3 && context.selectedBranchOrTag != null && (context.pickCommit || state.reference.ref === context.destination.ref)) {
        const ref = context.selectedBranchOrTag.ref;
        let log = context.cache.get(ref);
        if (log == null) {
          log = _container__WEBPACK_IMPORTED_MODULE_1__.Container.git.getLog(state.repo.path, { ref, merges: false });
          context.cache.set(ref, log);
        }
        const result2 = yield* (0,_quickCommand__WEBPACK_IMPORTED_MODULE_5__.pickCommitStep)(state, context, {
          ignoreFocusOut: true,
          log: await log,
          onDidLoadMore: (log2) => context.cache.set(ref, Promise.resolve(log2)),
          placeholder: (context2, log2) => log2 == null ? `No commits found on ${_git_git__WEBPACK_IMPORTED_MODULE_2__.GitReference.toString(context2.selectedBranchOrTag, {
            icon: false
          })}` : `Choose a commit to rebase ${_git_git__WEBPACK_IMPORTED_MODULE_2__.GitReference.toString(context2.destination, {
            icon: false
          })} onto`,
          picked: (_c = state.reference) == null ? void 0 : _c.ref
        });
        if (result2 === _quickCommand__WEBPACK_IMPORTED_MODULE_5__.StepResult.Break)
          continue;
        state.reference = result2;
      }
      const result = yield* this.confirmStep(state, context);
      if (result === _quickCommand__WEBPACK_IMPORTED_MODULE_5__.StepResult.Break)
        continue;
      state.flags = result;
      _quickCommand__WEBPACK_IMPORTED_MODULE_5__.QuickCommand.endSteps(state);
      void this.execute(state);
    }
    return state.counter < 0 ? _quickCommand__WEBPACK_IMPORTED_MODULE_5__.StepResult.Break : void 0;
  }
  async *confirmStep(state, context) {
    const aheadBehind = await _container__WEBPACK_IMPORTED_MODULE_1__.Container.git.getAheadBehindCommitCount(state.repo.path, [
      state.reference.refType === "revision" ? _git_git__WEBPACK_IMPORTED_MODULE_2__.GitRevision.createRange(state.reference.ref, context.destination.ref) : _git_git__WEBPACK_IMPORTED_MODULE_2__.GitRevision.createRange(context.destination.name, state.reference.name)
    ]);
    const count = aheadBehind != null ? aheadBehind.ahead + aheadBehind.behind : 0;
    if (count === 0) {
      const step2 = this.createConfirmStep((0,_quickCommand__WEBPACK_IMPORTED_MODULE_5__.appendReposToTitle)(`Confirm ${context.title}`, state, context), [], _quickpicks__WEBPACK_IMPORTED_MODULE_3__.DirectiveQuickPickItem.create(_quickpicks__WEBPACK_IMPORTED_MODULE_3__.Directive.Cancel, true, {
        label: `Cancel ${this.title}`,
        detail: `${_git_git__WEBPACK_IMPORTED_MODULE_2__.GitReference.toString(context.destination, {
          capitalize: true
        })} is up to date with ${_git_git__WEBPACK_IMPORTED_MODULE_2__.GitReference.toString(state.reference)}`
      }));
      const selection2 = yield step2;
      _quickCommand__WEBPACK_IMPORTED_MODULE_5__.QuickCommand.canPickStepContinue(step2, state, selection2);
      return _quickCommand__WEBPACK_IMPORTED_MODULE_5__.StepResult.Break;
    }
    const step = this.createConfirmStep((0,_quickCommand__WEBPACK_IMPORTED_MODULE_5__.appendReposToTitle)(`Confirm ${context.title}`, state, context), [
      _quickpicks__WEBPACK_IMPORTED_MODULE_3__.FlagsQuickPickItem.create(state.flags, [], {
        label: this.title,
        detail: `Will update ${_git_git__WEBPACK_IMPORTED_MODULE_2__.GitReference.toString(context.destination)} by applying ${_system__WEBPACK_IMPORTED_MODULE_4__.Strings.pluralize("commit", count)} on top of ${_git_git__WEBPACK_IMPORTED_MODULE_2__.GitReference.toString(state.reference)}`
      }),
      _quickpicks__WEBPACK_IMPORTED_MODULE_3__.FlagsQuickPickItem.create(state.flags, ["--interactive"], {
        label: `Interactive ${this.title}`,
        description: "--interactive",
        detail: `Will interactively update ${_git_git__WEBPACK_IMPORTED_MODULE_2__.GitReference.toString(context.destination)} by applying ${_system__WEBPACK_IMPORTED_MODULE_4__.Strings.pluralize("commit", count)} on top of ${_git_git__WEBPACK_IMPORTED_MODULE_2__.GitReference.toString(state.reference)}`
      })
    ]);
    const selection = yield step;
    return _quickCommand__WEBPACK_IMPORTED_MODULE_5__.QuickCommand.canPickStepContinue(step, state, selection) ? selection[0].item : _quickCommand__WEBPACK_IMPORTED_MODULE_5__.StepResult.Break;
  }
}


/***/ }),

/***/ "./src/commands/git/reset.ts":
/*!***********************************!*\
  !*** ./src/commands/git/reset.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ResetGitCommand": () => (/* binding */ ResetGitCommand)
/* harmony export */ });
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../container */ "./src/container.ts");
/* harmony import */ var _git_git__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../git/git */ "./src/git/git.ts");
/* harmony import */ var _quickpicks__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../quickpicks */ "./src/quickpicks.ts");
/* harmony import */ var _quickCommand__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../quickCommand */ "./src/commands/quickCommand.ts");

var __defProp = Object.defineProperty;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};




class ResetGitCommand extends _quickCommand__WEBPACK_IMPORTED_MODULE_3__.QuickCommand {
  constructor(args) {
    super("reset", "reset", "Reset", { description: "resets the current branch to a specified commit" });
    __publicField(this, "_canSkipConfirm", false);
    var _a, _b, _c;
    let counter = 0;
    if (((_a = args == null ? void 0 : args.state) == null ? void 0 : _a.repo) != null) {
      counter++;
    }
    if (((_b = args == null ? void 0 : args.state) == null ? void 0 : _b.reference) != null) {
      counter++;
    }
    this.initialState = {
      counter,
      confirm: (_c = args == null ? void 0 : args.confirm) != null ? _c : true,
      ...args == null ? void 0 : args.state
    };
    this._canSkipConfirm = !this.initialState.confirm;
  }
  get canSkipConfirm() {
    return this._canSkipConfirm;
  }
  execute(state) {
    return state.repo.reset(...state.flags, state.reference.ref);
  }
  async *steps(state) {
    var _a;
    const context = {
      repos: [...await _container__WEBPACK_IMPORTED_MODULE_0__.Container.git.getOrderedRepositories()],
      cache: new Map(),
      destination: void 0,
      title: this.title
    };
    if (state.flags == null) {
      state.flags = [];
    }
    let skippedStepOne = false;
    while (this.canStepsContinue(state)) {
      context.title = this.title;
      if (state.counter < 1 || state.repo == null || typeof state.repo === "string") {
        skippedStepOne = false;
        if (context.repos.length === 1) {
          skippedStepOne = true;
          if (state.repo == null) {
            state.counter++;
          }
          state.repo = context.repos[0];
        } else {
          const result = yield* (0,_quickCommand__WEBPACK_IMPORTED_MODULE_3__.pickRepositoryStep)(state, context);
          if (result === _quickCommand__WEBPACK_IMPORTED_MODULE_3__.StepResult.Break)
            break;
          state.repo = result;
        }
      }
      if (context.destination == null) {
        const branch = await state.repo.getBranch();
        if (branch == null)
          break;
        context.destination = branch;
      }
      context.title = `${this.title} ${_git_git__WEBPACK_IMPORTED_MODULE_1__.GitReference.toString(context.destination, { icon: false })}`;
      if (state.counter < 2 || state.reference == null) {
        const ref = context.destination.ref;
        let log = context.cache.get(ref);
        if (log == null) {
          log = _container__WEBPACK_IMPORTED_MODULE_0__.Container.git.getLog(state.repo.path, { ref, merges: false });
          context.cache.set(ref, log);
        }
        const result = yield* (0,_quickCommand__WEBPACK_IMPORTED_MODULE_3__.pickCommitStep)(state, context, {
          log: await log,
          onDidLoadMore: (log2) => context.cache.set(ref, Promise.resolve(log2)),
          placeholder: (context2, log2) => log2 == null ? `${context2.destination.name} has no commits` : `Choose a commit to reset ${context2.destination.name} to`,
          picked: (_a = state.reference) == null ? void 0 : _a.ref
        });
        if (result === _quickCommand__WEBPACK_IMPORTED_MODULE_3__.StepResult.Break) {
          if (skippedStepOne) {
            state.counter--;
          }
          continue;
        }
        state.reference = result;
      }
      if (this.confirm(state.confirm)) {
        const result = yield* this.confirmStep(state, context);
        if (result === _quickCommand__WEBPACK_IMPORTED_MODULE_3__.StepResult.Break)
          continue;
        state.flags = result;
      }
      _quickCommand__WEBPACK_IMPORTED_MODULE_3__.QuickCommand.endSteps(state);
      this.execute(state);
    }
    return state.counter < 0 ? _quickCommand__WEBPACK_IMPORTED_MODULE_3__.StepResult.Break : void 0;
  }
  *confirmStep(state, context) {
    const step = this.createConfirmStep((0,_quickCommand__WEBPACK_IMPORTED_MODULE_3__.appendReposToTitle)(`Confirm ${context.title}`, state, context), [
      _quickpicks__WEBPACK_IMPORTED_MODULE_2__.FlagsQuickPickItem.create(state.flags, [], {
        label: this.title,
        detail: `Will reset (leaves changes in the working tree) ${_git_git__WEBPACK_IMPORTED_MODULE_1__.GitReference.toString(context.destination)} to ${_git_git__WEBPACK_IMPORTED_MODULE_1__.GitReference.toString(state.reference)}`
      }),
      _quickpicks__WEBPACK_IMPORTED_MODULE_2__.FlagsQuickPickItem.create(state.flags, ["--soft"], {
        label: `Soft ${this.title}`,
        description: "--soft",
        detail: `Will soft reset (leaves changes in the index and working tree) ${_git_git__WEBPACK_IMPORTED_MODULE_1__.GitReference.toString(context.destination)} to ${_git_git__WEBPACK_IMPORTED_MODULE_1__.GitReference.toString(state.reference)}`
      }),
      _quickpicks__WEBPACK_IMPORTED_MODULE_2__.FlagsQuickPickItem.create(state.flags, ["--hard"], {
        label: `Hard ${this.title}`,
        description: "--hard",
        detail: `Will hard reset (discards all changes) ${_git_git__WEBPACK_IMPORTED_MODULE_1__.GitReference.toString(context.destination)} to ${_git_git__WEBPACK_IMPORTED_MODULE_1__.GitReference.toString(state.reference)}`
      })
    ]);
    const selection = yield step;
    return _quickCommand__WEBPACK_IMPORTED_MODULE_3__.QuickCommand.canPickStepContinue(step, state, selection) ? selection[0].item : _quickCommand__WEBPACK_IMPORTED_MODULE_3__.StepResult.Break;
  }
}


/***/ }),

/***/ "./src/commands/git/revert.ts":
/*!************************************!*\
  !*** ./src/commands/git/revert.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "RevertGitCommand": () => (/* binding */ RevertGitCommand)
/* harmony export */ });
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../container */ "./src/container.ts");
/* harmony import */ var _git_git__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../git/git */ "./src/git/git.ts");
/* harmony import */ var _quickpicks__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../quickpicks */ "./src/quickpicks.ts");
/* harmony import */ var _quickCommand__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../quickCommand */ "./src/commands/quickCommand.ts");





class RevertGitCommand extends _quickCommand__WEBPACK_IMPORTED_MODULE_3__.QuickCommand {
  constructor(args) {
    super("revert", "revert", "Revert", {
      description: "undoes the changes of specified commits, by creating new commits with inverted changes"
    });
    var _a, _b;
    let counter = 0;
    if (((_a = args == null ? void 0 : args.state) == null ? void 0 : _a.repo) != null) {
      counter++;
    }
    if (((_b = args == null ? void 0 : args.state) == null ? void 0 : _b.references) != null && (!Array.isArray(args.state.references) || args.state.references.length !== 0)) {
      counter++;
    }
    this.initialState = {
      counter,
      confirm: true,
      ...args == null ? void 0 : args.state
    };
  }
  get canSkipConfirm() {
    return false;
  }
  execute(state) {
    return state.repo.revert(...state.flags, ...state.references.map((c) => c.ref).reverse());
  }
  async *steps(state) {
    var _a;
    const context = {
      repos: [...await _container__WEBPACK_IMPORTED_MODULE_0__.Container.git.getOrderedRepositories()],
      cache: new Map(),
      destination: void 0,
      title: this.title
    };
    if (state.flags == null) {
      state.flags = [];
    }
    if (state.references != null && !Array.isArray(state.references)) {
      state.references = [state.references];
    }
    let skippedStepOne = false;
    while (this.canStepsContinue(state)) {
      context.title = this.title;
      if (state.counter < 1 || state.repo == null || typeof state.repo === "string") {
        skippedStepOne = false;
        if (context.repos.length === 1) {
          skippedStepOne = true;
          if (state.repo == null) {
            state.counter++;
          }
          state.repo = context.repos[0];
        } else {
          const result2 = yield* (0,_quickCommand__WEBPACK_IMPORTED_MODULE_3__.pickRepositoryStep)(state, context);
          if (result2 === _quickCommand__WEBPACK_IMPORTED_MODULE_3__.StepResult.Break)
            break;
          state.repo = result2;
        }
      }
      if (context.destination == null) {
        const branch = await state.repo.getBranch();
        if (branch == null)
          break;
        context.destination = branch;
      }
      if (state.counter < 2 || state.references == null || state.references.length === 0) {
        const ref = context.destination.ref;
        let log = context.cache.get(ref);
        if (log == null) {
          log = _container__WEBPACK_IMPORTED_MODULE_0__.Container.git.getLog(state.repo.path, { ref, merges: false });
          context.cache.set(ref, log);
        }
        const result2 = yield* (0,_quickCommand__WEBPACK_IMPORTED_MODULE_3__.pickCommitsStep)(state, context, {
          log: await log,
          onDidLoadMore: (log2) => context.cache.set(ref, Promise.resolve(log2)),
          placeholder: (context2, log2) => log2 == null ? `${context2.destination.name} has no commits` : "Choose commits to revert",
          picked: (_a = state.references) == null ? void 0 : _a.map((r) => r.ref)
        });
        if (result2 === _quickCommand__WEBPACK_IMPORTED_MODULE_3__.StepResult.Break) {
          if (skippedStepOne) {
            state.counter--;
          }
          continue;
        }
        state.references = result2;
      }
      const result = yield* this.confirmStep(state, context);
      if (result === _quickCommand__WEBPACK_IMPORTED_MODULE_3__.StepResult.Break)
        continue;
      state.flags = result;
      _quickCommand__WEBPACK_IMPORTED_MODULE_3__.QuickCommand.endSteps(state);
      this.execute(state);
    }
    return state.counter < 0 ? _quickCommand__WEBPACK_IMPORTED_MODULE_3__.StepResult.Break : void 0;
  }
  *confirmStep(state, context) {
    const step = this.createConfirmStep((0,_quickCommand__WEBPACK_IMPORTED_MODULE_3__.appendReposToTitle)(`Confirm ${context.title}`, state, context), [
      _quickpicks__WEBPACK_IMPORTED_MODULE_2__.FlagsQuickPickItem.create(state.flags, ["--no-edit"], {
        label: this.title,
        description: "--no-edit",
        detail: `Will revert ${_git_git__WEBPACK_IMPORTED_MODULE_1__.GitReference.toString(state.references)}`
      }),
      _quickpicks__WEBPACK_IMPORTED_MODULE_2__.FlagsQuickPickItem.create(state.flags, ["--edit"], {
        label: `${this.title} & Edit`,
        description: "--edit",
        detail: `Will revert and edit ${_git_git__WEBPACK_IMPORTED_MODULE_1__.GitReference.toString(state.references)}`
      })
    ]);
    const selection = yield step;
    return _quickCommand__WEBPACK_IMPORTED_MODULE_3__.QuickCommand.canPickStepContinue(step, state, selection) ? selection[0].item : _quickCommand__WEBPACK_IMPORTED_MODULE_3__.StepResult.Break;
  }
}


/***/ }),

/***/ "./src/commands/git/search.ts":
/*!************************************!*\
  !*** ./src/commands/git/search.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SearchGitCommand": () => (/* binding */ SearchGitCommand)
/* harmony export */ });
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../constants */ "./src/constants.ts");
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../container */ "./src/container.ts");
/* harmony import */ var _git_git__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../git/git */ "./src/git/git.ts");
/* harmony import */ var _quickpicks__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../quickpicks */ "./src/quickpicks.ts");
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../system */ "./src/system.ts");
/* harmony import */ var _views_nodes__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../views/nodes */ "./src/views/nodes.ts");
/* harmony import */ var _gitCommands__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../gitCommands */ "./src/commands/gitCommands.ts");
/* harmony import */ var _quickCommand__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../quickCommand */ "./src/commands/quickCommand.ts");









const searchOperatorToTitleMap = new Map([
  ["", "Search by Message"],
  ["=:", "Search by Message"],
  ["message:", "Search by Message"],
  ["@:", "Search by Author"],
  ["author:", "Search by Author"],
  ["#:", "Search by Commit SHA"],
  ["commit:", "Search by Commit SHA"],
  ["?:", "Search by File"],
  ["file:", "Search by File"],
  ["~:", "Search by Changes"],
  ["change:", "Search by Changes"]
]);
class SearchGitCommand extends _quickCommand__WEBPACK_IMPORTED_MODULE_7__.QuickCommand {
  constructor(args) {
    super("search", "search", "Commit Search", {
      description: "aka grep, searches for commits"
    });
    var _a, _b;
    let counter = 0;
    if (((_a = args == null ? void 0 : args.state) == null ? void 0 : _a.repo) != null) {
      counter++;
    }
    if (((_b = args == null ? void 0 : args.state) == null ? void 0 : _b.pattern) != null && !args.prefillOnly) {
      counter++;
    }
    this.initialState = {
      counter,
      confirm: false,
      ...args == null ? void 0 : args.state
    };
  }
  get canConfirm() {
    return false;
  }
  isMatch(key) {
    return super.isMatch(key) || key === "grep";
  }
  isFuzzyMatch(name) {
    return super.isFuzzyMatch(name) || name === "grep";
  }
  async *steps(state) {
    var _a, _b;
    const context = {
      repos: [...await _container__WEBPACK_IMPORTED_MODULE_1__.Container.git.getOrderedRepositories()],
      commit: void 0,
      resultsKey: void 0,
      resultsPromise: void 0,
      title: this.title
    };
    const cfg = _container__WEBPACK_IMPORTED_MODULE_1__.Container.config.gitCommands.search;
    if (state.matchAll == null) {
      state.matchAll = cfg.matchAll;
    }
    if (state.matchCase == null) {
      state.matchCase = cfg.matchCase;
    }
    if (state.matchRegex == null) {
      state.matchRegex = cfg.matchRegex;
    }
    if (state.showResultsInSideBar == null) {
      state.showResultsInSideBar = (_a = cfg.showResultsInSideBar) != null ? _a : void 0;
    }
    let skippedStepOne = false;
    while (this.canStepsContinue(state)) {
      context.title = this.title;
      if (state.counter < 1 || state.repo == null || typeof state.repo === "string") {
        skippedStepOne = false;
        if (context.repos.length === 1) {
          skippedStepOne = true;
          if (state.repo == null) {
            state.counter++;
          }
          state.repo = context.repos[0];
        } else {
          const result2 = yield* (0,_quickCommand__WEBPACK_IMPORTED_MODULE_7__.pickRepositoryStep)(state, context);
          if (result2 === _quickCommand__WEBPACK_IMPORTED_MODULE_7__.StepResult.Break)
            break;
          state.repo = result2;
        }
      }
      if (state.counter < 2 || state.pattern == null) {
        const result2 = yield* this.pickSearchOperatorStep(state, context);
        if (result2 === _quickCommand__WEBPACK_IMPORTED_MODULE_7__.StepResult.Break) {
          if (skippedStepOne) {
            state.counter--;
          }
          state.pattern = void 0;
          continue;
        }
        state.pattern = result2;
      }
      const search = {
        pattern: state.pattern,
        matchAll: state.matchAll,
        matchCase: state.matchCase,
        matchRegex: state.matchRegex
      };
      const searchKey = _git_git__WEBPACK_IMPORTED_MODULE_2__.SearchPattern.toKey(search);
      if (context.resultsPromise == null || context.resultsKey !== searchKey) {
        context.resultsPromise = state.repo.searchForCommits(search);
        context.resultsKey = searchKey;
      }
      if (state.showResultsInSideBar) {
        void _container__WEBPACK_IMPORTED_MODULE_1__.Container.searchAndCompareView.search(state.repo.path, search, {
          label: { label: `for ${state.pattern}` }
        }, context.resultsPromise, state.showResultsInSideBar instanceof _views_nodes__WEBPACK_IMPORTED_MODULE_5__.SearchResultsNode ? state.showResultsInSideBar : void 0);
        break;
      }
      if (state.counter < 3 || context.commit == null) {
        const repoPath = state.repo.path;
        const result2 = yield* (0,_quickCommand__WEBPACK_IMPORTED_MODULE_7__.pickCommitStep)(state, context, {
          ignoreFocusOut: true,
          log: await context.resultsPromise,
          onDidLoadMore: (log) => context.resultsPromise = Promise.resolve(log),
          placeholder: (context2, log) => log == null ? `No results for ${state.pattern}` : `${_system__WEBPACK_IMPORTED_MODULE_4__.Strings.pluralize("result", log.count, {
            number: log.hasMore ? `${log.count}+` : void 0
          })} for ${state.pattern}`,
          picked: (_b = context.commit) == null ? void 0 : _b.ref,
          showInSideBarCommand: new _quickpicks__WEBPACK_IMPORTED_MODULE_3__.ActionQuickPickItem("$(link-external)  Show Results in Side Bar", () => void _container__WEBPACK_IMPORTED_MODULE_1__.Container.searchAndCompareView.search(repoPath, search, {
            label: { label: `for ${state.pattern}` },
            reveal: {
              select: true,
              focus: false,
              expand: true
            }
          }, context.resultsPromise)),
          showInSideBarButton: {
            button: _quickCommand__WEBPACK_IMPORTED_MODULE_7__.QuickCommandButtons.ShowResultsInSideBar,
            onDidClick: () => void _container__WEBPACK_IMPORTED_MODULE_1__.Container.searchAndCompareView.search(repoPath, search, {
              label: { label: `for ${state.pattern}` },
              reveal: {
                select: true,
                focus: false,
                expand: true
              }
            }, context.resultsPromise)
          }
        });
        if (result2 === _quickCommand__WEBPACK_IMPORTED_MODULE_7__.StepResult.Break) {
          state.counter--;
          continue;
        }
        context.commit = result2;
      }
      const result = yield* _gitCommands__WEBPACK_IMPORTED_MODULE_6__.GitCommandsCommand.getSteps({
        command: "show",
        state: {
          repo: state.repo,
          reference: context.commit
        }
      }, this.pickedVia);
      state.counter--;
      if (result === _quickCommand__WEBPACK_IMPORTED_MODULE_7__.StepResult.Break) {
        _quickCommand__WEBPACK_IMPORTED_MODULE_7__.QuickCommand.endSteps(state);
      }
    }
    return state.counter < 0 ? _quickCommand__WEBPACK_IMPORTED_MODULE_7__.StepResult.Break : void 0;
  }
  *pickSearchOperatorStep(state, context) {
    const items = [
      {
        label: searchOperatorToTitleMap.get(""),
        description: `pattern or message: pattern or =: pattern ${_constants__WEBPACK_IMPORTED_MODULE_0__.GlyphChars.Dash} use quotes to search for phrases`,
        item: "message:"
      },
      {
        label: searchOperatorToTitleMap.get("author:"),
        description: "author: pattern or @: pattern",
        item: "author:"
      },
      {
        label: searchOperatorToTitleMap.get("commit:"),
        description: "commit: sha or #: sha",
        item: "commit:"
      },
      {
        label: searchOperatorToTitleMap.get("file:"),
        description: "file: glob or ?: glob",
        item: "file:"
      },
      {
        label: searchOperatorToTitleMap.get("change:"),
        description: "change: pattern or ~: pattern",
        item: "change:"
      }
    ];
    const matchCaseButton = new _quickCommand__WEBPACK_IMPORTED_MODULE_7__.QuickCommandButtons.MatchCaseToggle(state.matchCase);
    const matchAllButton = new _quickCommand__WEBPACK_IMPORTED_MODULE_7__.QuickCommandButtons.MatchAllToggle(state.matchAll);
    const matchRegexButton = new _quickCommand__WEBPACK_IMPORTED_MODULE_7__.QuickCommandButtons.MatchRegexToggle(state.matchRegex);
    const step = _quickCommand__WEBPACK_IMPORTED_MODULE_7__.QuickCommand.createPickStep({
      title: (0,_quickCommand__WEBPACK_IMPORTED_MODULE_7__.appendReposToTitle)(context.title, state, context),
      placeholder: 'e.g. "Updates dependencies" author:eamodio',
      matchOnDescription: true,
      matchOnDetail: true,
      additionalButtons: [matchCaseButton, matchAllButton, matchRegexButton],
      items,
      value: state.pattern,
      onDidAccept: (quickpick) => {
        const pick = quickpick.selectedItems[0];
        if (!_git_git__WEBPACK_IMPORTED_MODULE_2__.searchOperators.has(pick.item))
          return true;
        const value = quickpick.value.trim();
        if (value.length === 0 || _git_git__WEBPACK_IMPORTED_MODULE_2__.searchOperators.has(value)) {
          quickpick.value = pick.item;
        } else {
          quickpick.value = `${value} ${pick.item}`;
        }
        void step.onDidChangeValue(quickpick);
        return false;
      },
      onDidClickButton: (quickpick, button) => {
        if (button === matchCaseButton) {
          state.matchCase = !state.matchCase;
          matchCaseButton.on = state.matchCase;
        } else if (button === matchAllButton) {
          state.matchAll = !state.matchAll;
          matchAllButton.on = state.matchAll;
        } else if (button === matchRegexButton) {
          state.matchRegex = !state.matchRegex;
          matchRegexButton.on = state.matchRegex;
        }
      },
      onDidChangeValue: (quickpick) => {
        const value = quickpick.value.trim();
        state.counter = value ? 3 : 2;
        const operations = _git_git__WEBPACK_IMPORTED_MODULE_2__.SearchPattern.parseSearchOperations(value);
        quickpick.title = (0,_quickCommand__WEBPACK_IMPORTED_MODULE_7__.appendReposToTitle)(operations.size === 0 || operations.size > 1 ? context.title : `Commit ${searchOperatorToTitleMap.get(operations.keys().next().value)}`, state, context);
        if (quickpick.value.length === 0) {
          quickpick.items = items;
        } else {
          quickpick.ignoreFocusOut = true;
          step.ignoreFocusOut = true;
          quickpick.items = [
            {
              label: "Search for",
              description: quickpick.value,
              item: quickpick.value
            }
          ];
        }
        return true;
      }
    });
    const selection = yield step;
    if (!_quickCommand__WEBPACK_IMPORTED_MODULE_7__.QuickCommand.canPickStepContinue(step, state, selection)) {
      state.counter--;
      return _quickCommand__WEBPACK_IMPORTED_MODULE_7__.StepResult.Break;
    }
    state.counter--;
    return selection[0].item.trim();
  }
}


/***/ }),

/***/ "./src/commands/git/show.ts":
/*!**********************************!*\
  !*** ./src/commands/git/show.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ShowGitCommand": () => (/* binding */ ShowGitCommand)
/* harmony export */ });
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../container */ "./src/container.ts");
/* harmony import */ var _git_git__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../git/git */ "./src/git/git.ts");
/* harmony import */ var _quickpicks__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../quickpicks */ "./src/quickpicks.ts");
/* harmony import */ var _quickCommand__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../quickCommand */ "./src/commands/quickCommand.ts");





class ShowGitCommand extends _quickCommand__WEBPACK_IMPORTED_MODULE_3__.QuickCommand {
  constructor(args) {
    super("show", "show", "Show", {
      description: "shows information about a git reference"
    });
    var _a, _b, _c;
    let counter = 0;
    if (((_a = args == null ? void 0 : args.state) == null ? void 0 : _a.repo) != null) {
      counter++;
    }
    if (((_b = args == null ? void 0 : args.state) == null ? void 0 : _b.reference) != null) {
      counter++;
    }
    if (((_c = args == null ? void 0 : args.state) == null ? void 0 : _c.fileName) != null) {
      counter += 2;
    }
    this.initialState = {
      counter,
      confirm: false,
      ...args == null ? void 0 : args.state
    };
  }
  get canConfirm() {
    return false;
  }
  getStepState(limitBackNavigation) {
    var _a;
    const state = super.getStepState(limitBackNavigation);
    return {
      ...state,
      startingStep: limitBackNavigation ? Math.min((_a = state.startingStep) != null ? _a : 0, 1) : 0
    };
  }
  async *steps(state) {
    var _a;
    const context = {
      repos: [...await _container__WEBPACK_IMPORTED_MODULE_0__.Container.git.getOrderedRepositories()],
      title: this.title
    };
    let skippedStepOne = false;
    while (this.canStepsContinue(state)) {
      context.title = this.title;
      if (state.counter < 1 || state.repo == null || typeof state.repo === "string") {
        skippedStepOne = false;
        if (context.repos.length === 1) {
          skippedStepOne = true;
          if (state.repo == null) {
            state.counter++;
          }
          state.repo = context.repos[0];
        } else {
          const result2 = yield* (0,_quickCommand__WEBPACK_IMPORTED_MODULE_3__.pickRepositoryStep)(state, context);
          if (result2 === _quickCommand__WEBPACK_IMPORTED_MODULE_3__.StepResult.Break)
            break;
          state.repo = result2;
        }
      }
      if (state.counter < 2 || state.reference == null || !_git_git__WEBPACK_IMPORTED_MODULE_1__.GitLogCommit.is(state.reference) || state.reference.isFile) {
        if (state.reference != null && (!_git_git__WEBPACK_IMPORTED_MODULE_1__.GitLogCommit.is(state.reference) || state.reference.isFile)) {
          state.reference = await _container__WEBPACK_IMPORTED_MODULE_0__.Container.git.getCommit(state.reference.repoPath, state.reference.ref);
        }
        if (state.counter < 2 || state.reference == null) {
          const result2 = yield* (0,_quickCommand__WEBPACK_IMPORTED_MODULE_3__.pickCommitStep)(state, context, {
            log: {
              repoPath: state.repo.path,
              authors: new Map(),
              commits: new Map(),
              sha: void 0,
              range: void 0,
              count: 0,
              limit: void 0,
              hasMore: false
            },
            placeholder: "Enter a reference or commit SHA",
            picked: (_a = state.reference) == null ? void 0 : _a.ref
          });
          if (result2 === _quickCommand__WEBPACK_IMPORTED_MODULE_3__.StepResult.Break) {
            if (skippedStepOne) {
              state.counter--;
            }
            continue;
          }
          state.reference = result2;
        }
      }
      if (state.counter < 3) {
        const result2 = yield* (0,_quickCommand__WEBPACK_IMPORTED_MODULE_3__.showCommitOrStashStep)(state, context);
        if (result2 === _quickCommand__WEBPACK_IMPORTED_MODULE_3__.StepResult.Break)
          continue;
        if (result2 instanceof _quickpicks__WEBPACK_IMPORTED_MODULE_2__.GitCommandQuickPickItem) {
          const r = yield* result2.executeSteps(this.pickedVia);
          state.counter--;
          if (r === _quickCommand__WEBPACK_IMPORTED_MODULE_3__.StepResult.Break) {
            _quickCommand__WEBPACK_IMPORTED_MODULE_3__.QuickCommand.endSteps(state);
          }
          continue;
        }
        if (result2 instanceof _quickpicks__WEBPACK_IMPORTED_MODULE_2__.CommandQuickPickItem && !(result2 instanceof _quickpicks__WEBPACK_IMPORTED_MODULE_2__.CommitFilesQuickPickItem)) {
          _quickCommand__WEBPACK_IMPORTED_MODULE_3__.QuickCommand.endSteps(state);
          void result2.execute();
          break;
        }
      }
      if (state.counter < 4 || state.fileName == null) {
        const result2 = yield* (0,_quickCommand__WEBPACK_IMPORTED_MODULE_3__.showCommitOrStashFilesStep)(state, context, {
          picked: state.fileName
        });
        if (result2 === _quickCommand__WEBPACK_IMPORTED_MODULE_3__.StepResult.Break)
          continue;
        if (result2 instanceof _quickpicks__WEBPACK_IMPORTED_MODULE_2__.CommitFilesQuickPickItem) {
          state.counter -= 2;
          continue;
        }
        state.fileName = result2.file.fileName;
      }
      const result = yield* (0,_quickCommand__WEBPACK_IMPORTED_MODULE_3__.showCommitOrStashFileStep)(state, context);
      if (result === _quickCommand__WEBPACK_IMPORTED_MODULE_3__.StepResult.Break)
        continue;
      if (result instanceof _quickpicks__WEBPACK_IMPORTED_MODULE_2__.CommitFilesQuickPickItem) {
        state.counter -= 2;
        continue;
      }
      if (result instanceof _quickpicks__WEBPACK_IMPORTED_MODULE_2__.GitCommandQuickPickItem) {
        yield* result.executeSteps(this.pickedVia);
        state.counter--;
        continue;
      }
      if (result instanceof _quickpicks__WEBPACK_IMPORTED_MODULE_2__.CommandQuickPickItem) {
        _quickCommand__WEBPACK_IMPORTED_MODULE_3__.QuickCommand.endSteps(state);
        void result.execute();
        break;
      }
    }
    return state.counter < 0 ? _quickCommand__WEBPACK_IMPORTED_MODULE_3__.StepResult.Break : void 0;
  }
}


/***/ }),

/***/ "./src/commands/git/stash.ts":
/*!***********************************!*\
  !*** ./src/commands/git/stash.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "StashGitCommand": () => (/* binding */ StashGitCommand)
/* harmony export */ });
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../constants */ "./src/constants.ts");
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../container */ "./src/container.ts");
/* harmony import */ var _git_git__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../git/git */ "./src/git/git.ts");
/* harmony import */ var _git_gitUri__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../git/gitUri */ "./src/git/gitUri.ts");
/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../logger */ "./src/logger.ts");
/* harmony import */ var _messages__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../messages */ "./src/messages.ts");
/* harmony import */ var _quickpicks__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../quickpicks */ "./src/quickpicks.ts");
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../system */ "./src/system.ts");
/* harmony import */ var _gitCommands__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../gitCommands */ "./src/commands/gitCommands.ts");
/* harmony import */ var _quickCommand__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../quickCommand */ "./src/commands/quickCommand.ts");

var __defProp = Object.defineProperty;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};











const subcommandToTitleMap = new Map([
  ["apply", "Apply"],
  ["drop", "Drop"],
  ["list", "List"],
  ["pop", "Pop"],
  ["push", "Push"]
]);
function getTitle(title, subcommand) {
  return subcommand == null ? title : `${subcommandToTitleMap.get(subcommand)} ${title}`;
}
class StashGitCommand extends _quickCommand__WEBPACK_IMPORTED_MODULE_10__.QuickCommand {
  constructor(args) {
    super("stash", "stash", "Stash", {
      description: "shelves (stashes) local changes to be reapplied later"
    });
    __publicField(this, "subcommand");
    var _a, _b;
    let counter = 0;
    if (((_a = args == null ? void 0 : args.state) == null ? void 0 : _a.subcommand) != null) {
      counter++;
      switch (args.state.subcommand) {
        case "apply":
        case "drop":
        case "pop":
          if (args.state.reference != null) {
            counter++;
          }
          break;
        case "push":
          if (args.state.message != null) {
            counter++;
          }
          break;
      }
    }
    if (((_b = args == null ? void 0 : args.state) == null ? void 0 : _b.repo) != null) {
      counter++;
    }
    this.initialState = {
      counter,
      confirm: args == null ? void 0 : args.confirm,
      ...args == null ? void 0 : args.state
    };
  }
  get canConfirm() {
    return this.subcommand != null && this.subcommand !== "list";
  }
  get canSkipConfirm() {
    return this.subcommand === "drop" ? false : super.canSkipConfirm;
  }
  get skipConfirmKey() {
    return `${this.key}${this.subcommand == null ? "" : `-${this.subcommand}`}:${this.pickedVia}`;
  }
  async *steps(state) {
    const context = {
      repos: [...await _container__WEBPACK_IMPORTED_MODULE_2__.Container.git.getOrderedRepositories()],
      title: this.title
    };
    let skippedStepTwo = false;
    while (this.canStepsContinue(state)) {
      context.title = this.title;
      if (state.counter < 1 || state.subcommand == null) {
        this.subcommand = void 0;
        const result = yield* this.pickSubcommandStep(state);
        if (result === _quickCommand__WEBPACK_IMPORTED_MODULE_10__.StepResult.Break)
          break;
        state.subcommand = result;
      }
      this.subcommand = state.subcommand;
      context.title = getTitle(this.title, state.subcommand);
      if (state.counter < 2 || state.repo == null || typeof state.repo === "string") {
        skippedStepTwo = false;
        if (context.repos.length === 1) {
          skippedStepTwo = true;
          state.counter++;
          state.repo = context.repos[0];
        } else {
          const result = yield* (0,_quickCommand__WEBPACK_IMPORTED_MODULE_10__.pickRepositoryStep)(state, context);
          if (result === _quickCommand__WEBPACK_IMPORTED_MODULE_10__.StepResult.Break)
            continue;
          state.repo = result;
        }
      }
      switch (state.subcommand) {
        case "apply":
        case "pop":
          yield* this.applyOrPopCommandSteps(state, context);
          break;
        case "drop":
          yield* this.dropCommandSteps(state, context);
          break;
        case "list":
          yield* this.listCommandSteps(state, context);
          break;
        case "push":
          yield* this.pushCommandSteps(state, context);
          break;
        default:
          _quickCommand__WEBPACK_IMPORTED_MODULE_10__.QuickCommand.endSteps(state);
          break;
      }
      if (skippedStepTwo) {
        state.counter--;
      }
    }
    return state.counter < 0 ? _quickCommand__WEBPACK_IMPORTED_MODULE_10__.StepResult.Break : void 0;
  }
  *pickSubcommandStep(state) {
    const step = _quickCommand__WEBPACK_IMPORTED_MODULE_10__.QuickCommand.createPickStep({
      title: this.title,
      placeholder: `Choose a ${this.label} command`,
      items: [
        {
          label: "apply",
          description: "integrates changes from the specified stash into the current branch",
          picked: state.subcommand === "apply",
          item: "apply"
        },
        {
          label: "drop",
          description: "deletes the specified stash",
          picked: state.subcommand === "drop",
          item: "drop"
        },
        {
          label: "list",
          description: "lists the saved stashes",
          picked: state.subcommand === "list",
          item: "list"
        },
        {
          label: "pop",
          description: "integrates changes from the specified stash into the current branch and deletes the stash",
          picked: state.subcommand === "pop",
          item: "pop"
        },
        {
          label: "push",
          description: "saves your local changes to a new stash and discards them from the working tree and index",
          picked: state.subcommand === "push",
          item: "push"
        }
      ],
      buttons: [vscode__WEBPACK_IMPORTED_MODULE_0__.QuickInputButtons.Back]
    });
    const selection = yield step;
    return _quickCommand__WEBPACK_IMPORTED_MODULE_10__.QuickCommand.canPickStepContinue(step, state, selection) ? selection[0].item : _quickCommand__WEBPACK_IMPORTED_MODULE_10__.StepResult.Break;
  }
  async *applyOrPopCommandSteps(state, context) {
    var _a, _b;
    while (this.canStepsContinue(state)) {
      if (state.counter < 3 || state.reference == null) {
        const result = yield* (0,_quickCommand__WEBPACK_IMPORTED_MODULE_10__.pickStashStep)(state, context, {
          stash: await _container__WEBPACK_IMPORTED_MODULE_2__.Container.git.getStash(state.repo.path),
          placeholder: (context2, stash) => stash == null ? `No stashes found in ${state.repo.formattedName}` : "Choose a stash to apply to your working tree",
          picked: (_a = state.reference) == null ? void 0 : _a.ref
        });
        if (result === _quickCommand__WEBPACK_IMPORTED_MODULE_10__.StepResult.Break)
          break;
        state.reference = result;
      }
      if (this.confirm(state.confirm)) {
        const result = yield* this.applyOrPopCommandConfirmStep(state, context);
        if (result === _quickCommand__WEBPACK_IMPORTED_MODULE_10__.StepResult.Break)
          continue;
        state.subcommand = result;
      }
      _quickCommand__WEBPACK_IMPORTED_MODULE_10__.QuickCommand.endSteps(state);
      try {
        void await state.repo.stashApply(state.subcommand === "pop" ? `stash@{${state.reference.number}}` : state.reference.ref, { deleteAfter: state.subcommand === "pop" });
      } catch (ex) {
        _logger__WEBPACK_IMPORTED_MODULE_5__.Logger.error(ex, context.title);
        if (ex instanceof Error) {
          const msg = (_b = ex.message) != null ? _b : "";
          if (msg.includes("Your local changes to the following files would be overwritten by merge")) {
            void vscode__WEBPACK_IMPORTED_MODULE_0__.window.showWarningMessage("Unable to apply stash. Your working tree changes would be overwritten. Please commit or stash your changes before trying again");
            return;
          }
          if (msg.includes("Auto-merging") && msg.includes("CONFLICT") || ex instanceof _git_git__WEBPACK_IMPORTED_MODULE_3__.RunError && (ex.stdout.includes("Auto-merging") && ex.stdout.includes("CONFLICT") || ex.stdout.includes("needs merge"))) {
            void vscode__WEBPACK_IMPORTED_MODULE_0__.window.showInformationMessage("Stash applied with conflicts");
            return;
          }
          void _messages__WEBPACK_IMPORTED_MODULE_6__.Messages.showGenericErrorMessage(`Unable to apply stash \u2014 ${msg.trim().replace(/\n+?/g, "; ")}`);
          return;
        }
      }
    }
  }
  *applyOrPopCommandConfirmStep(state, context) {
    const step = this.createConfirmStep((0,_quickCommand__WEBPACK_IMPORTED_MODULE_10__.appendReposToTitle)(`Confirm ${context.title}`, state, context), [
      {
        label: context.title,
        detail: state.subcommand === "pop" ? `Will delete ${_git_git__WEBPACK_IMPORTED_MODULE_3__.GitReference.toString(state.reference)} and apply the changes to the working tree` : `Will apply the changes from ${_git_git__WEBPACK_IMPORTED_MODULE_3__.GitReference.toString(state.reference)} to the working tree`,
        item: state.subcommand
      },
      {
        label: getTitle(this.title, state.subcommand === "pop" ? "apply" : "pop"),
        detail: state.subcommand === "pop" ? `Will apply the changes from ${_git_git__WEBPACK_IMPORTED_MODULE_3__.GitReference.toString(state.reference)} to the working tree` : `Will delete ${_git_git__WEBPACK_IMPORTED_MODULE_3__.GitReference.toString(state.reference)} and apply the changes to the working tree`,
        item: state.subcommand === "pop" ? "apply" : "pop"
      }
    ], void 0, {
      placeholder: `Confirm ${context.title}`,
      additionalButtons: [_quickCommand__WEBPACK_IMPORTED_MODULE_10__.QuickCommandButtons.RevealInSideBar],
      onDidClickButton: (quickpick, button) => {
        if (button === _quickCommand__WEBPACK_IMPORTED_MODULE_10__.QuickCommandButtons.RevealInSideBar) {
          void _gitCommands__WEBPACK_IMPORTED_MODULE_9__.GitActions.Stash.reveal(state.reference, {
            select: true,
            expand: true
          });
        }
      }
    });
    const selection = yield step;
    return _quickCommand__WEBPACK_IMPORTED_MODULE_10__.QuickCommand.canPickStepContinue(step, state, selection) ? selection[0].item : _quickCommand__WEBPACK_IMPORTED_MODULE_10__.StepResult.Break;
  }
  async *dropCommandSteps(state, context) {
    var _a;
    while (this.canStepsContinue(state)) {
      if (state.counter < 3 || state.reference == null) {
        const result2 = yield* (0,_quickCommand__WEBPACK_IMPORTED_MODULE_10__.pickStashStep)(state, context, {
          stash: await _container__WEBPACK_IMPORTED_MODULE_2__.Container.git.getStash(state.repo.path),
          placeholder: (context2, stash) => stash == null ? `No stashes found in ${state.repo.formattedName}` : "Choose a stash to delete",
          picked: (_a = state.reference) == null ? void 0 : _a.ref
        });
        if (result2 === _quickCommand__WEBPACK_IMPORTED_MODULE_10__.StepResult.Break)
          break;
        state.reference = result2;
      }
      const result = yield* this.dropCommandConfirmStep(state, context);
      if (result === _quickCommand__WEBPACK_IMPORTED_MODULE_10__.StepResult.Break)
        continue;
      _quickCommand__WEBPACK_IMPORTED_MODULE_10__.QuickCommand.endSteps(state);
      try {
        void await state.repo.stashDelete(`stash@{${state.reference.number}}`, state.reference.ref);
      } catch (ex) {
        _logger__WEBPACK_IMPORTED_MODULE_5__.Logger.error(ex, context.title);
        void _messages__WEBPACK_IMPORTED_MODULE_6__.Messages.showGenericErrorMessage("Unable to delete stash");
        return;
      }
    }
  }
  *dropCommandConfirmStep(state, context) {
    const step = this.createConfirmStep((0,_quickCommand__WEBPACK_IMPORTED_MODULE_10__.appendReposToTitle)(`Confirm ${context.title}`, state, context), [
      {
        label: context.title,
        detail: `Will delete ${_git_git__WEBPACK_IMPORTED_MODULE_3__.GitReference.toString(state.reference)}`
      }
    ], void 0, {
      placeholder: `Confirm ${context.title}`,
      additionalButtons: [_quickCommand__WEBPACK_IMPORTED_MODULE_10__.QuickCommandButtons.RevealInSideBar],
      onDidClickButton: (quickpick, button) => {
        if (button === _quickCommand__WEBPACK_IMPORTED_MODULE_10__.QuickCommandButtons.RevealInSideBar) {
          void _gitCommands__WEBPACK_IMPORTED_MODULE_9__.GitActions.Stash.reveal(state.reference, {
            select: true,
            expand: true
          });
        }
      }
    });
    const selection = yield step;
    return _quickCommand__WEBPACK_IMPORTED_MODULE_10__.QuickCommand.canPickStepContinue(step, state, selection) ? void 0 : _quickCommand__WEBPACK_IMPORTED_MODULE_10__.StepResult.Break;
  }
  async *listCommandSteps(state, context) {
    var _a;
    context.title = "Stashes";
    while (this.canStepsContinue(state)) {
      if (state.counter < 3 || state.reference == null) {
        const result2 = yield* (0,_quickCommand__WEBPACK_IMPORTED_MODULE_10__.pickStashStep)(state, context, {
          stash: await _container__WEBPACK_IMPORTED_MODULE_2__.Container.git.getStash(state.repo.path),
          placeholder: (context2, stash) => stash == null ? `No stashes found in ${state.repo.formattedName}` : "Choose a stash",
          picked: (_a = state.reference) == null ? void 0 : _a.ref
        });
        if (result2 === _quickCommand__WEBPACK_IMPORTED_MODULE_10__.StepResult.Break)
          break;
        state.reference = result2;
      }
      const result = yield* _gitCommands__WEBPACK_IMPORTED_MODULE_9__.GitCommandsCommand.getSteps({
        command: "show",
        state: {
          repo: state.repo,
          reference: state.reference
        }
      }, this.pickedVia);
      state.counter--;
      if (result === _quickCommand__WEBPACK_IMPORTED_MODULE_10__.StepResult.Break) {
        _quickCommand__WEBPACK_IMPORTED_MODULE_10__.QuickCommand.endSteps(state);
      }
    }
  }
  async *pushCommandSteps(state, context) {
    var _a, _b;
    if (state.flags == null) {
      state.flags = [];
    }
    while (this.canStepsContinue(state)) {
      if (state.counter < 3 || state.message == null) {
        const result = yield* this.pushCommandInputMessageStep(state, context);
        if (result === _quickCommand__WEBPACK_IMPORTED_MODULE_10__.StepResult.Break)
          break;
        state.message = result;
      }
      if (this.confirm(state.confirm)) {
        const result = yield* this.pushCommandConfirmStep(state, context);
        if (result === _quickCommand__WEBPACK_IMPORTED_MODULE_10__.StepResult.Break)
          continue;
        state.flags = result;
      }
      _quickCommand__WEBPACK_IMPORTED_MODULE_10__.QuickCommand.endSteps(state);
      try {
        void await state.repo.stashSave(state.message, state.uris, {
          includeUntracked: state.flags.includes("--include-untracked"),
          keepIndex: state.flags.includes("--keep-index")
        });
      } catch (ex) {
        _logger__WEBPACK_IMPORTED_MODULE_5__.Logger.error(ex, context.title);
        const msg = (_b = (_a = ex == null ? void 0 : ex.message) != null ? _a : ex == null ? void 0 : ex.toString()) != null ? _b : "";
        if (msg.includes("newer version of Git")) {
          void vscode__WEBPACK_IMPORTED_MODULE_0__.window.showErrorMessage(`Unable to stash changes. ${msg}`);
          return;
        }
        void _messages__WEBPACK_IMPORTED_MODULE_6__.Messages.showGenericErrorMessage("Unable to stash changes");
        return;
      }
    }
  }
  async *pushCommandInputMessageStep(state, context) {
    const step = _quickCommand__WEBPACK_IMPORTED_MODULE_10__.QuickCommand.createInputStep({
      title: (0,_quickCommand__WEBPACK_IMPORTED_MODULE_10__.appendReposToTitle)(context.title, state, context, state.uris != null ? `${_system__WEBPACK_IMPORTED_MODULE_8__.Strings.pad(_constants__WEBPACK_IMPORTED_MODULE_1__.GlyphChars.Dot, 2, 2)}${state.uris.length === 1 ? _git_gitUri__WEBPACK_IMPORTED_MODULE_4__.GitUri.getFormattedFilename(state.uris[0]) : `${state.uris.length} files`}` : void 0),
      placeholder: "Please provide a stash message",
      value: state.message,
      prompt: "Enter stash message"
    });
    const value = yield step;
    if (!_quickCommand__WEBPACK_IMPORTED_MODULE_10__.QuickCommand.canStepContinue(step, state, value) || !await _quickCommand__WEBPACK_IMPORTED_MODULE_10__.QuickCommand.canInputStepContinue(step, state, value)) {
      return _quickCommand__WEBPACK_IMPORTED_MODULE_10__.StepResult.Break;
    }
    return value;
  }
  *pushCommandConfirmStep(state, context) {
    const step = this.createConfirmStep((0,_quickCommand__WEBPACK_IMPORTED_MODULE_10__.appendReposToTitle)(`Confirm ${context.title}`, state, context), state.uris == null || state.uris.length === 0 ? [
      _quickpicks__WEBPACK_IMPORTED_MODULE_7__.FlagsQuickPickItem.create(state.flags, [], {
        label: context.title,
        detail: "Will stash uncommitted changes"
      }),
      _quickpicks__WEBPACK_IMPORTED_MODULE_7__.FlagsQuickPickItem.create(state.flags, ["--include-untracked"], {
        label: `${context.title} & Include Untracked`,
        description: "--include-untracked",
        detail: "Will stash uncommitted changes, including untracked files"
      }),
      _quickpicks__WEBPACK_IMPORTED_MODULE_7__.FlagsQuickPickItem.create(state.flags, ["--keep-index"], {
        label: `${context.title} & Keep Staged`,
        description: "--keep-index",
        detail: "Will stash uncommitted changes, but will keep staged files intact"
      })
    ] : [
      _quickpicks__WEBPACK_IMPORTED_MODULE_7__.FlagsQuickPickItem.create(state.flags, [], {
        label: context.title,
        detail: `Will stash changes from ${state.uris.length === 1 ? _git_gitUri__WEBPACK_IMPORTED_MODULE_4__.GitUri.getFormattedFilename(state.uris[0]) : `${state.uris.length} files`}`
      }),
      _quickpicks__WEBPACK_IMPORTED_MODULE_7__.FlagsQuickPickItem.create(state.flags, ["--keep-index"], {
        label: `${context.title} & Keep Staged`,
        detail: `Will stash changes from ${state.uris.length === 1 ? _git_gitUri__WEBPACK_IMPORTED_MODULE_4__.GitUri.getFormattedFilename(state.uris[0]) : `${state.uris.length} files`}, but will keep staged files intact`
      })
    ], void 0, { placeholder: `Confirm ${context.title}` });
    const selection = yield step;
    return _quickCommand__WEBPACK_IMPORTED_MODULE_10__.QuickCommand.canPickStepContinue(step, state, selection) ? selection[0].item : _quickCommand__WEBPACK_IMPORTED_MODULE_10__.StepResult.Break;
  }
}


/***/ }),

/***/ "./src/commands/git/status.ts":
/*!************************************!*\
  !*** ./src/commands/git/status.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "StatusGitCommand": () => (/* binding */ StatusGitCommand)
/* harmony export */ });
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../constants */ "./src/constants.ts");
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../container */ "./src/container.ts");
/* harmony import */ var _git_git__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../git/git */ "./src/git/git.ts");
/* harmony import */ var _quickpicks__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../quickpicks */ "./src/quickpicks.ts");
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../system */ "./src/system.ts");
/* harmony import */ var _quickCommand__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../quickCommand */ "./src/commands/quickCommand.ts");







class StatusGitCommand extends _quickCommand__WEBPACK_IMPORTED_MODULE_5__.QuickCommand {
  constructor(args) {
    super("status", "status", "Status", {
      description: "shows status information about a repository"
    });
    var _a;
    let counter = 0;
    if (((_a = args == null ? void 0 : args.state) == null ? void 0 : _a.repo) != null) {
      counter++;
    }
    this.initialState = {
      counter,
      confirm: false,
      ...args == null ? void 0 : args.state
    };
  }
  get canConfirm() {
    return false;
  }
  async *steps(state) {
    const context = {
      repos: [...await _container__WEBPACK_IMPORTED_MODULE_1__.Container.git.getOrderedRepositories()],
      status: void 0,
      title: this.title
    };
    let skippedStepOne = false;
    while (this.canStepsContinue(state)) {
      context.title = this.title;
      if (state.counter < 1 || state.repo == null || typeof state.repo === "string") {
        skippedStepOne = false;
        if (context.repos.length === 1) {
          skippedStepOne = true;
          if (state.repo == null) {
            state.counter++;
          }
          state.repo = context.repos[0];
        } else {
          const result2 = yield* (0,_quickCommand__WEBPACK_IMPORTED_MODULE_5__.pickRepositoryStep)(state, context);
          if (result2 === _quickCommand__WEBPACK_IMPORTED_MODULE_5__.StepResult.Break)
            break;
          state.repo = result2;
        }
      }
      context.status = await state.repo.getStatus();
      if (context.status == null)
        return;
      context.title = `${this.title}${_system__WEBPACK_IMPORTED_MODULE_4__.Strings.pad(_constants__WEBPACK_IMPORTED_MODULE_0__.GlyphChars.Dot, 2, 2)}${_git_git__WEBPACK_IMPORTED_MODULE_2__.GitReference.toString(_git_git__WEBPACK_IMPORTED_MODULE_2__.GitReference.create(context.status.branch, state.repo.path, {
        refType: "branch",
        name: context.status.branch,
        remote: false,
        upstream: context.status.upstream != null ? { name: context.status.upstream, missing: false } : void 0
      }), { icon: false })}`;
      const result = yield* (0,_quickCommand__WEBPACK_IMPORTED_MODULE_5__.showRepositoryStatusStep)(state, context);
      if (result === _quickCommand__WEBPACK_IMPORTED_MODULE_5__.StepResult.Break) {
        if (skippedStepOne) {
          state.counter--;
        }
        continue;
      }
      if (result instanceof _quickpicks__WEBPACK_IMPORTED_MODULE_3__.GitCommandQuickPickItem) {
        const r = yield* result.executeSteps(this.pickedVia);
        state.counter--;
        if (r === _quickCommand__WEBPACK_IMPORTED_MODULE_5__.StepResult.Break) {
          _quickCommand__WEBPACK_IMPORTED_MODULE_5__.QuickCommand.endSteps(state);
        }
        continue;
      }
      if (result instanceof _quickpicks__WEBPACK_IMPORTED_MODULE_3__.CommandQuickPickItem) {
        _quickCommand__WEBPACK_IMPORTED_MODULE_5__.QuickCommand.endSteps(state);
        void result.execute();
        break;
      }
    }
  }
}


/***/ }),

/***/ "./src/commands/git/switch.ts":
/*!************************************!*\
  !*** ./src/commands/git/switch.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SwitchGitCommand": () => (/* binding */ SwitchGitCommand)
/* harmony export */ });
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../config */ "./src/config.ts");
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../container */ "./src/container.ts");
/* harmony import */ var _git_git__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../git/git */ "./src/git/git.ts");
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../system */ "./src/system.ts");
/* harmony import */ var _quickCommand__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../quickCommand */ "./src/commands/quickCommand.ts");







class SwitchGitCommand extends _quickCommand__WEBPACK_IMPORTED_MODULE_5__.QuickCommand {
  constructor(args) {
    super("switch", "switch", "Switch", {
      description: "aka checkout, switches the current branch to a specified branch"
    });
    var _a, _b;
    let counter = 0;
    if (((_a = args == null ? void 0 : args.state) == null ? void 0 : _a.repos) != null && (!Array.isArray(args.state.repos) || args.state.repos.length !== 0)) {
      counter++;
    }
    if (((_b = args == null ? void 0 : args.state) == null ? void 0 : _b.reference) != null) {
      counter++;
    }
    this.initialState = {
      counter,
      confirm: args == null ? void 0 : args.confirm,
      ...args == null ? void 0 : args.state
    };
  }
  async execute(state) {
    return void await vscode__WEBPACK_IMPORTED_MODULE_0__.window.withProgress({
      location: vscode__WEBPACK_IMPORTED_MODULE_0__.ProgressLocation.Notification,
      title: `Switching ${state.repos.length === 1 ? state.repos[0].formattedName : `${state.repos.length} repositories`} to ${state.reference.name}`
    }, () => Promise.all(state.repos.map((r) => r.switch(state.reference.ref, { createBranch: state.createBranch, progress: false }))));
  }
  isMatch(key) {
    return super.isMatch(key) || key === "checkout";
  }
  isFuzzyMatch(name) {
    return super.isFuzzyMatch(name) || name === "checkout";
  }
  async *steps(state) {
    var _a;
    const context = {
      repos: [...await _container__WEBPACK_IMPORTED_MODULE_2__.Container.git.getOrderedRepositories()],
      showTags: false,
      title: this.title
    };
    if (state.repos != null && !Array.isArray(state.repos)) {
      state.repos = [state.repos];
    }
    let skippedStepOne = false;
    while (this.canStepsContinue(state)) {
      context.title = this.title;
      if (state.counter < 1 || state.repos == null || state.repos.length === 0 || _system__WEBPACK_IMPORTED_MODULE_4__.Arrays.isStringArray(state.repos)) {
        skippedStepOne = false;
        if (context.repos.length === 1) {
          skippedStepOne = true;
          state.counter++;
          state.repos = [context.repos[0]];
        } else {
          const result = yield* (0,_quickCommand__WEBPACK_IMPORTED_MODULE_5__.pickRepositoriesStep)(state, context, { skipIfPossible: state.counter >= 1 });
          if (result === _quickCommand__WEBPACK_IMPORTED_MODULE_5__.StepResult.Break)
            break;
          state.repos = result;
        }
      }
      if (state.counter < 2 || state.reference == null) {
        const result = yield* (0,_quickCommand__WEBPACK_IMPORTED_MODULE_5__.pickBranchOrTagStepMultiRepo)(state, context, {
          placeholder: (context2) => `Choose a branch${context2.showTags ? " or tag" : ""} to switch to`
        });
        if (result === _quickCommand__WEBPACK_IMPORTED_MODULE_5__.StepResult.Break) {
          if (skippedStepOne) {
            state.counter--;
          }
          continue;
        }
        state.reference = result;
      }
      if (_git_git__WEBPACK_IMPORTED_MODULE_3__.GitReference.isBranch(state.reference) && state.reference.remote) {
        context.title = `Create Branch and ${this.title}`;
        const branches = await _container__WEBPACK_IMPORTED_MODULE_2__.Container.git.getBranches(state.reference.repoPath, {
          filter: (b) => {
            var _a2;
            return ((_a2 = b.upstream) == null ? void 0 : _a2.name) === state.reference.name;
          },
          sort: { orderBy: _config__WEBPACK_IMPORTED_MODULE_1__.BranchSorting.DateDesc }
        });
        if (branches.length === 0) {
          const result = yield* (0,_quickCommand__WEBPACK_IMPORTED_MODULE_5__.inputBranchNameStep)(state, context, {
            placeholder: "Please provide a name for the new branch",
            titleContext: ` based on ${_git_git__WEBPACK_IMPORTED_MODULE_3__.GitReference.toString(state.reference, {
              icon: false
            })}`,
            value: (_a = state.createBranch) != null ? _a : _git_git__WEBPACK_IMPORTED_MODULE_3__.GitReference.getNameWithoutRemote(state.reference)
          });
          if (result === _quickCommand__WEBPACK_IMPORTED_MODULE_5__.StepResult.Break)
            continue;
          state.createBranch = result;
        } else {
          state.createBranch = void 0;
        }
      } else {
        state.createBranch = void 0;
      }
      if (this.confirm(state.confirm)) {
        const result = yield* this.confirmStep(state, context);
        if (result === _quickCommand__WEBPACK_IMPORTED_MODULE_5__.StepResult.Break)
          continue;
      }
      _quickCommand__WEBPACK_IMPORTED_MODULE_5__.QuickCommand.endSteps(state);
      void this.execute(state);
    }
    return state.counter < 0 ? _quickCommand__WEBPACK_IMPORTED_MODULE_5__.StepResult.Break : void 0;
  }
  *confirmStep(state, context) {
    const step = this.createConfirmStep((0,_quickCommand__WEBPACK_IMPORTED_MODULE_5__.appendReposToTitle)(`Confirm ${context.title}`, state, context), [
      {
        label: context.title,
        description: state.createBranch ? "-b" : "",
        detail: `Will ${state.createBranch ? `create and switch to a new branch named ${state.createBranch} from ${_git_git__WEBPACK_IMPORTED_MODULE_3__.GitReference.toString(state.reference)}` : `switch to ${_git_git__WEBPACK_IMPORTED_MODULE_3__.GitReference.toString(state.reference)}`} in ${state.repos.length === 1 ? `$(repo) ${state.repos[0].formattedName}` : `${state.repos.length} repositories`}`
      }
    ], void 0, { placeholder: `Confirm ${context.title}` });
    const selection = yield step;
    return _quickCommand__WEBPACK_IMPORTED_MODULE_5__.QuickCommand.canPickStepContinue(step, state, selection) ? void 0 : _quickCommand__WEBPACK_IMPORTED_MODULE_5__.StepResult.Break;
  }
}


/***/ }),

/***/ "./src/commands/git/tag.ts":
/*!*********************************!*\
  !*** ./src/commands/git/tag.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TagGitCommand": () => (/* binding */ TagGitCommand)
/* harmony export */ });
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../container */ "./src/container.ts");
/* harmony import */ var _git_git__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../git/git */ "./src/git/git.ts");
/* harmony import */ var _quickpicks__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../quickpicks */ "./src/quickpicks.ts");
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../system */ "./src/system.ts");
/* harmony import */ var _quickCommand__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../quickCommand */ "./src/commands/quickCommand.ts");

var __defProp = Object.defineProperty;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};






const subcommandToTitleMap = new Map([
  ["create", "Create"],
  ["delete", "Delete"]
]);
function getTitle(title, subcommand) {
  return subcommand == null ? title : `${subcommandToTitleMap.get(subcommand)} ${title}`;
}
class TagGitCommand extends _quickCommand__WEBPACK_IMPORTED_MODULE_5__.QuickCommand {
  constructor(args) {
    super("tag", "tag", "Tag", {
      description: "create, or delete tags"
    });
    __publicField(this, "subcommand");
    var _a, _b;
    let counter = 0;
    if (((_a = args == null ? void 0 : args.state) == null ? void 0 : _a.subcommand) != null) {
      counter++;
      switch (args.state.subcommand) {
        case "create":
          if (args.state.reference != null) {
            counter++;
          }
          if (args.state.name != null) {
            counter++;
          }
          if (args.state.message != null) {
            counter++;
          }
          break;
        case "delete":
          if (args.state.references != null && (!Array.isArray(args.state.references) || args.state.references.length !== 0)) {
            counter++;
          }
          break;
      }
    }
    if (((_b = args == null ? void 0 : args.state) == null ? void 0 : _b.repo) != null) {
      counter++;
    }
    this.initialState = {
      counter,
      confirm: args == null ? void 0 : args.confirm,
      ...args == null ? void 0 : args.state
    };
  }
  get canConfirm() {
    return this.subcommand != null;
  }
  get canSkipConfirm() {
    return this.subcommand === "delete" ? false : super.canSkipConfirm;
  }
  get skipConfirmKey() {
    return `${this.key}${this.subcommand == null ? "" : `-${this.subcommand}`}:${this.pickedVia}`;
  }
  async *steps(state) {
    const context = {
      repos: [...await _container__WEBPACK_IMPORTED_MODULE_1__.Container.git.getOrderedRepositories()],
      showTags: false,
      title: this.title
    };
    let skippedStepTwo = false;
    while (this.canStepsContinue(state)) {
      context.title = this.title;
      if (state.counter < 1 || state.subcommand == null) {
        this.subcommand = void 0;
        const result = yield* this.pickSubcommandStep(state);
        if (result === _quickCommand__WEBPACK_IMPORTED_MODULE_5__.StepResult.Break)
          break;
        state.subcommand = result;
      }
      this.subcommand = state.subcommand;
      if (state.counter < 2 || state.repo == null || typeof state.repo === "string") {
        skippedStepTwo = false;
        if (context.repos.length === 1) {
          skippedStepTwo = true;
          state.counter++;
          state.repo = context.repos[0];
        } else {
          const result = yield* (0,_quickCommand__WEBPACK_IMPORTED_MODULE_5__.pickRepositoryStep)(state, context);
          if (result === _quickCommand__WEBPACK_IMPORTED_MODULE_5__.StepResult.Break)
            continue;
          state.repo = result;
        }
      }
      context.title = getTitle(state.subcommand === "delete" ? "Tags" : this.title, state.subcommand);
      switch (state.subcommand) {
        case "create": {
          yield* this.createCommandSteps(state, context);
          state.name = void 0;
          break;
        }
        case "delete":
          yield* this.deleteCommandSteps(state, context);
          break;
        default:
          _quickCommand__WEBPACK_IMPORTED_MODULE_5__.QuickCommand.endSteps(state);
          break;
      }
      if (skippedStepTwo) {
        state.counter--;
      }
    }
    return state.counter < 0 ? _quickCommand__WEBPACK_IMPORTED_MODULE_5__.StepResult.Break : void 0;
  }
  *pickSubcommandStep(state) {
    const step = _quickCommand__WEBPACK_IMPORTED_MODULE_5__.QuickCommand.createPickStep({
      title: this.title,
      placeholder: `Choose a ${this.label} command`,
      items: [
        {
          label: "create",
          description: "creates a new tag",
          picked: state.subcommand === "create",
          item: "create"
        },
        {
          label: "delete",
          description: "deletes the specified tags",
          picked: state.subcommand === "delete",
          item: "delete"
        }
      ],
      buttons: [vscode__WEBPACK_IMPORTED_MODULE_0__.QuickInputButtons.Back]
    });
    const selection = yield step;
    return _quickCommand__WEBPACK_IMPORTED_MODULE_5__.QuickCommand.canPickStepContinue(step, state, selection) ? selection[0].item : _quickCommand__WEBPACK_IMPORTED_MODULE_5__.StepResult.Break;
  }
  async *createCommandSteps(state, context) {
    var _a, _b, _c, _d;
    if (state.flags == null) {
      state.flags = [];
    }
    while (this.canStepsContinue(state)) {
      if (state.counter < 3 || state.reference == null) {
        const result = yield* (0,_quickCommand__WEBPACK_IMPORTED_MODULE_5__.pickBranchOrTagStep)(state, context, {
          placeholder: (context2) => `Choose a branch${context2.showTags ? " or tag" : ""} to create the new tag from`,
          picked: (_c = (_a = state.reference) == null ? void 0 : _a.ref) != null ? _c : (_b = await state.repo.getBranch()) == null ? void 0 : _b.ref,
          value: _git_git__WEBPACK_IMPORTED_MODULE_2__.GitReference.isRevision(state.reference) ? state.reference.ref : void 0
        });
        if (result === _quickCommand__WEBPACK_IMPORTED_MODULE_5__.StepResult.Break)
          break;
        state.reference = result;
      }
      if (state.counter < 4 || state.name == null) {
        const result = yield* (0,_quickCommand__WEBPACK_IMPORTED_MODULE_5__.inputTagNameStep)(state, context, {
          placeholder: "Please provide a name for the new tag",
          titleContext: ` at ${_git_git__WEBPACK_IMPORTED_MODULE_2__.GitReference.toString(state.reference, { capitalize: true, icon: false })}`,
          value: (_d = state.name) != null ? _d : _git_git__WEBPACK_IMPORTED_MODULE_2__.GitReference.getNameWithoutRemote(state.reference)
        });
        if (result === _quickCommand__WEBPACK_IMPORTED_MODULE_5__.StepResult.Break)
          continue;
        state.name = result;
      }
      if (state.counter < 5 || state.message == null) {
        const result = yield* this.createCommandInputMessageStep(state, context);
        if (result === _quickCommand__WEBPACK_IMPORTED_MODULE_5__.StepResult.Break)
          continue;
        state.message = result;
      }
      if (state.message.length !== 0 && !state.flags.includes("-m")) {
        state.flags.push("-m");
      }
      if (this.confirm(state.confirm)) {
        const result = yield* this.createCommandConfirmStep(state, context);
        if (result === _quickCommand__WEBPACK_IMPORTED_MODULE_5__.StepResult.Break)
          continue;
        state.flags = result;
      }
      _quickCommand__WEBPACK_IMPORTED_MODULE_5__.QuickCommand.endSteps(state);
      void state.repo.tag(...state.flags, ...state.message.length !== 0 ? [`"${state.message}"`] : [], state.name, state.reference.ref);
    }
  }
  async *createCommandInputMessageStep(state, context) {
    const step = _quickCommand__WEBPACK_IMPORTED_MODULE_5__.QuickCommand.createInputStep({
      title: (0,_quickCommand__WEBPACK_IMPORTED_MODULE_5__.appendReposToTitle)(`${context.title} at ${_git_git__WEBPACK_IMPORTED_MODULE_2__.GitReference.toString(state.reference, { capitalize: true, icon: false })}`, state, context),
      placeholder: "Please provide an optional message to annotate the tag",
      value: state.message,
      prompt: "Enter optional message"
    });
    const value = yield step;
    if (!_quickCommand__WEBPACK_IMPORTED_MODULE_5__.QuickCommand.canStepContinue(step, state, value) || !await _quickCommand__WEBPACK_IMPORTED_MODULE_5__.QuickCommand.canInputStepContinue(step, state, value)) {
      return _quickCommand__WEBPACK_IMPORTED_MODULE_5__.StepResult.Break;
    }
    return value;
  }
  *createCommandConfirmStep(state, context) {
    const step = _quickCommand__WEBPACK_IMPORTED_MODULE_5__.QuickCommand.createConfirmStep((0,_quickCommand__WEBPACK_IMPORTED_MODULE_5__.appendReposToTitle)(`Confirm ${context.title}`, state, context), [
      _quickpicks__WEBPACK_IMPORTED_MODULE_3__.FlagsQuickPickItem.create(state.flags, state.message.length !== 0 ? ["-m"] : [], {
        label: context.title,
        description: state.message.length !== 0 ? "-m" : "",
        detail: `Will create a new tag named ${state.name} at ${_git_git__WEBPACK_IMPORTED_MODULE_2__.GitReference.toString(state.reference)}`
      }),
      _quickpicks__WEBPACK_IMPORTED_MODULE_3__.FlagsQuickPickItem.create(state.flags, state.message.length !== 0 ? ["--force", "-m"] : ["--force"], {
        label: `Force ${context.title}`,
        description: `--force${state.message.length !== 0 ? " -m" : ""}`,
        detail: `Will forcibly create a new tag named ${state.name} at ${_git_git__WEBPACK_IMPORTED_MODULE_2__.GitReference.toString(state.reference)}`
      })
    ], context);
    const selection = yield step;
    return _quickCommand__WEBPACK_IMPORTED_MODULE_5__.QuickCommand.canPickStepContinue(step, state, selection) ? selection[0].item : _quickCommand__WEBPACK_IMPORTED_MODULE_5__.StepResult.Break;
  }
  async *deleteCommandSteps(state, context) {
    var _a;
    while (this.canStepsContinue(state)) {
      if (state.references != null && !Array.isArray(state.references)) {
        state.references = [state.references];
      }
      if (state.counter < 3 || state.references == null || state.references.length === 0) {
        context.title = getTitle("Tags", state.subcommand);
        const result2 = yield* (0,_quickCommand__WEBPACK_IMPORTED_MODULE_5__.pickTagsStep)(state, context, {
          picked: (_a = state.references) == null ? void 0 : _a.map((r) => r.ref),
          placeholder: "Choose tags to delete"
        });
        if (result2 === _quickCommand__WEBPACK_IMPORTED_MODULE_5__.StepResult.Break)
          break;
        state.references = result2;
      }
      context.title = getTitle(_system__WEBPACK_IMPORTED_MODULE_4__.Strings.pluralize("Tag", state.references.length, { number: "" }).trim(), state.subcommand);
      const result = yield* this.deleteCommandConfirmStep(state, context);
      if (result === _quickCommand__WEBPACK_IMPORTED_MODULE_5__.StepResult.Break)
        continue;
      _quickCommand__WEBPACK_IMPORTED_MODULE_5__.QuickCommand.endSteps(state);
      void state.repo.tagDelete(state.references);
    }
  }
  *deleteCommandConfirmStep(state, context) {
    const step = _quickCommand__WEBPACK_IMPORTED_MODULE_5__.QuickCommand.createConfirmStep((0,_quickCommand__WEBPACK_IMPORTED_MODULE_5__.appendReposToTitle)(`Confirm ${context.title}`, state, context), [
      {
        label: context.title,
        detail: `Will delete ${_git_git__WEBPACK_IMPORTED_MODULE_2__.GitReference.toString(state.references)}`
      }
    ], context);
    const selection = yield step;
    return _quickCommand__WEBPACK_IMPORTED_MODULE_5__.QuickCommand.canPickStepContinue(step, state, selection) ? void 0 : _quickCommand__WEBPACK_IMPORTED_MODULE_5__.StepResult.Break;
  }
}


/***/ }),

/***/ "./src/commands/inviteToLiveShare.ts":
/*!*******************************************!*\
  !*** ./src/commands/inviteToLiveShare.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "InviteToLiveShareCommand": () => (/* binding */ InviteToLiveShareCommand)
/* harmony export */ });
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../container */ "./src/container.ts");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./common */ "./src/commands/common.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};


let InviteToLiveShareCommand = class extends _common__WEBPACK_IMPORTED_MODULE_1__.Command {
  static getMarkdownCommandArgs(argsOrEmail) {
    const args = argsOrEmail === void 0 || typeof argsOrEmail === "string" ? { email: argsOrEmail } : argsOrEmail;
    return super.getMarkdownCommandArgsCore(_common__WEBPACK_IMPORTED_MODULE_1__.Commands.InviteToLiveShare, args);
  }
  constructor() {
    super(_common__WEBPACK_IMPORTED_MODULE_1__.Commands.InviteToLiveShare);
  }
  preExecute(context, args) {
    if ((0,_common__WEBPACK_IMPORTED_MODULE_1__.isCommandContextViewNodeHasContributor)(context)) {
      args = { ...args };
      args.email = context.node.contributor.email;
      return this.execute(args);
    }
    return this.execute(args);
  }
  async execute(args) {
    if (args == null ? void 0 : args.email) {
      const contact = await _container__WEBPACK_IMPORTED_MODULE_0__.Container.vsls.getContact(args.email);
      if (contact != null) {
        return contact.invite();
      }
    }
    return _container__WEBPACK_IMPORTED_MODULE_0__.Container.vsls.startSession();
  }
};
InviteToLiveShareCommand = __decorateClass([
  (0,_common__WEBPACK_IMPORTED_MODULE_1__.command)()
], InviteToLiveShareCommand);


/***/ }),

/***/ "./src/commands/logging.ts":
/*!*********************************!*\
  !*** ./src/commands/logging.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "EnableDebugLoggingCommand": () => (/* binding */ EnableDebugLoggingCommand),
/* harmony export */   "DisableDebugLoggingCommand": () => (/* binding */ DisableDebugLoggingCommand)
/* harmony export */ });
/* harmony import */ var _configuration__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../configuration */ "./src/configuration.ts");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./common */ "./src/commands/common.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};


let EnableDebugLoggingCommand = class extends _common__WEBPACK_IMPORTED_MODULE_1__.Command {
  constructor() {
    super(_common__WEBPACK_IMPORTED_MODULE_1__.Commands.EnableDebugLogging);
  }
  async execute() {
    await _configuration__WEBPACK_IMPORTED_MODULE_0__.configuration.updateEffective("outputLevel", _configuration__WEBPACK_IMPORTED_MODULE_0__.TraceLevel.Debug);
  }
};
EnableDebugLoggingCommand = __decorateClass([
  (0,_common__WEBPACK_IMPORTED_MODULE_1__.command)()
], EnableDebugLoggingCommand);
let DisableDebugLoggingCommand = class extends _common__WEBPACK_IMPORTED_MODULE_1__.Command {
  constructor() {
    super(_common__WEBPACK_IMPORTED_MODULE_1__.Commands.DisableDebugLogging);
  }
  async execute() {
    await _configuration__WEBPACK_IMPORTED_MODULE_0__.configuration.updateEffective("outputLevel", _configuration__WEBPACK_IMPORTED_MODULE_0__.TraceLevel.Errors);
  }
};
DisableDebugLoggingCommand = __decorateClass([
  (0,_common__WEBPACK_IMPORTED_MODULE_1__.command)()
], DisableDebugLoggingCommand);


/***/ }),

/***/ "./src/commands/openAssociatedPullRequestOnRemote.ts":
/*!***********************************************************!*\
  !*** ./src/commands/openAssociatedPullRequestOnRemote.ts ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "OpenAssociatedPullRequestOnRemoteCommand": () => (/* binding */ OpenAssociatedPullRequestOnRemoteCommand)
/* harmony export */ });
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../container */ "./src/container.ts");
/* harmony import */ var _git_gitUri__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../git/gitUri */ "./src/git/gitUri.ts");
/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../logger */ "./src/logger.ts");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./common */ "./src/commands/common.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};




let OpenAssociatedPullRequestOnRemoteCommand = class extends _common__WEBPACK_IMPORTED_MODULE_3__.ActiveEditorCommand {
  constructor() {
    super(_common__WEBPACK_IMPORTED_MODULE_3__.Commands.OpenAssociatedPullRequestOnRemote);
  }
  async execute(editor, uri) {
    if (editor == null)
      return;
    uri = (0,_common__WEBPACK_IMPORTED_MODULE_3__.getCommandUri)(uri, editor);
    if (uri == null)
      return;
    const gitUri = await _git_gitUri__WEBPACK_IMPORTED_MODULE_1__.GitUri.fromUri(uri);
    const blameline = editor.selection.active.line;
    if (blameline < 0)
      return;
    try {
      const blame = await _container__WEBPACK_IMPORTED_MODULE_0__.Container.git.getBlameForLine(gitUri, blameline);
      if (blame == null)
        return;
      await (0,_common__WEBPACK_IMPORTED_MODULE_3__.executeCommand)(_common__WEBPACK_IMPORTED_MODULE_3__.Commands.OpenPullRequestOnRemote, {
        clipboard: false,
        ref: blame.commit.sha,
        repoPath: blame.commit.repoPath
      });
    } catch (ex) {
      _logger__WEBPACK_IMPORTED_MODULE_2__.Logger.error(ex, "OpenAssociatedPullRequestOnRemoteCommand", `getBlameForLine(${blameline})`);
    }
  }
};
OpenAssociatedPullRequestOnRemoteCommand = __decorateClass([
  (0,_common__WEBPACK_IMPORTED_MODULE_3__.command)()
], OpenAssociatedPullRequestOnRemoteCommand);


/***/ }),

/***/ "./src/commands/openBranchOnRemote.ts":
/*!********************************************!*\
  !*** ./src/commands/openBranchOnRemote.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "OpenBranchOnRemoteCommand": () => (/* binding */ OpenBranchOnRemoteCommand)
/* harmony export */ });
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _git_git__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../git/git */ "./src/git/git.ts");
/* harmony import */ var _git_gitUri__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../git/gitUri */ "./src/git/gitUri.ts");
/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../logger */ "./src/logger.ts");
/* harmony import */ var _quickpicks__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../quickpicks */ "./src/quickpicks.ts");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./common */ "./src/commands/common.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};






let OpenBranchOnRemoteCommand = class extends _common__WEBPACK_IMPORTED_MODULE_5__.ActiveEditorCommand {
  constructor() {
    super([_common__WEBPACK_IMPORTED_MODULE_5__.Commands.OpenBranchOnRemote, _common__WEBPACK_IMPORTED_MODULE_5__.Commands.Deprecated_OpenBranchInRemote, _common__WEBPACK_IMPORTED_MODULE_5__.Commands.CopyRemoteBranchUrl]);
  }
  preExecute(context, args) {
    if ((0,_common__WEBPACK_IMPORTED_MODULE_5__.isCommandContextViewNodeHasBranch)(context)) {
      args = {
        ...args,
        branch: context.node.branch.name,
        remote: context.node.branch.getRemoteName()
      };
    }
    if (context.command === _common__WEBPACK_IMPORTED_MODULE_5__.Commands.CopyRemoteBranchUrl) {
      args = { ...args, clipboard: true };
    }
    return this.execute(context.editor, context.uri, args);
  }
  async execute(editor, uri, args) {
    uri = (0,_common__WEBPACK_IMPORTED_MODULE_5__.getCommandUri)(uri, editor);
    const gitUri = uri != null ? await _git_gitUri__WEBPACK_IMPORTED_MODULE_2__.GitUri.fromUri(uri) : void 0;
    const repoPath = await (0,_common__WEBPACK_IMPORTED_MODULE_5__.getRepoPathOrActiveOrPrompt)(gitUri, editor, (args == null ? void 0 : args.clipboard) ? "Copy Remote Branch Url" : "Open Branch On Remote");
    if (!repoPath)
      return;
    args = { ...args };
    try {
      if (args.branch == null) {
        const pick = await _quickpicks__WEBPACK_IMPORTED_MODULE_4__.ReferencePicker.show(repoPath, args.clipboard ? "Copy Remote Branch Url" : "Open Branch On Remote", args.clipboard ? "Choose a branch to copy the url from" : "Choose a branch to open", {
          autoPick: true,
          filter: { branches: (b) => b.upstream != null },
          include: _quickpicks__WEBPACK_IMPORTED_MODULE_4__.ReferencesQuickPickIncludes.Branches,
          sort: { branches: { current: true }, tags: {} }
        });
        if (pick == null || pick instanceof _quickpicks__WEBPACK_IMPORTED_MODULE_4__.CommandQuickPickItem)
          return;
        args.branch = pick.ref;
      }
      void await (0,_common__WEBPACK_IMPORTED_MODULE_5__.executeCommand)(_common__WEBPACK_IMPORTED_MODULE_5__.Commands.OpenOnRemote, {
        resource: {
          type: _git_git__WEBPACK_IMPORTED_MODULE_1__.RemoteResourceType.Branch,
          branch: args.branch || "HEAD"
        },
        repoPath,
        remote: args.remote,
        clipboard: args.clipboard
      });
    } catch (ex) {
      _logger__WEBPACK_IMPORTED_MODULE_3__.Logger.error(ex, "OpenBranchOnRemoteCommand");
      void vscode__WEBPACK_IMPORTED_MODULE_0__.window.showErrorMessage("Unable to open branch on remote provider. See output channel for more details");
    }
  }
};
OpenBranchOnRemoteCommand = __decorateClass([
  (0,_common__WEBPACK_IMPORTED_MODULE_5__.command)()
], OpenBranchOnRemoteCommand);


/***/ }),

/***/ "./src/commands/openBranchesOnRemote.ts":
/*!**********************************************!*\
  !*** ./src/commands/openBranchesOnRemote.ts ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "OpenBranchesOnRemoteCommand": () => (/* binding */ OpenBranchesOnRemoteCommand)
/* harmony export */ });
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _git_git__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../git/git */ "./src/git/git.ts");
/* harmony import */ var _git_gitUri__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../git/gitUri */ "./src/git/gitUri.ts");
/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../logger */ "./src/logger.ts");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./common */ "./src/commands/common.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};





let OpenBranchesOnRemoteCommand = class extends _common__WEBPACK_IMPORTED_MODULE_4__.ActiveEditorCommand {
  constructor() {
    super([
      _common__WEBPACK_IMPORTED_MODULE_4__.Commands.OpenBranchesOnRemote,
      _common__WEBPACK_IMPORTED_MODULE_4__.Commands.Deprecated_OpenBranchesInRemote,
      _common__WEBPACK_IMPORTED_MODULE_4__.Commands.CopyRemoteBranchesUrl
    ]);
  }
  preExecute(context, args) {
    if ((0,_common__WEBPACK_IMPORTED_MODULE_4__.isCommandContextViewNodeHasRemote)(context)) {
      args = { ...args, remote: context.node.remote.name };
    }
    if (context.command === _common__WEBPACK_IMPORTED_MODULE_4__.Commands.CopyRemoteBranchesUrl) {
      args = { ...args, clipboard: true };
    }
    return this.execute(context.editor, context.uri, args);
  }
  async execute(editor, uri, args) {
    uri = (0,_common__WEBPACK_IMPORTED_MODULE_4__.getCommandUri)(uri, editor);
    const gitUri = uri != null ? await _git_gitUri__WEBPACK_IMPORTED_MODULE_2__.GitUri.fromUri(uri) : void 0;
    const repoPath = await (0,_common__WEBPACK_IMPORTED_MODULE_4__.getRepoPathOrActiveOrPrompt)(gitUri, editor, (args == null ? void 0 : args.clipboard) ? "Copy Remote Branches Url" : "Open Branches on Remote");
    if (!repoPath)
      return;
    try {
      void await (0,_common__WEBPACK_IMPORTED_MODULE_4__.executeCommand)(_common__WEBPACK_IMPORTED_MODULE_4__.Commands.OpenOnRemote, {
        resource: {
          type: _git_git__WEBPACK_IMPORTED_MODULE_1__.RemoteResourceType.Branches
        },
        repoPath,
        remote: args == null ? void 0 : args.remote,
        clipboard: args == null ? void 0 : args.clipboard
      });
    } catch (ex) {
      _logger__WEBPACK_IMPORTED_MODULE_3__.Logger.error(ex, "OpenBranchesOnRemoteCommand");
      void vscode__WEBPACK_IMPORTED_MODULE_0__.window.showErrorMessage("Unable to open branches on remote provider. See output channel for more details");
    }
  }
};
OpenBranchesOnRemoteCommand = __decorateClass([
  (0,_common__WEBPACK_IMPORTED_MODULE_4__.command)()
], OpenBranchesOnRemoteCommand);


/***/ }),

/***/ "./src/commands/openChangedFiles.ts":
/*!******************************************!*\
  !*** ./src/commands/openChangedFiles.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "OpenChangedFilesCommand": () => (/* binding */ OpenChangedFilesCommand)
/* harmony export */ });
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../container */ "./src/container.ts");
/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../logger */ "./src/logger.ts");
/* harmony import */ var _messages__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../messages */ "./src/messages.ts");
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../system */ "./src/system.ts");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./common */ "./src/commands/common.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};






let OpenChangedFilesCommand = class extends _common__WEBPACK_IMPORTED_MODULE_5__.Command {
  constructor() {
    super(_common__WEBPACK_IMPORTED_MODULE_5__.Commands.OpenChangedFiles);
  }
  async execute(args) {
    args = { ...args };
    try {
      if (args.uris == null) {
        const repoPath = await (0,_common__WEBPACK_IMPORTED_MODULE_5__.getRepoPathOrPrompt)("Open All Changed Files");
        if (!repoPath)
          return;
        const status = await _container__WEBPACK_IMPORTED_MODULE_1__.Container.git.getStatusForRepo(repoPath);
        if (status == null) {
          void vscode__WEBPACK_IMPORTED_MODULE_0__.window.showWarningMessage("Unable to open changed files");
          return;
        }
        args.uris = _system__WEBPACK_IMPORTED_MODULE_4__.Arrays.filterMap(status.files, (f) => f.status !== "D" ? f.uri : void 0);
      }
      (0,_common__WEBPACK_IMPORTED_MODULE_5__.findOrOpenEditors)(args.uris);
    } catch (ex) {
      _logger__WEBPACK_IMPORTED_MODULE_2__.Logger.error(ex, "OpenChangedFilesCommand");
      void _messages__WEBPACK_IMPORTED_MODULE_3__.Messages.showGenericErrorMessage("Unable to open all changed files");
    }
  }
};
OpenChangedFilesCommand = __decorateClass([
  (0,_common__WEBPACK_IMPORTED_MODULE_5__.command)()
], OpenChangedFilesCommand);


/***/ }),

/***/ "./src/commands/openCommitOnRemote.ts":
/*!********************************************!*\
  !*** ./src/commands/openCommitOnRemote.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "OpenCommitOnRemoteCommand": () => (/* binding */ OpenCommitOnRemoteCommand)
/* harmony export */ });
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../container */ "./src/container.ts");
/* harmony import */ var _git_git__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../git/git */ "./src/git/git.ts");
/* harmony import */ var _git_gitUri__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../git/gitUri */ "./src/git/gitUri.ts");
/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../logger */ "./src/logger.ts");
/* harmony import */ var _messages__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../messages */ "./src/messages.ts");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./common */ "./src/commands/common.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};







let OpenCommitOnRemoteCommand = class extends _common__WEBPACK_IMPORTED_MODULE_6__.ActiveEditorCommand {
  static getMarkdownCommandArgs(argsOrSha) {
    const args = typeof argsOrSha === "string" ? { sha: argsOrSha } : argsOrSha;
    return super.getMarkdownCommandArgsCore(_common__WEBPACK_IMPORTED_MODULE_6__.Commands.OpenCommitOnRemote, args);
  }
  constructor() {
    super([_common__WEBPACK_IMPORTED_MODULE_6__.Commands.OpenCommitOnRemote, _common__WEBPACK_IMPORTED_MODULE_6__.Commands.Deprecated_OpenCommitInRemote, _common__WEBPACK_IMPORTED_MODULE_6__.Commands.CopyRemoteCommitUrl]);
  }
  preExecute(context, args) {
    let uri = context.uri;
    if ((0,_common__WEBPACK_IMPORTED_MODULE_6__.isCommandContextViewNodeHasCommit)(context)) {
      if (context.node.commit.isUncommitted)
        return Promise.resolve(void 0);
      args = { ...args, sha: context.node.commit.sha };
      uri = context.node.uri;
    }
    if ((0,_common__WEBPACK_IMPORTED_MODULE_6__.isCommandContextGitTimelineItem)(context)) {
      args = { sha: context.item.ref };
      uri = context.uri;
    }
    if (context.command === _common__WEBPACK_IMPORTED_MODULE_6__.Commands.CopyRemoteCommitUrl) {
      args = { ...args, clipboard: true };
    }
    return this.execute(context.editor, uri, args);
  }
  async execute(editor, uri, args) {
    uri = (0,_common__WEBPACK_IMPORTED_MODULE_6__.getCommandUri)(uri, editor);
    if (uri == null)
      return;
    const gitUri = await _git_gitUri__WEBPACK_IMPORTED_MODULE_3__.GitUri.fromUri(uri);
    if (!gitUri.repoPath)
      return;
    args = { ...args };
    try {
      if (args.sha == null) {
        const blameline = editor == null ? 0 : editor.selection.active.line;
        if (blameline < 0)
          return;
        const blame = (editor == null ? void 0 : editor.document.isDirty) ? await _container__WEBPACK_IMPORTED_MODULE_1__.Container.git.getBlameForLineContents(gitUri, blameline, editor.document.getText()) : await _container__WEBPACK_IMPORTED_MODULE_1__.Container.git.getBlameForLine(gitUri, blameline);
        if (blame == null) {
          void _messages__WEBPACK_IMPORTED_MODULE_5__.Messages.showFileNotUnderSourceControlWarningMessage("Unable to open commit on remote provider");
          return;
        }
        let commit = blame.commit;
        if (commit.isUncommitted) {
          commit = commit.with({
            sha: commit.previousSha,
            fileName: commit.previousFileName,
            previousSha: null,
            previousFileName: null
          });
        }
        args.sha = commit.sha;
      }
      void await (0,_common__WEBPACK_IMPORTED_MODULE_6__.executeCommand)(_common__WEBPACK_IMPORTED_MODULE_6__.Commands.OpenOnRemote, {
        resource: {
          type: _git_git__WEBPACK_IMPORTED_MODULE_2__.RemoteResourceType.Commit,
          sha: args.sha
        },
        repoPath: gitUri.repoPath,
        clipboard: args.clipboard
      });
    } catch (ex) {
      _logger__WEBPACK_IMPORTED_MODULE_4__.Logger.error(ex, "OpenCommitOnRemoteCommand");
      void vscode__WEBPACK_IMPORTED_MODULE_0__.window.showErrorMessage("Unable to open commit on remote provider. See output channel for more details");
    }
  }
};
OpenCommitOnRemoteCommand = __decorateClass([
  (0,_common__WEBPACK_IMPORTED_MODULE_6__.command)()
], OpenCommitOnRemoteCommand);


/***/ }),

/***/ "./src/commands/openComparisonOnRemote.ts":
/*!************************************************!*\
  !*** ./src/commands/openComparisonOnRemote.ts ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "OpenComparisonOnRemoteCommand": () => (/* binding */ OpenComparisonOnRemoteCommand)
/* harmony export */ });
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _git_git__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../git/git */ "./src/git/git.ts");
/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../logger */ "./src/logger.ts");
/* harmony import */ var _views_nodes__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../views/nodes */ "./src/views/nodes.ts");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./common */ "./src/commands/common.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};





let OpenComparisonOnRemoteCommand = class extends _common__WEBPACK_IMPORTED_MODULE_4__.Command {
  constructor() {
    super([_common__WEBPACK_IMPORTED_MODULE_4__.Commands.OpenComparisonOnRemote, _common__WEBPACK_IMPORTED_MODULE_4__.Commands.CopyRemoteComparisonUrl]);
  }
  preExecute(context, args) {
    if (context.type === "viewItem") {
      if (context.node instanceof _views_nodes__WEBPACK_IMPORTED_MODULE_3__.ResultsCommitsNode) {
        args = {
          ...args,
          repoPath: context.node.repoPath,
          ref1: context.node.ref1,
          ref2: context.node.ref2
        };
      }
    }
    if (context.command === _common__WEBPACK_IMPORTED_MODULE_4__.Commands.CopyRemoteBranchesUrl) {
      args = { ...args, clipboard: true };
    }
    return this.execute(args);
  }
  async execute(args) {
    if ((args == null ? void 0 : args.repoPath) == null || args.ref1 == null || args.ref2 == null)
      return;
    try {
      void await (0,_common__WEBPACK_IMPORTED_MODULE_4__.executeCommand)(_common__WEBPACK_IMPORTED_MODULE_4__.Commands.OpenOnRemote, {
        resource: {
          type: _git_git__WEBPACK_IMPORTED_MODULE_1__.RemoteResourceType.Comparison,
          base: args.ref1,
          compare: args.ref2,
          notation: args.notation
        },
        repoPath: args.repoPath,
        clipboard: args == null ? void 0 : args.clipboard
      });
    } catch (ex) {
      _logger__WEBPACK_IMPORTED_MODULE_2__.Logger.error(ex, "OpenComparisonOnRemoteCommand");
      void vscode__WEBPACK_IMPORTED_MODULE_0__.window.showErrorMessage("Unable to open comparison on remote provider. See output channel for more details");
    }
  }
};
OpenComparisonOnRemoteCommand = __decorateClass([
  (0,_common__WEBPACK_IMPORTED_MODULE_4__.command)()
], OpenComparisonOnRemoteCommand);


/***/ }),

/***/ "./src/commands/openDirectoryCompare.ts":
/*!**********************************************!*\
  !*** ./src/commands/openDirectoryCompare.ts ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "OpenDirectoryCompareCommand": () => (/* binding */ OpenDirectoryCompareCommand)
/* harmony export */ });
/* harmony import */ var _commands__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../commands */ "./src/commands.ts");
/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../logger */ "./src/logger.ts");
/* harmony import */ var _messages__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../messages */ "./src/messages.ts");
/* harmony import */ var _quickpicks__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../quickpicks */ "./src/quickpicks.ts");
/* harmony import */ var _views_nodes__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../views/nodes */ "./src/views/nodes.ts");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./common */ "./src/commands/common.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};






let OpenDirectoryCompareCommand = class extends _common__WEBPACK_IMPORTED_MODULE_5__.ActiveEditorCommand {
  constructor() {
    super([
      _common__WEBPACK_IMPORTED_MODULE_5__.Commands.DiffDirectory,
      _common__WEBPACK_IMPORTED_MODULE_5__.Commands.DiffDirectoryWithHead,
      _common__WEBPACK_IMPORTED_MODULE_5__.Commands.ViewsOpenDirectoryDiff,
      _common__WEBPACK_IMPORTED_MODULE_5__.Commands.ViewsOpenDirectoryDiffWithWorking
    ]);
  }
  async preExecute(context, args) {
    switch (context.command) {
      case _common__WEBPACK_IMPORTED_MODULE_5__.Commands.DiffDirectoryWithHead:
        args = { ...args };
        args.ref1 = "HEAD";
        args.ref2 = void 0;
        break;
      case _common__WEBPACK_IMPORTED_MODULE_5__.Commands.ViewsOpenDirectoryDiff:
        if (context.type === "viewItem" && context.node instanceof _views_nodes__WEBPACK_IMPORTED_MODULE_4__.CompareResultsNode) {
          args = { ...args };
          [args.ref1, args.ref2] = await context.node.getDiffRefs();
        }
        break;
      case _common__WEBPACK_IMPORTED_MODULE_5__.Commands.ViewsOpenDirectoryDiffWithWorking:
        if ((0,_common__WEBPACK_IMPORTED_MODULE_5__.isCommandContextViewNodeHasRef)(context)) {
          args = { ...args };
          args.ref1 = context.node.ref.ref;
          args.ref2 = void 0;
        }
        break;
    }
    return this.execute(context.editor, context.uri, args);
  }
  async execute(editor, uri, args) {
    uri = (0,_common__WEBPACK_IMPORTED_MODULE_5__.getCommandUri)(uri, editor);
    args = { ...args };
    try {
      const repoPath = await (0,_common__WEBPACK_IMPORTED_MODULE_5__.getRepoPathOrActiveOrPrompt)(uri, editor, "Directory Compare Working Tree With");
      if (!repoPath)
        return;
      if (!args.ref1) {
        const pick = await _quickpicks__WEBPACK_IMPORTED_MODULE_3__.ReferencePicker.show(repoPath, "Directory Compare Working Tree with", "Choose a branch or tag to compare with", {
          allowEnteringRefs: true
        });
        if (pick == null)
          return;
        args.ref1 = pick.ref;
        if (args.ref1 == null)
          return;
      }
      void _commands__WEBPACK_IMPORTED_MODULE_0__.GitActions.Commit.openDirectoryCompare(repoPath, args.ref1, args.ref2);
    } catch (ex) {
      _logger__WEBPACK_IMPORTED_MODULE_1__.Logger.error(ex, "OpenDirectoryCompareCommand");
      void _messages__WEBPACK_IMPORTED_MODULE_2__.Messages.showGenericErrorMessage("Unable to open directory compare");
    }
  }
};
OpenDirectoryCompareCommand = __decorateClass([
  (0,_common__WEBPACK_IMPORTED_MODULE_5__.command)()
], OpenDirectoryCompareCommand);


/***/ }),

/***/ "./src/commands/openFileAtRevision.ts":
/*!********************************************!*\
  !*** ./src/commands/openFileAtRevision.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "OpenFileAtRevisionCommand": () => (/* binding */ OpenFileAtRevisionCommand)
/* harmony export */ });
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _configuration__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../configuration */ "./src/configuration.ts");
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../constants */ "./src/constants.ts");
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../container */ "./src/container.ts");
/* harmony import */ var _git_git__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../git/git */ "./src/git/git.ts");
/* harmony import */ var _git_gitUri__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../git/gitUri */ "./src/git/gitUri.ts");
/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../logger */ "./src/logger.ts");
/* harmony import */ var _messages__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../messages */ "./src/messages.ts");
/* harmony import */ var _quickpicks__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../quickpicks */ "./src/quickpicks.ts");
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../system */ "./src/system.ts");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./common */ "./src/commands/common.ts");
/* harmony import */ var _gitCommands__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./gitCommands */ "./src/commands/gitCommands.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};












let OpenFileAtRevisionCommand = class extends _common__WEBPACK_IMPORTED_MODULE_10__.ActiveEditorCommand {
  static getMarkdownCommandArgs(argsOrUri, annotationType, line) {
    let args;
    if (argsOrUri instanceof vscode__WEBPACK_IMPORTED_MODULE_0__.Uri) {
      const revisionUri = argsOrUri;
      args = {
        revisionUri,
        line,
        annotationType
      };
    } else {
      args = argsOrUri;
    }
    return super.getMarkdownCommandArgsCore(_common__WEBPACK_IMPORTED_MODULE_10__.Commands.OpenFileAtRevision, args);
  }
  constructor() {
    super([_common__WEBPACK_IMPORTED_MODULE_10__.Commands.OpenFileAtRevision, _common__WEBPACK_IMPORTED_MODULE_10__.Commands.OpenBlamePriorToChange]);
  }
  async preExecute(context, args) {
    if (context.command === _common__WEBPACK_IMPORTED_MODULE_10__.Commands.OpenBlamePriorToChange) {
      args = { ...args, annotationType: _configuration__WEBPACK_IMPORTED_MODULE_1__.FileAnnotationType.Blame };
      if (args.revisionUri == null && context.editor != null) {
        const blameline = context.editor.selection.active.line;
        if (blameline >= 0) {
          try {
            const gitUri = await _git_gitUri__WEBPACK_IMPORTED_MODULE_5__.GitUri.fromUri(context.editor.document.uri);
            const blame = await _container__WEBPACK_IMPORTED_MODULE_3__.Container.git.getBlameForLine(gitUri, blameline);
            if (blame != null && !blame.commit.isUncommitted && blame.commit.previousSha != null) {
              args.revisionUri = _git_gitUri__WEBPACK_IMPORTED_MODULE_5__.GitUri.toRevisionUri(_git_gitUri__WEBPACK_IMPORTED_MODULE_5__.GitUri.fromCommit(blame.commit, true));
            }
          } catch {
          }
        }
      }
    }
    return this.execute(context.editor, context.uri, args);
  }
  async execute(editor, uri, args) {
    var _a;
    uri = (0,_common__WEBPACK_IMPORTED_MODULE_10__.getCommandUri)(uri, editor);
    if (uri == null)
      return;
    const gitUri = await _git_gitUri__WEBPACK_IMPORTED_MODULE_5__.GitUri.fromUri(uri);
    args = { ...args };
    if (args.line == null) {
      args.line = (_a = editor == null ? void 0 : editor.selection.active.line) != null ? _a : 0;
    }
    try {
      if (args.revisionUri == null) {
        const log = _container__WEBPACK_IMPORTED_MODULE_3__.Container.git.getLogForFile(gitUri.repoPath, gitUri.fsPath).then((log2) => log2 != null ? log2 : gitUri.sha ? _container__WEBPACK_IMPORTED_MODULE_3__.Container.git.getLogForFile(gitUri.repoPath, gitUri.fsPath, { ref: gitUri.sha }) : void 0);
        const title = `Open ${args.annotationType === _configuration__WEBPACK_IMPORTED_MODULE_1__.FileAnnotationType.Blame ? "Blame" : "File"} at Revision${_system__WEBPACK_IMPORTED_MODULE_9__.Strings.pad(_constants__WEBPACK_IMPORTED_MODULE_2__.GlyphChars.Dot, 2, 2)}`;
        const pick = await _quickpicks__WEBPACK_IMPORTED_MODULE_8__.CommitPicker.show(log, `${title}${gitUri.getFormattedFilename({
          suffix: gitUri.sha ? `:${_git_git__WEBPACK_IMPORTED_MODULE_4__.GitRevision.shorten(gitUri.sha)}` : void 0,
          truncateTo: _constants__WEBPACK_IMPORTED_MODULE_2__.quickPickTitleMaxChars - title.length
        })}`, `Choose a commit to ${args.annotationType === _configuration__WEBPACK_IMPORTED_MODULE_1__.FileAnnotationType.Blame ? "blame" : "open"} the file revision from`, {
          picked: gitUri.sha,
          keys: ["right", "alt+right", "ctrl+right"],
          onDidPressKey: async (key, item) => {
            void await _gitCommands__WEBPACK_IMPORTED_MODULE_11__.GitActions.Commit.openFileAtRevision(item.item.uri.fsPath, item.item, {
              annotationType: args.annotationType,
              line: args.line,
              preserveFocus: true,
              preview: false
            });
          },
          showOtherReferences: _quickpicks__WEBPACK_IMPORTED_MODULE_8__.CommandQuickPickItem.fromCommand("Choose a branch or tag...", _common__WEBPACK_IMPORTED_MODULE_10__.Commands.OpenFileAtRevisionFrom)
        });
        if (pick == null)
          return;
        void await _gitCommands__WEBPACK_IMPORTED_MODULE_11__.GitActions.Commit.openFileAtRevision(pick.fileName, pick, {
          annotationType: args.annotationType,
          line: args.line,
          ...args.showOptions
        });
        return;
      }
      void await _gitCommands__WEBPACK_IMPORTED_MODULE_11__.GitActions.Commit.openFileAtRevision(args.revisionUri, {
        annotationType: args.annotationType,
        line: args.line,
        ...args.showOptions
      });
    } catch (ex) {
      _logger__WEBPACK_IMPORTED_MODULE_6__.Logger.error(ex, "OpenFileAtRevisionCommand");
      void _messages__WEBPACK_IMPORTED_MODULE_7__.Messages.showGenericErrorMessage("Unable to open file at revision");
    }
  }
};
OpenFileAtRevisionCommand = __decorateClass([
  (0,_common__WEBPACK_IMPORTED_MODULE_10__.command)()
], OpenFileAtRevisionCommand);


/***/ }),

/***/ "./src/commands/openFileAtRevisionFrom.ts":
/*!************************************************!*\
  !*** ./src/commands/openFileAtRevisionFrom.ts ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "OpenFileAtRevisionFromCommand": () => (/* binding */ OpenFileAtRevisionFromCommand)
/* harmony export */ });
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../constants */ "./src/constants.ts");
/* harmony import */ var _git_gitUri__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../git/gitUri */ "./src/git/gitUri.ts");
/* harmony import */ var _messages__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../messages */ "./src/messages.ts");
/* harmony import */ var _quickpicks__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../quickpicks */ "./src/quickpicks.ts");
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../system */ "./src/system.ts");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./common */ "./src/commands/common.ts");
/* harmony import */ var _gitCommands__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./gitCommands */ "./src/commands/gitCommands.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};







let OpenFileAtRevisionFromCommand = class extends _common__WEBPACK_IMPORTED_MODULE_5__.ActiveEditorCommand {
  constructor() {
    super(_common__WEBPACK_IMPORTED_MODULE_5__.Commands.OpenFileAtRevisionFrom);
  }
  async execute(editor, uri, args) {
    var _a;
    uri = (0,_common__WEBPACK_IMPORTED_MODULE_5__.getCommandUri)(uri, editor);
    if (uri == null)
      return;
    const gitUri = await _git_gitUri__WEBPACK_IMPORTED_MODULE_1__.GitUri.fromUri(uri);
    if (!gitUri.repoPath) {
      void _messages__WEBPACK_IMPORTED_MODULE_2__.Messages.showNoRepositoryWarningMessage("Unable to open file revision");
      return;
    }
    args = { ...args };
    if (args.line == null) {
      args.line = (_a = editor == null ? void 0 : editor.selection.active.line) != null ? _a : 0;
    }
    if (args.reference == null) {
      const title = `Open File at Branch or Tag${_system__WEBPACK_IMPORTED_MODULE_4__.Strings.pad(_constants__WEBPACK_IMPORTED_MODULE_0__.GlyphChars.Dot, 2, 2)}`;
      const pick = await _quickpicks__WEBPACK_IMPORTED_MODULE_3__.ReferencePicker.show(gitUri.repoPath, `${title}${gitUri.getFormattedFilename({ truncateTo: _constants__WEBPACK_IMPORTED_MODULE_0__.quickPickTitleMaxChars - title.length })}`, "Choose a branch or tag to open the file revision from", {
        allowEnteringRefs: true,
        keys: ["right", "alt+right", "ctrl+right"],
        onDidPressKey: async (key, quickpick) => {
          const [item] = quickpick.activeItems;
          if (item != null) {
            void await _gitCommands__WEBPACK_IMPORTED_MODULE_6__.GitActions.Commit.openFileAtRevision(_git_gitUri__WEBPACK_IMPORTED_MODULE_1__.GitUri.toRevisionUri(item.ref, gitUri.fsPath, gitUri.repoPath), {
              annotationType: args.annotationType,
              line: args.line,
              preserveFocus: true,
              preview: false
            });
          }
        }
      });
      if (pick == null)
        return;
      args.reference = pick;
    }
    void await _gitCommands__WEBPACK_IMPORTED_MODULE_6__.GitActions.Commit.openFileAtRevision(_git_gitUri__WEBPACK_IMPORTED_MODULE_1__.GitUri.toRevisionUri(args.reference.ref, gitUri.fsPath, gitUri.repoPath), {
      annotationType: args.annotationType,
      line: args.line,
      ...args.showOptions
    });
  }
};
OpenFileAtRevisionFromCommand = __decorateClass([
  (0,_common__WEBPACK_IMPORTED_MODULE_5__.command)()
], OpenFileAtRevisionFromCommand);


/***/ }),

/***/ "./src/commands/openFileFromRemote.ts":
/*!********************************************!*\
  !*** ./src/commands/openFileFromRemote.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "OpenFileFromRemoteCommand": () => (/* binding */ OpenFileFromRemoteCommand)
/* harmony export */ });
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../container */ "./src/container.ts");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./common */ "./src/commands/common.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};



let OpenFileFromRemoteCommand = class extends _common__WEBPACK_IMPORTED_MODULE_2__.Command {
  constructor() {
    super(_common__WEBPACK_IMPORTED_MODULE_2__.Commands.OpenFileFromRemote);
  }
  async execute() {
    let clipboard = await vscode__WEBPACK_IMPORTED_MODULE_0__.env.clipboard.readText();
    try {
      vscode__WEBPACK_IMPORTED_MODULE_0__.Uri.parse(clipboard, true);
    } catch {
      clipboard = void 0;
    }
    const url = await vscode__WEBPACK_IMPORTED_MODULE_0__.window.showInputBox({
      prompt: "Enter a remote file url to open",
      placeHolder: "Remote file url",
      value: clipboard,
      ignoreFocusOut: true
    });
    if (url == null || url.length === 0)
      return;
    let local = await _container__WEBPACK_IMPORTED_MODULE_1__.Container.git.getLocalInfoFromRemoteUri(vscode__WEBPACK_IMPORTED_MODULE_0__.Uri.parse(url));
    if (local == null) {
      local = await _container__WEBPACK_IMPORTED_MODULE_1__.Container.git.getLocalInfoFromRemoteUri(vscode__WEBPACK_IMPORTED_MODULE_0__.Uri.parse(url), { validate: false });
      if (local == null) {
        void vscode__WEBPACK_IMPORTED_MODULE_0__.window.showWarningMessage("Unable to parse the provided remote url.");
        return;
      }
      const confirm = "Open File...";
      const pick = await vscode__WEBPACK_IMPORTED_MODULE_0__.window.showWarningMessage("Unable to find a workspace folder that matches the provided remote url.", confirm);
      if (pick !== confirm)
        return;
    }
    let selection;
    if (local.startLine) {
      if (local.endLine) {
        selection = new vscode__WEBPACK_IMPORTED_MODULE_0__.Range(local.startLine - 1, 0, local.endLine, 0);
      } else {
        selection = new vscode__WEBPACK_IMPORTED_MODULE_0__.Range(local.startLine - 1, 0, local.startLine - 1, 0);
      }
    }
    try {
      await (0,_common__WEBPACK_IMPORTED_MODULE_2__.openEditor)(local.uri, { selection, rethrow: true });
    } catch {
      const uris = await vscode__WEBPACK_IMPORTED_MODULE_0__.window.showOpenDialog({
        title: "Open local file",
        defaultUri: local.uri,
        canSelectMany: false,
        canSelectFolders: false
      });
      if (uris == null || uris.length === 0)
        return;
      await (0,_common__WEBPACK_IMPORTED_MODULE_2__.openEditor)(uris[0]);
    }
  }
};
OpenFileFromRemoteCommand = __decorateClass([
  (0,_common__WEBPACK_IMPORTED_MODULE_2__.command)()
], OpenFileFromRemoteCommand);


/***/ }),

/***/ "./src/commands/openFileOnRemote.ts":
/*!******************************************!*\
  !*** ./src/commands/openFileOnRemote.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "OpenFileOnRemoteCommand": () => (/* binding */ OpenFileOnRemoteCommand)
/* harmony export */ });
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _comparers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../comparers */ "./src/comparers.ts");
/* harmony import */ var _configuration__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../configuration */ "./src/configuration.ts");
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../constants */ "./src/constants.ts");
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../container */ "./src/container.ts");
/* harmony import */ var _git_git__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../git/git */ "./src/git/git.ts");
/* harmony import */ var _git_gitUri__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../git/gitUri */ "./src/git/gitUri.ts");
/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../logger */ "./src/logger.ts");
/* harmony import */ var _quickpicks__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../quickpicks */ "./src/quickpicks.ts");
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../system */ "./src/system.ts");
/* harmony import */ var _views_nodes__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../views/nodes */ "./src/views/nodes.ts");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./common */ "./src/commands/common.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};












let OpenFileOnRemoteCommand = class extends _common__WEBPACK_IMPORTED_MODULE_11__.ActiveEditorCommand {
  constructor() {
    super([
      _common__WEBPACK_IMPORTED_MODULE_11__.Commands.OpenFileOnRemote,
      _common__WEBPACK_IMPORTED_MODULE_11__.Commands.Deprecated_OpenFileInRemote,
      _common__WEBPACK_IMPORTED_MODULE_11__.Commands.CopyRemoteFileUrl,
      _common__WEBPACK_IMPORTED_MODULE_11__.Commands.CopyRemoteFileUrlWithoutRange,
      _common__WEBPACK_IMPORTED_MODULE_11__.Commands.OpenFileOnRemoteFrom,
      _common__WEBPACK_IMPORTED_MODULE_11__.Commands.CopyRemoteFileUrlFrom
    ]);
  }
  async preExecute(context, args) {
    var _a, _b;
    let uri = context.uri;
    if (context.command === _common__WEBPACK_IMPORTED_MODULE_11__.Commands.CopyRemoteFileUrlWithoutRange) {
      args = { ...args, range: false };
    }
    if ((0,_common__WEBPACK_IMPORTED_MODULE_11__.isCommandContextViewNodeHasCommit)(context)) {
      args = { ...args, range: false };
      if (context.command === _common__WEBPACK_IMPORTED_MODULE_11__.Commands.CopyRemoteFileUrl || context.command === _common__WEBPACK_IMPORTED_MODULE_11__.Commands.CopyRemoteFileUrlWithoutRange || context.command === _common__WEBPACK_IMPORTED_MODULE_11__.Commands.CopyRemoteFileUrlFrom) {
        args.sha = context.node instanceof _views_nodes__WEBPACK_IMPORTED_MODULE_10__.StatusFileNode ? void 0 : context.node.commit.sha;
      } else if ((0,_common__WEBPACK_IMPORTED_MODULE_11__.isCommandContextViewNodeHasBranch)(context)) {
        args.branchOrTag = (_a = context.node.branch) == null ? void 0 : _a.name;
      }
      uri = context.node.uri;
    } else if (context.type === "viewItem") {
      args = { ...args, range: false };
      uri = (_b = context.node.uri) != null ? _b : context.uri;
    }
    if (context.command === _common__WEBPACK_IMPORTED_MODULE_11__.Commands.CopyRemoteFileUrl || context.command === _common__WEBPACK_IMPORTED_MODULE_11__.Commands.CopyRemoteFileUrlWithoutRange || context.command === _common__WEBPACK_IMPORTED_MODULE_11__.Commands.CopyRemoteFileUrlFrom) {
      args = { ...args, clipboard: true };
      if (args.sha == null) {
        const uri2 = (0,_common__WEBPACK_IMPORTED_MODULE_11__.getCommandUri)(context.uri, context.editor);
        if (uri2 != null) {
          const gitUri = await _git_gitUri__WEBPACK_IMPORTED_MODULE_6__.GitUri.fromUri(uri2);
          if (gitUri.repoPath) {
            if (gitUri.sha == null) {
              const commit = await _container__WEBPACK_IMPORTED_MODULE_4__.Container.git.getCommitForFile(gitUri.repoPath, gitUri.fsPath, {
                firstIfNotFound: true
              });
              if (commit != null) {
                args.sha = commit.sha;
              }
            } else {
              args.sha = gitUri.sha;
            }
          }
        }
      }
    }
    if (context.command === _common__WEBPACK_IMPORTED_MODULE_11__.Commands.OpenFileOnRemoteFrom || context.command === _common__WEBPACK_IMPORTED_MODULE_11__.Commands.CopyRemoteFileUrlFrom) {
      args = { ...args, pickBranchOrTag: true, range: false };
    }
    return this.execute(context.editor, uri, args);
  }
  async execute(editor, uri, args) {
    var _a, _b;
    uri = (0,_common__WEBPACK_IMPORTED_MODULE_11__.getCommandUri)(uri, editor);
    if (uri == null)
      return;
    const gitUri = await _git_gitUri__WEBPACK_IMPORTED_MODULE_6__.GitUri.fromUri(uri);
    if (!gitUri.repoPath)
      return;
    args = { range: true, ...args };
    try {
      let remotes = await _container__WEBPACK_IMPORTED_MODULE_4__.Container.git.getRemotes(gitUri.repoPath);
      const range = args.range && editor != null && _comparers__WEBPACK_IMPORTED_MODULE_1__.UriComparer.equals(editor.document.uri, uri) ? new vscode__WEBPACK_IMPORTED_MODULE_0__.Range(editor.selection.start.with({ line: editor.selection.start.line + 1 }), editor.selection.end.with({
        line: editor.selection.end.line + (editor.selection.end.character === 0 ? 0 : 1)
      })) : void 0;
      let sha = (_a = args.sha) != null ? _a : gitUri.sha;
      if (args.branchOrTag == null && sha != null && !_git_git__WEBPACK_IMPORTED_MODULE_5__.GitRevision.isSha(sha) && remotes.length !== 0) {
        const [remoteName, branchName] = _system__WEBPACK_IMPORTED_MODULE_9__.Strings.splitSingle(sha, "/");
        if (branchName != null) {
          const remote = remotes.find((r) => r.name === remoteName);
          if (remote != null) {
            args.branchOrTag = branchName;
            sha = void 0;
            remotes = [remote];
          }
        }
      }
      if (args.sha == null && args.branchOrTag == null || args.pickBranchOrTag) {
        let branch;
        if (!args.pickBranchOrTag) {
          branch = await _container__WEBPACK_IMPORTED_MODULE_4__.Container.git.getBranch(gitUri.repoPath);
        }
        if ((branch == null ? void 0 : branch.upstream) == null) {
          const pick = await _quickpicks__WEBPACK_IMPORTED_MODULE_8__.ReferencePicker.show(gitUri.repoPath, args.clipboard ? `Copy Remote File Url From${_system__WEBPACK_IMPORTED_MODULE_9__.Strings.pad(_constants__WEBPACK_IMPORTED_MODULE_3__.GlyphChars.Dot, 2, 2)}${gitUri.relativePath}` : `Open File on Remote From${_system__WEBPACK_IMPORTED_MODULE_9__.Strings.pad(_constants__WEBPACK_IMPORTED_MODULE_3__.GlyphChars.Dot, 2, 2)}${gitUri.relativePath}`, `Choose a branch or tag to ${args.clipboard ? "copy" : "open"} the file revision from`, {
            allowEnteringRefs: true,
            autoPick: true,
            filter: { branches: (b) => b.remote || b.upstream != null },
            picked: args.branchOrTag,
            sort: {
              branches: { current: true, orderBy: _configuration__WEBPACK_IMPORTED_MODULE_2__.BranchSorting.DateDesc },
              tags: { orderBy: _configuration__WEBPACK_IMPORTED_MODULE_2__.TagSorting.DateDesc }
            }
          });
          if (pick == null)
            return;
          if (pick.refType === "branch") {
            if (pick.remote) {
              args.branchOrTag = _git_git__WEBPACK_IMPORTED_MODULE_5__.GitBranch.getNameWithoutRemote(pick.name);
              const remoteName = _git_git__WEBPACK_IMPORTED_MODULE_5__.GitBranch.getRemote(pick.name);
              const remote = remotes.find((r) => r.name === remoteName);
              if (remote != null) {
                remotes = [remote];
              }
            } else {
              args.branchOrTag = pick.name;
            }
            sha = void 0;
          } else if (pick.refType === "tag") {
            args.branchOrTag = pick.ref;
            sha = void 0;
          } else {
            args.branchOrTag = void 0;
            sha = pick.ref;
          }
        } else {
          args.branchOrTag = branch.name;
        }
      }
      void await (0,_common__WEBPACK_IMPORTED_MODULE_11__.executeCommand)(_common__WEBPACK_IMPORTED_MODULE_11__.Commands.OpenOnRemote, {
        resource: {
          type: sha == null ? _git_git__WEBPACK_IMPORTED_MODULE_5__.RemoteResourceType.File : _git_git__WEBPACK_IMPORTED_MODULE_5__.RemoteResourceType.Revision,
          branchOrTag: (_b = args.branchOrTag) != null ? _b : "HEAD",
          fileName: gitUri.relativePath,
          range,
          sha: sha != null ? sha : void 0
        },
        repoPath: gitUri.repoPath,
        remotes,
        clipboard: args.clipboard
      });
    } catch (ex) {
      _logger__WEBPACK_IMPORTED_MODULE_7__.Logger.error(ex, "OpenFileOnRemoteCommand");
      void vscode__WEBPACK_IMPORTED_MODULE_0__.window.showErrorMessage("Unable to open file on remote provider. See output channel for more details");
    }
  }
};
OpenFileOnRemoteCommand = __decorateClass([
  (0,_common__WEBPACK_IMPORTED_MODULE_11__.command)()
], OpenFileOnRemoteCommand);


/***/ }),

/***/ "./src/commands/openOnRemote.ts":
/*!**************************************!*\
  !*** ./src/commands/openOnRemote.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "OpenOnRemoteCommand": () => (/* binding */ OpenOnRemoteCommand)
/* harmony export */ });
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../constants */ "./src/constants.ts");
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../container */ "./src/container.ts");
/* harmony import */ var _git_git__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../git/git */ "./src/git/git.ts");
/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../logger */ "./src/logger.ts");
/* harmony import */ var _messages__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../messages */ "./src/messages.ts");
/* harmony import */ var _quickpicks__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../quickpicks */ "./src/quickpicks.ts");
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../system */ "./src/system.ts");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./common */ "./src/commands/common.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};








let OpenOnRemoteCommand = class extends _common__WEBPACK_IMPORTED_MODULE_7__.Command {
  constructor() {
    super([_common__WEBPACK_IMPORTED_MODULE_7__.Commands.OpenOnRemote, _common__WEBPACK_IMPORTED_MODULE_7__.Commands.Deprecated_OpenInRemote]);
  }
  async execute(args) {
    var _a, _b;
    if ((args == null ? void 0 : args.resource) == null)
      return;
    let remotes = "remotes" in args ? args.remotes : await _container__WEBPACK_IMPORTED_MODULE_1__.Container.git.getRemotes(args.repoPath);
    if (args.remote != null) {
      const filtered = remotes.filter((r) => r.name === args.remote);
      if (remotes.length > 0) {
        remotes = filtered;
      }
    }
    try {
      if (args.resource.type === _git_git__WEBPACK_IMPORTED_MODULE_2__.RemoteResourceType.Branch) {
        const [remoteName, branchName] = _system__WEBPACK_IMPORTED_MODULE_6__.Strings.splitSingle(args.resource.branch, "/");
        if (branchName != null) {
          const remote = remotes.find((r) => r.name === remoteName);
          if (remote != null) {
            args.resource.branch = branchName;
            remotes = [remote];
          }
        }
      } else if (args.resource.type === _git_git__WEBPACK_IMPORTED_MODULE_2__.RemoteResourceType.Revision) {
        const { commit, fileName } = args.resource;
        if (commit != null) {
          const file = commit == null ? void 0 : commit.files.find((f) => f.fileName === fileName);
          if ((file == null ? void 0 : file.status) === "D") {
            args.resource.sha = await _container__WEBPACK_IMPORTED_MODULE_1__.Container.git.resolveReference(commit.repoPath, `${commit.sha}^`, fileName);
          } else {
            args.resource.sha = commit.sha;
          }
        }
      }
      const providers = _git_git__WEBPACK_IMPORTED_MODULE_2__.GitRemote.getHighlanderProviders(remotes);
      const provider = (providers == null ? void 0 : providers.length) ? providers[0].name : "Remote";
      const options = {
        autoPick: "default",
        clipboard: args.clipboard,
        setDefault: true
      };
      let title;
      let placeHolder = `Choose which remote to ${args.clipboard ? "copy the url for" : "open on"}`;
      switch (args.resource.type) {
        case _git_git__WEBPACK_IMPORTED_MODULE_2__.RemoteResourceType.Branch:
          title = `${args.clipboard ? `Copy ${provider} Branch Url` : `Open Branch on ${provider}`}${_system__WEBPACK_IMPORTED_MODULE_6__.Strings.pad(_constants__WEBPACK_IMPORTED_MODULE_0__.GlyphChars.Dot, 2, 2)}${args.resource.branch}`;
          break;
        case _git_git__WEBPACK_IMPORTED_MODULE_2__.RemoteResourceType.Branches:
          title = `${args.clipboard ? `Copy ${provider} Branches Url` : `Open Branches on ${provider}`}`;
          break;
        case _git_git__WEBPACK_IMPORTED_MODULE_2__.RemoteResourceType.Commit:
          title = `${args.clipboard ? `Copy ${provider} Commit Url` : `Open Commit on ${provider}`}${_system__WEBPACK_IMPORTED_MODULE_6__.Strings.pad(_constants__WEBPACK_IMPORTED_MODULE_0__.GlyphChars.Dot, 2, 2)}${_git_git__WEBPACK_IMPORTED_MODULE_2__.GitRevision.shorten(args.resource.sha)}`;
          break;
        case _git_git__WEBPACK_IMPORTED_MODULE_2__.RemoteResourceType.Comparison:
          title = `${args.clipboard ? `Copy ${provider} Comparison Url` : `Open Comparison on ${provider}`}${_system__WEBPACK_IMPORTED_MODULE_6__.Strings.pad(_constants__WEBPACK_IMPORTED_MODULE_0__.GlyphChars.Dot, 2, 2)}${_git_git__WEBPACK_IMPORTED_MODULE_2__.GitRevision.createRange(args.resource.base, args.resource.compare, (_a = args.resource.notation) != null ? _a : "...")}`;
          break;
        case _git_git__WEBPACK_IMPORTED_MODULE_2__.RemoteResourceType.CreatePullRequest:
          options.autoPick = true;
          options.setDefault = false;
          title = `${args.clipboard ? `Copy ${provider} Create Pull Request Url` : `Create Pull Request on ${provider}`}${_system__WEBPACK_IMPORTED_MODULE_6__.Strings.pad(_constants__WEBPACK_IMPORTED_MODULE_0__.GlyphChars.Dot, 2, 2)}${((_b = args.resource.base) == null ? void 0 : _b.branch) ? _git_git__WEBPACK_IMPORTED_MODULE_2__.GitRevision.createRange(args.resource.base.branch, args.resource.compare.branch, "...") : args.resource.compare.branch}`;
          placeHolder = `Choose which remote to ${args.clipboard ? "copy the create pull request url for" : "create the pull request on"}`;
          break;
        case _git_git__WEBPACK_IMPORTED_MODULE_2__.RemoteResourceType.File:
          title = `${args.clipboard ? `Copy ${provider} File Url` : `Open File on ${provider}`}${_system__WEBPACK_IMPORTED_MODULE_6__.Strings.pad(_constants__WEBPACK_IMPORTED_MODULE_0__.GlyphChars.Dot, 2, 2)}${args.resource.fileName}`;
          break;
        case _git_git__WEBPACK_IMPORTED_MODULE_2__.RemoteResourceType.Repo:
          title = `${args.clipboard ? `Copy ${provider} Repository Url` : `Open Repository on ${provider}`}`;
          break;
        case _git_git__WEBPACK_IMPORTED_MODULE_2__.RemoteResourceType.Revision: {
          title = `${args.clipboard ? `Copy ${provider} File Url` : `Open File on ${provider}`}${_system__WEBPACK_IMPORTED_MODULE_6__.Strings.pad(_constants__WEBPACK_IMPORTED_MODULE_0__.GlyphChars.Dot, 2, 2)}${_git_git__WEBPACK_IMPORTED_MODULE_2__.GitRevision.shorten(args.resource.sha)}${_system__WEBPACK_IMPORTED_MODULE_6__.Strings.pad(_constants__WEBPACK_IMPORTED_MODULE_0__.GlyphChars.Dot, 1, 1)}${args.resource.fileName}`;
          break;
        }
      }
      const pick = await _quickpicks__WEBPACK_IMPORTED_MODULE_5__.RemoteProviderPicker.show(title, placeHolder, args.resource, remotes, options);
      if (pick instanceof _quickpicks__WEBPACK_IMPORTED_MODULE_5__.SetADefaultRemoteCommandQuickPickItem) {
        const remote = await pick.execute();
        if (remote != null) {
          void await new _quickpicks__WEBPACK_IMPORTED_MODULE_5__.CopyOrOpenRemoteCommandQuickPickItem(remote, args.resource, args.clipboard).execute();
        }
        return;
      }
      void await (pick == null ? void 0 : pick.execute());
    } catch (ex) {
      _logger__WEBPACK_IMPORTED_MODULE_3__.Logger.error(ex, "OpenOnRemoteCommand");
      void _messages__WEBPACK_IMPORTED_MODULE_4__.Messages.showGenericErrorMessage("Unable to open in remote provider");
    }
  }
};
OpenOnRemoteCommand = __decorateClass([
  (0,_common__WEBPACK_IMPORTED_MODULE_7__.command)()
], OpenOnRemoteCommand);


/***/ }),

/***/ "./src/commands/openPullRequestOnRemote.ts":
/*!*************************************************!*\
  !*** ./src/commands/openPullRequestOnRemote.ts ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "OpenPullRequestOnRemoteCommand": () => (/* binding */ OpenPullRequestOnRemoteCommand)
/* harmony export */ });
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../container */ "./src/container.ts");
/* harmony import */ var _views_nodes__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../views/nodes */ "./src/views/nodes.ts");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./common */ "./src/commands/common.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};




let OpenPullRequestOnRemoteCommand = class extends _common__WEBPACK_IMPORTED_MODULE_3__.Command {
  constructor() {
    super([_common__WEBPACK_IMPORTED_MODULE_3__.Commands.OpenPullRequestOnRemote, _common__WEBPACK_IMPORTED_MODULE_3__.Commands.CopyRemotePullRequestUrl]);
  }
  preExecute(context, args) {
    if (context.type === "viewItem" && context.node instanceof _views_nodes__WEBPACK_IMPORTED_MODULE_2__.PullRequestNode) {
      args = {
        ...args,
        pr: { url: context.node.pullRequest.url },
        clipboard: context.command === _common__WEBPACK_IMPORTED_MODULE_3__.Commands.CopyRemotePullRequestUrl
      };
    }
    return this.execute(args);
  }
  async execute(args) {
    if ((args == null ? void 0 : args.pr) == null) {
      if ((args == null ? void 0 : args.repoPath) == null || (args == null ? void 0 : args.ref) == null)
        return;
      const remote = await _container__WEBPACK_IMPORTED_MODULE_1__.Container.git.getRichRemoteProvider(args.repoPath);
      if ((remote == null ? void 0 : remote.provider) == null)
        return;
      const pr = await _container__WEBPACK_IMPORTED_MODULE_1__.Container.git.getPullRequestForCommit(args.ref, remote.provider);
      if (pr == null)
        return;
      args = { ...args };
      args.pr = pr;
    }
    if (args.clipboard) {
      void await vscode__WEBPACK_IMPORTED_MODULE_0__.env.clipboard.writeText(args.pr.url);
    } else {
      void vscode__WEBPACK_IMPORTED_MODULE_0__.env.openExternal(vscode__WEBPACK_IMPORTED_MODULE_0__.Uri.parse(args.pr.url));
    }
  }
};
OpenPullRequestOnRemoteCommand = __decorateClass([
  (0,_common__WEBPACK_IMPORTED_MODULE_3__.command)()
], OpenPullRequestOnRemoteCommand);


/***/ }),

/***/ "./src/commands/openRepoOnRemote.ts":
/*!******************************************!*\
  !*** ./src/commands/openRepoOnRemote.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "OpenRepoOnRemoteCommand": () => (/* binding */ OpenRepoOnRemoteCommand)
/* harmony export */ });
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _git_git__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../git/git */ "./src/git/git.ts");
/* harmony import */ var _git_gitUri__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../git/gitUri */ "./src/git/gitUri.ts");
/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../logger */ "./src/logger.ts");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./common */ "./src/commands/common.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};





let OpenRepoOnRemoteCommand = class extends _common__WEBPACK_IMPORTED_MODULE_4__.ActiveEditorCommand {
  constructor() {
    super([_common__WEBPACK_IMPORTED_MODULE_4__.Commands.OpenRepoOnRemote, _common__WEBPACK_IMPORTED_MODULE_4__.Commands.Deprecated_OpenRepoInRemote, _common__WEBPACK_IMPORTED_MODULE_4__.Commands.CopyRemoteRepositoryUrl]);
  }
  preExecute(context, args) {
    if ((0,_common__WEBPACK_IMPORTED_MODULE_4__.isCommandContextViewNodeHasRemote)(context)) {
      args = { ...args, remote: context.node.remote.name };
    }
    if (context.command === _common__WEBPACK_IMPORTED_MODULE_4__.Commands.CopyRemoteRepositoryUrl) {
      args = { ...args, clipboard: true };
    }
    return this.execute(context.editor, context.uri, args);
  }
  async execute(editor, uri, args) {
    uri = (0,_common__WEBPACK_IMPORTED_MODULE_4__.getCommandUri)(uri, editor);
    const gitUri = uri != null ? await _git_gitUri__WEBPACK_IMPORTED_MODULE_2__.GitUri.fromUri(uri) : void 0;
    const repoPath = await (0,_common__WEBPACK_IMPORTED_MODULE_4__.getRepoPathOrActiveOrPrompt)(gitUri, editor, (args == null ? void 0 : args.clipboard) ? "Choose which repository to copy the url from" : "Choose which repository to open on remote");
    if (!repoPath)
      return;
    try {
      void await (0,_common__WEBPACK_IMPORTED_MODULE_4__.executeCommand)(_common__WEBPACK_IMPORTED_MODULE_4__.Commands.OpenOnRemote, {
        resource: {
          type: _git_git__WEBPACK_IMPORTED_MODULE_1__.RemoteResourceType.Repo
        },
        repoPath,
        remote: args == null ? void 0 : args.remote,
        clipboard: args == null ? void 0 : args.clipboard
      });
    } catch (ex) {
      _logger__WEBPACK_IMPORTED_MODULE_3__.Logger.error(ex, "OpenRepoOnRemoteCommand");
      void vscode__WEBPACK_IMPORTED_MODULE_0__.window.showErrorMessage("Unable to open repository on remote provider. See output channel for more details");
    }
  }
};
OpenRepoOnRemoteCommand = __decorateClass([
  (0,_common__WEBPACK_IMPORTED_MODULE_4__.command)()
], OpenRepoOnRemoteCommand);


/***/ }),

/***/ "./src/commands/openRevisionFile.ts":
/*!******************************************!*\
  !*** ./src/commands/openRevisionFile.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "OpenRevisionFileCommand": () => (/* binding */ OpenRevisionFileCommand)
/* harmony export */ });
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../container */ "./src/container.ts");
/* harmony import */ var _git_gitUri__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../git/gitUri */ "./src/git/gitUri.ts");
/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../logger */ "./src/logger.ts");
/* harmony import */ var _messages__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../messages */ "./src/messages.ts");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./common */ "./src/commands/common.ts");
/* harmony import */ var _gitCommands__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./gitCommands */ "./src/commands/gitCommands.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};






let OpenRevisionFileCommand = class extends _common__WEBPACK_IMPORTED_MODULE_4__.ActiveEditorCommand {
  constructor() {
    super([_common__WEBPACK_IMPORTED_MODULE_4__.Commands.OpenRevisionFile, _common__WEBPACK_IMPORTED_MODULE_4__.Commands.OpenRevisionFileInDiffLeft, _common__WEBPACK_IMPORTED_MODULE_4__.Commands.OpenRevisionFileInDiffRight]);
  }
  async execute(editor, uri, args) {
    var _a;
    uri = (0,_common__WEBPACK_IMPORTED_MODULE_4__.getCommandUri)(uri, editor);
    if (uri == null)
      return;
    const gitUri = await _git_gitUri__WEBPACK_IMPORTED_MODULE_1__.GitUri.fromUri(uri);
    args = { ...args };
    if (args.line == null) {
      args.line = (_a = editor == null ? void 0 : editor.selection.active.line) != null ? _a : 0;
    }
    try {
      if (args.revisionUri == null) {
        if (gitUri == null ? void 0 : gitUri.sha) {
          const commit = await _container__WEBPACK_IMPORTED_MODULE_0__.Container.git.getCommit(gitUri.repoPath, gitUri.sha);
          args.revisionUri = commit != null && commit.status === "D" ? _git_gitUri__WEBPACK_IMPORTED_MODULE_1__.GitUri.toRevisionUri(commit.previousSha, commit.previousUri.fsPath, commit.repoPath) : _git_gitUri__WEBPACK_IMPORTED_MODULE_1__.GitUri.toRevisionUri(gitUri);
        } else {
          args.revisionUri = _git_gitUri__WEBPACK_IMPORTED_MODULE_1__.GitUri.toRevisionUri(gitUri);
        }
      }
      void await _gitCommands__WEBPACK_IMPORTED_MODULE_5__.GitActions.Commit.openFileAtRevision(args.revisionUri, {
        annotationType: args.annotationType,
        line: args.line,
        ...args.showOptions
      });
    } catch (ex) {
      _logger__WEBPACK_IMPORTED_MODULE_2__.Logger.error(ex, "OpenRevisionFileCommand");
      void _messages__WEBPACK_IMPORTED_MODULE_3__.Messages.showGenericErrorMessage("Unable to open file revision");
    }
  }
};
OpenRevisionFileCommand = __decorateClass([
  (0,_common__WEBPACK_IMPORTED_MODULE_4__.command)()
], OpenRevisionFileCommand);


/***/ }),

/***/ "./src/commands/openWorkingFile.ts":
/*!*****************************************!*\
  !*** ./src/commands/openWorkingFile.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "OpenWorkingFileCommand": () => (/* binding */ OpenWorkingFileCommand)
/* harmony export */ });
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../container */ "./src/container.ts");
/* harmony import */ var _git_gitUri__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../git/gitUri */ "./src/git/gitUri.ts");
/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../logger */ "./src/logger.ts");
/* harmony import */ var _messages__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../messages */ "./src/messages.ts");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./common */ "./src/commands/common.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};






let OpenWorkingFileCommand = class extends _common__WEBPACK_IMPORTED_MODULE_5__.ActiveEditorCommand {
  constructor() {
    super([_common__WEBPACK_IMPORTED_MODULE_5__.Commands.OpenWorkingFile, _common__WEBPACK_IMPORTED_MODULE_5__.Commands.OpenWorkingFileInDiffLeft, _common__WEBPACK_IMPORTED_MODULE_5__.Commands.OpenWorkingFileInDiffRight]);
  }
  async execute(editor, uri, args) {
    args = { ...args };
    if (args.line == null) {
      args.line = editor == null ? void 0 : editor.selection.active.line;
    }
    try {
      if (args.uri == null) {
        uri = (0,_common__WEBPACK_IMPORTED_MODULE_5__.getCommandUri)(uri, editor);
        if (uri == null)
          return;
      } else {
        uri = args.uri;
      }
      args.uri = await _git_gitUri__WEBPACK_IMPORTED_MODULE_2__.GitUri.fromUri(uri);
      if (_git_gitUri__WEBPACK_IMPORTED_MODULE_2__.GitUri.is(args.uri) && args.uri.sha) {
        const workingUri = await _container__WEBPACK_IMPORTED_MODULE_1__.Container.git.getWorkingUri(args.uri.repoPath, args.uri);
        if (workingUri === void 0) {
          void vscode__WEBPACK_IMPORTED_MODULE_0__.window.showWarningMessage("Unable to open working file. File could not be found in the working tree");
          return;
        }
        args.uri = new _git_gitUri__WEBPACK_IMPORTED_MODULE_2__.GitUri(workingUri, args.uri.repoPath);
      }
      if (args.line !== void 0 && args.line !== 0) {
        if (args.showOptions === void 0) {
          args.showOptions = {};
        }
        args.showOptions.selection = new vscode__WEBPACK_IMPORTED_MODULE_0__.Range(args.line, 0, args.line, 0);
      }
      const e = await (0,_common__WEBPACK_IMPORTED_MODULE_5__.findOrOpenEditor)(args.uri, { ...args.showOptions, throwOnError: true });
      if (args.annotationType === void 0)
        return;
      void await _container__WEBPACK_IMPORTED_MODULE_1__.Container.fileAnnotations.show(e, args.annotationType, { selection: { line: args.line } });
    } catch (ex) {
      _logger__WEBPACK_IMPORTED_MODULE_3__.Logger.error(ex, "OpenWorkingFileCommand");
      void _messages__WEBPACK_IMPORTED_MODULE_4__.Messages.showGenericErrorMessage("Unable to open working file");
    }
  }
};
OpenWorkingFileCommand = __decorateClass([
  (0,_common__WEBPACK_IMPORTED_MODULE_5__.command)()
], OpenWorkingFileCommand);


/***/ }),

/***/ "./src/commands/quickCommand.buttons.ts":
/*!**********************************************!*\
  !*** ./src/commands/quickCommand.buttons.ts ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ToggleQuickInputButton": () => (/* binding */ ToggleQuickInputButton),
/* harmony export */   "SelectableQuickInputButton": () => (/* binding */ SelectableQuickInputButton),
/* harmony export */   "QuickCommandButtons": () => (/* binding */ QuickCommandButtons)
/* harmony export */ });
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../container */ "./src/container.ts");



class ToggleQuickInputButton {
  constructor(state, _on = false) {
    this.state = state;
    this._on = _on;
  }
  get iconPath() {
    const icon = this.getToggledState().icon;
    return typeof icon === "string" ? {
      dark: vscode__WEBPACK_IMPORTED_MODULE_0__.Uri.file(_container__WEBPACK_IMPORTED_MODULE_1__.Container.context.asAbsolutePath(`images/dark/${icon}.svg`)),
      light: vscode__WEBPACK_IMPORTED_MODULE_0__.Uri.file(_container__WEBPACK_IMPORTED_MODULE_1__.Container.context.asAbsolutePath(`images/light/${icon}.svg`))
    } : icon;
  }
  get tooltip() {
    return this.getToggledState().tooltip;
  }
  get on() {
    return this._on;
  }
  set on(value) {
    this._on = value;
  }
  getState() {
    return typeof this.state === "function" ? this.state() : this.state;
  }
  getToggledState() {
    return this.on ? this.getState().on : this.getState().off;
  }
}
class SelectableQuickInputButton extends ToggleQuickInputButton {
  constructor(tooltip, icon, selected = false) {
    super({ off: { tooltip, icon: icon.off }, on: { tooltip, icon: icon.on } }, selected);
  }
}
var QuickCommandButtons;
(function(QuickCommandButtons2) {
  QuickCommandButtons2.Fetch = {
    iconPath: new vscode__WEBPACK_IMPORTED_MODULE_0__.ThemeIcon("sync"),
    tooltip: "Fetch"
  };
  QuickCommandButtons2.LoadMore = {
    iconPath: new vscode__WEBPACK_IMPORTED_MODULE_0__.ThemeIcon("refresh"),
    tooltip: "Load More"
  };
  QuickCommandButtons2.MatchCaseToggle = class extends SelectableQuickInputButton {
    constructor(on = false) {
      super("Match Case", { off: "icon-match-case", on: "icon-match-case-selected" }, on);
    }
  };
  QuickCommandButtons2.MatchAllToggle = class extends SelectableQuickInputButton {
    constructor(on = false) {
      super("Match All", { off: "icon-match-all", on: "icon-match-all-selected" }, on);
    }
  };
  QuickCommandButtons2.MatchRegexToggle = class extends SelectableQuickInputButton {
    constructor(on = false) {
      super("Match using Regular Expressions", { off: "icon-match-regex", on: "icon-match-regex-selected" }, on);
    }
  };
  QuickCommandButtons2.PickCommitToggle = class extends ToggleQuickInputButton {
    constructor(on = false, context, onDidClick) {
      super(() => ({
        on: { tooltip: "Choose a Specific Commit", icon: new vscode__WEBPACK_IMPORTED_MODULE_0__.ThemeIcon("git-commit") },
        off: {
          tooltip: `Choose a Branch${context.showTags ? " or Tag" : ""}`,
          icon: new vscode__WEBPACK_IMPORTED_MODULE_0__.ThemeIcon("git-branch")
        }
      }), on);
      this.onDidClick = onDidClick;
    }
  };
  QuickCommandButtons2.RevealInSideBar = {
    iconPath: new vscode__WEBPACK_IMPORTED_MODULE_0__.ThemeIcon("eye"),
    tooltip: "Reveal in Side Bar"
  };
  QuickCommandButtons2.SearchInSideBar = {
    iconPath: new vscode__WEBPACK_IMPORTED_MODULE_0__.ThemeIcon("search"),
    tooltip: "Search in Side Bar"
  };
  QuickCommandButtons2.ShowResultsInSideBar = {
    iconPath: new vscode__WEBPACK_IMPORTED_MODULE_0__.ThemeIcon("link-external"),
    tooltip: "Show Results in Side Bar"
  };
  QuickCommandButtons2.ShowTagsToggle = class extends SelectableQuickInputButton {
    constructor(on = false) {
      super("Show Tags", { off: new vscode__WEBPACK_IMPORTED_MODULE_0__.ThemeIcon("tag"), on: "icon-tag-selected" }, on);
    }
  };
  QuickCommandButtons2.WillConfirmForced = {
    iconPath: new vscode__WEBPACK_IMPORTED_MODULE_0__.ThemeIcon("check"),
    tooltip: "Will always confirm"
  };
  QuickCommandButtons2.WillConfirmToggle = class extends ToggleQuickInputButton {
    constructor(on = false, onDidClick) {
      super(() => ({
        on: {
          tooltip: "Will confirm",
          icon: {
            dark: vscode__WEBPACK_IMPORTED_MODULE_0__.Uri.file(_container__WEBPACK_IMPORTED_MODULE_1__.Container.context.asAbsolutePath("images/dark/icon-check.svg")),
            light: vscode__WEBPACK_IMPORTED_MODULE_0__.Uri.file(_container__WEBPACK_IMPORTED_MODULE_1__.Container.context.asAbsolutePath("images/light/icon-check.svg"))
          }
        },
        off: {
          tooltip: "Skips confirm",
          icon: {
            dark: vscode__WEBPACK_IMPORTED_MODULE_0__.Uri.file(_container__WEBPACK_IMPORTED_MODULE_1__.Container.context.asAbsolutePath("images/dark/icon-no-check.svg")),
            light: vscode__WEBPACK_IMPORTED_MODULE_0__.Uri.file(_container__WEBPACK_IMPORTED_MODULE_1__.Container.context.asAbsolutePath("images/light/icon-no-check.svg"))
          }
        }
      }), on);
      this.onDidClick = onDidClick;
    }
  };
})(QuickCommandButtons || (QuickCommandButtons = {}));


/***/ }),

/***/ "./src/commands/quickCommand.steps.ts":
/*!********************************************!*\
  !*** ./src/commands/quickCommand.steps.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "appendReposToTitle": () => (/* binding */ appendReposToTitle),
/* harmony export */   "getBranches": () => (/* binding */ getBranches),
/* harmony export */   "getTags": () => (/* binding */ getTags),
/* harmony export */   "getBranchesAndOrTags": () => (/* binding */ getBranchesAndOrTags),
/* harmony export */   "getValidateGitReferenceFn": () => (/* binding */ getValidateGitReferenceFn),
/* harmony export */   "inputBranchNameStep": () => (/* binding */ inputBranchNameStep),
/* harmony export */   "inputTagNameStep": () => (/* binding */ inputTagNameStep),
/* harmony export */   "pickBranchStep": () => (/* binding */ pickBranchStep),
/* harmony export */   "pickBranchesStep": () => (/* binding */ pickBranchesStep),
/* harmony export */   "pickBranchOrTagStep": () => (/* binding */ pickBranchOrTagStep),
/* harmony export */   "pickBranchOrTagStepMultiRepo": () => (/* binding */ pickBranchOrTagStepMultiRepo),
/* harmony export */   "pickCommitStep": () => (/* binding */ pickCommitStep),
/* harmony export */   "pickCommitsStep": () => (/* binding */ pickCommitsStep),
/* harmony export */   "pickContributorsStep": () => (/* binding */ pickContributorsStep),
/* harmony export */   "pickRepositoryStep": () => (/* binding */ pickRepositoryStep),
/* harmony export */   "pickRepositoriesStep": () => (/* binding */ pickRepositoriesStep),
/* harmony export */   "pickStashStep": () => (/* binding */ pickStashStep),
/* harmony export */   "pickTagsStep": () => (/* binding */ pickTagsStep),
/* harmony export */   "showCommitOrStashStep": () => (/* binding */ showCommitOrStashStep),
/* harmony export */   "showCommitOrStashFilesStep": () => (/* binding */ showCommitOrStashFilesStep),
/* harmony export */   "showCommitOrStashFileStep": () => (/* binding */ showCommitOrStashFileStep),
/* harmony export */   "showRepositoryStatusStep": () => (/* binding */ showRepositoryStatusStep)
/* harmony export */ });
/* harmony import */ var _configuration__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../configuration */ "./src/configuration.ts");
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../constants */ "./src/constants.ts");
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../container */ "./src/container.ts");
/* harmony import */ var _git_git__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../git/git */ "./src/git/git.ts");
/* harmony import */ var _git_gitService__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../git/gitService */ "./src/git/gitService.ts");
/* harmony import */ var _git_gitUri__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../git/gitUri */ "./src/git/gitUri.ts");
/* harmony import */ var _quickpicks__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../quickpicks */ "./src/quickpicks.ts");
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../system */ "./src/system.ts");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./common */ "./src/commands/common.ts");
/* harmony import */ var _gitCommands_actions__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./gitCommands.actions */ "./src/commands/gitCommands.actions.ts");
/* harmony import */ var _quickCommand__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./quickCommand */ "./src/commands/quickCommand.ts");












function appendReposToTitle(title, state, context, additionalContext) {
  if (context.repos.length === 1) {
    return `${title}${_system__WEBPACK_IMPORTED_MODULE_7__.Strings.truncate(additionalContext != null ? additionalContext : "", _constants__WEBPACK_IMPORTED_MODULE_1__.quickPickTitleMaxChars - title.length)}`;
  }
  let repoContext;
  if (state.repo != null) {
    repoContext = `${additionalContext != null ? additionalContext : ""}${_system__WEBPACK_IMPORTED_MODULE_7__.Strings.pad(_constants__WEBPACK_IMPORTED_MODULE_1__.GlyphChars.Dot, 2, 2)}${state.repo.formattedName}`;
  } else if (state.repos.length === 1) {
    repoContext = `${additionalContext != null ? additionalContext : ""}${_system__WEBPACK_IMPORTED_MODULE_7__.Strings.pad(_constants__WEBPACK_IMPORTED_MODULE_1__.GlyphChars.Dot, 2, 2)}${state.repos[0].formattedName}`;
  } else {
    repoContext = `${_system__WEBPACK_IMPORTED_MODULE_7__.Strings.pad(_constants__WEBPACK_IMPORTED_MODULE_1__.GlyphChars.Dot, 2, 2)}${state.repos.length} repositories`;
  }
  return `${title}${_system__WEBPACK_IMPORTED_MODULE_7__.Strings.truncate(repoContext, _constants__WEBPACK_IMPORTED_MODULE_1__.quickPickTitleMaxChars - title.length)}`;
}
async function getBranches(repos, options = {}) {
  return getBranchesAndOrTags(repos, ["branches"], {
    filter: (options == null ? void 0 : options.filter) != null ? { branches: options.filter } : void 0,
    picked: options == null ? void 0 : options.picked,
    sort: (options == null ? void 0 : options.sort) != null ? { branches: options.sort } : true
  });
}
async function getTags(repos, options) {
  return getBranchesAndOrTags(repos, ["tags"], {
    filter: (options == null ? void 0 : options.filter) != null ? { tags: options.filter } : void 0,
    picked: options == null ? void 0 : options.picked,
    sort: (options == null ? void 0 : options.sort) != null ? { tags: options.sort } : true
  });
}
async function getBranchesAndOrTags(repos, include, {
  filter,
  picked,
  sort
} = {}) {
  let branches;
  let tags;
  let singleRepo = false;
  if (repos instanceof _git_git__WEBPACK_IMPORTED_MODULE_3__.Repository || repos.length === 1) {
    singleRepo = true;
    const repo = repos instanceof _git_git__WEBPACK_IMPORTED_MODULE_3__.Repository ? repos : repos[0];
    [branches, tags] = await Promise.all([
      include.includes("branches") ? repo.getBranches({
        filter: filter == null ? void 0 : filter.branches,
        sort: typeof sort === "boolean" ? sort : sort == null ? void 0 : sort.branches
      }) : void 0,
      include.includes("tags") ? repo.getTags({ filter: filter == null ? void 0 : filter.tags, sort: true }) : void 0
    ]);
  } else {
    const [branchesByRepo, tagsByRepo] = await Promise.all([
      include.includes("branches") ? Promise.all(repos.map((r) => r.getBranches({
        filter: filter == null ? void 0 : filter.branches,
        sort: typeof sort === "boolean" ? sort : sort == null ? void 0 : sort.branches
      }))) : void 0,
      include.includes("tags") ? Promise.all(repos.map((r) => r.getTags({ filter: filter == null ? void 0 : filter.tags, sort: typeof sort === "boolean" ? sort : sort == null ? void 0 : sort.tags }))) : void 0
    ]);
    if (include.includes("branches")) {
      branches = _git_git__WEBPACK_IMPORTED_MODULE_3__.GitBranch.sort(_system__WEBPACK_IMPORTED_MODULE_7__.Arrays.intersection(...branchesByRepo, (b1, b2) => b1.name === b2.name));
    }
    if (include.includes("tags")) {
      tags = _git_git__WEBPACK_IMPORTED_MODULE_3__.GitTag.sort(_system__WEBPACK_IMPORTED_MODULE_7__.Arrays.intersection(...tagsByRepo, (t1, t2) => t1.name === t2.name));
    }
  }
  if (include.includes("branches") && !include.includes("tags")) {
    return Promise.all(branches.map((b) => _quickpicks__WEBPACK_IMPORTED_MODULE_6__.BranchQuickPickItem.create(b, picked != null && (typeof picked === "string" ? b.ref === picked : picked.includes(b.ref)), {
      current: singleRepo ? "checkmark" : false,
      ref: singleRepo,
      status: singleRepo,
      type: "remote"
    })));
  }
  if (include.includes("tags") && !include.includes("branches")) {
    return Promise.all(tags.map((t) => _quickpicks__WEBPACK_IMPORTED_MODULE_6__.TagQuickPickItem.create(t, picked != null && (typeof picked === "string" ? t.ref === picked : picked.includes(t.ref)), {
      message: false,
      ref: singleRepo
    })));
  }
  return Promise.all([
    ...branches.filter((b) => !b.remote).map((b) => _quickpicks__WEBPACK_IMPORTED_MODULE_6__.BranchQuickPickItem.create(b, picked != null && (typeof picked === "string" ? b.ref === picked : picked.includes(b.ref)), {
      current: singleRepo ? "checkmark" : false,
      ref: singleRepo,
      status: singleRepo
    })),
    ...tags.map((t) => _quickpicks__WEBPACK_IMPORTED_MODULE_6__.TagQuickPickItem.create(t, picked != null && (typeof picked === "string" ? t.ref === picked : picked.includes(t.ref)), {
      message: false,
      ref: singleRepo,
      type: true
    })),
    ...branches.filter((b) => b.remote).map((b) => _quickpicks__WEBPACK_IMPORTED_MODULE_6__.BranchQuickPickItem.create(b, picked != null && (typeof picked === "string" ? b.ref === picked : picked.includes(b.ref)), {
      current: singleRepo ? "checkmark" : false,
      ref: singleRepo,
      status: singleRepo,
      type: "remote"
    }))
  ]);
}
function getValidateGitReferenceFn(repos, options) {
  return async (quickpick, value) => {
    let inRefMode = false;
    if (value.startsWith("#")) {
      inRefMode = true;
      value = value.substring(1);
    }
    if (Array.isArray(repos)) {
      if (repos.length !== 1)
        return false;
      repos = repos[0];
    }
    if (inRefMode && (options == null ? void 0 : options.ranges) && _git_git__WEBPACK_IMPORTED_MODULE_3__.GitRevision.isRange(value)) {
      quickpick.items = [
        _quickpicks__WEBPACK_IMPORTED_MODULE_6__.RefQuickPickItem.create(value, repos.path, true, { alwaysShow: true, ref: false, icon: false })
      ];
      return true;
    }
    if (!await _container__WEBPACK_IMPORTED_MODULE_2__.Container.git.validateReference(repos.path, value)) {
      if (inRefMode) {
        quickpick.items = [
          _quickpicks__WEBPACK_IMPORTED_MODULE_6__.DirectiveQuickPickItem.create(_quickpicks__WEBPACK_IMPORTED_MODULE_6__.Directive.Back, true, {
            label: "Enter a reference or commit SHA"
          })
        ];
        return true;
      }
      return false;
    }
    if (!inRefMode) {
      if (await _container__WEBPACK_IMPORTED_MODULE_2__.Container.git.hasBranchesAndOrTags(repos.path, {
        filter: { branches: (b) => b.name.includes(value), tags: (t) => t.name.includes(value) }
      })) {
        return false;
      }
    }
    const commit = await _container__WEBPACK_IMPORTED_MODULE_2__.Container.git.getCommit(repos.path, value);
    quickpick.items = [_quickpicks__WEBPACK_IMPORTED_MODULE_6__.CommitQuickPickItem.create(commit, true, { alwaysShow: true, compact: true, icon: true })];
    return true;
  };
}
async function* inputBranchNameStep(state, context, options) {
  var _a;
  const step = _quickCommand__WEBPACK_IMPORTED_MODULE_10__.QuickCommand.createInputStep({
    title: appendReposToTitle(`${context.title}${(_a = options.titleContext) != null ? _a : ""}`, state, context),
    placeholder: options.placeholder,
    value: options.value,
    prompt: "Enter branch name",
    validate: async (value2) => {
      if (value2 == null)
        return [false, void 0];
      value2 = value2.trim();
      if (value2.length === 0)
        return [false, "Please enter a valid branch name"];
      const valid = await _container__WEBPACK_IMPORTED_MODULE_2__.Container.git.validateBranchOrTagName(value2);
      return [valid, valid ? void 0 : `'${value2}' isn't a valid branch name`];
    }
  });
  const value = yield step;
  if (!_quickCommand__WEBPACK_IMPORTED_MODULE_10__.QuickCommand.canStepContinue(step, state, value) || !await _quickCommand__WEBPACK_IMPORTED_MODULE_10__.QuickCommand.canInputStepContinue(step, state, value)) {
    return _quickCommand__WEBPACK_IMPORTED_MODULE_10__.StepResult.Break;
  }
  return value;
}
async function* inputTagNameStep(state, context, options) {
  var _a;
  const step = _quickCommand__WEBPACK_IMPORTED_MODULE_10__.QuickCommand.createInputStep({
    title: appendReposToTitle(`${context.title}${(_a = options.titleContext) != null ? _a : ""}`, state, context),
    placeholder: options.placeholder,
    value: options.value,
    prompt: "Enter tag name",
    validate: async (value2) => {
      if (value2 == null)
        return [false, void 0];
      value2 = value2.trim();
      if (value2.length === 0)
        return [false, "Please enter a valid tag name"];
      const valid = await _container__WEBPACK_IMPORTED_MODULE_2__.Container.git.validateBranchOrTagName(value2);
      return [valid, valid ? void 0 : `'${value2}' isn't a valid tag name`];
    }
  });
  const value = yield step;
  if (!_quickCommand__WEBPACK_IMPORTED_MODULE_10__.QuickCommand.canStepContinue(step, state, value) || !await _quickCommand__WEBPACK_IMPORTED_MODULE_10__.QuickCommand.canInputStepContinue(step, state, value)) {
    return _quickCommand__WEBPACK_IMPORTED_MODULE_10__.StepResult.Break;
  }
  return value;
}
async function* pickBranchStep(state, context, {
  filter,
  picked,
  placeholder,
  titleContext
}) {
  const branches = await getBranches(state.repo, {
    filter,
    picked
  });
  const step = _quickCommand__WEBPACK_IMPORTED_MODULE_10__.QuickCommand.createPickStep({
    title: appendReposToTitle(`${context.title}${titleContext != null ? titleContext : ""}`, state, context),
    placeholder: branches.length === 0 ? `No branches found in ${state.repo.formattedName}` : placeholder,
    matchOnDetail: true,
    items: branches.length === 0 ? [_quickpicks__WEBPACK_IMPORTED_MODULE_6__.DirectiveQuickPickItem.create(_quickpicks__WEBPACK_IMPORTED_MODULE_6__.Directive.Back, true), _quickpicks__WEBPACK_IMPORTED_MODULE_6__.DirectiveQuickPickItem.create(_quickpicks__WEBPACK_IMPORTED_MODULE_6__.Directive.Cancel)] : branches,
    additionalButtons: [_quickCommand__WEBPACK_IMPORTED_MODULE_10__.QuickCommandButtons.RevealInSideBar],
    onDidClickButton: (quickpick, button) => {
      if (button === _quickCommand__WEBPACK_IMPORTED_MODULE_10__.QuickCommandButtons.RevealInSideBar) {
        if (quickpick.activeItems.length === 0) {
          void _container__WEBPACK_IMPORTED_MODULE_2__.Container.repositoriesView.revealBranches(state.repo.path, {
            select: true,
            expand: true
          });
          return;
        }
        void _gitCommands_actions__WEBPACK_IMPORTED_MODULE_9__.GitActions.Branch.reveal(quickpick.activeItems[0].item, {
          select: true,
          expand: true
        });
      }
    },
    keys: ["right", "alt+right", "ctrl+right"],
    onDidPressKey: async (quickpick) => {
      if (quickpick.activeItems.length === 0)
        return;
      await _gitCommands_actions__WEBPACK_IMPORTED_MODULE_9__.GitActions.Branch.reveal(quickpick.activeItems[0].item, {
        select: true,
        focus: false,
        expand: true
      });
    }
  });
  const selection = yield step;
  return _quickCommand__WEBPACK_IMPORTED_MODULE_10__.QuickCommand.canPickStepContinue(step, state, selection) ? selection[0].item : _quickCommand__WEBPACK_IMPORTED_MODULE_10__.StepResult.Break;
}
async function* pickBranchesStep(state, context, {
  filter,
  picked,
  placeholder,
  sort,
  titleContext
}) {
  const branches = await getBranches(state.repo, {
    filter,
    picked,
    sort
  });
  const step = _quickCommand__WEBPACK_IMPORTED_MODULE_10__.QuickCommand.createPickStep({
    multiselect: branches.length !== 0,
    title: appendReposToTitle(`${context.title}${titleContext != null ? titleContext : ""}`, state, context),
    placeholder: branches.length === 0 ? `No branches found in ${state.repo.formattedName}` : placeholder,
    matchOnDetail: true,
    items: branches.length === 0 ? [_quickpicks__WEBPACK_IMPORTED_MODULE_6__.DirectiveQuickPickItem.create(_quickpicks__WEBPACK_IMPORTED_MODULE_6__.Directive.Back, true), _quickpicks__WEBPACK_IMPORTED_MODULE_6__.DirectiveQuickPickItem.create(_quickpicks__WEBPACK_IMPORTED_MODULE_6__.Directive.Cancel)] : branches,
    additionalButtons: [_quickCommand__WEBPACK_IMPORTED_MODULE_10__.QuickCommandButtons.RevealInSideBar],
    onDidClickButton: (quickpick, button) => {
      if (button === _quickCommand__WEBPACK_IMPORTED_MODULE_10__.QuickCommandButtons.RevealInSideBar) {
        if (quickpick.activeItems.length === 0) {
          void _container__WEBPACK_IMPORTED_MODULE_2__.Container.repositoriesView.revealBranches(state.repo.path, {
            select: true,
            expand: true
          });
          return;
        }
        void _gitCommands_actions__WEBPACK_IMPORTED_MODULE_9__.GitActions.Branch.reveal(quickpick.activeItems[0].item, {
          select: true,
          expand: true
        });
      }
    },
    keys: ["right", "alt+right", "ctrl+right"],
    onDidPressKey: async (quickpick) => {
      if (quickpick.activeItems.length === 0)
        return;
      await _gitCommands_actions__WEBPACK_IMPORTED_MODULE_9__.GitActions.Branch.reveal(quickpick.activeItems[0].item, {
        select: true,
        focus: false,
        expand: true
      });
    }
  });
  const selection = yield step;
  return _quickCommand__WEBPACK_IMPORTED_MODULE_10__.QuickCommand.canPickStepContinue(step, state, selection) ? selection.map((i) => i.item) : _quickCommand__WEBPACK_IMPORTED_MODULE_10__.StepResult.Break;
}
async function* pickBranchOrTagStep(state, context, {
  filter,
  picked,
  placeholder,
  titleContext,
  value,
  additionalButtons,
  ranges
}) {
  context.showTags = true;
  const showTagsButton = new _quickCommand__WEBPACK_IMPORTED_MODULE_10__.QuickCommandButtons.ShowTagsToggle(context.showTags);
  const getBranchesAndOrTagsFn = async () => {
    return getBranchesAndOrTags(state.repo, context.showTags ? ["branches", "tags"] : ["branches"], {
      filter,
      picked,
      sort: true
    });
  };
  const branchesAndOrTags = await getBranchesAndOrTagsFn();
  const step = _quickCommand__WEBPACK_IMPORTED_MODULE_10__.QuickCommand.createPickStep({
    title: appendReposToTitle(`${context.title}${titleContext != null ? titleContext : ""}`, state, context),
    placeholder: branchesAndOrTags.length === 0 ? `No branches${context.showTags ? " or tags" : ""} found in ${state.repo.formattedName}` : `${typeof placeholder === "string" ? placeholder : placeholder(context)}${_constants__WEBPACK_IMPORTED_MODULE_1__.GlyphChars.Space.repeat(3)}(or enter a reference using #)`,
    matchOnDescription: true,
    matchOnDetail: true,
    value,
    items: branchesAndOrTags.length === 0 ? [_quickpicks__WEBPACK_IMPORTED_MODULE_6__.DirectiveQuickPickItem.create(_quickpicks__WEBPACK_IMPORTED_MODULE_6__.Directive.Back, true), _quickpicks__WEBPACK_IMPORTED_MODULE_6__.DirectiveQuickPickItem.create(_quickpicks__WEBPACK_IMPORTED_MODULE_6__.Directive.Cancel)] : branchesAndOrTags,
    additionalButtons: [_quickCommand__WEBPACK_IMPORTED_MODULE_10__.QuickCommandButtons.RevealInSideBar, ...additionalButtons != null ? additionalButtons : [], showTagsButton],
    onDidClickButton: async (quickpick, button) => {
      if (button === showTagsButton) {
        quickpick.busy = true;
        quickpick.enabled = false;
        try {
          context.showTags = !context.showTags;
          showTagsButton.on = context.showTags;
          const branchesAndOrTags2 = await getBranchesAndOrTagsFn();
          quickpick.placeholder = branchesAndOrTags2.length === 0 ? `${state.repo.formattedName} has no branches${context.showTags ? " or tags" : ""}` : `${typeof placeholder === "string" ? placeholder : placeholder(context)}${_constants__WEBPACK_IMPORTED_MODULE_1__.GlyphChars.Space.repeat(3)}(or enter a reference using #)`;
          quickpick.items = branchesAndOrTags2;
        } finally {
          quickpick.busy = false;
          quickpick.enabled = true;
        }
        return;
      }
      if (button === _quickCommand__WEBPACK_IMPORTED_MODULE_10__.QuickCommandButtons.RevealInSideBar) {
        if (quickpick.activeItems.length === 0) {
          void _container__WEBPACK_IMPORTED_MODULE_2__.Container.repositoriesView.revealBranches(state.repo.path, {
            select: true,
            expand: true
          });
          return;
        }
        const item = quickpick.activeItems[0].item;
        if (_git_git__WEBPACK_IMPORTED_MODULE_3__.GitReference.isBranch(item)) {
          void _gitCommands_actions__WEBPACK_IMPORTED_MODULE_9__.GitActions.Branch.reveal(item, { select: true, expand: true });
        } else if (_git_git__WEBPACK_IMPORTED_MODULE_3__.GitReference.isTag(item)) {
          void _gitCommands_actions__WEBPACK_IMPORTED_MODULE_9__.GitActions.Tag.reveal(item, { select: true, expand: true });
        } else if (_git_git__WEBPACK_IMPORTED_MODULE_3__.GitReference.isRevision(item)) {
          void _gitCommands_actions__WEBPACK_IMPORTED_MODULE_9__.GitActions.Commit.reveal(item, { select: true, expand: true });
        }
      }
    },
    keys: ["right", "alt+right", "ctrl+right"],
    onDidPressKey: (quickpick) => {
      if (quickpick.activeItems.length === 0)
        return;
      const item = quickpick.activeItems[0].item;
      if (_git_git__WEBPACK_IMPORTED_MODULE_3__.GitReference.isBranch(item)) {
        void _gitCommands_actions__WEBPACK_IMPORTED_MODULE_9__.GitActions.Branch.reveal(item, { select: true, focus: false, expand: true });
      } else if (_git_git__WEBPACK_IMPORTED_MODULE_3__.GitReference.isTag(item)) {
        void _gitCommands_actions__WEBPACK_IMPORTED_MODULE_9__.GitActions.Tag.reveal(item, { select: true, focus: false, expand: true });
      } else if (_git_git__WEBPACK_IMPORTED_MODULE_3__.GitReference.isRevision(item)) {
        void _gitCommands_actions__WEBPACK_IMPORTED_MODULE_9__.GitActions.Commit.reveal(item, { select: true, focus: false, expand: true });
      }
    },
    onValidateValue: getValidateGitReferenceFn(state.repo, { ranges })
  });
  const selection = yield step;
  return _quickCommand__WEBPACK_IMPORTED_MODULE_10__.QuickCommand.canPickStepContinue(step, state, selection) ? selection[0].item : _quickCommand__WEBPACK_IMPORTED_MODULE_10__.StepResult.Break;
}
async function* pickBranchOrTagStepMultiRepo(state, context, {
  filter,
  picked,
  placeholder,
  titleContext,
  value
}) {
  context.showTags = state.repos.length === 1;
  const showTagsButton = new _quickCommand__WEBPACK_IMPORTED_MODULE_10__.QuickCommandButtons.ShowTagsToggle(context.showTags);
  const getBranchesAndOrTagsFn = () => {
    var _a;
    return getBranchesAndOrTags(state.repos, context.showTags ? ["branches", "tags"] : ["branches"], {
      filter: { branches: state.repos.length === 1 ? void 0 : (b) => !b.remote, ...filter },
      picked: picked != null ? picked : (_a = state.reference) == null ? void 0 : _a.ref,
      sort: { branches: { orderBy: _configuration__WEBPACK_IMPORTED_MODULE_0__.BranchSorting.DateDesc }, tags: { orderBy: _configuration__WEBPACK_IMPORTED_MODULE_0__.TagSorting.DateDesc } }
    });
  };
  const branchesAndOrTags = await getBranchesAndOrTagsFn();
  const step = _quickCommand__WEBPACK_IMPORTED_MODULE_10__.QuickCommand.createPickStep({
    title: appendReposToTitle(`${context.title}${titleContext != null ? titleContext : ""}`, state, context),
    placeholder: branchesAndOrTags.length === 0 ? `No branches${context.showTags ? " or tags" : ""} found in ${state.repos[0].formattedName}` : `${typeof placeholder === "string" ? placeholder : placeholder(context)}${_constants__WEBPACK_IMPORTED_MODULE_1__.GlyphChars.Space.repeat(3)}(or enter a reference using #)`,
    matchOnDescription: true,
    matchOnDetail: true,
    value: value != null ? value : _git_git__WEBPACK_IMPORTED_MODULE_3__.GitReference.isRevision(state.reference) ? state.reference.ref : void 0,
    items: branchesAndOrTags.length === 0 ? [_quickpicks__WEBPACK_IMPORTED_MODULE_6__.DirectiveQuickPickItem.create(_quickpicks__WEBPACK_IMPORTED_MODULE_6__.Directive.Back, true), _quickpicks__WEBPACK_IMPORTED_MODULE_6__.DirectiveQuickPickItem.create(_quickpicks__WEBPACK_IMPORTED_MODULE_6__.Directive.Cancel)] : branchesAndOrTags,
    additionalButtons: [_quickCommand__WEBPACK_IMPORTED_MODULE_10__.QuickCommandButtons.RevealInSideBar, showTagsButton],
    onDidClickButton: async (quickpick, button) => {
      if (button === showTagsButton) {
        quickpick.busy = true;
        quickpick.enabled = false;
        try {
          context.showTags = !context.showTags;
          showTagsButton.on = context.showTags;
          const branchesAndOrTags2 = await getBranchesAndOrTagsFn();
          quickpick.placeholder = branchesAndOrTags2.length === 0 ? `${state.repos[0].formattedName} has no branches${context.showTags ? " or tags" : ""}` : `${typeof placeholder === "string" ? placeholder : placeholder(context)}${_constants__WEBPACK_IMPORTED_MODULE_1__.GlyphChars.Space.repeat(3)}(or enter a reference using #)`;
          quickpick.items = branchesAndOrTags2;
        } finally {
          quickpick.busy = false;
          quickpick.enabled = true;
        }
      }
      if (button === _quickCommand__WEBPACK_IMPORTED_MODULE_10__.QuickCommandButtons.RevealInSideBar) {
        if (quickpick.activeItems.length === 0) {
          if (state.repos.length === 1) {
            void _container__WEBPACK_IMPORTED_MODULE_2__.Container.repositoriesView.revealBranches(state.repos[0].path, {
              select: true,
              expand: true
            });
          }
          return;
        }
        const item = quickpick.activeItems[0].item;
        if (_git_git__WEBPACK_IMPORTED_MODULE_3__.GitReference.isBranch(item)) {
          void _gitCommands_actions__WEBPACK_IMPORTED_MODULE_9__.GitActions.Branch.reveal(item, { select: true, expand: true });
        } else if (_git_git__WEBPACK_IMPORTED_MODULE_3__.GitReference.isTag(item)) {
          void _gitCommands_actions__WEBPACK_IMPORTED_MODULE_9__.GitActions.Tag.reveal(item, { select: true, expand: true });
        } else if (_git_git__WEBPACK_IMPORTED_MODULE_3__.GitReference.isRevision(item)) {
          void _gitCommands_actions__WEBPACK_IMPORTED_MODULE_9__.GitActions.Commit.reveal(item, { select: true, expand: true });
        }
      }
    },
    keys: ["right", "alt+right", "ctrl+right"],
    onDidPressKey: (quickpick) => {
      if (quickpick.activeItems.length === 0)
        return;
      const item = quickpick.activeItems[0].item;
      if (_git_git__WEBPACK_IMPORTED_MODULE_3__.GitReference.isBranch(item)) {
        void _gitCommands_actions__WEBPACK_IMPORTED_MODULE_9__.GitActions.Branch.reveal(item, { select: true, focus: false, expand: true });
      } else if (_git_git__WEBPACK_IMPORTED_MODULE_3__.GitReference.isTag(item)) {
        void _gitCommands_actions__WEBPACK_IMPORTED_MODULE_9__.GitActions.Tag.reveal(item, { select: true, focus: false, expand: true });
      } else if (_git_git__WEBPACK_IMPORTED_MODULE_3__.GitReference.isRevision(item)) {
        void _gitCommands_actions__WEBPACK_IMPORTED_MODULE_9__.GitActions.Commit.reveal(item, { select: true, focus: false, expand: true });
      }
    },
    onValidateValue: getValidateGitReferenceFn(state.repos)
  });
  const selection = yield step;
  return _quickCommand__WEBPACK_IMPORTED_MODULE_10__.QuickCommand.canPickStepContinue(step, state, selection) ? selection[0].item : _quickCommand__WEBPACK_IMPORTED_MODULE_10__.StepResult.Break;
}
async function* pickCommitStep(state, context, {
  ignoreFocusOut,
  log,
  onDidLoadMore,
  picked,
  placeholder,
  showInSideBarCommand,
  showInSideBarButton: showInSideBar,
  titleContext
}) {
  var _a;
  function getItems(log2) {
    return log2 == null ? [_quickpicks__WEBPACK_IMPORTED_MODULE_6__.DirectiveQuickPickItem.create(_quickpicks__WEBPACK_IMPORTED_MODULE_6__.Directive.Back, true), _quickpicks__WEBPACK_IMPORTED_MODULE_6__.DirectiveQuickPickItem.create(_quickpicks__WEBPACK_IMPORTED_MODULE_6__.Directive.Cancel)] : [
      ..._system__WEBPACK_IMPORTED_MODULE_7__.Iterables.map(log2.commits.values(), (commit) => _quickpicks__WEBPACK_IMPORTED_MODULE_6__.CommitQuickPickItem.create(commit, picked != null && (typeof picked === "string" ? commit.ref === picked : picked.includes(commit.ref)), { compact: true, icon: true })),
      ...(log2 == null ? void 0 : log2.hasMore) ? [_quickpicks__WEBPACK_IMPORTED_MODULE_6__.DirectiveQuickPickItem.create(_quickpicks__WEBPACK_IMPORTED_MODULE_6__.Directive.LoadMore)] : []
    ];
  }
  const step = _quickCommand__WEBPACK_IMPORTED_MODULE_10__.QuickCommand.createPickStep({
    title: appendReposToTitle(`${context.title}${titleContext != null ? titleContext : ""}`, state, context),
    placeholder: typeof placeholder === "string" ? placeholder : placeholder(context, log),
    ignoreFocusOut,
    matchOnDescription: true,
    matchOnDetail: true,
    value: typeof picked === "string" && (log == null ? void 0 : log.count) === 0 ? picked : void 0,
    items: showInSideBarCommand != null ? [showInSideBarCommand, ...getItems(log)] : getItems(log),
    onDidLoadMore: async (quickpick) => {
      var _a2;
      log = await ((_a2 = log == null ? void 0 : log.more) == null ? void 0 : _a2.call(log, _configuration__WEBPACK_IMPORTED_MODULE_0__.configuration.get("advanced.maxListItems")));
      onDidLoadMore == null ? void 0 : onDidLoadMore(log);
      if (typeof placeholder !== "string") {
        quickpick.placeholder = placeholder(context, log);
      }
      return getItems(log);
    },
    additionalButtons: [
      _quickCommand__WEBPACK_IMPORTED_MODULE_10__.QuickCommandButtons.RevealInSideBar,
      (_a = showInSideBar == null ? void 0 : showInSideBar.button) != null ? _a : _quickCommand__WEBPACK_IMPORTED_MODULE_10__.QuickCommandButtons.SearchInSideBar,
      ...(log == null ? void 0 : log.hasMore) ? [_quickCommand__WEBPACK_IMPORTED_MODULE_10__.QuickCommandButtons.LoadMore] : []
    ],
    onDidClickButton: (quickpick, button) => {
      if (log == null)
        return;
      const items = quickpick.activeItems.filter((i) => !_quickpicks__WEBPACK_IMPORTED_MODULE_6__.CommandQuickPickItem.is(i));
      if (button === (showInSideBar == null ? void 0 : showInSideBar.button)) {
        showInSideBar.onDidClick(items);
        return;
      }
      if (items.length === 0 || log == null)
        return;
      if (button === _quickCommand__WEBPACK_IMPORTED_MODULE_10__.QuickCommandButtons.RevealInSideBar) {
        void _gitCommands_actions__WEBPACK_IMPORTED_MODULE_9__.GitActions.Commit.reveal(items[0].item, {
          select: true,
          focus: false,
          expand: true
        });
        return;
      }
      if (button === _quickCommand__WEBPACK_IMPORTED_MODULE_10__.QuickCommandButtons.SearchInSideBar) {
        void _container__WEBPACK_IMPORTED_MODULE_2__.Container.searchAndCompareView.search(state.repo.path, { pattern: _git_git__WEBPACK_IMPORTED_MODULE_3__.SearchPattern.fromCommit(items[0].item.ref) }, {
          label: {
            label: `for ${_git_git__WEBPACK_IMPORTED_MODULE_3__.GitReference.toString(items[0].item, { icon: false })}`
          },
          reveal: {
            select: true,
            focus: false,
            expand: true
          }
        });
      }
    },
    keys: ["right", "alt+right", "ctrl+right"],
    onDidPressKey: async (quickpick, key) => {
      if (quickpick.activeItems.length === 0)
        return;
      const items = quickpick.activeItems.filter((i) => !_quickpicks__WEBPACK_IMPORTED_MODULE_6__.CommandQuickPickItem.is(i));
      if (key === "ctrl+right") {
        await _gitCommands_actions__WEBPACK_IMPORTED_MODULE_9__.GitActions.Commit.reveal(items[0].item, {
          select: true,
          focus: false,
          expand: true
        });
      } else {
        const commit = items[0].item;
        await _container__WEBPACK_IMPORTED_MODULE_2__.Container.searchAndCompareView.search(commit.repoPath, { pattern: _git_git__WEBPACK_IMPORTED_MODULE_3__.SearchPattern.fromCommit(commit) }, {
          label: { label: `for ${_git_git__WEBPACK_IMPORTED_MODULE_3__.GitReference.toString(commit, { icon: false })}` },
          reveal: {
            select: true,
            focus: false,
            expand: true
          }
        });
      }
    },
    onValidateValue: getValidateGitReferenceFn(state.repo)
  });
  const selection = yield step;
  if (!_quickCommand__WEBPACK_IMPORTED_MODULE_10__.QuickCommand.canPickStepContinue(step, state, selection))
    return _quickCommand__WEBPACK_IMPORTED_MODULE_10__.StepResult.Break;
  if (_quickpicks__WEBPACK_IMPORTED_MODULE_6__.CommandQuickPickItem.is(selection[0])) {
    _quickCommand__WEBPACK_IMPORTED_MODULE_10__.QuickCommand.endSteps(state);
    await selection[0].execute();
    return _quickCommand__WEBPACK_IMPORTED_MODULE_10__.StepResult.Break;
  }
  return selection[0].item;
}
function* pickCommitsStep(state, context, {
  log,
  onDidLoadMore,
  picked,
  placeholder,
  titleContext
}) {
  function getItems(log2) {
    return log2 == null ? [_quickpicks__WEBPACK_IMPORTED_MODULE_6__.DirectiveQuickPickItem.create(_quickpicks__WEBPACK_IMPORTED_MODULE_6__.Directive.Back, true), _quickpicks__WEBPACK_IMPORTED_MODULE_6__.DirectiveQuickPickItem.create(_quickpicks__WEBPACK_IMPORTED_MODULE_6__.Directive.Cancel)] : [
      ..._system__WEBPACK_IMPORTED_MODULE_7__.Iterables.map(log2.commits.values(), (commit) => _quickpicks__WEBPACK_IMPORTED_MODULE_6__.CommitQuickPickItem.create(commit, picked != null && (typeof picked === "string" ? commit.ref === picked : picked.includes(commit.ref)), { compact: true, icon: true }))
    ];
  }
  const step = _quickCommand__WEBPACK_IMPORTED_MODULE_10__.QuickCommand.createPickStep({
    title: appendReposToTitle(`${context.title}${titleContext != null ? titleContext : ""}`, state, context),
    multiselect: log != null,
    placeholder: typeof placeholder === "string" ? placeholder : placeholder(context, log),
    matchOnDescription: true,
    matchOnDetail: true,
    items: getItems(log),
    onDidLoadMore: async (quickpick) => {
      var _a;
      log = await ((_a = log == null ? void 0 : log.more) == null ? void 0 : _a.call(log, _configuration__WEBPACK_IMPORTED_MODULE_0__.configuration.get("advanced.maxListItems")));
      onDidLoadMore == null ? void 0 : onDidLoadMore(log);
      if (typeof placeholder !== "string") {
        quickpick.placeholder = placeholder(context, log);
      }
      return getItems(log);
    },
    additionalButtons: [
      _quickCommand__WEBPACK_IMPORTED_MODULE_10__.QuickCommandButtons.RevealInSideBar,
      _quickCommand__WEBPACK_IMPORTED_MODULE_10__.QuickCommandButtons.SearchInSideBar,
      ...(log == null ? void 0 : log.hasMore) ? [_quickCommand__WEBPACK_IMPORTED_MODULE_10__.QuickCommandButtons.LoadMore] : []
    ],
    onDidClickButton: (quickpick, button) => {
      if (quickpick.activeItems.length === 0 || log == null)
        return;
      if (button === _quickCommand__WEBPACK_IMPORTED_MODULE_10__.QuickCommandButtons.RevealInSideBar) {
        void _gitCommands_actions__WEBPACK_IMPORTED_MODULE_9__.GitActions.Commit.reveal(quickpick.activeItems[0].item, {
          select: true,
          focus: false,
          expand: true
        });
        return;
      }
      if (button === _quickCommand__WEBPACK_IMPORTED_MODULE_10__.QuickCommandButtons.SearchInSideBar) {
        void _container__WEBPACK_IMPORTED_MODULE_2__.Container.searchAndCompareView.search(state.repo.path, { pattern: _git_git__WEBPACK_IMPORTED_MODULE_3__.SearchPattern.fromCommit(quickpick.activeItems[0].item.ref) }, {
          label: {
            label: `for ${_git_git__WEBPACK_IMPORTED_MODULE_3__.GitReference.toString(quickpick.activeItems[0].item, { icon: false })}`
          },
          reveal: {
            select: true,
            focus: false,
            expand: true
          }
        });
      }
    },
    keys: ["right", "alt+right", "ctrl+right"],
    onDidPressKey: async (quickpick, key) => {
      if (quickpick.activeItems.length === 0)
        return;
      if (key === "ctrl+right") {
        await _gitCommands_actions__WEBPACK_IMPORTED_MODULE_9__.GitActions.Commit.reveal(quickpick.activeItems[0].item, {
          select: true,
          focus: false,
          expand: true
        });
      } else {
        const commit = quickpick.activeItems[0].item;
        await _container__WEBPACK_IMPORTED_MODULE_2__.Container.searchAndCompareView.search(commit.repoPath, { pattern: _git_git__WEBPACK_IMPORTED_MODULE_3__.SearchPattern.fromCommit(commit) }, {
          label: { label: `for ${_git_git__WEBPACK_IMPORTED_MODULE_3__.GitReference.toString(commit, { icon: false })}` },
          reveal: {
            select: true,
            focus: false,
            expand: true
          }
        });
      }
    }
  });
  const selection = yield step;
  return _quickCommand__WEBPACK_IMPORTED_MODULE_10__.QuickCommand.canPickStepContinue(step, state, selection) ? selection.map((i) => i.item) : _quickCommand__WEBPACK_IMPORTED_MODULE_10__.StepResult.Break;
}
async function* pickContributorsStep(state, context, placeholder = "Choose contributors") {
  var _a;
  const message = (_a = await _git_gitService__WEBPACK_IMPORTED_MODULE_4__.GitService.getOrOpenBuiltInGitRepository(state.repo.path)) == null ? void 0 : _a.inputBox.value;
  const step = _quickCommand__WEBPACK_IMPORTED_MODULE_10__.QuickCommand.createPickStep({
    title: appendReposToTitle(context.title, state, context),
    allowEmpty: true,
    multiselect: true,
    placeholder,
    matchOnDescription: true,
    items: (await _container__WEBPACK_IMPORTED_MODULE_2__.Container.git.getContributors(state.repo.path)).map((c) => _quickpicks__WEBPACK_IMPORTED_MODULE_6__.ContributorQuickPickItem.create(c, message == null ? void 0 : message.includes(c.toCoauthor())))
  });
  const selection = yield step;
  return _quickCommand__WEBPACK_IMPORTED_MODULE_10__.QuickCommand.canPickStepContinue(step, state, selection) ? selection.map((i) => i.item) : _quickCommand__WEBPACK_IMPORTED_MODULE_10__.StepResult.Break;
}
async function* pickRepositoryStep(state, context, placeholder = "Choose a repository") {
  var _a;
  if (typeof state.repo === "string") {
    state.repo = await _container__WEBPACK_IMPORTED_MODULE_2__.Container.git.getRepository(state.repo);
    if (state.repo != null)
      return state.repo;
  }
  const active = (_a = state.repo) != null ? _a : await _container__WEBPACK_IMPORTED_MODULE_2__.Container.git.getActiveRepository();
  const step = _quickCommand__WEBPACK_IMPORTED_MODULE_10__.QuickCommand.createPickStep({
    title: context.title,
    placeholder,
    items: context.repos.length === 0 ? [_quickpicks__WEBPACK_IMPORTED_MODULE_6__.DirectiveQuickPickItem.create(_quickpicks__WEBPACK_IMPORTED_MODULE_6__.Directive.Cancel)] : await Promise.all(context.repos.map((r) => _quickpicks__WEBPACK_IMPORTED_MODULE_6__.RepositoryQuickPickItem.create(r, r.id === (active == null ? void 0 : active.id), {
      branch: true,
      fetched: true,
      status: true
    }))),
    additionalButtons: [_quickCommand__WEBPACK_IMPORTED_MODULE_10__.QuickCommandButtons.RevealInSideBar],
    onDidClickButton: (quickpick, button) => {
      if (button === _quickCommand__WEBPACK_IMPORTED_MODULE_10__.QuickCommandButtons.RevealInSideBar) {
        if (quickpick.activeItems.length === 0)
          return;
        void _container__WEBPACK_IMPORTED_MODULE_2__.Container.repositoriesView.revealRepository(quickpick.activeItems[0].item.path, {
          select: true,
          expand: true
        });
      }
    },
    keys: ["right", "alt+right", "ctrl+right"],
    onDidPressKey: (quickpick) => {
      if (quickpick.activeItems.length === 0)
        return;
      void _container__WEBPACK_IMPORTED_MODULE_2__.Container.repositoriesView.revealRepository(quickpick.activeItems[0].item.path, {
        select: true,
        focus: false,
        expand: true
      });
    }
  });
  const selection = yield step;
  return _quickCommand__WEBPACK_IMPORTED_MODULE_10__.QuickCommand.canPickStepContinue(step, state, selection) ? selection[0].item : _quickCommand__WEBPACK_IMPORTED_MODULE_10__.StepResult.Break;
}
async function* pickRepositoriesStep(state, context, options) {
  options = { placeholder: "Choose repositories", skipIfPossible: false, ...options };
  let actives;
  if (state.repos != null) {
    if (_system__WEBPACK_IMPORTED_MODULE_7__.Arrays.isStringArray(state.repos)) {
      actives = _system__WEBPACK_IMPORTED_MODULE_7__.Arrays.filterMap(state.repos, (path) => context.repos.find((r) => r.path === path));
      if (options.skipIfPossible && actives.length !== 0 && state.repos.length === actives.length) {
        return actives;
      }
    } else {
      actives = state.repos;
    }
  } else {
    const active = await _container__WEBPACK_IMPORTED_MODULE_2__.Container.git.getActiveRepository();
    actives = active != null ? [active] : [];
  }
  const step = _quickCommand__WEBPACK_IMPORTED_MODULE_10__.QuickCommand.createPickStep({
    multiselect: true,
    title: context.title,
    placeholder: options.placeholder,
    items: context.repos.length === 0 ? [_quickpicks__WEBPACK_IMPORTED_MODULE_6__.DirectiveQuickPickItem.create(_quickpicks__WEBPACK_IMPORTED_MODULE_6__.Directive.Cancel)] : await Promise.all(context.repos.map((repo) => _quickpicks__WEBPACK_IMPORTED_MODULE_6__.RepositoryQuickPickItem.create(repo, actives.some((r) => r.id === repo.id), {
      branch: true,
      fetched: true,
      status: true
    }))),
    additionalButtons: [_quickCommand__WEBPACK_IMPORTED_MODULE_10__.QuickCommandButtons.RevealInSideBar],
    onDidClickButton: (quickpick, button) => {
      if (button === _quickCommand__WEBPACK_IMPORTED_MODULE_10__.QuickCommandButtons.RevealInSideBar) {
        if (quickpick.activeItems.length === 0)
          return;
        void _container__WEBPACK_IMPORTED_MODULE_2__.Container.repositoriesView.revealRepository(quickpick.activeItems[0].item.path, {
          select: true,
          expand: true
        });
      }
    },
    keys: ["right", "alt+right", "ctrl+right"],
    onDidPressKey: (quickpick) => {
      if (quickpick.activeItems.length === 0)
        return;
      void _container__WEBPACK_IMPORTED_MODULE_2__.Container.repositoriesView.revealRepository(quickpick.activeItems[0].item.path, {
        select: true,
        focus: false,
        expand: true
      });
    }
  });
  const selection = yield step;
  return _quickCommand__WEBPACK_IMPORTED_MODULE_10__.QuickCommand.canPickStepContinue(step, state, selection) ? selection.map((i) => i.item) : _quickCommand__WEBPACK_IMPORTED_MODULE_10__.StepResult.Break;
}
function* pickStashStep(state, context, {
  ignoreFocusOut,
  stash,
  picked,
  placeholder,
  titleContext
}) {
  const step = _quickCommand__WEBPACK_IMPORTED_MODULE_10__.QuickCommand.createPickStep({
    title: appendReposToTitle(`${context.title}${titleContext != null ? titleContext : ""}`, state, context),
    placeholder: typeof placeholder === "string" ? placeholder : placeholder(context, stash),
    ignoreFocusOut,
    matchOnDescription: true,
    matchOnDetail: true,
    items: stash == null ? [_quickpicks__WEBPACK_IMPORTED_MODULE_6__.DirectiveQuickPickItem.create(_quickpicks__WEBPACK_IMPORTED_MODULE_6__.Directive.Back, true), _quickpicks__WEBPACK_IMPORTED_MODULE_6__.DirectiveQuickPickItem.create(_quickpicks__WEBPACK_IMPORTED_MODULE_6__.Directive.Cancel)] : [
      ..._system__WEBPACK_IMPORTED_MODULE_7__.Iterables.map(stash.commits.values(), (commit) => _quickpicks__WEBPACK_IMPORTED_MODULE_6__.CommitQuickPickItem.create(commit, picked != null && (typeof picked === "string" ? commit.ref === picked : picked.includes(commit.ref)), { compact: true, icon: true }))
    ],
    additionalButtons: [_quickCommand__WEBPACK_IMPORTED_MODULE_10__.QuickCommandButtons.RevealInSideBar, _quickCommand__WEBPACK_IMPORTED_MODULE_10__.QuickCommandButtons.SearchInSideBar],
    onDidClickButton: (quickpick, button) => {
      if (button === _quickCommand__WEBPACK_IMPORTED_MODULE_10__.QuickCommandButtons.RevealInSideBar) {
        if (quickpick.activeItems.length === 0) {
          void _container__WEBPACK_IMPORTED_MODULE_2__.Container.repositoriesView.revealStashes(state.repo.path, {
            select: true,
            expand: true
          });
        } else {
          void _gitCommands_actions__WEBPACK_IMPORTED_MODULE_9__.GitActions.Stash.reveal(quickpick.activeItems[0].item, {
            select: true,
            focus: false,
            expand: true
          });
        }
        return;
      }
      if (button === _quickCommand__WEBPACK_IMPORTED_MODULE_10__.QuickCommandButtons.SearchInSideBar) {
        if (quickpick.activeItems.length === 0)
          return;
        void _container__WEBPACK_IMPORTED_MODULE_2__.Container.searchAndCompareView.search(state.repo.path, { pattern: _git_git__WEBPACK_IMPORTED_MODULE_3__.SearchPattern.fromCommit(quickpick.activeItems[0].item.stashName) }, {
          label: {
            label: `for ${_git_git__WEBPACK_IMPORTED_MODULE_3__.GitReference.toString(quickpick.activeItems[0].item, { icon: false })}`
          },
          reveal: {
            select: true,
            focus: false,
            expand: true
          }
        });
      }
    },
    keys: ["right", "alt+right", "ctrl+right"],
    onDidPressKey: async (quickpick) => {
      if (quickpick.activeItems.length === 0)
        return;
      await _gitCommands_actions__WEBPACK_IMPORTED_MODULE_9__.GitActions.Stash.reveal(quickpick.activeItems[0].item, {
        select: true,
        focus: false,
        expand: true
      });
    }
  });
  const selection = yield step;
  return _quickCommand__WEBPACK_IMPORTED_MODULE_10__.QuickCommand.canPickStepContinue(step, state, selection) ? selection[0].item : _quickCommand__WEBPACK_IMPORTED_MODULE_10__.StepResult.Break;
}
async function* pickTagsStep(state, context, {
  filter,
  picked,
  placeholder,
  titleContext
}) {
  const tags = await getTags(state.repo, {
    filter,
    picked
  });
  const step = _quickCommand__WEBPACK_IMPORTED_MODULE_10__.QuickCommand.createPickStep({
    multiselect: tags.length !== 0,
    title: appendReposToTitle(`${context.title}${titleContext != null ? titleContext : ""}`, state, context),
    placeholder: tags.length === 0 ? `No tags found in ${state.repo.formattedName}` : placeholder,
    matchOnDetail: true,
    items: tags.length === 0 ? [_quickpicks__WEBPACK_IMPORTED_MODULE_6__.DirectiveQuickPickItem.create(_quickpicks__WEBPACK_IMPORTED_MODULE_6__.Directive.Back, true), _quickpicks__WEBPACK_IMPORTED_MODULE_6__.DirectiveQuickPickItem.create(_quickpicks__WEBPACK_IMPORTED_MODULE_6__.Directive.Cancel)] : tags,
    additionalButtons: [_quickCommand__WEBPACK_IMPORTED_MODULE_10__.QuickCommandButtons.RevealInSideBar],
    onDidClickButton: (quickpick, button) => {
      if (button === _quickCommand__WEBPACK_IMPORTED_MODULE_10__.QuickCommandButtons.RevealInSideBar) {
        if (quickpick.activeItems.length === 0) {
          void _container__WEBPACK_IMPORTED_MODULE_2__.Container.repositoriesView.revealTags(state.repo.path, {
            select: true,
            expand: true
          });
          return;
        }
        void _gitCommands_actions__WEBPACK_IMPORTED_MODULE_9__.GitActions.Tag.reveal(quickpick.activeItems[0].item, {
          select: true,
          expand: true
        });
      }
    },
    keys: ["right", "alt+right", "ctrl+right"],
    onDidPressKey: async (quickpick) => {
      if (quickpick.activeItems.length === 0)
        return;
      await _gitCommands_actions__WEBPACK_IMPORTED_MODULE_9__.GitActions.Tag.reveal(quickpick.activeItems[0].item, {
        select: true,
        focus: false,
        expand: true
      });
    }
  });
  const selection = yield step;
  return _quickCommand__WEBPACK_IMPORTED_MODULE_10__.QuickCommand.canPickStepContinue(step, state, selection) ? selection.map((i) => i.item) : _quickCommand__WEBPACK_IMPORTED_MODULE_10__.StepResult.Break;
}
async function* showCommitOrStashStep(state, context) {
  const step = _quickCommand__WEBPACK_IMPORTED_MODULE_10__.QuickCommand.createPickStep({
    title: appendReposToTitle(_git_git__WEBPACK_IMPORTED_MODULE_3__.GitReference.toString(state.reference, {
      capitalize: true,
      icon: false
    }), state, context),
    placeholder: _git_git__WEBPACK_IMPORTED_MODULE_3__.GitReference.toString(state.reference, { capitalize: true, icon: false }),
    ignoreFocusOut: true,
    items: await getShowCommitOrStashStepItems(state),
    additionalButtons: _git_git__WEBPACK_IMPORTED_MODULE_3__.GitReference.isStash(state.reference) ? [_quickCommand__WEBPACK_IMPORTED_MODULE_10__.QuickCommandButtons.RevealInSideBar] : [_quickCommand__WEBPACK_IMPORTED_MODULE_10__.QuickCommandButtons.RevealInSideBar, _quickCommand__WEBPACK_IMPORTED_MODULE_10__.QuickCommandButtons.SearchInSideBar],
    onDidClickButton: (quickpick, button) => {
      if (button === _quickCommand__WEBPACK_IMPORTED_MODULE_10__.QuickCommandButtons.SearchInSideBar) {
        void _container__WEBPACK_IMPORTED_MODULE_2__.Container.searchAndCompareView.search(state.repo.path, { pattern: _git_git__WEBPACK_IMPORTED_MODULE_3__.SearchPattern.fromCommit(state.reference.ref) }, {
          label: { label: `for ${_git_git__WEBPACK_IMPORTED_MODULE_3__.GitReference.toString(state.reference, { icon: false })}` },
          reveal: {
            select: true,
            focus: false,
            expand: true
          }
        });
        return;
      }
      if (button === _quickCommand__WEBPACK_IMPORTED_MODULE_10__.QuickCommandButtons.RevealInSideBar) {
        if (_git_git__WEBPACK_IMPORTED_MODULE_3__.GitReference.isStash(state.reference)) {
          void _gitCommands_actions__WEBPACK_IMPORTED_MODULE_9__.GitActions.Stash.reveal(state.reference, {
            select: true,
            focus: false,
            expand: true
          });
        } else {
          void _gitCommands_actions__WEBPACK_IMPORTED_MODULE_9__.GitActions.Commit.reveal(state.reference, {
            select: true,
            focus: false,
            expand: true
          });
        }
      }
    },
    keys: ["right", "alt+right", "ctrl+right"],
    onDidPressKey: async (quickpick, key) => {
      if (quickpick.activeItems.length === 0)
        return;
      void await quickpick.activeItems[0].onDidPressKey(key);
    }
  });
  const selection = yield step;
  return _quickCommand__WEBPACK_IMPORTED_MODULE_10__.QuickCommand.canPickStepContinue(step, state, selection) ? selection[0] : _quickCommand__WEBPACK_IMPORTED_MODULE_10__.StepResult.Break;
}
async function getShowCommitOrStashStepItems(state) {
  var _a, _b;
  const items = [new _quickpicks__WEBPACK_IMPORTED_MODULE_6__.CommitFilesQuickPickItem(state.reference)];
  const branch = await _container__WEBPACK_IMPORTED_MODULE_2__.Container.git.getBranch(state.repo.path);
  let remotes;
  let isStash = false;
  if (_git_git__WEBPACK_IMPORTED_MODULE_3__.GitStashCommit.is(state.reference)) {
    isStash = true;
    items.push(new _quickpicks__WEBPACK_IMPORTED_MODULE_6__.RevealInSideBarQuickPickItem(state.reference));
    items.push(new _quickpicks__WEBPACK_IMPORTED_MODULE_6__.GitCommandQuickPickItem("Apply Stash...", {
      command: "stash",
      state: {
        subcommand: "apply",
        repo: state.repo,
        reference: state.reference
      }
    }), new _quickpicks__WEBPACK_IMPORTED_MODULE_6__.GitCommandQuickPickItem("Delete Stash...", {
      command: "stash",
      state: {
        subcommand: "drop",
        repo: state.repo,
        reference: state.reference
      }
    }));
  } else {
    remotes = await _container__WEBPACK_IMPORTED_MODULE_2__.Container.git.getRemotes(state.repo.path, { sort: true });
    items.push(new _quickpicks__WEBPACK_IMPORTED_MODULE_6__.RevealInSideBarQuickPickItem(state.reference), new _quickpicks__WEBPACK_IMPORTED_MODULE_6__.SearchForCommitQuickPickItem(state.reference));
    if (branch != null && await _container__WEBPACK_IMPORTED_MODULE_2__.Container.git.branchContainsCommit(state.repo.path, branch.name, state.reference.ref)) {
      items.push(new _quickpicks__WEBPACK_IMPORTED_MODULE_6__.GitCommandQuickPickItem("Revert Commit...", {
        command: "revert",
        state: {
          repo: state.repo,
          references: [state.reference]
        }
      }), new _quickpicks__WEBPACK_IMPORTED_MODULE_6__.GitCommandQuickPickItem("Reset Commit...", {
        command: "reset",
        state: {
          repo: state.repo,
          reference: _git_git__WEBPACK_IMPORTED_MODULE_3__.GitReference.create(`${state.reference.ref}^`, state.reference.repoPath, {
            refType: "revision",
            name: `${state.reference.name}^`,
            message: state.reference.message
          })
        }
      }), new _quickpicks__WEBPACK_IMPORTED_MODULE_6__.GitCommandQuickPickItem(`Reset ${(_a = branch == null ? void 0 : branch.name) != null ? _a : "Current Branch"} to Commit...`, {
        command: "reset",
        state: {
          repo: state.repo,
          reference: state.reference
        }
      }), new _quickpicks__WEBPACK_IMPORTED_MODULE_6__.GitCommandQuickPickItem("Push to Commit...", {
        command: "push",
        state: {
          repos: state.repo,
          reference: state.reference
        }
      }));
    } else {
      items.push(new _quickpicks__WEBPACK_IMPORTED_MODULE_6__.GitCommandQuickPickItem("Cherry Pick Commit...", {
        command: "cherry-pick",
        state: {
          repo: state.repo,
          references: [state.reference]
        }
      }));
    }
    items.push(new _quickpicks__WEBPACK_IMPORTED_MODULE_6__.GitCommandQuickPickItem(`Rebase ${(_b = branch == null ? void 0 : branch.name) != null ? _b : "Current Branch"} onto Commit...`, {
      command: "rebase",
      state: {
        repo: state.repo,
        reference: state.reference
      }
    }), new _quickpicks__WEBPACK_IMPORTED_MODULE_6__.GitCommandQuickPickItem("Switch to Commit...", {
      command: "switch",
      state: {
        repos: [state.repo],
        reference: state.reference
      }
    }), new _quickpicks__WEBPACK_IMPORTED_MODULE_6__.GitCommandQuickPickItem("Create Branch at Commit...", {
      command: "branch",
      state: {
        subcommand: "create",
        repo: state.repo,
        reference: state.reference
      }
    }), new _quickpicks__WEBPACK_IMPORTED_MODULE_6__.GitCommandQuickPickItem("Create Tag at Commit...", {
      command: "tag",
      state: {
        subcommand: "create",
        repo: state.repo,
        reference: state.reference
      }
    }));
  }
  items.push(new _quickpicks__WEBPACK_IMPORTED_MODULE_6__.CommitOpenAllChangesCommandQuickPickItem(state.reference), new _quickpicks__WEBPACK_IMPORTED_MODULE_6__.CommitOpenAllChangesWithDiffToolCommandQuickPickItem(state.reference), new _quickpicks__WEBPACK_IMPORTED_MODULE_6__.CommitOpenAllChangesWithWorkingCommandQuickPickItem(state.reference), new _quickpicks__WEBPACK_IMPORTED_MODULE_6__.CommitOpenDirectoryCompareCommandQuickPickItem(state.reference), new _quickpicks__WEBPACK_IMPORTED_MODULE_6__.CommitOpenDirectoryCompareWithWorkingCommandQuickPickItem(state.reference), new _quickpicks__WEBPACK_IMPORTED_MODULE_6__.CommitOpenFilesCommandQuickPickItem(state.reference), new _quickpicks__WEBPACK_IMPORTED_MODULE_6__.CommitOpenRevisionsCommandQuickPickItem(state.reference));
  if (remotes == null ? void 0 : remotes.length) {
    items.push(new _quickpicks__WEBPACK_IMPORTED_MODULE_6__.OpenRemoteResourceCommandQuickPickItem(remotes, {
      type: _git_git__WEBPACK_IMPORTED_MODULE_3__.RemoteResourceType.Commit,
      sha: state.reference.sha
    }));
  }
  items.push(new _quickpicks__WEBPACK_IMPORTED_MODULE_6__.CommitBrowseRepositoryFromHereCommandQuickPickItem(state.reference, { openInNewWindow: false }), new _quickpicks__WEBPACK_IMPORTED_MODULE_6__.CommitBrowseRepositoryFromHereCommandQuickPickItem(state.reference, {
    before: true,
    openInNewWindow: false
  }), new _quickpicks__WEBPACK_IMPORTED_MODULE_6__.CommitBrowseRepositoryFromHereCommandQuickPickItem(state.reference, { openInNewWindow: true }), new _quickpicks__WEBPACK_IMPORTED_MODULE_6__.CommitBrowseRepositoryFromHereCommandQuickPickItem(state.reference, {
    before: true,
    openInNewWindow: true
  }), new _quickpicks__WEBPACK_IMPORTED_MODULE_6__.CommitCompareWithHEADCommandQuickPickItem(state.reference), new _quickpicks__WEBPACK_IMPORTED_MODULE_6__.CommitCompareWithWorkingCommandQuickPickItem(state.reference));
  if (!isStash) {
    items.push(new _quickpicks__WEBPACK_IMPORTED_MODULE_6__.CommitCopyIdQuickPickItem(state.reference));
  }
  items.push(new _quickpicks__WEBPACK_IMPORTED_MODULE_6__.CommitCopyMessageQuickPickItem(state.reference));
  if (remotes == null ? void 0 : remotes.length) {
    items.push(new _quickpicks__WEBPACK_IMPORTED_MODULE_6__.CopyRemoteResourceCommandQuickPickItem(remotes, {
      type: _git_git__WEBPACK_IMPORTED_MODULE_3__.RemoteResourceType.Commit,
      sha: state.reference.sha
    }));
  }
  return items;
}
function* showCommitOrStashFilesStep(state, context, options) {
  const step = _quickCommand__WEBPACK_IMPORTED_MODULE_10__.QuickCommand.createPickStep({
    title: appendReposToTitle(_git_git__WEBPACK_IMPORTED_MODULE_3__.GitReference.toString(state.reference, {
      capitalize: true,
      icon: false
    }), state, context),
    placeholder: _git_git__WEBPACK_IMPORTED_MODULE_3__.GitReference.toString(state.reference, { capitalize: true, icon: false }),
    ignoreFocusOut: true,
    items: [
      new _quickpicks__WEBPACK_IMPORTED_MODULE_6__.CommitFilesQuickPickItem(state.reference, state.fileName == null),
      ...state.reference.files.map((fs) => new _quickpicks__WEBPACK_IMPORTED_MODULE_6__.CommitFileQuickPickItem(state.reference, fs, (options == null ? void 0 : options.picked) === fs.fileName))
    ],
    matchOnDescription: true,
    additionalButtons: [_quickCommand__WEBPACK_IMPORTED_MODULE_10__.QuickCommandButtons.RevealInSideBar, _quickCommand__WEBPACK_IMPORTED_MODULE_10__.QuickCommandButtons.SearchInSideBar],
    onDidClickButton: (quickpick, button) => {
      if (button === _quickCommand__WEBPACK_IMPORTED_MODULE_10__.QuickCommandButtons.SearchInSideBar) {
        void _container__WEBPACK_IMPORTED_MODULE_2__.Container.searchAndCompareView.search(state.repo.path, { pattern: _git_git__WEBPACK_IMPORTED_MODULE_3__.SearchPattern.fromCommit(state.reference.ref) }, {
          label: { label: `for ${_git_git__WEBPACK_IMPORTED_MODULE_3__.GitReference.toString(state.reference, { icon: false })}` },
          reveal: {
            select: true,
            focus: false,
            expand: true
          }
        });
        return;
      }
      if (button === _quickCommand__WEBPACK_IMPORTED_MODULE_10__.QuickCommandButtons.RevealInSideBar) {
        if (_git_git__WEBPACK_IMPORTED_MODULE_3__.GitReference.isStash(state.reference)) {
          void _gitCommands_actions__WEBPACK_IMPORTED_MODULE_9__.GitActions.Stash.reveal(state.reference, {
            select: true,
            focus: false,
            expand: true
          });
        } else {
          void _gitCommands_actions__WEBPACK_IMPORTED_MODULE_9__.GitActions.Commit.reveal(state.reference, {
            select: true,
            focus: false,
            expand: true
          });
        }
      }
    },
    keys: ["right", "alt+right", "ctrl+right"],
    onDidPressKey: async (quickpick, key) => {
      if (quickpick.activeItems.length === 0)
        return;
      void await quickpick.activeItems[0].onDidPressKey(key);
    }
  });
  const selection = yield step;
  return _quickCommand__WEBPACK_IMPORTED_MODULE_10__.QuickCommand.canPickStepContinue(step, state, selection) ? selection[0] : _quickCommand__WEBPACK_IMPORTED_MODULE_10__.StepResult.Break;
}
async function* showCommitOrStashFileStep(state, context) {
  const step = _quickCommand__WEBPACK_IMPORTED_MODULE_10__.QuickCommand.createPickStep({
    title: appendReposToTitle(_git_git__WEBPACK_IMPORTED_MODULE_3__.GitReference.toString(state.reference, {
      capitalize: true,
      icon: false
    }), state, context, `${_system__WEBPACK_IMPORTED_MODULE_7__.Strings.pad(_constants__WEBPACK_IMPORTED_MODULE_1__.GlyphChars.Dot, 2, 2)}${_git_gitUri__WEBPACK_IMPORTED_MODULE_5__.GitUri.getFormattedFilename(state.fileName)}`),
    placeholder: `${_git_gitUri__WEBPACK_IMPORTED_MODULE_5__.GitUri.getFormattedPath(state.fileName, {
      relativeTo: state.repo.path
    })} in ${_git_git__WEBPACK_IMPORTED_MODULE_3__.GitReference.toString(state.reference, {
      icon: false
    })}`,
    ignoreFocusOut: true,
    items: await getShowCommitOrStashFileStepItems(state),
    matchOnDescription: true,
    additionalButtons: [_quickCommand__WEBPACK_IMPORTED_MODULE_10__.QuickCommandButtons.RevealInSideBar, _quickCommand__WEBPACK_IMPORTED_MODULE_10__.QuickCommandButtons.SearchInSideBar],
    onDidClickButton: (quickpick, button) => {
      if (button === _quickCommand__WEBPACK_IMPORTED_MODULE_10__.QuickCommandButtons.SearchInSideBar) {
        void _container__WEBPACK_IMPORTED_MODULE_2__.Container.searchAndCompareView.search(state.repo.path, { pattern: _git_git__WEBPACK_IMPORTED_MODULE_3__.SearchPattern.fromCommit(state.reference.ref) }, {
          label: { label: `for ${_git_git__WEBPACK_IMPORTED_MODULE_3__.GitReference.toString(state.reference, { icon: false })}` },
          reveal: {
            select: true,
            focus: false,
            expand: true
          }
        });
        return;
      }
      if (button === _quickCommand__WEBPACK_IMPORTED_MODULE_10__.QuickCommandButtons.RevealInSideBar) {
        if (_git_git__WEBPACK_IMPORTED_MODULE_3__.GitReference.isStash(state.reference)) {
          void _gitCommands_actions__WEBPACK_IMPORTED_MODULE_9__.GitActions.Stash.reveal(state.reference, {
            select: true,
            focus: false,
            expand: true
          });
        } else {
          void _gitCommands_actions__WEBPACK_IMPORTED_MODULE_9__.GitActions.Commit.reveal(state.reference, {
            select: true,
            focus: false,
            expand: true
          });
        }
      }
    },
    keys: ["right", "alt+right", "ctrl+right"],
    onDidPressKey: async (quickpick, key) => {
      if (quickpick.activeItems.length === 0)
        return;
      void await quickpick.activeItems[0].onDidPressKey(key);
    }
  });
  const selection = yield step;
  return _quickCommand__WEBPACK_IMPORTED_MODULE_10__.QuickCommand.canPickStepContinue(step, state, selection) ? selection[0] : _quickCommand__WEBPACK_IMPORTED_MODULE_10__.StepResult.Break;
}
async function getShowCommitOrStashFileStepItems(state) {
  const file = state.reference.files.find((f) => f.fileName === state.fileName);
  if (file == null)
    return [];
  const items = [
    new _quickpicks__WEBPACK_IMPORTED_MODULE_6__.CommitFilesQuickPickItem(state.reference, void 0, _git_gitUri__WEBPACK_IMPORTED_MODULE_5__.GitUri.getFormattedFilename(state.fileName))
  ];
  let remotes;
  let isStash = false;
  if (_git_git__WEBPACK_IMPORTED_MODULE_3__.GitStashCommit.is(state.reference)) {
    isStash = true;
    items.push(new _quickpicks__WEBPACK_IMPORTED_MODULE_6__.RevealInSideBarQuickPickItem(state.reference));
  } else {
    remotes = await _container__WEBPACK_IMPORTED_MODULE_2__.Container.git.getRemotes(state.repo.path, { sort: true });
    items.push(new _quickpicks__WEBPACK_IMPORTED_MODULE_6__.RevealInSideBarQuickPickItem(state.reference), new _quickpicks__WEBPACK_IMPORTED_MODULE_6__.SearchForCommitQuickPickItem(state.reference), new _quickpicks__WEBPACK_IMPORTED_MODULE_6__.CommitApplyFileChangesCommandQuickPickItem(state.reference, file), new _quickpicks__WEBPACK_IMPORTED_MODULE_6__.CommitRestoreFileChangesCommandQuickPickItem(state.reference, file));
  }
  items.push(new _quickpicks__WEBPACK_IMPORTED_MODULE_6__.CommitOpenChangesCommandQuickPickItem(state.reference, state.fileName), new _quickpicks__WEBPACK_IMPORTED_MODULE_6__.CommitOpenChangesWithDiffToolCommandQuickPickItem(state.reference, state.fileName), new _quickpicks__WEBPACK_IMPORTED_MODULE_6__.CommitOpenChangesWithWorkingCommandQuickPickItem(state.reference, state.fileName));
  if (file.status !== "D") {
    items.push(new _quickpicks__WEBPACK_IMPORTED_MODULE_6__.CommitOpenFileCommandQuickPickItem(state.reference, file));
  }
  items.push(new _quickpicks__WEBPACK_IMPORTED_MODULE_6__.CommitOpenRevisionCommandQuickPickItem(state.reference, file));
  if (remotes == null ? void 0 : remotes.length) {
    items.push(new _quickpicks__WEBPACK_IMPORTED_MODULE_6__.OpenRemoteResourceCommandQuickPickItem(remotes, {
      type: _git_git__WEBPACK_IMPORTED_MODULE_3__.RemoteResourceType.Revision,
      fileName: state.fileName,
      commit: state.reference
    }), new _quickpicks__WEBPACK_IMPORTED_MODULE_6__.OpenRemoteResourceCommandQuickPickItem(remotes, {
      type: _git_git__WEBPACK_IMPORTED_MODULE_3__.RemoteResourceType.Commit,
      sha: state.reference.ref
    }));
  }
  items.push(new _quickpicks__WEBPACK_IMPORTED_MODULE_6__.CommitBrowseRepositoryFromHereCommandQuickPickItem(state.reference, { openInNewWindow: false }), new _quickpicks__WEBPACK_IMPORTED_MODULE_6__.CommitBrowseRepositoryFromHereCommandQuickPickItem(state.reference, {
    before: true,
    openInNewWindow: false
  }), new _quickpicks__WEBPACK_IMPORTED_MODULE_6__.CommitBrowseRepositoryFromHereCommandQuickPickItem(state.reference, { openInNewWindow: true }), new _quickpicks__WEBPACK_IMPORTED_MODULE_6__.CommitBrowseRepositoryFromHereCommandQuickPickItem(state.reference, {
    before: true,
    openInNewWindow: true
  }), new _quickpicks__WEBPACK_IMPORTED_MODULE_6__.CommitCompareWithHEADCommandQuickPickItem(state.reference), new _quickpicks__WEBPACK_IMPORTED_MODULE_6__.CommitCompareWithWorkingCommandQuickPickItem(state.reference));
  if (!isStash) {
    items.push(new _quickpicks__WEBPACK_IMPORTED_MODULE_6__.CommitCopyIdQuickPickItem(state.reference));
  }
  items.push(new _quickpicks__WEBPACK_IMPORTED_MODULE_6__.CommitCopyMessageQuickPickItem(state.reference));
  if (remotes == null ? void 0 : remotes.length) {
    items.push(new _quickpicks__WEBPACK_IMPORTED_MODULE_6__.CopyRemoteResourceCommandQuickPickItem(remotes, {
      type: _git_git__WEBPACK_IMPORTED_MODULE_3__.RemoteResourceType.Commit,
      sha: state.reference.sha
    }), new _quickpicks__WEBPACK_IMPORTED_MODULE_6__.CopyRemoteResourceCommandQuickPickItem(remotes, {
      type: _git_git__WEBPACK_IMPORTED_MODULE_3__.RemoteResourceType.Revision,
      fileName: state.fileName,
      commit: state.reference
    }));
  }
  return items;
}
function* showRepositoryStatusStep(state, context) {
  const upstream = context.status.getUpstreamStatus({ expand: true, separator: ", " });
  const working = context.status.getFormattedDiffStatus({ expand: true, separator: ", " });
  const step = _quickCommand__WEBPACK_IMPORTED_MODULE_10__.QuickCommand.createPickStep({
    title: appendReposToTitle(context.title, state, context),
    placeholder: `${upstream ? `${upstream}, ${working}` : working}`,
    ignoreFocusOut: true,
    items: getShowRepositoryStatusStepItems(state, context),
    keys: ["right", "alt+right", "ctrl+right"],
    onDidPressKey: async (quickpick, key) => {
      if (quickpick.activeItems.length === 0)
        return;
      void await quickpick.activeItems[0].onDidPressKey(key);
    }
  });
  const selection = yield step;
  return _quickCommand__WEBPACK_IMPORTED_MODULE_10__.QuickCommand.canPickStepContinue(step, state, selection) ? selection[0] : _quickCommand__WEBPACK_IMPORTED_MODULE_10__.StepResult.Break;
}
function getShowRepositoryStatusStepItems(state, context) {
  const items = [];
  const computed = context.status.computeWorkingTreeStatus();
  let workingTreeStatus;
  if (computed.staged === 0 && computed.unstaged === 0) {
    workingTreeStatus = "No working tree changes";
  } else {
    workingTreeStatus = `$(files) ${computed.staged ? `${_system__WEBPACK_IMPORTED_MODULE_7__.Strings.pluralize("staged file", computed.staged)} (${computed.stagedStatus})` : ""}${computed.unstaged ? `${computed.staged ? ", " : ""}${_system__WEBPACK_IMPORTED_MODULE_7__.Strings.pluralize("unstaged file", computed.unstaged)} (${computed.unstagedStatus})` : ""}`;
  }
  if (context.status.upstream) {
    if (context.status.state.ahead === 0 && context.status.state.behind === 0) {
      items.push(_quickpicks__WEBPACK_IMPORTED_MODULE_6__.DirectiveQuickPickItem.create(_quickpicks__WEBPACK_IMPORTED_MODULE_6__.Directive.Noop, true, {
        label: `$(git-branch) ${context.status.branch} is up to date with $(git-branch) ${context.status.upstream}`,
        detail: workingTreeStatus
      }));
    } else if (context.status.state.ahead !== 0 && context.status.state.behind !== 0) {
      items.push(_quickpicks__WEBPACK_IMPORTED_MODULE_6__.DirectiveQuickPickItem.create(_quickpicks__WEBPACK_IMPORTED_MODULE_6__.Directive.Noop, true, {
        label: `$(git-branch) ${context.status.branch} has diverged from $(git-branch) ${context.status.upstream}`,
        detail: workingTreeStatus
      }));
    } else if (context.status.state.ahead !== 0) {
      items.push(_quickpicks__WEBPACK_IMPORTED_MODULE_6__.DirectiveQuickPickItem.create(_quickpicks__WEBPACK_IMPORTED_MODULE_6__.Directive.Noop, true, {
        label: `$(git-branch) ${context.status.branch} is ahead of $(git-branch) ${context.status.upstream}`,
        detail: workingTreeStatus
      }));
    } else if (context.status.state.behind !== 0) {
      items.push(_quickpicks__WEBPACK_IMPORTED_MODULE_6__.DirectiveQuickPickItem.create(_quickpicks__WEBPACK_IMPORTED_MODULE_6__.Directive.Noop, true, {
        label: `$(git-branch) ${context.status.branch} is behind $(git-branch) ${context.status.upstream}`,
        detail: workingTreeStatus
      }));
    }
    if (context.status.state.behind !== 0) {
      items.push(new _quickpicks__WEBPACK_IMPORTED_MODULE_6__.GitCommandQuickPickItem(`$(cloud-download) ${_system__WEBPACK_IMPORTED_MODULE_7__.Strings.pluralize("commit", context.status.state.behind)} behind`, {
        command: "log",
        state: {
          repo: state.repo,
          reference: _git_git__WEBPACK_IMPORTED_MODULE_3__.GitReference.create(_git_git__WEBPACK_IMPORTED_MODULE_3__.GitRevision.createRange(context.status.ref, context.status.upstream), state.repo.path)
        }
      }));
    }
    if (context.status.state.ahead !== 0) {
      items.push(new _quickpicks__WEBPACK_IMPORTED_MODULE_6__.GitCommandQuickPickItem(`$(cloud-upload) ${_system__WEBPACK_IMPORTED_MODULE_7__.Strings.pluralize("commit", context.status.state.ahead)} ahead`, {
        command: "log",
        state: {
          repo: state.repo,
          reference: _git_git__WEBPACK_IMPORTED_MODULE_3__.GitReference.create(_git_git__WEBPACK_IMPORTED_MODULE_3__.GitRevision.createRange(context.status.upstream, context.status.ref), state.repo.path)
        }
      }));
    }
  } else {
    items.push(_quickpicks__WEBPACK_IMPORTED_MODULE_6__.DirectiveQuickPickItem.create(_quickpicks__WEBPACK_IMPORTED_MODULE_6__.Directive.Noop, true, {
      label: `$(git-branch) ${context.status.branch} has no upstream`,
      detail: workingTreeStatus
    }));
  }
  if (context.status.files.length) {
    items.push(new _quickpicks__WEBPACK_IMPORTED_MODULE_6__.OpenChangedFilesCommandQuickPickItem(computed.stagedAddsAndChanges.concat(computed.unstagedAddsAndChanges)));
  }
  if (computed.staged > 0) {
    items.push(new _quickpicks__WEBPACK_IMPORTED_MODULE_6__.OpenChangedFilesCommandQuickPickItem(computed.stagedAddsAndChanges, {
      label: "$(files) Open Staged Files"
    }));
  }
  if (computed.unstaged > 0) {
    items.push(new _quickpicks__WEBPACK_IMPORTED_MODULE_6__.OpenChangedFilesCommandQuickPickItem(computed.unstagedAddsAndChanges, {
      label: "$(files) Open Unstaged Files"
    }));
  }
  if (context.status.files.length) {
    items.push(new _quickpicks__WEBPACK_IMPORTED_MODULE_6__.CommandQuickPickItem("$(x) Close Unchanged Files", _common__WEBPACK_IMPORTED_MODULE_8__.Commands.CloseUnchangedFiles));
  }
  return items;
}


/***/ }),

/***/ "./src/commands/quickCommand.ts":
/*!**************************************!*\
  !*** ./src/commands/quickCommand.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "QuickCommandButtons": () => (/* reexport safe */ _quickCommand_buttons__WEBPACK_IMPORTED_MODULE_2__.QuickCommandButtons),
/* harmony export */   "SelectableQuickInputButton": () => (/* reexport safe */ _quickCommand_buttons__WEBPACK_IMPORTED_MODULE_2__.SelectableQuickInputButton),
/* harmony export */   "ToggleQuickInputButton": () => (/* reexport safe */ _quickCommand_buttons__WEBPACK_IMPORTED_MODULE_2__.ToggleQuickInputButton),
/* harmony export */   "appendReposToTitle": () => (/* reexport safe */ _quickCommand_steps__WEBPACK_IMPORTED_MODULE_3__.appendReposToTitle),
/* harmony export */   "getBranches": () => (/* reexport safe */ _quickCommand_steps__WEBPACK_IMPORTED_MODULE_3__.getBranches),
/* harmony export */   "getBranchesAndOrTags": () => (/* reexport safe */ _quickCommand_steps__WEBPACK_IMPORTED_MODULE_3__.getBranchesAndOrTags),
/* harmony export */   "getTags": () => (/* reexport safe */ _quickCommand_steps__WEBPACK_IMPORTED_MODULE_3__.getTags),
/* harmony export */   "getValidateGitReferenceFn": () => (/* reexport safe */ _quickCommand_steps__WEBPACK_IMPORTED_MODULE_3__.getValidateGitReferenceFn),
/* harmony export */   "inputBranchNameStep": () => (/* reexport safe */ _quickCommand_steps__WEBPACK_IMPORTED_MODULE_3__.inputBranchNameStep),
/* harmony export */   "inputTagNameStep": () => (/* reexport safe */ _quickCommand_steps__WEBPACK_IMPORTED_MODULE_3__.inputTagNameStep),
/* harmony export */   "pickBranchOrTagStep": () => (/* reexport safe */ _quickCommand_steps__WEBPACK_IMPORTED_MODULE_3__.pickBranchOrTagStep),
/* harmony export */   "pickBranchOrTagStepMultiRepo": () => (/* reexport safe */ _quickCommand_steps__WEBPACK_IMPORTED_MODULE_3__.pickBranchOrTagStepMultiRepo),
/* harmony export */   "pickBranchStep": () => (/* reexport safe */ _quickCommand_steps__WEBPACK_IMPORTED_MODULE_3__.pickBranchStep),
/* harmony export */   "pickBranchesStep": () => (/* reexport safe */ _quickCommand_steps__WEBPACK_IMPORTED_MODULE_3__.pickBranchesStep),
/* harmony export */   "pickCommitStep": () => (/* reexport safe */ _quickCommand_steps__WEBPACK_IMPORTED_MODULE_3__.pickCommitStep),
/* harmony export */   "pickCommitsStep": () => (/* reexport safe */ _quickCommand_steps__WEBPACK_IMPORTED_MODULE_3__.pickCommitsStep),
/* harmony export */   "pickContributorsStep": () => (/* reexport safe */ _quickCommand_steps__WEBPACK_IMPORTED_MODULE_3__.pickContributorsStep),
/* harmony export */   "pickRepositoriesStep": () => (/* reexport safe */ _quickCommand_steps__WEBPACK_IMPORTED_MODULE_3__.pickRepositoriesStep),
/* harmony export */   "pickRepositoryStep": () => (/* reexport safe */ _quickCommand_steps__WEBPACK_IMPORTED_MODULE_3__.pickRepositoryStep),
/* harmony export */   "pickStashStep": () => (/* reexport safe */ _quickCommand_steps__WEBPACK_IMPORTED_MODULE_3__.pickStashStep),
/* harmony export */   "pickTagsStep": () => (/* reexport safe */ _quickCommand_steps__WEBPACK_IMPORTED_MODULE_3__.pickTagsStep),
/* harmony export */   "showCommitOrStashFileStep": () => (/* reexport safe */ _quickCommand_steps__WEBPACK_IMPORTED_MODULE_3__.showCommitOrStashFileStep),
/* harmony export */   "showCommitOrStashFilesStep": () => (/* reexport safe */ _quickCommand_steps__WEBPACK_IMPORTED_MODULE_3__.showCommitOrStashFilesStep),
/* harmony export */   "showCommitOrStashStep": () => (/* reexport safe */ _quickCommand_steps__WEBPACK_IMPORTED_MODULE_3__.showCommitOrStashStep),
/* harmony export */   "showRepositoryStatusStep": () => (/* reexport safe */ _quickCommand_steps__WEBPACK_IMPORTED_MODULE_3__.showRepositoryStatusStep),
/* harmony export */   "isQuickInputStep": () => (/* binding */ isQuickInputStep),
/* harmony export */   "isQuickPickStep": () => (/* binding */ isQuickPickStep),
/* harmony export */   "StepResult": () => (/* binding */ StepResult),
/* harmony export */   "QuickCommand": () => (/* binding */ QuickCommand)
/* harmony export */ });
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../container */ "./src/container.ts");
/* harmony import */ var _quickpicks__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../quickpicks */ "./src/quickpicks.ts");
/* harmony import */ var _quickCommand_buttons__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./quickCommand.buttons */ "./src/commands/quickCommand.buttons.ts");
/* harmony import */ var _quickCommand_steps__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./quickCommand.steps */ "./src/commands/quickCommand.steps.ts");

var __defProp = Object.defineProperty;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};




function isQuickInputStep(step) {
  return typeof step === "object" && step.items == null;
}
function isQuickPickStep(step) {
  return typeof step === "object" && step.items != null;
}
var StepResult;
(function(StepResult2) {
  StepResult2.Break = Symbol("BreakStep");
})(StepResult || (StepResult = {}));
class QuickCommand {
  constructor(key, label, title, options = {}) {
    this.key = key;
    this.label = label;
    this.title = title;
    __publicField(this, "description");
    __publicField(this, "detail");
    __publicField(this, "initialState");
    __publicField(this, "_currentStep");
    __publicField(this, "_stepsIterator");
    __publicField(this, "_picked", false);
    __publicField(this, "_pickedVia", "menu");
    this.description = options.description;
    this.detail = options.detail;
  }
  get canConfirm() {
    return true;
  }
  get canSkipConfirm() {
    return true;
  }
  get picked() {
    return this._picked;
  }
  set picked(value) {
    this._picked = value;
    if (!value) {
      this._pickedVia = "menu";
    }
  }
  get pickedVia() {
    return this._pickedVia;
  }
  set pickedVia(value) {
    this._pickedVia = value;
  }
  get skipConfirmKey() {
    return `${this.key}:${this.pickedVia}`;
  }
  get value() {
    return this._currentStep;
  }
  confirm(override) {
    if (!this.canConfirm || !this.canSkipConfirm)
      return true;
    return override != null ? override : !_container__WEBPACK_IMPORTED_MODULE_0__.Container.config.gitCommands.skipConfirmations.includes(this.skipConfirmKey);
  }
  isMatch(key) {
    return this.key === key;
  }
  isFuzzyMatch(name) {
    return this.label === name;
  }
  executeSteps() {
    return this.steps(this.getStepState(true));
  }
  async previous() {
    return (await this.next(_quickpicks__WEBPACK_IMPORTED_MODULE_1__.Directive.Back)).value;
  }
  async next(value) {
    if (this._stepsIterator == null) {
      this._stepsIterator = this.steps(this.getStepState(false));
    }
    const result = await this._stepsIterator.next(value);
    if (result.done) {
      this.initialState = void 0;
      this._stepsIterator = void 0;
    }
    if (result.value === StepResult.Break) {
      this._currentStep = void 0;
      return { ...result, value: void 0 };
    }
    this._currentStep = result.value;
    return result;
  }
  async retry() {
    await this.next(_quickpicks__WEBPACK_IMPORTED_MODULE_1__.Directive.Back);
    await this.next();
    return this.value;
  }
  canStepsContinue(state) {
    var _a;
    return state.counter >= ((_a = state.startingStep) != null ? _a : 0);
  }
  createConfirmStep(title, confirmations, cancel, options = {}) {
    return QuickCommand.createConfirmStep(title, confirmations, { title: this.title }, cancel, options);
  }
  getStepState(limitBackNavigation) {
    var _a, _b;
    return {
      counter: 0,
      ...this.initialState,
      startingStep: limitBackNavigation ? (_b = (_a = this.initialState) == null ? void 0 : _a.counter) != null ? _b : 0 : 0
    };
  }
}
(function(QuickCommand2) {
  function is(item) {
    return item instanceof QuickCommand2;
  }
  QuickCommand2.is = is;
  async function canInputStepContinue(step, state, value) {
    var _a, _b;
    if (!canStepContinue(step, state, value))
      return false;
    const [valid] = (_b = await ((_a = step.validate) == null ? void 0 : _a.call(step, value))) != null ? _b : [true];
    if (valid) {
      state.counter++;
      return true;
    }
    return false;
  }
  QuickCommand2.canInputStepContinue = canInputStepContinue;
  function canPickStepContinue(step, state, selection) {
    var _a, _b;
    if (!canStepContinue(step, state, selection))
      return false;
    if ((_b = (_a = step.validate) == null ? void 0 : _a.call(step, selection)) != null ? _b : true) {
      state.counter++;
      return true;
    }
    return false;
  }
  QuickCommand2.canPickStepContinue = canPickStepContinue;
  function canStepContinue(step, state, result) {
    var _a;
    if (result == null)
      return false;
    if (_quickpicks__WEBPACK_IMPORTED_MODULE_1__.Directive.is(result)) {
      switch (result) {
        case _quickpicks__WEBPACK_IMPORTED_MODULE_1__.Directive.Back:
          state.counter--;
          if (state.counter <= ((_a = state.startingStep) != null ? _a : 0)) {
            state.counter = 0;
          }
          break;
        case _quickpicks__WEBPACK_IMPORTED_MODULE_1__.Directive.Cancel:
          endSteps(state);
          break;
        case _quickpicks__WEBPACK_IMPORTED_MODULE_1__.Directive.Noop:
          break;
      }
      return false;
    }
    return true;
  }
  QuickCommand2.canStepContinue = canStepContinue;
  function createConfirmStep(title, confirmations, context, cancel, options = {}) {
    var _a;
    return createPickStep({
      placeholder: `Confirm ${context.title}`,
      title,
      ignoreFocusOut: true,
      items: [...confirmations, cancel != null ? cancel : _quickpicks__WEBPACK_IMPORTED_MODULE_1__.DirectiveQuickPickItem.create(_quickpicks__WEBPACK_IMPORTED_MODULE_1__.Directive.Cancel)],
      selectedItems: [(_a = confirmations.find((c) => c.picked)) != null ? _a : confirmations[0]],
      ...options
    });
  }
  QuickCommand2.createConfirmStep = createConfirmStep;
  function createInputStep(step) {
    step.ignoreFocusOut = true;
    return step;
  }
  QuickCommand2.createInputStep = createInputStep;
  function createPickStep(step) {
    return step;
  }
  QuickCommand2.createPickStep = createPickStep;
  function endSteps(state) {
    state.counter = -1;
  }
  QuickCommand2.endSteps = endSteps;
})(QuickCommand || (QuickCommand = {}));


/***/ }),

/***/ "./src/commands/rebaseEditor.ts":
/*!**************************************!*\
  !*** ./src/commands/rebaseEditor.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DisableRebaseEditorCommand": () => (/* binding */ DisableRebaseEditorCommand),
/* harmony export */   "EnableRebaseEditorCommand": () => (/* binding */ EnableRebaseEditorCommand)
/* harmony export */ });
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../container */ "./src/container.ts");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./common */ "./src/commands/common.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};


let DisableRebaseEditorCommand = class extends _common__WEBPACK_IMPORTED_MODULE_1__.Command {
  constructor() {
    super(_common__WEBPACK_IMPORTED_MODULE_1__.Commands.DisableRebaseEditor);
  }
  execute() {
    return _container__WEBPACK_IMPORTED_MODULE_0__.Container.rebaseEditor.setEnabled(false);
  }
};
DisableRebaseEditorCommand = __decorateClass([
  (0,_common__WEBPACK_IMPORTED_MODULE_1__.command)()
], DisableRebaseEditorCommand);
let EnableRebaseEditorCommand = class extends _common__WEBPACK_IMPORTED_MODULE_1__.Command {
  constructor() {
    super(_common__WEBPACK_IMPORTED_MODULE_1__.Commands.EnableRebaseEditor);
  }
  execute() {
    return _container__WEBPACK_IMPORTED_MODULE_0__.Container.rebaseEditor.setEnabled(true);
  }
};
EnableRebaseEditorCommand = __decorateClass([
  (0,_common__WEBPACK_IMPORTED_MODULE_1__.command)()
], EnableRebaseEditorCommand);


/***/ }),

/***/ "./src/commands/refreshHover.ts":
/*!**************************************!*\
  !*** ./src/commands/refreshHover.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "RefreshHoverCommand": () => (/* binding */ RefreshHoverCommand)
/* harmony export */ });
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./common */ "./src/commands/common.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};


let RefreshHoverCommand = class extends _common__WEBPACK_IMPORTED_MODULE_1__.Command {
  constructor() {
    super(_common__WEBPACK_IMPORTED_MODULE_1__.Commands.RefreshHover);
  }
  async execute() {
    await vscode__WEBPACK_IMPORTED_MODULE_0__.commands.executeCommand("editor.action.showHover");
  }
};
RefreshHoverCommand = __decorateClass([
  (0,_common__WEBPACK_IMPORTED_MODULE_1__.command)()
], RefreshHoverCommand);


/***/ }),

/***/ "./src/commands/remoteProviders.ts":
/*!*****************************************!*\
  !*** ./src/commands/remoteProviders.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ConnectRemoteProviderCommand": () => (/* binding */ ConnectRemoteProviderCommand),
/* harmony export */   "DisconnectRemoteProviderCommand": () => (/* binding */ DisconnectRemoteProviderCommand)
/* harmony export */ });
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../container */ "./src/container.ts");
/* harmony import */ var _git_git__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../git/git */ "./src/git/git.ts");
/* harmony import */ var _quickpicks_repositoryPicker__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../quickpicks/repositoryPicker */ "./src/quickpicks/repositoryPicker.ts");
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../system */ "./src/system.ts");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./common */ "./src/commands/common.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};





let ConnectRemoteProviderCommand = class extends _common__WEBPACK_IMPORTED_MODULE_4__.Command {
  static getMarkdownCommandArgs(argsOrRemote) {
    let args;
    if (_git_git__WEBPACK_IMPORTED_MODULE_1__.GitRemote.is(argsOrRemote)) {
      args = {
        remote: argsOrRemote.id,
        repoPath: argsOrRemote.repoPath
      };
    } else {
      args = argsOrRemote;
    }
    return super.getMarkdownCommandArgsCore(_common__WEBPACK_IMPORTED_MODULE_4__.Commands.ConnectRemoteProvider, args);
  }
  constructor() {
    super(_common__WEBPACK_IMPORTED_MODULE_4__.Commands.ConnectRemoteProvider);
  }
  preExecute(context, args) {
    if ((0,_common__WEBPACK_IMPORTED_MODULE_4__.isCommandContextViewNodeHasRemote)(context)) {
      args = { ...args, remote: context.node.remote.id, repoPath: context.node.remote.repoPath };
    }
    return this.execute(args);
  }
  async execute(args) {
    let remote;
    let remotes;
    let repoPath;
    if ((args == null ? void 0 : args.repoPath) == null) {
      const repos = new Map();
      for (const repo of await _container__WEBPACK_IMPORTED_MODULE_0__.Container.git.getOrderedRepositories()) {
        const remote2 = await repo.getRichRemote();
        if ((remote2 == null ? void 0 : remote2.provider) != null && !await remote2.provider.isConnected()) {
          repos.set(repo, remote2);
        }
      }
      if (repos.size === 0)
        return false;
      if (repos.size === 1) {
        let repo;
        [repo, remote] = _system__WEBPACK_IMPORTED_MODULE_3__.Iterables.first(repos);
        repoPath = repo.path;
      } else {
        const pick = await _quickpicks_repositoryPicker__WEBPACK_IMPORTED_MODULE_2__.RepositoryPicker.show(void 0, "Choose which repository to connect to the remote provider", [...repos.keys()]);
        if ((pick == null ? void 0 : pick.item) == null)
          return void 0;
        repoPath = pick.repoPath;
        remote = repos.get(pick.item);
      }
    } else if ((args == null ? void 0 : args.remote) == null) {
      repoPath = args.repoPath;
      remote = await _container__WEBPACK_IMPORTED_MODULE_0__.Container.git.getRichRemoteProvider(repoPath, { includeDisconnected: true });
      if (remote == null)
        return false;
    } else {
      repoPath = args.repoPath;
      remotes = await _container__WEBPACK_IMPORTED_MODULE_0__.Container.git.getRemotes(repoPath);
      remote = remotes.find((r) => r.id === args.remote);
      if (!(remote == null ? void 0 : remote.provider.hasApi()))
        return false;
    }
    const connected = await remote.provider.connect();
    if (connected && !(remotes != null ? remotes : await _container__WEBPACK_IMPORTED_MODULE_0__.Container.git.getRemotes(repoPath)).some((r) => r.default)) {
      await remote.setAsDefault(true);
    }
    return connected;
  }
};
ConnectRemoteProviderCommand = __decorateClass([
  (0,_common__WEBPACK_IMPORTED_MODULE_4__.command)()
], ConnectRemoteProviderCommand);
let DisconnectRemoteProviderCommand = class extends _common__WEBPACK_IMPORTED_MODULE_4__.Command {
  static getMarkdownCommandArgs(argsOrRemote) {
    let args;
    if (_git_git__WEBPACK_IMPORTED_MODULE_1__.GitRemote.is(argsOrRemote)) {
      args = {
        remote: argsOrRemote.id,
        repoPath: argsOrRemote.repoPath
      };
    } else {
      args = argsOrRemote;
    }
    return super.getMarkdownCommandArgsCore(_common__WEBPACK_IMPORTED_MODULE_4__.Commands.DisconnectRemoteProvider, args);
  }
  constructor() {
    super(_common__WEBPACK_IMPORTED_MODULE_4__.Commands.DisconnectRemoteProvider);
  }
  preExecute(context, args) {
    if ((0,_common__WEBPACK_IMPORTED_MODULE_4__.isCommandContextViewNodeHasRemote)(context)) {
      args = { ...args, remote: context.node.remote.id, repoPath: context.node.remote.repoPath };
    }
    return this.execute(args);
  }
  async execute(args) {
    let remote;
    let repoPath;
    if ((args == null ? void 0 : args.repoPath) == null) {
      const repos = new Map();
      for (const repo of await _container__WEBPACK_IMPORTED_MODULE_0__.Container.git.getOrderedRepositories()) {
        const remote2 = await repo.getRichRemote(true);
        if (remote2 != null) {
          repos.set(repo, remote2);
        }
      }
      if (repos.size === 0)
        return void 0;
      if (repos.size === 1) {
        let repo;
        [repo, remote] = _system__WEBPACK_IMPORTED_MODULE_3__.Iterables.first(repos);
        repoPath = repo.path;
      } else {
        const pick = await _quickpicks_repositoryPicker__WEBPACK_IMPORTED_MODULE_2__.RepositoryPicker.show(void 0, "Choose which repository to disconnect from the remote provider", [...repos.keys()]);
        if ((pick == null ? void 0 : pick.item) == null)
          return void 0;
        repoPath = pick.repoPath;
        remote = repos.get(pick.item);
      }
    } else if ((args == null ? void 0 : args.remote) == null) {
      repoPath = args.repoPath;
      remote = await _container__WEBPACK_IMPORTED_MODULE_0__.Container.git.getRichRemoteProvider(repoPath, { includeDisconnected: false });
      if (remote == null)
        return void 0;
    } else {
      repoPath = args.repoPath;
      remote = (await _container__WEBPACK_IMPORTED_MODULE_0__.Container.git.getRemotes(repoPath)).find((r) => r.id === args.remote);
      if (!(remote == null ? void 0 : remote.provider.hasApi()))
        return void 0;
    }
    return remote.provider.disconnect();
  }
};
DisconnectRemoteProviderCommand = __decorateClass([
  (0,_common__WEBPACK_IMPORTED_MODULE_4__.command)()
], DisconnectRemoteProviderCommand);


/***/ }),

/***/ "./src/commands/repositories.ts":
/*!**************************************!*\
  !*** ./src/commands/repositories.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "FetchRepositoriesCommand": () => (/* binding */ FetchRepositoriesCommand),
/* harmony export */   "PullRepositoriesCommand": () => (/* binding */ PullRepositoriesCommand),
/* harmony export */   "PushRepositoriesCommand": () => (/* binding */ PushRepositoriesCommand)
/* harmony export */ });
/* harmony import */ var _commands__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../commands */ "./src/commands.ts");
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../container */ "./src/container.ts");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./common */ "./src/commands/common.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};



let FetchRepositoriesCommand = class extends _common__WEBPACK_IMPORTED_MODULE_2__.Command {
  constructor() {
    super(_common__WEBPACK_IMPORTED_MODULE_2__.Commands.FetchRepositories);
  }
  async execute() {
    return (0,_commands__WEBPACK_IMPORTED_MODULE_0__.executeGitCommand)({ command: "fetch", state: { repos: await _container__WEBPACK_IMPORTED_MODULE_1__.Container.git.getOrderedRepositories() } });
  }
};
FetchRepositoriesCommand = __decorateClass([
  (0,_common__WEBPACK_IMPORTED_MODULE_2__.command)()
], FetchRepositoriesCommand);
let PullRepositoriesCommand = class extends _common__WEBPACK_IMPORTED_MODULE_2__.Command {
  constructor() {
    super(_common__WEBPACK_IMPORTED_MODULE_2__.Commands.PullRepositories);
  }
  async execute() {
    return (0,_commands__WEBPACK_IMPORTED_MODULE_0__.executeGitCommand)({ command: "pull", state: { repos: await _container__WEBPACK_IMPORTED_MODULE_1__.Container.git.getOrderedRepositories() } });
  }
};
PullRepositoriesCommand = __decorateClass([
  (0,_common__WEBPACK_IMPORTED_MODULE_2__.command)()
], PullRepositoriesCommand);
let PushRepositoriesCommand = class extends _common__WEBPACK_IMPORTED_MODULE_2__.Command {
  constructor() {
    super(_common__WEBPACK_IMPORTED_MODULE_2__.Commands.PushRepositories);
  }
  async execute() {
    return (0,_commands__WEBPACK_IMPORTED_MODULE_0__.executeGitCommand)({ command: "push", state: { repos: await _container__WEBPACK_IMPORTED_MODULE_1__.Container.git.getOrderedRepositories() } });
  }
};
PushRepositoriesCommand = __decorateClass([
  (0,_common__WEBPACK_IMPORTED_MODULE_2__.command)()
], PushRepositoriesCommand);


/***/ }),

/***/ "./src/commands/resetAvatarCache.ts":
/*!******************************************!*\
  !*** ./src/commands/resetAvatarCache.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ResetAvatarCacheCommand": () => (/* binding */ ResetAvatarCacheCommand)
/* harmony export */ });
/* harmony import */ var _avatars__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../avatars */ "./src/avatars.ts");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./common */ "./src/commands/common.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};


let ResetAvatarCacheCommand = class extends _common__WEBPACK_IMPORTED_MODULE_1__.Command {
  constructor() {
    super(_common__WEBPACK_IMPORTED_MODULE_1__.Commands.ResetAvatarCache);
  }
  execute() {
    (0,_avatars__WEBPACK_IMPORTED_MODULE_0__.resetAvatarCache)("all");
  }
};
ResetAvatarCacheCommand = __decorateClass([
  (0,_common__WEBPACK_IMPORTED_MODULE_1__.command)()
], ResetAvatarCacheCommand);


/***/ }),

/***/ "./src/commands/resetSuppressedWarnings.ts":
/*!*************************************************!*\
  !*** ./src/commands/resetSuppressedWarnings.ts ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ResetSuppressedWarningsCommand": () => (/* binding */ ResetSuppressedWarningsCommand)
/* harmony export */ });
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _configuration__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../configuration */ "./src/configuration.ts");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./common */ "./src/commands/common.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};



let ResetSuppressedWarningsCommand = class extends _common__WEBPACK_IMPORTED_MODULE_2__.Command {
  constructor() {
    super(_common__WEBPACK_IMPORTED_MODULE_2__.Commands.ResetSuppressedWarnings);
  }
  async execute() {
    void await _configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.update("advanced.messages", void 0, vscode__WEBPACK_IMPORTED_MODULE_0__.ConfigurationTarget.Global);
  }
};
ResetSuppressedWarningsCommand = __decorateClass([
  (0,_common__WEBPACK_IMPORTED_MODULE_2__.command)()
], ResetSuppressedWarningsCommand);


/***/ }),

/***/ "./src/commands/searchCommits.ts":
/*!***************************************!*\
  !*** ./src/commands/searchCommits.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SearchCommitsCommand": () => (/* binding */ SearchCommitsCommand)
/* harmony export */ });
/* harmony import */ var _commands__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../commands */ "./src/commands.ts");
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../container */ "./src/container.ts");
/* harmony import */ var _views_nodes__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../views/nodes */ "./src/views/nodes.ts");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./common */ "./src/commands/common.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};




let SearchCommitsCommand = class extends _common__WEBPACK_IMPORTED_MODULE_3__.Command {
  constructor() {
    super([_common__WEBPACK_IMPORTED_MODULE_3__.Commands.SearchCommits, _common__WEBPACK_IMPORTED_MODULE_3__.Commands.SearchCommitsInView]);
  }
  preExecute(context, args) {
    if (context.type === "viewItem") {
      args = { ...args };
      args.showResultsInSideBar = true;
      if (context.node instanceof _views_nodes__WEBPACK_IMPORTED_MODULE_2__.SearchResultsNode) {
        args.repoPath = context.node.repoPath;
        args.search = context.node.search;
        args.prefillOnly = true;
      }
      if ((0,_common__WEBPACK_IMPORTED_MODULE_3__.isCommandContextViewNodeHasRepository)(context)) {
        args.repoPath = context.node.repo.path;
      }
    } else if (context.command === _common__WEBPACK_IMPORTED_MODULE_3__.Commands.SearchCommitsInView) {
      args = { ...args };
      args.showResultsInSideBar = true;
    }
    return this.execute(args);
  }
  async execute(args) {
    var _a;
    void await (0,_commands__WEBPACK_IMPORTED_MODULE_0__.executeGitCommand)({
      command: "search",
      prefillOnly: args == null ? void 0 : args.prefillOnly,
      state: {
        repo: args == null ? void 0 : args.repoPath,
        ...args == null ? void 0 : args.search,
        showResultsInSideBar: (_a = _container__WEBPACK_IMPORTED_MODULE_1__.Container.config.gitCommands.search.showResultsInSideBar) != null ? _a : args == null ? void 0 : args.showResultsInSideBar
      }
    });
  }
};
SearchCommitsCommand = __decorateClass([
  (0,_common__WEBPACK_IMPORTED_MODULE_3__.command)()
], SearchCommitsCommand);


/***/ }),

/***/ "./src/commands/setViewsLayout.ts":
/*!****************************************!*\
  !*** ./src/commands/setViewsLayout.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SetViewsLayoutCommand": () => (/* binding */ SetViewsLayoutCommand)
/* harmony export */ });
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _configuration__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../configuration */ "./src/configuration.ts");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./common */ "./src/commands/common.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};



var ViewsLayout;
(function(ViewsLayout2) {
  ViewsLayout2["GitLens"] = "gitlens";
  ViewsLayout2["SourceControl"] = "scm";
})(ViewsLayout || (ViewsLayout = {}));
let SetViewsLayoutCommand = class extends _common__WEBPACK_IMPORTED_MODULE_2__.Command {
  constructor() {
    super(_common__WEBPACK_IMPORTED_MODULE_2__.Commands.SetViewsLayout);
  }
  async execute(args) {
    let layout = args == null ? void 0 : args.layout;
    if (layout == null) {
      const pick = await vscode__WEBPACK_IMPORTED_MODULE_0__.window.showQuickPick([
        {
          label: "Source Control Layout",
          description: "(default)",
          detail: "Shows all the views together on the Source Control side bar",
          layout: ViewsLayout.SourceControl
        },
        {
          label: "GitLens Layout",
          description: "",
          detail: "Shows all the views together on the GitLens side bar",
          layout: ViewsLayout.GitLens
        }
      ], {
        placeHolder: "Choose a GitLens views layout"
      });
      if (pick == null)
        return;
      layout = pick.layout;
    }
    switch (layout) {
      case ViewsLayout.GitLens:
        try {
          let count = 0;
          while (count++ < 2) {
            void await vscode__WEBPACK_IMPORTED_MODULE_0__.commands.executeCommand("vscode.moveViews", {
              viewIds: _configuration__WEBPACK_IMPORTED_MODULE_1__.viewsConfigKeys.map((view) => `gitlens.views.${view}`),
              destinationId: "workbench.view.extension.gitlens"
            });
          }
        } catch {
        }
        break;
      case ViewsLayout.SourceControl:
        try {
          let count = 0;
          while (count++ < 2) {
            void await vscode__WEBPACK_IMPORTED_MODULE_0__.commands.executeCommand("vscode.moveViews", {
              viewIds: _configuration__WEBPACK_IMPORTED_MODULE_1__.viewsConfigKeys.map((view) => `gitlens.views.${view}`),
              destinationId: "workbench.view.scm"
            });
          }
        } catch {
          for (const view of _configuration__WEBPACK_IMPORTED_MODULE_1__.viewsConfigKeys) {
            void await vscode__WEBPACK_IMPORTED_MODULE_0__.commands.executeCommand(`gitlens.views.${view}.resetViewLocation`);
          }
        }
        break;
    }
  }
};
SetViewsLayoutCommand = __decorateClass([
  (0,_common__WEBPACK_IMPORTED_MODULE_2__.command)()
], SetViewsLayoutCommand);


/***/ }),

/***/ "./src/commands/showCommitsInView.ts":
/*!*******************************************!*\
  !*** ./src/commands/showCommitsInView.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ShowCommitsInViewCommand": () => (/* binding */ ShowCommitsInViewCommand)
/* harmony export */ });
/* harmony import */ var _commands__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../commands */ "./src/commands.ts");
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../container */ "./src/container.ts");
/* harmony import */ var _git_git__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../git/git */ "./src/git/git.ts");
/* harmony import */ var _git_gitUri__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../git/gitUri */ "./src/git/gitUri.ts");
/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../logger */ "./src/logger.ts");
/* harmony import */ var _messages__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../messages */ "./src/messages.ts");
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../system */ "./src/system.ts");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./common */ "./src/commands/common.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};








let ShowCommitsInViewCommand = class extends _common__WEBPACK_IMPORTED_MODULE_7__.ActiveEditorCommand {
  constructor() {
    super([_common__WEBPACK_IMPORTED_MODULE_7__.Commands.ShowCommitInView, _common__WEBPACK_IMPORTED_MODULE_7__.Commands.ShowCommitsInView]);
  }
  async execute(editor, uri, args) {
    args = { ...args };
    if (args.refs === void 0) {
      uri = (0,_common__WEBPACK_IMPORTED_MODULE_7__.getCommandUri)(uri, editor);
      if (uri == null)
        return void 0;
      const gitUri = await _git_gitUri__WEBPACK_IMPORTED_MODULE_3__.GitUri.fromUri(uri);
      args.repoPath = gitUri.repoPath;
      if (editor != null) {
        try {
          const blame = editor.document.isDirty ? await _container__WEBPACK_IMPORTED_MODULE_1__.Container.git.getBlameForRangeContents(gitUri, editor.selection, editor.document.getText()) : await _container__WEBPACK_IMPORTED_MODULE_1__.Container.git.getBlameForRange(gitUri, editor.selection);
          if (blame === void 0) {
            return _messages__WEBPACK_IMPORTED_MODULE_5__.Messages.showFileNotUnderSourceControlWarningMessage("Unable to find commits");
          }
          args.refs = [
            ..._system__WEBPACK_IMPORTED_MODULE_6__.Iterables.filterMap(blame.commits.values(), (c) => c.isUncommitted ? void 0 : c.ref)
          ];
        } catch (ex) {
          _logger__WEBPACK_IMPORTED_MODULE_4__.Logger.error(ex, "ShowCommitsInViewCommand", "getBlameForRange");
          return _messages__WEBPACK_IMPORTED_MODULE_5__.Messages.showGenericErrorMessage("Unable to find commits");
        }
      } else {
        if (gitUri.sha == null)
          return void 0;
        args.refs = [gitUri.sha];
      }
    }
    return (0,_commands__WEBPACK_IMPORTED_MODULE_0__.executeGitCommand)({
      command: "search",
      state: {
        repo: args == null ? void 0 : args.repoPath,
        pattern: _git_git__WEBPACK_IMPORTED_MODULE_2__.SearchPattern.fromCommits(args.refs),
        showResultsInSideBar: true
      }
    });
  }
};
ShowCommitsInViewCommand = __decorateClass([
  (0,_common__WEBPACK_IMPORTED_MODULE_7__.command)()
], ShowCommitsInViewCommand);


/***/ }),

/***/ "./src/commands/showLastQuickPick.ts":
/*!*******************************************!*\
  !*** ./src/commands/showLastQuickPick.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ShowLastQuickPickCommand": () => (/* binding */ ShowLastQuickPickCommand)
/* harmony export */ });
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../logger */ "./src/logger.ts");
/* harmony import */ var _messages__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../messages */ "./src/messages.ts");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./common */ "./src/commands/common.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};




let ShowLastQuickPickCommand = class extends _common__WEBPACK_IMPORTED_MODULE_3__.Command {
  constructor() {
    super(_common__WEBPACK_IMPORTED_MODULE_3__.Commands.ShowLastQuickPick);
  }
  execute() {
    const command2 = (0,_common__WEBPACK_IMPORTED_MODULE_3__.getLastCommand)();
    if (command2 === void 0)
      return Promise.resolve(void 0);
    try {
      return vscode__WEBPACK_IMPORTED_MODULE_0__.commands.executeCommand(command2.command, ...command2.args);
    } catch (ex) {
      _logger__WEBPACK_IMPORTED_MODULE_1__.Logger.error(ex, "ShowLastQuickPickCommand");
      return _messages__WEBPACK_IMPORTED_MODULE_2__.Messages.showGenericErrorMessage("Unable to show last quick pick");
    }
  }
};
ShowLastQuickPickCommand = __decorateClass([
  (0,_common__WEBPACK_IMPORTED_MODULE_3__.command)()
], ShowLastQuickPickCommand);


/***/ }),

/***/ "./src/commands/showQuickBranchHistory.ts":
/*!************************************************!*\
  !*** ./src/commands/showQuickBranchHistory.ts ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ShowQuickBranchHistoryCommand": () => (/* binding */ ShowQuickBranchHistoryCommand)
/* harmony export */ });
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../container */ "./src/container.ts");
/* harmony import */ var _git_git__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../git/git */ "./src/git/git.ts");
/* harmony import */ var _git_gitUri__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../git/gitUri */ "./src/git/gitUri.ts");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./common */ "./src/commands/common.ts");
/* harmony import */ var _gitCommands__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./gitCommands */ "./src/commands/gitCommands.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};





let ShowQuickBranchHistoryCommand = class extends _common__WEBPACK_IMPORTED_MODULE_3__.ActiveEditorCachedCommand {
  constructor() {
    super([_common__WEBPACK_IMPORTED_MODULE_3__.Commands.ShowQuickBranchHistory, _common__WEBPACK_IMPORTED_MODULE_3__.Commands.ShowQuickCurrentBranchHistory]);
  }
  preExecute(context, args) {
    if (context.command === _common__WEBPACK_IMPORTED_MODULE_3__.Commands.ShowQuickCurrentBranchHistory) {
      args = { ...args };
      args.branch = "HEAD";
    }
    return this.execute(context.editor, context.uri, args);
  }
  async execute(editor, uri, args) {
    var _a, _b;
    uri = (0,_common__WEBPACK_IMPORTED_MODULE_3__.getCommandUri)(uri, editor);
    const gitUri = uri != null ? await _git_gitUri__WEBPACK_IMPORTED_MODULE_2__.GitUri.fromUri(uri) : void 0;
    const repoPath = (_b = (_a = args == null ? void 0 : args.repoPath) != null ? _a : gitUri == null ? void 0 : gitUri.repoPath) != null ? _b : _container__WEBPACK_IMPORTED_MODULE_0__.Container.git.getHighlanderRepoPath();
    let ref;
    if (repoPath != null) {
      if ((args == null ? void 0 : args.branch) != null) {
        ref = args.branch === "HEAD" ? "HEAD" : _git_git__WEBPACK_IMPORTED_MODULE_1__.GitReference.create(args.branch, repoPath, {
          refType: "branch",
          name: args.branch,
          remote: false
        });
      } else if ((args == null ? void 0 : args.tag) != null) {
        ref = _git_git__WEBPACK_IMPORTED_MODULE_1__.GitReference.create(args.tag, repoPath, { refType: "tag", name: args.tag });
      }
    }
    return (0,_gitCommands__WEBPACK_IMPORTED_MODULE_4__.executeGitCommand)({
      command: "log",
      state: repoPath != null ? { repo: repoPath, reference: ref } : {}
    });
  }
};
ShowQuickBranchHistoryCommand = __decorateClass([
  (0,_common__WEBPACK_IMPORTED_MODULE_3__.command)()
], ShowQuickBranchHistoryCommand);


/***/ }),

/***/ "./src/commands/showQuickCommit.ts":
/*!*****************************************!*\
  !*** ./src/commands/showQuickCommit.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ShowQuickCommitCommand": () => (/* binding */ ShowQuickCommitCommand)
/* harmony export */ });
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../container */ "./src/container.ts");
/* harmony import */ var _git_gitUri__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../git/gitUri */ "./src/git/gitUri.ts");
/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../logger */ "./src/logger.ts");
/* harmony import */ var _messages__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../messages */ "./src/messages.ts");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./common */ "./src/commands/common.ts");
/* harmony import */ var _gitCommands__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./gitCommands */ "./src/commands/gitCommands.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};






let ShowQuickCommitCommand = class extends _common__WEBPACK_IMPORTED_MODULE_4__.ActiveEditorCachedCommand {
  static getMarkdownCommandArgs(argsOrSha, repoPath) {
    const args = typeof argsOrSha === "string" ? { sha: argsOrSha, repoPath } : argsOrSha;
    return super.getMarkdownCommandArgsCore(_common__WEBPACK_IMPORTED_MODULE_4__.Commands.ShowQuickCommit, args);
  }
  constructor() {
    super([_common__WEBPACK_IMPORTED_MODULE_4__.Commands.RevealCommitInView, _common__WEBPACK_IMPORTED_MODULE_4__.Commands.ShowQuickCommit]);
  }
  preExecute(context, args) {
    if (context.command === _common__WEBPACK_IMPORTED_MODULE_4__.Commands.RevealCommitInView) {
      args = { ...args };
      args.revealInView = true;
    }
    if (context.type === "viewItem") {
      args = { ...args };
      args.sha = context.node.uri.sha;
      if ((0,_common__WEBPACK_IMPORTED_MODULE_4__.isCommandContextViewNodeHasCommit)(context)) {
        args.commit = context.node.commit;
      }
    }
    return this.execute(context.editor, context.uri, args);
  }
  async execute(editor, uri, args) {
    let gitUri;
    let repoPath;
    if ((args == null ? void 0 : args.commit) == null) {
      if ((args == null ? void 0 : args.repoPath) != null && args.sha != null) {
        repoPath = args.repoPath;
        gitUri = _git_gitUri__WEBPACK_IMPORTED_MODULE_1__.GitUri.fromRepoPath(repoPath);
      } else {
        uri = (0,_common__WEBPACK_IMPORTED_MODULE_4__.getCommandUri)(uri, editor);
        if (uri == null)
          return;
        gitUri = await _git_gitUri__WEBPACK_IMPORTED_MODULE_1__.GitUri.fromUri(uri);
        repoPath = gitUri.repoPath;
      }
    } else {
      if (args.sha == null) {
        args.sha = args.commit.sha;
      }
      gitUri = args.commit.toGitUri();
      repoPath = args.commit.repoPath;
      if (uri == null) {
        uri = args.commit.uri;
      }
    }
    args = { ...args };
    if (args.sha == null) {
      if (editor == null)
        return;
      const blameline = editor.selection.active.line;
      if (blameline < 0)
        return;
      try {
        const blame = await _container__WEBPACK_IMPORTED_MODULE_0__.Container.git.getBlameForLine(gitUri, blameline);
        if (blame == null) {
          void _messages__WEBPACK_IMPORTED_MODULE_3__.Messages.showFileNotUnderSourceControlWarningMessage("Unable to show commit");
          return;
        }
        if (blame.commit.isUncommitted) {
          void _messages__WEBPACK_IMPORTED_MODULE_3__.Messages.showLineUncommittedWarningMessage("Unable to show commit");
          return;
        }
        args.sha = blame.commit.sha;
        repoPath = blame.commit.repoPath;
        args.commit = blame.commit;
      } catch (ex) {
        _logger__WEBPACK_IMPORTED_MODULE_2__.Logger.error(ex, "ShowQuickCommitCommand", `getBlameForLine(${blameline})`);
        void _messages__WEBPACK_IMPORTED_MODULE_3__.Messages.showGenericErrorMessage("Unable to show commit");
        return;
      }
    }
    try {
      if (args.commit == null || args.commit.isFile) {
        if (args.repoLog != null) {
          args.commit = args.repoLog.commits.get(args.sha);
          if (args.commit == null) {
            args.repoLog = void 0;
          }
        }
        if (args.repoLog == null) {
          args.commit = await _container__WEBPACK_IMPORTED_MODULE_0__.Container.git.getCommit(repoPath, args.sha);
        }
      }
      if (args.commit == null) {
        void _messages__WEBPACK_IMPORTED_MODULE_3__.Messages.showCommitNotFoundWarningMessage("Unable to show commit");
        return;
      }
      if (args.revealInView) {
        void await _gitCommands__WEBPACK_IMPORTED_MODULE_5__.GitActions.Commit.reveal(args.commit, {
          select: true,
          focus: true,
          expand: true
        });
        return;
      }
      void await (0,_gitCommands__WEBPACK_IMPORTED_MODULE_5__.executeGitCommand)({
        command: "show",
        state: {
          repo: repoPath,
          reference: args.commit
        }
      });
    } catch (ex) {
      _logger__WEBPACK_IMPORTED_MODULE_2__.Logger.error(ex, "ShowQuickCommitCommand");
      void _messages__WEBPACK_IMPORTED_MODULE_3__.Messages.showGenericErrorMessage("Unable to show commit");
    }
  }
};
ShowQuickCommitCommand = __decorateClass([
  (0,_common__WEBPACK_IMPORTED_MODULE_4__.command)()
], ShowQuickCommitCommand);


/***/ }),

/***/ "./src/commands/showQuickCommitFile.ts":
/*!*********************************************!*\
  !*** ./src/commands/showQuickCommitFile.ts ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ShowQuickCommitFileCommand": () => (/* binding */ ShowQuickCommitFileCommand)
/* harmony export */ });
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../container */ "./src/container.ts");
/* harmony import */ var _git_git__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../git/git */ "./src/git/git.ts");
/* harmony import */ var _git_gitUri__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../git/gitUri */ "./src/git/gitUri.ts");
/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../logger */ "./src/logger.ts");
/* harmony import */ var _messages__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../messages */ "./src/messages.ts");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./common */ "./src/commands/common.ts");
/* harmony import */ var _gitCommands__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./gitCommands */ "./src/commands/gitCommands.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};








let ShowQuickCommitFileCommand = class extends _common__WEBPACK_IMPORTED_MODULE_6__.ActiveEditorCachedCommand {
  static getMarkdownCommandArgs(args) {
    return super.getMarkdownCommandArgsCore(_common__WEBPACK_IMPORTED_MODULE_6__.Commands.ShowQuickCommitFile, args);
  }
  constructor() {
    super([
      _common__WEBPACK_IMPORTED_MODULE_6__.Commands.ShowQuickCommitFile,
      _common__WEBPACK_IMPORTED_MODULE_6__.Commands.ShowQuickCommitRevision,
      _common__WEBPACK_IMPORTED_MODULE_6__.Commands.ShowQuickCommitRevisionInDiffLeft,
      _common__WEBPACK_IMPORTED_MODULE_6__.Commands.ShowQuickCommitRevisionInDiffRight
    ]);
  }
  async preExecute(context, args) {
    if (context.editor != null && context.command.startsWith(_common__WEBPACK_IMPORTED_MODULE_6__.Commands.ShowQuickCommitRevision)) {
      args = { ...args };
      const gitUri = await _git_gitUri__WEBPACK_IMPORTED_MODULE_3__.GitUri.fromUri(context.editor.document.uri);
      args.sha = gitUri.sha;
    }
    if (context.type === "viewItem") {
      args = { ...args };
      args.sha = context.node.uri.sha;
      if ((0,_common__WEBPACK_IMPORTED_MODULE_6__.isCommandContextViewNodeHasCommit)(context)) {
        args.commit = context.node.commit;
      }
    }
    return this.execute(context.editor, context.uri, args);
  }
  async execute(editor, uri, args) {
    uri = (0,_common__WEBPACK_IMPORTED_MODULE_6__.getCommandUri)(uri, editor);
    if (uri == null)
      return;
    args = { ...args };
    let gitUri;
    if (args.revisionUri !== void 0) {
      gitUri = _git_gitUri__WEBPACK_IMPORTED_MODULE_3__.GitUri.fromRevisionUri(vscode__WEBPACK_IMPORTED_MODULE_0__.Uri.parse(args.revisionUri));
      args.sha = gitUri.sha;
    } else {
      gitUri = await _git_gitUri__WEBPACK_IMPORTED_MODULE_3__.GitUri.fromUri(uri);
    }
    if (args.sha === void 0) {
      if (editor == null)
        return;
      const blameline = editor.selection.active.line;
      if (blameline < 0)
        return;
      try {
        const blame = await _container__WEBPACK_IMPORTED_MODULE_1__.Container.git.getBlameForLine(gitUri, blameline);
        if (blame == null) {
          void _messages__WEBPACK_IMPORTED_MODULE_5__.Messages.showFileNotUnderSourceControlWarningMessage("Unable to show commit file details");
          return;
        }
        if (blame.commit.isUncommitted) {
          void _messages__WEBPACK_IMPORTED_MODULE_5__.Messages.showLineUncommittedWarningMessage("Unable to show commit file details");
          return;
        }
        args.sha = blame.commit.sha;
        args.commit = blame.commit;
      } catch (ex) {
        _logger__WEBPACK_IMPORTED_MODULE_4__.Logger.error(ex, "ShowQuickCommitFileDetailsCommand", `getBlameForLine(${blameline})`);
        void vscode__WEBPACK_IMPORTED_MODULE_0__.window.showErrorMessage("Unable to show commit file details. See output channel for more details");
        return;
      }
    }
    try {
      if (args.commit === void 0 || !args.commit.isFile) {
        if (args.fileLog !== void 0) {
          args.commit = args.fileLog.commits.get(args.sha);
          if (args.commit === void 0) {
            args.fileLog = void 0;
          }
        }
        if (args.fileLog === void 0) {
          const repoPath = args.commit === void 0 ? gitUri.repoPath : args.commit.repoPath;
          args.commit = await _container__WEBPACK_IMPORTED_MODULE_1__.Container.git.getCommitForFile(repoPath, gitUri.fsPath, { ref: args.sha });
          if (args.commit === void 0) {
            void _messages__WEBPACK_IMPORTED_MODULE_5__.Messages.showCommitNotFoundWarningMessage("Unable to show commit file details");
            return;
          }
        }
      }
      if (args.commit === void 0) {
        void _messages__WEBPACK_IMPORTED_MODULE_5__.Messages.showCommitNotFoundWarningMessage("Unable to show commit file details");
        return;
      }
      const fileName = args.commit.fileName;
      if (args.commit instanceof _git_git__WEBPACK_IMPORTED_MODULE_2__.GitBlameCommit) {
        args.commit = await _container__WEBPACK_IMPORTED_MODULE_1__.Container.git.getCommit(args.commit.repoPath, args.commit.ref);
      }
      void await (0,_gitCommands__WEBPACK_IMPORTED_MODULE_7__.executeGitCommand)({
        command: "show",
        state: {
          repo: args.commit.repoPath,
          reference: args.commit,
          fileName
        }
      });
    } catch (ex) {
      _logger__WEBPACK_IMPORTED_MODULE_4__.Logger.error(ex, "ShowQuickCommitFileDetailsCommand");
      void _messages__WEBPACK_IMPORTED_MODULE_5__.Messages.showGenericErrorMessage("Unable to show commit file details");
    }
  }
};
ShowQuickCommitFileCommand = __decorateClass([
  (0,_common__WEBPACK_IMPORTED_MODULE_6__.command)()
], ShowQuickCommitFileCommand);


/***/ }),

/***/ "./src/commands/showQuickFileHistory.ts":
/*!**********************************************!*\
  !*** ./src/commands/showQuickFileHistory.ts ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ShowQuickFileHistoryCommand": () => (/* binding */ ShowQuickFileHistoryCommand)
/* harmony export */ });
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../container */ "./src/container.ts");
/* harmony import */ var _git_gitUri__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../git/gitUri */ "./src/git/gitUri.ts");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./common */ "./src/commands/common.ts");
/* harmony import */ var _gitCommands__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./gitCommands */ "./src/commands/gitCommands.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};




let ShowQuickFileHistoryCommand = class extends _common__WEBPACK_IMPORTED_MODULE_2__.ActiveEditorCachedCommand {
  constructor() {
    super([
      _common__WEBPACK_IMPORTED_MODULE_2__.Commands.OpenFileHistory,
      _common__WEBPACK_IMPORTED_MODULE_2__.Commands.OpenFolderHistory,
      _common__WEBPACK_IMPORTED_MODULE_2__.Commands.ShowQuickFileHistory,
      _common__WEBPACK_IMPORTED_MODULE_2__.Commands.QuickOpenFileHistory,
      _common__WEBPACK_IMPORTED_MODULE_2__.Commands.Deprecated_ShowFileHistoryInView
    ]);
  }
  preExecute(context, args) {
    if (context.command === _common__WEBPACK_IMPORTED_MODULE_2__.Commands.OpenFileHistory || context.command === _common__WEBPACK_IMPORTED_MODULE_2__.Commands.OpenFolderHistory || context.command === _common__WEBPACK_IMPORTED_MODULE_2__.Commands.Deprecated_ShowFileHistoryInView) {
      args = { ...args };
      args.showInSideBar = true;
    }
    return this.execute(context.editor, context.uri, args);
  }
  async execute(editor, uri, args) {
    var _a;
    uri = (0,_common__WEBPACK_IMPORTED_MODULE_2__.getCommandUri)(uri, editor);
    if (uri == null)
      return;
    const gitUri = await _git_gitUri__WEBPACK_IMPORTED_MODULE_1__.GitUri.fromUri(uri);
    if (args == null ? void 0 : args.showInSideBar) {
      await _container__WEBPACK_IMPORTED_MODULE_0__.Container.fileHistoryView.showHistoryForUri(gitUri);
      return;
    }
    void await (0,_gitCommands__WEBPACK_IMPORTED_MODULE_3__.executeGitCommand)({
      command: "log",
      state: (gitUri == null ? void 0 : gitUri.repoPath) != null ? {
        repo: gitUri.repoPath,
        reference: (_a = args == null ? void 0 : args.reference) != null ? _a : "HEAD",
        fileName: gitUri.relativePath
      } : {}
    });
  }
};
ShowQuickFileHistoryCommand = __decorateClass([
  (0,_common__WEBPACK_IMPORTED_MODULE_2__.command)()
], ShowQuickFileHistoryCommand);


/***/ }),

/***/ "./src/commands/showQuickRepoStatus.ts":
/*!*********************************************!*\
  !*** ./src/commands/showQuickRepoStatus.ts ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ShowQuickRepoStatusCommand": () => (/* binding */ ShowQuickRepoStatusCommand)
/* harmony export */ });
/* harmony import */ var _commands__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../commands */ "./src/commands.ts");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./common */ "./src/commands/common.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};


let ShowQuickRepoStatusCommand = class extends _common__WEBPACK_IMPORTED_MODULE_1__.Command {
  constructor() {
    super(_common__WEBPACK_IMPORTED_MODULE_1__.Commands.ShowQuickRepoStatus);
  }
  async execute(args) {
    return (0,_commands__WEBPACK_IMPORTED_MODULE_0__.executeGitCommand)({
      command: "status",
      state: {
        repo: args == null ? void 0 : args.repoPath
      }
    });
  }
};
ShowQuickRepoStatusCommand = __decorateClass([
  (0,_common__WEBPACK_IMPORTED_MODULE_1__.command)()
], ShowQuickRepoStatusCommand);


/***/ }),

/***/ "./src/commands/showQuickStashList.ts":
/*!********************************************!*\
  !*** ./src/commands/showQuickStashList.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ShowQuickStashListCommand": () => (/* binding */ ShowQuickStashListCommand)
/* harmony export */ });
/* harmony import */ var _commands__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../commands */ "./src/commands.ts");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./common */ "./src/commands/common.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};


let ShowQuickStashListCommand = class extends _common__WEBPACK_IMPORTED_MODULE_1__.Command {
  constructor() {
    super(_common__WEBPACK_IMPORTED_MODULE_1__.Commands.ShowQuickStashList);
  }
  execute(args) {
    return (0,_commands__WEBPACK_IMPORTED_MODULE_0__.executeGitCommand)({
      command: "stash",
      state: {
        subcommand: "list",
        repo: args == null ? void 0 : args.repoPath
      }
    });
  }
};
ShowQuickStashListCommand = __decorateClass([
  (0,_common__WEBPACK_IMPORTED_MODULE_1__.command)()
], ShowQuickStashListCommand);


/***/ }),

/***/ "./src/commands/showView.ts":
/*!**********************************!*\
  !*** ./src/commands/showView.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ShowViewCommand": () => (/* binding */ ShowViewCommand)
/* harmony export */ });
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../constants */ "./src/constants.ts");
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../container */ "./src/container.ts");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./common */ "./src/commands/common.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};




let ShowViewCommand = class extends _common__WEBPACK_IMPORTED_MODULE_3__.Command {
  constructor() {
    super([
      _common__WEBPACK_IMPORTED_MODULE_3__.Commands.ShowBranchesView,
      _common__WEBPACK_IMPORTED_MODULE_3__.Commands.ShowCommitsView,
      _common__WEBPACK_IMPORTED_MODULE_3__.Commands.ShowContributorsView,
      _common__WEBPACK_IMPORTED_MODULE_3__.Commands.ShowFileHistoryView,
      _common__WEBPACK_IMPORTED_MODULE_3__.Commands.ShowLineHistoryView,
      _common__WEBPACK_IMPORTED_MODULE_3__.Commands.ShowRemotesView,
      _common__WEBPACK_IMPORTED_MODULE_3__.Commands.ShowRepositoriesView,
      _common__WEBPACK_IMPORTED_MODULE_3__.Commands.ShowSearchAndCompareView,
      _common__WEBPACK_IMPORTED_MODULE_3__.Commands.ShowStashesView,
      _common__WEBPACK_IMPORTED_MODULE_3__.Commands.ShowTagsView,
      _common__WEBPACK_IMPORTED_MODULE_3__.Commands.ShowWelcomeView
    ]);
  }
  preExecute(context) {
    return this.execute(context.command);
  }
  async execute(command2) {
    switch (command2) {
      case _common__WEBPACK_IMPORTED_MODULE_3__.Commands.ShowBranchesView:
        return _container__WEBPACK_IMPORTED_MODULE_2__.Container.branchesView.show();
      case _common__WEBPACK_IMPORTED_MODULE_3__.Commands.ShowCommitsView:
        return _container__WEBPACK_IMPORTED_MODULE_2__.Container.commitsView.show();
      case _common__WEBPACK_IMPORTED_MODULE_3__.Commands.ShowContributorsView:
        return _container__WEBPACK_IMPORTED_MODULE_2__.Container.contributorsView.show();
      case _common__WEBPACK_IMPORTED_MODULE_3__.Commands.ShowFileHistoryView:
        return _container__WEBPACK_IMPORTED_MODULE_2__.Container.fileHistoryView.show();
      case _common__WEBPACK_IMPORTED_MODULE_3__.Commands.ShowLineHistoryView:
        return _container__WEBPACK_IMPORTED_MODULE_2__.Container.lineHistoryView.show();
      case _common__WEBPACK_IMPORTED_MODULE_3__.Commands.ShowRemotesView:
        return _container__WEBPACK_IMPORTED_MODULE_2__.Container.remotesView.show();
      case _common__WEBPACK_IMPORTED_MODULE_3__.Commands.ShowRepositoriesView:
        return _container__WEBPACK_IMPORTED_MODULE_2__.Container.repositoriesView.show();
      case _common__WEBPACK_IMPORTED_MODULE_3__.Commands.ShowSearchAndCompareView:
        return _container__WEBPACK_IMPORTED_MODULE_2__.Container.searchAndCompareView.show();
      case _common__WEBPACK_IMPORTED_MODULE_3__.Commands.ShowStashesView:
        return _container__WEBPACK_IMPORTED_MODULE_2__.Container.stashesView.show();
      case _common__WEBPACK_IMPORTED_MODULE_3__.Commands.ShowTagsView:
        return _container__WEBPACK_IMPORTED_MODULE_2__.Container.tagsView.show();
      case _common__WEBPACK_IMPORTED_MODULE_3__.Commands.ShowWelcomeView:
        await (0,_constants__WEBPACK_IMPORTED_MODULE_1__.setContext)(_constants__WEBPACK_IMPORTED_MODULE_1__.ContextKeys.ViewsWelcomeVisible, true);
        void _container__WEBPACK_IMPORTED_MODULE_2__.Container.context.globalState.update(_constants__WEBPACK_IMPORTED_MODULE_1__.SyncedState.WelcomeViewVisible, true);
        void await vscode__WEBPACK_IMPORTED_MODULE_0__.commands.executeCommand("gitlens.views.welcome.focus");
    }
    return Promise.resolve(void 0);
  }
};
ShowViewCommand = __decorateClass([
  (0,_common__WEBPACK_IMPORTED_MODULE_3__.command)()
], ShowViewCommand);


/***/ }),

/***/ "./src/commands/stashApply.ts":
/*!************************************!*\
  !*** ./src/commands/stashApply.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "StashApplyCommand": () => (/* binding */ StashApplyCommand)
/* harmony export */ });
/* harmony import */ var _commands__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../commands */ "./src/commands.ts");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./common */ "./src/commands/common.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};


let StashApplyCommand = class extends _common__WEBPACK_IMPORTED_MODULE_1__.Command {
  constructor() {
    super(_common__WEBPACK_IMPORTED_MODULE_1__.Commands.StashApply);
  }
  preExecute(context, args) {
    if ((0,_common__WEBPACK_IMPORTED_MODULE_1__.isCommandContextViewNodeHasCommit)(context)) {
      args = { ...args, stashItem: context.node.commit };
    } else if ((0,_common__WEBPACK_IMPORTED_MODULE_1__.isCommandContextViewNodeHasRepository)(context)) {
      args = { ...args, repoPath: context.node.repo.path };
    }
    return this.execute(args);
  }
  async execute(args) {
    var _a, _b, _c, _d;
    if (args == null ? void 0 : args.deleteAfter) {
      return _commands__WEBPACK_IMPORTED_MODULE_0__.GitActions.Stash.pop((_b = args == null ? void 0 : args.repoPath) != null ? _b : (_a = args == null ? void 0 : args.stashItem) == null ? void 0 : _a.repoPath, args == null ? void 0 : args.stashItem);
    }
    return _commands__WEBPACK_IMPORTED_MODULE_0__.GitActions.Stash.apply((_d = args == null ? void 0 : args.repoPath) != null ? _d : (_c = args == null ? void 0 : args.stashItem) == null ? void 0 : _c.repoPath, args == null ? void 0 : args.stashItem);
  }
};
StashApplyCommand = __decorateClass([
  (0,_common__WEBPACK_IMPORTED_MODULE_1__.command)()
], StashApplyCommand);


/***/ }),

/***/ "./src/commands/stashSave.ts":
/*!***********************************!*\
  !*** ./src/commands/stashSave.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "StashSaveCommand": () => (/* binding */ StashSaveCommand)
/* harmony export */ });
/* harmony import */ var _commands__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../commands */ "./src/commands.ts");
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../container */ "./src/container.ts");
/* harmony import */ var _git_gitUri__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../git/gitUri */ "./src/git/gitUri.ts");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./common */ "./src/commands/common.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};




var ResourceGroupType;
(function(ResourceGroupType2) {
  ResourceGroupType2[ResourceGroupType2["Merge"] = 0] = "Merge";
  ResourceGroupType2[ResourceGroupType2["Index"] = 1] = "Index";
  ResourceGroupType2[ResourceGroupType2["WorkingTree"] = 2] = "WorkingTree";
})(ResourceGroupType || (ResourceGroupType = {}));
let StashSaveCommand = class extends _common__WEBPACK_IMPORTED_MODULE_3__.Command {
  constructor() {
    super([_common__WEBPACK_IMPORTED_MODULE_3__.Commands.StashSave, _common__WEBPACK_IMPORTED_MODULE_3__.Commands.StashSaveFiles]);
  }
  async preExecute(context, args) {
    var _a;
    if ((0,_common__WEBPACK_IMPORTED_MODULE_3__.isCommandContextViewNodeHasFile)(context)) {
      args = { ...args };
      args.repoPath = (_a = context.node.file.repoPath) != null ? _a : context.node.repoPath;
      args.uris = [_git_gitUri__WEBPACK_IMPORTED_MODULE_2__.GitUri.fromFile(context.node.file, args.repoPath)];
    } else if ((0,_common__WEBPACK_IMPORTED_MODULE_3__.isCommandContextViewNodeHasRepository)(context)) {
      args = { ...args };
      args.repoPath = context.node.repo.path;
    } else if ((0,_common__WEBPACK_IMPORTED_MODULE_3__.isCommandContextViewNodeHasRepoPath)(context)) {
      args = { ...args };
      args.repoPath = context.node.repoPath;
    } else if (context.type === "scm-states") {
      args = { ...args };
      args.uris = context.scmResourceStates.map((s) => s.resourceUri);
      args.repoPath = await _container__WEBPACK_IMPORTED_MODULE_1__.Container.git.getRepoPath(args.uris[0].fsPath);
      const status = await _container__WEBPACK_IMPORTED_MODULE_1__.Container.git.getStatusForRepo(args.repoPath);
      if (status == null ? void 0 : status.computeWorkingTreeStatus().staged) {
        if (!context.scmResourceStates.some((s) => s.resourceGroupType === 1)) {
          args.keepStaged = true;
        }
      }
    } else if (context.type === "scm-groups") {
      args = { ...args };
      args.uris = context.scmResourceGroups.reduce((a, b) => a.concat(b.resourceStates.map((s) => s.resourceUri)), []);
      args.repoPath = await _container__WEBPACK_IMPORTED_MODULE_1__.Container.git.getRepoPath(args.uris[0].fsPath);
      const status = await _container__WEBPACK_IMPORTED_MODULE_1__.Container.git.getStatusForRepo(args.repoPath);
      if (status == null ? void 0 : status.computeWorkingTreeStatus().staged) {
        if (!context.scmResourceGroups.some((g) => g.id === "index")) {
          args.keepStaged = true;
        }
      }
    }
    return this.execute(args);
  }
  execute(args) {
    return _commands__WEBPACK_IMPORTED_MODULE_0__.GitActions.Stash.push(args == null ? void 0 : args.repoPath, args == null ? void 0 : args.uris, args == null ? void 0 : args.message, args == null ? void 0 : args.keepStaged);
  }
};
StashSaveCommand = __decorateClass([
  (0,_common__WEBPACK_IMPORTED_MODULE_3__.command)()
], StashSaveCommand);


/***/ }),

/***/ "./src/commands/supportGitLens.ts":
/*!****************************************!*\
  !*** ./src/commands/supportGitLens.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SupportGitLensCommand": () => (/* binding */ SupportGitLensCommand)
/* harmony export */ });
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./common */ "./src/commands/common.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};


let SupportGitLensCommand = class extends _common__WEBPACK_IMPORTED_MODULE_1__.Command {
  constructor() {
    super(_common__WEBPACK_IMPORTED_MODULE_1__.Commands.SupportGitLens);
  }
  async execute() {
    await vscode__WEBPACK_IMPORTED_MODULE_0__.env.openExternal(vscode__WEBPACK_IMPORTED_MODULE_0__.Uri.parse("https://gitlens.amod.io/#sponsor"));
  }
};
SupportGitLensCommand = __decorateClass([
  (0,_common__WEBPACK_IMPORTED_MODULE_1__.command)()
], SupportGitLensCommand);


/***/ }),

/***/ "./src/commands/switchMode.ts":
/*!************************************!*\
  !*** ./src/commands/switchMode.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SwitchModeCommand": () => (/* binding */ SwitchModeCommand),
/* harmony export */   "ToggleReviewModeCommand": () => (/* binding */ ToggleReviewModeCommand),
/* harmony export */   "ToggleZenModeCommand": () => (/* binding */ ToggleZenModeCommand)
/* harmony export */ });
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _configuration__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../configuration */ "./src/configuration.ts");
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../container */ "./src/container.ts");
/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../logger */ "./src/logger.ts");
/* harmony import */ var _quickpicks__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../quickpicks */ "./src/quickpicks.ts");
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../system */ "./src/system.ts");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./common */ "./src/commands/common.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};







let SwitchModeCommand = class extends _common__WEBPACK_IMPORTED_MODULE_6__.Command {
  constructor() {
    super(_common__WEBPACK_IMPORTED_MODULE_6__.Commands.SwitchMode);
  }
  async execute() {
    var _a, _b, _c;
    const cc = _logger__WEBPACK_IMPORTED_MODULE_3__.Logger.getCorrelationContext();
    const pick = await _quickpicks__WEBPACK_IMPORTED_MODULE_4__.ModePicker.show();
    if (pick === void 0)
      return;
    if (cc != null) {
      cc.exitDetails = ` \u2014 mode=${(_a = pick.key) != null ? _a : ""}`;
    }
    const active = _container__WEBPACK_IMPORTED_MODULE_2__.Container.config.mode.active;
    if (active === pick.key)
      return;
    if (active != null && active.length !== 0) {
      const activeAnnotations = (_b = _container__WEBPACK_IMPORTED_MODULE_2__.Container.config.modes) == null ? void 0 : _b[active].annotations;
      if (activeAnnotations != null) {
        const newAnnotations = pick.key != null ? (_c = _container__WEBPACK_IMPORTED_MODULE_2__.Container.config.modes) == null ? void 0 : _c[pick.key].annotations : void 0;
        if (activeAnnotations !== newAnnotations) {
          await _container__WEBPACK_IMPORTED_MODULE_2__.Container.fileAnnotations.clearAll();
        }
      }
    }
    await _configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.update("mode.active", pick.key, vscode__WEBPACK_IMPORTED_MODULE_0__.ConfigurationTarget.Global);
  }
};
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.log)({ args: false, correlate: true, singleLine: true, timed: false })
], SwitchModeCommand.prototype, "execute", 1);
SwitchModeCommand = __decorateClass([
  (0,_common__WEBPACK_IMPORTED_MODULE_6__.command)()
], SwitchModeCommand);
let ToggleReviewModeCommand = class extends _common__WEBPACK_IMPORTED_MODULE_6__.Command {
  constructor() {
    super(_common__WEBPACK_IMPORTED_MODULE_6__.Commands.ToggleReviewMode);
  }
  async execute() {
    if (_container__WEBPACK_IMPORTED_MODULE_2__.Container.config.modes == null || !Object.keys(_container__WEBPACK_IMPORTED_MODULE_2__.Container.config.modes).includes("review"))
      return;
    const mode = _container__WEBPACK_IMPORTED_MODULE_2__.Container.config.mode.active === "review" ? void 0 : "review";
    await _configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.update("mode.active", mode, vscode__WEBPACK_IMPORTED_MODULE_0__.ConfigurationTarget.Global);
  }
};
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.log)({ args: false, singleLine: true, timed: false })
], ToggleReviewModeCommand.prototype, "execute", 1);
ToggleReviewModeCommand = __decorateClass([
  (0,_common__WEBPACK_IMPORTED_MODULE_6__.command)()
], ToggleReviewModeCommand);
let ToggleZenModeCommand = class extends _common__WEBPACK_IMPORTED_MODULE_6__.Command {
  constructor() {
    super(_common__WEBPACK_IMPORTED_MODULE_6__.Commands.ToggleZenMode);
  }
  async execute() {
    if (_container__WEBPACK_IMPORTED_MODULE_2__.Container.config.modes == null || !Object.keys(_container__WEBPACK_IMPORTED_MODULE_2__.Container.config.modes).includes("zen"))
      return;
    const mode = _container__WEBPACK_IMPORTED_MODULE_2__.Container.config.mode.active === "zen" ? void 0 : "zen";
    await _configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.update("mode.active", mode, vscode__WEBPACK_IMPORTED_MODULE_0__.ConfigurationTarget.Global);
  }
};
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.log)({ args: false, singleLine: true, timed: false })
], ToggleZenModeCommand.prototype, "execute", 1);
ToggleZenModeCommand = __decorateClass([
  (0,_common__WEBPACK_IMPORTED_MODULE_6__.command)()
], ToggleZenModeCommand);


/***/ }),

/***/ "./src/commands/toggleCodeLens.ts":
/*!****************************************!*\
  !*** ./src/commands/toggleCodeLens.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ToggleCodeLensCommand": () => (/* binding */ ToggleCodeLensCommand)
/* harmony export */ });
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../container */ "./src/container.ts");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./common */ "./src/commands/common.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};


let ToggleCodeLensCommand = class extends _common__WEBPACK_IMPORTED_MODULE_1__.Command {
  constructor() {
    super(_common__WEBPACK_IMPORTED_MODULE_1__.Commands.ToggleCodeLens);
  }
  execute() {
    return _container__WEBPACK_IMPORTED_MODULE_0__.Container.codeLens.toggleCodeLens();
  }
};
ToggleCodeLensCommand = __decorateClass([
  (0,_common__WEBPACK_IMPORTED_MODULE_1__.command)()
], ToggleCodeLensCommand);


/***/ }),

/***/ "./src/commands/toggleFileAnnotations.ts":
/*!***********************************************!*\
  !*** ./src/commands/toggleFileAnnotations.ts ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ClearFileAnnotationsCommand": () => (/* binding */ ClearFileAnnotationsCommand),
/* harmony export */   "ToggleFileBlameCommand": () => (/* binding */ ToggleFileBlameCommand),
/* harmony export */   "ToggleFileChangesCommand": () => (/* binding */ ToggleFileChangesCommand),
/* harmony export */   "ToggleFileHeatmapCommand": () => (/* binding */ ToggleFileHeatmapCommand)
/* harmony export */ });
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _comparers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../comparers */ "./src/comparers.ts");
/* harmony import */ var _configuration__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../configuration */ "./src/configuration.ts");
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../constants */ "./src/constants.ts");
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../container */ "./src/container.ts");
/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../logger */ "./src/logger.ts");
/* harmony import */ var _messages__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../messages */ "./src/messages.ts");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./common */ "./src/commands/common.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};








let ClearFileAnnotationsCommand = class extends _common__WEBPACK_IMPORTED_MODULE_7__.EditorCommand {
  constructor() {
    super([_common__WEBPACK_IMPORTED_MODULE_7__.Commands.ClearFileAnnotations, _common__WEBPACK_IMPORTED_MODULE_7__.Commands.ComputingFileAnnotations]);
  }
  async execute(editor, edit, uri) {
    if (editor != null && !(0,_constants__WEBPACK_IMPORTED_MODULE_3__.isTextEditor)(editor)) {
      if (uri != null && !_comparers__WEBPACK_IMPORTED_MODULE_1__.UriComparer.equals(uri, editor.document.uri)) {
        const e = vscode__WEBPACK_IMPORTED_MODULE_0__.window.visibleTextEditors.find((e2) => _comparers__WEBPACK_IMPORTED_MODULE_1__.UriComparer.equals(uri, e2.document.uri));
        if (e != null) {
          editor = e;
        }
      }
    }
    try {
      void await _container__WEBPACK_IMPORTED_MODULE_4__.Container.fileAnnotations.clear(editor);
    } catch (ex) {
      _logger__WEBPACK_IMPORTED_MODULE_5__.Logger.error(ex, "ClearFileAnnotationsCommand");
      void _messages__WEBPACK_IMPORTED_MODULE_6__.Messages.showGenericErrorMessage("Unable to clear file annotations");
    }
  }
};
ClearFileAnnotationsCommand = __decorateClass([
  (0,_common__WEBPACK_IMPORTED_MODULE_7__.command)()
], ClearFileAnnotationsCommand);
let ToggleFileBlameCommand = class extends _common__WEBPACK_IMPORTED_MODULE_7__.ActiveEditorCommand {
  constructor() {
    super([_common__WEBPACK_IMPORTED_MODULE_7__.Commands.ToggleFileBlame, _common__WEBPACK_IMPORTED_MODULE_7__.Commands.ToggleFileBlameInDiffLeft, _common__WEBPACK_IMPORTED_MODULE_7__.Commands.ToggleFileBlameInDiffRight]);
  }
  execute(editor, uri, args) {
    return toggleFileAnnotations(editor, uri, {
      ...args,
      type: _configuration__WEBPACK_IMPORTED_MODULE_2__.FileAnnotationType.Blame
    });
  }
};
ToggleFileBlameCommand = __decorateClass([
  (0,_common__WEBPACK_IMPORTED_MODULE_7__.command)()
], ToggleFileBlameCommand);
let ToggleFileChangesCommand = class extends _common__WEBPACK_IMPORTED_MODULE_7__.ActiveEditorCommand {
  constructor() {
    super(_common__WEBPACK_IMPORTED_MODULE_7__.Commands.ToggleFileChanges);
  }
  execute(editor, uri, args) {
    return toggleFileAnnotations(editor, uri, {
      ...args,
      type: _configuration__WEBPACK_IMPORTED_MODULE_2__.FileAnnotationType.Changes
    });
  }
};
ToggleFileChangesCommand = __decorateClass([
  (0,_common__WEBPACK_IMPORTED_MODULE_7__.command)()
], ToggleFileChangesCommand);
let ToggleFileHeatmapCommand = class extends _common__WEBPACK_IMPORTED_MODULE_7__.ActiveEditorCommand {
  constructor() {
    super([
      _common__WEBPACK_IMPORTED_MODULE_7__.Commands.ToggleFileHeatmap,
      _common__WEBPACK_IMPORTED_MODULE_7__.Commands.ToggleFileHeatmapInDiffLeft,
      _common__WEBPACK_IMPORTED_MODULE_7__.Commands.ToggleFileHeatmapInDiffRight
    ]);
  }
  execute(editor, uri, args) {
    return toggleFileAnnotations(editor, uri, {
      ...args,
      type: _configuration__WEBPACK_IMPORTED_MODULE_2__.FileAnnotationType.Heatmap
    });
  }
};
ToggleFileHeatmapCommand = __decorateClass([
  (0,_common__WEBPACK_IMPORTED_MODULE_7__.command)()
], ToggleFileHeatmapCommand);
async function toggleFileAnnotations(editor, uri, args) {
  var _a, _b;
  if (editor != null && !(0,_constants__WEBPACK_IMPORTED_MODULE_3__.isTextEditor)(editor)) {
    if (uri != null && !_comparers__WEBPACK_IMPORTED_MODULE_1__.UriComparer.equals(uri, editor.document.uri)) {
      const e = vscode__WEBPACK_IMPORTED_MODULE_0__.window.visibleTextEditors.find((e2) => _comparers__WEBPACK_IMPORTED_MODULE_1__.UriComparer.equals(uri, e2.document.uri));
      if (e != null) {
        editor = e;
      }
    }
  }
  try {
    args = { type: _configuration__WEBPACK_IMPORTED_MODULE_2__.FileAnnotationType.Blame, ...args };
    void await _container__WEBPACK_IMPORTED_MODULE_4__.Container.fileAnnotations.toggle(editor, args.type, {
      selection: (_b = (_a = args.context) == null ? void 0 : _a.selection) != null ? _b : { line: editor == null ? void 0 : editor.selection.active.line },
      ...args.context
    }, args.on);
  } catch (ex) {
    _logger__WEBPACK_IMPORTED_MODULE_5__.Logger.error(ex, "ToggleFileAnnotationsCommand");
    void vscode__WEBPACK_IMPORTED_MODULE_0__.window.showErrorMessage(`Unable to toggle file ${args.type} annotations. See output channel for more details`);
  }
}


/***/ }),

/***/ "./src/commands/toggleLineBlame.ts":
/*!*****************************************!*\
  !*** ./src/commands/toggleLineBlame.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ToggleLineBlameCommand": () => (/* binding */ ToggleLineBlameCommand)
/* harmony export */ });
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../container */ "./src/container.ts");
/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../logger */ "./src/logger.ts");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./common */ "./src/commands/common.ts");
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};




let ToggleLineBlameCommand = class extends _common__WEBPACK_IMPORTED_MODULE_3__.ActiveEditorCommand {
  constructor() {
    super(_common__WEBPACK_IMPORTED_MODULE_3__.Commands.ToggleLineBlame);
  }
  async execute(editor, _uri) {
    try {
      void await _container__WEBPACK_IMPORTED_MODULE_1__.Container.lineAnnotations.toggle(editor);
    } catch (ex) {
      _logger__WEBPACK_IMPORTED_MODULE_2__.Logger.error(ex, "ToggleLineBlameCommand");
      void vscode__WEBPACK_IMPORTED_MODULE_0__.window.showErrorMessage("Unable to toggle line blame annotations. See output channel for more details");
    }
  }
};
ToggleLineBlameCommand = __decorateClass([
  (0,_common__WEBPACK_IMPORTED_MODULE_3__.command)()
], ToggleLineBlameCommand);


/***/ }),

/***/ "./src/comparers.ts":
/*!**************************!*\
  !*** ./src/comparers.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TextEditorComparer": () => (/* binding */ textEditorComparer),
/* harmony export */   "UriComparer": () => (/* binding */ uriComparer)
/* harmony export */ });

class Comparer {
}
class UriComparer extends Comparer {
  equals(lhs, rhs, options = { exact: false }) {
    if (lhs === rhs)
      return true;
    if (lhs == null || rhs == null)
      return false;
    if (options.exact) {
      return lhs.toString() === rhs.toString();
    }
    return lhs.scheme === rhs.scheme && lhs.fsPath === rhs.fsPath;
  }
}
class TextEditorComparer extends Comparer {
  equals(lhs, rhs, options = { usePosition: false }) {
    if (lhs === rhs)
      return true;
    if (lhs == null || rhs == null)
      return false;
    if (options.usePosition && lhs.viewColumn !== rhs.viewColumn)
      return false;
    return lhs.document === rhs.document;
  }
}
const textEditorComparer = new TextEditorComparer();
const uriComparer = new UriComparer();



/***/ }),

/***/ "./src/config.ts":
/*!***********************!*\
  !*** ./src/config.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TraceLevel": () => (/* binding */ TraceLevel),
/* harmony export */   "AnnotationsToggleMode": () => (/* binding */ AnnotationsToggleMode),
/* harmony export */   "BlameHighlightLocations": () => (/* binding */ BlameHighlightLocations),
/* harmony export */   "BranchSorting": () => (/* binding */ BranchSorting),
/* harmony export */   "ChangesLocations": () => (/* binding */ ChangesLocations),
/* harmony export */   "CodeLensCommand": () => (/* binding */ CodeLensCommand),
/* harmony export */   "CodeLensScopes": () => (/* binding */ CodeLensScopes),
/* harmony export */   "ContributorSorting": () => (/* binding */ ContributorSorting),
/* harmony export */   "CustomRemoteType": () => (/* binding */ CustomRemoteType),
/* harmony export */   "DateSource": () => (/* binding */ DateSource),
/* harmony export */   "DateStyle": () => (/* binding */ DateStyle),
/* harmony export */   "FileAnnotationType": () => (/* binding */ FileAnnotationType),
/* harmony export */   "GitCommandSorting": () => (/* binding */ GitCommandSorting),
/* harmony export */   "GravatarDefaultStyle": () => (/* binding */ GravatarDefaultStyle),
/* harmony export */   "HeatmapLocations": () => (/* binding */ HeatmapLocations),
/* harmony export */   "KeyMap": () => (/* binding */ KeyMap),
/* harmony export */   "StatusBarCommand": () => (/* binding */ StatusBarCommand),
/* harmony export */   "TagSorting": () => (/* binding */ TagSorting),
/* harmony export */   "ViewBranchesLayout": () => (/* binding */ ViewBranchesLayout),
/* harmony export */   "ViewFilesLayout": () => (/* binding */ ViewFilesLayout),
/* harmony export */   "ViewShowBranchComparison": () => (/* binding */ ViewShowBranchComparison),
/* harmony export */   "viewsCommonConfigKeys": () => (/* binding */ viewsCommonConfigKeys),
/* harmony export */   "viewsConfigKeys": () => (/* binding */ viewsConfigKeys)
/* harmony export */ });

var TraceLevel;
(function(TraceLevel2) {
  TraceLevel2["Silent"] = "silent";
  TraceLevel2["Errors"] = "errors";
  TraceLevel2["Verbose"] = "verbose";
  TraceLevel2["Debug"] = "debug";
})(TraceLevel || (TraceLevel = {}));
var AnnotationsToggleMode;
(function(AnnotationsToggleMode2) {
  AnnotationsToggleMode2["File"] = "file";
  AnnotationsToggleMode2["Window"] = "window";
})(AnnotationsToggleMode || (AnnotationsToggleMode = {}));
var BlameHighlightLocations;
(function(BlameHighlightLocations2) {
  BlameHighlightLocations2["Gutter"] = "gutter";
  BlameHighlightLocations2["Line"] = "line";
  BlameHighlightLocations2["Overview"] = "overview";
})(BlameHighlightLocations || (BlameHighlightLocations = {}));
var BranchSorting;
(function(BranchSorting2) {
  BranchSorting2["DateDesc"] = "date:desc";
  BranchSorting2["DateAsc"] = "date:asc";
  BranchSorting2["NameAsc"] = "name:asc";
  BranchSorting2["NameDesc"] = "name:desc";
})(BranchSorting || (BranchSorting = {}));
var ChangesLocations;
(function(ChangesLocations2) {
  ChangesLocations2["Gutter"] = "gutter";
  ChangesLocations2["Overview"] = "overview";
})(ChangesLocations || (ChangesLocations = {}));
var CodeLensCommand;
(function(CodeLensCommand2) {
  CodeLensCommand2["CopyRemoteCommitUrl"] = "gitlens.copyRemoteCommitUrl";
  CodeLensCommand2["CopyRemoteFileUrl"] = "gitlens.copyRemoteFileUrl";
  CodeLensCommand2["DiffWithPrevious"] = "gitlens.diffWithPrevious";
  CodeLensCommand2["OpenCommitOnRemote"] = "gitlens.openCommitOnRemote";
  CodeLensCommand2["OpenFileOnRemote"] = "gitlens.openFileOnRemote";
  CodeLensCommand2["RevealCommitInView"] = "gitlens.revealCommitInView";
  CodeLensCommand2["ShowCommitsInView"] = "gitlens.showCommitsInView";
  CodeLensCommand2["ShowQuickCommitDetails"] = "gitlens.showQuickCommitDetails";
  CodeLensCommand2["ShowQuickCommitFileDetails"] = "gitlens.showQuickCommitFileDetails";
  CodeLensCommand2["ShowQuickCurrentBranchHistory"] = "gitlens.showQuickRepoHistory";
  CodeLensCommand2["ShowQuickFileHistory"] = "gitlens.showQuickFileHistory";
  CodeLensCommand2["ToggleFileBlame"] = "gitlens.toggleFileBlame";
  CodeLensCommand2["ToggleFileChanges"] = "gitlens.toggleFileChanges";
  CodeLensCommand2["ToggleFileChangesOnly"] = "gitlens.toggleFileChangesOnly";
  CodeLensCommand2["ToggleFileHeatmap"] = "gitlens.toggleFileHeatmap";
})(CodeLensCommand || (CodeLensCommand = {}));
var CodeLensScopes;
(function(CodeLensScopes2) {
  CodeLensScopes2["Document"] = "document";
  CodeLensScopes2["Containers"] = "containers";
  CodeLensScopes2["Blocks"] = "blocks";
})(CodeLensScopes || (CodeLensScopes = {}));
var ContributorSorting;
(function(ContributorSorting2) {
  ContributorSorting2["CountDesc"] = "count:desc";
  ContributorSorting2["CountAsc"] = "count:asc";
  ContributorSorting2["DateDesc"] = "date:desc";
  ContributorSorting2["DateAsc"] = "date:asc";
  ContributorSorting2["NameAsc"] = "name:asc";
  ContributorSorting2["NameDesc"] = "name:desc";
})(ContributorSorting || (ContributorSorting = {}));
var CustomRemoteType;
(function(CustomRemoteType2) {
  CustomRemoteType2["Bitbucket"] = "Bitbucket";
  CustomRemoteType2["BitbucketServer"] = "BitbucketServer";
  CustomRemoteType2["Custom"] = "Custom";
  CustomRemoteType2["Gitea"] = "Gitea";
  CustomRemoteType2["GitHub"] = "GitHub";
  CustomRemoteType2["GitLab"] = "GitLab";
})(CustomRemoteType || (CustomRemoteType = {}));
var DateSource;
(function(DateSource2) {
  DateSource2["Authored"] = "authored";
  DateSource2["Committed"] = "committed";
})(DateSource || (DateSource = {}));
var DateStyle;
(function(DateStyle2) {
  DateStyle2["Absolute"] = "absolute";
  DateStyle2["Relative"] = "relative";
})(DateStyle || (DateStyle = {}));
var FileAnnotationType;
(function(FileAnnotationType2) {
  FileAnnotationType2["Blame"] = "blame";
  FileAnnotationType2["Changes"] = "changes";
  FileAnnotationType2["Heatmap"] = "heatmap";
})(FileAnnotationType || (FileAnnotationType = {}));
var GitCommandSorting;
(function(GitCommandSorting2) {
  GitCommandSorting2["Name"] = "name";
  GitCommandSorting2["Usage"] = "usage";
})(GitCommandSorting || (GitCommandSorting = {}));
var GravatarDefaultStyle;
(function(GravatarDefaultStyle2) {
  GravatarDefaultStyle2["Faces"] = "wavatar";
  GravatarDefaultStyle2["Geometric"] = "identicon";
  GravatarDefaultStyle2["Monster"] = "monsterid";
  GravatarDefaultStyle2["MysteryPerson"] = "mp";
  GravatarDefaultStyle2["Retro"] = "retro";
  GravatarDefaultStyle2["Robot"] = "robohash";
})(GravatarDefaultStyle || (GravatarDefaultStyle = {}));
var HeatmapLocations;
(function(HeatmapLocations2) {
  HeatmapLocations2["Gutter"] = "gutter";
  HeatmapLocations2["Overview"] = "overview";
})(HeatmapLocations || (HeatmapLocations = {}));
var KeyMap;
(function(KeyMap2) {
  KeyMap2["Alternate"] = "alternate";
  KeyMap2["Chorded"] = "chorded";
  KeyMap2["None"] = "none";
})(KeyMap || (KeyMap = {}));
var StatusBarCommand;
(function(StatusBarCommand2) {
  StatusBarCommand2["CopyRemoteCommitUrl"] = "gitlens.copyRemoteCommitUrl";
  StatusBarCommand2["CopyRemoteFileUrl"] = "gitlens.copyRemoteFileUrl";
  StatusBarCommand2["DiffWithPrevious"] = "gitlens.diffWithPrevious";
  StatusBarCommand2["DiffWithWorking"] = "gitlens.diffWithWorking";
  StatusBarCommand2["OpenCommitOnRemote"] = "gitlens.openCommitOnRemote";
  StatusBarCommand2["OpenFileOnRemote"] = "gitlens.openFileOnRemote";
  StatusBarCommand2["RevealCommitInView"] = "gitlens.revealCommitInView";
  StatusBarCommand2["ShowCommitsInView"] = "gitlens.showCommitsInView";
  StatusBarCommand2["ShowQuickCommitDetails"] = "gitlens.showQuickCommitDetails";
  StatusBarCommand2["ShowQuickCommitFileDetails"] = "gitlens.showQuickCommitFileDetails";
  StatusBarCommand2["ShowQuickCurrentBranchHistory"] = "gitlens.showQuickRepoHistory";
  StatusBarCommand2["ShowQuickFileHistory"] = "gitlens.showQuickFileHistory";
  StatusBarCommand2["ToggleCodeLens"] = "gitlens.toggleCodeLens";
  StatusBarCommand2["ToggleFileBlame"] = "gitlens.toggleFileBlame";
  StatusBarCommand2["ToggleFileChanges"] = "gitlens.toggleFileChanges";
  StatusBarCommand2["ToggleFileChangesOnly"] = "gitlens.toggleFileChangesOnly";
  StatusBarCommand2["ToggleFileHeatmap"] = "gitlens.toggleFileHeatmap";
})(StatusBarCommand || (StatusBarCommand = {}));
var TagSorting;
(function(TagSorting2) {
  TagSorting2["DateDesc"] = "date:desc";
  TagSorting2["DateAsc"] = "date:asc";
  TagSorting2["NameAsc"] = "name:asc";
  TagSorting2["NameDesc"] = "name:desc";
})(TagSorting || (TagSorting = {}));
var ViewBranchesLayout;
(function(ViewBranchesLayout2) {
  ViewBranchesLayout2["List"] = "list";
  ViewBranchesLayout2["Tree"] = "tree";
})(ViewBranchesLayout || (ViewBranchesLayout = {}));
var ViewFilesLayout;
(function(ViewFilesLayout2) {
  ViewFilesLayout2["Auto"] = "auto";
  ViewFilesLayout2["List"] = "list";
  ViewFilesLayout2["Tree"] = "tree";
})(ViewFilesLayout || (ViewFilesLayout = {}));
var ViewShowBranchComparison;
(function(ViewShowBranchComparison2) {
  ViewShowBranchComparison2["Branch"] = "branch";
  ViewShowBranchComparison2["Working"] = "working";
})(ViewShowBranchComparison || (ViewShowBranchComparison = {}));
const viewsCommonConfigKeys = [
  "defaultItemLimit",
  "formats",
  "pageItemLimit",
  "showRelativeDateMarkers"
];
const viewsConfigKeys = [
  "commits",
  "repositories",
  "fileHistory",
  "lineHistory",
  "branches",
  "remotes",
  "stashes",
  "tags",
  "contributors",
  "searchAndCompare"
];


/***/ }),

/***/ "./src/configuration.ts":
/*!******************************!*\
  !*** ./src/configuration.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AnnotationsToggleMode": () => (/* reexport safe */ _config__WEBPACK_IMPORTED_MODULE_0__.AnnotationsToggleMode),
/* harmony export */   "BlameHighlightLocations": () => (/* reexport safe */ _config__WEBPACK_IMPORTED_MODULE_0__.BlameHighlightLocations),
/* harmony export */   "BranchSorting": () => (/* reexport safe */ _config__WEBPACK_IMPORTED_MODULE_0__.BranchSorting),
/* harmony export */   "ChangesLocations": () => (/* reexport safe */ _config__WEBPACK_IMPORTED_MODULE_0__.ChangesLocations),
/* harmony export */   "CodeLensCommand": () => (/* reexport safe */ _config__WEBPACK_IMPORTED_MODULE_0__.CodeLensCommand),
/* harmony export */   "CodeLensScopes": () => (/* reexport safe */ _config__WEBPACK_IMPORTED_MODULE_0__.CodeLensScopes),
/* harmony export */   "ContributorSorting": () => (/* reexport safe */ _config__WEBPACK_IMPORTED_MODULE_0__.ContributorSorting),
/* harmony export */   "CustomRemoteType": () => (/* reexport safe */ _config__WEBPACK_IMPORTED_MODULE_0__.CustomRemoteType),
/* harmony export */   "DateSource": () => (/* reexport safe */ _config__WEBPACK_IMPORTED_MODULE_0__.DateSource),
/* harmony export */   "DateStyle": () => (/* reexport safe */ _config__WEBPACK_IMPORTED_MODULE_0__.DateStyle),
/* harmony export */   "FileAnnotationType": () => (/* reexport safe */ _config__WEBPACK_IMPORTED_MODULE_0__.FileAnnotationType),
/* harmony export */   "GitCommandSorting": () => (/* reexport safe */ _config__WEBPACK_IMPORTED_MODULE_0__.GitCommandSorting),
/* harmony export */   "GravatarDefaultStyle": () => (/* reexport safe */ _config__WEBPACK_IMPORTED_MODULE_0__.GravatarDefaultStyle),
/* harmony export */   "HeatmapLocations": () => (/* reexport safe */ _config__WEBPACK_IMPORTED_MODULE_0__.HeatmapLocations),
/* harmony export */   "KeyMap": () => (/* reexport safe */ _config__WEBPACK_IMPORTED_MODULE_0__.KeyMap),
/* harmony export */   "StatusBarCommand": () => (/* reexport safe */ _config__WEBPACK_IMPORTED_MODULE_0__.StatusBarCommand),
/* harmony export */   "TagSorting": () => (/* reexport safe */ _config__WEBPACK_IMPORTED_MODULE_0__.TagSorting),
/* harmony export */   "TraceLevel": () => (/* reexport safe */ _config__WEBPACK_IMPORTED_MODULE_0__.TraceLevel),
/* harmony export */   "ViewBranchesLayout": () => (/* reexport safe */ _config__WEBPACK_IMPORTED_MODULE_0__.ViewBranchesLayout),
/* harmony export */   "ViewFilesLayout": () => (/* reexport safe */ _config__WEBPACK_IMPORTED_MODULE_0__.ViewFilesLayout),
/* harmony export */   "ViewShowBranchComparison": () => (/* reexport safe */ _config__WEBPACK_IMPORTED_MODULE_0__.ViewShowBranchComparison),
/* harmony export */   "viewsCommonConfigKeys": () => (/* reexport safe */ _config__WEBPACK_IMPORTED_MODULE_0__.viewsCommonConfigKeys),
/* harmony export */   "viewsConfigKeys": () => (/* reexport safe */ _config__WEBPACK_IMPORTED_MODULE_0__.viewsConfigKeys),
/* harmony export */   "Configuration": () => (/* binding */ Configuration),
/* harmony export */   "configuration": () => (/* binding */ configuration)
/* harmony export */ });
/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./config */ "./src/config.ts");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./system */ "./src/system.ts");

var __defProp = Object.defineProperty;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};



const configPrefix = "gitlens";
class Configuration {
  constructor() {
    __publicField(this, "_onDidChange", new vscode__WEBPACK_IMPORTED_MODULE_1__.EventEmitter());
    __publicField(this, "_onDidChangeAny", new vscode__WEBPACK_IMPORTED_MODULE_1__.EventEmitter());
    __publicField(this, "_onWillChange", new vscode__WEBPACK_IMPORTED_MODULE_1__.EventEmitter());
  }
  static configure(context) {
    context.subscriptions.push(vscode__WEBPACK_IMPORTED_MODULE_1__.workspace.onDidChangeConfiguration(configuration.onConfigurationChanged, configuration));
  }
  get onDidChange() {
    return this._onDidChange.event;
  }
  get onDidChangeAny() {
    return this._onDidChangeAny.event;
  }
  get onWillChange() {
    return this._onWillChange.event;
  }
  onConfigurationChanged(e) {
    if (!e.affectsConfiguration(configPrefix)) {
      this._onDidChangeAny.fire(e);
      return;
    }
    const evt = {
      change: e
    };
    this._onWillChange.fire(evt);
    if (evt.transform !== void 0) {
      e = evt.transform(e);
    }
    this._onDidChangeAny.fire(e);
    this._onDidChange.fire(e);
  }
  get(section, scope, defaultValue) {
    return defaultValue === void 0 ? vscode__WEBPACK_IMPORTED_MODULE_1__.workspace.getConfiguration(section === void 0 ? void 0 : configPrefix, scope).get(section === void 0 ? configPrefix : section) : vscode__WEBPACK_IMPORTED_MODULE_1__.workspace.getConfiguration(section === void 0 ? void 0 : configPrefix, scope).get(section === void 0 ? configPrefix : section, defaultValue);
  }
  getAny(section, scope, defaultValue) {
    return defaultValue === void 0 ? vscode__WEBPACK_IMPORTED_MODULE_1__.workspace.getConfiguration(void 0, scope).get(section) : vscode__WEBPACK_IMPORTED_MODULE_1__.workspace.getConfiguration(void 0, scope).get(section, defaultValue);
  }
  changed(e, section, scope) {
    var _a;
    return (_a = e == null ? void 0 : e.affectsConfiguration(`${configPrefix}.${section}`, scope)) != null ? _a : true;
  }
  inspect(section, scope) {
    return vscode__WEBPACK_IMPORTED_MODULE_1__.workspace.getConfiguration(section === void 0 ? void 0 : configPrefix, scope).inspect(section === void 0 ? configPrefix : section);
  }
  inspectAny(section, scope) {
    return vscode__WEBPACK_IMPORTED_MODULE_1__.workspace.getConfiguration(void 0, scope).inspect(section);
  }
  async migrate(from, to, options) {
    const inspection = configuration.inspect(from);
    if (inspection === void 0)
      return false;
    let migrated = false;
    if (inspection.globalValue !== void 0) {
      await this.update(to, options.migrationFn != null ? options.migrationFn(inspection.globalValue) : inspection.globalValue, vscode__WEBPACK_IMPORTED_MODULE_1__.ConfigurationTarget.Global);
      migrated = true;
    }
    if (inspection.workspaceValue !== void 0) {
      await this.update(to, options.migrationFn != null ? options.migrationFn(inspection.workspaceValue) : inspection.workspaceValue, vscode__WEBPACK_IMPORTED_MODULE_1__.ConfigurationTarget.Workspace);
      migrated = true;
    }
    if (inspection.workspaceFolderValue !== void 0) {
      await this.update(to, options.migrationFn != null ? options.migrationFn(inspection.workspaceFolderValue) : inspection.workspaceFolderValue, vscode__WEBPACK_IMPORTED_MODULE_1__.ConfigurationTarget.WorkspaceFolder);
      migrated = true;
    }
    if (!migrated && options.fallbackValue !== void 0) {
      await this.update(to, options.fallbackValue, vscode__WEBPACK_IMPORTED_MODULE_1__.ConfigurationTarget.Global);
      migrated = true;
    }
    return migrated;
  }
  async migrateIfMissing(from, to, options) {
    const fromInspection = configuration.inspect(from);
    if (fromInspection === void 0)
      return;
    const toInspection = configuration.inspect(to);
    if (fromInspection.globalValue !== void 0) {
      if (toInspection === void 0 || toInspection.globalValue === void 0) {
        await this.update(to, options.migrationFn != null ? options.migrationFn(fromInspection.globalValue) : fromInspection.globalValue, vscode__WEBPACK_IMPORTED_MODULE_1__.ConfigurationTarget.Global);
      }
    }
    if (fromInspection.workspaceValue !== void 0) {
      if (toInspection === void 0 || toInspection.workspaceValue === void 0) {
        await this.update(to, options.migrationFn != null ? options.migrationFn(fromInspection.workspaceValue) : fromInspection.workspaceValue, vscode__WEBPACK_IMPORTED_MODULE_1__.ConfigurationTarget.Workspace);
      }
    }
    if (fromInspection.workspaceFolderValue !== void 0) {
      if (toInspection === void 0 || toInspection.workspaceFolderValue === void 0) {
        await this.update(to, options.migrationFn != null ? options.migrationFn(fromInspection.workspaceFolderValue) : fromInspection.workspaceFolderValue, vscode__WEBPACK_IMPORTED_MODULE_1__.ConfigurationTarget.WorkspaceFolder);
      }
    }
  }
  name(section) {
    return section;
  }
  update(section, value, target) {
    return vscode__WEBPACK_IMPORTED_MODULE_1__.workspace.getConfiguration(configPrefix).update(section, value, target);
  }
  updateAny(section, value, target, scope) {
    return vscode__WEBPACK_IMPORTED_MODULE_1__.workspace.getConfiguration(void 0, target === vscode__WEBPACK_IMPORTED_MODULE_1__.ConfigurationTarget.Global ? void 0 : scope).update(section, value, target);
  }
  updateEffective(section, value) {
    const inspect = configuration.inspect(section);
    if (inspect.workspaceFolderValue !== void 0) {
      if (value === inspect.workspaceFolderValue)
        return Promise.resolve(void 0);
      return configuration.update(section, value, vscode__WEBPACK_IMPORTED_MODULE_1__.ConfigurationTarget.WorkspaceFolder);
    }
    if (inspect.workspaceValue !== void 0) {
      if (value === inspect.workspaceValue)
        return Promise.resolve(void 0);
      return configuration.update(section, value, vscode__WEBPACK_IMPORTED_MODULE_1__.ConfigurationTarget.Workspace);
    }
    if (inspect.globalValue === value || inspect.globalValue === void 0 && value === inspect.defaultValue) {
      return Promise.resolve(void 0);
    }
    return configuration.update(section, _system__WEBPACK_IMPORTED_MODULE_2__.Objects.areEqual(value, inspect.defaultValue) ? void 0 : value, vscode__WEBPACK_IMPORTED_MODULE_1__.ConfigurationTarget.Global);
  }
}
const configuration = new Configuration();


/***/ }),

/***/ "./src/constants.ts":
/*!**************************!*\
  !*** ./src/constants.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "quickPickTitleMaxChars": () => (/* binding */ quickPickTitleMaxChars),
/* harmony export */   "BuiltInCommands": () => (/* binding */ BuiltInCommands),
/* harmony export */   "BuiltInGitCommands": () => (/* binding */ BuiltInGitCommands),
/* harmony export */   "BuiltInGitConfiguration": () => (/* binding */ BuiltInGitConfiguration),
/* harmony export */   "ContextKeys": () => (/* binding */ ContextKeys),
/* harmony export */   "setContext": () => (/* binding */ setContext),
/* harmony export */   "Colors": () => (/* binding */ Colors),
/* harmony export */   "DocumentSchemes": () => (/* binding */ DocumentSchemes),
/* harmony export */   "getEditorIfActive": () => (/* binding */ getEditorIfActive),
/* harmony export */   "isActiveDocument": () => (/* binding */ isActiveDocument),
/* harmony export */   "isTextEditor": () => (/* binding */ isTextEditor),
/* harmony export */   "hasVisibleTextEditor": () => (/* binding */ hasVisibleTextEditor),
/* harmony export */   "GlyphChars": () => (/* binding */ GlyphChars),
/* harmony export */   "SyncedState": () => (/* binding */ SyncedState),
/* harmony export */   "GlobalState": () => (/* binding */ GlobalState),
/* harmony export */   "ImageMimetypes": () => (/* binding */ ImageMimetypes),
/* harmony export */   "WorkspaceState": () => (/* binding */ WorkspaceState)
/* harmony export */ });
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_0__);


const quickPickTitleMaxChars = 80;
var BuiltInCommands;
(function(BuiltInCommands2) {
  BuiltInCommands2["CloseActiveEditor"] = "workbench.action.closeActiveEditor";
  BuiltInCommands2["CloseAllEditors"] = "workbench.action.closeAllEditors";
  BuiltInCommands2["CursorMove"] = "cursorMove";
  BuiltInCommands2["Diff"] = "vscode.diff";
  BuiltInCommands2["EditorScroll"] = "editorScroll";
  BuiltInCommands2["ExecuteDocumentSymbolProvider"] = "vscode.executeDocumentSymbolProvider";
  BuiltInCommands2["ExecuteCodeLensProvider"] = "vscode.executeCodeLensProvider";
  BuiltInCommands2["FocusFilesExplorer"] = "workbench.files.action.focusFilesExplorer";
  BuiltInCommands2["InstallExtension"] = "workbench.extensions.installExtension";
  BuiltInCommands2["Open"] = "vscode.open";
  BuiltInCommands2["OpenFolder"] = "vscode.openFolder";
  BuiltInCommands2["OpenInTerminal"] = "openInTerminal";
  BuiltInCommands2["OpenWith"] = "vscode.openWith";
  BuiltInCommands2["NextEditor"] = "workbench.action.nextEditor";
  BuiltInCommands2["PreviewHtml"] = "vscode.previewHtml";
  BuiltInCommands2["RevealLine"] = "revealLine";
  BuiltInCommands2["SetContext"] = "setContext";
  BuiltInCommands2["ShowExplorerActivity"] = "workbench.view.explorer";
  BuiltInCommands2["ShowReferences"] = "editor.action.showReferences";
})(BuiltInCommands || (BuiltInCommands = {}));
var BuiltInGitCommands;
(function(BuiltInGitCommands2) {
  BuiltInGitCommands2["Publish"] = "git.publish";
  BuiltInGitCommands2["Pull"] = "git.pull";
  BuiltInGitCommands2["PullRebase"] = "git.pullRebase";
  BuiltInGitCommands2["Push"] = "git.push";
  BuiltInGitCommands2["PushForce"] = "git.pushForce";
  BuiltInGitCommands2["UndoCommit"] = "git.undoCommit";
})(BuiltInGitCommands || (BuiltInGitCommands = {}));
var BuiltInGitConfiguration;
(function(BuiltInGitConfiguration2) {
  BuiltInGitConfiguration2["AutoRepositoryDetection"] = "git.autoRepositoryDetection";
  BuiltInGitConfiguration2["FetchOnPull"] = "git.fetchOnPull";
  BuiltInGitConfiguration2["UseForcePushWithLease"] = "git.useForcePushWithLease";
})(BuiltInGitConfiguration || (BuiltInGitConfiguration = {}));
var ContextKeys;
(function(ContextKeys2) {
  ContextKeys2["ActionPrefix"] = "gitlens:action:";
  ContextKeys2["ActiveFileStatus"] = "gitlens:activeFileStatus";
  ContextKeys2["AnnotationStatus"] = "gitlens:annotationStatus";
  ContextKeys2["DisabledToggleCodeLens"] = "gitlens:disabledToggleCodeLens";
  ContextKeys2["Disabled"] = "gitlens:disabled";
  ContextKeys2["Enabled"] = "gitlens:enabled";
  ContextKeys2["HasConnectedRemotes"] = "gitlens:hasConnectedRemotes";
  ContextKeys2["HasRemotes"] = "gitlens:hasRemotes";
  ContextKeys2["HasRichRemotes"] = "gitlens:hasRichRemotes";
  ContextKeys2["Key"] = "gitlens:key";
  ContextKeys2["Readonly"] = "gitlens:readonly";
  ContextKeys2["ViewsCanCompare"] = "gitlens:views:canCompare";
  ContextKeys2["ViewsCanCompareFile"] = "gitlens:views:canCompare:file";
  ContextKeys2["ViewsCommitsMyCommitsOnly"] = "gitlens:views:commits:myCommitsOnly";
  ContextKeys2["ViewsFileHistoryCanPin"] = "gitlens:views:fileHistory:canPin";
  ContextKeys2["ViewsFileHistoryCursorFollowing"] = "gitlens:views:fileHistory:cursorFollowing";
  ContextKeys2["ViewsFileHistoryEditorFollowing"] = "gitlens:views:fileHistory:editorFollowing";
  ContextKeys2["ViewsLineHistoryEditorFollowing"] = "gitlens:views:lineHistory:editorFollowing";
  ContextKeys2["ViewsRepositoriesAutoRefresh"] = "gitlens:views:repositories:autoRefresh";
  ContextKeys2["ViewsSearchAndCompareKeepResults"] = "gitlens:views:searchAndCompare:keepResults";
  ContextKeys2["ViewsUpdatesVisible"] = "gitlens:views:updates:visible";
  ContextKeys2["ViewsWelcomeVisible"] = "gitlens:views:welcome:visible";
  ContextKeys2["Vsls"] = "gitlens:vsls";
})(ContextKeys || (ContextKeys = {}));
function setContext(key, value) {
  return vscode__WEBPACK_IMPORTED_MODULE_0__.commands.executeCommand(BuiltInCommands.SetContext, key, value);
}
var Colors;
(function(Colors2) {
  Colors2["GutterBackgroundColor"] = "gitlens.gutterBackgroundColor";
  Colors2["GutterForegroundColor"] = "gitlens.gutterForegroundColor";
  Colors2["GutterUncommittedForegroundColor"] = "gitlens.gutterUncommittedForegroundColor";
  Colors2["TrailingLineBackgroundColor"] = "gitlens.trailingLineBackgroundColor";
  Colors2["TrailingLineForegroundColor"] = "gitlens.trailingLineForegroundColor";
  Colors2["LineHighlightBackgroundColor"] = "gitlens.lineHighlightBackgroundColor";
  Colors2["LineHighlightOverviewRulerColor"] = "gitlens.lineHighlightOverviewRulerColor";
  Colors2["ClosedPullRequestIconColor"] = "gitlens.closedPullRequestIconColor";
  Colors2["OpenPullRequestIconColor"] = "gitlens.openPullRequestIconColor";
  Colors2["MergedPullRequestIconColor"] = "gitlens.mergedPullRequestIconColor";
  Colors2["UnpushlishedChangesIconColor"] = "gitlens.unpushlishedChangesIconColor";
  Colors2["UnpublishedCommitIconColor"] = "gitlens.unpublishedCommitIconColor";
  Colors2["UnpulledChangesIconColor"] = "gitlens.unpulledChangesIconColor";
})(Colors || (Colors = {}));
var DocumentSchemes;
(function(DocumentSchemes2) {
  DocumentSchemes2["DebugConsole"] = "debug";
  DocumentSchemes2["File"] = "file";
  DocumentSchemes2["Git"] = "git";
  DocumentSchemes2["GitLens"] = "gitlens";
  DocumentSchemes2["Output"] = "output";
  DocumentSchemes2["PRs"] = "pr";
  DocumentSchemes2["VirtualFile"] = "vscode-vfs";
  DocumentSchemes2["Vsls"] = "vsls";
})(DocumentSchemes || (DocumentSchemes = {}));
function getEditorIfActive(document) {
  const editor = vscode__WEBPACK_IMPORTED_MODULE_0__.window.activeTextEditor;
  return editor != null && editor.document === document ? editor : void 0;
}
function isActiveDocument(document) {
  const editor = vscode__WEBPACK_IMPORTED_MODULE_0__.window.activeTextEditor;
  return editor != null && editor.document === document;
}
function isTextEditor(editor) {
  const scheme = editor.document.uri.scheme;
  return scheme !== DocumentSchemes.Output && scheme !== DocumentSchemes.DebugConsole;
}
function hasVisibleTextEditor() {
  if (vscode__WEBPACK_IMPORTED_MODULE_0__.window.visibleTextEditors.length === 0)
    return false;
  return vscode__WEBPACK_IMPORTED_MODULE_0__.window.visibleTextEditors.some((e) => isTextEditor(e));
}
var GlyphChars;
(function(GlyphChars2) {
  GlyphChars2["AngleBracketLeftHeavy"] = "\u2770";
  GlyphChars2["AngleBracketRightHeavy"] = "\u2771";
  GlyphChars2["ArrowBack"] = "\u21A9";
  GlyphChars2["ArrowDown"] = "\u2193";
  GlyphChars2["ArrowDownUp"] = "\u21F5";
  GlyphChars2["ArrowDropRight"] = "\u2937";
  GlyphChars2["ArrowHeadRight"] = "\u27A4";
  GlyphChars2["ArrowLeft"] = "\u2190";
  GlyphChars2["ArrowLeftDouble"] = "\u21D0";
  GlyphChars2["ArrowLeftRight"] = "\u2194";
  GlyphChars2["ArrowLeftRightDouble"] = "\u21D4";
  GlyphChars2["ArrowLeftRightDoubleStrike"] = "\u21CE";
  GlyphChars2["ArrowLeftRightLong"] = "\u27F7";
  GlyphChars2["ArrowRight"] = "\u2192";
  GlyphChars2["ArrowRightDouble"] = "\u21D2";
  GlyphChars2["ArrowRightHollow"] = "\u21E8";
  GlyphChars2["ArrowUp"] = "\u2191";
  GlyphChars2["ArrowUpDown"] = "\u21C5";
  GlyphChars2["ArrowUpRight"] = "\u2197";
  GlyphChars2["ArrowsHalfLeftRight"] = "\u21CB";
  GlyphChars2["ArrowsHalfRightLeft"] = "\u21CC";
  GlyphChars2["ArrowsLeftRight"] = "\u21C6";
  GlyphChars2["ArrowsRightLeft"] = "\u21C4";
  GlyphChars2["Asterisk"] = "\u2217";
  GlyphChars2["Check"] = "\u2714";
  GlyphChars2["Dash"] = "\u2014";
  GlyphChars2["Dot"] = "\u2022";
  GlyphChars2["Ellipsis"] = "\u2026";
  GlyphChars2["EnDash"] = "\u2013";
  GlyphChars2["Envelope"] = "\u2709";
  GlyphChars2["EqualsTriple"] = "\u2261";
  GlyphChars2["Flag"] = "\u2691";
  GlyphChars2["FlagHollow"] = "\u2690";
  GlyphChars2["MiddleEllipsis"] = "\u22EF";
  GlyphChars2["MuchLessThan"] = "\u226A";
  GlyphChars2["MuchGreaterThan"] = "\u226B";
  GlyphChars2["Pencil"] = "\u270E";
  GlyphChars2["Space"] = "\xA0";
  GlyphChars2["SpaceThin"] = "\u2009";
  GlyphChars2["SpaceThinnest"] = "\u200A";
  GlyphChars2["SquareWithBottomShadow"] = "\u274F";
  GlyphChars2["SquareWithTopShadow"] = "\u2750";
  GlyphChars2["Warning"] = "\u26A0";
  GlyphChars2["ZeroWidthSpace"] = "\u200B";
})(GlyphChars || (GlyphChars = {}));
var SyncedState;
(function(SyncedState2) {
  SyncedState2["UpdatesViewVisible"] = "gitlens:views:updates:visible";
  SyncedState2["Version"] = "gitlens:synced:version";
  SyncedState2["WelcomeViewVisible"] = "gitlens:views:welcome:visible";
  SyncedState2["Deprecated_DisallowConnectionPrefix"] = "gitlens:disallow:connection:";
})(SyncedState || (SyncedState = {}));
var GlobalState;
(function(GlobalState2) {
  GlobalState2["Avatars"] = "gitlens:avatars";
  GlobalState2["PendingWelcomeOnFocus"] = "gitlens:pendingWelcomeOnFocus";
  GlobalState2["PendingWhatsNewOnFocus"] = "gitlens:pendingWhatsNewOnFocus";
  GlobalState2["Version"] = "gitlens:version";
  GlobalState2["Deprecated_Version"] = "gitlensVersion";
})(GlobalState || (GlobalState = {}));
const ImageMimetypes = {
  ".png": "image/png",
  ".gif": "image/gif",
  ".jpg": "image/jpeg",
  ".jpeg": "image/jpeg",
  ".jpe": "image/jpeg",
  ".webp": "image/webp",
  ".tif": "image/tiff",
  ".tiff": "image/tiff",
  ".bmp": "image/bmp"
};
var WorkspaceState;
(function(WorkspaceState2) {
  WorkspaceState2["BranchComparisons"] = "gitlens:branch:comparisons";
  WorkspaceState2["ConnectedPrefix"] = "gitlens:connected:";
  WorkspaceState2["DefaultRemote"] = "gitlens:remote:default";
  WorkspaceState2["GitCommandPaletteUsage"] = "gitlens:gitComandPalette:usage";
  WorkspaceState2["StarredBranches"] = "gitlens:starred:branches";
  WorkspaceState2["StarredRepositories"] = "gitlens:starred:repositories";
  WorkspaceState2["ViewsRepositoriesAutoRefresh"] = "gitlens:views:repositories:autoRefresh";
  WorkspaceState2["ViewsSearchAndCompareKeepResults"] = "gitlens:views:searchAndCompare:keepResults";
  WorkspaceState2["ViewsSearchAndComparePinnedItems"] = "gitlens:views:searchAndCompare:pinned";
  WorkspaceState2["Deprecated_DisallowConnectionPrefix"] = "gitlens:disallow:connection:";
  WorkspaceState2["Deprecated_PinnedComparisons"] = "gitlens:pinned:comparisons";
})(WorkspaceState || (WorkspaceState = {}));


/***/ }),

/***/ "./src/container.ts":
/*!**************************!*\
  !*** ./src/container.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Container": () => (/* binding */ Container)
/* harmony export */ });
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _annotations_autolinks__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./annotations/autolinks */ "./src/annotations/autolinks.ts");
/* harmony import */ var _annotations_fileAnnotationController__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./annotations/fileAnnotationController */ "./src/annotations/fileAnnotationController.ts");
/* harmony import */ var _annotations_lineAnnotationController__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./annotations/lineAnnotationController */ "./src/annotations/lineAnnotationController.ts");
/* harmony import */ var _api_actionRunners__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./api/actionRunners */ "./src/api/actionRunners.ts");
/* harmony import */ var _avatars__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./avatars */ "./src/avatars.ts");
/* harmony import */ var _codelens_codeLensController__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./codelens/codeLensController */ "./src/codelens/codeLensController.ts");
/* harmony import */ var _commands__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./commands */ "./src/commands.ts");
/* harmony import */ var _configuration__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./configuration */ "./src/configuration.ts");
/* harmony import */ var _git_fsProvider__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./git/fsProvider */ "./src/git/fsProvider.ts");
/* harmony import */ var _git_githubGitService__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./git/githubGitService */ "./src/git/githubGitService.ts");
/* harmony import */ var _hovers_lineHoverController__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./hovers/lineHoverController */ "./src/hovers/lineHoverController.ts");
/* harmony import */ var _keyboard__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./keyboard */ "./src/keyboard.ts");
/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./logger */ "./src/logger.ts");
/* harmony import */ var _statusbar_statusBarController__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./statusbar/statusBarController */ "./src/statusbar/statusBarController.ts");
/* harmony import */ var _system_decorators_memoize__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./system/decorators/memoize */ "./src/system/decorators/memoize.ts");
/* harmony import */ var _terminal_linkProvider__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./terminal/linkProvider */ "./src/terminal/linkProvider.ts");
/* harmony import */ var _trackers_gitDocumentTracker__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./trackers/gitDocumentTracker */ "./src/trackers/gitDocumentTracker.ts");
/* harmony import */ var _trackers_gitLineTracker__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./trackers/gitLineTracker */ "./src/trackers/gitLineTracker.ts");
/* harmony import */ var _views_branchesView__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./views/branchesView */ "./src/views/branchesView.ts");
/* harmony import */ var _views_commitsView__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./views/commitsView */ "./src/views/commitsView.ts");
/* harmony import */ var _views_contributorsView__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./views/contributorsView */ "./src/views/contributorsView.ts");
/* harmony import */ var _views_fileHistoryView__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./views/fileHistoryView */ "./src/views/fileHistoryView.ts");
/* harmony import */ var _views_lineHistoryView__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./views/lineHistoryView */ "./src/views/lineHistoryView.ts");
/* harmony import */ var _views_remotesView__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./views/remotesView */ "./src/views/remotesView.ts");
/* harmony import */ var _views_repositoriesView__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./views/repositoriesView */ "./src/views/repositoriesView.ts");
/* harmony import */ var _views_searchAndCompareView__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./views/searchAndCompareView */ "./src/views/searchAndCompareView.ts");
/* harmony import */ var _views_stashesView__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./views/stashesView */ "./src/views/stashesView.ts");
/* harmony import */ var _views_tagsView__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./views/tagsView */ "./src/views/tagsView.ts");
/* harmony import */ var _views_viewCommands__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./views/viewCommands */ "./src/views/viewCommands.ts");
/* harmony import */ var _views_viewDecorationProvider__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./views/viewDecorationProvider */ "./src/views/viewDecorationProvider.ts");
/* harmony import */ var _vsls_vsls__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./vsls/vsls */ "./src/vsls/vsls.ts");
/* harmony import */ var _webviews_rebaseEditor__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./webviews/rebaseEditor */ "./src/webviews/rebaseEditor.ts");
/* harmony import */ var _webviews_settingsWebview__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./webviews/settingsWebview */ "./src/webviews/settingsWebview.ts");
/* harmony import */ var _webviews_welcomeWebview__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./webviews/welcomeWebview */ "./src/webviews/welcomeWebview.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};



































const _Container = class {
  static initialize(extensionId, context, config) {
    this._extensionId = extensionId;
    this._context = context;
    this._config = _Container.applyMode(config);
    context.subscriptions.push(this._actionRunners = new _api_actionRunners__WEBPACK_IMPORTED_MODULE_4__.ActionRunners());
    context.subscriptions.push(this._lineTracker = new _trackers_gitLineTracker__WEBPACK_IMPORTED_MODULE_18__.GitLineTracker());
    context.subscriptions.push(this._tracker = new _trackers_gitDocumentTracker__WEBPACK_IMPORTED_MODULE_17__.GitDocumentTracker());
    context.subscriptions.push(this._vsls = new _vsls_vsls__WEBPACK_IMPORTED_MODULE_31__.VslsController());
    context.subscriptions.push(this._git = new _git_githubGitService__WEBPACK_IMPORTED_MODULE_10__.GitHubGitService());
    context.subscriptions.push(new _views_viewDecorationProvider__WEBPACK_IMPORTED_MODULE_30__.ViewFileDecorationProvider());
    this._tracker.initialize();
    context.subscriptions.push(this._fileAnnotationController = new _annotations_fileAnnotationController__WEBPACK_IMPORTED_MODULE_2__.FileAnnotationController());
    context.subscriptions.push(this._lineAnnotationController = new _annotations_lineAnnotationController__WEBPACK_IMPORTED_MODULE_3__.LineAnnotationController());
    context.subscriptions.push(this._lineHoverController = new _hovers_lineHoverController__WEBPACK_IMPORTED_MODULE_11__.LineHoverController());
    context.subscriptions.push(this._statusBarController = new _statusbar_statusBarController__WEBPACK_IMPORTED_MODULE_14__.StatusBarController());
    context.subscriptions.push(this._codeLensController = new _codelens_codeLensController__WEBPACK_IMPORTED_MODULE_6__.GitCodeLensController());
    context.subscriptions.push(this._keyboard = new _keyboard__WEBPACK_IMPORTED_MODULE_12__.Keyboard());
    context.subscriptions.push(this._settingsWebview = new _webviews_settingsWebview__WEBPACK_IMPORTED_MODULE_33__.SettingsWebview());
    context.subscriptions.push(this._welcomeWebview = new _webviews_welcomeWebview__WEBPACK_IMPORTED_MODULE_34__.WelcomeWebview());
    context.subscriptions.push(this._repositoriesView = new _views_repositoriesView__WEBPACK_IMPORTED_MODULE_25__.RepositoriesView());
    context.subscriptions.push(this._commitsView = new _views_commitsView__WEBPACK_IMPORTED_MODULE_20__.CommitsView());
    context.subscriptions.push(this._fileHistoryView = new _views_fileHistoryView__WEBPACK_IMPORTED_MODULE_22__.FileHistoryView());
    context.subscriptions.push(this._lineHistoryView = new _views_lineHistoryView__WEBPACK_IMPORTED_MODULE_23__.LineHistoryView());
    context.subscriptions.push(this._branchesView = new _views_branchesView__WEBPACK_IMPORTED_MODULE_19__.BranchesView());
    context.subscriptions.push(this._remotesView = new _views_remotesView__WEBPACK_IMPORTED_MODULE_24__.RemotesView());
    context.subscriptions.push(this._stashesView = new _views_stashesView__WEBPACK_IMPORTED_MODULE_27__.StashesView());
    context.subscriptions.push(this._tagsView = new _views_tagsView__WEBPACK_IMPORTED_MODULE_28__.TagsView());
    context.subscriptions.push(this._contributorsView = new _views_contributorsView__WEBPACK_IMPORTED_MODULE_21__.ContributorsView());
    context.subscriptions.push(this._searchAndCompareView = new _views_searchAndCompareView__WEBPACK_IMPORTED_MODULE_26__.SearchAndCompareView());
    context.subscriptions.push(this._rebaseEditor = new _webviews_rebaseEditor__WEBPACK_IMPORTED_MODULE_32__.RebaseEditorProvider());
    if (config.terminalLinks.enabled) {
      context.subscriptions.push(this._terminalLinks = new _terminal_linkProvider__WEBPACK_IMPORTED_MODULE_16__.GitTerminalLinkProvider());
    }
    context.subscriptions.push(_configuration__WEBPACK_IMPORTED_MODULE_8__.configuration.onDidChange((e) => {
      var _a;
      if (!_configuration__WEBPACK_IMPORTED_MODULE_8__.configuration.changed(e, "terminalLinks.enabled"))
        return;
      (_a = this._terminalLinks) == null ? void 0 : _a.dispose();
      if (_Container.config.terminalLinks.enabled) {
        context.subscriptions.push(this._terminalLinks = new _terminal_linkProvider__WEBPACK_IMPORTED_MODULE_16__.GitTerminalLinkProvider());
      }
    }));
    context.subscriptions.push(new _git_fsProvider__WEBPACK_IMPORTED_MODULE_9__.GitFileSystemProvider());
    context.subscriptions.push(_configuration__WEBPACK_IMPORTED_MODULE_8__.configuration.onWillChange(this.onConfigurationChanging, this));
  }
  static onConfigurationChanging(e) {
    this._config = void 0;
    if (_configuration__WEBPACK_IMPORTED_MODULE_8__.configuration.changed(e.change, "outputLevel")) {
      _logger__WEBPACK_IMPORTED_MODULE_13__.Logger.level = _configuration__WEBPACK_IMPORTED_MODULE_8__.configuration.get("outputLevel");
    }
    if (_configuration__WEBPACK_IMPORTED_MODULE_8__.configuration.changed(e.change, "defaultGravatarsStyle")) {
      (0,_avatars__WEBPACK_IMPORTED_MODULE_5__.resetAvatarCache)("fallback");
    }
    if (_configuration__WEBPACK_IMPORTED_MODULE_8__.configuration.changed(e.change, "mode") || _configuration__WEBPACK_IMPORTED_MODULE_8__.configuration.changed(e.change, "modes")) {
      if (this._applyModeConfigurationTransformBound == null) {
        this._applyModeConfigurationTransformBound = this.applyModeConfigurationTransform.bind(this);
      }
      e.transform = this._applyModeConfigurationTransformBound;
    }
  }
  static get actionRunners() {
    if (this._actionRunners == null) {
      this._context.subscriptions.push(this._actionRunners = new _api_actionRunners__WEBPACK_IMPORTED_MODULE_4__.ActionRunners());
    }
    return this._actionRunners;
  }
  static get autolinks() {
    if (this._autolinks == null) {
      this._context.subscriptions.push(this._autolinks = new _annotations_autolinks__WEBPACK_IMPORTED_MODULE_1__.Autolinks());
    }
    return this._autolinks;
  }
  static get codeLens() {
    return this._codeLensController;
  }
  static get branchesView() {
    if (this._branchesView == null) {
      this._context.subscriptions.push(this._branchesView = new _views_branchesView__WEBPACK_IMPORTED_MODULE_19__.BranchesView());
    }
    return this._branchesView;
  }
  static get commitsView() {
    if (this._commitsView == null) {
      this._context.subscriptions.push(this._commitsView = new _views_commitsView__WEBPACK_IMPORTED_MODULE_20__.CommitsView());
    }
    return this._commitsView;
  }
  static get config() {
    if (this._config == null) {
      this._config = _Container.applyMode(_configuration__WEBPACK_IMPORTED_MODULE_8__.configuration.get());
    }
    return this._config;
  }
  static get context() {
    return this._context;
  }
  static get contributorsView() {
    if (this._contributorsView == null) {
      this._context.subscriptions.push(this._contributorsView = new _views_contributorsView__WEBPACK_IMPORTED_MODULE_21__.ContributorsView());
    }
    return this._contributorsView;
  }
  static get extensionId() {
    return this._extensionId;
  }
  static get fileAnnotations() {
    return this._fileAnnotationController;
  }
  static get fileHistoryView() {
    if (this._fileHistoryView == null) {
      this._context.subscriptions.push(this._fileHistoryView = new _views_fileHistoryView__WEBPACK_IMPORTED_MODULE_22__.FileHistoryView());
    }
    return this._fileHistoryView;
  }
  static get git() {
    return this._git;
  }
  static get github() {
    if (this._github == null) {
      this._github = this._loadGitHubApi();
    }
    return this._github;
  }
  static async _loadGitHubApi() {
    try {
      return new (await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ./github/github */ "./src/github/github.ts"))).GitHubApi();
    } catch (ex) {
      _logger__WEBPACK_IMPORTED_MODULE_13__.Logger.error(ex);
      return void 0;
    }
  }
  static get insiders() {
    return this._extensionId.endsWith("-insiders");
  }
  static get keyboard() {
    return this._keyboard;
  }
  static get lineAnnotations() {
    return this._lineAnnotationController;
  }
  static get lineHistoryView() {
    if (this._lineHistoryView == null) {
      this._context.subscriptions.push(this._lineHistoryView = new _views_lineHistoryView__WEBPACK_IMPORTED_MODULE_23__.LineHistoryView());
    }
    return this._lineHistoryView;
  }
  static get lineHovers() {
    return this._lineHoverController;
  }
  static get lineTracker() {
    return this._lineTracker;
  }
  static get rebaseEditor() {
    if (this._rebaseEditor == null) {
      this._context.subscriptions.push(this._rebaseEditor = new _webviews_rebaseEditor__WEBPACK_IMPORTED_MODULE_32__.RebaseEditorProvider());
    }
    return this._rebaseEditor;
  }
  static get remotesView() {
    if (this._remotesView == null) {
      this._context.subscriptions.push(this._remotesView = new _views_remotesView__WEBPACK_IMPORTED_MODULE_24__.RemotesView());
    }
    return this._remotesView;
  }
  static get repositoriesView() {
    if (this._repositoriesView == null) {
      this._context.subscriptions.push(this._repositoriesView = new _views_repositoriesView__WEBPACK_IMPORTED_MODULE_25__.RepositoriesView());
    }
    return this._repositoriesView;
  }
  static get searchAndCompareView() {
    if (this._searchAndCompareView == null) {
      this._context.subscriptions.push(this._searchAndCompareView = new _views_searchAndCompareView__WEBPACK_IMPORTED_MODULE_26__.SearchAndCompareView());
    }
    return this._searchAndCompareView;
  }
  static get settingsWebview() {
    return this._settingsWebview;
  }
  static get stashesView() {
    if (this._stashesView == null) {
      this._context.subscriptions.push(this._stashesView = new _views_stashesView__WEBPACK_IMPORTED_MODULE_27__.StashesView());
    }
    return this._stashesView;
  }
  static get statusBar() {
    return this._statusBarController;
  }
  static get tagsView() {
    if (this._tagsView == null) {
      this._context.subscriptions.push(this._tagsView = new _views_tagsView__WEBPACK_IMPORTED_MODULE_28__.TagsView());
    }
    return this._tagsView;
  }
  static get tracker() {
    return this._tracker;
  }
  static get viewCommands() {
    if (this._viewCommands == null) {
      this._viewCommands = new _views_viewCommands__WEBPACK_IMPORTED_MODULE_29__.ViewCommands();
    }
    return this._viewCommands;
  }
  static get vsls() {
    return this._vsls;
  }
  static get welcomeWebview() {
    return this._welcomeWebview;
  }
  static applyMode(config) {
    var _a;
    if (!config.mode.active)
      return config;
    const mode = (_a = config.modes) == null ? void 0 : _a[config.mode.active];
    if (mode == null)
      return config;
    if (mode.annotations != null) {
      let command;
      switch (mode.annotations) {
        case "blame":
          config.blame.toggleMode = _configuration__WEBPACK_IMPORTED_MODULE_8__.AnnotationsToggleMode.Window;
          command = _commands__WEBPACK_IMPORTED_MODULE_7__.Commands.ToggleFileBlame;
          break;
        case "changes":
          config.changes.toggleMode = _configuration__WEBPACK_IMPORTED_MODULE_8__.AnnotationsToggleMode.Window;
          command = _commands__WEBPACK_IMPORTED_MODULE_7__.Commands.ToggleFileChanges;
          break;
        case "heatmap":
          config.heatmap.toggleMode = _configuration__WEBPACK_IMPORTED_MODULE_8__.AnnotationsToggleMode.Window;
          command = _commands__WEBPACK_IMPORTED_MODULE_7__.Commands.ToggleFileHeatmap;
          break;
      }
      if (command != null) {
        const commandArgs = {
          type: mode.annotations,
          on: true
        };
        setTimeout(() => vscode__WEBPACK_IMPORTED_MODULE_0__.commands.executeCommand(command, commandArgs), 50);
      }
    }
    if (mode.codeLens != null) {
      config.codeLens.enabled = mode.codeLens;
    }
    if (mode.currentLine != null) {
      config.currentLine.enabled = mode.currentLine;
    }
    if (mode.hovers != null) {
      config.hovers.enabled = mode.hovers;
    }
    if (mode.statusBar != null) {
      config.statusBar.enabled = mode.statusBar;
    }
    return config;
  }
  static applyModeConfigurationTransform(e) {
    if (this._configsAffectedByMode == null) {
      this._configsAffectedByMode = [
        `gitlens.${_configuration__WEBPACK_IMPORTED_MODULE_8__.configuration.name("mode")}`,
        `gitlens.${_configuration__WEBPACK_IMPORTED_MODULE_8__.configuration.name("modes")}`,
        `gitlens.${_configuration__WEBPACK_IMPORTED_MODULE_8__.configuration.name("blame.toggleMode")}`,
        `gitlens.${_configuration__WEBPACK_IMPORTED_MODULE_8__.configuration.name("changes.toggleMode")}`,
        `gitlens.${_configuration__WEBPACK_IMPORTED_MODULE_8__.configuration.name("codeLens")}`,
        `gitlens.${_configuration__WEBPACK_IMPORTED_MODULE_8__.configuration.name("currentLine")}`,
        `gitlens.${_configuration__WEBPACK_IMPORTED_MODULE_8__.configuration.name("heatmap.toggleMode")}`,
        `gitlens.${_configuration__WEBPACK_IMPORTED_MODULE_8__.configuration.name("hovers")}`,
        `gitlens.${_configuration__WEBPACK_IMPORTED_MODULE_8__.configuration.name("statusBar")}`
      ];
    }
    const original = e.affectsConfiguration;
    return {
      ...e,
      affectsConfiguration: (section, scope) => {
        var _a;
        return ((_a = this._configsAffectedByMode) == null ? void 0 : _a.some((n) => section.startsWith(n))) ? true : original(section, scope);
      }
    };
  }
};
let Container = _Container;
__publicField(Container, "_configsAffectedByMode");
__publicField(Container, "_applyModeConfigurationTransformBound");
__publicField(Container, "_terminalLinks");
__publicField(Container, "_actionRunners");
__publicField(Container, "_autolinks");
__publicField(Container, "_codeLensController");
__publicField(Container, "_branchesView");
__publicField(Container, "_commitsView");
__publicField(Container, "_config");
__publicField(Container, "_context");
__publicField(Container, "_contributorsView");
__publicField(Container, "_extensionId");
__publicField(Container, "_fileAnnotationController");
__publicField(Container, "_fileHistoryView");
__publicField(Container, "_git");
__publicField(Container, "_github");
__publicField(Container, "_keyboard");
__publicField(Container, "_lineAnnotationController");
__publicField(Container, "_lineHistoryView");
__publicField(Container, "_lineHoverController");
__publicField(Container, "_lineTracker");
__publicField(Container, "_rebaseEditor");
__publicField(Container, "_remotesView");
__publicField(Container, "_repositoriesView");
__publicField(Container, "_searchAndCompareView");
__publicField(Container, "_settingsWebview");
__publicField(Container, "_stashesView");
__publicField(Container, "_statusBarController");
__publicField(Container, "_tagsView");
__publicField(Container, "_tracker");
__publicField(Container, "_viewCommands");
__publicField(Container, "_vsls");
__publicField(Container, "_welcomeWebview");
__decorateClass([
  (0,_system_decorators_memoize__WEBPACK_IMPORTED_MODULE_15__.memoize)()
], Container, "insiders", 1);


/***/ }),

/***/ "./src/emojis.ts":
/*!***********************!*\
  !*** ./src/emojis.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "emojify": () => (/* binding */ emojify)
/* harmony export */ });
/* harmony import */ var _emojis_json__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./emojis.json */ "./src/emojis.json");


const emojiMap = _emojis_json__WEBPACK_IMPORTED_MODULE_0__;
const emojiRegex = /:([-+_a-z0-9]+):/g;
function emojify(message) {
  return message.replace(emojiRegex, (s, code) => {
    return emojiMap[code] || s;
  });
}


/***/ }),

/***/ "./src/env/browser/base64.ts":
/*!***********************************!*\
  !*** ./src/env/browser/base64.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "base64": () => (/* binding */ base64),
/* harmony export */   "fromBase64": () => (/* binding */ fromBase64)
/* harmony export */ });
const { fromCharCode } = String;
const textEncoder = new TextEncoder();
function base64(data) {
  let bytes = typeof data === "string" ? textEncoder.encode(data) : data;
  let output = "";
  for (let i = 0, { length } = bytes; i < length; i++) {
    output += fromCharCode(bytes[i]);
  }
  return globalThis.btoa(output);
}
function fromBase64(s) {
  const decoded = globalThis.atob(s);
  const len = decoded.length;
  const bytes = new Uint8Array(len);
  for (let i = 0; i < len; i++) {
    bytes[i] = decoded.charCodeAt(i);
  }
  return bytes;
}


/***/ }),

/***/ "./src/extension.ts":
/*!**************************!*\
  !*** ./src/extension.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "activate": () => (/* binding */ activate),
/* harmony export */   "deactivate": () => (/* binding */ deactivate),
/* harmony export */   "setEnabled": () => (/* binding */ setEnabled),
/* harmony export */   "setKeysForSync": () => (/* binding */ setKeysForSync),
/* harmony export */   "notifyOnUnsupportedGitVersion": () => (/* binding */ notifyOnUnsupportedGitVersion)
/* harmony export */ });
/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! path */ "./node_modules/path-browserify/index.js");
/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _api_api__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./api/api */ "./src/api/api.ts");
/* harmony import */ var _commands__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./commands */ "./src/commands.ts");
/* harmony import */ var _configuration__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./configuration */ "./src/configuration.ts");
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./constants */ "./src/constants.ts");
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./container */ "./src/container.ts");
/* harmony import */ var _git_git__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./git/git */ "./src/git/git.ts");
/* harmony import */ var _git_gitService__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./git/gitService */ "./src/git/gitService.ts");
/* harmony import */ var _git_gitUri__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./git/gitUri */ "./src/git/gitUri.ts");
/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./logger */ "./src/logger.ts");
/* harmony import */ var _messages__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./messages */ "./src/messages.ts");
/* harmony import */ var _partners__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./partners */ "./src/partners.ts");
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./system */ "./src/system.ts");
/* harmony import */ var _views_nodes__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./views/nodes */ "./src/views/nodes.ts");
















let _context;
async function activate(context) {
  var _a, _b;
  const start = process.hrtime();
  _context = context;
  let extensionId = "eamodio.gitlens";
  if (path__WEBPACK_IMPORTED_MODULE_0__.basename(context.globalStorageUri.fsPath) === "eamodio.gitlens-insiders") {
    extensionId = "eamodio.gitlens-insiders";
    const stable = vscode__WEBPACK_IMPORTED_MODULE_1__.extensions.getExtension("eamodio.gitlens");
    if (stable != null) {
      _logger__WEBPACK_IMPORTED_MODULE_10__.Logger.log("GitLens (Insiders) was NOT activated because GitLens is also installed");
      void _messages__WEBPACK_IMPORTED_MODULE_11__.Messages.showInsidersErrorMessage();
      return void 0;
    }
  }
  void (0,_constants__WEBPACK_IMPORTED_MODULE_5__.setContext)(_constants__WEBPACK_IMPORTED_MODULE_5__.ContextKeys.Enabled, true);
  if (!vscode__WEBPACK_IMPORTED_MODULE_1__.workspace.isTrusted) {
    void (0,_constants__WEBPACK_IMPORTED_MODULE_5__.setContext)(_constants__WEBPACK_IMPORTED_MODULE_5__.ContextKeys.Readonly, true);
    context.subscriptions.push(vscode__WEBPACK_IMPORTED_MODULE_1__.workspace.onDidGrantWorkspaceTrust(() => void (0,_constants__WEBPACK_IMPORTED_MODULE_5__.setContext)(_constants__WEBPACK_IMPORTED_MODULE_5__.ContextKeys.Readonly, void 0)));
  }
  setKeysForSync();
  _logger__WEBPACK_IMPORTED_MODULE_10__.Logger.configure(context, _configuration__WEBPACK_IMPORTED_MODULE_4__.configuration.get("outputLevel"), (o) => {
    if (_git_gitUri__WEBPACK_IMPORTED_MODULE_9__.GitUri.is(o)) {
      return `GitUri(${o.toString(true)}${o.repoPath ? ` repoPath=${o.repoPath}` : ""}${o.sha ? ` sha=${o.sha}` : ""})`;
    }
    if (_git_git__WEBPACK_IMPORTED_MODULE_7__.GitCommit.is(o)) {
      return `GitCommit(${o.sha ? ` sha=${o.sha}` : ""}${o.repoPath ? ` repoPath=${o.repoPath}` : ""})`;
    }
    if (_views_nodes__WEBPACK_IMPORTED_MODULE_14__.ViewNode.is(o)) {
      return o.toString();
    }
    return void 0;
  });
  const gitlens = vscode__WEBPACK_IMPORTED_MODULE_1__.extensions.getExtension(extensionId);
  const gitlensVersion = gitlens.packageJSON.version;
  const syncedVersion = context.globalState.get(_constants__WEBPACK_IMPORTED_MODULE_5__.SyncedState.Version);
  const localVersion = (_a = context.globalState.get(_constants__WEBPACK_IMPORTED_MODULE_5__.GlobalState.Version)) != null ? _a : context.globalState.get(_constants__WEBPACK_IMPORTED_MODULE_5__.GlobalState.Deprecated_Version);
  let previousVersion;
  if (localVersion == null || syncedVersion == null) {
    previousVersion = syncedVersion != null ? syncedVersion : localVersion;
  } else if (_system__WEBPACK_IMPORTED_MODULE_13__.Versions.compare(syncedVersion, localVersion) === 1) {
    previousVersion = syncedVersion;
  } else {
    previousVersion = localVersion;
  }
  if (_logger__WEBPACK_IMPORTED_MODULE_10__.Logger.willLog("debug")) {
    _logger__WEBPACK_IMPORTED_MODULE_10__.Logger.debug(`GitLens (v${gitlensVersion}): syncedVersion=${syncedVersion}, localVersion=${localVersion}, previousVersion=${previousVersion}, ${_constants__WEBPACK_IMPORTED_MODULE_5__.SyncedState.WelcomeViewVisible}=${context.globalState.get(_constants__WEBPACK_IMPORTED_MODULE_5__.SyncedState.WelcomeViewVisible)}, ${_constants__WEBPACK_IMPORTED_MODULE_5__.SyncedState.UpdatesViewVisible}=${context.globalState.get(_constants__WEBPACK_IMPORTED_MODULE_5__.SyncedState.UpdatesViewVisible)}`);
  }
  if (previousVersion == null) {
    void context.globalState.update(_constants__WEBPACK_IMPORTED_MODULE_5__.SyncedState.WelcomeViewVisible, true);
    void (0,_constants__WEBPACK_IMPORTED_MODULE_5__.setContext)(_constants__WEBPACK_IMPORTED_MODULE_5__.ContextKeys.ViewsWelcomeVisible, true);
    void context.globalState.update(_constants__WEBPACK_IMPORTED_MODULE_5__.SyncedState.UpdatesViewVisible, false);
    void (0,_constants__WEBPACK_IMPORTED_MODULE_5__.setContext)(_constants__WEBPACK_IMPORTED_MODULE_5__.ContextKeys.ViewsUpdatesVisible, false);
  } else {
    if (_system__WEBPACK_IMPORTED_MODULE_13__.Versions.compare(previousVersion, _system__WEBPACK_IMPORTED_MODULE_13__.Versions.from(11, 0, 5)) !== 1) {
      await context.globalState.update(_constants__WEBPACK_IMPORTED_MODULE_5__.SyncedState.UpdatesViewVisible, true);
    }
    void (0,_constants__WEBPACK_IMPORTED_MODULE_5__.setContext)(_constants__WEBPACK_IMPORTED_MODULE_5__.ContextKeys.ViewsWelcomeVisible, (_b = context.globalState.get(_constants__WEBPACK_IMPORTED_MODULE_5__.SyncedState.WelcomeViewVisible)) != null ? _b : false);
    void (0,_constants__WEBPACK_IMPORTED_MODULE_5__.setContext)(_constants__WEBPACK_IMPORTED_MODULE_5__.ContextKeys.ViewsUpdatesVisible, context.globalState.get(_constants__WEBPACK_IMPORTED_MODULE_5__.SyncedState.UpdatesViewVisible) !== false);
  }
  const enabled = vscode__WEBPACK_IMPORTED_MODULE_1__.workspace.getConfiguration("git", null).get("enabled", true);
  if (!enabled) {
    _logger__WEBPACK_IMPORTED_MODULE_10__.Logger.log(`GitLens (v${gitlensVersion}) was NOT activated -- "git.enabled": false`);
    void setEnabled(false);
    void _messages__WEBPACK_IMPORTED_MODULE_11__.Messages.showGitDisabledErrorMessage();
    return void 0;
  }
  _configuration__WEBPACK_IMPORTED_MODULE_4__.Configuration.configure(context);
  const cfg = _configuration__WEBPACK_IMPORTED_MODULE_4__.configuration.get();
  _container__WEBPACK_IMPORTED_MODULE_6__.Container.initialize(extensionId, context, cfg);
  (0,_commands__WEBPACK_IMPORTED_MODULE_3__.registerCommands)(context);
  registerBuiltInActionRunners(context);
  (0,_partners__WEBPACK_IMPORTED_MODULE_12__.registerPartnerActionRunners)(context);
  const gitVersion = _git_git__WEBPACK_IMPORTED_MODULE_7__.Git.getGitVersion();
  notifyOnUnsupportedGitVersion(gitVersion);
  void showWelcomeOrWhatsNew(context, gitlensVersion, previousVersion);
  void context.globalState.update(_constants__WEBPACK_IMPORTED_MODULE_5__.GlobalState.Version, gitlensVersion);
  if (syncedVersion == null || _system__WEBPACK_IMPORTED_MODULE_13__.Versions.compare(gitlensVersion, syncedVersion) === 1) {
    void context.globalState.update(_constants__WEBPACK_IMPORTED_MODULE_5__.SyncedState.Version, gitlensVersion);
  }
  if (cfg.outputLevel === _configuration__WEBPACK_IMPORTED_MODULE_4__.TraceLevel.Debug) {
    setTimeout(async () => {
      if (cfg.outputLevel !== _configuration__WEBPACK_IMPORTED_MODULE_4__.TraceLevel.Debug)
        return;
      if (await _messages__WEBPACK_IMPORTED_MODULE_11__.Messages.showDebugLoggingWarningMessage()) {
        void vscode__WEBPACK_IMPORTED_MODULE_1__.commands.executeCommand(_commands__WEBPACK_IMPORTED_MODULE_3__.Commands.DisableDebugLogging);
      }
    }, 6e4);
  }
  _logger__WEBPACK_IMPORTED_MODULE_10__.Logger.log(`GitLens (v${gitlensVersion}${cfg.mode.active ? `, mode: ${cfg.mode.active}` : ""}) activated ${_constants__WEBPACK_IMPORTED_MODULE_5__.GlyphChars.Dot} ${_system__WEBPACK_IMPORTED_MODULE_13__.Strings.getDurationMilliseconds(start)} ms`);
  const api = new _api_api__WEBPACK_IMPORTED_MODULE_2__.Api();
  return api;
}
function deactivate() {
}
async function setEnabled(enabled) {
  await Promise.all([(0,_constants__WEBPACK_IMPORTED_MODULE_5__.setContext)(_constants__WEBPACK_IMPORTED_MODULE_5__.ContextKeys.Enabled, enabled), (0,_constants__WEBPACK_IMPORTED_MODULE_5__.setContext)(_constants__WEBPACK_IMPORTED_MODULE_5__.ContextKeys.Disabled, !enabled)]);
}
function setKeysForSync(...keys) {
  return _context == null ? void 0 : _context.globalState.setKeysForSync([
    ...keys,
    _constants__WEBPACK_IMPORTED_MODULE_5__.SyncedState.UpdatesViewVisible,
    _constants__WEBPACK_IMPORTED_MODULE_5__.SyncedState.Version,
    _constants__WEBPACK_IMPORTED_MODULE_5__.SyncedState.WelcomeViewVisible
  ]);
}
function notifyOnUnsupportedGitVersion(version) {
  if (_git_gitService__WEBPACK_IMPORTED_MODULE_8__.GitService.compareGitVersion("2.7.2") !== -1)
    return;
  void _messages__WEBPACK_IMPORTED_MODULE_11__.Messages.showGitVersionUnsupportedErrorMessage(version, "2.7.2");
}
function registerBuiltInActionRunners(context) {
  context.subscriptions.push(_container__WEBPACK_IMPORTED_MODULE_6__.Container.actionRunners.registerBuiltIn("createPullRequest", {
    label: (ctx) => {
      var _a, _b, _c;
      return `Create Pull Request on ${(_c = (_b = (_a = ctx.remote) == null ? void 0 : _a.provider) == null ? void 0 : _b.name) != null ? _c : "Remote"}`;
    },
    run: async (ctx) => {
      var _a, _b;
      if (ctx.type !== "createPullRequest")
        return;
      void await (0,_commands__WEBPACK_IMPORTED_MODULE_3__.executeCommand)(_commands__WEBPACK_IMPORTED_MODULE_3__.Commands.CreatePullRequestOnRemote, {
        base: void 0,
        compare: ctx.branch.isRemote ? _git_git__WEBPACK_IMPORTED_MODULE_7__.GitBranch.getNameWithoutRemote(ctx.branch.name) : ctx.branch.upstream ? _git_git__WEBPACK_IMPORTED_MODULE_7__.GitBranch.getNameWithoutRemote(ctx.branch.upstream) : ctx.branch.name,
        remote: (_b = (_a = ctx.remote) == null ? void 0 : _a.name) != null ? _b : "",
        repoPath: ctx.repoPath
      });
    }
  }), _container__WEBPACK_IMPORTED_MODULE_6__.Container.actionRunners.registerBuiltIn("openPullRequest", {
    label: (ctx) => {
      var _a, _b;
      return `Open Pull Request on ${(_b = (_a = ctx.provider) == null ? void 0 : _a.name) != null ? _b : "Remote"}`;
    },
    run: async (ctx) => {
      if (ctx.type !== "openPullRequest")
        return;
      void await (0,_commands__WEBPACK_IMPORTED_MODULE_3__.executeCommand)(_commands__WEBPACK_IMPORTED_MODULE_3__.Commands.OpenPullRequestOnRemote, {
        pr: { url: ctx.pullRequest.url }
      });
    }
  }));
}
async function showWelcomeOrWhatsNew(context, version, previousVersion) {
  if (previousVersion == null) {
    _logger__WEBPACK_IMPORTED_MODULE_10__.Logger.log(`GitLens first-time install; window.focused=${vscode__WEBPACK_IMPORTED_MODULE_1__.window.state.focused}`);
    if (_container__WEBPACK_IMPORTED_MODULE_6__.Container.config.showWelcomeOnInstall === false)
      return;
    if (vscode__WEBPACK_IMPORTED_MODULE_1__.window.state.focused) {
      await context.globalState.update(_constants__WEBPACK_IMPORTED_MODULE_5__.GlobalState.PendingWelcomeOnFocus, void 0);
      await vscode__WEBPACK_IMPORTED_MODULE_1__.commands.executeCommand(_commands__WEBPACK_IMPORTED_MODULE_3__.Commands.ShowWelcomePage);
    } else {
      await context.globalState.update(_constants__WEBPACK_IMPORTED_MODULE_5__.GlobalState.PendingWelcomeOnFocus, true);
      const disposable = vscode__WEBPACK_IMPORTED_MODULE_1__.window.onDidChangeWindowState((e) => {
        if (!e.focused)
          return;
        disposable.dispose();
        if (context.globalState.get(_constants__WEBPACK_IMPORTED_MODULE_5__.GlobalState.PendingWelcomeOnFocus) === true) {
          void context.globalState.update(_constants__WEBPACK_IMPORTED_MODULE_5__.GlobalState.PendingWelcomeOnFocus, void 0);
          if (_container__WEBPACK_IMPORTED_MODULE_6__.Container.config.showWelcomeOnInstall) {
            void vscode__WEBPACK_IMPORTED_MODULE_1__.commands.executeCommand(_commands__WEBPACK_IMPORTED_MODULE_3__.Commands.ShowWelcomePage);
          }
        }
      });
      context.subscriptions.push(disposable);
    }
    return;
  }
  if (previousVersion !== version) {
    _logger__WEBPACK_IMPORTED_MODULE_10__.Logger.log(`GitLens upgraded from v${previousVersion} to v${version}; window.focused=${vscode__WEBPACK_IMPORTED_MODULE_1__.window.state.focused}`);
  }
  const [major, minor] = version.split(".").map((v) => parseInt(v, 10));
  const [prevMajor, prevMinor] = previousVersion.split(".").map((v) => parseInt(v, 10));
  if (major === prevMajor && minor === prevMinor || major < prevMajor || major === prevMajor && minor < prevMinor) {
    return;
  }
  if (major !== prevMajor && _container__WEBPACK_IMPORTED_MODULE_6__.Container.config.showWhatsNewAfterUpgrades) {
    if (vscode__WEBPACK_IMPORTED_MODULE_1__.window.state.focused) {
      await context.globalState.update(_constants__WEBPACK_IMPORTED_MODULE_5__.GlobalState.PendingWhatsNewOnFocus, void 0);
      await _messages__WEBPACK_IMPORTED_MODULE_11__.Messages.showWhatsNewMessage(version);
    } else {
      await context.globalState.update(_constants__WEBPACK_IMPORTED_MODULE_5__.GlobalState.PendingWhatsNewOnFocus, true);
      const disposable = vscode__WEBPACK_IMPORTED_MODULE_1__.window.onDidChangeWindowState((e) => {
        if (!e.focused)
          return;
        disposable.dispose();
        if (context.globalState.get(_constants__WEBPACK_IMPORTED_MODULE_5__.GlobalState.PendingWhatsNewOnFocus) === true) {
          void context.globalState.update(_constants__WEBPACK_IMPORTED_MODULE_5__.GlobalState.PendingWhatsNewOnFocus, void 0);
          if (_container__WEBPACK_IMPORTED_MODULE_6__.Container.config.showWhatsNewAfterUpgrades) {
            void _messages__WEBPACK_IMPORTED_MODULE_11__.Messages.showWhatsNewMessage(version);
          }
        }
      });
      context.subscriptions.push(disposable);
    }
  }
}


/***/ }),

/***/ "./src/git/formatters/commitFormatter.ts":
/*!***********************************************!*\
  !*** ./src/git/formatters/commitFormatter.ts ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CommitFormatter": () => (/* binding */ CommitFormatter)
/* harmony export */ });
/* harmony import */ var _avatars__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../avatars */ "./src/avatars.ts");
/* harmony import */ var _commands__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../commands */ "./src/commands.ts");
/* harmony import */ var _configuration__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../configuration */ "./src/configuration.ts");
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../constants */ "./src/constants.ts");
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../container */ "./src/container.ts");
/* harmony import */ var _emojis__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../emojis */ "./src/emojis.ts");
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../system */ "./src/system.ts");
/* harmony import */ var _git__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../git */ "./src/git/git.ts");
/* harmony import */ var _gitUri__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../gitUri */ "./src/git/gitUri.ts");
/* harmony import */ var _formatter__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./formatter */ "./src/git/formatters/formatter.ts");











const emptyStr = "";
class CommitFormatter extends _formatter__WEBPACK_IMPORTED_MODULE_9__.Formatter {
  get _authorDate() {
    return this._item.formatAuthorDate(this._options.dateFormat);
  }
  get _authorDateAgo() {
    return this._item.formatAuthorDateFromNow();
  }
  get _authorDateAgoShort() {
    return this._item.formatCommitterDateFromNow("en-short");
  }
  get _committerDate() {
    return this._item.formatCommitterDate(this._options.dateFormat);
  }
  get _committerDateAgo() {
    return this._item.formatCommitterDateFromNow();
  }
  get _committerDateAgoShort() {
    return this._item.formatCommitterDateFromNow("en-short");
  }
  get _date() {
    return this._item.formatDate(this._options.dateFormat);
  }
  get _dateAgo() {
    return this._item.formatDateFromNow();
  }
  get _dateAgoShort() {
    return this._item.formatDateFromNow("en-short");
  }
  get _pullRequestDate() {
    var _a;
    const { pullRequestOrRemote: pr } = this._options;
    if (pr == null || !_git__WEBPACK_IMPORTED_MODULE_7__.PullRequest.is(pr))
      return emptyStr;
    return (_a = pr.formatDate(this._options.dateFormat)) != null ? _a : emptyStr;
  }
  get _pullRequestDateAgo() {
    var _a;
    const { pullRequestOrRemote: pr } = this._options;
    if (pr == null || !_git__WEBPACK_IMPORTED_MODULE_7__.PullRequest.is(pr))
      return emptyStr;
    return (_a = pr.formatDateFromNow()) != null ? _a : emptyStr;
  }
  get _pullRequestDateOrAgo() {
    const dateStyle = this._options.dateStyle != null ? this._options.dateStyle : _container__WEBPACK_IMPORTED_MODULE_4__.Container.config.defaultDateStyle;
    return dateStyle === _configuration__WEBPACK_IMPORTED_MODULE_2__.DateStyle.Absolute ? this._pullRequestDate : this._pullRequestDateAgo;
  }
  get ago() {
    return this._padOrTruncate(this._dateAgo, this._options.tokenOptions.ago);
  }
  get agoOrDate() {
    const dateStyle = this._options.dateStyle != null ? this._options.dateStyle : _container__WEBPACK_IMPORTED_MODULE_4__.Container.config.defaultDateStyle;
    return this._padOrTruncate(dateStyle === _configuration__WEBPACK_IMPORTED_MODULE_2__.DateStyle.Absolute ? this._date : this._dateAgo, this._options.tokenOptions.agoOrDate);
  }
  get agoOrDateShort() {
    const dateStyle = this._options.dateStyle != null ? this._options.dateStyle : _container__WEBPACK_IMPORTED_MODULE_4__.Container.config.defaultDateStyle;
    return this._padOrTruncate(dateStyle === _configuration__WEBPACK_IMPORTED_MODULE_2__.DateStyle.Absolute ? this._date : this._dateAgoShort, this._options.tokenOptions.agoOrDateShort);
  }
  get author() {
    const author = this._padOrTruncate(this._item.author, this._options.tokenOptions.author);
    if (!this._options.markdown) {
      return author;
    }
    return `[${author}](mailto:${this._item.email} "Email ${this._item.author} (${this._item.email})")`;
  }
  get authorAgo() {
    return this._padOrTruncate(this._authorDateAgo, this._options.tokenOptions.authorAgo);
  }
  get authorAgoOrDate() {
    const dateStyle = this._options.dateStyle != null ? this._options.dateStyle : _container__WEBPACK_IMPORTED_MODULE_4__.Container.config.defaultDateStyle;
    return this._padOrTruncate(dateStyle === _configuration__WEBPACK_IMPORTED_MODULE_2__.DateStyle.Absolute ? this._authorDate : this._authorDateAgo, this._options.tokenOptions.authorAgoOrDate);
  }
  get authorAgoOrDateShort() {
    const dateStyle = this._options.dateStyle != null ? this._options.dateStyle : _container__WEBPACK_IMPORTED_MODULE_4__.Container.config.defaultDateStyle;
    return this._padOrTruncate(dateStyle === _configuration__WEBPACK_IMPORTED_MODULE_2__.DateStyle.Absolute ? this._authorDate : this._authorDateAgoShort, this._options.tokenOptions.authorAgoOrDateShort);
  }
  get authorDate() {
    return this._padOrTruncate(this._authorDate, this._options.tokenOptions.authorDate);
  }
  get authorNotYou() {
    if (this._item.author === "You")
      return this._padOrTruncate(emptyStr, this._options.tokenOptions.authorNotYou);
    const author = this._padOrTruncate(this._item.author, this._options.tokenOptions.authorNotYou);
    if (!this._options.markdown) {
      return author;
    }
    return `[${author}](mailto:${this._item.email} "Email ${this._item.author} (${this._item.email})")`;
  }
  get avatar() {
    if (!this._options.markdown || !_container__WEBPACK_IMPORTED_MODULE_4__.Container.config.hovers.avatars) {
      return this._padOrTruncate(emptyStr, this._options.tokenOptions.avatar);
    }
    const presence = this._options.presence;
    if (presence != null) {
      const title = `${this._item.author} ${this._item.author === "You" ? "are" : "is"} ${presence.status === "dnd" ? "in " : emptyStr}${presence.statusText.toLocaleLowerCase()}`;
      const avatarMarkdownPromise = this._getAvatarMarkdown(title, this._options.avatarSize);
      return avatarMarkdownPromise.then((md) => this._padOrTruncate(`${md}${this._getPresenceMarkdown(presence, title)}`, this._options.tokenOptions.avatar));
    }
    return this._getAvatarMarkdown(this._item.author, this._options.avatarSize);
  }
  async _getAvatarMarkdown(title, size) {
    size = size != null ? size : _container__WEBPACK_IMPORTED_MODULE_4__.Container.config.hovers.avatarSize;
    const avatarPromise = this._item.getAvatarUri({
      defaultStyle: _container__WEBPACK_IMPORTED_MODULE_4__.Container.config.defaultGravatarsStyle,
      size
    });
    return this._padOrTruncate(`![${title}](${(await avatarPromise).toString(true)}|width=${size},height=${size} "${title}")`, this._options.tokenOptions.avatar);
  }
  _getPresenceMarkdown(presence, title) {
    return `![${title}](${(0,_avatars__WEBPACK_IMPORTED_MODULE_0__.getPresenceDataUri)(presence.status)} "${title}")`;
  }
  get changes() {
    return this._padOrTruncate(_git__WEBPACK_IMPORTED_MODULE_7__.GitLogCommit.is(this._item) ? this._item.getFormattedDiffStatus() : emptyStr, this._options.tokenOptions.changes);
  }
  get changesDetail() {
    return this._padOrTruncate(_git__WEBPACK_IMPORTED_MODULE_7__.GitLogCommit.is(this._item) ? this._item.getFormattedDiffStatus({ expand: true, separator: ", " }) : emptyStr, this._options.tokenOptions.changesDetail);
  }
  get changesShort() {
    return this._padOrTruncate(_git__WEBPACK_IMPORTED_MODULE_7__.GitLogCommit.is(this._item) ? this._item.getFormattedDiffStatus({ compact: true, separator: emptyStr }) : emptyStr, this._options.tokenOptions.changesShort);
  }
  get commands() {
    var _a, _b, _c, _d, _e, _f, _g;
    if (!this._options.markdown)
      return this._padOrTruncate(emptyStr, this._options.tokenOptions.commands);
    let commands;
    if (this._item.isUncommitted) {
      const { previousLineDiffUris: diffUris } = this._options;
      if ((diffUris == null ? void 0 : diffUris.previous) != null) {
        commands = `\`${this._padOrTruncate(_git__WEBPACK_IMPORTED_MODULE_7__.GitRevision.shorten(_git__WEBPACK_IMPORTED_MODULE_7__.GitRevision.isUncommittedStaged(diffUris.current.sha) ? diffUris.current.sha : _git__WEBPACK_IMPORTED_MODULE_7__.GitRevision.uncommitted), this._options.tokenOptions.commands)}\``;
        commands += `&nbsp; **[\`${_constants__WEBPACK_IMPORTED_MODULE_3__.GlyphChars.MuchLessThan}\`](${_commands__WEBPACK_IMPORTED_MODULE_1__.DiffWithCommand.getMarkdownCommandArgs({
          lhs: {
            sha: (_a = diffUris.previous.sha) != null ? _a : emptyStr,
            uri: diffUris.previous.documentUri()
          },
          rhs: {
            sha: (_b = diffUris.current.sha) != null ? _b : emptyStr,
            uri: diffUris.current.documentUri()
          },
          repoPath: this._item.repoPath,
          line: (_c = this._options.editor) == null ? void 0 : _c.line
        })} "Open Changes")** `;
      } else {
        commands = `\`${this._padOrTruncate(_git__WEBPACK_IMPORTED_MODULE_7__.GitRevision.shorten(this._item.isUncommittedStaged ? _git__WEBPACK_IMPORTED_MODULE_7__.GitRevision.uncommittedStaged : _git__WEBPACK_IMPORTED_MODULE_7__.GitRevision.uncommitted), this._options.tokenOptions.commands)}\``;
      }
      return commands;
    }
    const separator = " &nbsp;&nbsp;|&nbsp;&nbsp; ";
    commands = `---

[$(git-commit) ${this.id}](${_commands__WEBPACK_IMPORTED_MODULE_1__.ShowQuickCommitCommand.getMarkdownCommandArgs(this._item.sha)} "Show Commit")`;
    commands += ` &nbsp;&nbsp;[$(compare-changes)](${_commands__WEBPACK_IMPORTED_MODULE_1__.DiffWithCommand.getMarkdownCommandArgs(this._item, (_d = this._options.editor) == null ? void 0 : _d.line)} "Open Changes")`;
    if (this._item.previousSha != null) {
      const uri = _gitUri__WEBPACK_IMPORTED_MODULE_8__.GitUri.toRevisionUri(this._item.previousSha, this._item.previousUri.fsPath, this._item.repoPath);
      commands += ` &nbsp;&nbsp;[$(versions)](${_commands__WEBPACK_IMPORTED_MODULE_1__.OpenFileAtRevisionCommand.getMarkdownCommandArgs(uri, _configuration__WEBPACK_IMPORTED_MODULE_2__.FileAnnotationType.Blame, (_e = this._options.editor) == null ? void 0 : _e.line)} "Open Blame Prior to this Change")`;
    }
    if (this._options.remotes != null && this._options.remotes.length !== 0) {
      const providers = _git__WEBPACK_IMPORTED_MODULE_7__.GitRemote.getHighlanderProviders(this._options.remotes);
      commands += ` &nbsp;&nbsp;[$(globe)](${_commands__WEBPACK_IMPORTED_MODULE_1__.OpenCommitOnRemoteCommand.getMarkdownCommandArgs(this._item.sha)} "Open Commit on ${(providers == null ? void 0 : providers.length) ? providers[0].name : "Remote"}")`;
    }
    const { pullRequestOrRemote: pr } = this._options;
    if (pr != null) {
      if (_git__WEBPACK_IMPORTED_MODULE_7__.PullRequest.is(pr)) {
        commands += `${separator}[$(git-pull-request) PR #${pr.id}](${(0,_commands__WEBPACK_IMPORTED_MODULE_1__.getMarkdownActionCommand)("openPullRequest", {
          repoPath: this._item.repoPath,
          provider: { id: pr.provider.id, name: pr.provider.name, domain: pr.provider.domain },
          pullRequest: { id: pr.id, url: pr.url }
        })} "Open Pull Request \\#${pr.id}${_container__WEBPACK_IMPORTED_MODULE_4__.Container.actionRunners.count("openPullRequest") == 1 ? ` on ${pr.provider.name}` : "..."}
${_constants__WEBPACK_IMPORTED_MODULE_3__.GlyphChars.Dash.repeat(2)}
${_system__WEBPACK_IMPORTED_MODULE_6__.Strings.escapeMarkdown(pr.title).replace(/"/g, '\\"')}
${pr.state}, ${pr.formatDateFromNow()}")`;
      } else if (pr instanceof _system__WEBPACK_IMPORTED_MODULE_6__.Promises.CancellationError) {
        commands += `${separator}[$(git-pull-request) PR $(loading~spin)](command:${_commands__WEBPACK_IMPORTED_MODULE_1__.Commands.RefreshHover} "Searching for a Pull Request (if any) that introduced this commit...")`;
      } else if (pr.provider != null && _container__WEBPACK_IMPORTED_MODULE_4__.Container.config.integrations.enabled) {
        commands += `${separator}[$(plug) Connect to ${pr.provider.name}${_constants__WEBPACK_IMPORTED_MODULE_3__.GlyphChars.Ellipsis}](${_commands__WEBPACK_IMPORTED_MODULE_1__.ConnectRemoteProviderCommand.getMarkdownCommandArgs(pr)} "Connect to ${pr.provider.name} to enable the display of the Pull Request (if any) that introduced this commit")`;
      }
    }
    if (_container__WEBPACK_IMPORTED_MODULE_4__.Container.actionRunners.count("hover.commands") > 0) {
      commands += `${separator}[$(organization) Team${_constants__WEBPACK_IMPORTED_MODULE_3__.GlyphChars.SpaceThinnest}${_constants__WEBPACK_IMPORTED_MODULE_3__.GlyphChars.Ellipsis}](${(0,_commands__WEBPACK_IMPORTED_MODULE_1__.getMarkdownActionCommand)("hover.commands", {
        repoPath: this._item.repoPath,
        commit: {
          sha: this._item.sha,
          author: {
            name: this._item.author,
            email: this._item.email,
            presence: this._options.presence
          }
        },
        file: this._options.editor != null ? {
          uri: (_f = this._options.editor) == null ? void 0 : _f.uri.toString(),
          line: (_g = this._options.editor) == null ? void 0 : _g.line
        } : void 0
      })} "Show Team Actions")`;
    }
    commands += `${separator}[$(ellipsis)](${_commands__WEBPACK_IMPORTED_MODULE_1__.ShowQuickCommitFileCommand.getMarkdownCommandArgs({
      revisionUri: _gitUri__WEBPACK_IMPORTED_MODULE_8__.GitUri.toRevisionUri(this._item.toGitUri()).toString(true)
    })} "Show More Actions")`;
    return this._padOrTruncate(commands, this._options.tokenOptions.commands);
  }
  get committerAgo() {
    return this._padOrTruncate(this._committerDateAgo, this._options.tokenOptions.committerAgo);
  }
  get committerAgoOrDate() {
    const dateStyle = this._options.dateStyle != null ? this._options.dateStyle : _container__WEBPACK_IMPORTED_MODULE_4__.Container.config.defaultDateStyle;
    return this._padOrTruncate(dateStyle === _configuration__WEBPACK_IMPORTED_MODULE_2__.DateStyle.Absolute ? this._committerDate : this._committerDateAgo, this._options.tokenOptions.committerAgoOrDate);
  }
  get committerAgoOrDateShort() {
    const dateStyle = this._options.dateStyle != null ? this._options.dateStyle : _container__WEBPACK_IMPORTED_MODULE_4__.Container.config.defaultDateStyle;
    return this._padOrTruncate(dateStyle === _configuration__WEBPACK_IMPORTED_MODULE_2__.DateStyle.Absolute ? this._committerDate : this._committerDateAgoShort, this._options.tokenOptions.committerAgoOrDateShort);
  }
  get committerDate() {
    return this._padOrTruncate(this._committerDate, this._options.tokenOptions.committerDate);
  }
  get date() {
    return this._padOrTruncate(this._date, this._options.tokenOptions.date);
  }
  get email() {
    var _a;
    return this._padOrTruncate((_a = this._item.email) != null ? _a : emptyStr, this._options.tokenOptions.email);
  }
  get footnotes() {
    return this._padOrTruncate(this._options.footnotes == null || this._options.footnotes.size === 0 ? emptyStr : _system__WEBPACK_IMPORTED_MODULE_6__.Iterables.join(_system__WEBPACK_IMPORTED_MODULE_6__.Iterables.map(this._options.footnotes, ([i, footnote]) => this._options.markdown ? footnote : `${_system__WEBPACK_IMPORTED_MODULE_6__.Strings.getSuperscript(i)} ${footnote}`), this._options.markdown ? "\\\n" : "\n"), this._options.tokenOptions.footnotes);
  }
  get id() {
    var _a;
    const sha = this._padOrTruncate((_a = this._item.shortSha) != null ? _a : emptyStr, this._options.tokenOptions.id);
    if (this._options.markdown && this._options.unpublished) {
      return `<span style="color:#35b15e;">${sha} (unpublished)</span>`;
    }
    return sha;
  }
  get message() {
    var _a, _b, _c, _d;
    if (this._item.isUncommitted) {
      const confliced = this._item.hasConflicts;
      const staged = this._item.isUncommittedStaged || ((_c = (_b = (_a = this._options.previousLineDiffUris) == null ? void 0 : _a.current) == null ? void 0 : _b.isUncommittedStaged) != null ? _c : false);
      return this._padOrTruncate(`${this._options.markdown ? "\n> " : ""}${confliced ? "Merge" : staged ? "Staged" : "Uncommitted"} changes`, this._options.tokenOptions.message);
    }
    let message = this._item.message;
    if (this._options.messageTruncateAtNewLine) {
      const index = message.indexOf("\n");
      if (index !== -1) {
        message = `${message.substring(0, index)}${_constants__WEBPACK_IMPORTED_MODULE_3__.GlyphChars.Space}${_constants__WEBPACK_IMPORTED_MODULE_3__.GlyphChars.Ellipsis}`;
      }
    }
    message = (0,_emojis__WEBPACK_IMPORTED_MODULE_5__.emojify)(message);
    message = this._padOrTruncate(message, this._options.tokenOptions.message);
    if (this._options.messageAutolinks) {
      message = _container__WEBPACK_IMPORTED_MODULE_4__.Container.autolinks.linkify(this._options.markdown ? _system__WEBPACK_IMPORTED_MODULE_6__.Strings.escapeMarkdown(message, { quoted: true }) : message, (_d = this._options.markdown) != null ? _d : false, this._options.remotes, this._options.autolinkedIssuesOrPullRequests, this._options.footnotes);
    }
    if (this._options.messageIndent != null && !this._options.markdown) {
      message = message.replace(/^/gm, _constants__WEBPACK_IMPORTED_MODULE_3__.GlyphChars.Space.repeat(this._options.messageIndent));
    }
    return this._options.markdown ? `
> ${message}` : message;
  }
  get pullRequest() {
    var _a, _b;
    const { pullRequestOrRemote: pr } = this._options;
    if (pr == null)
      return this._padOrTruncate(emptyStr, this._options.tokenOptions.pullRequest);
    let text;
    if (_git__WEBPACK_IMPORTED_MODULE_7__.PullRequest.is(pr)) {
      if (this._options.markdown) {
        const prTitle = _system__WEBPACK_IMPORTED_MODULE_6__.Strings.escapeMarkdown(pr.title).replace(/"/g, '\\"').trim();
        text = `PR [**#${pr.id}**](${(0,_commands__WEBPACK_IMPORTED_MODULE_1__.getMarkdownActionCommand)("openPullRequest", {
          repoPath: this._item.repoPath,
          provider: { id: pr.provider.id, name: pr.provider.name, domain: pr.provider.domain },
          pullRequest: { id: pr.id, url: pr.url }
        })} "Open Pull Request \\#${pr.id}${_container__WEBPACK_IMPORTED_MODULE_4__.Container.actionRunners.count("openPullRequest") == 1 ? ` on ${pr.provider.name}` : "..."}
${_constants__WEBPACK_IMPORTED_MODULE_3__.GlyphChars.Dash.repeat(2)}
${_system__WEBPACK_IMPORTED_MODULE_6__.Strings.escapeMarkdown(pr.title).replace(/"/g, '\\"')}
${pr.state}, ${pr.formatDateFromNow()}")`;
        if (this._options.footnotes != null) {
          const index = this._options.footnotes.size + 1;
          this._options.footnotes.set(index, `[**$(git-pull-request) ${prTitle}**](${pr.url} "Open Pull Request \\#${pr.id} on ${pr.provider.name}")\\
${_constants__WEBPACK_IMPORTED_MODULE_3__.GlyphChars.Space.repeat(4)} #${pr.id} ${pr.state.toLocaleLowerCase()} ${pr.formatDateFromNow()}`);
        }
      } else if (this._options.footnotes != null) {
        const index = this._options.footnotes.size + 1;
        this._options.footnotes.set(index, `PR #${pr.id}: ${pr.title}  ${_constants__WEBPACK_IMPORTED_MODULE_3__.GlyphChars.Dot}  ${pr.state}, ${pr.formatDateFromNow()}`);
        text = `PR #${pr.id}${_system__WEBPACK_IMPORTED_MODULE_6__.Strings.getSuperscript(index)}`;
      } else {
        text = `PR #${pr.id}`;
      }
    } else if (pr instanceof _system__WEBPACK_IMPORTED_MODULE_6__.Promises.CancellationError) {
      text = this._options.markdown ? `[PR $(loading~spin)](command:${_commands__WEBPACK_IMPORTED_MODULE_1__.Commands.RefreshHover} "Searching for a Pull Request (if any) that introduced this commit...")` : (_b = (_a = this._options) == null ? void 0 : _a.pullRequestPendingMessage) != null ? _b : emptyStr;
    } else {
      return this._padOrTruncate(emptyStr, this._options.tokenOptions.pullRequest);
    }
    return this._padOrTruncate(text, this._options.tokenOptions.pullRequest);
  }
  get pullRequestAgo() {
    return this._padOrTruncate(this._pullRequestDateAgo, this._options.tokenOptions.pullRequestAgo);
  }
  get pullRequestAgoOrDate() {
    return this._padOrTruncate(this._pullRequestDateOrAgo, this._options.tokenOptions.pullRequestAgoOrDate);
  }
  get pullRequestDate() {
    return this._padOrTruncate(this._pullRequestDate, this._options.tokenOptions.pullRequestDate);
  }
  get pullRequestState() {
    var _a;
    const { pullRequestOrRemote: pr } = this._options;
    return this._padOrTruncate(pr == null || !_git__WEBPACK_IMPORTED_MODULE_7__.PullRequest.is(pr) ? emptyStr : (_a = pr.state) != null ? _a : emptyStr, this._options.tokenOptions.pullRequestState);
  }
  get sha() {
    var _a;
    return this._padOrTruncate((_a = this._item.shortSha) != null ? _a : emptyStr, this._options.tokenOptions.sha);
  }
  get tips() {
    var _a, _b;
    let branchAndTagTips = (_b = (_a = this._options).getBranchAndTagTips) == null ? void 0 : _b.call(_a, this._item.sha, { icons: this._options.markdown });
    if (branchAndTagTips != null && this._options.markdown) {
      const tips = branchAndTagTips.split(", ");
      branchAndTagTips = tips.map((t) => `<span style="color:#ffffff;background-color:#1d76db;">&nbsp;&nbsp;${t}&nbsp;&nbsp;</span>`).join(_constants__WEBPACK_IMPORTED_MODULE_3__.GlyphChars.Space.repeat(3));
    }
    return this._padOrTruncate(branchAndTagTips != null ? branchAndTagTips : emptyStr, this._options.tokenOptions.tips);
  }
  static fromTemplate(template, commit, dateFormatOrOptions) {
    if (dateFormatOrOptions == null || typeof dateFormatOrOptions === "string") {
      dateFormatOrOptions = {
        dateFormat: dateFormatOrOptions
      };
    }
    if (CommitFormatter.has(template, "footnotes")) {
      if (dateFormatOrOptions.footnotes == null) {
        dateFormatOrOptions.footnotes = new Map();
      }
    }
    if (CommitFormatter.has(template, "avatar") && (dateFormatOrOptions == null ? void 0 : dateFormatOrOptions.markdown)) {
      debugger;
      throw new Error("Invalid template token 'avatar' used in non-async call");
    }
    return super.fromTemplateCore(this, template, commit, dateFormatOrOptions);
  }
  static fromTemplateAsync(template, commit, dateFormatOrOptions) {
    if (CommitFormatter.has(template, "footnotes")) {
      if (dateFormatOrOptions == null || typeof dateFormatOrOptions === "string") {
        dateFormatOrOptions = {
          dateFormat: dateFormatOrOptions
        };
      }
      if (dateFormatOrOptions.footnotes == null) {
        dateFormatOrOptions.footnotes = new Map();
      }
    }
    return super.fromTemplateCoreAsync(this, template, commit, dateFormatOrOptions);
  }
  static has(template, ...tokens) {
    return super.has(template, ...tokens);
  }
}


/***/ }),

/***/ "./src/git/formatters/formatter.ts":
/*!*****************************************!*\
  !*** ./src/git/formatters/formatter.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Formatter": () => (/* binding */ Formatter)
/* harmony export */ });
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../system */ "./src/system.ts");

var __defProp = Object.defineProperty;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};

const emptyStr = "";
const hasTokenRegexMap = new Map();
const spaceReplacementRegex = / /g;
const _Formatter = class {
  constructor(item, options) {
    __publicField(this, "_item");
    __publicField(this, "_options");
    __publicField(this, "collapsableWhitespace", 0);
    this.reset(item, options);
  }
  reset(item, options) {
    this._item = item;
    this.collapsableWhitespace = 0;
    if (options == null && this._options != null)
      return;
    if (options == null) {
      options = {};
    }
    if (options.dateFormat == null) {
      options.dateFormat = "MMMM Do, YYYY h:mma";
    }
    if (options.tokenOptions == null) {
      options.tokenOptions = {};
    }
    this._options = options;
  }
  _padOrTruncate(s, options) {
    var _a, _b;
    if (s == null || s.length === 0)
      return s;
    if (options == null) {
      options = {
        collapseWhitespace: false,
        padDirection: "left",
        prefix: void 0,
        suffix: void 0,
        truncateTo: void 0
      };
    }
    let max = options.truncateTo;
    if (max == null) {
      this.collapsableWhitespace = 0;
    } else {
      max += this.collapsableWhitespace;
      this.collapsableWhitespace = 0;
      const width = _system__WEBPACK_IMPORTED_MODULE_0__.Strings.getWidth(s);
      const diff = max - width;
      if (diff > 0) {
        if (options.collapseWhitespace) {
          this.collapsableWhitespace = diff;
        }
        if (options.padDirection === "left") {
          s = _system__WEBPACK_IMPORTED_MODULE_0__.Strings.padLeft(s, max, void 0, width);
        } else {
          if (options.collapseWhitespace) {
            max -= diff;
          }
          s = _system__WEBPACK_IMPORTED_MODULE_0__.Strings.padRight(s, max, void 0, width);
        }
      } else if (diff < 0) {
        s = _system__WEBPACK_IMPORTED_MODULE_0__.Strings.truncate(s, max, void 0, width);
      }
    }
    if (options.prefix || options.suffix) {
      s = `${(_a = options.prefix) != null ? _a : emptyStr}${s}${(_b = options.suffix) != null ? _b : emptyStr}`;
    }
    return s;
  }
  static fromTemplateCore(formatter, template, item, dateFormatOrOptions) {
    template = template.replace(spaceReplacementRegex, "\xA0");
    if (formatter instanceof _Formatter)
      return _system__WEBPACK_IMPORTED_MODULE_0__.Strings.interpolate(template, formatter);
    let options = void 0;
    if (dateFormatOrOptions == null || typeof dateFormatOrOptions === "string") {
      options = {
        dateFormat: dateFormatOrOptions
      };
    } else {
      options = dateFormatOrOptions;
    }
    if (options.tokenOptions == null) {
      const tokenOptions = _system__WEBPACK_IMPORTED_MODULE_0__.Strings.getTokensFromTemplate(template).reduce((map, token) => {
        map[token.key] = token.options;
        return map;
      }, Object.create(null));
      options.tokenOptions = tokenOptions;
    }
    if (this._formatter == null) {
      this._formatter = new formatter(item, options);
    } else {
      this._formatter.reset(item, options);
    }
    return _system__WEBPACK_IMPORTED_MODULE_0__.Strings.interpolate(template, this._formatter);
  }
  static fromTemplateCoreAsync(formatter, template, item, dateFormatOrOptions) {
    template = template.replace(spaceReplacementRegex, "\xA0");
    if (formatter instanceof _Formatter)
      return _system__WEBPACK_IMPORTED_MODULE_0__.Strings.interpolateAsync(template, formatter);
    let options = void 0;
    if (dateFormatOrOptions == null || typeof dateFormatOrOptions === "string") {
      options = {
        dateFormat: dateFormatOrOptions
      };
    } else {
      options = dateFormatOrOptions;
    }
    if (options.tokenOptions == null) {
      const tokenOptions = _system__WEBPACK_IMPORTED_MODULE_0__.Strings.getTokensFromTemplate(template).reduce((map, token) => {
        map[token.key] = token.options;
        return map;
      }, Object.create(null));
      options.tokenOptions = tokenOptions;
    }
    if (this._formatter == null) {
      this._formatter = new formatter(item, options);
    } else {
      this._formatter.reset(item, options);
    }
    return _system__WEBPACK_IMPORTED_MODULE_0__.Strings.interpolateAsync(template, this._formatter);
  }
  static has(template, ...tokens) {
    const token = tokens.length === 1 ? tokens[0] : `(${tokens.join("|")})`;
    let regex = hasTokenRegexMap.get(token);
    if (regex == null) {
      regex = new RegExp(`\\b${token}\\b`);
      hasTokenRegexMap.set(token, regex);
    }
    return regex.test(template);
  }
};
let Formatter = _Formatter;
__publicField(Formatter, "_formatter");


/***/ }),

/***/ "./src/git/formatters/formatters.ts":
/*!******************************************!*\
  !*** ./src/git/formatters/formatters.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CommitFormatter": () => (/* reexport safe */ _commitFormatter__WEBPACK_IMPORTED_MODULE_0__.CommitFormatter),
/* harmony export */   "StatusFileFormatter": () => (/* reexport safe */ _statusFormatter__WEBPACK_IMPORTED_MODULE_1__.StatusFileFormatter)
/* harmony export */ });
/* harmony import */ var _commitFormatter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./commitFormatter */ "./src/git/formatters/commitFormatter.ts");
/* harmony import */ var _statusFormatter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./statusFormatter */ "./src/git/formatters/statusFormatter.ts");





/***/ }),

/***/ "./src/git/formatters/statusFormatter.ts":
/*!***********************************************!*\
  !*** ./src/git/formatters/statusFormatter.ts ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "StatusFileFormatter": () => (/* binding */ StatusFileFormatter)
/* harmony export */ });
/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! path */ "./node_modules/path-browserify/index.js");
/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../constants */ "./src/constants.ts");
/* harmony import */ var _models_file__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../models/file */ "./src/git/models/file.ts");
/* harmony import */ var _formatter__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./formatter */ "./src/git/formatters/formatter.ts");





class StatusFileFormatter extends _formatter__WEBPACK_IMPORTED_MODULE_3__.Formatter {
  get directory() {
    const directory = _models_file__WEBPACK_IMPORTED_MODULE_2__.GitFile.getFormattedDirectory(this._item, false, this._options.relativePath);
    return this._padOrTruncate(directory, this._options.tokenOptions.directory);
  }
  get file() {
    const file = path__WEBPACK_IMPORTED_MODULE_0__.basename(this._item.fileName);
    return this._padOrTruncate(file, this._options.tokenOptions.file);
  }
  get filePath() {
    var _a;
    const filePath = _models_file__WEBPACK_IMPORTED_MODULE_2__.GitFile.getFormattedPath(this._item, {
      relativeTo: this._options.relativePath,
      truncateTo: (_a = this._options.tokenOptions.filePath) == null ? void 0 : _a.truncateTo
    });
    return this._padOrTruncate(filePath, this._options.tokenOptions.filePath);
  }
  get originalPath() {
    const originalPath = _models_file__WEBPACK_IMPORTED_MODULE_2__.GitFile.getOriginalRelativePath(this._item, this._options.relativePath);
    return this._padOrTruncate(originalPath, this._options.tokenOptions.originalPath);
  }
  get path() {
    const directory = _models_file__WEBPACK_IMPORTED_MODULE_2__.GitFile.getRelativePath(this._item, this._options.relativePath);
    return this._padOrTruncate(directory, this._options.tokenOptions.path);
  }
  get status() {
    const status = _models_file__WEBPACK_IMPORTED_MODULE_2__.GitFile.getStatusText(this._item.status);
    return this._padOrTruncate(status, this._options.tokenOptions.status);
  }
  get working() {
    var _a, _b, _c;
    const statusFile = (_c = (_b = (_a = this._item.commit) == null ? void 0 : _a.files) == null ? void 0 : _b[0]) != null ? _c : this._item;
    let icon;
    if (statusFile.workingTreeStatus !== void 0 && statusFile.indexStatus !== void 0) {
      icon = `${_constants__WEBPACK_IMPORTED_MODULE_1__.GlyphChars.Pencil}${_constants__WEBPACK_IMPORTED_MODULE_1__.GlyphChars.Space}${_constants__WEBPACK_IMPORTED_MODULE_1__.GlyphChars.SpaceThinnest}${_constants__WEBPACK_IMPORTED_MODULE_1__.GlyphChars.Check}`;
    } else if (statusFile.workingTreeStatus !== void 0) {
      icon = `${_constants__WEBPACK_IMPORTED_MODULE_1__.GlyphChars.Pencil}${_constants__WEBPACK_IMPORTED_MODULE_1__.GlyphChars.SpaceThin}${_constants__WEBPACK_IMPORTED_MODULE_1__.GlyphChars.SpaceThinnest}${_constants__WEBPACK_IMPORTED_MODULE_1__.GlyphChars.EnDash}${_constants__WEBPACK_IMPORTED_MODULE_1__.GlyphChars.Space}`;
    } else if (statusFile.indexStatus !== void 0) {
      icon = `${_constants__WEBPACK_IMPORTED_MODULE_1__.GlyphChars.Space}${_constants__WEBPACK_IMPORTED_MODULE_1__.GlyphChars.EnDash}${_constants__WEBPACK_IMPORTED_MODULE_1__.GlyphChars.Space.repeat(2)}${_constants__WEBPACK_IMPORTED_MODULE_1__.GlyphChars.Check}`;
    } else {
      icon = "";
    }
    return this._padOrTruncate(icon, this._options.tokenOptions.working);
  }
  static fromTemplate(template, file, dateFormatOrOptions) {
    return super.fromTemplateCore(this, template, file, dateFormatOrOptions);
  }
}


/***/ }),

/***/ "./src/git/fsProvider.ts":
/*!*******************************!*\
  !*** ./src/git/fsProvider.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "fromGitLensFSUri": () => (/* binding */ fromGitLensFSUri),
/* harmony export */   "toGitLensFSUri": () => (/* binding */ toGitLensFSUri),
/* harmony export */   "GitFileSystemProvider": () => (/* binding */ GitFileSystemProvider)
/* harmony export */ });
/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! path */ "./node_modules/path-browserify/index.js");
/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../constants */ "./src/constants.ts");
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../container */ "./src/container.ts");
/* harmony import */ var _git_git__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../git/git */ "./src/git/git.ts");
/* harmony import */ var _git_gitUri__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../git/gitUri */ "./src/git/gitUri.ts");
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../system */ "./src/system.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};







const emptyArray = new Uint8Array(0);
function fromGitLensFSUri(uri) {
  const gitUri = _git_gitUri__WEBPACK_IMPORTED_MODULE_5__.GitUri.is(uri) ? uri : _git_gitUri__WEBPACK_IMPORTED_MODULE_5__.GitUri.fromRevisionUri(uri);
  return { path: gitUri.relativePath, ref: gitUri.sha, repoPath: gitUri.repoPath };
}
function toGitLensFSUri(ref, repoPath) {
  return _git_gitUri__WEBPACK_IMPORTED_MODULE_5__.GitUri.toRevisionUri(ref, repoPath, repoPath);
}
class GitFileSystemProvider {
  constructor() {
    __publicField(this, "_disposable");
    __publicField(this, "_searchTreeMap", new Map());
    __publicField(this, "_onDidChangeFile", new vscode__WEBPACK_IMPORTED_MODULE_1__.EventEmitter());
    this._disposable = vscode__WEBPACK_IMPORTED_MODULE_1__.Disposable.from(vscode__WEBPACK_IMPORTED_MODULE_1__.workspace.registerFileSystemProvider(_constants__WEBPACK_IMPORTED_MODULE_2__.DocumentSchemes.GitLens, this, {
      isCaseSensitive: true,
      isReadonly: true
    }));
  }
  dispose() {
    this._disposable.dispose();
  }
  get onDidChangeFile() {
    return this._onDidChangeFile.event;
  }
  copy() {
    throw vscode__WEBPACK_IMPORTED_MODULE_1__.FileSystemError.NoPermissions;
  }
  createDirectory() {
    throw vscode__WEBPACK_IMPORTED_MODULE_1__.FileSystemError.NoPermissions;
  }
  delete() {
    throw vscode__WEBPACK_IMPORTED_MODULE_1__.FileSystemError.NoPermissions;
  }
  async readDirectory(uri) {
    const { path, ref, repoPath } = fromGitLensFSUri(uri);
    const tree = await this.getTree(path, ref, repoPath);
    if (tree === void 0)
      throw vscode__WEBPACK_IMPORTED_MODULE_1__.FileSystemError.FileNotFound(uri);
    const items = [
      ..._system__WEBPACK_IMPORTED_MODULE_6__.Iterables.map(tree, (t) => [
        path != null && path.length !== 0 ? _system__WEBPACK_IMPORTED_MODULE_6__.Strings.normalizePath(path__WEBPACK_IMPORTED_MODULE_0__.relative(path, t.path)) : t.path,
        typeToFileType(t.type)
      ])
    ];
    return items;
  }
  async readFile(uri) {
    const { path, ref, repoPath } = fromGitLensFSUri(uri);
    if (ref === _git_git__WEBPACK_IMPORTED_MODULE_4__.GitRevision.deletedOrMissing)
      return emptyArray;
    const buffer = await _container__WEBPACK_IMPORTED_MODULE_3__.Container.git.getVersionedFileBuffer(repoPath, path, ref);
    if (buffer === void 0)
      return emptyArray;
    return buffer;
  }
  rename() {
    throw vscode__WEBPACK_IMPORTED_MODULE_1__.FileSystemError.NoPermissions;
  }
  async stat(uri) {
    const { path, ref, repoPath } = fromGitLensFSUri(uri);
    if (ref === _git_git__WEBPACK_IMPORTED_MODULE_4__.GitRevision.deletedOrMissing) {
      return {
        type: vscode__WEBPACK_IMPORTED_MODULE_1__.FileType.File,
        size: 0,
        ctime: 0,
        mtime: 0
      };
    }
    let treeItem;
    const searchTree = this._searchTreeMap.get(ref);
    if (searchTree !== void 0) {
      treeItem = (await searchTree).get(`/~/${path}`);
    } else {
      if (path == null || path.length === 0) {
        const tree = await this.getTree(path, ref, repoPath);
        if (tree === void 0)
          throw vscode__WEBPACK_IMPORTED_MODULE_1__.FileSystemError.FileNotFound(uri);
        return {
          type: vscode__WEBPACK_IMPORTED_MODULE_1__.FileType.Directory,
          size: 0,
          ctime: 0,
          mtime: 0
        };
      }
      treeItem = await _container__WEBPACK_IMPORTED_MODULE_3__.Container.git.getTreeFileForRevision(repoPath, path, ref);
    }
    if (treeItem === void 0) {
      throw vscode__WEBPACK_IMPORTED_MODULE_1__.FileSystemError.FileNotFound(uri);
    }
    return {
      type: typeToFileType(treeItem.type),
      size: treeItem.size,
      ctime: 0,
      mtime: 0
    };
  }
  watch() {
    return {
      dispose: () => {
      }
    };
  }
  writeFile() {
    throw vscode__WEBPACK_IMPORTED_MODULE_1__.FileSystemError.NoPermissions;
  }
  async createSearchTree(ref, repoPath) {
    const searchTree = _system__WEBPACK_IMPORTED_MODULE_6__.TernarySearchTree.forPaths();
    const trees = await _container__WEBPACK_IMPORTED_MODULE_3__.Container.git.getTreeForRevision(repoPath, ref);
    searchTree.set("~", { commitSha: "", path: "~", size: 0, type: "tree" });
    for (const item of trees) {
      searchTree.set(`~/${item.path}`, item);
    }
    return searchTree;
  }
  getOrCreateSearchTree(ref, repoPath) {
    let searchTree = this._searchTreeMap.get(ref);
    if (searchTree === void 0) {
      searchTree = this.createSearchTree(ref, repoPath);
      this._searchTreeMap.set(ref, searchTree);
    }
    return searchTree;
  }
  async getTree(path, ref, repoPath) {
    const searchTree = await this.getOrCreateSearchTree(ref, repoPath);
    return searchTree.findSuperstr(`/~/${path}`, true);
  }
}
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_6__.debug)()
], GitFileSystemProvider.prototype, "readDirectory", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_6__.debug)()
], GitFileSystemProvider.prototype, "readFile", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_6__.debug)()
], GitFileSystemProvider.prototype, "stat", 1);
function typeToFileType(type) {
  switch (type) {
    case "blob":
      return vscode__WEBPACK_IMPORTED_MODULE_1__.FileType.File;
    case "tree":
      return vscode__WEBPACK_IMPORTED_MODULE_1__.FileType.Directory;
    default:
      return vscode__WEBPACK_IMPORTED_MODULE_1__.FileType.Unknown;
  }
}


/***/ }),

/***/ "./src/git/git.ts":
/*!************************!*\
  !*** ./src/git/git.ts ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "GitBlameParser": () => (/* reexport safe */ _parsers_parsers__WEBPACK_IMPORTED_MODULE_9__.GitBlameParser),
/* harmony export */   "GitBranchParser": () => (/* reexport safe */ _parsers_parsers__WEBPACK_IMPORTED_MODULE_9__.GitBranchParser),
/* harmony export */   "GitDiffParser": () => (/* reexport safe */ _parsers_parsers__WEBPACK_IMPORTED_MODULE_9__.GitDiffParser),
/* harmony export */   "GitLogParser": () => (/* reexport safe */ _parsers_parsers__WEBPACK_IMPORTED_MODULE_9__.GitLogParser),
/* harmony export */   "GitReflogParser": () => (/* reexport safe */ _parsers_parsers__WEBPACK_IMPORTED_MODULE_9__.GitReflogParser),
/* harmony export */   "GitRemoteParser": () => (/* reexport safe */ _parsers_parsers__WEBPACK_IMPORTED_MODULE_9__.GitRemoteParser),
/* harmony export */   "GitShortLogParser": () => (/* reexport safe */ _parsers_parsers__WEBPACK_IMPORTED_MODULE_9__.GitShortLogParser),
/* harmony export */   "GitStashParser": () => (/* reexport safe */ _parsers_parsers__WEBPACK_IMPORTED_MODULE_9__.GitStashParser),
/* harmony export */   "GitStatusParser": () => (/* reexport safe */ _parsers_parsers__WEBPACK_IMPORTED_MODULE_9__.GitStatusParser),
/* harmony export */   "GitTagParser": () => (/* reexport safe */ _parsers_parsers__WEBPACK_IMPORTED_MODULE_9__.GitTagParser),
/* harmony export */   "GitTreeParser": () => (/* reexport safe */ _parsers_parsers__WEBPACK_IMPORTED_MODULE_9__.GitTreeParser),
/* harmony export */   "fileStatusRegex": () => (/* reexport safe */ _parsers_parsers__WEBPACK_IMPORTED_MODULE_9__.fileStatusRegex),
/* harmony export */   "CommitFormatter": () => (/* reexport safe */ _formatters_formatters__WEBPACK_IMPORTED_MODULE_11__.CommitFormatter),
/* harmony export */   "StatusFileFormatter": () => (/* reexport safe */ _formatters_formatters__WEBPACK_IMPORTED_MODULE_11__.StatusFileFormatter),
/* harmony export */   "Authentication": () => (/* reexport safe */ _remotes_provider__WEBPACK_IMPORTED_MODULE_12__.Authentication),
/* harmony export */   "AuthenticationError": () => (/* reexport safe */ _remotes_provider__WEBPACK_IMPORTED_MODULE_12__.AuthenticationError),
/* harmony export */   "ClientError": () => (/* reexport safe */ _remotes_provider__WEBPACK_IMPORTED_MODULE_12__.ClientError),
/* harmony export */   "RemoteProvider": () => (/* reexport safe */ _remotes_provider__WEBPACK_IMPORTED_MODULE_12__.RemoteProvider),
/* harmony export */   "RemoteResourceType": () => (/* reexport safe */ _remotes_provider__WEBPACK_IMPORTED_MODULE_12__.RemoteResourceType),
/* harmony export */   "RichRemoteProvider": () => (/* reexport safe */ _remotes_provider__WEBPACK_IMPORTED_MODULE_12__.RichRemoteProvider),
/* harmony export */   "getNameFromRemoteResource": () => (/* reexport safe */ _remotes_provider__WEBPACK_IMPORTED_MODULE_12__.getNameFromRemoteResource),
/* harmony export */   "SearchPattern": () => (/* reexport safe */ _search__WEBPACK_IMPORTED_MODULE_13__.SearchPattern),
/* harmony export */   "normalizeSearchOperatorsMap": () => (/* reexport safe */ _search__WEBPACK_IMPORTED_MODULE_13__.normalizeSearchOperatorsMap),
/* harmony export */   "searchOperators": () => (/* reexport safe */ _search__WEBPACK_IMPORTED_MODULE_13__.searchOperators),
/* harmony export */   "RunError": () => (/* reexport safe */ _shell__WEBPACK_IMPORTED_MODULE_10__.RunError),
/* harmony export */   "maxGitCliLength": () => (/* binding */ maxGitCliLength),
/* harmony export */   "GitErrors": () => (/* binding */ GitErrors),
/* harmony export */   "GitErrorHandling": () => (/* binding */ GitErrorHandling),
/* harmony export */   "git": () => (/* binding */ git),
/* harmony export */   "Git": () => (/* binding */ Git),
/* harmony export */   "isFolderGlob": () => (/* binding */ isFolderGlob),
/* harmony export */   "toFolderGlob": () => (/* binding */ toFolderGlob)
/* harmony export */ });
/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! path */ "./node_modules/path-browserify/index.js");
/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var iconv_lite__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! iconv-lite */ "./node_modules/iconv-lite/lib/index.js");
/* harmony import */ var iconv_lite__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(iconv_lite__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../constants */ "./src/constants.ts");
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../container */ "./src/container.ts");
/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../logger */ "./src/logger.ts");
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../system */ "./src/system.ts");
/* harmony import */ var _locator__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./locator */ "./src/git/locator.ts");
/* harmony import */ var _models_models__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./models/models */ "./src/git/models/models.ts");
/* harmony import */ var _parsers_parsers__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./parsers/parsers */ "./src/git/parsers/parsers.ts");
/* harmony import */ var _shell__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./shell */ "./src/git/shell.ts");
/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};
/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _models_models__WEBPACK_IMPORTED_MODULE_8__) if(["default","RunError","maxGitCliLength","GitErrors","GitErrorHandling","git","Git","isFolderGlob","toFolderGlob"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _models_models__WEBPACK_IMPORTED_MODULE_8__[__WEBPACK_IMPORT_KEY__]
/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);
/* harmony import */ var _formatters_formatters__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./formatters/formatters */ "./src/git/formatters/formatters.ts");
/* harmony import */ var _remotes_provider__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./remotes/provider */ "./src/git/remotes/provider.ts");
/* harmony import */ var _search__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./search */ "./src/git/search.ts");


















const emptyArray = Object.freeze([]);
const emptyObj = Object.freeze({});
const emptyStr = "";
const maxGitCliLength = 3e4;
const textDecoder = new TextDecoder("utf8");
const rootSha = "4b825dc642cb6eb9a060e54bf8d69288fbee4904";
const GitErrors = {
  badRevision: /bad revision '(.*?)'/i,
  noFastForward: /\(non-fast-forward\)/i,
  noMergeBase: /no merge base/i,
  notAValidObjectName: /Not a valid object name/i,
  invalidLineCount: /file .+? has only \d+ lines/i
};
const GitWarnings = {
  notARepository: /Not a git repository/i,
  outsideRepository: /is outside repository/i,
  noPath: /no such path/i,
  noCommits: /does not have any commits/i,
  notFound: /Path '.*?' does not exist in/i,
  foundButNotInRevision: /Path '.*?' exists on disk, but not in/i,
  headNotABranch: /HEAD does not point to a branch/i,
  noUpstream: /no upstream configured for branch '(.*?)'/i,
  unknownRevision: /ambiguous argument '.*?': unknown revision or path not in the working tree|not stored as a remote-tracking branch/i,
  mustRunInWorkTree: /this operation must be run in a work tree/i,
  patchWithConflicts: /Applied patch to '.*?' with conflicts/i,
  noRemoteRepositorySpecified: /No remote repository specified\./i,
  remoteConnectionError: /Could not read from remote repository/i,
  notAGitCommand: /'.+' is not a git command/i
};
var GitErrorHandling;
(function(GitErrorHandling2) {
  GitErrorHandling2["Ignore"] = "ignore";
  GitErrorHandling2["Throw"] = "throw";
})(GitErrorHandling || (GitErrorHandling = {}));
const pendingCommands = new Map();
async function git(options, ...args) {
  var _a;
  if (_container__WEBPACK_IMPORTED_MODULE_4__.Container.vsls.isMaybeGuest) {
    if (options.local !== true) {
      const guest = await _container__WEBPACK_IMPORTED_MODULE_4__.Container.vsls.guest();
      if (guest !== void 0) {
        return guest.git(options, ...args);
      }
    } else {
      options.cwd = emptyStr;
    }
  }
  const start = process.hrtime();
  const { configs, correlationKey, errors: errorHandling, encoding, ...opts } = options;
  const runOpts = {
    ...opts,
    encoding: (encoding != null ? encoding : "utf8") === "utf8" ? "utf8" : "buffer",
    env: {
      ...process.env,
      ...(_a = options.env) != null ? _a : emptyObj,
      GCM_INTERACTIVE: "NEVER",
      GCM_PRESERVE_CREDS: "TRUE",
      LC_ALL: "C"
    }
  };
  const gitCommand = `[${runOpts.cwd}] git ${args.join(" ")}`;
  const command = `${correlationKey !== void 0 ? `${correlationKey}:` : emptyStr}${gitCommand}`;
  let waiting;
  let promise = pendingCommands.get(command);
  if (promise === void 0) {
    waiting = false;
    args.splice(0, 0, "-c", "core.quotepath=false", "-c", "color.ui=false", ...configs !== void 0 ? configs : emptyArray);
    if (process.platform === "win32") {
      args.splice(0, 0, "-c", "core.longpaths=true");
    }
    promise = (0,_shell__WEBPACK_IMPORTED_MODULE_10__.run)(gitInfo.path, args, encoding != null ? encoding : "utf8", runOpts);
    pendingCommands.set(command, promise);
  } else {
    waiting = true;
    _logger__WEBPACK_IMPORTED_MODULE_5__.Logger.debug(`${gitCommand} ${_constants__WEBPACK_IMPORTED_MODULE_3__.GlyphChars.Dot} waiting...`);
  }
  let exception;
  try {
    return await promise;
  } catch (ex) {
    exception = ex;
    switch (errorHandling) {
      case GitErrorHandling.Ignore:
        exception = void 0;
        return emptyStr;
      case GitErrorHandling.Throw:
        throw ex;
      default: {
        const result = defaultExceptionHandler(ex, options.cwd, start);
        exception = void 0;
        return result;
      }
    }
  } finally {
    pendingCommands.delete(command);
    const duration = `${_system__WEBPACK_IMPORTED_MODULE_6__.Strings.getDurationMilliseconds(start)} ms ${waiting ? "(waited) " : emptyStr}`;
    if (exception !== void 0) {
      _logger__WEBPACK_IMPORTED_MODULE_5__.Logger.warn(`[${runOpts.cwd}] Git ${(exception.message || exception.toString() || emptyStr).trim().replace(/fatal: /g, "").replace(/\r?\n|\r/g, ` ${_constants__WEBPACK_IMPORTED_MODULE_3__.GlyphChars.Dot} `)} ${_constants__WEBPACK_IMPORTED_MODULE_3__.GlyphChars.Dot} ${duration}`);
    } else {
      _logger__WEBPACK_IMPORTED_MODULE_5__.Logger.log(`${gitCommand} ${_constants__WEBPACK_IMPORTED_MODULE_3__.GlyphChars.Dot} ${duration}`);
    }
    _logger__WEBPACK_IMPORTED_MODULE_5__.Logger.logGitCommand(`${gitCommand} ${_constants__WEBPACK_IMPORTED_MODULE_3__.GlyphChars.Dot} ${exception !== void 0 ? "FAILED " : emptyStr}${duration}`, exception);
  }
}
function defaultExceptionHandler(ex, cwd, start) {
  const msg = ex.message || ex.toString();
  if (msg != null && msg.length !== 0) {
    for (const warning of Object.values(GitWarnings)) {
      if (warning.test(msg)) {
        const duration = start !== void 0 ? `${_system__WEBPACK_IMPORTED_MODULE_6__.Strings.getDurationMilliseconds(start)} ms` : emptyStr;
        _logger__WEBPACK_IMPORTED_MODULE_5__.Logger.warn(`[${cwd}] Git ${msg.trim().replace(/fatal: /g, "").replace(/\r?\n|\r/g, ` ${_constants__WEBPACK_IMPORTED_MODULE_3__.GlyphChars.Dot} `)} ${_constants__WEBPACK_IMPORTED_MODULE_3__.GlyphChars.Dot} ${duration}`);
        return emptyStr;
      }
    }
    const match = GitErrors.badRevision.exec(msg);
    if (match != null) {
      const [, ref] = match;
      if (ref == null ? void 0 : ref.endsWith("^3"))
        return emptyStr;
    }
  }
  throw ex;
}
let gitInfo;
var Git;
(function(Git2) {
  function getEncoding(encoding) {
    return encoding !== void 0 && iconv_lite__WEBPACK_IMPORTED_MODULE_1__.encodingExists(encoding) ? encoding : "utf8";
  }
  Git2.getEncoding = getEncoding;
  function getGitPath() {
    var _a;
    return (_a = gitInfo == null ? void 0 : gitInfo.path) != null ? _a : "";
  }
  Git2.getGitPath = getGitPath;
  function getGitVersion() {
    var _a;
    return (_a = gitInfo == null ? void 0 : gitInfo.version) != null ? _a : "2.72";
  }
  Git2.getGitVersion = getGitVersion;
  async function setOrFindGitPath(gitPath) {
    const start = process.hrtime();
    gitInfo = await (0,_locator__WEBPACK_IMPORTED_MODULE_7__.findGitPath)(gitPath);
    _logger__WEBPACK_IMPORTED_MODULE_5__.Logger.log(`Git found: ${gitInfo.version} @ ${gitInfo.path === "git" ? "PATH" : gitInfo.path} ${_constants__WEBPACK_IMPORTED_MODULE_3__.GlyphChars.Dot} ${_system__WEBPACK_IMPORTED_MODULE_6__.Strings.getDurationMilliseconds(start)} ms`);
  }
  Git2.setOrFindGitPath = setOrFindGitPath;
  function validateVersion(major, minor) {
    const [gitMajor, gitMinor] = gitInfo.version.split(".");
    return parseInt(gitMajor, 10) >= major && parseInt(gitMinor, 10) >= minor;
  }
  Git2.validateVersion = validateVersion;
  function add(repoPath, pathspec) {
    return git({ cwd: repoPath }, "add", "-A", "--", pathspec);
  }
  Git2.add = add;
  function apply(repoPath, patch, options = {}) {
    const params = ["apply", "--whitespace=warn"];
    if (options.allowConflicts) {
      params.push("-3");
    }
    return git({ cwd: repoPath, stdin: patch }, ...params);
  }
  Git2.apply = apply;
  const ignoreRevsFileMap = new Map();
  async function blame(repoPath, fileName, ref, options = {}) {
    const [file, root] = _system__WEBPACK_IMPORTED_MODULE_6__.Paths.splitPath(fileName, repoPath);
    const params = ["blame", "--root", "--incremental"];
    if (options.ignoreWhitespace) {
      params.push("-w");
    }
    if (options.startLine != null && options.endLine != null) {
      params.push(`-L ${options.startLine},${options.endLine}`);
    }
    if (options.args != null) {
      params.push(...options.args);
      const index = params.indexOf("--ignore-revs-file");
      if (index !== -1) {
        let supported = Git2.validateVersion(2, 23);
        if (supported) {
          let ignoreRevsFile = params[index + 1];
          if (!path__WEBPACK_IMPORTED_MODULE_0__.isAbsolute(ignoreRevsFile)) {
            ignoreRevsFile = path__WEBPACK_IMPORTED_MODULE_0__.join(repoPath != null ? repoPath : emptyStr, ignoreRevsFile);
          }
          const exists = ignoreRevsFileMap.get(ignoreRevsFile);
          if (exists !== void 0) {
            supported = exists;
          } else {
            try {
              supported = await (0,_shell__WEBPACK_IMPORTED_MODULE_10__.fsExists)(ignoreRevsFile);
            } catch {
              supported = false;
            }
            ignoreRevsFileMap.set(ignoreRevsFile, supported);
          }
        }
        if (!supported) {
          params.splice(index, 2);
        }
      }
    }
    let stdin;
    if (ref) {
      if (_models_models__WEBPACK_IMPORTED_MODULE_8__.GitRevision.isUncommittedStaged(ref)) {
        params.push("--contents", "-");
        stdin = await Git2.show(repoPath, fileName, ":");
      } else {
        params.push(ref);
      }
    }
    return git({ cwd: root, stdin }, ...params, "--", file);
  }
  Git2.blame = blame;
  function blame__contents(repoPath, fileName, contents, options = {}) {
    const [file, root] = _system__WEBPACK_IMPORTED_MODULE_6__.Paths.splitPath(fileName, repoPath);
    const params = ["blame", "--root", "--incremental"];
    if (options.ignoreWhitespace) {
      params.push("-w");
    }
    if (options.startLine != null && options.endLine != null) {
      params.push(`-L ${options.startLine},${options.endLine}`);
    }
    if (options.args != null) {
      params.push(...options.args);
    }
    params.push("--contents", "-");
    return git({ cwd: root, stdin: contents, correlationKey: options.correlationKey }, ...params, "--", file);
  }
  Git2.blame__contents = blame__contents;
  function branch__containsOrPointsAt(repoPath, ref, {
    mode = "contains",
    name = void 0,
    remotes = false
  } = {}) {
    const params = ["branch"];
    if (remotes) {
      params.push("-r");
    }
    params.push(mode === "pointsAt" ? `--points-at=${ref}` : `--contains=${ref}`, "--format=%(refname:short)");
    if (name != null) {
      params.push(name);
    }
    return git({ cwd: repoPath, configs: ["-c", "color.branch=false"], errors: GitErrorHandling.Ignore }, ...params);
  }
  Git2.branch__containsOrPointsAt = branch__containsOrPointsAt;
  function check_ignore(repoPath, ...files) {
    return git({ cwd: repoPath, errors: GitErrorHandling.Ignore, stdin: files.join("\0") }, "check-ignore", "-z", "--stdin");
  }
  Git2.check_ignore = check_ignore;
  function check_mailmap(repoPath, author) {
    return git({ cwd: repoPath, errors: GitErrorHandling.Ignore, local: true }, "check-mailmap", author);
  }
  Git2.check_mailmap = check_mailmap;
  async function check_ref_format(ref, repoPath, options = { branch: true }) {
    const params = ["check-ref-format"];
    if (options.branch) {
      params.push("--branch");
    } else {
      params.push("--normalize");
    }
    try {
      const data = await git({ cwd: repoPath != null ? repoPath : emptyStr, errors: GitErrorHandling.Throw, local: true }, ...params, ref);
      return Boolean(data.trim());
    } catch {
      return false;
    }
  }
  Git2.check_ref_format = check_ref_format;
  function checkout(repoPath, ref, { createBranch, fileName } = {}) {
    const params = ["checkout"];
    if (createBranch) {
      params.push("-b", createBranch, ref, "--");
    } else {
      params.push(ref, "--");
      if (fileName) {
        [fileName, repoPath] = _system__WEBPACK_IMPORTED_MODULE_6__.Paths.splitPath(fileName, repoPath);
        params.push(fileName);
      }
    }
    return git({ cwd: repoPath }, ...params);
  }
  Git2.checkout = checkout;
  async function config__get(key, repoPath, options = {}) {
    const data = await git({ cwd: repoPath != null ? repoPath : emptyStr, errors: GitErrorHandling.Ignore, local: options.local }, "config", "--get", key);
    return data.length === 0 ? void 0 : data.trim();
  }
  Git2.config__get = config__get;
  async function config__get_regex(pattern, repoPath, options = {}) {
    const data = await git({ cwd: repoPath != null ? repoPath : emptyStr, errors: GitErrorHandling.Ignore, local: options.local }, "config", "--get-regex", pattern);
    return data.length === 0 ? void 0 : data.trim();
  }
  Git2.config__get_regex = config__get_regex;
  async function diff(repoPath, fileName, ref1, ref2, options = {}) {
    const params = ["diff", "--no-ext-diff", "--minimal"];
    if (options.linesOfContext != null) {
      params.push(`-U${options.linesOfContext}`);
    }
    if (options.renames) {
      params.push(`-M${options.similarityThreshold == null ? "" : `${options.similarityThreshold}%`}`);
    }
    if (options.filters != null && options.filters.length !== 0) {
      params.push(`--diff-filter=${options.filters.join(emptyStr)}`);
    }
    if (ref1) {
      if (ref1.endsWith("^3^")) {
        ref1 = rootSha;
      }
      params.push(_models_models__WEBPACK_IMPORTED_MODULE_8__.GitRevision.isUncommittedStaged(ref1) ? "--staged" : ref1);
    }
    if (ref2) {
      params.push(_models_models__WEBPACK_IMPORTED_MODULE_8__.GitRevision.isUncommittedStaged(ref2) ? "--staged" : ref2);
    }
    try {
      return await git({
        cwd: repoPath,
        configs: ["-c", "color.diff=false"],
        encoding: options.encoding
      }, ...params, "--", fileName);
    } catch (ex) {
      const match = GitErrors.badRevision.exec(ex.message);
      if (match !== null) {
        const [, ref] = match;
        if (ref === ref1 && ref != null && ref.endsWith("^")) {
          return Git2.diff(repoPath, fileName, rootSha, ref2, options);
        }
      }
      throw ex;
    }
  }
  Git2.diff = diff;
  async function diff__contents(repoPath, fileName, ref, contents, options = {}) {
    const params = [
      "diff",
      `-M${options.similarityThreshold == null ? "" : `${options.similarityThreshold}%`}`,
      "--no-ext-diff",
      "-U0",
      "--minimal"
    ];
    if (options.filters != null && options.filters.length !== 0) {
      params.push(`--diff-filter=${options.filters.join(emptyStr)}`);
    }
    params.push("--no-index");
    try {
      return await git({
        cwd: repoPath,
        configs: ["-c", "color.diff=false"],
        encoding: options.encoding,
        stdin: contents
      }, ...params, "--", fileName, "-");
    } catch (ex) {
      if (ex instanceof _shell__WEBPACK_IMPORTED_MODULE_10__.RunError && ex.stdout) {
        return ex.stdout;
      }
      const match = GitErrors.badRevision.exec(ex.message);
      if (match !== null) {
        const [, matchedRef] = match;
        if (matchedRef === ref && matchedRef != null && matchedRef.endsWith("^")) {
          return Git2.diff__contents(repoPath, fileName, rootSha, contents, options);
        }
      }
      throw ex;
    }
  }
  Git2.diff__contents = diff__contents;
  function diff__name_status(repoPath, ref1, ref2, { filters, similarityThreshold } = {}) {
    const params = [
      "diff",
      "--name-status",
      `-M${similarityThreshold == null ? "" : `${similarityThreshold}%`}`,
      "--no-ext-diff"
    ];
    if (filters != null && filters.length !== 0) {
      params.push(`--diff-filter=${filters.join(emptyStr)}`);
    }
    if (ref1) {
      params.push(ref1);
    }
    if (ref2) {
      params.push(ref2);
    }
    return git({ cwd: repoPath, configs: ["-c", "color.diff=false"] }, ...params, "--");
  }
  Git2.diff__name_status = diff__name_status;
  async function diff__shortstat(repoPath, ref) {
    var _a;
    const params = ["diff", "--shortstat", "--no-ext-diff"];
    if (ref) {
      params.push(ref);
    }
    try {
      return await git({ cwd: repoPath, configs: ["-c", "color.diff=false"] }, ...params, "--");
    } catch (ex) {
      const msg = (_a = ex == null ? void 0 : ex.toString()) != null ? _a : "";
      if (GitErrors.noMergeBase.test(msg)) {
        return void 0;
      }
      throw ex;
    }
  }
  Git2.diff__shortstat = diff__shortstat;
  function difftool(repoPath, fileName, tool, options = {}) {
    const params = ["difftool", "--no-prompt", `--tool=${tool}`];
    if (options.staged) {
      params.push("--staged");
    }
    if (options.ref1) {
      params.push(options.ref1);
    }
    if (options.ref2) {
      params.push(options.ref2);
    }
    return git({ cwd: repoPath }, ...params, "--", fileName);
  }
  Git2.difftool = difftool;
  function difftool__dir_diff(repoPath, tool, ref1, ref2) {
    const params = ["difftool", "--dir-diff", `--tool=${tool}`, ref1];
    if (ref2) {
      params.push(ref2);
    }
    return git({ cwd: repoPath }, ...params);
  }
  Git2.difftool__dir_diff = difftool__dir_diff;
  async function fetch(repoPath, options = {}) {
    var _a;
    const params = ["fetch"];
    if (options.prune) {
      params.push("--prune");
    }
    if (options.branch && options.remote) {
      if (options.upstream && options.pull) {
        params.push("-u", options.remote, `${options.upstream}:${options.branch}`);
        try {
          void await git({ cwd: repoPath }, ...params);
          return;
        } catch (ex) {
          const msg = (_a = ex == null ? void 0 : ex.toString()) != null ? _a : "";
          if (GitErrors.noFastForward.test(msg)) {
            void vscode__WEBPACK_IMPORTED_MODULE_2__.window.showErrorMessage(`Unable to pull the '${options.branch}' branch, as it can't be fast-forwarded.`);
            return;
          }
          throw ex;
        }
      } else {
        params.push(options.remote, options.branch);
      }
    } else if (options.remote) {
      params.push(options.remote);
    } else if (options.all) {
      params.push("--all");
    }
    void await git({ cwd: repoPath }, ...params);
  }
  Git2.fetch = fetch;
  function for_each_ref__branch(repoPath, options = { all: false }) {
    const params = ["for-each-ref", `--format=${_parsers_parsers__WEBPACK_IMPORTED_MODULE_9__.GitBranchParser.defaultFormat}`, "refs/heads"];
    if (options.all) {
      params.push("refs/remotes");
    }
    return git({ cwd: repoPath }, ...params);
  }
  Git2.for_each_ref__branch = for_each_ref__branch;
  function log(repoPath, ref, {
    all,
    authors,
    format = "default",
    limit,
    merges,
    ordering,
    reverse,
    similarityThreshold,
    since
  }) {
    const params = [
      "log",
      `--format=${format === "refs" ? _parsers_parsers__WEBPACK_IMPORTED_MODULE_9__.GitLogParser.simpleRefs : format === "shortlog" || format === "shortlog+stats" ? _parsers_parsers__WEBPACK_IMPORTED_MODULE_9__.GitLogParser.shortlog : _parsers_parsers__WEBPACK_IMPORTED_MODULE_9__.GitLogParser.defaultFormat}`,
      "--full-history",
      `-M${similarityThreshold == null ? "" : `${similarityThreshold}%`}`,
      "-m"
    ];
    if (format === "default") {
      params.push("--name-status");
    } else if (format === "shortlog+stats") {
      params.push("--shortstat");
    }
    if (ordering) {
      params.push(`--${ordering}-order`);
    }
    if (limit && !reverse) {
      params.push(`-n${limit + 1}`);
    }
    if (since) {
      params.push(`--since="${since}"`);
    }
    if (!merges) {
      params.push("--first-parent");
    }
    if (authors != null && authors.length !== 0) {
      params.push("--use-mailmap", ...authors.map((a) => `--author=${a}`));
    } else if (format === "shortlog") {
      params.push("--use-mailmap");
    }
    if (all) {
      params.push("--all");
    }
    if (ref && !_models_models__WEBPACK_IMPORTED_MODULE_8__.GitRevision.isUncommittedStaged(ref)) {
      if (reverse) {
        params.push("--reverse", "--ancestry-path", `${ref}..HEAD`);
      } else {
        params.push(ref);
      }
    }
    return git({ cwd: repoPath, configs: ["-c", "diff.renameLimit=0", "-c", "log.showSignature=false"] }, ...params, "--");
  }
  Git2.log = log;
  function log__file(repoPath, fileName, ref, {
    all,
    filters,
    firstParent = false,
    format = "default",
    limit,
    ordering,
    renames = true,
    reverse = false,
    since,
    skip,
    startLine,
    endLine
  } = {}) {
    const [file, root] = _system__WEBPACK_IMPORTED_MODULE_6__.Paths.splitPath(fileName, repoPath);
    const params = [
      "log",
      `--format=${format === "default" ? _parsers_parsers__WEBPACK_IMPORTED_MODULE_9__.GitLogParser.defaultFormat : _parsers_parsers__WEBPACK_IMPORTED_MODULE_9__.GitLogParser.simpleFormat}`
    ];
    if (ordering) {
      params.push(`--${ordering}-order`);
    }
    if (limit && !reverse) {
      params.push(`-n${limit + 1}`);
    }
    if (skip) {
      params.push(`--skip=${skip}`);
    }
    if (since) {
      params.push(`--since="${since}"`);
    }
    if (all) {
      params.push("--all");
    }
    if (renames && (all || startLine != null)) {
      renames = false;
    }
    params.push(renames ? "--follow" : "-m");
    if (firstParent) {
      params.push("--first-parent");
      if (renames) {
        params.push("-m");
      }
    }
    if (filters != null && filters.length !== 0) {
      params.push(`--diff-filter=${filters.join(emptyStr)}`);
    }
    if (format !== "refs") {
      if (startLine == null) {
        if (format === "simple" || isFolderGlob(file)) {
          params.push("--name-status");
        } else {
          params.push("--numstat", "--summary");
        }
      } else {
        params.push(`-L ${startLine},${endLine == null ? startLine : endLine}:${file}`);
      }
    }
    if (ref && !_models_models__WEBPACK_IMPORTED_MODULE_8__.GitRevision.isUncommittedStaged(ref)) {
      if (reverse) {
        params.push("--reverse", "--ancestry-path", `${ref}..HEAD`);
      } else {
        params.push(ref);
      }
    }
    if (startLine == null) {
      params.push("--", file);
    }
    return git({ cwd: root, configs: ["-c", "log.showSignature=false"] }, ...params);
  }
  Git2.log__file = log__file;
  async function log__file_recent(repoPath, fileName, {
    ordering,
    ref,
    similarityThreshold
  } = {}) {
    const params = [
      "log",
      `-M${similarityThreshold == null ? "" : `${similarityThreshold}%`}`,
      "-n1",
      "--format=%H"
    ];
    if (ordering) {
      params.push(`--${ordering}-order`);
    }
    if (ref) {
      params.push(ref);
    }
    const data = await git({ cwd: repoPath, configs: ["-c", "log.showSignature=false"], errors: GitErrorHandling.Ignore }, ...params, "--", fileName);
    return data.length === 0 ? void 0 : data.trim();
  }
  Git2.log__file_recent = log__file_recent;
  async function log__find_object(repoPath, objectId, ref, ordering, file) {
    const params = ["log", "-n1", "--no-renames", "--format=%H", `--find-object=${objectId}`, ref];
    if (ordering) {
      params.push(`--${ordering}-order`);
    }
    if (file) {
      params.push("--", file);
    }
    const data = await git({ cwd: repoPath, configs: ["-c", "log.showSignature=false"], errors: GitErrorHandling.Ignore }, ...params);
    return data.length === 0 ? void 0 : data.trim();
  }
  Git2.log__find_object = log__find_object;
  async function log__recent(repoPath, ordering) {
    const params = ["log", "-n1", "--format=%H"];
    if (ordering) {
      params.push(`--${ordering}-order`);
    }
    const data = await git({ cwd: repoPath, configs: ["-c", "log.showSignature=false"], errors: GitErrorHandling.Ignore }, ...params, "--");
    return data.length === 0 ? void 0 : data.trim();
  }
  Git2.log__recent = log__recent;
  async function log__recent_committerdate(repoPath, ordering) {
    const params = ["log", "-n1", "--format=%ct"];
    if (ordering) {
      params.push(`--${ordering}-order`);
    }
    const data = await git({ cwd: repoPath, configs: ["-c", "log.showSignature=false"], errors: GitErrorHandling.Ignore }, ...params, "--");
    return data.length === 0 ? void 0 : data.trim();
  }
  Git2.log__recent_committerdate = log__recent_committerdate;
  function log__search(repoPath, search = emptyArray, {
    limit,
    ordering,
    skip,
    useShow
  } = {}) {
    const params = [
      useShow ? "show" : "log",
      "--name-status",
      `--format=${_parsers_parsers__WEBPACK_IMPORTED_MODULE_9__.GitLogParser.defaultFormat}`,
      "--use-mailmap"
    ];
    if (limit && !useShow) {
      params.push(`-n${limit + 1}`);
    }
    if (skip && !useShow) {
      params.push(`--skip=${skip}`);
    }
    if (ordering && !useShow) {
      params.push(`--${ordering}-order`);
    }
    return git({ cwd: repoPath, configs: useShow ? void 0 : ["-c", "log.showSignature=false"] }, ...params, ...search);
  }
  Git2.log__search = log__search;
  async function ls_files(repoPath, fileName, { ref, untracked } = {}) {
    const params = ["ls-files"];
    if (ref && !_models_models__WEBPACK_IMPORTED_MODULE_8__.GitRevision.isUncommitted(ref)) {
      params.push(`--with-tree=${ref}`);
    }
    if (!ref && untracked) {
      params.push("-o");
    }
    const data = await git({ cwd: repoPath, errors: GitErrorHandling.Ignore }, ...params, "--", fileName);
    return data.length === 0 ? void 0 : data.trim();
  }
  Git2.ls_files = ls_files;
  function ls_remote(repoPath, remote2, ref) {
    return git({ cwd: repoPath }, "ls-remote", remote2, ref);
  }
  Git2.ls_remote = ls_remote;
  function ls_remote__HEAD(repoPath, remote2) {
    return git({ cwd: repoPath }, "ls-remote", "--symref", remote2, "HEAD");
  }
  Git2.ls_remote__HEAD = ls_remote__HEAD;
  async function ls_tree(repoPath, ref, { fileName } = {}) {
    const params = ["ls-tree"];
    if (fileName) {
      params.push("-l", ref, "--", fileName);
    } else {
      params.push("-lrt", ref, "--");
    }
    const data = await git({ cwd: repoPath, errors: GitErrorHandling.Ignore }, ...params);
    return data.length === 0 ? void 0 : data.trim();
  }
  Git2.ls_tree = ls_tree;
  function merge_base(repoPath, ref1, ref2, { forkPoint } = {}) {
    const params = ["merge-base"];
    if (forkPoint) {
      params.push("--fork-point");
    }
    return git({ cwd: repoPath }, ...params, ref1, ref2);
  }
  Git2.merge_base = merge_base;
  function reflog(repoPath, {
    all,
    branch,
    limit,
    ordering,
    skip
  } = {}) {
    const params = ["log", "--walk-reflogs", `--format=${_parsers_parsers__WEBPACK_IMPORTED_MODULE_9__.GitReflogParser.defaultFormat}`, "--date=iso8601"];
    if (ordering) {
      params.push(`--${ordering}-order`);
    }
    if (all) {
      params.push("--all");
    }
    if (limit) {
      params.push(`-n${limit}`);
    }
    if (skip) {
      params.push(`--skip=${skip}`);
    }
    if (branch) {
      params.push(branch);
    }
    return git({ cwd: repoPath, configs: ["-c", "log.showSignature=false"] }, ...params, "--");
  }
  Git2.reflog = reflog;
  function remote(repoPath) {
    return git({ cwd: repoPath }, "remote", "-v");
  }
  Git2.remote = remote;
  function remote__add(repoPath, name, url) {
    return git({ cwd: repoPath }, "remote", "add", name, url);
  }
  Git2.remote__add = remote__add;
  function remote__prune(repoPath, remoteName) {
    return git({ cwd: repoPath }, "remote", "prune", remoteName);
  }
  Git2.remote__prune = remote__prune;
  function remote__get_url(repoPath, remote2) {
    return git({ cwd: repoPath }, "remote", "get-url", remote2);
  }
  Git2.remote__get_url = remote__get_url;
  function reset(repoPath, fileName) {
    return git({ cwd: repoPath }, "reset", "-q", "--", fileName);
  }
  Git2.reset = reset;
  async function rev_list__count(repoPath, ref) {
    let data = await git({ cwd: repoPath, errors: GitErrorHandling.Ignore }, "rev-list", "--count", ref, "--");
    data = data.trim();
    if (data.length === 0)
      return void 0;
    const result = parseInt(data, 10);
    return isNaN(result) ? void 0 : result;
  }
  Git2.rev_list__count = rev_list__count;
  async function rev_list__left_right(repoPath, refs) {
    const data = await git({ cwd: repoPath, errors: GitErrorHandling.Ignore }, "rev-list", "--left-right", "--count", ...refs, "--");
    if (data.length === 0)
      return void 0;
    const parts = data.split("	");
    if (parts.length !== 2)
      return void 0;
    const [ahead, behind] = parts;
    const result = {
      ahead: parseInt(ahead, 10),
      behind: parseInt(behind, 10)
    };
    if (isNaN(result.ahead) || isNaN(result.behind))
      return void 0;
    return result;
  }
  Git2.rev_list__left_right = rev_list__left_right;
  async function rev_parse__currentBranch(repoPath, ordering) {
    var _a, _b;
    try {
      const data = await git({ cwd: repoPath, errors: GitErrorHandling.Throw }, "rev-parse", "--abbrev-ref", "--symbolic-full-name", "@", "@{u}", "--");
      return [data, void 0];
    } catch (ex) {
      const msg = (_a = ex == null ? void 0 : ex.toString()) != null ? _a : "";
      if (GitErrors.badRevision.test(msg) || GitWarnings.noUpstream.test(msg)) {
        if (ex.stdout != null && ex.stdout.length !== 0) {
          return [ex.stdout, void 0];
        }
        try {
          const data = await symbolic_ref(repoPath, "HEAD");
          if (data != null)
            return [data.trim(), void 0];
        } catch {
        }
        try {
          const data = await symbolic_ref(repoPath, "refs/remotes/origin/HEAD");
          if (data != null)
            return [data.trim().substr("origin/".length), void 0];
        } catch (ex2) {
          if (/is not a symbolic ref/.test(ex2.stderr)) {
            try {
              const data = await ls_remote__HEAD(repoPath, "origin");
              if (data != null) {
                const match = /ref:\s(\S+)\s+HEAD/m.exec(data);
                if (match != null) {
                  const [, branch] = match;
                  return [branch.substr("refs/heads/".length), void 0];
                }
              }
            } catch {
            }
          }
        }
        const defaultBranch = (_b = await config__get("init.defaultBranch", repoPath, { local: true })) != null ? _b : "main";
        const branchConfig = await config__get_regex(`branch\\.${defaultBranch}\\.+`, repoPath, {
          local: true
        });
        let remote2;
        let remoteBranch;
        if (branchConfig) {
          let match = /^branch\..+\.remote\s(.+)$/m.exec(branchConfig);
          if (match != null) {
            remote2 = match[1];
          }
          match = /^branch\..+\.merge\srefs\/heads\/(.+)$/m.exec(branchConfig);
          if (match != null) {
            remoteBranch = match[1];
          }
        }
        return [`${defaultBranch}${remote2 && remoteBranch ? `
${remote2}/${remoteBranch}` : ""}`, void 0];
      }
      if (GitWarnings.headNotABranch.test(msg)) {
        const sha = await log__recent(repoPath, ordering);
        if (sha === void 0)
          return void 0;
        return [`(HEAD detached at ${_models_models__WEBPACK_IMPORTED_MODULE_8__.GitRevision.shorten(sha)})`, sha];
      }
      defaultExceptionHandler(ex, repoPath);
      return void 0;
    }
  }
  Git2.rev_parse__currentBranch = rev_parse__currentBranch;
  async function rev_parse__show_toplevel(cwd) {
    try {
      const data = await git({ cwd, errors: GitErrorHandling.Throw }, "rev-parse", "--show-toplevel");
      return data.length === 0 ? void 0 : _system__WEBPACK_IMPORTED_MODULE_6__.Strings.normalizePath(data.trimLeft().replace(/[\r|\n]+$/, ""));
    } catch (ex) {
      const inDotGit = /this operation must be run in a work tree/.test(ex.stderr);
      if (inDotGit || ex.code === "ENOENT") {
        let exists = inDotGit ? false : await (0,_shell__WEBPACK_IMPORTED_MODULE_10__.fsExists)(cwd);
        if (!exists) {
          do {
            const parent = path__WEBPACK_IMPORTED_MODULE_0__.dirname(cwd);
            if (parent === cwd || parent.length === 0)
              return void 0;
            cwd = parent;
            exists = await (0,_shell__WEBPACK_IMPORTED_MODULE_10__.fsExists)(cwd);
          } while (!exists);
          return rev_parse__show_toplevel(cwd);
        }
      }
      return void 0;
    }
  }
  Git2.rev_parse__show_toplevel = rev_parse__show_toplevel;
  async function rev_parse__verify(repoPath, ref, filename) {
    const data = await git({ cwd: repoPath, errors: GitErrorHandling.Ignore }, "rev-parse", "--verify", filename ? `${ref}:./${filename}` : `${ref}^{commit}`);
    return data.length === 0 ? void 0 : data.trim();
  }
  Git2.rev_parse__verify = rev_parse__verify;
  function shortlog(repoPath) {
    return git({ cwd: repoPath }, "shortlog", "-sne", "--all", "--no-merges", "HEAD");
  }
  Git2.shortlog = shortlog;
  async function show(repoPath, fileName, ref, options = {}) {
    var _a, _b;
    const [file, root] = _system__WEBPACK_IMPORTED_MODULE_6__.Paths.splitPath(fileName, repoPath);
    if (_models_models__WEBPACK_IMPORTED_MODULE_8__.GitRevision.isUncommittedStaged(ref)) {
      ref = ":";
    }
    if (_models_models__WEBPACK_IMPORTED_MODULE_8__.GitRevision.isUncommitted(ref))
      throw new Error(`ref=${ref} is uncommitted`);
    const opts = {
      configs: ["-c", "log.showSignature=false"],
      cwd: root,
      encoding: (_a = options.encoding) != null ? _a : "utf8",
      errors: GitErrorHandling.Throw
    };
    const args = ref.endsWith(":") ? `${ref}./${file}` : `${ref}:./${file}`;
    try {
      const data = await git(opts, "show", "--textconv", args, "--");
      return data;
    } catch (ex) {
      const msg = (_b = ex == null ? void 0 : ex.toString()) != null ? _b : "";
      if (ref === ":" && GitErrors.badRevision.test(msg)) {
        return Git2.show(repoPath, fileName, "HEAD:", options);
      }
      if (GitErrors.badRevision.test(msg) || GitWarnings.notFound.test(msg) || GitWarnings.foundButNotInRevision.test(msg)) {
        return void 0;
      }
      return defaultExceptionHandler(ex, opts.cwd);
    }
  }
  Git2.show = show;
  function show__diff(repoPath, fileName, ref, originalFileName, { similarityThreshold } = {}) {
    const params = [
      "show",
      `-M${similarityThreshold == null ? "" : `${similarityThreshold}%`}`,
      "--format=",
      "--minimal",
      "-U0",
      ref,
      "--",
      fileName
    ];
    if (originalFileName != null && originalFileName.length !== 0) {
      params.push(originalFileName);
    }
    return git({ cwd: repoPath }, ...params);
  }
  Git2.show__diff = show__diff;
  function show__name_status(repoPath, fileName, ref) {
    return git({ cwd: repoPath }, "show", "--name-status", "--format=", ref, "--", fileName);
  }
  Git2.show__name_status = show__name_status;
  function show_ref__tags(repoPath) {
    return git({ cwd: repoPath, errors: GitErrorHandling.Ignore }, "show-ref", "--tags");
  }
  Git2.show_ref__tags = show_ref__tags;
  function stash__apply(repoPath, stashName, deleteAfter) {
    if (!stashName)
      return Promise.resolve(void 0);
    return git({ cwd: repoPath }, "stash", deleteAfter ? "pop" : "apply", stashName);
  }
  Git2.stash__apply = stash__apply;
  async function stash__delete(repoPath, stashName, ref) {
    if (!stashName)
      return void 0;
    if (ref) {
      const stashRef = await git({ cwd: repoPath, errors: GitErrorHandling.Ignore }, "show", "--format=%H", "--no-patch", stashName);
      if ((stashRef == null ? void 0 : stashRef.trim()) !== ref) {
        throw new Error("Unable to delete stash; mismatch with stash number");
      }
    }
    return git({ cwd: repoPath }, "stash", "drop", stashName);
  }
  Git2.stash__delete = stash__delete;
  function stash__list(repoPath, {
    format = _parsers_parsers__WEBPACK_IMPORTED_MODULE_9__.GitStashParser.defaultFormat,
    similarityThreshold
  } = {}) {
    return git({ cwd: repoPath }, "stash", "list", "--name-status", `-M${similarityThreshold == null ? "" : `${similarityThreshold}%`}`, `--format=${format}`);
  }
  Git2.stash__list = stash__list;
  async function stash__push(repoPath, message, {
    includeUntracked,
    keepIndex,
    pathspecs,
    stdin
  } = {}) {
    const params = ["stash", "push"];
    if (includeUntracked || pathspecs != null && pathspecs.length !== 0) {
      params.push("-u");
    }
    if (keepIndex) {
      params.push("-k");
    }
    if (message) {
      params.push("-m", message);
    }
    if (stdin && pathspecs != null && pathspecs.length !== 0) {
      void await git({ cwd: repoPath, stdin: pathspecs.join("\0") }, ...params, "--pathspec-from-file=-", "--pathspec-file-nul");
      return;
    }
    params.push("--");
    if (pathspecs != null && pathspecs.length !== 0) {
      params.push(...pathspecs);
    }
    void await git({ cwd: repoPath }, ...params);
  }
  Git2.stash__push = stash__push;
  function status(repoPath, porcelainVersion = 1, { similarityThreshold } = {}) {
    const params = [
      "status",
      porcelainVersion >= 2 ? `--porcelain=v${porcelainVersion}` : "--porcelain",
      "--branch",
      "-u"
    ];
    if (Git2.validateVersion(2, 18)) {
      params.push(`--find-renames${similarityThreshold == null ? "" : `=${similarityThreshold}%`}`);
    }
    return git({ cwd: repoPath, configs: ["-c", "color.status=false"], env: { GIT_OPTIONAL_LOCKS: "0" } }, ...params, "--");
  }
  Git2.status = status;
  function status__file(repoPath, fileName, porcelainVersion = 1, { similarityThreshold } = {}) {
    const [file, root] = _system__WEBPACK_IMPORTED_MODULE_6__.Paths.splitPath(fileName, repoPath);
    const params = ["status", porcelainVersion >= 2 ? `--porcelain=v${porcelainVersion}` : "--porcelain"];
    if (Git2.validateVersion(2, 18)) {
      params.push(`--find-renames${similarityThreshold == null ? "" : `=${similarityThreshold}%`}`);
    }
    return git({ cwd: root, configs: ["-c", "color.status=false"], env: { GIT_OPTIONAL_LOCKS: "0" } }, ...params, "--", file);
  }
  Git2.status__file = status__file;
  function symbolic_ref(repoPath, ref) {
    return git({ cwd: repoPath }, "symbolic-ref", "--short", ref);
  }
  Git2.symbolic_ref = symbolic_ref;
  function tag(repoPath) {
    return git({ cwd: repoPath }, "tag", "-l", `--format=${_parsers_parsers__WEBPACK_IMPORTED_MODULE_9__.GitTagParser.defaultFormat}`);
  }
  Git2.tag = tag;
  async function readDotGitFile(repoPath, pathParts, options) {
    var _a;
    try {
      const bytes = await vscode__WEBPACK_IMPORTED_MODULE_2__.workspace.fs.readFile(vscode__WEBPACK_IMPORTED_MODULE_2__.Uri.file(path__WEBPACK_IMPORTED_MODULE_0__.join(...[repoPath, ".git", ...pathParts])));
      let contents = textDecoder.decode(bytes);
      contents = ((_a = options == null ? void 0 : options.trim) != null ? _a : true) ? contents.trim() : contents;
      if (options == null ? void 0 : options.numeric) {
        const number = Number.parseInt(contents, 10);
        return isNaN(number) ? void 0 : number;
      }
      return contents;
    } catch (ex) {
      if (options == null ? void 0 : options.throw)
        throw ex;
      return void 0;
    }
  }
  Git2.readDotGitFile = readDotGitFile;
})(Git || (Git = {}));
function isFolderGlob(path) {
  return path__WEBPACK_IMPORTED_MODULE_0__.basename(path) === "*";
}
function toFolderGlob(fsPath) {
  return path__WEBPACK_IMPORTED_MODULE_0__.join(fsPath, "*");
}


/***/ }),

/***/ "./src/git/gitService.ts":
/*!*******************************!*\
  !*** ./src/git/gitService.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "GitService": () => (/* binding */ GitService)
/* harmony export */ });
Object(function webpackMissingModule() { var e = new Error("Cannot find module 'fs'"); e.code = 'MODULE_NOT_FOUND'; throw e; }());
Object(function webpackMissingModule() { var e = new Error("Cannot find module 'os'"); e.code = 'MODULE_NOT_FOUND'; throw e; }());
/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! path */ "./node_modules/path-browserify/index.js");
/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _avatars__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../avatars */ "./src/avatars.ts");
/* harmony import */ var _configuration__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../configuration */ "./src/configuration.ts");
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../constants */ "./src/constants.ts");
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../container */ "./src/container.ts");
/* harmony import */ var _extension__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../extension */ "./src/extension.ts");
/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../logger */ "./src/logger.ts");
/* harmony import */ var _messages__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../messages */ "./src/messages.ts");
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../system */ "./src/system.ts");
/* harmony import */ var _trackers_gitDocumentTracker__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../trackers/gitDocumentTracker */ "./src/trackers/gitDocumentTracker.ts");
/* harmony import */ var _vsls_vsls__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../vsls/vsls */ "./src/vsls/vsls.ts");
/* harmony import */ var _git__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./git */ "./src/git/git.ts");
/* harmony import */ var _gitUri__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./gitUri */ "./src/git/gitUri.ts");
/* harmony import */ var _parsers_parsers__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./parsers/parsers */ "./src/git/parsers/parsers.ts");
/* harmony import */ var _remotes_factory__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./remotes/factory */ "./src/git/remotes/factory.ts");
/* harmony import */ var _shell__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./shell */ "./src/git/shell.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};



















const emptyStr = "";
const slash = "/";
const RepoSearchWarnings = {
  doesNotExist: /no such file or directory/i
};
const doubleQuoteRegex = /"/g;
const driveLetterRegex = /(?<=^\/?)([a-zA-Z])(?=:\/)/;
const userConfigRegex = /^user\.(name|email) (.*)$/gm;
const mappedAuthorRegex = /(.+)\s<(.+)>/;
const emptyPromise = Promise.resolve(void 0);
const reflogCommands = ["merge", "pull"];
const maxDefaultBranchWeight = 100;
const weightedDefaultBranches = new Map([
  ["master", maxDefaultBranchWeight],
  ["main", 15],
  ["default", 10],
  ["develop", 5],
  ["development", 1]
]);
const _GitService = class {
  constructor() {
    __publicField(this, "_onDidChangeRepositories", new vscode__WEBPACK_IMPORTED_MODULE_2__.EventEmitter());
    __publicField(this, "_disposable");
    __publicField(this, "_repositoryTree");
    __publicField(this, "_repositoriesLoadingPromise");
    __publicField(this, "_branchesCache", new Map());
    __publicField(this, "_contributorsCache", new Map());
    __publicField(this, "_mergeStatusCache", new Map());
    __publicField(this, "_rebaseStatusCache", new Map());
    __publicField(this, "_remotesWithApiProviderCache", new Map());
    __publicField(this, "_stashesCache", new Map());
    __publicField(this, "_tagsCache", new Map());
    __publicField(this, "_trackedCache", new Map());
    __publicField(this, "_userMapCache", new Map());
    this._repositoryTree = _system__WEBPACK_IMPORTED_MODULE_10__.TernarySearchTree.forPaths();
    this._disposable = vscode__WEBPACK_IMPORTED_MODULE_2__.Disposable.from(vscode__WEBPACK_IMPORTED_MODULE_2__.window.onDidChangeWindowState(this.onWindowStateChanged, this), vscode__WEBPACK_IMPORTED_MODULE_2__.workspace.onDidChangeWorkspaceFolders(this.onWorkspaceFoldersChanged, this), _configuration__WEBPACK_IMPORTED_MODULE_4__.configuration.onDidChange(this.onConfigurationChanged, this), _git__WEBPACK_IMPORTED_MODULE_13__.Authentication.onDidChange((e) => {
      if (e.reason === "connected") {
        (0,_avatars__WEBPACK_IMPORTED_MODULE_3__.resetAvatarCache)("failed");
      }
      this._remotesWithApiProviderCache.clear();
      void this.updateContext(this._repositoryTree);
    }));
    this.onConfigurationChanged();
    this._repositoriesLoadingPromise = this.onWorkspaceFoldersChanged();
  }
  get onDidChangeRepositories() {
    return this._onDidChangeRepositories.event;
  }
  dispose() {
    this._repositoryTree.forEach((r) => r.dispose());
    void this.resetCaches();
    this._disposable.dispose();
  }
  static async initialize() {
    let gitPath;
    const gitApi = await _GitService.getBuiltInGitApi();
    if (gitApi != null) {
      gitPath = gitApi.git.path;
    }
    await _git__WEBPACK_IMPORTED_MODULE_13__.Git.setOrFindGitPath(gitPath != null ? gitPath : _configuration__WEBPACK_IMPORTED_MODULE_4__.configuration.getAny("git.path"));
  }
  get readonly() {
    return _container__WEBPACK_IMPORTED_MODULE_6__.Container.vsls.readonly;
  }
  get useCaching() {
    return _container__WEBPACK_IMPORTED_MODULE_6__.Container.config.advanced.caching.enabled;
  }
  onAnyRepositoryChanged(repo, e) {
    if (e.changed(_git__WEBPACK_IMPORTED_MODULE_13__.RepositoryChange.Config, _git__WEBPACK_IMPORTED_MODULE_13__.RepositoryChangeComparisonMode.Any)) {
      this._userMapCache.delete(repo.path);
    }
    if (e.changed(_git__WEBPACK_IMPORTED_MODULE_13__.RepositoryChange.Heads, _git__WEBPACK_IMPORTED_MODULE_13__.RepositoryChange.Remotes, _git__WEBPACK_IMPORTED_MODULE_13__.RepositoryChangeComparisonMode.Any)) {
      this._branchesCache.delete(repo.path);
      this._contributorsCache.delete(repo.path);
      this._contributorsCache.delete(`stats|${repo.path}`);
    }
    if (e.changed(_git__WEBPACK_IMPORTED_MODULE_13__.RepositoryChange.Remotes, _git__WEBPACK_IMPORTED_MODULE_13__.RepositoryChange.RemoteProviders, _git__WEBPACK_IMPORTED_MODULE_13__.RepositoryChangeComparisonMode.Any)) {
      this._remotesWithApiProviderCache.clear();
    }
    if (e.changed(_git__WEBPACK_IMPORTED_MODULE_13__.RepositoryChange.Index, _git__WEBPACK_IMPORTED_MODULE_13__.RepositoryChange.Unknown, _git__WEBPACK_IMPORTED_MODULE_13__.RepositoryChangeComparisonMode.Any)) {
      this._trackedCache.clear();
    }
    if (e.changed(_git__WEBPACK_IMPORTED_MODULE_13__.RepositoryChange.Merge, _git__WEBPACK_IMPORTED_MODULE_13__.RepositoryChangeComparisonMode.Any)) {
      this._mergeStatusCache.delete(repo.path);
    }
    if (e.changed(_git__WEBPACK_IMPORTED_MODULE_13__.RepositoryChange.Rebase, _git__WEBPACK_IMPORTED_MODULE_13__.RepositoryChangeComparisonMode.Any)) {
      this._rebaseStatusCache.delete(repo.path);
    }
    if (e.changed(_git__WEBPACK_IMPORTED_MODULE_13__.RepositoryChange.Stash, _git__WEBPACK_IMPORTED_MODULE_13__.RepositoryChangeComparisonMode.Any)) {
      this._stashesCache.delete(repo.path);
    }
    if (e.changed(_git__WEBPACK_IMPORTED_MODULE_13__.RepositoryChange.Tags, _git__WEBPACK_IMPORTED_MODULE_13__.RepositoryChangeComparisonMode.Any)) {
      this._tagsCache.delete(repo.path);
    }
    if (e.changed(_git__WEBPACK_IMPORTED_MODULE_13__.RepositoryChange.Closed, _git__WEBPACK_IMPORTED_MODULE_13__.RepositoryChangeComparisonMode.Any)) {
      setImmediate(async () => {
        await this.updateContext(this._repositoryTree);
        this.fireRepositoriesChanged();
      });
    }
  }
  onConfigurationChanged(e) {
    if (_configuration__WEBPACK_IMPORTED_MODULE_4__.configuration.changed(e, "defaultDateFormat") || _configuration__WEBPACK_IMPORTED_MODULE_4__.configuration.changed(e, "defaultDateSource") || _configuration__WEBPACK_IMPORTED_MODULE_4__.configuration.changed(e, "defaultDateStyle")) {
      _git__WEBPACK_IMPORTED_MODULE_13__.BranchDateFormatting.reset();
      _git__WEBPACK_IMPORTED_MODULE_13__.CommitDateFormatting.reset();
      _git__WEBPACK_IMPORTED_MODULE_13__.PullRequestDateFormatting.reset();
    }
    if (_configuration__WEBPACK_IMPORTED_MODULE_4__.configuration.changed(e, "views.contributors.showAllBranches")) {
      this._contributorsCache.clear();
    }
  }
  onWindowStateChanged(e) {
    if (e.focused) {
      this._repositoryTree.forEach((r) => r.resume());
    } else {
      this._repositoryTree.forEach((r) => r.suspend());
    }
  }
  async onWorkspaceFoldersChanged(e) {
    var _a, _b;
    let initializing = false;
    if (e == null) {
      initializing = true;
      e = {
        added: (_a = vscode__WEBPACK_IMPORTED_MODULE_2__.workspace.workspaceFolders) != null ? _a : [],
        removed: []
      };
      _logger__WEBPACK_IMPORTED_MODULE_8__.Logger.log(`Starting repository search in ${e.added.length} folders`);
    }
    const autoRepositoryDetection = (_b = _configuration__WEBPACK_IMPORTED_MODULE_4__.configuration.getAny(_constants__WEBPACK_IMPORTED_MODULE_5__.BuiltInGitConfiguration.AutoRepositoryDetection)) != null ? _b : true;
    if (autoRepositoryDetection === false)
      return;
    for (const f of e.added) {
      const { scheme } = f.uri;
      if (scheme !== _constants__WEBPACK_IMPORTED_MODULE_5__.DocumentSchemes.File && scheme !== _constants__WEBPACK_IMPORTED_MODULE_5__.DocumentSchemes.Vsls)
        continue;
      if (scheme === _constants__WEBPACK_IMPORTED_MODULE_5__.DocumentSchemes.Vsls) {
        if (_container__WEBPACK_IMPORTED_MODULE_6__.Container.vsls.isMaybeGuest) {
          const guest = await _container__WEBPACK_IMPORTED_MODULE_6__.Container.vsls.guest();
          if (guest != null) {
            const repositories = await guest.getRepositoriesInFolder(f, this.onAnyRepositoryChanged.bind(this));
            for (const r of repositories) {
              if (!this._repositoryTree.has(r.path)) {
                this._repositoryTree.set(r.path, r);
              }
            }
          }
        }
      } else {
        const repositories = await this.repositorySearch(f);
        for (const r of repositories) {
          if (!this._repositoryTree.has(r.path)) {
            this._repositoryTree.set(r.path, r);
          }
          if (autoRepositoryDetection === true || autoRepositoryDetection === "subFolders") {
            void _GitService.openBuiltInGitRepository(r.path);
          }
        }
      }
    }
    for (const f of e.removed) {
      const { fsPath, scheme } = f.uri;
      if (scheme !== _constants__WEBPACK_IMPORTED_MODULE_5__.DocumentSchemes.File && scheme !== _constants__WEBPACK_IMPORTED_MODULE_5__.DocumentSchemes.Vsls)
        continue;
      const repos = this._repositoryTree.findSuperstr(fsPath);
      const reposToDelete = repos != null ? [..._system__WEBPACK_IMPORTED_MODULE_10__.Iterables.map(repos, (r) => [r, r.path])] : [];
      const repo = this._repositoryTree.get(fsPath);
      if (repo != null) {
        reposToDelete.push([repo, fsPath]);
      }
      for (const [r, k] of reposToDelete) {
        this._repositoryTree.delete(k);
        r.dispose();
      }
    }
    await this.updateContext(this._repositoryTree);
    if (!initializing) {
      setImmediate(() => this.fireRepositoriesChanged());
    }
  }
  async repositorySearch(folder) {
    var _a;
    const cc = _logger__WEBPACK_IMPORTED_MODULE_8__.Logger.getCorrelationContext();
    const { uri } = folder;
    const depth = _configuration__WEBPACK_IMPORTED_MODULE_4__.configuration.get("advanced.repositorySearchDepth", uri);
    _logger__WEBPACK_IMPORTED_MODULE_8__.Logger.log(cc, `searching (depth=${depth})...`);
    const repositories = [];
    const anyRepoChangedFn = this.onAnyRepositoryChanged.bind(this);
    const rootPath = await this.getRepoPathCore(uri.fsPath, true);
    if (rootPath != null) {
      _logger__WEBPACK_IMPORTED_MODULE_8__.Logger.log(cc, `found root repository in '${rootPath}'`);
      repositories.push(new _git__WEBPACK_IMPORTED_MODULE_13__.Repository(folder, rootPath, true, anyRepoChangedFn, !vscode__WEBPACK_IMPORTED_MODULE_2__.window.state.focused));
    }
    if (depth <= 0)
      return repositories;
    let excludes = {
      ..._configuration__WEBPACK_IMPORTED_MODULE_4__.configuration.getAny("files.exclude", uri, {}),
      ..._configuration__WEBPACK_IMPORTED_MODULE_4__.configuration.getAny("search.exclude", uri, {})
    };
    const excludedPaths = [
      ..._system__WEBPACK_IMPORTED_MODULE_10__.Iterables.filterMap(Object.entries(excludes), ([key, value]) => {
        if (!value)
          return void 0;
        if (key.startsWith("**/"))
          return key.substring(3);
        return key;
      })
    ];
    excludes = excludedPaths.reduce((accumulator, current) => {
      accumulator[current] = true;
      return accumulator;
    }, Object.create(null));
    let repoPaths;
    try {
      repoPaths = await this.repositorySearchCore(uri.fsPath, depth, excludes);
    } catch (ex) {
      const msg = (_a = ex == null ? void 0 : ex.toString()) != null ? _a : emptyStr;
      if (RepoSearchWarnings.doesNotExist.test(msg)) {
        _logger__WEBPACK_IMPORTED_MODULE_8__.Logger.log(cc, `FAILED${msg ? ` Error: ${msg}` : emptyStr}`);
      } else {
        _logger__WEBPACK_IMPORTED_MODULE_8__.Logger.error(ex, cc, "FAILED");
      }
      return repositories;
    }
    for (let p of repoPaths) {
      p = path__WEBPACK_IMPORTED_MODULE_1__.dirname(p);
      if (_system__WEBPACK_IMPORTED_MODULE_10__.Strings.normalizePath(p) === rootPath)
        continue;
      _logger__WEBPACK_IMPORTED_MODULE_8__.Logger.log(cc, `searching in '${p}'...`);
      _logger__WEBPACK_IMPORTED_MODULE_8__.Logger.debug(cc, `normalizedRepoPath=${_system__WEBPACK_IMPORTED_MODULE_10__.Strings.normalizePath(p)}, rootPath=${rootPath}`);
      const rp = await this.getRepoPathCore(p, true);
      if (rp == null)
        continue;
      _logger__WEBPACK_IMPORTED_MODULE_8__.Logger.log(cc, `found repository in '${rp}'`);
      repositories.push(new _git__WEBPACK_IMPORTED_MODULE_13__.Repository(folder, rp, false, anyRepoChangedFn, !vscode__WEBPACK_IMPORTED_MODULE_2__.window.state.focused));
    }
    return repositories;
  }
  repositorySearchCore(root, depth, excludes, repositories = []) {
    const cc = _logger__WEBPACK_IMPORTED_MODULE_8__.Logger.getCorrelationContext();
    return new Promise((resolve, reject) => {
      Object(function webpackMissingModule() { var e = new Error("Cannot find module 'fs'"); e.code = 'MODULE_NOT_FOUND'; throw e; }())(root, { withFileTypes: true }, async (err, files) => {
        if (err != null) {
          reject(err);
          return;
        }
        if (files.length === 0) {
          resolve(repositories);
          return;
        }
        depth--;
        let f;
        for (f of files) {
          if (!f.isDirectory())
            continue;
          if (f.name === ".git") {
            repositories.push(path__WEBPACK_IMPORTED_MODULE_1__.resolve(root, f.name));
          } else if (depth >= 0 && excludes[f.name] !== true) {
            try {
              await this.repositorySearchCore(path__WEBPACK_IMPORTED_MODULE_1__.resolve(root, f.name), depth, excludes, repositories);
            } catch (ex) {
              _logger__WEBPACK_IMPORTED_MODULE_8__.Logger.error(ex, cc, "FAILED");
            }
          }
        }
        resolve(repositories);
      });
    });
  }
  async updateContext(repositoryTree) {
    const hasRepository = repositoryTree.any();
    await (0,_extension__WEBPACK_IMPORTED_MODULE_7__.setEnabled)(hasRepository);
    async function updateRemoteContext() {
      let hasRemotes = false;
      let hasRichRemotes = false;
      let hasConnectedRemotes = false;
      if (hasRepository) {
        for (const repo of repositoryTree.values()) {
          if (!hasConnectedRemotes) {
            hasConnectedRemotes = await repo.hasRichRemote(true);
            if (hasConnectedRemotes) {
              hasRichRemotes = true;
              hasRemotes = true;
            }
          }
          if (!hasRichRemotes) {
            hasRichRemotes = await repo.hasRichRemote();
          }
          if (!hasRemotes) {
            hasRemotes = await repo.hasRemotes();
          }
          if (hasRemotes && hasRichRemotes && hasConnectedRemotes)
            break;
        }
      }
      await Promise.all([
        (0,_constants__WEBPACK_IMPORTED_MODULE_5__.setContext)(_constants__WEBPACK_IMPORTED_MODULE_5__.ContextKeys.HasRemotes, hasRemotes),
        (0,_constants__WEBPACK_IMPORTED_MODULE_5__.setContext)(_constants__WEBPACK_IMPORTED_MODULE_5__.ContextKeys.HasRichRemotes, hasRichRemotes),
        (0,_constants__WEBPACK_IMPORTED_MODULE_5__.setContext)(_constants__WEBPACK_IMPORTED_MODULE_5__.ContextKeys.HasConnectedRemotes, hasConnectedRemotes)
      ]);
    }
    void updateRemoteContext();
    if (!hasRepository) {
      const watcher = vscode__WEBPACK_IMPORTED_MODULE_2__.workspace.createFileSystemWatcher("**/.git", false, true, true);
      const disposable = vscode__WEBPACK_IMPORTED_MODULE_2__.Disposable.from(watcher, watcher.onDidCreate(async (uri) => {
        const f = vscode__WEBPACK_IMPORTED_MODULE_2__.workspace.getWorkspaceFolder(uri);
        if (f == null)
          return;
        const repositories = await this.repositorySearch(f);
        if (repositories.length === 0)
          return;
        disposable.dispose();
        for (const r of repositories) {
          if (!this._repositoryTree.has(r.path)) {
            this._repositoryTree.set(r.path, r);
          }
          void _GitService.openBuiltInGitRepository(r.path);
        }
        await this.updateContext(this._repositoryTree);
        setImmediate(() => this.fireRepositoriesChanged());
      }, this));
    }
  }
  fireRepositoriesChanged() {
    this._onDidChangeRepositories.fire();
  }
  addRemote(repoPath, name, url) {
    return _git__WEBPACK_IMPORTED_MODULE_13__.Git.remote__add(repoPath, name, url);
  }
  pruneRemote(repoPath, remoteName) {
    return _git__WEBPACK_IMPORTED_MODULE_13__.Git.remote__prune(repoPath, remoteName);
  }
  async applyChangesToWorkingFile(uri, ref1, ref2) {
    var _a;
    const cc = _logger__WEBPACK_IMPORTED_MODULE_8__.Logger.getCorrelationContext();
    ref1 = ref1 != null ? ref1 : uri.sha;
    if (ref1 == null || uri.repoPath == null)
      return;
    if (ref2 == null) {
      ref2 = ref1;
      ref1 = `${ref1}^`;
    }
    let patch;
    try {
      patch = await _git__WEBPACK_IMPORTED_MODULE_13__.Git.diff(uri.repoPath, uri.fsPath, ref1, ref2);
      void await _git__WEBPACK_IMPORTED_MODULE_13__.Git.apply(uri.repoPath, patch);
    } catch (ex) {
      const msg = (_a = ex == null ? void 0 : ex.toString()) != null ? _a : emptyStr;
      if (patch && /patch does not apply/i.test(msg)) {
        const result = await vscode__WEBPACK_IMPORTED_MODULE_2__.window.showWarningMessage("Unable to apply changes cleanly. Retry and allow conflicts?", { title: "Yes" }, { title: "No", isCloseAffordance: true });
        if (result == null || result.title !== "Yes")
          return;
        if (result.title === "Yes") {
          try {
            void await _git__WEBPACK_IMPORTED_MODULE_13__.Git.apply(uri.repoPath, patch, { allowConflicts: true });
            return;
          } catch (e) {
            ex = e;
          }
        }
      }
      _logger__WEBPACK_IMPORTED_MODULE_8__.Logger.error(ex, cc);
      void _messages__WEBPACK_IMPORTED_MODULE_9__.Messages.showGenericErrorMessage("Unable to apply changes");
    }
  }
  async branchContainsCommit(repoPath, name, ref) {
    let data = await _git__WEBPACK_IMPORTED_MODULE_13__.Git.branch__containsOrPointsAt(repoPath, ref, { mode: "contains", name });
    data = data == null ? void 0 : data.trim();
    return Boolean(data);
  }
  async checkout(repoPath, ref, options = {}) {
    var _a;
    const cc = _logger__WEBPACK_IMPORTED_MODULE_8__.Logger.getCorrelationContext();
    try {
      return await _git__WEBPACK_IMPORTED_MODULE_13__.Git.checkout(repoPath, ref, options);
    } catch (ex) {
      const msg = (_a = ex == null ? void 0 : ex.toString()) != null ? _a : emptyStr;
      if (/overwritten by checkout/i.test(msg)) {
        void _messages__WEBPACK_IMPORTED_MODULE_9__.Messages.showGenericErrorMessage(`Unable to checkout '${ref}'. Please commit or stash your changes before switching branches`);
        return void 0;
      }
      _logger__WEBPACK_IMPORTED_MODULE_8__.Logger.error(ex, cc);
      void void _messages__WEBPACK_IMPORTED_MODULE_9__.Messages.showGenericErrorMessage(`Unable to checkout '${ref}'`);
      return void 0;
    }
  }
  async resetCaches(...cache) {
    if (cache.length === 0 || cache.includes("branches")) {
      this._branchesCache.clear();
      if (cache.length !== 0) {
        for (const repo of await this.getRepositories()) {
          repo.resetCaches("branch");
        }
      }
    }
    if (cache.length === 0 || cache.includes("contributors")) {
      this._contributorsCache.clear();
    }
    if (cache.length === 0 || cache.includes("providers")) {
      this._remotesWithApiProviderCache.clear();
    }
    if (cache.includes("remotes")) {
      for (const repo of await this.getRepositories()) {
        repo.resetCaches("remotes");
      }
    }
    if (cache.length === 0 || cache.includes("stashes")) {
      this._stashesCache.clear();
    }
    if (cache.length === 0 || cache.includes("status")) {
      this._mergeStatusCache.clear();
      this._rebaseStatusCache.clear();
    }
    if (cache.length === 0 || cache.includes("tags")) {
      this._tagsCache.clear();
    }
    if (cache.length === 0) {
      this._trackedCache.clear();
      this._userMapCache.clear();
      for (const repo of await this.getRepositories()) {
        repo.resetCaches();
      }
    }
  }
  async excludeIgnoredUris(repoPath, uris) {
    const paths2 = new Map(uris.map((u) => [_system__WEBPACK_IMPORTED_MODULE_10__.Strings.normalizePath(u.fsPath), u]));
    const data = await _git__WEBPACK_IMPORTED_MODULE_13__.Git.check_ignore(repoPath, ...paths2.keys());
    if (data == null)
      return uris;
    const ignored = data.split("\0").filter((i) => Boolean(i));
    if (ignored.length === 0)
      return uris;
    for (const file of ignored) {
      paths2.delete(file);
    }
    return [...paths2.values()];
  }
  async fetch(repoPath, options = {}) {
    const { branch: branchRef, ...opts } = options;
    if (_git__WEBPACK_IMPORTED_MODULE_13__.GitReference.isBranch(branchRef)) {
      const repo = await this.getRepository(repoPath);
      const branch = await (repo == null ? void 0 : repo.getBranch(branchRef == null ? void 0 : branchRef.name));
      if (!(branch == null ? void 0 : branch.remote) && (branch == null ? void 0 : branch.upstream) == null)
        return void 0;
      return _git__WEBPACK_IMPORTED_MODULE_13__.Git.fetch(repoPath, {
        branch: branch.getNameWithoutRemote(),
        remote: branch.getRemoteName(),
        upstream: branch.getTrackingWithoutRemote(),
        pull: options.pull
      });
    }
    return _git__WEBPACK_IMPORTED_MODULE_13__.Git.fetch(repoPath, opts);
  }
  async fetchAll(repositories, options = {}) {
    if (repositories == null) {
      repositories = await this.getOrderedRepositories();
    }
    if (repositories.length === 0)
      return;
    if (repositories.length === 1) {
      await repositories[0].fetch(options);
      return;
    }
    await vscode__WEBPACK_IMPORTED_MODULE_2__.window.withProgress({
      location: vscode__WEBPACK_IMPORTED_MODULE_2__.ProgressLocation.Notification,
      title: `Fetching ${repositories.length} repositories`
    }, () => Promise.all(repositories.map((r) => r.fetch({ progress: false, ...options }))));
  }
  async pullAll(repositories, options = {}) {
    if (repositories == null) {
      repositories = await this.getOrderedRepositories();
    }
    if (repositories.length === 0)
      return;
    if (repositories.length === 1) {
      await repositories[0].pull(options);
      return;
    }
    await vscode__WEBPACK_IMPORTED_MODULE_2__.window.withProgress({
      location: vscode__WEBPACK_IMPORTED_MODULE_2__.ProgressLocation.Notification,
      title: `Pulling ${repositories.length} repositories`
    }, () => Promise.all(repositories.map((r) => r.pull({ progress: false, ...options }))));
  }
  async pushAll(repositories, options = {}) {
    if (repositories == null) {
      repositories = await this.getOrderedRepositories();
    }
    if (repositories.length === 0)
      return;
    if (repositories.length === 1) {
      await repositories[0].push(options);
      return;
    }
    await vscode__WEBPACK_IMPORTED_MODULE_2__.window.withProgress({
      location: vscode__WEBPACK_IMPORTED_MODULE_2__.ProgressLocation.Notification,
      title: `Pushing ${repositories.length} repositories`
    }, () => Promise.all(repositories.map((r) => r.push({ progress: false, ...options }))));
  }
  async getActiveRepository(editor) {
    const repoPath = await this.getActiveRepoPath(editor);
    if (repoPath == null)
      return void 0;
    return this.getRepository(repoPath);
  }
  async getActiveRepoPath(editor) {
    editor = editor != null ? editor : vscode__WEBPACK_IMPORTED_MODULE_2__.window.activeTextEditor;
    let repoPath;
    if (editor != null) {
      const doc = await _container__WEBPACK_IMPORTED_MODULE_6__.Container.tracker.getOrAdd(editor.document.uri);
      if (doc != null) {
        repoPath = doc.uri.repoPath;
      }
    }
    if (repoPath != null)
      return repoPath;
    return this.getHighlanderRepoPath();
  }
  getHighlanderRepoPath() {
    const entry = this._repositoryTree.highlander();
    if (entry == null)
      return void 0;
    const [, repo] = entry;
    return repo.path;
  }
  async getBlameForFile(uri) {
    const cc = _logger__WEBPACK_IMPORTED_MODULE_8__.Logger.getCorrelationContext();
    let key = "blame";
    if (uri.sha != null) {
      key += `:${uri.sha}`;
    }
    const doc = await _container__WEBPACK_IMPORTED_MODULE_6__.Container.tracker.getOrAdd(uri);
    if (this.useCaching) {
      if (doc.state != null) {
        const cachedBlame = doc.state.get(key);
        if (cachedBlame != null) {
          _logger__WEBPACK_IMPORTED_MODULE_8__.Logger.debug(cc, `Cache hit: '${key}'`);
          return cachedBlame.item;
        }
      }
      _logger__WEBPACK_IMPORTED_MODULE_8__.Logger.debug(cc, `Cache miss: '${key}'`);
      if (doc.state == null) {
        doc.state = new _trackers_gitDocumentTracker__WEBPACK_IMPORTED_MODULE_11__.GitDocumentState(doc.key);
      }
    }
    const promise = this.getBlameForFileCore(uri, doc, key, cc);
    if (doc.state != null) {
      _logger__WEBPACK_IMPORTED_MODULE_8__.Logger.debug(cc, `Cache add: '${key}'`);
      const value = {
        item: promise
      };
      doc.state.set(key, value);
    }
    return promise;
  }
  async getBlameForFileCore(uri, document, key, cc) {
    var _a;
    if (!await this.isTracked(uri)) {
      _logger__WEBPACK_IMPORTED_MODULE_8__.Logger.log(cc, `Skipping blame; '${uri.fsPath}' is not tracked`);
      return emptyPromise;
    }
    const [file, root] = _system__WEBPACK_IMPORTED_MODULE_10__.Paths.splitPath(uri.fsPath, uri.repoPath, false);
    try {
      const data = await _git__WEBPACK_IMPORTED_MODULE_13__.Git.blame(root, file, uri.sha, {
        args: _container__WEBPACK_IMPORTED_MODULE_6__.Container.config.advanced.blame.customArguments,
        ignoreWhitespace: _container__WEBPACK_IMPORTED_MODULE_6__.Container.config.blame.ignoreWhitespace
      });
      const blame = _git__WEBPACK_IMPORTED_MODULE_13__.GitBlameParser.parse(data, root, file, await this.getCurrentUser(root));
      return blame;
    } catch (ex) {
      if (document.state != null) {
        const msg = (_a = ex == null ? void 0 : ex.toString()) != null ? _a : "";
        _logger__WEBPACK_IMPORTED_MODULE_8__.Logger.debug(cc, `Cache replace (with empty promise): '${key}'`);
        const value = {
          item: emptyPromise,
          errorMessage: msg
        };
        document.state.set(key, value);
        document.setBlameFailure();
        return emptyPromise;
      }
      return void 0;
    }
  }
  async getBlameForFileContents(uri, contents) {
    const cc = _logger__WEBPACK_IMPORTED_MODULE_8__.Logger.getCorrelationContext();
    const key = `blame:${_system__WEBPACK_IMPORTED_MODULE_10__.Strings.sha1(contents)}`;
    const doc = await _container__WEBPACK_IMPORTED_MODULE_6__.Container.tracker.getOrAdd(uri);
    if (this.useCaching) {
      if (doc.state != null) {
        const cachedBlame = doc.state.get(key);
        if (cachedBlame != null) {
          _logger__WEBPACK_IMPORTED_MODULE_8__.Logger.debug(cc, `Cache hit: ${key}`);
          return cachedBlame.item;
        }
      }
      _logger__WEBPACK_IMPORTED_MODULE_8__.Logger.debug(cc, `Cache miss: ${key}`);
      if (doc.state == null) {
        doc.state = new _trackers_gitDocumentTracker__WEBPACK_IMPORTED_MODULE_11__.GitDocumentState(doc.key);
      }
    }
    const promise = this.getBlameForFileContentsCore(uri, contents, doc, key, cc);
    if (doc.state != null) {
      _logger__WEBPACK_IMPORTED_MODULE_8__.Logger.debug(cc, `Cache add: '${key}'`);
      const value = {
        item: promise
      };
      doc.state.set(key, value);
    }
    return promise;
  }
  async getBlameForFileContentsCore(uri, contents, document, key, cc) {
    var _a;
    if (!await this.isTracked(uri)) {
      _logger__WEBPACK_IMPORTED_MODULE_8__.Logger.log(cc, `Skipping blame; '${uri.fsPath}' is not tracked`);
      return emptyPromise;
    }
    const [file, root] = _system__WEBPACK_IMPORTED_MODULE_10__.Paths.splitPath(uri.fsPath, uri.repoPath, false);
    try {
      const data = await _git__WEBPACK_IMPORTED_MODULE_13__.Git.blame__contents(root, file, contents, {
        args: _container__WEBPACK_IMPORTED_MODULE_6__.Container.config.advanced.blame.customArguments,
        correlationKey: `:${key}`,
        ignoreWhitespace: _container__WEBPACK_IMPORTED_MODULE_6__.Container.config.blame.ignoreWhitespace
      });
      const blame = _git__WEBPACK_IMPORTED_MODULE_13__.GitBlameParser.parse(data, root, file, await this.getCurrentUser(root));
      return blame;
    } catch (ex) {
      if (document.state != null) {
        const msg = (_a = ex == null ? void 0 : ex.toString()) != null ? _a : "";
        _logger__WEBPACK_IMPORTED_MODULE_8__.Logger.debug(cc, `Cache replace (with empty promise): '${key}'`);
        const value = {
          item: emptyPromise,
          errorMessage: msg
        };
        document.state.set(key, value);
        document.setBlameFailure();
        return emptyPromise;
      }
      return void 0;
    }
  }
  async getBlameForLine(uri, editorLine, options = {}) {
    if (!options.skipCache && this.useCaching) {
      const blame = await this.getBlameForFile(uri);
      if (blame == null)
        return void 0;
      let blameLine = blame.lines[editorLine];
      if (blameLine == null) {
        if (blame.lines.length !== editorLine)
          return void 0;
        blameLine = blame.lines[editorLine - 1];
      }
      const commit = blame.commits.get(blameLine.sha);
      if (commit == null)
        return void 0;
      const author = blame.authors.get(commit.author);
      return {
        author: { ...author, lineCount: commit.lines.length },
        commit,
        line: blameLine
      };
    }
    const lineToBlame = editorLine + 1;
    const fileName = uri.fsPath;
    try {
      const data = await _git__WEBPACK_IMPORTED_MODULE_13__.Git.blame(uri.repoPath, fileName, uri.sha, {
        args: _container__WEBPACK_IMPORTED_MODULE_6__.Container.config.advanced.blame.customArguments,
        ignoreWhitespace: _container__WEBPACK_IMPORTED_MODULE_6__.Container.config.blame.ignoreWhitespace,
        startLine: lineToBlame,
        endLine: lineToBlame
      });
      const blame = _git__WEBPACK_IMPORTED_MODULE_13__.GitBlameParser.parse(data, uri.repoPath, fileName, await this.getCurrentUser(uri.repoPath));
      if (blame == null)
        return void 0;
      return {
        author: _system__WEBPACK_IMPORTED_MODULE_10__.Iterables.first(blame.authors.values()),
        commit: _system__WEBPACK_IMPORTED_MODULE_10__.Iterables.first(blame.commits.values()),
        line: blame.lines[editorLine]
      };
    } catch {
      return void 0;
    }
  }
  async getBlameForLineContents(uri, editorLine, contents, options = {}) {
    if (!options.skipCache && this.useCaching) {
      const blame = await this.getBlameForFileContents(uri, contents);
      if (blame == null)
        return void 0;
      let blameLine = blame.lines[editorLine];
      if (blameLine == null) {
        if (blame.lines.length !== editorLine)
          return void 0;
        blameLine = blame.lines[editorLine - 1];
      }
      const commit = blame.commits.get(blameLine.sha);
      if (commit == null)
        return void 0;
      const author = blame.authors.get(commit.author);
      return {
        author: { ...author, lineCount: commit.lines.length },
        commit,
        line: blameLine
      };
    }
    const lineToBlame = editorLine + 1;
    const fileName = uri.fsPath;
    try {
      const data = await _git__WEBPACK_IMPORTED_MODULE_13__.Git.blame__contents(uri.repoPath, fileName, contents, {
        args: _container__WEBPACK_IMPORTED_MODULE_6__.Container.config.advanced.blame.customArguments,
        ignoreWhitespace: _container__WEBPACK_IMPORTED_MODULE_6__.Container.config.blame.ignoreWhitespace,
        startLine: lineToBlame,
        endLine: lineToBlame
      });
      const blame = _git__WEBPACK_IMPORTED_MODULE_13__.GitBlameParser.parse(data, uri.repoPath, fileName, await this.getCurrentUser(uri.repoPath));
      if (blame == null)
        return void 0;
      return {
        author: _system__WEBPACK_IMPORTED_MODULE_10__.Iterables.first(blame.authors.values()),
        commit: _system__WEBPACK_IMPORTED_MODULE_10__.Iterables.first(blame.commits.values()),
        line: blame.lines[editorLine]
      };
    } catch {
      return void 0;
    }
  }
  async getBlameForRange(uri, range) {
    const blame = await this.getBlameForFile(uri);
    if (blame == null)
      return void 0;
    return this.getBlameForRangeSync(blame, uri, range);
  }
  async getBlameForRangeContents(uri, range, contents) {
    const blame = await this.getBlameForFileContents(uri, contents);
    if (blame == null)
      return void 0;
    return this.getBlameForRangeSync(blame, uri, range);
  }
  getBlameForRangeSync(blame, uri, range) {
    if (blame.lines.length === 0)
      return { allLines: blame.lines, ...blame };
    if (range.start.line === 0 && range.end.line === blame.lines.length - 1) {
      return { allLines: blame.lines, ...blame };
    }
    const lines = blame.lines.slice(range.start.line, range.end.line + 1);
    const shas = new Set(lines.map((l) => l.sha));
    const startLine = range.start.line + 1;
    const endLine = range.end.line + 1;
    const authors = new Map();
    const commits = new Map();
    for (const c of blame.commits.values()) {
      if (!shas.has(c.sha))
        continue;
      const commit = c.with({
        lines: c.lines.filter((l) => l.line >= startLine && l.line <= endLine)
      });
      commits.set(c.sha, commit);
      let author = authors.get(commit.author);
      if (author == null) {
        author = {
          name: commit.author,
          lineCount: 0
        };
        authors.set(author.name, author);
      }
      author.lineCount += commit.lines.length;
    }
    const sortedAuthors = new Map([...authors.entries()].sort((a, b) => b[1].lineCount - a[1].lineCount));
    return {
      repoPath: uri.repoPath,
      authors: sortedAuthors,
      commits,
      lines,
      allLines: blame.lines
    };
  }
  async getBranch(repoPath) {
    var _a;
    if (repoPath == null)
      return void 0;
    let [branch] = await this.getBranches(repoPath, { filter: (b) => b.current });
    if (branch != null)
      return branch;
    const data = await _git__WEBPACK_IMPORTED_MODULE_13__.Git.rev_parse__currentBranch(repoPath, _container__WEBPACK_IMPORTED_MODULE_6__.Container.config.advanced.commitOrdering);
    if (data == null)
      return void 0;
    const [name, upstream] = data[0].split("\n");
    if (_git__WEBPACK_IMPORTED_MODULE_13__.GitBranch.isDetached(name)) {
      const [rebaseStatus, committerDate] = await Promise.all([
        this.getRebaseStatus(repoPath),
        _git__WEBPACK_IMPORTED_MODULE_13__.Git.log__recent_committerdate(repoPath, _container__WEBPACK_IMPORTED_MODULE_6__.Container.config.advanced.commitOrdering)
      ]);
      branch = new _git__WEBPACK_IMPORTED_MODULE_13__.GitBranch(repoPath, (_a = rebaseStatus == null ? void 0 : rebaseStatus.incoming.name) != null ? _a : name, false, true, committerDate != null ? new Date(Number(committerDate) * 1e3) : void 0, data[1], upstream ? { name: upstream, missing: false } : void 0, void 0, void 0, void 0, rebaseStatus != null);
    }
    return branch;
  }
  async getBranchAheadRange(branch) {
    var _a, _b, _c;
    if (branch.state.ahead > 0) {
      return _git__WEBPACK_IMPORTED_MODULE_13__.GitRevision.createRange((_a = branch.upstream) == null ? void 0 : _a.name, branch.ref);
    }
    if (branch.upstream == null) {
      const branches = await this.getBranches(branch.repoPath, {
        filter: (b) => weightedDefaultBranches.has(b.name)
      });
      if (branches.length > 0) {
        let weightedBranch;
        for (const branch2 of branches) {
          const weight = weightedDefaultBranches.get(branch2.name);
          if (weightedBranch == null || weightedBranch.weight < weight) {
            weightedBranch = { weight, branch: branch2 };
          }
          if (weightedBranch.weight === maxDefaultBranchWeight)
            break;
        }
        const possibleBranch = (_c = (_b = weightedBranch.branch.upstream) == null ? void 0 : _b.name) != null ? _c : weightedBranch.branch.ref;
        if (possibleBranch !== branch.ref) {
          return _git__WEBPACK_IMPORTED_MODULE_13__.GitRevision.createRange(possibleBranch, branch.ref);
        }
      }
    }
    return void 0;
  }
  async getBranches(repoPath, options = {}) {
    var _a;
    if (repoPath == null)
      return [];
    let branchesPromise = this.useCaching ? this._branchesCache.get(repoPath) : void 0;
    if (branchesPromise == null) {
      async function load() {
        var _a2;
        try {
          const data = await _git__WEBPACK_IMPORTED_MODULE_13__.Git.for_each_ref__branch(repoPath, { all: true });
          if (data == null || data.length === 0) {
            let current;
            const data2 = await _git__WEBPACK_IMPORTED_MODULE_13__.Git.rev_parse__currentBranch(repoPath, _container__WEBPACK_IMPORTED_MODULE_6__.Container.config.advanced.commitOrdering);
            if (data2 != null) {
              const [name, upstream] = data2[0].split("\n");
              const [rebaseStatus, committerDate] = await Promise.all([
                _git__WEBPACK_IMPORTED_MODULE_13__.GitBranch.isDetached(name) ? this.getRebaseStatus(repoPath) : void 0,
                _git__WEBPACK_IMPORTED_MODULE_13__.Git.log__recent_committerdate(repoPath, _container__WEBPACK_IMPORTED_MODULE_6__.Container.config.advanced.commitOrdering)
              ]);
              current = new _git__WEBPACK_IMPORTED_MODULE_13__.GitBranch(repoPath, (_a2 = rebaseStatus == null ? void 0 : rebaseStatus.incoming.name) != null ? _a2 : name, false, true, committerDate != null ? new Date(Number(committerDate) * 1e3) : void 0, data2[1], { name: upstream, missing: false }, void 0, void 0, void 0, rebaseStatus != null);
            }
            return current != null ? [current] : [];
          }
          return _git__WEBPACK_IMPORTED_MODULE_13__.GitBranchParser.parse(data, repoPath);
        } catch (ex) {
          this._branchesCache.delete(repoPath);
          return [];
        }
      }
      branchesPromise = load.call(this);
      if (this.useCaching) {
        this._branchesCache.set(repoPath, branchesPromise);
        if (!((_a = await this.getRepository(repoPath)) == null ? void 0 : _a.supportsChangeEvents)) {
          this._branchesCache.delete(repoPath);
        }
      }
    }
    let branches = await branchesPromise;
    if (options.filter != null) {
      branches = branches.filter(options.filter);
    }
    if (options.sort) {
      _git__WEBPACK_IMPORTED_MODULE_13__.GitBranch.sort(branches, typeof options.sort === "boolean" ? void 0 : options.sort);
    }
    return branches;
  }
  async getBranchesAndOrTags(repoPath, {
    filter,
    include,
    sort,
    ...options
  } = {}) {
    const [branches, tags] = await Promise.all([
      include == null || include === "all" || include === "branches" ? this.getBranches(repoPath, {
        ...options,
        filter: filter == null ? void 0 : filter.branches,
        sort: typeof sort === "boolean" ? void 0 : sort == null ? void 0 : sort.branches
      }) : void 0,
      include == null || include === "all" || include === "tags" ? this.getTags(repoPath, {
        ...options,
        filter: filter == null ? void 0 : filter.tags,
        sort: typeof sort === "boolean" ? void 0 : sort == null ? void 0 : sort.tags
      }) : void 0
    ]);
    if (branches != null && tags != null) {
      return [...branches.filter((b) => !b.remote), ...tags, ...branches.filter((b) => b.remote)];
    }
    return branches != null ? branches : tags;
  }
  async getBranchesAndTagsTipsFn(repoPath, currentName) {
    const [branches, tags] = await Promise.all([this.getBranches(repoPath), this.getTags(repoPath)]);
    const branchesAndTagsBySha = _system__WEBPACK_IMPORTED_MODULE_10__.Arrays.groupByFilterMap(branches.concat(tags), (bt) => bt.sha, (bt) => {
      if (currentName) {
        if (bt.name === currentName)
          return void 0;
        if (bt.refType === "branch" && bt.getNameWithoutRemote() === currentName) {
          return { name: bt.name, compactName: bt.getRemoteName(), type: bt.refType };
        }
      }
      return { name: bt.name, compactName: void 0, type: bt.refType };
    });
    return (sha, options) => {
      var _a;
      const branchesAndTags = branchesAndTagsBySha.get(sha);
      if (branchesAndTags == null || branchesAndTags.length === 0)
        return void 0;
      if (!(options == null ? void 0 : options.compact)) {
        return branchesAndTags.map((bt) => `${(options == null ? void 0 : options.icons) ? `${bt.type === "tag" ? "$(tag)" : "$(git-branch)"} ` : ""}${bt.name}`).join(", ");
      }
      if (branchesAndTags.length > 1) {
        const [bt] = branchesAndTags;
        return `${(options == null ? void 0 : options.icons) ? `${bt.type === "tag" ? "$(tag)" : "$(git-branch)"} ` : ""}${(_a = bt.compactName) != null ? _a : bt.name}, ${_constants__WEBPACK_IMPORTED_MODULE_5__.GlyphChars.Ellipsis}`;
      }
      return branchesAndTags.map((bt) => {
        var _a2;
        return `${(options == null ? void 0 : options.icons) ? `${bt.type === "tag" ? "$(tag)" : "$(git-branch)"} ` : ""}${(_a2 = bt.compactName) != null ? _a2 : bt.name}`;
      }).join(", ");
    };
  }
  async getChangedFilesCount(repoPath, ref) {
    const data = await _git__WEBPACK_IMPORTED_MODULE_13__.Git.diff__shortstat(repoPath, ref);
    if (!data)
      return void 0;
    return _git__WEBPACK_IMPORTED_MODULE_13__.GitDiffParser.parseShortStat(data);
  }
  async getCommit(repoPath, ref) {
    var _a;
    const log2 = await this.getLog(repoPath, { limit: 2, ref });
    if (log2 == null)
      return void 0;
    return (_a = log2.commits.get(ref)) != null ? _a : _system__WEBPACK_IMPORTED_MODULE_10__.Iterables.first(log2.commits.values());
  }
  async getCommitBranches(repoPath, ref, options) {
    const data = await _git__WEBPACK_IMPORTED_MODULE_13__.Git.branch__containsOrPointsAt(repoPath, ref, options);
    if (!data)
      return [];
    return data.split("\n").map((b) => b.trim()).filter((i) => Boolean(i));
  }
  getAheadBehindCommitCount(repoPath, refs) {
    return _git__WEBPACK_IMPORTED_MODULE_13__.Git.rev_list__left_right(repoPath, refs);
  }
  getCommitCount(repoPath, ref) {
    return _git__WEBPACK_IMPORTED_MODULE_13__.Git.rev_list__count(repoPath, ref);
  }
  async getCommitForFile(repoPath, fileName, options = {}) {
    const log2 = await this.getLogForFile(repoPath, fileName, {
      limit: 2,
      ref: options.ref,
      range: options.range,
      reverse: options.reverse
    });
    if (log2 == null)
      return void 0;
    const commit = options.ref ? log2.commits.get(options.ref) : void 0;
    if (commit == null && !options.firstIfNotFound && options.ref) {
      if (_git__WEBPACK_IMPORTED_MODULE_13__.GitRevision.isSha(options.ref) || _git__WEBPACK_IMPORTED_MODULE_13__.GitRevision.isUncommitted(options.ref))
        return void 0;
    }
    return commit != null ? commit : _system__WEBPACK_IMPORTED_MODULE_10__.Iterables.first(log2.commits.values());
  }
  async getOldestUnpushedRefForFile(repoPath, fileName) {
    const data = await _git__WEBPACK_IMPORTED_MODULE_13__.Git.log__file(repoPath, fileName, "@{push}..", {
      format: "refs",
      ordering: _container__WEBPACK_IMPORTED_MODULE_6__.Container.config.advanced.commitOrdering,
      renames: true
    });
    if (data == null || data.length === 0)
      return void 0;
    return _git__WEBPACK_IMPORTED_MODULE_13__.GitLogParser.parseLastRefOnly(data);
  }
  getConfig(key, repoPath) {
    return _git__WEBPACK_IMPORTED_MODULE_13__.Git.config__get(key, repoPath);
  }
  async getContributors(repoPath, options) {
    var _a;
    if (repoPath == null)
      return [];
    const key = (options == null ? void 0 : options.stats) ? `stats|${repoPath}` : repoPath;
    let contributors = this.useCaching ? this._contributorsCache.get(key) : void 0;
    if (contributors == null) {
      async function load() {
        try {
          const currentUser = await this.getCurrentUser(repoPath);
          const data = await _git__WEBPACK_IMPORTED_MODULE_13__.Git.log(repoPath, options == null ? void 0 : options.ref, {
            all: options == null ? void 0 : options.all,
            format: (options == null ? void 0 : options.stats) ? "shortlog+stats" : "shortlog"
          });
          const shortlog = _parsers_parsers__WEBPACK_IMPORTED_MODULE_15__.GitShortLogParser.parseFromLog(data, repoPath, currentUser);
          return shortlog != null ? shortlog.contributors : [];
        } catch (ex) {
          this._contributorsCache.delete(key);
          return [];
        }
      }
      contributors = load.call(this);
      if (this.useCaching) {
        this._contributorsCache.set(key, contributors);
        if (!((_a = await this.getRepository(repoPath)) == null ? void 0 : _a.supportsChangeEvents)) {
          this._contributorsCache.delete(key);
        }
      }
    }
    return contributors;
  }
  async getCurrentUser(repoPath) {
    var _a;
    let user = this._userMapCache.get(repoPath);
    if (user != null)
      return user;
    if (user === null)
      return void 0;
    user = { name: void 0, email: void 0 };
    const data = await _git__WEBPACK_IMPORTED_MODULE_13__.Git.config__get_regex("^user\\.", repoPath, { local: true });
    if (data) {
      let key;
      let value;
      let match;
      do {
        match = userConfigRegex.exec(data);
        if (match == null)
          break;
        [, key, value] = match;
        user[key] = ` ${value}`.substr(1);
      } while (true);
    } else {
      user.name = process.env.GIT_AUTHOR_NAME || process.env.GIT_COMMITTER_NAME || ((_a = Object(function webpackMissingModule() { var e = new Error("Cannot find module 'os'"); e.code = 'MODULE_NOT_FOUND'; throw e; }())()) == null ? void 0 : _a.username) || void 0;
      if (!user.name) {
        this._userMapCache.set(repoPath, null);
        return void 0;
      }
      user.email = process.env.GIT_AUTHOR_EMAIL || process.env.GIT_COMMITTER_EMAIL || process.env.EMAIL || `${user.name}@${Object(function webpackMissingModule() { var e = new Error("Cannot find module 'os'"); e.code = 'MODULE_NOT_FOUND'; throw e; }())()}`;
    }
    const author = `${user.name} <${user.email}>`;
    const mappedAuthor = await _git__WEBPACK_IMPORTED_MODULE_13__.Git.check_mailmap(repoPath, author);
    if (mappedAuthor != null && mappedAuthor.length !== 0 && author !== mappedAuthor) {
      const match = mappedAuthorRegex.exec(mappedAuthor);
      if (match != null) {
        [, user.name, user.email] = match;
      }
    }
    this._userMapCache.set(repoPath, user);
    return user;
  }
  async getDefaultBranchName(repoPath, remote) {
    if (repoPath == null)
      return void 0;
    if (!remote) {
      try {
        const data = await _git__WEBPACK_IMPORTED_MODULE_13__.Git.symbolic_ref(repoPath, "HEAD");
        if (data != null)
          return data.trim();
      } catch {
      }
    }
    remote = remote != null ? remote : "origin";
    try {
      const data = await _git__WEBPACK_IMPORTED_MODULE_13__.Git.ls_remote__HEAD(repoPath, remote);
      if (data == null)
        return void 0;
      const match = /ref:\s(\S+)\s+HEAD/m.exec(data);
      if (match == null)
        return void 0;
      const [, branch] = match;
      return branch.substr("refs/heads/".length);
    } catch {
      return void 0;
    }
  }
  async getDiffForFile(uri, ref1, ref2, originalFileName) {
    const cc = _logger__WEBPACK_IMPORTED_MODULE_8__.Logger.getCorrelationContext();
    let key = "diff";
    if (ref1 != null) {
      key += `:${ref1}`;
    }
    if (ref2 != null) {
      key += `:${ref2}`;
    }
    const doc = await _container__WEBPACK_IMPORTED_MODULE_6__.Container.tracker.getOrAdd(uri);
    if (this.useCaching) {
      if (doc.state != null) {
        const cachedDiff = doc.state.get(key);
        if (cachedDiff != null) {
          _logger__WEBPACK_IMPORTED_MODULE_8__.Logger.debug(cc, `Cache hit: '${key}'`);
          return cachedDiff.item;
        }
      }
      _logger__WEBPACK_IMPORTED_MODULE_8__.Logger.debug(cc, `Cache miss: '${key}'`);
      if (doc.state == null) {
        doc.state = new _trackers_gitDocumentTracker__WEBPACK_IMPORTED_MODULE_11__.GitDocumentState(doc.key);
      }
    }
    const promise = this.getDiffForFileCore(uri.repoPath, uri.fsPath, ref1, ref2, originalFileName, { encoding: _GitService.getEncoding(uri) }, doc, key, cc);
    if (doc.state != null) {
      _logger__WEBPACK_IMPORTED_MODULE_8__.Logger.debug(cc, `Cache add: '${key}'`);
      const value = {
        item: promise
      };
      doc.state.set(key, value);
    }
    return promise;
  }
  async getDiffForFileCore(repoPath, fileName, ref1, ref2, originalFileName, options, document, key, cc) {
    var _a;
    const [file, root] = _system__WEBPACK_IMPORTED_MODULE_10__.Paths.splitPath(fileName, repoPath, false);
    try {
      const data = await _git__WEBPACK_IMPORTED_MODULE_13__.Git.diff(root, file, ref1, ref2, {
        ...options,
        filters: ["M"],
        linesOfContext: 0,
        renames: true,
        similarityThreshold: _container__WEBPACK_IMPORTED_MODULE_6__.Container.config.advanced.similarityThreshold
      });
      const diff = _git__WEBPACK_IMPORTED_MODULE_13__.GitDiffParser.parse(data);
      return diff;
    } catch (ex) {
      if (document.state != null) {
        const msg = (_a = ex == null ? void 0 : ex.toString()) != null ? _a : "";
        _logger__WEBPACK_IMPORTED_MODULE_8__.Logger.debug(cc, `Cache replace (with empty promise): '${key}'`);
        const value = {
          item: emptyPromise,
          errorMessage: msg
        };
        document.state.set(key, value);
        return emptyPromise;
      }
      return void 0;
    }
  }
  async getDiffForFileContents(uri, ref, contents, originalFileName) {
    const cc = _logger__WEBPACK_IMPORTED_MODULE_8__.Logger.getCorrelationContext();
    const key = `diff:${_system__WEBPACK_IMPORTED_MODULE_10__.Strings.sha1(contents)}`;
    const doc = await _container__WEBPACK_IMPORTED_MODULE_6__.Container.tracker.getOrAdd(uri);
    if (this.useCaching) {
      if (doc.state != null) {
        const cachedDiff = doc.state.get(key);
        if (cachedDiff != null) {
          _logger__WEBPACK_IMPORTED_MODULE_8__.Logger.debug(cc, `Cache hit: ${key}`);
          return cachedDiff.item;
        }
      }
      _logger__WEBPACK_IMPORTED_MODULE_8__.Logger.debug(cc, `Cache miss: ${key}`);
      if (doc.state == null) {
        doc.state = new _trackers_gitDocumentTracker__WEBPACK_IMPORTED_MODULE_11__.GitDocumentState(doc.key);
      }
    }
    const promise = this.getDiffForFileContentsCore(uri.repoPath, uri.fsPath, ref, contents, originalFileName, { encoding: _GitService.getEncoding(uri) }, doc, key, cc);
    if (doc.state != null) {
      _logger__WEBPACK_IMPORTED_MODULE_8__.Logger.debug(cc, `Cache add: '${key}'`);
      const value = {
        item: promise
      };
      doc.state.set(key, value);
    }
    return promise;
  }
  async getDiffForFileContentsCore(repoPath, fileName, ref, contents, originalFileName, options, document, key, cc) {
    var _a;
    const [file, root] = _system__WEBPACK_IMPORTED_MODULE_10__.Paths.splitPath(fileName, repoPath, false);
    try {
      const data = await _git__WEBPACK_IMPORTED_MODULE_13__.Git.diff__contents(root, file, ref, contents, {
        ...options,
        filters: ["M"],
        similarityThreshold: _container__WEBPACK_IMPORTED_MODULE_6__.Container.config.advanced.similarityThreshold
      });
      const diff = _git__WEBPACK_IMPORTED_MODULE_13__.GitDiffParser.parse(data);
      return diff;
    } catch (ex) {
      if (document.state != null) {
        const msg = (_a = ex == null ? void 0 : ex.toString()) != null ? _a : "";
        _logger__WEBPACK_IMPORTED_MODULE_8__.Logger.debug(cc, `Cache replace (with empty promise): '${key}'`);
        const value = {
          item: emptyPromise,
          errorMessage: msg
        };
        document.state.set(key, value);
        return emptyPromise;
      }
      return void 0;
    }
  }
  async getDiffForLine(uri, editorLine, ref1, ref2, originalFileName) {
    try {
      const diff = await this.getDiffForFile(uri, ref1, ref2, originalFileName);
      if (diff == null)
        return void 0;
      const line = editorLine + 1;
      const hunk = diff.hunks.find((c) => c.current.position.start <= line && c.current.position.end >= line);
      if (hunk == null)
        return void 0;
      return hunk.lines[line - hunk.current.position.start];
    } catch (ex) {
      return void 0;
    }
  }
  async getDiffStatus(repoPath, ref1, ref2, options = {}) {
    try {
      const data = await _git__WEBPACK_IMPORTED_MODULE_13__.Git.diff__name_status(repoPath, ref1, ref2, {
        similarityThreshold: _container__WEBPACK_IMPORTED_MODULE_6__.Container.config.advanced.similarityThreshold,
        ...options
      });
      const files = _git__WEBPACK_IMPORTED_MODULE_13__.GitDiffParser.parseNameStatus(data, repoPath);
      return files == null || files.length === 0 ? void 0 : files;
    } catch (ex) {
      return void 0;
    }
  }
  async getFileStatusForCommit(repoPath, fileName, ref) {
    if (ref === _git__WEBPACK_IMPORTED_MODULE_13__.GitRevision.deletedOrMissing || _git__WEBPACK_IMPORTED_MODULE_13__.GitRevision.isUncommitted(ref))
      return void 0;
    const data = await _git__WEBPACK_IMPORTED_MODULE_13__.Git.show__name_status(repoPath, fileName, ref);
    if (!data)
      return void 0;
    const files = _git__WEBPACK_IMPORTED_MODULE_13__.GitDiffParser.parseNameStatus(data, repoPath);
    if (files == null || files.length === 0)
      return void 0;
    return files[0];
  }
  async getLog(repoPath, {
    ref,
    ...options
  } = {}) {
    var _a, _b, _c;
    const limit = (_b = (_a = options.limit) != null ? _a : _container__WEBPACK_IMPORTED_MODULE_6__.Container.config.advanced.maxListItems) != null ? _b : 0;
    try {
      const data = await _git__WEBPACK_IMPORTED_MODULE_13__.Git.log(repoPath, ref, {
        ...options,
        limit,
        merges: options.merges == null ? true : options.merges,
        ordering: (_c = options.ordering) != null ? _c : _container__WEBPACK_IMPORTED_MODULE_6__.Container.config.advanced.commitOrdering,
        similarityThreshold: _container__WEBPACK_IMPORTED_MODULE_6__.Container.config.advanced.similarityThreshold
      });
      const log2 = _git__WEBPACK_IMPORTED_MODULE_13__.GitLogParser.parse(data, _git__WEBPACK_IMPORTED_MODULE_13__.GitCommitType.Log, repoPath, void 0, ref, await this.getCurrentUser(repoPath), limit, options.reverse, void 0);
      if (log2 != null) {
        const opts = { ...options, ref };
        log2.query = (limit2) => this.getLog(repoPath, { ...opts, limit: limit2 });
        if (log2.hasMore) {
          log2.more = this.getLogMoreFn(log2, opts);
        }
      }
      return log2;
    } catch (ex) {
      return void 0;
    }
  }
  async getLogRefsOnly(repoPath, {
    ref,
    ...options
  } = {}) {
    var _a, _b, _c;
    const limit = (_b = (_a = options.limit) != null ? _a : _container__WEBPACK_IMPORTED_MODULE_6__.Container.config.advanced.maxListItems) != null ? _b : 0;
    try {
      const data = await _git__WEBPACK_IMPORTED_MODULE_13__.Git.log(repoPath, ref, {
        authors: options.authors,
        format: "refs",
        limit,
        merges: options.merges == null ? true : options.merges,
        reverse: options.reverse,
        similarityThreshold: _container__WEBPACK_IMPORTED_MODULE_6__.Container.config.advanced.similarityThreshold,
        since: options.since,
        ordering: (_c = options.ordering) != null ? _c : _container__WEBPACK_IMPORTED_MODULE_6__.Container.config.advanced.commitOrdering
      });
      const commits = _git__WEBPACK_IMPORTED_MODULE_13__.GitLogParser.parseRefsOnly(data);
      return new Set(commits);
    } catch (ex) {
      return void 0;
    }
  }
  getLogMoreFn(log2, options) {
    return async (limit) => {
      var _a, _b, _c, _d;
      const moreUntil = limit != null && typeof limit === "object" ? limit.until : void 0;
      let moreLimit = typeof limit === "number" ? limit : void 0;
      if (moreUntil && _system__WEBPACK_IMPORTED_MODULE_10__.Iterables.some(log2.commits.values(), (c) => c.ref === moreUntil)) {
        return log2;
      }
      moreLimit = (_a = moreLimit != null ? moreLimit : _container__WEBPACK_IMPORTED_MODULE_6__.Container.config.advanced.maxSearchItems) != null ? _a : 0;
      if (_git__WEBPACK_IMPORTED_MODULE_13__.GitRevision.isRange(log2.sha)) {
        const moreLog2 = await this.getLog(log2.repoPath, {
          ...options,
          limit: moreLimit === 0 ? 0 : ((_b = options.limit) != null ? _b : 0) + moreLimit
        });
        if (moreLog2 == null)
          return { ...log2, hasMore: false };
        return moreLog2;
      }
      const ref = (_c = _system__WEBPACK_IMPORTED_MODULE_10__.Iterables.last(log2.commits.values())) == null ? void 0 : _c.ref;
      const moreLog = await this.getLog(log2.repoPath, {
        ...options,
        limit: moreUntil == null ? moreLimit : 0,
        ref: moreUntil == null ? `${ref}^` : `${moreUntil}^..${ref}^`
      });
      if (moreLog == null)
        return { ...log2, hasMore: false };
      const authors = new Map([...log2.authors]);
      for (const [key, addAuthor] of moreLog.authors) {
        const author = authors.get(key);
        if (author == null) {
          authors.set(key, addAuthor);
        } else {
          author.lineCount += addAuthor.lineCount;
        }
      }
      const commits = new Map([...log2.commits, ...moreLog.commits]);
      const mergedLog = {
        repoPath: log2.repoPath,
        authors,
        commits,
        sha: log2.sha,
        range: void 0,
        count: commits.size,
        limit: moreUntil == null ? ((_d = log2.limit) != null ? _d : 0) + moreLimit : void 0,
        hasMore: moreUntil == null ? moreLog.hasMore : true,
        query: (limit2) => this.getLog(log2.repoPath, { ...options, limit: limit2 })
      };
      mergedLog.more = this.getLogMoreFn(mergedLog, options);
      return mergedLog;
    };
  }
  async getLogForSearch(repoPath, search, options = {}) {
    var _a, _b;
    search = { matchAll: false, matchCase: false, matchRegex: true, ...search };
    try {
      const limit = (_b = (_a = options.limit) != null ? _a : _container__WEBPACK_IMPORTED_MODULE_6__.Container.config.advanced.maxSearchItems) != null ? _b : 0;
      const similarityThreshold = _container__WEBPACK_IMPORTED_MODULE_6__.Container.config.advanced.similarityThreshold;
      const operations = _git__WEBPACK_IMPORTED_MODULE_13__.SearchPattern.parseSearchOperations(search.pattern);
      const searchArgs = new Set();
      const files = [];
      let useShow = false;
      let op;
      let values = operations.get("commit:");
      if (values != null) {
        useShow = true;
        searchArgs.add("-m");
        searchArgs.add(`-M${similarityThreshold == null ? "" : `${similarityThreshold}%`}`);
        for (const value of values) {
          searchArgs.add(value.replace(doubleQuoteRegex, ""));
        }
      } else {
        searchArgs.add(`-M${similarityThreshold == null ? "" : `${similarityThreshold}%`}`);
        searchArgs.add("--all");
        searchArgs.add("--full-history");
        searchArgs.add(search.matchRegex ? "--extended-regexp" : "--fixed-strings");
        if (search.matchRegex && !search.matchCase) {
          searchArgs.add("--regexp-ignore-case");
        }
        for ([op, values] of operations.entries()) {
          switch (op) {
            case "message:":
              searchArgs.add("-m");
              if (search.matchAll) {
                searchArgs.add("--all-match");
              }
              for (const value of values) {
                searchArgs.add(`--grep=${value.replace(doubleQuoteRegex, "\\b")}`);
              }
              break;
            case "author:":
              searchArgs.add("-m");
              for (const value of values) {
                searchArgs.add(`--author=${value.replace(doubleQuoteRegex, "\\b")}`);
              }
              break;
            case "change:":
              for (const value of values) {
                searchArgs.add(`-G${value}`);
              }
              break;
            case "file:":
              for (const value of values) {
                files.push(value.replace(doubleQuoteRegex, ""));
              }
              break;
          }
        }
      }
      const args = [...searchArgs.values(), "--"];
      if (files.length !== 0) {
        args.push(...files);
      }
      const data = await _git__WEBPACK_IMPORTED_MODULE_13__.Git.log__search(repoPath, args, {
        ordering: _container__WEBPACK_IMPORTED_MODULE_6__.Container.config.advanced.commitOrdering,
        ...options,
        limit,
        useShow
      });
      const log2 = _git__WEBPACK_IMPORTED_MODULE_13__.GitLogParser.parse(data, _git__WEBPACK_IMPORTED_MODULE_13__.GitCommitType.Log, repoPath, void 0, void 0, await this.getCurrentUser(repoPath), limit, false, void 0);
      if (log2 != null) {
        log2.query = (limit2) => this.getLogForSearch(repoPath, search, { ...options, limit: limit2 });
        if (log2.hasMore) {
          log2.more = this.getLogForSearchMoreFn(log2, search, options);
        }
      }
      return log2;
    } catch (ex) {
      return void 0;
    }
  }
  getLogForSearchMoreFn(log2, search, options) {
    return async (limit) => {
      var _a, _b;
      limit = (_a = limit != null ? limit : _container__WEBPACK_IMPORTED_MODULE_6__.Container.config.advanced.maxSearchItems) != null ? _a : 0;
      const moreLog = await this.getLogForSearch(log2.repoPath, search, {
        ...options,
        limit,
        skip: log2.count
      });
      if (moreLog == null) {
        return { ...log2, hasMore: false };
      }
      const authors = new Map([...log2.authors]);
      for (const [key, addAuthor] of moreLog.authors) {
        const author = authors.get(key);
        if (author == null) {
          authors.set(key, addAuthor);
        } else {
          author.lineCount += addAuthor.lineCount;
        }
      }
      const commits = new Map([...log2.commits, ...moreLog.commits]);
      const mergedLog = {
        repoPath: log2.repoPath,
        authors,
        commits,
        sha: log2.sha,
        range: log2.range,
        count: commits.size,
        limit: ((_b = log2.limit) != null ? _b : 0) + limit,
        hasMore: moreLog.hasMore,
        query: (limit2) => this.getLogForSearch(log2.repoPath, search, { ...options, limit: limit2 })
      };
      mergedLog.more = this.getLogForSearchMoreFn(mergedLog, search, options);
      return mergedLog;
    };
  }
  async getLogForFile(repoPath, fileName, options = {}) {
    if (repoPath != null && repoPath === _system__WEBPACK_IMPORTED_MODULE_10__.Strings.normalizePath(fileName)) {
      throw new Error(`File name cannot match the repository path; fileName=${fileName}`);
    }
    const cc = _logger__WEBPACK_IMPORTED_MODULE_8__.Logger.getCorrelationContext();
    options = { reverse: false, ...options };
    if (options.renames == null) {
      options.renames = _container__WEBPACK_IMPORTED_MODULE_6__.Container.config.advanced.fileHistoryFollowsRenames;
    }
    let key = "log";
    if (options.ref != null) {
      key += `:${options.ref}`;
    }
    if (options.all == null) {
      options.all = _container__WEBPACK_IMPORTED_MODULE_6__.Container.config.advanced.fileHistoryShowAllBranches;
    }
    if (options.all) {
      key += ":all";
    }
    options.limit = options.limit == null ? _container__WEBPACK_IMPORTED_MODULE_6__.Container.config.advanced.maxListItems || 0 : options.limit;
    if (options.limit) {
      key += `:n${options.limit}`;
    }
    if (options.renames) {
      key += ":follow";
    }
    if (options.reverse) {
      key += ":reverse";
    }
    if (options.since) {
      key += `:since=${options.since}`;
    }
    if (options.skip) {
      key += `:skip${options.skip}`;
    }
    const doc = await _container__WEBPACK_IMPORTED_MODULE_6__.Container.tracker.getOrAdd(_gitUri__WEBPACK_IMPORTED_MODULE_14__.GitUri.fromFile(fileName, repoPath, options.ref));
    if (this.useCaching && options.range == null) {
      if (doc.state != null) {
        const cachedLog = doc.state.get(key);
        if (cachedLog != null) {
          _logger__WEBPACK_IMPORTED_MODULE_8__.Logger.debug(cc, `Cache hit: '${key}'`);
          return cachedLog.item;
        }
        if (options.ref != null || options.limit != null) {
          const cachedLog2 = doc.state.get(`log${options.renames ? ":follow" : emptyStr}${options.reverse ? ":reverse" : emptyStr}`);
          if (cachedLog2 != null) {
            if (options.ref == null) {
              _logger__WEBPACK_IMPORTED_MODULE_8__.Logger.debug(cc, `Cache hit: ~'${key}'`);
              return cachedLog2.item;
            }
            _logger__WEBPACK_IMPORTED_MODULE_8__.Logger.debug(cc, `Cache ?: '${key}'`);
            let log2 = await cachedLog2.item;
            if (log2 != null && !log2.hasMore && log2.commits.has(options.ref)) {
              _logger__WEBPACK_IMPORTED_MODULE_8__.Logger.debug(cc, `Cache hit: '${key}'`);
              let skip = true;
              let i = 0;
              const authors = new Map();
              const commits = new Map(_system__WEBPACK_IMPORTED_MODULE_10__.Iterables.filterMap(log2.commits.entries(), ([ref, c]) => {
                if (skip) {
                  if (ref !== options.ref)
                    return void 0;
                  skip = false;
                }
                i++;
                if (options.limit != null && i > options.limit) {
                  return void 0;
                }
                authors.set(c.author, log2.authors.get(c.author));
                return [ref, c];
              }));
              const opts = { ...options };
              log2 = {
                ...log2,
                limit: options.limit,
                count: commits.size,
                commits,
                authors,
                query: (limit) => this.getLogForFile(repoPath, fileName, { ...opts, limit })
              };
              return log2;
            }
          }
        }
      }
      _logger__WEBPACK_IMPORTED_MODULE_8__.Logger.debug(cc, `Cache miss: '${key}'`);
      if (doc.state == null) {
        doc.state = new _trackers_gitDocumentTracker__WEBPACK_IMPORTED_MODULE_11__.GitDocumentState(doc.key);
      }
    }
    const promise = this.getLogForFileCore(repoPath, fileName, options, doc, key, cc);
    if (doc.state != null && options.range == null) {
      _logger__WEBPACK_IMPORTED_MODULE_8__.Logger.debug(cc, `Cache add: '${key}'`);
      const value = {
        item: promise
      };
      doc.state.set(key, value);
    }
    return promise;
  }
  async getLogForFileCore(repoPath, fileName, {
    ref,
    range,
    ...options
  }, document, key, cc) {
    var _a;
    if (!await this.isTracked(fileName, repoPath, { ref })) {
      _logger__WEBPACK_IMPORTED_MODULE_8__.Logger.log(cc, `Skipping log; '${fileName}' is not tracked`);
      return emptyPromise;
    }
    const [file, root] = _system__WEBPACK_IMPORTED_MODULE_10__.Paths.splitPath(fileName, repoPath, false);
    try {
      if (range != null && range.start.line > range.end.line) {
        range = new vscode__WEBPACK_IMPORTED_MODULE_2__.Range(range.end, range.start);
      }
      const data = await _git__WEBPACK_IMPORTED_MODULE_13__.Git.log__file(root, file, ref, {
        ordering: _container__WEBPACK_IMPORTED_MODULE_6__.Container.config.advanced.commitOrdering,
        ...options,
        firstParent: options.renames,
        startLine: range == null ? void 0 : range.start.line + 1,
        endLine: range == null ? void 0 : range.end.line + 1
      });
      const log2 = _git__WEBPACK_IMPORTED_MODULE_13__.GitLogParser.parse(data, (0,_git__WEBPACK_IMPORTED_MODULE_13__.isFolderGlob)(file) ? _git__WEBPACK_IMPORTED_MODULE_13__.GitCommitType.Log : _git__WEBPACK_IMPORTED_MODULE_13__.GitCommitType.LogFile, root, file, ref, await this.getCurrentUser(root), options.limit, options.reverse, range);
      if (log2 != null) {
        const opts = { ...options, ref, range };
        log2.query = (limit) => this.getLogForFile(repoPath, fileName, { ...opts, limit });
        if (log2.hasMore) {
          log2.more = this.getLogForFileMoreFn(log2, fileName, opts);
        }
      }
      return log2;
    } catch (ex) {
      if (document.state != null && range == null && !options.reverse) {
        const msg = (_a = ex == null ? void 0 : ex.toString()) != null ? _a : "";
        _logger__WEBPACK_IMPORTED_MODULE_8__.Logger.debug(cc, `Cache replace (with empty promise): '${key}'`);
        const value = {
          item: emptyPromise,
          errorMessage: msg
        };
        document.state.set(key, value);
        return emptyPromise;
      }
      return void 0;
    }
  }
  getLogForFileMoreFn(log2, fileName, options) {
    return async (limit) => {
      var _a, _b, _c;
      const moreUntil = limit != null && typeof limit === "object" ? limit.until : void 0;
      let moreLimit = typeof limit === "number" ? limit : void 0;
      if (moreUntil && _system__WEBPACK_IMPORTED_MODULE_10__.Iterables.some(log2.commits.values(), (c) => c.ref === moreUntil)) {
        return log2;
      }
      moreLimit = (_a = moreLimit != null ? moreLimit : _container__WEBPACK_IMPORTED_MODULE_6__.Container.config.advanced.maxSearchItems) != null ? _a : 0;
      const ref = (_b = _system__WEBPACK_IMPORTED_MODULE_10__.Iterables.last(log2.commits.values())) == null ? void 0 : _b.ref;
      const moreLog = await this.getLogForFile(log2.repoPath, fileName, {
        ...options,
        limit: moreUntil == null ? moreLimit : 0,
        ref: options.all ? void 0 : moreUntil == null ? `${ref}^` : `${moreUntil}^..${ref}^`,
        skip: options.all ? log2.count : void 0
      });
      if (moreLog == null) {
        return { ...log2, hasMore: false };
      }
      const authors = new Map([...log2.authors]);
      for (const [key, addAuthor] of moreLog.authors) {
        const author = authors.get(key);
        if (author == null) {
          authors.set(key, addAuthor);
        } else {
          author.lineCount += addAuthor.lineCount;
        }
      }
      const commits = new Map([...log2.commits, ...moreLog.commits]);
      const mergedLog = {
        repoPath: log2.repoPath,
        authors,
        commits,
        sha: log2.sha,
        range: log2.range,
        count: commits.size,
        limit: moreUntil == null ? ((_c = log2.limit) != null ? _c : 0) + moreLimit : void 0,
        hasMore: moreUntil == null ? moreLog.hasMore : true,
        query: (limit2) => this.getLogForFile(log2.repoPath, fileName, { ...options, limit: limit2 })
      };
      if (options.renames) {
        const renamed = _system__WEBPACK_IMPORTED_MODULE_10__.Iterables.find(moreLog.commits.values(), (c) => Boolean(c.originalFileName) && c.originalFileName !== fileName);
        if (renamed != null) {
          fileName = renamed.originalFileName;
        }
      }
      mergedLog.more = this.getLogForFileMoreFn(mergedLog, fileName, options);
      return mergedLog;
    };
  }
  async getMergeBase(repoPath, ref1, ref2, options = {}) {
    const cc = _logger__WEBPACK_IMPORTED_MODULE_8__.Logger.getCorrelationContext();
    try {
      const data = await _git__WEBPACK_IMPORTED_MODULE_13__.Git.merge_base(repoPath, ref1, ref2, options);
      if (data == null)
        return void 0;
      return data.split("\n")[0].trim() || void 0;
    } catch (ex) {
      _logger__WEBPACK_IMPORTED_MODULE_8__.Logger.error(ex, cc);
      return void 0;
    }
  }
  async getMergeStatus(repoPath) {
    var _a;
    let status = this.useCaching ? this._mergeStatusCache.get(repoPath) : void 0;
    if (status === void 0) {
      const merge = await _git__WEBPACK_IMPORTED_MODULE_13__.Git.rev_parse__verify(repoPath, "MERGE_HEAD");
      if (merge != null) {
        const [branch, mergeBase, possibleSourceBranches] = await Promise.all([
          this.getBranch(repoPath),
          this.getMergeBase(repoPath, "MERGE_HEAD", "HEAD"),
          this.getCommitBranches(repoPath, "MERGE_HEAD", { mode: "pointsAt" })
        ]);
        status = {
          type: "merge",
          repoPath,
          mergeBase,
          HEAD: _git__WEBPACK_IMPORTED_MODULE_13__.GitReference.create(merge, repoPath, { refType: "revision" }),
          current: _git__WEBPACK_IMPORTED_MODULE_13__.GitReference.fromBranch(branch),
          incoming: (possibleSourceBranches == null ? void 0 : possibleSourceBranches.length) === 1 ? _git__WEBPACK_IMPORTED_MODULE_13__.GitReference.create(possibleSourceBranches[0], repoPath, {
            refType: "branch",
            name: possibleSourceBranches[0],
            remote: false
          }) : void 0
        };
      }
      if (this.useCaching) {
        this._mergeStatusCache.set(repoPath, status != null ? status : null);
        if (!((_a = await this.getRepository(repoPath)) == null ? void 0 : _a.supportsChangeEvents)) {
          this._mergeStatusCache.delete(repoPath);
        }
      }
    }
    return status != null ? status : void 0;
  }
  async getRebaseStatus(repoPath) {
    var _a;
    let status = this.useCaching ? this._rebaseStatusCache.get(repoPath) : void 0;
    if (status === void 0) {
      const rebase = await _git__WEBPACK_IMPORTED_MODULE_13__.Git.rev_parse__verify(repoPath, "REBASE_HEAD");
      if (rebase != null) {
        let [mergeBase, branch, onto, stepsNumber, stepsMessage, stepsTotal] = await Promise.all([
          this.getMergeBase(repoPath, "REBASE_HEAD", "HEAD"),
          _git__WEBPACK_IMPORTED_MODULE_13__.Git.readDotGitFile(repoPath, ["rebase-merge", "head-name"]),
          _git__WEBPACK_IMPORTED_MODULE_13__.Git.readDotGitFile(repoPath, ["rebase-merge", "onto"]),
          _git__WEBPACK_IMPORTED_MODULE_13__.Git.readDotGitFile(repoPath, ["rebase-merge", "msgnum"], { numeric: true }),
          _git__WEBPACK_IMPORTED_MODULE_13__.Git.readDotGitFile(repoPath, ["rebase-merge", "message"], { throw: true }).catch(() => _git__WEBPACK_IMPORTED_MODULE_13__.Git.readDotGitFile(repoPath, ["rebase-merge", "message-squashed"])),
          _git__WEBPACK_IMPORTED_MODULE_13__.Git.readDotGitFile(repoPath, ["rebase-merge", "end"], { numeric: true })
        ]);
        if (branch == null || onto == null)
          return void 0;
        if (branch.startsWith("refs/heads/")) {
          branch = branch.substr(11).trim();
        }
        const possibleSourceBranches = await this.getCommitBranches(repoPath, onto, { mode: "pointsAt" });
        let possibleSourceBranch;
        for (const b of possibleSourceBranches) {
          if (b.startsWith("(no branch, rebasing"))
            continue;
          possibleSourceBranch = b;
          break;
        }
        status = {
          type: "rebase",
          repoPath,
          mergeBase,
          HEAD: _git__WEBPACK_IMPORTED_MODULE_13__.GitReference.create(rebase, repoPath, { refType: "revision" }),
          onto: _git__WEBPACK_IMPORTED_MODULE_13__.GitReference.create(onto, repoPath, { refType: "revision" }),
          current: possibleSourceBranch != null ? _git__WEBPACK_IMPORTED_MODULE_13__.GitReference.create(possibleSourceBranch, repoPath, {
            refType: "branch",
            name: possibleSourceBranch,
            remote: false
          }) : void 0,
          incoming: _git__WEBPACK_IMPORTED_MODULE_13__.GitReference.create(branch, repoPath, {
            refType: "branch",
            name: branch,
            remote: false
          }),
          steps: {
            current: {
              number: stepsNumber != null ? stepsNumber : 0,
              commit: _git__WEBPACK_IMPORTED_MODULE_13__.GitReference.create(rebase, repoPath, {
                refType: "revision",
                message: stepsMessage
              })
            },
            total: stepsTotal != null ? stepsTotal : 0
          }
        };
      }
      if (this.useCaching) {
        this._rebaseStatusCache.set(repoPath, status != null ? status : null);
        if (!((_a = await this.getRepository(repoPath)) == null ? void 0 : _a.supportsChangeEvents)) {
          this._rebaseStatusCache.delete(repoPath);
        }
      }
    }
    return status != null ? status : void 0;
  }
  async getNextDiffUris(repoPath, uri, ref, skip = 0) {
    if (ref == null || ref.length === 0)
      return void 0;
    const fileName = _gitUri__WEBPACK_IMPORTED_MODULE_14__.GitUri.relativeTo(uri, repoPath);
    if (_git__WEBPACK_IMPORTED_MODULE_13__.GitRevision.isUncommittedStaged(ref)) {
      return {
        current: _gitUri__WEBPACK_IMPORTED_MODULE_14__.GitUri.fromFile(fileName, repoPath, ref),
        next: _gitUri__WEBPACK_IMPORTED_MODULE_14__.GitUri.fromFile(fileName, repoPath, void 0)
      };
    }
    const next = await this.getNextUri(repoPath, uri, ref, skip);
    if (next == null) {
      const status = await this.getStatusForFile(repoPath, fileName);
      if (status != null) {
        if (status.indexStatus != null) {
          return {
            current: _gitUri__WEBPACK_IMPORTED_MODULE_14__.GitUri.fromFile(fileName, repoPath, ref),
            next: _gitUri__WEBPACK_IMPORTED_MODULE_14__.GitUri.fromFile(fileName, repoPath, _git__WEBPACK_IMPORTED_MODULE_13__.GitRevision.uncommittedStaged)
          };
        }
      }
      return {
        current: _gitUri__WEBPACK_IMPORTED_MODULE_14__.GitUri.fromFile(fileName, repoPath, ref),
        next: _gitUri__WEBPACK_IMPORTED_MODULE_14__.GitUri.fromFile(fileName, repoPath, void 0)
      };
    }
    return {
      current: skip === 0 ? _gitUri__WEBPACK_IMPORTED_MODULE_14__.GitUri.fromFile(fileName, repoPath, ref) : await this.getNextUri(repoPath, uri, ref, skip - 1),
      next
    };
  }
  async getNextUri(repoPath, uri, ref, skip = 0) {
    var _a, _b;
    if (ref == null || ref.length === 0 || _git__WEBPACK_IMPORTED_MODULE_13__.GitRevision.isUncommittedStaged(ref))
      return void 0;
    let filters;
    if (ref === _git__WEBPACK_IMPORTED_MODULE_13__.GitRevision.deletedOrMissing) {
      ref = void 0;
      filters = ["A"];
    }
    const fileName = _gitUri__WEBPACK_IMPORTED_MODULE_14__.GitUri.relativeTo(uri, repoPath);
    let data = await _git__WEBPACK_IMPORTED_MODULE_13__.Git.log__file(repoPath, fileName, ref, {
      filters,
      format: "simple",
      limit: skip + 1,
      ordering: _container__WEBPACK_IMPORTED_MODULE_6__.Container.config.advanced.commitOrdering,
      reverse: true
    });
    if (data == null || data.length === 0)
      return void 0;
    const [nextRef, file, status] = _git__WEBPACK_IMPORTED_MODULE_13__.GitLogParser.parseSimple(data, skip);
    if (status === "D") {
      data = await _git__WEBPACK_IMPORTED_MODULE_13__.Git.log__file(repoPath, ".", nextRef, {
        filters: ["R", "C"],
        format: "simple",
        limit: 1,
        ordering: _container__WEBPACK_IMPORTED_MODULE_6__.Container.config.advanced.commitOrdering
      });
      if (data == null || data.length === 0) {
        return _gitUri__WEBPACK_IMPORTED_MODULE_14__.GitUri.fromFile(file != null ? file : fileName, repoPath, nextRef);
      }
      const [nextRenamedRef, renamedFile] = _git__WEBPACK_IMPORTED_MODULE_13__.GitLogParser.parseSimpleRenamed(data, file != null ? file : fileName);
      return _gitUri__WEBPACK_IMPORTED_MODULE_14__.GitUri.fromFile((_a = renamedFile != null ? renamedFile : file) != null ? _a : fileName, repoPath, (_b = nextRenamedRef != null ? nextRenamedRef : nextRef) != null ? _b : _git__WEBPACK_IMPORTED_MODULE_13__.GitRevision.deletedOrMissing);
    }
    return _gitUri__WEBPACK_IMPORTED_MODULE_14__.GitUri.fromFile(file != null ? file : fileName, repoPath, nextRef);
  }
  async getPreviousDiffUris(repoPath, uri, ref, skip = 0, firstParent = false) {
    if (ref === _git__WEBPACK_IMPORTED_MODULE_13__.GitRevision.deletedOrMissing)
      return void 0;
    const fileName = _gitUri__WEBPACK_IMPORTED_MODULE_14__.GitUri.relativeTo(uri, repoPath);
    if (ref == null || ref.length === 0) {
      const status = await this.getStatusForFile(repoPath, fileName);
      if (status != null) {
        if (status.indexStatus != null) {
          if (status.workingTreeStatus == null) {
            skip++;
          }
          if (skip === 0) {
            return {
              current: _gitUri__WEBPACK_IMPORTED_MODULE_14__.GitUri.fromFile(fileName, repoPath, void 0),
              previous: _gitUri__WEBPACK_IMPORTED_MODULE_14__.GitUri.fromFile(fileName, repoPath, _git__WEBPACK_IMPORTED_MODULE_13__.GitRevision.uncommittedStaged)
            };
          }
          return {
            current: _gitUri__WEBPACK_IMPORTED_MODULE_14__.GitUri.fromFile(fileName, repoPath, _git__WEBPACK_IMPORTED_MODULE_13__.GitRevision.uncommittedStaged),
            previous: await this.getPreviousUri(repoPath, uri, ref, skip - 1, void 0, firstParent)
          };
        } else if (status.workingTreeStatus != null) {
          if (skip === 0) {
            return {
              current: _gitUri__WEBPACK_IMPORTED_MODULE_14__.GitUri.fromFile(fileName, repoPath, void 0),
              previous: await this.getPreviousUri(repoPath, uri, void 0, skip, void 0, firstParent)
            };
          }
        }
      } else if (skip === 0) {
        skip++;
      }
    } else if (_git__WEBPACK_IMPORTED_MODULE_13__.GitRevision.isUncommittedStaged(ref)) {
      const current2 = skip === 0 ? _gitUri__WEBPACK_IMPORTED_MODULE_14__.GitUri.fromFile(fileName, repoPath, ref) : await this.getPreviousUri(repoPath, uri, void 0, skip - 1, void 0, firstParent);
      if (current2 == null || current2.sha === _git__WEBPACK_IMPORTED_MODULE_13__.GitRevision.deletedOrMissing)
        return void 0;
      return {
        current: current2,
        previous: await this.getPreviousUri(repoPath, uri, void 0, skip, void 0, firstParent)
      };
    }
    const current = skip === 0 ? _gitUri__WEBPACK_IMPORTED_MODULE_14__.GitUri.fromFile(fileName, repoPath, ref) : await this.getPreviousUri(repoPath, uri, ref, skip - 1, void 0, firstParent);
    if (current == null || current.sha === _git__WEBPACK_IMPORTED_MODULE_13__.GitRevision.deletedOrMissing)
      return void 0;
    return {
      current,
      previous: await this.getPreviousUri(repoPath, uri, ref, skip, void 0, firstParent)
    };
  }
  async getPreviousLineDiffUris(repoPath, uri, editorLine, ref, skip = 0) {
    var _a, _b;
    if (ref === _git__WEBPACK_IMPORTED_MODULE_13__.GitRevision.deletedOrMissing)
      return void 0;
    let fileName = _gitUri__WEBPACK_IMPORTED_MODULE_14__.GitUri.relativeTo(uri, repoPath);
    let previous;
    if (ref == null || ref.length === 0) {
      const gitUri = new _gitUri__WEBPACK_IMPORTED_MODULE_14__.GitUri(uri, repoPath);
      const document = await vscode__WEBPACK_IMPORTED_MODULE_2__.workspace.openTextDocument(uri);
      const blameLine = document.isDirty ? await this.getBlameForLineContents(gitUri, editorLine, document.getText()) : await this.getBlameForLine(gitUri, editorLine);
      if (blameLine == null)
        return void 0;
      if (blameLine.commit.isUncommitted) {
        if (document.isDirty) {
          const status = await this.getStatusForFile(repoPath, fileName);
          if (status != null) {
            if (status.indexStatus != null) {
              return {
                current: _gitUri__WEBPACK_IMPORTED_MODULE_14__.GitUri.fromFile(fileName, repoPath, void 0),
                previous: _gitUri__WEBPACK_IMPORTED_MODULE_14__.GitUri.fromFile(fileName, repoPath, _git__WEBPACK_IMPORTED_MODULE_13__.GitRevision.uncommittedStaged),
                line: editorLine
              };
            }
          }
          return {
            current: _gitUri__WEBPACK_IMPORTED_MODULE_14__.GitUri.fromFile(fileName, repoPath, void 0),
            previous: await this.getPreviousUri(repoPath, uri, void 0, skip, editorLine),
            line: editorLine
          };
        }
        let hunkLine = await this.getDiffForLine(gitUri, editorLine, void 0);
        if (hunkLine == null) {
          hunkLine = await this.getDiffForLine(gitUri, editorLine, void 0, _git__WEBPACK_IMPORTED_MODULE_13__.GitRevision.uncommittedStaged);
          if (hunkLine != null) {
            ref = _git__WEBPACK_IMPORTED_MODULE_13__.GitRevision.uncommittedStaged;
          } else {
            skip++;
          }
        }
      } else {
        ref = blameLine.commit.sha;
        fileName = blameLine.commit.fileName || ((_a = blameLine.commit.originalFileName) != null ? _a : fileName);
        uri = _gitUri__WEBPACK_IMPORTED_MODULE_14__.GitUri.resolveToUri(fileName, repoPath);
        editorLine = blameLine.line.originalLine - 1;
        if (skip === 0 && blameLine.commit.previousSha) {
          previous = _gitUri__WEBPACK_IMPORTED_MODULE_14__.GitUri.fromFile(fileName, repoPath, blameLine.commit.previousSha);
        }
      }
    } else {
      if (_git__WEBPACK_IMPORTED_MODULE_13__.GitRevision.isUncommittedStaged(ref)) {
        const current2 = skip === 0 ? _gitUri__WEBPACK_IMPORTED_MODULE_14__.GitUri.fromFile(fileName, repoPath, ref) : await this.getPreviousUri(repoPath, uri, void 0, skip - 1, editorLine);
        if (current2.sha === _git__WEBPACK_IMPORTED_MODULE_13__.GitRevision.deletedOrMissing)
          return void 0;
        return {
          current: current2,
          previous: await this.getPreviousUri(repoPath, uri, void 0, skip, editorLine),
          line: editorLine
        };
      }
      const gitUri = new _gitUri__WEBPACK_IMPORTED_MODULE_14__.GitUri(uri, { repoPath, sha: ref });
      const blameLine = await this.getBlameForLine(gitUri, editorLine);
      if (blameLine == null)
        return void 0;
      ref = blameLine.commit.sha;
      fileName = blameLine.commit.fileName || ((_b = blameLine.commit.originalFileName) != null ? _b : fileName);
      uri = _gitUri__WEBPACK_IMPORTED_MODULE_14__.GitUri.resolveToUri(fileName, repoPath);
      editorLine = blameLine.line.originalLine - 1;
      if (skip === 0 && blameLine.commit.previousSha) {
        previous = _gitUri__WEBPACK_IMPORTED_MODULE_14__.GitUri.fromFile(fileName, repoPath, blameLine.commit.previousSha);
      }
    }
    const current = skip === 0 ? _gitUri__WEBPACK_IMPORTED_MODULE_14__.GitUri.fromFile(fileName, repoPath, ref) : await this.getPreviousUri(repoPath, uri, ref, skip - 1, editorLine);
    if (current.sha === _git__WEBPACK_IMPORTED_MODULE_13__.GitRevision.deletedOrMissing)
      return void 0;
    return {
      current,
      previous: previous != null ? previous : await this.getPreviousUri(repoPath, uri, ref, skip, editorLine),
      line: editorLine
    };
  }
  async getPreviousUri(repoPath, uri, ref, skip = 0, editorLine, firstParent = false) {
    var _a;
    if (ref === _git__WEBPACK_IMPORTED_MODULE_13__.GitRevision.deletedOrMissing)
      return void 0;
    const cc = _logger__WEBPACK_IMPORTED_MODULE_8__.Logger.getCorrelationContext();
    if (ref === _git__WEBPACK_IMPORTED_MODULE_13__.GitRevision.uncommitted) {
      ref = void 0;
    }
    const fileName = _gitUri__WEBPACK_IMPORTED_MODULE_14__.GitUri.relativeTo(uri, repoPath);
    let data;
    try {
      data = await _git__WEBPACK_IMPORTED_MODULE_13__.Git.log__file(repoPath, fileName, ref, {
        firstParent,
        format: "simple",
        limit: skip + 2,
        ordering: _container__WEBPACK_IMPORTED_MODULE_6__.Container.config.advanced.commitOrdering,
        startLine: editorLine != null ? editorLine + 1 : void 0
      });
    } catch (ex) {
      const msg = (_a = ex == null ? void 0 : ex.toString()) != null ? _a : emptyStr;
      if ((ref == null || _git__WEBPACK_IMPORTED_MODULE_13__.GitRevision.isUncommittedStaged(ref)) && _git__WEBPACK_IMPORTED_MODULE_13__.GitErrors.invalidLineCount.test(msg)) {
        if (ref == null) {
          const status = await this.getStatusForFile(repoPath, fileName);
          if ((status == null ? void 0 : status.indexStatus) != null) {
            return _gitUri__WEBPACK_IMPORTED_MODULE_14__.GitUri.fromFile(fileName, repoPath, _git__WEBPACK_IMPORTED_MODULE_13__.GitRevision.uncommittedStaged);
          }
        }
        ref = await _git__WEBPACK_IMPORTED_MODULE_13__.Git.log__file_recent(repoPath, fileName, {
          ordering: _container__WEBPACK_IMPORTED_MODULE_6__.Container.config.advanced.commitOrdering
        });
        return _gitUri__WEBPACK_IMPORTED_MODULE_14__.GitUri.fromFile(fileName, repoPath, ref != null ? ref : _git__WEBPACK_IMPORTED_MODULE_13__.GitRevision.deletedOrMissing);
      }
      _logger__WEBPACK_IMPORTED_MODULE_8__.Logger.error(ex, cc);
      throw ex;
    }
    if (data == null || data.length === 0)
      return void 0;
    const [previousRef, file] = _git__WEBPACK_IMPORTED_MODULE_13__.GitLogParser.parseSimple(data, skip, ref);
    if (ref != null && ref === previousRef)
      return void 0;
    return _gitUri__WEBPACK_IMPORTED_MODULE_14__.GitUri.fromFile(file != null ? file : fileName, repoPath, previousRef != null ? previousRef : _git__WEBPACK_IMPORTED_MODULE_13__.GitRevision.deletedOrMissing);
  }
  async getPullRequestForBranch(branch, remoteOrProvider, {
    timeout,
    ...options
  } = {}) {
    let provider;
    if (_git__WEBPACK_IMPORTED_MODULE_13__.GitRemote.is(remoteOrProvider)) {
      ({ provider } = remoteOrProvider);
      if (!(provider == null ? void 0 : provider.hasApi()))
        return void 0;
    } else {
      provider = remoteOrProvider;
    }
    let promiseOrPR = provider.getPullRequestForBranch(branch, options);
    if (promiseOrPR == null || !_system__WEBPACK_IMPORTED_MODULE_10__.Promises.is(promiseOrPR)) {
      return promiseOrPR;
    }
    if (timeout != null && timeout > 0) {
      promiseOrPR = _system__WEBPACK_IMPORTED_MODULE_10__.Promises.cancellable(promiseOrPR, timeout);
    }
    try {
      return await promiseOrPR;
    } catch (ex) {
      if (ex instanceof _system__WEBPACK_IMPORTED_MODULE_10__.Promises.CancellationError) {
        throw ex;
      }
      return void 0;
    }
  }
  async getPullRequestForCommit(ref, remoteOrProvider, { timeout } = {}) {
    if (_git__WEBPACK_IMPORTED_MODULE_13__.GitRevision.isUncommitted(ref))
      return void 0;
    let provider;
    if (_git__WEBPACK_IMPORTED_MODULE_13__.GitRemote.is(remoteOrProvider)) {
      ({ provider } = remoteOrProvider);
      if (!(provider == null ? void 0 : provider.hasApi()))
        return void 0;
    } else {
      provider = remoteOrProvider;
    }
    let promiseOrPR = provider.getPullRequestForCommit(ref);
    if (promiseOrPR == null || !_system__WEBPACK_IMPORTED_MODULE_10__.Promises.is(promiseOrPR)) {
      return promiseOrPR;
    }
    if (timeout != null && timeout > 0) {
      promiseOrPR = _system__WEBPACK_IMPORTED_MODULE_10__.Promises.cancellable(promiseOrPR, timeout);
    }
    try {
      return await promiseOrPR;
    } catch (ex) {
      if (ex instanceof _system__WEBPACK_IMPORTED_MODULE_10__.Promises.CancellationError) {
        throw ex;
      }
      return void 0;
    }
  }
  async getIncomingActivity(repoPath, {
    limit,
    ...options
  } = {}) {
    var _a;
    const cc = _logger__WEBPACK_IMPORTED_MODULE_8__.Logger.getCorrelationContext();
    limit = (_a = limit != null ? limit : _container__WEBPACK_IMPORTED_MODULE_6__.Container.config.advanced.maxListItems) != null ? _a : 0;
    try {
      const data = await _git__WEBPACK_IMPORTED_MODULE_13__.Git.reflog(repoPath, {
        ordering: _container__WEBPACK_IMPORTED_MODULE_6__.Container.config.advanced.commitOrdering,
        ...options,
        limit: limit * 100
      });
      if (data == null)
        return void 0;
      const reflog = _parsers_parsers__WEBPACK_IMPORTED_MODULE_15__.GitReflogParser.parse(data, repoPath, reflogCommands, limit, limit * 100);
      if (reflog == null ? void 0 : reflog.hasMore) {
        reflog.more = this.getReflogMoreFn(reflog, options);
      }
      return reflog;
    } catch (ex) {
      _logger__WEBPACK_IMPORTED_MODULE_8__.Logger.error(ex, cc);
      return void 0;
    }
  }
  getReflogMoreFn(reflog, options) {
    return async (limit) => {
      var _a, _b;
      limit = (_a = limit != null ? limit : _container__WEBPACK_IMPORTED_MODULE_6__.Container.config.advanced.maxSearchItems) != null ? _a : 0;
      const moreLog = await this.getIncomingActivity(reflog.repoPath, {
        ...options,
        limit,
        skip: reflog.total
      });
      if (moreLog == null) {
        return { ...reflog, hasMore: false };
      }
      const mergedLog = {
        repoPath: reflog.repoPath,
        records: [...reflog.records, ...moreLog.records],
        count: reflog.count + moreLog.count,
        total: reflog.total + moreLog.total,
        limit: ((_b = reflog.limit) != null ? _b : 0) + limit,
        hasMore: moreLog.hasMore
      };
      mergedLog.more = this.getReflogMoreFn(mergedLog, options);
      return mergedLog;
    };
  }
  async getRichRemoteProvider(remotesOrRepoPath, { includeDisconnected } = {}) {
    var _a, _b, _c, _d;
    if (remotesOrRepoPath == null)
      return void 0;
    const cacheKey = `${includeDisconnected ? "disconnected|" : ""}${typeof remotesOrRepoPath === "string" ? remotesOrRepoPath : (_a = remotesOrRepoPath[0]) == null ? void 0 : _a.repoPath}`;
    if (cacheKey != null) {
      const remote2 = this._remotesWithApiProviderCache.get(cacheKey);
      if (remote2 !== void 0)
        return remote2 != null ? remote2 : void 0;
    }
    const remotes = (typeof remotesOrRepoPath === "string" ? await this.getRemotes(remotesOrRepoPath) : remotesOrRepoPath).filter((r) => r.provider != null);
    if (remotes.length === 0)
      return void 0;
    let remote;
    if (remotes.length === 1) {
      remote = remotes[0];
    } else {
      const weightedRemotes = new Map([
        ["upstream", 15],
        ["origin", 10]
      ]);
      const branch = await this.getBranch(remotes[0].repoPath);
      const branchRemote = branch == null ? void 0 : branch.getRemoteName();
      if (branchRemote != null) {
        weightedRemotes.set(branchRemote, 100);
      }
      let bestRemote;
      let weight = 0;
      for (const r of remotes) {
        if (r.default) {
          bestRemote = r;
          break;
        }
        const matchedWeight = (_b = weightedRemotes.get(r.name)) != null ? _b : -1;
        if (matchedWeight > weight) {
          bestRemote = r;
          weight = matchedWeight;
        }
      }
      remote = bestRemote != null ? bestRemote : null;
    }
    if (!((_c = remote == null ? void 0 : remote.provider) == null ? void 0 : _c.hasApi())) {
      if (cacheKey != null) {
        this._remotesWithApiProviderCache.set(cacheKey, null);
      }
      return void 0;
    }
    const { provider } = remote;
    if (!includeDisconnected) {
      const connected = (_d = provider.maybeConnected) != null ? _d : await provider.isConnected();
      if (!connected) {
        if (cacheKey != null) {
          this._remotesWithApiProviderCache.set(cacheKey, null);
        }
        return void 0;
      }
    }
    if (cacheKey != null) {
      this._remotesWithApiProviderCache.set(cacheKey, remote);
    }
    return remote;
  }
  async getRemotes(repoPath, options = {}) {
    if (repoPath == null)
      return [];
    const repository = await this.getRepository(repoPath);
    const remotes = await (repository != null ? repository.getRemotes({ sort: options.sort }) : this.getRemotesCore(repoPath, void 0, { sort: options.sort }));
    return remotes.filter((r) => r.provider != null);
  }
  async getRemotesCore(repoPath, providers, options = {}) {
    if (repoPath == null)
      return [];
    providers = providers != null ? providers : _remotes_factory__WEBPACK_IMPORTED_MODULE_16__.RemoteProviderFactory.loadProviders(_configuration__WEBPACK_IMPORTED_MODULE_4__.configuration.get("remotes", null));
    try {
      const data = await _git__WEBPACK_IMPORTED_MODULE_13__.Git.remote(repoPath);
      const remotes = _git__WEBPACK_IMPORTED_MODULE_13__.GitRemoteParser.parse(data, repoPath, _remotes_factory__WEBPACK_IMPORTED_MODULE_16__.RemoteProviderFactory.factory(providers));
      if (remotes == null)
        return [];
      if (options.sort) {
        _git__WEBPACK_IMPORTED_MODULE_13__.GitRemote.sort(remotes);
      }
      return remotes;
    } catch (ex) {
      _logger__WEBPACK_IMPORTED_MODULE_8__.Logger.error(ex);
      return [];
    }
  }
  async getRepoPath(filePathOrUri, options = {}) {
    if (filePathOrUri == null)
      return this.getHighlanderRepoPath();
    if (_gitUri__WEBPACK_IMPORTED_MODULE_14__.GitUri.is(filePathOrUri))
      return filePathOrUri.repoPath;
    const cc = _logger__WEBPACK_IMPORTED_MODULE_8__.Logger.getCorrelationContext();
    let repo = await this.getRepository(filePathOrUri, { ...options, skipCacheUpdate: true });
    if (repo != null)
      return repo.path;
    const rp = await this.getRepoPathCore(typeof filePathOrUri === "string" ? filePathOrUri : filePathOrUri.fsPath, false);
    if (rp == null)
      return void 0;
    if (this._repositoryTree.get(rp) != null)
      return rp;
    const isVslsScheme = typeof filePathOrUri === "string" ? void 0 : filePathOrUri.scheme === _constants__WEBPACK_IMPORTED_MODULE_5__.DocumentSchemes.Vsls;
    const root = this.findRepositoryForPath(this._repositoryTree, rp, isVslsScheme);
    let folder;
    if (root != null) {
      folder = root.folder;
    } else {
      folder = vscode__WEBPACK_IMPORTED_MODULE_2__.workspace.getWorkspaceFolder(_gitUri__WEBPACK_IMPORTED_MODULE_14__.GitUri.file(rp, isVslsScheme));
      if (folder == null) {
        const parts = rp.split(slash);
        folder = {
          uri: _gitUri__WEBPACK_IMPORTED_MODULE_14__.GitUri.file(rp, isVslsScheme),
          name: parts[parts.length - 1],
          index: this._repositoryTree.count()
        };
      }
    }
    _logger__WEBPACK_IMPORTED_MODULE_8__.Logger.log(cc, `Repository found in '${rp}'`);
    repo = new _git__WEBPACK_IMPORTED_MODULE_13__.Repository(folder, rp, false, this.onAnyRepositoryChanged.bind(this), !vscode__WEBPACK_IMPORTED_MODULE_2__.window.state.focused);
    this._repositoryTree.set(rp, repo);
    setImmediate(async () => {
      await this.updateContext(this._repositoryTree);
      this.fireRepositoriesChanged();
    });
    return rp;
  }
  async getRepoPathCore(filePath, isDirectory) {
    const cc = _logger__WEBPACK_IMPORTED_MODULE_8__.Logger.getCorrelationContext();
    let repoPath;
    try {
      const path = isDirectory ? filePath : path__WEBPACK_IMPORTED_MODULE_1__.dirname(filePath);
      repoPath = await _git__WEBPACK_IMPORTED_MODULE_13__.Git.rev_parse__show_toplevel(path);
      if (repoPath == null)
        return repoPath;
      if (_shell__WEBPACK_IMPORTED_MODULE_17__.isWindows) {
        const repoUri = vscode__WEBPACK_IMPORTED_MODULE_2__.Uri.file(repoPath);
        const pathUri = vscode__WEBPACK_IMPORTED_MODULE_2__.Uri.file(path);
        if (repoUri.authority.length !== 0 && pathUri.authority.length === 0) {
          const match = driveLetterRegex.exec(pathUri.path);
          if (match != null) {
            const [, letter] = match;
            try {
              const networkPath = await new Promise((resolve) => Object(function webpackMissingModule() { var e = new Error("Cannot find module 'fs'"); e.code = 'MODULE_NOT_FOUND'; throw e; }())(`${letter}:\\`, { encoding: "utf8" }, (err, resolvedPath) => resolve(err != null ? void 0 : resolvedPath)));
              if (networkPath != null) {
                repoPath = _system__WEBPACK_IMPORTED_MODULE_10__.Strings.normalizePath(repoUri.fsPath.replace(networkPath, `${letter.toLowerCase()}:${networkPath.endsWith("\\") ? "\\" : ""}`));
                return repoPath;
              }
            } catch {
            }
          }
          repoPath = _system__WEBPACK_IMPORTED_MODULE_10__.Strings.normalizePath(pathUri.fsPath);
        }
        return repoPath;
      }
      repoPath = await new Promise((resolve) => {
        Object(function webpackMissingModule() { var e = new Error("Cannot find module 'fs'"); e.code = 'MODULE_NOT_FOUND'; throw e; }())(path, { encoding: "utf8" }, (err, resolvedPath) => {
          if (err != null) {
            _logger__WEBPACK_IMPORTED_MODULE_8__.Logger.debug(cc, `fs.realpath failed; repoPath=${repoPath}`);
            resolve(repoPath);
            return;
          }
          if (path.toLowerCase() === resolvedPath.toLowerCase()) {
            _logger__WEBPACK_IMPORTED_MODULE_8__.Logger.debug(cc, `No symlink detected; repoPath=${repoPath}`);
            resolve(repoPath);
            return;
          }
          const linkPath = _system__WEBPACK_IMPORTED_MODULE_10__.Strings.normalizePath(resolvedPath, { stripTrailingSlash: true });
          repoPath = repoPath.replace(linkPath, path);
          _logger__WEBPACK_IMPORTED_MODULE_8__.Logger.debug(cc, `Symlink detected; repoPath=${repoPath}, path=${path}, resolvedPath=${resolvedPath}`);
          resolve(repoPath);
        });
      });
      return repoPath;
    } catch (ex) {
      _logger__WEBPACK_IMPORTED_MODULE_8__.Logger.error(ex, cc);
      repoPath = void 0;
      return repoPath;
    } finally {
      if (repoPath) {
        void this.ensureProperWorkspaceCasing(repoPath, filePath);
      }
    }
  }
  async ensureProperWorkspaceCasing(repoPath, filePath) {
    if (_container__WEBPACK_IMPORTED_MODULE_6__.Container.config.advanced.messages.suppressImproperWorkspaceCasingWarning)
      return;
    filePath = filePath.replace(/\\/g, "/");
    let regexPath;
    let testPath;
    if (filePath > repoPath) {
      regexPath = filePath;
      testPath = repoPath;
    } else {
      testPath = filePath;
      regexPath = repoPath;
    }
    let pathRegex = new RegExp(`^${regexPath}`);
    if (!pathRegex.test(testPath)) {
      pathRegex = new RegExp(pathRegex, "i");
      if (pathRegex.test(testPath)) {
        await _messages__WEBPACK_IMPORTED_MODULE_9__.Messages.showIncorrectWorkspaceCasingWarningMessage();
      }
    }
  }
  async getRepoPathOrActive(uri, editor) {
    const repoPath = await this.getRepoPath(uri);
    if (repoPath)
      return repoPath;
    return this.getActiveRepoPath(editor);
  }
  async getRepositories(predicate) {
    const repositoryTree = await this.getRepositoryTree();
    const values = repositoryTree.values();
    return predicate != null ? _system__WEBPACK_IMPORTED_MODULE_10__.Iterables.filter(values, predicate) : values;
  }
  async getOrderedRepositories() {
    const repositories = [...await this.getRepositories()];
    if (repositories.length === 0)
      return repositories;
    return _git__WEBPACK_IMPORTED_MODULE_13__.Repository.sort(repositories.filter((r) => !r.closed));
  }
  async getRepositoryTree() {
    if (this._repositoriesLoadingPromise != null) {
      await this._repositoriesLoadingPromise;
      this._repositoriesLoadingPromise = void 0;
    }
    return this._repositoryTree;
  }
  async getRepository(repoPathOrUri, options = {}) {
    const repositoryTree = await this.getRepositoryTree();
    let isVslsScheme;
    let path;
    if (typeof repoPathOrUri === "string") {
      const repo2 = repositoryTree.get(repoPathOrUri);
      if (repo2 != null)
        return repo2;
      path = repoPathOrUri;
      isVslsScheme = void 0;
    } else {
      if (_gitUri__WEBPACK_IMPORTED_MODULE_14__.GitUri.is(repoPathOrUri)) {
        if (repoPathOrUri.repoPath) {
          const repo2 = repositoryTree.get(repoPathOrUri.repoPath);
          if (repo2 != null)
            return repo2;
        }
        path = repoPathOrUri.fsPath;
      } else {
        path = repoPathOrUri.fsPath;
      }
      isVslsScheme = repoPathOrUri.scheme === _constants__WEBPACK_IMPORTED_MODULE_5__.DocumentSchemes.Vsls;
    }
    const repo = this.findRepositoryForPath(repositoryTree, path, isVslsScheme);
    if (repo == null)
      return void 0;
    if (!await this.isTracked(path, repo.path, options))
      return void 0;
    return repo;
  }
  findRepositoryForPath(repositoryTree, path, isVslsScheme) {
    let repo = repositoryTree.findSubstr(path);
    if (repo == null && isVslsScheme !== false && _container__WEBPACK_IMPORTED_MODULE_6__.Container.vsls.isMaybeGuest) {
      if (!_vsls_vsls__WEBPACK_IMPORTED_MODULE_12__.vslsUriPrefixRegex.test(path)) {
        path = _system__WEBPACK_IMPORTED_MODULE_10__.Strings.normalizePath(path);
        const vslsPath = `/~0${path.startsWith(slash) ? path : `/${path}`}`;
        repo = repositoryTree.findSubstr(vslsPath);
      }
    }
    return repo;
  }
  async getLocalInfoFromRemoteUri(uri, options) {
    var _a;
    for (const repo of await this.getRepositories()) {
      for (const remote of await repo.getRemotes()) {
        const local = await ((_a = remote == null ? void 0 : remote.provider) == null ? void 0 : _a.getLocalInfoFromRemoteUri(repo, uri, options));
        if (local != null)
          return local;
      }
    }
    return void 0;
  }
  async getRepositoryCount() {
    const repositoryTree = await this.getRepositoryTree();
    return repositoryTree.count();
  }
  async getStash(repoPath) {
    var _a;
    if (repoPath == null)
      return void 0;
    let stash = this.useCaching ? this._stashesCache.get(repoPath) : void 0;
    if (stash === void 0) {
      const data = await _git__WEBPACK_IMPORTED_MODULE_13__.Git.stash__list(repoPath, {
        similarityThreshold: _container__WEBPACK_IMPORTED_MODULE_6__.Container.config.advanced.similarityThreshold
      });
      stash = _git__WEBPACK_IMPORTED_MODULE_13__.GitStashParser.parse(data, repoPath);
      if (this.useCaching) {
        this._stashesCache.set(repoPath, stash != null ? stash : null);
        if (!((_a = await this.getRepository(repoPath)) == null ? void 0 : _a.supportsChangeEvents)) {
          this._stashesCache.delete(repoPath);
        }
      }
    }
    return stash != null ? stash : void 0;
  }
  async getStatusForFile(repoPath, fileName) {
    const porcelainVersion = _git__WEBPACK_IMPORTED_MODULE_13__.Git.validateVersion(2, 11) ? 2 : 1;
    const data = await _git__WEBPACK_IMPORTED_MODULE_13__.Git.status__file(repoPath, fileName, porcelainVersion, {
      similarityThreshold: _container__WEBPACK_IMPORTED_MODULE_6__.Container.config.advanced.similarityThreshold
    });
    const status = _git__WEBPACK_IMPORTED_MODULE_13__.GitStatusParser.parse(data, repoPath, porcelainVersion);
    if (status == null || !status.files.length)
      return void 0;
    return status.files[0];
  }
  async getStatusForFiles(repoPath, path) {
    const porcelainVersion = _git__WEBPACK_IMPORTED_MODULE_13__.Git.validateVersion(2, 11) ? 2 : 1;
    const data = await _git__WEBPACK_IMPORTED_MODULE_13__.Git.status__file(repoPath, path, porcelainVersion, {
      similarityThreshold: _container__WEBPACK_IMPORTED_MODULE_6__.Container.config.advanced.similarityThreshold
    });
    const status = _git__WEBPACK_IMPORTED_MODULE_13__.GitStatusParser.parse(data, repoPath, porcelainVersion);
    if (status == null || !status.files.length)
      return [];
    return status.files;
  }
  async getStatusForRepo(repoPath) {
    if (repoPath == null)
      return void 0;
    const porcelainVersion = _git__WEBPACK_IMPORTED_MODULE_13__.Git.validateVersion(2, 11) ? 2 : 1;
    const data = await _git__WEBPACK_IMPORTED_MODULE_13__.Git.status(repoPath, porcelainVersion, {
      similarityThreshold: _container__WEBPACK_IMPORTED_MODULE_6__.Container.config.advanced.similarityThreshold
    });
    const status = _git__WEBPACK_IMPORTED_MODULE_13__.GitStatusParser.parse(data, repoPath, porcelainVersion);
    if (status == null ? void 0 : status.detached) {
      const rebaseStatus = await this.getRebaseStatus(repoPath);
      if (rebaseStatus != null) {
        return new _git__WEBPACK_IMPORTED_MODULE_13__.GitStatus(repoPath, rebaseStatus.incoming.name, status.sha, status.files, status.state, status.upstream, true);
      }
    }
    return status;
  }
  async getTags(repoPath, options = {}) {
    var _a;
    if (repoPath == null)
      return [];
    let tagsPromise = this.useCaching ? this._tagsCache.get(repoPath) : void 0;
    if (tagsPromise == null) {
      async function load() {
        var _a2;
        try {
          const data = await _git__WEBPACK_IMPORTED_MODULE_13__.Git.tag(repoPath);
          return (_a2 = _git__WEBPACK_IMPORTED_MODULE_13__.GitTagParser.parse(data, repoPath)) != null ? _a2 : [];
        } catch (ex) {
          this._tagsCache.delete(repoPath);
          return [];
        }
      }
      tagsPromise = load.call(this);
      if (this.useCaching) {
        this._tagsCache.set(repoPath, tagsPromise);
        if (!((_a = await this.getRepository(repoPath)) == null ? void 0 : _a.supportsChangeEvents)) {
          this._tagsCache.delete(repoPath);
        }
      }
    }
    let tags = await tagsPromise;
    if (options.filter != null) {
      tags = tags.filter(options.filter);
    }
    if (options.sort) {
      _git__WEBPACK_IMPORTED_MODULE_13__.GitTag.sort(tags, typeof options.sort === "boolean" ? void 0 : options.sort);
    }
    return tags;
  }
  async getTreeFileForRevision(repoPath, fileName, ref) {
    if (repoPath == null || fileName == null || fileName.length === 0)
      return void 0;
    const data = await _git__WEBPACK_IMPORTED_MODULE_13__.Git.ls_tree(repoPath, ref, { fileName });
    const trees = _git__WEBPACK_IMPORTED_MODULE_13__.GitTreeParser.parse(data);
    return (trees == null ? void 0 : trees.length) ? trees[0] : void 0;
  }
  async getTreeForRevision(repoPath, ref) {
    var _a;
    if (repoPath == null)
      return [];
    const data = await _git__WEBPACK_IMPORTED_MODULE_13__.Git.ls_tree(repoPath, ref);
    return (_a = _git__WEBPACK_IMPORTED_MODULE_13__.GitTreeParser.parse(data)) != null ? _a : [];
  }
  getVersionedFileBuffer(repoPath, fileName, ref) {
    return _git__WEBPACK_IMPORTED_MODULE_13__.Git.show(repoPath, fileName, ref, { encoding: "buffer" });
  }
  async getVersionedUri(repoPath, fileName, ref) {
    if (ref === _git__WEBPACK_IMPORTED_MODULE_13__.GitRevision.deletedOrMissing)
      return void 0;
    if (ref == null || ref.length === 0 || _git__WEBPACK_IMPORTED_MODULE_13__.GitRevision.isUncommitted(ref) && !_git__WEBPACK_IMPORTED_MODULE_13__.GitRevision.isUncommittedStaged(ref)) {
      let data = await _git__WEBPACK_IMPORTED_MODULE_13__.Git.ls_files(repoPath, fileName);
      if (data != null)
        return _gitUri__WEBPACK_IMPORTED_MODULE_14__.GitUri.file(fileName);
      data = await _git__WEBPACK_IMPORTED_MODULE_13__.Git.ls_files(repoPath, fileName, { untracked: true });
      if (data != null)
        return _gitUri__WEBPACK_IMPORTED_MODULE_14__.GitUri.file(fileName);
      return void 0;
    }
    if (_git__WEBPACK_IMPORTED_MODULE_13__.GitRevision.isUncommittedStaged(ref)) {
      return _gitUri__WEBPACK_IMPORTED_MODULE_14__.GitUri.git(fileName, repoPath);
    }
    return _gitUri__WEBPACK_IMPORTED_MODULE_14__.GitUri.toRevisionUri(ref, fileName, repoPath);
  }
  async getWorkingUri(repoPath, uri) {
    let fileName = _gitUri__WEBPACK_IMPORTED_MODULE_14__.GitUri.relativeTo(uri, repoPath);
    let data;
    let ref;
    do {
      data = await _git__WEBPACK_IMPORTED_MODULE_13__.Git.ls_files(repoPath, fileName);
      if (data != null) {
        fileName = _system__WEBPACK_IMPORTED_MODULE_10__.Strings.splitSingle(data, "\n")[0];
        break;
      }
      ref = await _git__WEBPACK_IMPORTED_MODULE_13__.Git.log__file_recent(repoPath, fileName, {
        ordering: _container__WEBPACK_IMPORTED_MODULE_6__.Container.config.advanced.commitOrdering,
        similarityThreshold: _container__WEBPACK_IMPORTED_MODULE_6__.Container.config.advanced.similarityThreshold
      });
      if (ref == null)
        return void 0;
      data = await _git__WEBPACK_IMPORTED_MODULE_13__.Git.log__file(repoPath, ".", ref, {
        filters: ["R", "C", "D"],
        format: "simple",
        limit: 1,
        ordering: _container__WEBPACK_IMPORTED_MODULE_6__.Container.config.advanced.commitOrdering
      });
      if (data == null || data.length === 0)
        break;
      const [foundRef, foundFile, foundStatus] = _git__WEBPACK_IMPORTED_MODULE_13__.GitLogParser.parseSimpleRenamed(data, fileName);
      if (foundStatus === "D" && foundFile != null)
        return void 0;
      if (foundRef == null || foundFile == null)
        break;
      fileName = foundFile;
    } while (true);
    uri = _gitUri__WEBPACK_IMPORTED_MODULE_14__.GitUri.resolveToUri(fileName, repoPath);
    return await (0,_shell__WEBPACK_IMPORTED_MODULE_17__.fsExists)(uri.fsPath) ? uri : void 0;
  }
  async hasBranchesAndOrTags(repoPath, {
    filter
  } = {}) {
    const [branches, tags] = await Promise.all([
      this.getBranches(repoPath, {
        filter: filter == null ? void 0 : filter.branches,
        sort: false
      }),
      this.getTags(repoPath, {
        filter: filter == null ? void 0 : filter.tags,
        sort: false
      })
    ]);
    return branches != null && branches.length !== 0 || tags != null && tags.length !== 0;
  }
  async hasRemotes(repoPath) {
    if (repoPath == null)
      return false;
    const repository = await this.getRepository(repoPath);
    if (repository == null)
      return false;
    return repository.hasRemotes();
  }
  async hasTrackingBranch(repoPath) {
    if (repoPath == null)
      return false;
    const repository = await this.getRepository(repoPath);
    if (repository == null)
      return false;
    return repository.hasUpstreamBranch();
  }
  async isActiveRepoPath(repoPath, editor) {
    if (repoPath == null)
      return false;
    editor = editor != null ? editor : vscode__WEBPACK_IMPORTED_MODULE_2__.window.activeTextEditor;
    if (editor == null)
      return false;
    const doc = await _container__WEBPACK_IMPORTED_MODULE_6__.Container.tracker.getOrAdd(editor.document.uri);
    return repoPath === (doc == null ? void 0 : doc.uri.repoPath);
  }
  isTrackable(schemeOruri) {
    const scheme = typeof schemeOruri === "string" ? schemeOruri : schemeOruri.scheme;
    return scheme === _constants__WEBPACK_IMPORTED_MODULE_5__.DocumentSchemes.File || scheme === _constants__WEBPACK_IMPORTED_MODULE_5__.DocumentSchemes.Git || scheme === _constants__WEBPACK_IMPORTED_MODULE_5__.DocumentSchemes.GitLens || scheme === _constants__WEBPACK_IMPORTED_MODULE_5__.DocumentSchemes.PRs || scheme === _constants__WEBPACK_IMPORTED_MODULE_5__.DocumentSchemes.Vsls;
  }
  async isTracked(fileNameOrUri, repoPath, options = {}) {
    if (options.ref === _git__WEBPACK_IMPORTED_MODULE_13__.GitRevision.deletedOrMissing)
      return false;
    let ref = options.ref;
    let cacheKey;
    let fileName;
    if (typeof fileNameOrUri === "string") {
      [fileName, repoPath] = _system__WEBPACK_IMPORTED_MODULE_10__.Paths.splitPath(fileNameOrUri, repoPath);
      cacheKey = _gitUri__WEBPACK_IMPORTED_MODULE_14__.GitUri.toKey(fileNameOrUri);
    } else {
      if (!this.isTrackable(fileNameOrUri))
        return false;
      fileName = fileNameOrUri.fsPath;
      repoPath = fileNameOrUri.repoPath;
      ref = fileNameOrUri.sha;
      cacheKey = _gitUri__WEBPACK_IMPORTED_MODULE_14__.GitUri.toKey(fileName);
    }
    if (ref != null) {
      cacheKey += `:${ref}`;
    }
    let tracked = this._trackedCache.get(cacheKey);
    if (tracked != null) {
      tracked = await tracked;
      return tracked;
    }
    tracked = this.isTrackedCore(fileName, repoPath == null ? emptyStr : repoPath, ref);
    if (options.skipCacheUpdate) {
      tracked = await tracked;
      return tracked;
    }
    this._trackedCache.set(cacheKey, tracked);
    tracked = await tracked;
    this._trackedCache.set(cacheKey, tracked);
    return tracked;
  }
  async isTrackedCore(fileName, repoPath, ref) {
    if (ref === _git__WEBPACK_IMPORTED_MODULE_13__.GitRevision.deletedOrMissing)
      return false;
    try {
      let tracked = Boolean(await _git__WEBPACK_IMPORTED_MODULE_13__.Git.ls_files(repoPath == null ? emptyStr : repoPath, fileName));
      if (!tracked && ref != null) {
        tracked = Boolean(await _git__WEBPACK_IMPORTED_MODULE_13__.Git.ls_files(repoPath == null ? emptyStr : repoPath, fileName, { ref }));
        if (!tracked) {
          tracked = Boolean(await _git__WEBPACK_IMPORTED_MODULE_13__.Git.ls_files(repoPath == null ? emptyStr : repoPath, fileName, {
            ref: `${ref}^`
          }));
        }
      }
      return tracked;
    } catch (ex) {
      _logger__WEBPACK_IMPORTED_MODULE_8__.Logger.error(ex);
      return false;
    }
  }
  async getDiffTool(repoPath) {
    var _a;
    return (_a = await _git__WEBPACK_IMPORTED_MODULE_13__.Git.config__get("diff.guitool", repoPath, { local: true })) != null ? _a : _git__WEBPACK_IMPORTED_MODULE_13__.Git.config__get("diff.tool", repoPath, { local: true });
  }
  async openDiffTool(repoPath, uri, options = {}) {
    var _a;
    try {
      if (!options.tool) {
        const cc = _logger__WEBPACK_IMPORTED_MODULE_8__.Logger.getCorrelationContext();
        options.tool = _container__WEBPACK_IMPORTED_MODULE_6__.Container.config.advanced.externalDiffTool || await this.getDiffTool(repoPath);
        if (options.tool == null)
          throw new Error("No diff tool found");
        _logger__WEBPACK_IMPORTED_MODULE_8__.Logger.log(cc, `Using tool=${options.tool}`);
      }
      const { tool, ...opts } = options;
      await _git__WEBPACK_IMPORTED_MODULE_13__.Git.difftool(repoPath, uri.fsPath, tool, opts);
    } catch (ex) {
      const msg = (_a = ex == null ? void 0 : ex.toString()) != null ? _a : "";
      if (msg === "No diff tool found" || /Unknown .+? tool/.test(msg)) {
        const viewDocs = "View Git Docs";
        const result = await vscode__WEBPACK_IMPORTED_MODULE_2__.window.showWarningMessage("Unable to open changes because the specified diff tool cannot be found or no Git diff tool is configured", viewDocs);
        if (result === viewDocs) {
          void vscode__WEBPACK_IMPORTED_MODULE_2__.env.openExternal(vscode__WEBPACK_IMPORTED_MODULE_2__.Uri.parse("https://git-scm.com/docs/git-config#Documentation/git-config.txt-difftool"));
        }
        return;
      }
      _logger__WEBPACK_IMPORTED_MODULE_8__.Logger.error(ex, "openDiffTool");
      void _messages__WEBPACK_IMPORTED_MODULE_9__.Messages.showGenericErrorMessage("Unable to open compare");
    }
  }
  async openDirectoryCompare(repoPath, ref1, ref2, tool) {
    var _a;
    try {
      if (!tool) {
        const cc = _logger__WEBPACK_IMPORTED_MODULE_8__.Logger.getCorrelationContext();
        tool = _container__WEBPACK_IMPORTED_MODULE_6__.Container.config.advanced.externalDirectoryDiffTool || await this.getDiffTool(repoPath);
        if (tool == null)
          throw new Error("No diff tool found");
        _logger__WEBPACK_IMPORTED_MODULE_8__.Logger.log(cc, `Using tool=${tool}`);
      }
      await _git__WEBPACK_IMPORTED_MODULE_13__.Git.difftool__dir_diff(repoPath, tool, ref1, ref2);
    } catch (ex) {
      const msg = (_a = ex == null ? void 0 : ex.toString()) != null ? _a : "";
      if (msg === "No diff tool found" || /Unknown .+? tool/.test(msg)) {
        const viewDocs = "View Git Docs";
        const result = await vscode__WEBPACK_IMPORTED_MODULE_2__.window.showWarningMessage("Unable to open directory compare because the specified diff tool cannot be found or no Git diff tool is configured", viewDocs);
        if (result === viewDocs) {
          void vscode__WEBPACK_IMPORTED_MODULE_2__.env.openExternal(vscode__WEBPACK_IMPORTED_MODULE_2__.Uri.parse("https://git-scm.com/docs/git-config#Documentation/git-config.txt-difftool"));
        }
        return;
      }
      _logger__WEBPACK_IMPORTED_MODULE_8__.Logger.error(ex, "openDirectoryCompare");
      void _messages__WEBPACK_IMPORTED_MODULE_9__.Messages.showGenericErrorMessage("Unable to open directory compare");
    }
  }
  async resolveReference(repoPath, ref, fileNameOrUri, options) {
    var _a, _b;
    if (ref == null || ref.length === 0 || ref === _git__WEBPACK_IMPORTED_MODULE_13__.GitRevision.deletedOrMissing || _git__WEBPACK_IMPORTED_MODULE_13__.GitRevision.isUncommitted(ref)) {
      return ref;
    }
    if (fileNameOrUri == null) {
      if (_git__WEBPACK_IMPORTED_MODULE_13__.GitRevision.isSha(ref) || !_git__WEBPACK_IMPORTED_MODULE_13__.GitRevision.isShaLike(ref) || ref.endsWith("^3"))
        return ref;
      return (_a = await _git__WEBPACK_IMPORTED_MODULE_13__.Git.rev_parse__verify(repoPath, ref)) != null ? _a : ref;
    }
    const fileName = typeof fileNameOrUri === "string" ? fileNameOrUri : _system__WEBPACK_IMPORTED_MODULE_10__.Strings.normalizePath(path__WEBPACK_IMPORTED_MODULE_1__.relative(repoPath, fileNameOrUri.fsPath));
    const blob = await _git__WEBPACK_IMPORTED_MODULE_13__.Git.rev_parse__verify(repoPath, ref, fileName);
    if (blob == null)
      return _git__WEBPACK_IMPORTED_MODULE_13__.GitRevision.deletedOrMissing;
    let promise = _git__WEBPACK_IMPORTED_MODULE_13__.Git.log__find_object(repoPath, blob, ref, _container__WEBPACK_IMPORTED_MODULE_6__.Container.config.advanced.commitOrdering, fileName);
    if ((options == null ? void 0 : options.timeout) != null) {
      promise = Promise.race([promise, _system__WEBPACK_IMPORTED_MODULE_10__.Functions.wait(options.timeout)]);
    }
    return (_b = await promise) != null ? _b : ref;
  }
  validateBranchOrTagName(ref, repoPath) {
    return _git__WEBPACK_IMPORTED_MODULE_13__.Git.check_ref_format(ref, repoPath);
  }
  async validateReference(repoPath, ref) {
    if (ref == null || ref.length === 0)
      return false;
    if (ref === _git__WEBPACK_IMPORTED_MODULE_13__.GitRevision.deletedOrMissing || _git__WEBPACK_IMPORTED_MODULE_13__.GitRevision.isUncommitted(ref))
      return true;
    return await _git__WEBPACK_IMPORTED_MODULE_13__.Git.rev_parse__verify(repoPath, ref) != null;
  }
  stageFile(repoPath, fileNameOrUri) {
    return _git__WEBPACK_IMPORTED_MODULE_13__.Git.add(repoPath, typeof fileNameOrUri === "string" ? fileNameOrUri : _system__WEBPACK_IMPORTED_MODULE_10__.Paths.splitPath(fileNameOrUri.fsPath, repoPath)[0]);
  }
  stageDirectory(repoPath, directoryOrUri) {
    return _git__WEBPACK_IMPORTED_MODULE_13__.Git.add(repoPath, typeof directoryOrUri === "string" ? directoryOrUri : _system__WEBPACK_IMPORTED_MODULE_10__.Paths.splitPath(directoryOrUri.fsPath, repoPath)[0]);
  }
  unStageFile(repoPath, fileNameOrUri) {
    return _git__WEBPACK_IMPORTED_MODULE_13__.Git.reset(repoPath, typeof fileNameOrUri === "string" ? fileNameOrUri : _system__WEBPACK_IMPORTED_MODULE_10__.Paths.splitPath(fileNameOrUri.fsPath, repoPath)[0]);
  }
  unStageDirectory(repoPath, directoryOrUri) {
    return _git__WEBPACK_IMPORTED_MODULE_13__.Git.reset(repoPath, typeof directoryOrUri === "string" ? directoryOrUri : _system__WEBPACK_IMPORTED_MODULE_10__.Paths.splitPath(directoryOrUri.fsPath, repoPath)[0]);
  }
  stashApply(repoPath, stashName, { deleteAfter } = {}) {
    return _git__WEBPACK_IMPORTED_MODULE_13__.Git.stash__apply(repoPath, stashName, Boolean(deleteAfter));
  }
  stashDelete(repoPath, stashName, ref) {
    return _git__WEBPACK_IMPORTED_MODULE_13__.Git.stash__delete(repoPath, stashName, ref);
  }
  stashSave(repoPath, message, uris, options = {}) {
    if (uris == null)
      return _git__WEBPACK_IMPORTED_MODULE_13__.Git.stash__push(repoPath, message, options);
    _GitService.ensureGitVersion("2.13.2", "Stashing individual files", " Please retry by stashing everything or install a more recent version of Git.");
    const pathspecs = uris.map((u) => `./${_system__WEBPACK_IMPORTED_MODULE_10__.Paths.splitPath(u.fsPath, repoPath)[0]}`);
    const stdinVersion = "2.30.0";
    const stdin = _GitService.compareGitVersion(stdinVersion) !== -1;
    if (!stdin && _system__WEBPACK_IMPORTED_MODULE_10__.Arrays.countStringLength(pathspecs) > _git__WEBPACK_IMPORTED_MODULE_13__.maxGitCliLength) {
      _GitService.ensureGitVersion(stdinVersion, `Stashing so many files (${pathspecs.length}) at once`, " Please retry by stashing fewer files or install a more recent version of Git.");
    }
    return _git__WEBPACK_IMPORTED_MODULE_13__.Git.stash__push(repoPath, message, {
      ...options,
      pathspecs,
      stdin
    });
  }
  static compareGitVersion(version) {
    return _system__WEBPACK_IMPORTED_MODULE_10__.Versions.compare(_system__WEBPACK_IMPORTED_MODULE_10__.Versions.fromString(_git__WEBPACK_IMPORTED_MODULE_13__.Git.getGitVersion()), _system__WEBPACK_IMPORTED_MODULE_10__.Versions.fromString(version));
  }
  static ensureGitVersion(version, prefix, suffix) {
    if (_GitService.compareGitVersion(version) === -1) {
      throw new Error(`${prefix} requires a newer version of Git (>= ${version}) than is currently installed (${_git__WEBPACK_IMPORTED_MODULE_13__.Git.getGitVersion()}).${suffix}`);
    }
  }
  static async getBuiltInGitApi() {
    try {
      const extension = vscode__WEBPACK_IMPORTED_MODULE_2__.extensions.getExtension("vscode.git");
      if (extension != null) {
        const gitExtension = extension.isActive ? extension.exports : await extension.activate();
        return gitExtension.getAPI(1);
      }
    } catch {
    }
    return void 0;
  }
  static async getOrOpenBuiltInGitRepository(repoPath) {
    var _a, _b, _c;
    const cc = _logger__WEBPACK_IMPORTED_MODULE_8__.Logger.getCorrelationContext();
    try {
      const gitApi = await _GitService.getBuiltInGitApi();
      if ((gitApi == null ? void 0 : gitApi.openRepository) != null) {
        return (_b = await ((_a = gitApi == null ? void 0 : gitApi.openRepository) == null ? void 0 : _a.call(gitApi, vscode__WEBPACK_IMPORTED_MODULE_2__.Uri.file(repoPath)))) != null ? _b : void 0;
      }
      return (_c = gitApi == null ? void 0 : gitApi.getRepository(vscode__WEBPACK_IMPORTED_MODULE_2__.Uri.file(repoPath))) != null ? _c : void 0;
    } catch (ex) {
      _logger__WEBPACK_IMPORTED_MODULE_8__.Logger.error(ex, cc);
      return void 0;
    }
  }
  static async openBuiltInGitRepository(repoPath) {
    var _a, _b;
    const cc = _logger__WEBPACK_IMPORTED_MODULE_8__.Logger.getCorrelationContext();
    try {
      const gitApi = await _GitService.getBuiltInGitApi();
      return (_b = await ((_a = gitApi == null ? void 0 : gitApi.openRepository) == null ? void 0 : _a.call(gitApi, vscode__WEBPACK_IMPORTED_MODULE_2__.Uri.file(repoPath)))) != null ? _b : void 0;
    } catch (ex) {
      _logger__WEBPACK_IMPORTED_MODULE_8__.Logger.error(ex, cc);
      return void 0;
    }
  }
  static getEncoding(repoPathOrUri, fileName) {
    const uri = typeof repoPathOrUri === "string" ? _gitUri__WEBPACK_IMPORTED_MODULE_14__.GitUri.resolveToUri(fileName, repoPathOrUri) : repoPathOrUri;
    return _git__WEBPACK_IMPORTED_MODULE_13__.Git.getEncoding(_configuration__WEBPACK_IMPORTED_MODULE_4__.configuration.getAny("files.encoding", uri));
  }
};
let GitService = _GitService;
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_10__.debug)()
], GitService.prototype, "onWindowStateChanged", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_10__.log)({
    args: false,
    singleLine: true,
    prefix: (context, folder) => `${context.prefix}(${folder.uri.fsPath})`,
    exit: (result) => `returned ${result.length} repositories${result.length !== 0 ? ` (${result.map((r) => r.path).join(", ")})` : emptyStr}`
  })
], GitService.prototype, "repositorySearch", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_10__.debug)({
    args: {
      0: (root) => root,
      1: (depth) => `${depth}`,
      2: () => false,
      3: () => false
    }
  })
], GitService.prototype, "repositorySearchCore", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_10__.log)()
], GitService.prototype, "addRemote", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_10__.log)()
], GitService.prototype, "pruneRemote", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_10__.log)()
], GitService.prototype, "applyChangesToWorkingFile", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_10__.log)()
], GitService.prototype, "branchContainsCommit", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_10__.log)()
], GitService.prototype, "checkout", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_10__.log)()
], GitService.prototype, "resetCaches", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_10__.log)({
    args: {
      0: (repoPath) => repoPath,
      1: (uris) => `${uris.length}`
    }
  })
], GitService.prototype, "excludeIgnoredUris", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_10__.gate)(),
  (0,_system__WEBPACK_IMPORTED_MODULE_10__.log)()
], GitService.prototype, "fetch", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_10__.gate)((repos, opts) => `${repos == null ? "" : repos.map((r) => r.id).join(",")}|${JSON.stringify(opts)}`),
  (0,_system__WEBPACK_IMPORTED_MODULE_10__.log)({
    args: {
      0: (repos) => repos == null ? false : repos.map((r) => r.name).join(", ")
    }
  })
], GitService.prototype, "fetchAll", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_10__.gate)((repos, opts) => `${repos == null ? "" : repos.map((r) => r.id).join(",")}|${JSON.stringify(opts)}`),
  (0,_system__WEBPACK_IMPORTED_MODULE_10__.log)({
    args: {
      0: (repos) => repos == null ? false : repos.map((r) => r.name).join(", ")
    }
  })
], GitService.prototype, "pullAll", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_10__.gate)((repos) => `${repos == null ? "" : repos.map((r) => r.id).join(",")}`),
  (0,_system__WEBPACK_IMPORTED_MODULE_10__.log)({
    args: {
      0: (repos) => repos == null ? false : repos.map((r) => r.name).join(", ")
    }
  })
], GitService.prototype, "pushAll", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_10__.log)({
    args: {
      0: (editor) => editor != null ? `TextEditor(${_logger__WEBPACK_IMPORTED_MODULE_8__.Logger.toLoggable(editor.document.uri)})` : "undefined"
    }
  })
], GitService.prototype, "getActiveRepository", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_10__.log)({
    args: {
      0: (editor) => editor != null ? `TextEditor(${_logger__WEBPACK_IMPORTED_MODULE_8__.Logger.toLoggable(editor.document.uri)})` : "undefined"
    }
  })
], GitService.prototype, "getActiveRepoPath", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_10__.log)()
], GitService.prototype, "getHighlanderRepoPath", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_10__.log)()
], GitService.prototype, "getBlameForFile", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_10__.log)({
    args: {
      1: (_contents) => "<contents>"
    }
  })
], GitService.prototype, "getBlameForFileContents", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_10__.log)()
], GitService.prototype, "getBlameForLine", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_10__.log)({
    args: {
      2: (_contents) => "<contents>"
    }
  })
], GitService.prototype, "getBlameForLineContents", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_10__.log)()
], GitService.prototype, "getBlameForRange", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_10__.log)({
    args: {
      2: (_contents) => "<contents>"
    }
  })
], GitService.prototype, "getBlameForRangeContents", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_10__.log)({
    args: {
      0: (_blame) => "<blame>"
    }
  })
], GitService.prototype, "getBlameForRangeSync", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_10__.log)()
], GitService.prototype, "getBranch", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_10__.log)({
    args: {
      0: (b) => b.name
    }
  })
], GitService.prototype, "getBranchAheadRange", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_10__.log)({
    args: {
      1: () => false
    }
  })
], GitService.prototype, "getBranches", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_10__.log)({
    args: {
      1: () => false
    }
  })
], GitService.prototype, "getBranchesAndOrTags", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_10__.log)()
], GitService.prototype, "getBranchesAndTagsTipsFn", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_10__.log)()
], GitService.prototype, "getChangedFilesCount", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_10__.log)()
], GitService.prototype, "getCommit", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_10__.log)()
], GitService.prototype, "getCommitBranches", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_10__.log)()
], GitService.prototype, "getAheadBehindCommitCount", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_10__.log)()
], GitService.prototype, "getCommitCount", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_10__.log)()
], GitService.prototype, "getCommitForFile", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_10__.log)()
], GitService.prototype, "getOldestUnpushedRefForFile", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_10__.log)()
], GitService.prototype, "getConfig", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_10__.log)()
], GitService.prototype, "getContributors", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_10__.log)(),
  (0,_system__WEBPACK_IMPORTED_MODULE_10__.gate)()
], GitService.prototype, "getCurrentUser", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_10__.log)()
], GitService.prototype, "getDefaultBranchName", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_10__.log)()
], GitService.prototype, "getDiffForFile", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_10__.log)({
    args: {
      1: (_contents) => "<contents>"
    }
  })
], GitService.prototype, "getDiffForFileContents", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_10__.log)()
], GitService.prototype, "getDiffForLine", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_10__.log)()
], GitService.prototype, "getDiffStatus", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_10__.log)()
], GitService.prototype, "getFileStatusForCommit", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_10__.log)()
], GitService.prototype, "getLog", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_10__.log)()
], GitService.prototype, "getLogRefsOnly", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_10__.log)()
], GitService.prototype, "getLogForSearch", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_10__.log)()
], GitService.prototype, "getLogForFile", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_10__.log)()
], GitService.prototype, "getMergeBase", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_10__.gate)(),
  (0,_system__WEBPACK_IMPORTED_MODULE_10__.log)()
], GitService.prototype, "getMergeStatus", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_10__.gate)(),
  (0,_system__WEBPACK_IMPORTED_MODULE_10__.log)()
], GitService.prototype, "getRebaseStatus", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_10__.log)()
], GitService.prototype, "getNextDiffUris", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_10__.log)()
], GitService.prototype, "getNextUri", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_10__.log)()
], GitService.prototype, "getPreviousDiffUris", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_10__.log)()
], GitService.prototype, "getPreviousLineDiffUris", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_10__.log)()
], GitService.prototype, "getPreviousUri", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_10__.gate)((ref, remoteOrProvider, options) => {
    var _a, _b;
    const provider = _git__WEBPACK_IMPORTED_MODULE_13__.GitRemote.is(remoteOrProvider) ? remoteOrProvider.provider : remoteOrProvider;
    return `${ref}${provider != null ? `|${provider.id}:${provider.domain}/${provider.path}` : ""}${options != null ? `|${(_a = options.limit) != null ? _a : -1}:${(_b = options.include) == null ? void 0 : _b.join(",")}` : ""}`;
  }),
  (0,_system__WEBPACK_IMPORTED_MODULE_10__.debug)({
    args: {
      1: (remoteOrProvider) => remoteOrProvider.name
    }
  })
], GitService.prototype, "getPullRequestForBranch", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_10__.gate)((ref, remoteOrProvider, options) => {
    const provider = _git__WEBPACK_IMPORTED_MODULE_13__.GitRemote.is(remoteOrProvider) ? remoteOrProvider.provider : remoteOrProvider;
    return `${ref}${provider != null ? `|${provider.id}:${provider.domain}/${provider.path}` : ""}|${options == null ? void 0 : options.timeout}`;
  }),
  (0,_system__WEBPACK_IMPORTED_MODULE_10__.debug)({
    args: {
      1: (remoteOrProvider) => remoteOrProvider.name
    }
  })
], GitService.prototype, "getPullRequestForCommit", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_10__.log)()
], GitService.prototype, "getIncomingActivity", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_10__.gate)((remotesOrRepoPath, options) => {
    var _a, _b;
    return `${typeof remotesOrRepoPath === "string" ? remotesOrRepoPath : (_a = remotesOrRepoPath[0]) == null ? void 0 : _a.repoPath}:${(_b = options == null ? void 0 : options.includeDisconnected) != null ? _b : false}`;
  }),
  (0,_system__WEBPACK_IMPORTED_MODULE_10__.log)({ args: { 0: () => false } })
], GitService.prototype, "getRichRemoteProvider", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_10__.log)()
], GitService.prototype, "getRemotes", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_10__.log)({
    exit: (path) => `returned ${path}`
  })
], GitService.prototype, "getRepoPath", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_10__.debug)()
], GitService.prototype, "getRepoPathCore", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_10__.gate)(() => "")
], GitService.prototype, "ensureProperWorkspaceCasing", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_10__.log)()
], GitService.prototype, "getRepoPathOrActive", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_10__.log)()
], GitService.prototype, "getRepositories", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_10__.log)()
], GitService.prototype, "getOrderedRepositories", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_10__.log)({
    exit: (repo) => `returned ${repo != null ? `${repo.path}` : "undefined"}`
  })
], GitService.prototype, "getRepository", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_10__.debug)({
    args: {
      0: (repositoryTree) => `count=${repositoryTree.count()}`
    }
  })
], GitService.prototype, "findRepositoryForPath", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_10__.gate)(),
  (0,_system__WEBPACK_IMPORTED_MODULE_10__.log)()
], GitService.prototype, "getStash", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_10__.log)()
], GitService.prototype, "getStatusForFile", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_10__.log)()
], GitService.prototype, "getStatusForFiles", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_10__.log)()
], GitService.prototype, "getStatusForRepo", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_10__.log)({
    args: {
      1: () => false
    }
  })
], GitService.prototype, "getTags", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_10__.log)()
], GitService.prototype, "getTreeFileForRevision", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_10__.log)()
], GitService.prototype, "getTreeForRevision", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_10__.log)()
], GitService.prototype, "getVersionedFileBuffer", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_10__.log)()
], GitService.prototype, "getVersionedUri", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_10__.log)()
], GitService.prototype, "getWorkingUri", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_10__.log)()
], GitService.prototype, "hasBranchesAndOrTags", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_10__.log)()
], GitService.prototype, "hasRemotes", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_10__.log)()
], GitService.prototype, "hasTrackingBranch", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_10__.log)({
    args: {
      1: (editor) => editor != null ? `TextEditor(${_logger__WEBPACK_IMPORTED_MODULE_8__.Logger.toLoggable(editor.document.uri)})` : "undefined"
    }
  })
], GitService.prototype, "isActiveRepoPath", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_10__.log)({
    exit: (tracked) => `returned ${tracked}`,
    singleLine: true
  })
], GitService.prototype, "isTracked", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_10__.log)()
], GitService.prototype, "getDiffTool", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_10__.log)()
], GitService.prototype, "openDiffTool", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_10__.log)()
], GitService.prototype, "openDirectoryCompare", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_10__.log)()
], GitService.prototype, "resolveReference", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_10__.log)()
], GitService.prototype, "validateBranchOrTagName", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_10__.log)()
], GitService.prototype, "validateReference", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_10__.log)()
], GitService.prototype, "stageFile", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_10__.log)()
], GitService.prototype, "stageDirectory", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_10__.log)()
], GitService.prototype, "unStageFile", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_10__.log)()
], GitService.prototype, "unStageDirectory", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_10__.log)()
], GitService.prototype, "stashApply", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_10__.log)()
], GitService.prototype, "stashDelete", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_10__.log)()
], GitService.prototype, "stashSave", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_10__.log)()
], GitService, "initialize", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_10__.log)()
], GitService, "getBuiltInGitApi", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_10__.log)()
], GitService, "getOrOpenBuiltInGitRepository", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_10__.log)()
], GitService, "openBuiltInGitRepository", 1);


/***/ }),

/***/ "./src/git/gitUri.ts":
/*!***************************!*\
  !*** ./src/git/gitUri.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "GitUri": () => (/* binding */ GitUri)
/* harmony export */ });
/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! path */ "./node_modules/path-browserify/index.js");
/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _comparers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../comparers */ "./src/comparers.ts");
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../constants */ "./src/constants.ts");
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../container */ "./src/container.ts");
/* harmony import */ var _git_git__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../git/git */ "./src/git/git.ts");
/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../logger */ "./src/logger.ts");
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../system */ "./src/system.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};








const emptyStr = "";
const slash = "/";
const _GitUri = class extends vscode__WEBPACK_IMPORTED_MODULE_1__.Uri {
  constructor(uri, commitOrRepoPath) {
    var _a;
    if (uri == null) {
      super("unknown", emptyStr, emptyStr, emptyStr, emptyStr);
      return;
    }
    if (uri.scheme === _constants__WEBPACK_IMPORTED_MODULE_3__.DocumentSchemes.GitLens) {
      const data = JSON.parse(uri.query);
      if (data.path !== uri.path) {
        if (data.path.startsWith("//") && !uri.path.startsWith("//")) {
          data.path = `/${uri.path}`;
        } else {
          data.path = uri.path;
        }
      }
      super({
        scheme: uri.scheme,
        authority: uri.authority,
        path: data.path,
        query: JSON.stringify(data),
        fragment: uri.fragment
      });
      this.repoPath = data.repoPath;
      if (_git_git__WEBPACK_IMPORTED_MODULE_5__.GitRevision.isUncommittedStaged(data.ref) || !_git_git__WEBPACK_IMPORTED_MODULE_5__.GitRevision.isUncommitted(data.ref)) {
        this.sha = data.ref;
      }
      return;
    }
    if (commitOrRepoPath === void 0) {
      super(uri);
      return;
    }
    if (typeof commitOrRepoPath === "string") {
      super(uri);
      this.repoPath = commitOrRepoPath;
      return;
    }
    const [authority, fsPath] = _GitUri.ensureValidUNCPath(uri.authority, _GitUri.resolve((_a = commitOrRepoPath.fileName) != null ? _a : uri.fsPath, commitOrRepoPath.repoPath));
    let path;
    switch (uri.scheme) {
      case "https":
      case "http":
      case "file":
        if (!fsPath) {
          path = slash;
        } else if (!fsPath.startsWith(slash)) {
          path = `/${fsPath}`;
        } else {
          path = fsPath;
        }
        break;
      default:
        path = fsPath;
        break;
    }
    super({
      scheme: uri.scheme,
      authority,
      path,
      query: uri.query,
      fragment: uri.fragment
    });
    __publicField(this, "repoPath");
    __publicField(this, "sha");
    __publicField(this, "versionedPath");
    this.repoPath = commitOrRepoPath.repoPath;
    this.versionedPath = commitOrRepoPath.versionedPath;
    if (_git_git__WEBPACK_IMPORTED_MODULE_5__.GitRevision.isUncommittedStaged(commitOrRepoPath.sha) || !_git_git__WEBPACK_IMPORTED_MODULE_5__.GitRevision.isUncommitted(commitOrRepoPath.sha)) {
      this.sha = commitOrRepoPath.sha;
    }
  }
  static is(uri) {
    return uri instanceof _GitUri;
  }
  get directory() {
    return _GitUri.getDirectory(this.relativeFsPath);
  }
  get fileName() {
    return path__WEBPACK_IMPORTED_MODULE_0__.basename(this.relativeFsPath);
  }
  get isUncommitted() {
    return _git_git__WEBPACK_IMPORTED_MODULE_5__.GitRevision.isUncommitted(this.sha);
  }
  get isUncommittedStaged() {
    return _git_git__WEBPACK_IMPORTED_MODULE_5__.GitRevision.isUncommittedStaged(this.sha);
  }
  get relativeFsPath() {
    return this.repoPath == null || this.repoPath.length === 0 ? this.fsPath : path__WEBPACK_IMPORTED_MODULE_0__.relative(this.repoPath, this.fsPath);
  }
  get relativePath() {
    return _system__WEBPACK_IMPORTED_MODULE_7__.Strings.normalizePath(this.relativeFsPath);
  }
  get shortSha() {
    return _git_git__WEBPACK_IMPORTED_MODULE_5__.GitRevision.shorten(this.sha);
  }
  documentUri({ useVersionedPath } = {}) {
    if (useVersionedPath && this.versionedPath !== void 0)
      return _GitUri.file(this.versionedPath);
    if (this.scheme !== "file")
      return this;
    return _GitUri.file(this.fsPath);
  }
  equals(uri) {
    if (!_comparers__WEBPACK_IMPORTED_MODULE_2__.UriComparer.equals(this, uri))
      return false;
    return this.sha === (_GitUri.is(uri) ? uri.sha : void 0);
  }
  getFormattedFilename(options = {}) {
    return _GitUri.getFormattedFilename(this.fsPath, options);
  }
  getFormattedPath(options = {}) {
    return _GitUri.getFormattedPath(this.fsPath, { relativeTo: this.repoPath, ...options });
  }
  toFileUri() {
    return _GitUri.file(this.fsPath);
  }
  static ensureValidUNCPath(authority, fsPath) {
    if (fsPath[0] === slash && fsPath[1] === slash) {
      const index = fsPath.indexOf(slash, 2);
      if (index === -1) {
        authority = fsPath.substring(2);
        fsPath = slash;
      } else {
        authority = fsPath.substring(2, index);
        fsPath = fsPath.substring(index) || slash;
      }
    }
    return [authority, fsPath];
  }
  static file(path, useVslsScheme) {
    const uri = vscode__WEBPACK_IMPORTED_MODULE_1__.Uri.file(path);
    if (_container__WEBPACK_IMPORTED_MODULE_4__.Container.vsls.isMaybeGuest && useVslsScheme !== false) {
      return uri.with({ scheme: _constants__WEBPACK_IMPORTED_MODULE_3__.DocumentSchemes.Vsls });
    }
    return uri;
  }
  static fromCommit(commit, previous = false) {
    if (!previous)
      return new _GitUri(commit.uri, commit);
    return new _GitUri(commit.previousUri, {
      repoPath: commit.repoPath,
      sha: commit.previousSha
    });
  }
  static fromFile(file, repoPath, ref, original = false) {
    const uri = _GitUri.resolveToUri(typeof file === "string" ? file : original && file.originalFileName || file.fileName, repoPath);
    return ref == null || ref.length === 0 ? new _GitUri(uri, repoPath) : new _GitUri(uri, { repoPath, sha: ref });
  }
  static fromRepoPath(repoPath, ref) {
    return ref == null || ref.length === 0 ? new _GitUri(_GitUri.file(repoPath), repoPath) : new _GitUri(_GitUri.file(repoPath), { repoPath, sha: ref });
  }
  static fromRevisionUri(uri) {
    return new _GitUri(uri);
  }
  static async fromUri(uri) {
    if (_GitUri.is(uri))
      return uri;
    if (!_container__WEBPACK_IMPORTED_MODULE_4__.Container.git.isTrackable(uri))
      return new _GitUri(uri);
    if (uri.scheme === _constants__WEBPACK_IMPORTED_MODULE_3__.DocumentSchemes.GitLens)
      return new _GitUri(uri);
    if (uri.scheme === _constants__WEBPACK_IMPORTED_MODULE_3__.DocumentSchemes.Git) {
      try {
        const data = JSON.parse(uri.query);
        const repoPath = await _container__WEBPACK_IMPORTED_MODULE_4__.Container.git.getRepoPath(data.path);
        let ref;
        switch (data.ref) {
          case emptyStr:
          case "~":
            ref = _git_git__WEBPACK_IMPORTED_MODULE_5__.GitRevision.uncommittedStaged;
            break;
          case null:
            ref = void 0;
            break;
          default:
            ref = data.ref;
            break;
        }
        const commitish = {
          fileName: data.path,
          repoPath,
          sha: ref
        };
        return new _GitUri(uri, commitish);
      } catch {
      }
    }
    if (uri.scheme === _constants__WEBPACK_IMPORTED_MODULE_3__.DocumentSchemes.PRs) {
      try {
        const data = JSON.parse(uri.query);
        let repoPath = _system__WEBPACK_IMPORTED_MODULE_7__.Strings.normalizePath(uri.fsPath);
        if (repoPath.endsWith(data.fileName)) {
          repoPath = repoPath.substr(0, repoPath.length - data.fileName.length - 1);
        } else {
          repoPath = await _container__WEBPACK_IMPORTED_MODULE_4__.Container.git.getRepoPath(uri.fsPath);
        }
        const commitish = {
          fileName: data.fileName,
          repoPath,
          sha: data.isBase ? data.baseCommit : data.headCommit
        };
        return new _GitUri(uri, commitish);
      } catch {
      }
    }
    return new _GitUri(uri, await _container__WEBPACK_IMPORTED_MODULE_4__.Container.git.getRepoPath(uri));
  }
  static getDirectory(fileName, relativeTo) {
    let directory = path__WEBPACK_IMPORTED_MODULE_0__.dirname(fileName);
    directory = relativeTo != null ? _GitUri.relativeTo(directory, relativeTo) : _system__WEBPACK_IMPORTED_MODULE_7__.Strings.normalizePath(directory);
    return directory == null || directory.length === 0 || directory === "." ? emptyStr : directory;
  }
  static getFormattedFilename(fileNameOrUri, options = {}) {
    const { suffix = emptyStr, truncateTo } = options;
    let fileName;
    if (fileNameOrUri instanceof vscode__WEBPACK_IMPORTED_MODULE_1__.Uri) {
      fileName = fileNameOrUri.fsPath;
    } else {
      fileName = fileNameOrUri;
    }
    let file = path__WEBPACK_IMPORTED_MODULE_0__.basename(fileName);
    if (truncateTo != null && file.length >= truncateTo) {
      return _system__WEBPACK_IMPORTED_MODULE_7__.Strings.truncateMiddle(file, truncateTo);
    }
    if (suffix) {
      if (truncateTo != null && file.length + suffix.length >= truncateTo) {
        return `${_system__WEBPACK_IMPORTED_MODULE_7__.Strings.truncateMiddle(file, truncateTo - suffix.length)}${suffix}`;
      }
      file += suffix;
    }
    return file;
  }
  static getFormattedPath(fileNameOrUri, options) {
    const { relativeTo, suffix = emptyStr, truncateTo } = options;
    let fileName;
    if (fileNameOrUri instanceof vscode__WEBPACK_IMPORTED_MODULE_1__.Uri) {
      fileName = fileNameOrUri.fsPath;
    } else {
      fileName = fileNameOrUri;
    }
    let file = path__WEBPACK_IMPORTED_MODULE_0__.basename(fileName);
    if (truncateTo != null && file.length >= truncateTo) {
      return _system__WEBPACK_IMPORTED_MODULE_7__.Strings.truncateMiddle(file, truncateTo);
    }
    if (suffix) {
      if (truncateTo != null && file.length + suffix.length >= truncateTo) {
        return `${_system__WEBPACK_IMPORTED_MODULE_7__.Strings.truncateMiddle(file, truncateTo - suffix.length)}${suffix}`;
      }
      file += suffix;
    }
    const directory = _GitUri.getDirectory(fileName, relativeTo);
    if (!directory)
      return file;
    file = `/${file}`;
    if (truncateTo != null && file.length + directory.length >= truncateTo) {
      return `${_system__WEBPACK_IMPORTED_MODULE_7__.Strings.truncateLeft(directory, truncateTo - file.length)}${file}`;
    }
    return `${directory}${file}`;
  }
  static relativeTo(fileNameOrUri, relativeTo) {
    const fileName = fileNameOrUri instanceof vscode__WEBPACK_IMPORTED_MODULE_1__.Uri ? fileNameOrUri.fsPath : fileNameOrUri;
    const relativePath = relativeTo == null || relativeTo.length === 0 || !path__WEBPACK_IMPORTED_MODULE_0__.isAbsolute(fileName) ? fileName : path__WEBPACK_IMPORTED_MODULE_0__.relative(relativeTo, fileName);
    return _system__WEBPACK_IMPORTED_MODULE_7__.Strings.normalizePath(relativePath);
  }
  static git(fileName, repoPath) {
    const path = _GitUri.resolve(fileName, repoPath);
    return vscode__WEBPACK_IMPORTED_MODULE_1__.Uri.parse(`${_constants__WEBPACK_IMPORTED_MODULE_3__.DocumentSchemes.Git}:/${encodeURIComponent(path).replace(/%2F/g, slash)}?${encodeURIComponent(JSON.stringify({
      path: vscode__WEBPACK_IMPORTED_MODULE_1__.Uri.file(path).fsPath,
      ref: "~"
    }))}`);
  }
  static resolve(fileName, repoPath) {
    const normalizedFileName = _system__WEBPACK_IMPORTED_MODULE_7__.Strings.normalizePath(fileName);
    if (repoPath === void 0)
      return normalizedFileName;
    const normalizedRepoPath = _system__WEBPACK_IMPORTED_MODULE_7__.Strings.normalizePath(repoPath);
    if (normalizedFileName == null || normalizedFileName.length === 0)
      return normalizedRepoPath;
    if (normalizedFileName.startsWith(normalizedRepoPath))
      return normalizedFileName;
    return _system__WEBPACK_IMPORTED_MODULE_7__.Strings.normalizePath(path__WEBPACK_IMPORTED_MODULE_0__.join(normalizedRepoPath, normalizedFileName));
  }
  static resolveToUri(fileName, repoPath) {
    return _GitUri.file(this.resolve(fileName, repoPath));
  }
  static toKey(fileNameOrUri) {
    return _system__WEBPACK_IMPORTED_MODULE_7__.Strings.normalizePath(typeof fileNameOrUri === "string" ? fileNameOrUri : fileNameOrUri.fsPath);
  }
  static toRevisionUri(uriOrRef, fileNameOrFile, repoPath) {
    var _a;
    let fileName;
    let ref;
    let shortSha;
    if (typeof uriOrRef === "string") {
      if (typeof fileNameOrFile === "string") {
        fileName = fileNameOrFile;
      } else {
        fileName = _GitUri.resolve((_a = fileNameOrFile.originalFileName) != null ? _a : fileNameOrFile.fileName, repoPath);
      }
      ref = uriOrRef;
      shortSha = _git_git__WEBPACK_IMPORTED_MODULE_5__.GitRevision.shorten(ref);
    } else {
      fileName = uriOrRef.fsPath;
      ref = uriOrRef.sha;
      shortSha = uriOrRef.shortSha;
      repoPath = uriOrRef.repoPath;
    }
    if (ref == null || ref.length === 0) {
      return vscode__WEBPACK_IMPORTED_MODULE_1__.Uri.file(fileName);
    }
    if (_git_git__WEBPACK_IMPORTED_MODULE_5__.GitRevision.isUncommitted(ref)) {
      return _git_git__WEBPACK_IMPORTED_MODULE_5__.GitRevision.isUncommittedStaged(ref) ? _GitUri.git(fileName, repoPath) : vscode__WEBPACK_IMPORTED_MODULE_1__.Uri.file(fileName);
    }
    const filePath = _system__WEBPACK_IMPORTED_MODULE_7__.Strings.normalizePath(fileName, { addLeadingSlash: true });
    const data = {
      path: filePath,
      ref,
      repoPath: _system__WEBPACK_IMPORTED_MODULE_7__.Strings.normalizePath(repoPath)
    };
    const uri = vscode__WEBPACK_IMPORTED_MODULE_1__.Uri.parse(`${_constants__WEBPACK_IMPORTED_MODULE_3__.DocumentSchemes.GitLens}://${encodeURIComponent(shortSha.replace(/\//g, "\u200A\u2215\u200A"))}${filePath === slash ? emptyStr : encodeURIComponent(filePath).replace(/%2F/g, slash)}?${encodeURIComponent(JSON.stringify(data))}`);
    return uri;
  }
};
let GitUri = _GitUri;
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_7__.memoize)()
], GitUri.prototype, "directory", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_7__.memoize)()
], GitUri.prototype, "fileName", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_7__.memoize)()
], GitUri.prototype, "isUncommitted", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_7__.memoize)()
], GitUri.prototype, "isUncommittedStaged", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_7__.memoize)()
], GitUri.prototype, "relativeFsPath", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_7__.memoize)()
], GitUri.prototype, "relativePath", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_7__.memoize)()
], GitUri.prototype, "shortSha", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_7__.memoize)((options) => `${(options == null ? void 0 : options.useVersionedPath) ? "versioned" : ""}`)
], GitUri.prototype, "documentUri", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_7__.memoize)()
], GitUri.prototype, "toFileUri", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_7__.debug)({
    exit: (uri) => `returned ${_logger__WEBPACK_IMPORTED_MODULE_6__.Logger.toLoggable(uri)}`
  })
], GitUri, "fromUri", 1);


/***/ }),

/***/ "./src/git/githubGitService.ts":
/*!*************************************!*\
  !*** ./src/git/githubGitService.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "GitHubGitService": () => (/* binding */ GitHubGitService)
/* harmony export */ });
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../constants */ "./src/constants.ts");
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../container */ "./src/container.ts");
/* harmony import */ var _extension__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../extension */ "./src/extension.ts");
/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../logger */ "./src/logger.ts");
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../system */ "./src/system.ts");
/* harmony import */ var _gitUri__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./gitUri */ "./src/git/gitUri.ts");
/* harmony import */ var _models_models__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./models/models */ "./src/git/models/models.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};








const validBranchOrTagRegex = /^[^/](?!.*\/\.)(?!.*\.\.)(?!.*\/\/)(?!.*@\{)[^\000-\037\177 ~^:?*[\\]+[^./]$/;
class GitHubGitService {
  constructor() {
    __publicField(this, "_onDidChangeRepositories", new vscode__WEBPACK_IMPORTED_MODULE_0__.EventEmitter());
    __publicField(this, "_disposable");
    __publicField(this, "_repositories", new Map());
    this._disposable = vscode__WEBPACK_IMPORTED_MODULE_0__.Disposable.from(vscode__WEBPACK_IMPORTED_MODULE_0__.workspace.onDidChangeWorkspaceFolders(this.onWorkspaceFoldersChanged, this));
    void this.onWorkspaceFoldersChanged();
  }
  get onDidChangeRepositories() {
    return this._onDidChangeRepositories.event;
  }
  async getRemoteHubApi() {
    var _a;
    try {
      const extension = (_a = vscode__WEBPACK_IMPORTED_MODULE_0__.extensions.getExtension("GitHub.remotehub")) != null ? _a : vscode__WEBPACK_IMPORTED_MODULE_0__.extensions.getExtension("GitHub.remotehub-insiders");
      if (extension != null) {
        const api = extension.isActive ? extension.exports : await extension.activate();
        return api;
      }
    } catch {
    }
    return void 0;
  }
  dispose() {
    this._disposable.dispose();
  }
  async onWorkspaceFoldersChanged(e) {
    var _a;
    let initializing = false;
    if (e == null) {
      initializing = true;
      e = {
        added: (_a = vscode__WEBPACK_IMPORTED_MODULE_0__.workspace.workspaceFolders) != null ? _a : [],
        removed: []
      };
      _logger__WEBPACK_IMPORTED_MODULE_4__.Logger.log(`Starting repository search in ${e.added.length} folders`);
    }
    const virtualApi = await this.getRemoteHubApi();
    for (const f of e.added) {
      const { scheme } = f.uri;
      if (scheme !== _constants__WEBPACK_IMPORTED_MODULE_1__.DocumentSchemes.VirtualFile)
        continue;
      const metadata = await (virtualApi == null ? void 0 : virtualApi.getMetadata(f.uri));
      if ((metadata == null ? void 0 : metadata.provider.id) === "github") {
        this._repositories.set(f.uri.toString(), metadata);
      }
    }
    for (const f of e.removed) {
      const { scheme } = f.uri;
      if (scheme !== _constants__WEBPACK_IMPORTED_MODULE_1__.DocumentSchemes.VirtualFile)
        continue;
      const metadata = await (virtualApi == null ? void 0 : virtualApi.getMetadata(f.uri));
      if ((metadata == null ? void 0 : metadata.provider.id) === "github") {
        this._repositories.delete(f.uri.toString());
      }
    }
    await this.updateContext();
    if (!initializing) {
      setImmediate(() => this.fireRepositoriesChanged());
    }
  }
  async updateContext() {
    const hasRepository = this._repositories.size > 0;
    await (0,_extension__WEBPACK_IMPORTED_MODULE_3__.setEnabled)(hasRepository);
    async function updateRemoteContext() {
      const hasRemotes = true;
      const hasRichRemotes = true;
      const hasConnectedRemotes = true;
      await Promise.all([
        (0,_constants__WEBPACK_IMPORTED_MODULE_1__.setContext)(_constants__WEBPACK_IMPORTED_MODULE_1__.ContextKeys.HasRemotes, hasRemotes),
        (0,_constants__WEBPACK_IMPORTED_MODULE_1__.setContext)(_constants__WEBPACK_IMPORTED_MODULE_1__.ContextKeys.HasRichRemotes, hasRichRemotes),
        (0,_constants__WEBPACK_IMPORTED_MODULE_1__.setContext)(_constants__WEBPACK_IMPORTED_MODULE_1__.ContextKeys.HasConnectedRemotes, hasConnectedRemotes)
      ]);
    }
    void updateRemoteContext();
  }
  fireRepositoriesChanged() {
    this._onDidChangeRepositories.fire();
  }
  static async initialize() {
  }
  get readonly() {
    return false;
  }
  get useCaching() {
    return _container__WEBPACK_IMPORTED_MODULE_2__.Container.config.advanced.caching.enabled;
  }
  addRemote(repoPath, name, url) {
    return Promise.resolve("");
  }
  pruneRemote(repoPath, remoteName) {
    return Promise.resolve("");
  }
  async applyChangesToWorkingFile(uri, ref1, ref2) {
  }
  async branchContainsCommit(repoPath, name, ref) {
    return false;
  }
  async checkout(repoPath, ref, options = {}) {
    return void 0;
  }
  async resetCaches(...cache) {
  }
  async excludeIgnoredUris(repoPath, uris) {
    return uris;
  }
  async fetch(repoPath, options = {}) {
  }
  async fetchAll(repositories, options = {}) {
  }
  async pullAll(repositories, options = {}) {
  }
  async pushAll(repositories, options = {}) {
  }
  async getActiveRepository(editor) {
    const repoPath = await this.getActiveRepoPath(editor);
    if (repoPath == null)
      return void 0;
    return this.getRepository(repoPath);
  }
  async getActiveRepoPath(editor) {
    return void 0;
  }
  getHighlanderRepoPath() {
    return void 0;
  }
  async getBlameForFile(uri) {
    return void 0;
  }
  async getBlameForFileContents(uri, contents) {
    return void 0;
  }
  async getBlameForFileContentsCore(uri, contents, document, key, cc) {
    return void 0;
  }
  async getBlameForLine(uri, editorLine, options = {}) {
    return void 0;
  }
  async getBlameForLineContents(uri, editorLine, contents, options = {}) {
    return void 0;
  }
  async getBlameForRange(uri, range) {
    return void 0;
  }
  async getBlameForRangeContents(uri, range, contents) {
    return void 0;
  }
  getBlameForRangeSync(blame, uri, range) {
    return void 0;
  }
  async getBranch(repoPath) {
    return void 0;
  }
  async getBranchAheadRange(branch) {
    return void 0;
  }
  async getBranches(repoPath, options = {}) {
    return [];
  }
  async getBranchesAndOrTags(repoPath, {
    filter,
    include,
    sort,
    ...options
  } = {}) {
    return void 0;
  }
  async getBranchesAndTagsTipsFn(repoPath, currentName) {
    return (sha, options) => {
      return void 0;
    };
  }
  async getChangedFilesCount(repoPath, ref) {
    return void 0;
  }
  async getCommit(repoPath, ref) {
    return void 0;
  }
  async getCommitBranches(repoPath, ref, options) {
    return [];
  }
  async getAheadBehindCommitCount(repoPath, refs) {
    return void 0;
  }
  async getCommitCount(repoPath, ref) {
    return void 0;
  }
  async getCommitForFile(repoPath, fileName, options = {}) {
    return void 0;
  }
  async getOldestUnpushedRefForFile(repoPath, fileName) {
    return void 0;
  }
  async getConfig(key, repoPath) {
    return void 0;
  }
  async getContributors(repoPath, options) {
    return [];
  }
  async getCurrentUser(repoPath) {
    return void 0;
  }
  async getDefaultBranchName(repoPath, remote) {
    return void 0;
  }
  async getDiffForFile(uri, ref1, ref2, originalFileName) {
    return void 0;
  }
  async getDiffForFileContents(uri, ref, contents, originalFileName) {
    return void 0;
  }
  async getDiffForLine(uri, editorLine, ref1, ref2, originalFileName) {
    return void 0;
  }
  async getDiffStatus(repoPath, ref1, ref2, options = {}) {
    return void 0;
  }
  async getFileStatusForCommit(repoPath, fileName, ref) {
    return void 0;
  }
  async getLog(repoPath, {
    ref,
    ...options
  } = {}) {
    return void 0;
  }
  async getLogRefsOnly(repoPath, {
    ref,
    ...options
  } = {}) {
    return void 0;
  }
  async getLogForSearch(repoPath, search, options = {}) {
    return void 0;
  }
  async getLogForFile(repoPath, fileName, options = {}) {
    return void 0;
  }
  async getMergeBase(repoPath, ref1, ref2, options = {}) {
    return void 0;
  }
  async getMergeStatus(repoPath) {
    return void 0;
  }
  async getRebaseStatus(repoPath) {
    return void 0;
  }
  async getNextDiffUris(repoPath, uri, ref, skip = 0) {
    return void 0;
  }
  async getNextUri(repoPath, uri, ref, skip = 0) {
    return void 0;
  }
  async getPreviousDiffUris(repoPath, uri, ref, skip = 0, firstParent = false) {
    return void 0;
  }
  async getPreviousLineDiffUris(repoPath, uri, editorLine, ref, skip = 0) {
    return void 0;
  }
  async getPreviousUri(repoPath, uri, ref, skip = 0, editorLine, firstParent = false) {
    return void 0;
  }
  async getPullRequestForBranch(branch, remoteOrProvider, {
    timeout,
    ...options
  } = {}) {
    return void 0;
  }
  async getPullRequestForCommit(ref, remoteOrProvider, { timeout } = {}) {
    return void 0;
  }
  async getIncomingActivity(repoPath, {
    limit,
    ...options
  } = {}) {
    return void 0;
  }
  async getRichRemoteProvider(remotesOrRepoPath, { includeDisconnected } = {}) {
    return void 0;
  }
  async getRemotes(repoPath, options = {}) {
    return [];
  }
  async getRemotesCore(repoPath, providers, options = {}) {
    return [];
  }
  async getRepoPath(filePathOrUri, options = {}) {
    return void 0;
  }
  async getRepoPathOrActive(uri, editor) {
    return void 0;
  }
  async getRepositories(predicate) {
    return [];
  }
  async getOrderedRepositories() {
    return [];
  }
  async getRepository(repoPathOrUri, options = {}) {
    return void 0;
  }
  async getLocalInfoFromRemoteUri(uri, options) {
    var _a;
    for (const repo of await this.getRepositories()) {
      for (const remote of await repo.getRemotes()) {
        const local = await ((_a = remote == null ? void 0 : remote.provider) == null ? void 0 : _a.getLocalInfoFromRemoteUri(repo, uri, options));
        if (local != null)
          return local;
      }
    }
    return void 0;
  }
  async getRepositoryCount() {
    return 0;
  }
  async getStash(repoPath) {
    return void 0;
  }
  async getStatusForFile(repoPath, fileName) {
    return void 0;
  }
  async getStatusForFiles(repoPath, path) {
    return void 0;
  }
  async getStatusForRepo(repoPath) {
    return void 0;
  }
  async getTags(repoPath, options = {}) {
    return [];
  }
  async getTreeFileForRevision(repoPath, fileName, ref) {
    return void 0;
  }
  async getTreeForRevision(repoPath, ref) {
    return [];
  }
  async getVersionedFileBuffer(repoPath, fileName, ref) {
    return void 0;
  }
  async getVersionedUri(repoPath, fileName, ref) {
    return void 0;
  }
  async getWorkingUri(repoPath, uri) {
    return void 0;
  }
  async hasBranchesAndOrTags(repoPath, {
    filter
  } = {}) {
    const [branches, tags] = await Promise.all([
      this.getBranches(repoPath, {
        filter: filter == null ? void 0 : filter.branches,
        sort: false
      }),
      this.getTags(repoPath, {
        filter: filter == null ? void 0 : filter.tags,
        sort: false
      })
    ]);
    return branches != null && branches.length !== 0 || tags != null && tags.length !== 0;
  }
  async hasRemotes(repoPath) {
    if (repoPath == null)
      return false;
    const repository = await this.getRepository(repoPath);
    if (repository == null)
      return false;
    return repository.hasRemotes();
  }
  async hasTrackingBranch(repoPath) {
    if (repoPath == null)
      return false;
    const repository = await this.getRepository(repoPath);
    if (repository == null)
      return false;
    return repository.hasUpstreamBranch();
  }
  async isActiveRepoPath(repoPath, editor) {
    if (repoPath == null)
      return false;
    editor = editor != null ? editor : vscode__WEBPACK_IMPORTED_MODULE_0__.window.activeTextEditor;
    if (editor == null)
      return false;
    const doc = await _container__WEBPACK_IMPORTED_MODULE_2__.Container.tracker.getOrAdd(editor.document.uri);
    return repoPath === (doc == null ? void 0 : doc.uri.repoPath);
  }
  isTrackable(schemeOruri) {
    const scheme = typeof schemeOruri === "string" ? schemeOruri : schemeOruri.scheme;
    return scheme === _constants__WEBPACK_IMPORTED_MODULE_1__.DocumentSchemes.File || scheme === _constants__WEBPACK_IMPORTED_MODULE_1__.DocumentSchemes.Git || scheme === _constants__WEBPACK_IMPORTED_MODULE_1__.DocumentSchemes.GitLens || scheme === _constants__WEBPACK_IMPORTED_MODULE_1__.DocumentSchemes.PRs || scheme === _constants__WEBPACK_IMPORTED_MODULE_1__.DocumentSchemes.VirtualFile || scheme === _constants__WEBPACK_IMPORTED_MODULE_1__.DocumentSchemes.Vsls;
  }
  async isTracked(fileNameOrUri, repoPath, options = {}) {
    if (options.ref === _models_models__WEBPACK_IMPORTED_MODULE_7__.GitRevision.deletedOrMissing)
      return false;
    let ref = options.ref;
    let cacheKey;
    let fileName;
    if (typeof fileNameOrUri === "string") {
      [fileName, repoPath] = _system__WEBPACK_IMPORTED_MODULE_5__.Paths.splitPath(fileNameOrUri, repoPath);
      cacheKey = _gitUri__WEBPACK_IMPORTED_MODULE_6__.GitUri.toKey(fileNameOrUri);
    } else {
      if (!this.isTrackable(fileNameOrUri))
        return false;
      fileName = fileNameOrUri.fsPath;
      repoPath = fileNameOrUri.repoPath;
      ref = fileNameOrUri.sha;
      cacheKey = _gitUri__WEBPACK_IMPORTED_MODULE_6__.GitUri.toKey(fileName);
    }
    if (ref != null) {
      cacheKey += `:${ref}`;
    }
    const tracked = this.isTrackedCore(fileName, repoPath == null ? "" : repoPath, ref);
    return tracked;
  }
  async isTrackedCore(fileName, repoPath, ref) {
    return false;
  }
  async getDiffTool(repoPath) {
    return void 0;
  }
  async openDiffTool(repoPath, uri, options = {}) {
  }
  async openDirectoryCompare(repoPath, ref1, ref2, tool) {
  }
  async resolveReference(repoPath, ref, fileNameOrUri, options) {
    return ref;
  }
  async validateBranchOrTagName(ref, repoPath) {
    return validBranchOrTagRegex.test(ref);
  }
  async validateReference(repoPath, ref) {
    return true;
  }
  stageFile(repoPath, fileNameOrUri) {
    return Promise.resolve("");
  }
  stageDirectory(repoPath, directoryOrUri) {
    return Promise.resolve("");
  }
  unStageFile(repoPath, fileNameOrUri) {
    return Promise.resolve("");
  }
  unStageDirectory(repoPath, directoryOrUri) {
    return Promise.resolve("");
  }
  async stashApply(repoPath, stashName, { deleteAfter } = {}) {
    return void 0;
  }
  async stashDelete(repoPath, stashName, ref) {
    return void 0;
  }
  async stashSave(repoPath, message, uris, options = {}) {
  }
}
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.log)()
], GitHubGitService.prototype, "addRemote", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.log)()
], GitHubGitService.prototype, "pruneRemote", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.log)()
], GitHubGitService.prototype, "applyChangesToWorkingFile", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.log)()
], GitHubGitService.prototype, "branchContainsCommit", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.log)()
], GitHubGitService.prototype, "checkout", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.log)()
], GitHubGitService.prototype, "resetCaches", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.log)({
    args: {
      0: (repoPath) => repoPath,
      1: (uris) => `${uris.length}`
    }
  })
], GitHubGitService.prototype, "excludeIgnoredUris", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.gate)(),
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.log)()
], GitHubGitService.prototype, "fetch", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.gate)((repos, opts) => `${repos == null ? "" : repos.map((r) => r.id).join(",")}|${JSON.stringify(opts)}`),
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.log)({
    args: {
      0: (repos) => repos == null ? false : repos.map((r) => r.name).join(", ")
    }
  })
], GitHubGitService.prototype, "fetchAll", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.gate)((repos, opts) => `${repos == null ? "" : repos.map((r) => r.id).join(",")}|${JSON.stringify(opts)}`),
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.log)({
    args: {
      0: (repos) => repos == null ? false : repos.map((r) => r.name).join(", ")
    }
  })
], GitHubGitService.prototype, "pullAll", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.gate)((repos) => `${repos == null ? "" : repos.map((r) => r.id).join(",")}`),
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.log)({
    args: {
      0: (repos) => repos == null ? false : repos.map((r) => r.name).join(", ")
    }
  })
], GitHubGitService.prototype, "pushAll", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.log)({
    args: {
      0: (editor) => editor != null ? `TextEditor(${_logger__WEBPACK_IMPORTED_MODULE_4__.Logger.toLoggable(editor.document.uri)})` : "undefined"
    }
  })
], GitHubGitService.prototype, "getActiveRepository", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.log)({
    args: {
      0: (editor) => editor != null ? `TextEditor(${_logger__WEBPACK_IMPORTED_MODULE_4__.Logger.toLoggable(editor.document.uri)})` : "undefined"
    }
  })
], GitHubGitService.prototype, "getActiveRepoPath", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.log)()
], GitHubGitService.prototype, "getHighlanderRepoPath", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.log)()
], GitHubGitService.prototype, "getBlameForFile", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.log)({
    args: {
      1: (_contents) => "<contents>"
    }
  })
], GitHubGitService.prototype, "getBlameForFileContents", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.log)()
], GitHubGitService.prototype, "getBlameForLine", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.log)({
    args: {
      2: (_contents) => "<contents>"
    }
  })
], GitHubGitService.prototype, "getBlameForLineContents", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.log)()
], GitHubGitService.prototype, "getBlameForRange", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.log)({
    args: {
      2: (_contents) => "<contents>"
    }
  })
], GitHubGitService.prototype, "getBlameForRangeContents", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.log)({
    args: {
      0: (_blame) => "<blame>"
    }
  })
], GitHubGitService.prototype, "getBlameForRangeSync", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.log)()
], GitHubGitService.prototype, "getBranch", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.log)({
    args: {
      0: (b) => b.name
    }
  })
], GitHubGitService.prototype, "getBranchAheadRange", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.log)({
    args: {
      1: () => false
    }
  })
], GitHubGitService.prototype, "getBranches", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.log)({
    args: {
      1: () => false
    }
  })
], GitHubGitService.prototype, "getBranchesAndOrTags", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.log)()
], GitHubGitService.prototype, "getBranchesAndTagsTipsFn", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.log)()
], GitHubGitService.prototype, "getChangedFilesCount", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.log)()
], GitHubGitService.prototype, "getCommit", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.log)()
], GitHubGitService.prototype, "getCommitBranches", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.log)()
], GitHubGitService.prototype, "getAheadBehindCommitCount", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.log)()
], GitHubGitService.prototype, "getCommitCount", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.log)()
], GitHubGitService.prototype, "getCommitForFile", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.log)()
], GitHubGitService.prototype, "getOldestUnpushedRefForFile", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.log)()
], GitHubGitService.prototype, "getConfig", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.log)()
], GitHubGitService.prototype, "getContributors", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.log)(),
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.gate)()
], GitHubGitService.prototype, "getCurrentUser", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.log)()
], GitHubGitService.prototype, "getDefaultBranchName", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.log)()
], GitHubGitService.prototype, "getDiffForFile", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.log)({
    args: {
      1: (_contents) => "<contents>"
    }
  })
], GitHubGitService.prototype, "getDiffForFileContents", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.log)()
], GitHubGitService.prototype, "getDiffForLine", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.log)()
], GitHubGitService.prototype, "getDiffStatus", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.log)()
], GitHubGitService.prototype, "getFileStatusForCommit", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.log)()
], GitHubGitService.prototype, "getLog", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.log)()
], GitHubGitService.prototype, "getLogRefsOnly", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.log)()
], GitHubGitService.prototype, "getLogForSearch", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.log)()
], GitHubGitService.prototype, "getLogForFile", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.log)()
], GitHubGitService.prototype, "getMergeBase", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.gate)(),
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.log)()
], GitHubGitService.prototype, "getMergeStatus", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.gate)(),
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.log)()
], GitHubGitService.prototype, "getRebaseStatus", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.log)()
], GitHubGitService.prototype, "getNextDiffUris", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.log)()
], GitHubGitService.prototype, "getNextUri", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.log)()
], GitHubGitService.prototype, "getPreviousDiffUris", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.log)()
], GitHubGitService.prototype, "getPreviousLineDiffUris", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.log)()
], GitHubGitService.prototype, "getPreviousUri", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.gate)((ref, remoteOrProvider, options) => {
    var _a, _b;
    const provider = _models_models__WEBPACK_IMPORTED_MODULE_7__.GitRemote.is(remoteOrProvider) ? remoteOrProvider.provider : remoteOrProvider;
    return `${ref}${provider != null ? `|${provider.id}:${provider.domain}/${provider.path}` : ""}${options != null ? `|${(_a = options.limit) != null ? _a : -1}:${(_b = options.include) == null ? void 0 : _b.join(",")}` : ""}`;
  }),
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.debug)({
    args: {
      1: (remoteOrProvider) => remoteOrProvider.name
    }
  })
], GitHubGitService.prototype, "getPullRequestForBranch", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.gate)((ref, remoteOrProvider, options) => {
    const provider = _models_models__WEBPACK_IMPORTED_MODULE_7__.GitRemote.is(remoteOrProvider) ? remoteOrProvider.provider : remoteOrProvider;
    return `${ref}${provider != null ? `|${provider.id}:${provider.domain}/${provider.path}` : ""}|${options == null ? void 0 : options.timeout}`;
  }),
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.debug)({
    args: {
      1: (remoteOrProvider) => remoteOrProvider.name
    }
  })
], GitHubGitService.prototype, "getPullRequestForCommit", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.log)()
], GitHubGitService.prototype, "getIncomingActivity", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.gate)((remotesOrRepoPath, options) => {
    var _a, _b;
    return `${typeof remotesOrRepoPath === "string" ? remotesOrRepoPath : (_a = remotesOrRepoPath[0]) == null ? void 0 : _a.repoPath}:${(_b = options == null ? void 0 : options.includeDisconnected) != null ? _b : false}`;
  }),
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.log)({ args: { 0: () => false } })
], GitHubGitService.prototype, "getRichRemoteProvider", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.log)()
], GitHubGitService.prototype, "getRemotes", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.log)({
    exit: (path) => `returned ${path}`
  })
], GitHubGitService.prototype, "getRepoPath", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.log)()
], GitHubGitService.prototype, "getRepoPathOrActive", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.log)()
], GitHubGitService.prototype, "getRepositories", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.log)()
], GitHubGitService.prototype, "getOrderedRepositories", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.log)({
    exit: (repo) => `returned ${repo != null ? `${repo.path}` : "undefined"}`
  })
], GitHubGitService.prototype, "getRepository", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.gate)(),
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.log)()
], GitHubGitService.prototype, "getStash", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.log)()
], GitHubGitService.prototype, "getStatusForFile", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.log)()
], GitHubGitService.prototype, "getStatusForFiles", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.log)()
], GitHubGitService.prototype, "getStatusForRepo", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.log)({
    args: {
      1: () => false
    }
  })
], GitHubGitService.prototype, "getTags", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.log)()
], GitHubGitService.prototype, "getTreeFileForRevision", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.log)()
], GitHubGitService.prototype, "getTreeForRevision", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.log)()
], GitHubGitService.prototype, "getVersionedFileBuffer", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.log)()
], GitHubGitService.prototype, "getVersionedUri", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.log)()
], GitHubGitService.prototype, "getWorkingUri", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.log)()
], GitHubGitService.prototype, "hasBranchesAndOrTags", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.log)()
], GitHubGitService.prototype, "hasRemotes", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.log)()
], GitHubGitService.prototype, "hasTrackingBranch", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.log)({
    args: {
      1: (editor) => editor != null ? `TextEditor(${_logger__WEBPACK_IMPORTED_MODULE_4__.Logger.toLoggable(editor.document.uri)})` : "undefined"
    }
  })
], GitHubGitService.prototype, "isActiveRepoPath", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.log)({
    exit: (tracked) => `returned ${tracked}`,
    singleLine: true
  })
], GitHubGitService.prototype, "isTracked", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.log)()
], GitHubGitService.prototype, "getDiffTool", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.log)()
], GitHubGitService.prototype, "openDiffTool", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.log)()
], GitHubGitService.prototype, "openDirectoryCompare", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.log)()
], GitHubGitService.prototype, "resolveReference", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.log)()
], GitHubGitService.prototype, "validateBranchOrTagName", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.log)()
], GitHubGitService.prototype, "validateReference", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.log)()
], GitHubGitService.prototype, "stageFile", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.log)()
], GitHubGitService.prototype, "stageDirectory", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.log)()
], GitHubGitService.prototype, "unStageFile", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.log)()
], GitHubGitService.prototype, "unStageDirectory", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.log)()
], GitHubGitService.prototype, "stashApply", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.log)()
], GitHubGitService.prototype, "stashDelete", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.log)()
], GitHubGitService.prototype, "stashSave", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.log)()
], GitHubGitService, "initialize", 1);


/***/ }),

/***/ "./src/git/locator.ts":
/*!****************************!*\
  !*** ./src/git/locator.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "UnableToFindGitError": () => (/* binding */ UnableToFindGitError),
/* harmony export */   "InvalidGitConfigError": () => (/* binding */ InvalidGitConfigError),
/* harmony export */   "findGitPath": () => (/* binding */ findGitPath)
/* harmony export */ });
/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! path */ "./node_modules/path-browserify/index.js");
/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _shell__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./shell */ "./src/git/shell.ts");



class UnableToFindGitError extends Error {
  constructor(original) {
    super("Unable to find git");
    this.original = original;
    Error.captureStackTrace(this, UnableToFindGitError);
  }
}
class InvalidGitConfigError extends Error {
  constructor(original) {
    super("Invalid Git configuration");
    this.original = original;
    Error.captureStackTrace(this, InvalidGitConfigError);
  }
}
function parseVersion(raw) {
  return raw == null ? void 0 : raw.replace(/^git version /, "");
}
async function findSpecificGit(path) {
  let version;
  try {
    version = await (0,_shell__WEBPACK_IMPORTED_MODULE_1__.run)(path, ["--version"], "utf8");
  } catch (ex) {
    if (/bad config/i.test(ex.message))
      throw new InvalidGitConfigError(ex);
    throw ex;
  }
  if (!path || path === "git") {
    const foundPath = (0,_shell__WEBPACK_IMPORTED_MODULE_1__.findExecutable)(path, ["--version"]).cmd;
    try {
      version = await (0,_shell__WEBPACK_IMPORTED_MODULE_1__.run)(foundPath, ["--version"], "utf8");
    } catch (ex) {
      if (/bad config/i.test(ex.message))
        throw new InvalidGitConfigError(ex);
      throw ex;
    }
    path = foundPath;
  }
  return {
    path,
    version: parseVersion(version.trim())
  };
}
async function findGitDarwin() {
  try {
    let path = await (0,_shell__WEBPACK_IMPORTED_MODULE_1__.run)("which", ["git"], "utf8");
    path = path.replace(/^\s+|\s+$/g, "");
    if (path !== "/usr/bin/git") {
      return findSpecificGit(path);
    }
    try {
      await (0,_shell__WEBPACK_IMPORTED_MODULE_1__.run)("xcode-select", ["-p"], "utf8");
      return findSpecificGit(path);
    } catch (ex) {
      if (ex.code === 2) {
        return Promise.reject(new UnableToFindGitError(ex));
      }
      return findSpecificGit(path);
    }
  } catch (ex) {
    return Promise.reject(ex instanceof InvalidGitConfigError || ex instanceof UnableToFindGitError ? ex : new UnableToFindGitError(ex));
  }
}
function findSystemGitWin32(basePath) {
  if (basePath == null || basePath.length === 0)
    return Promise.reject(new UnableToFindGitError());
  return findSpecificGit(path__WEBPACK_IMPORTED_MODULE_0__.join(basePath, "Git", "cmd", "git.exe"));
}
function findGitWin32() {
  return findSystemGitWin32(process.env["ProgramW6432"]).then(null, () => findSystemGitWin32(process.env["ProgramFiles(x86)"])).then(null, () => findSystemGitWin32(process.env["ProgramFiles"])).then(null, () => findSpecificGit("git"));
}
async function findGitPath(paths2) {
  try {
    if (paths2 == null || typeof paths2 === "string") {
      return await findSpecificGit(paths2 != null ? paths2 : "git");
    }
    for (const path of paths2) {
      try {
        return await findSpecificGit(path);
      } catch {
      }
    }
    throw new UnableToFindGitError();
  } catch {
    try {
      switch (process.platform) {
        case "darwin":
          return await findGitDarwin();
        case "win32":
          return await findGitWin32();
        default:
          return Promise.reject(new UnableToFindGitError());
      }
    } catch (ex) {
      return Promise.reject(ex instanceof InvalidGitConfigError || ex instanceof UnableToFindGitError ? ex : new UnableToFindGitError(ex));
    }
  }
}


/***/ }),

/***/ "./src/git/models/author.ts":
/*!**********************************!*\
  !*** ./src/git/models/author.ts ***!
  \**********************************/
/***/ (() => {

"use strict";



/***/ }),

/***/ "./src/git/models/blame.ts":
/*!*********************************!*\
  !*** ./src/git/models/blame.ts ***!
  \*********************************/
/***/ (() => {

"use strict";



/***/ }),

/***/ "./src/git/models/blameCommit.ts":
/*!***************************************!*\
  !*** ./src/git/models/blameCommit.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "GitBlameCommit": () => (/* binding */ GitBlameCommit)
/* harmony export */ });
/* harmony import */ var _commit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./commit */ "./src/git/models/commit.ts");


class GitBlameCommit extends _commit__WEBPACK_IMPORTED_MODULE_0__.GitCommit {
  constructor(repoPath, sha, author, email, authorDate, committerDate, message, fileName, originalFileName, previousSha, previousFileName, lines) {
    super(_commit__WEBPACK_IMPORTED_MODULE_0__.GitCommitType.Blame, repoPath, sha, author, email, authorDate, committerDate, message, fileName, originalFileName, previousSha, previousFileName);
    this.lines = lines;
  }
  static is(commit) {
    return commit instanceof GitBlameCommit;
  }
  with(changes) {
    var _a, _b, _c, _d;
    return new GitBlameCommit(this.repoPath, (_a = changes.sha) != null ? _a : this.sha, this.author, this.email, this.authorDate, this.committerDate, this.message, (_b = changes.fileName) != null ? _b : this.fileName, this.getChangedValue(changes.originalFileName, this.originalFileName), this.getChangedValue(changes.previousSha, this.previousSha), this.getChangedValue(changes.previousFileName, this.previousFileName), (_d = this.getChangedValue(changes.lines, ((_c = changes.sha) != null ? _c : changes.fileName) ? [] : this.lines)) != null ? _d : []);
  }
}


/***/ }),

/***/ "./src/git/models/branch.ts":
/*!**********************************!*\
  !*** ./src/git/models/branch.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "BranchDateFormatting": () => (/* binding */ BranchDateFormatting),
/* harmony export */   "GitBranchStatus": () => (/* binding */ GitBranchStatus),
/* harmony export */   "GitBranch": () => (/* binding */ GitBranch)
/* harmony export */ });
/* harmony import */ var _configuration__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../configuration */ "./src/configuration.ts");
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../constants */ "./src/constants.ts");
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../container */ "./src/container.ts");
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../system */ "./src/system.ts");
/* harmony import */ var _git__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../git */ "./src/git/git.ts");
/* harmony import */ var _status__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./status */ "./src/git/models/status.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};






const whitespaceRegex = /\s/;
const detachedHEADRegex = /^(?=.*\bHEAD\b)?(?=.*\bdetached\b).*$/;
const BranchDateFormatting = {
  dateFormat: void 0,
  dateStyle: void 0,
  reset: () => {
    BranchDateFormatting.dateFormat = _configuration__WEBPACK_IMPORTED_MODULE_0__.configuration.get("defaultDateFormat");
    BranchDateFormatting.dateStyle = _configuration__WEBPACK_IMPORTED_MODULE_0__.configuration.get("defaultDateStyle");
  }
};
var GitBranchStatus;
(function(GitBranchStatus2) {
  GitBranchStatus2["Ahead"] = "ahead";
  GitBranchStatus2["Behind"] = "behind";
  GitBranchStatus2["Diverged"] = "diverged";
  GitBranchStatus2["Local"] = "local";
  GitBranchStatus2["MissingUpstream"] = "missingUpstream";
  GitBranchStatus2["Remote"] = "remote";
  GitBranchStatus2["UpToDate"] = "upToDate";
  GitBranchStatus2["Unpublished"] = "unpublished";
})(GitBranchStatus || (GitBranchStatus = {}));
const _GitBranch = class {
  constructor(repoPath, name, remote, current, date, sha, upstream, ahead = 0, behind = 0, detached = false, rebasing = false) {
    this.repoPath = repoPath;
    this.name = name;
    this.remote = remote;
    this.current = current;
    this.date = date;
    this.sha = sha;
    this.rebasing = rebasing;
    __publicField(this, "refType", "branch");
    __publicField(this, "detached");
    __publicField(this, "id");
    __publicField(this, "upstream");
    __publicField(this, "state");
    this.id = `${repoPath}|${remote ? "remotes/" : "heads/"}${name}`;
    this.detached = detached || (this.current ? _GitBranch.isDetached(name) : false);
    if (this.detached) {
      this.name = _GitBranch.formatDetached(this.sha);
    }
    this.upstream = (upstream == null ? void 0 : upstream.name) == null || upstream.name.length === 0 ? void 0 : upstream;
    this.state = {
      ahead,
      behind
    };
  }
  static is(branch) {
    return branch instanceof _GitBranch;
  }
  static isOfRefType(branch) {
    return (branch == null ? void 0 : branch.refType) === "branch";
  }
  static sort(branches, options) {
    options = { current: true, orderBy: _configuration__WEBPACK_IMPORTED_MODULE_0__.configuration.get("sortBranchesBy"), ...options };
    switch (options.orderBy) {
      case _configuration__WEBPACK_IMPORTED_MODULE_0__.BranchSorting.DateAsc:
        return branches.sort((a, b) => {
          var _a, _b;
          return (options.missingUpstream ? (((_a = a.upstream) == null ? void 0 : _a.missing) ? -1 : 1) - (((_b = b.upstream) == null ? void 0 : _b.missing) ? -1 : 1) : 0) || (options.current ? (a.current ? -1 : 1) - (b.current ? -1 : 1) : 0) || (a.starred ? -1 : 1) - (b.starred ? -1 : 1) || (b.remote ? -1 : 1) - (a.remote ? -1 : 1) || (a.date == null ? -1 : a.date.getTime()) - (b.date == null ? -1 : b.date.getTime());
        });
      case _configuration__WEBPACK_IMPORTED_MODULE_0__.BranchSorting.NameAsc:
        return branches.sort((a, b) => {
          var _a, _b;
          return (options.missingUpstream ? (((_a = a.upstream) == null ? void 0 : _a.missing) ? -1 : 1) - (((_b = b.upstream) == null ? void 0 : _b.missing) ? -1 : 1) : 0) || (options.current ? (a.current ? -1 : 1) - (b.current ? -1 : 1) : 0) || (a.starred ? -1 : 1) - (b.starred ? -1 : 1) || (a.name === "main" ? -1 : 1) - (b.name === "main" ? -1 : 1) || (a.name === "master" ? -1 : 1) - (b.name === "master" ? -1 : 1) || (a.name === "develop" ? -1 : 1) - (b.name === "develop" ? -1 : 1) || (b.remote ? -1 : 1) - (a.remote ? -1 : 1) || a.name.localeCompare(b.name, void 0, { numeric: true, sensitivity: "base" });
        });
      case _configuration__WEBPACK_IMPORTED_MODULE_0__.BranchSorting.NameDesc:
        return branches.sort((a, b) => {
          var _a, _b;
          return (options.missingUpstream ? (((_a = a.upstream) == null ? void 0 : _a.missing) ? -1 : 1) - (((_b = b.upstream) == null ? void 0 : _b.missing) ? -1 : 1) : 0) || (options.current ? (a.current ? -1 : 1) - (b.current ? -1 : 1) : 0) || (a.starred ? -1 : 1) - (b.starred ? -1 : 1) || (a.name === "main" ? -1 : 1) - (b.name === "main" ? -1 : 1) || (a.name === "master" ? -1 : 1) - (b.name === "master" ? -1 : 1) || (a.name === "develop" ? -1 : 1) - (b.name === "develop" ? -1 : 1) || (b.remote ? -1 : 1) - (a.remote ? -1 : 1) || b.name.localeCompare(a.name, void 0, { numeric: true, sensitivity: "base" });
        });
      case _configuration__WEBPACK_IMPORTED_MODULE_0__.BranchSorting.DateDesc:
      default:
        return branches.sort((a, b) => {
          var _a, _b;
          return (options.missingUpstream ? (((_a = a.upstream) == null ? void 0 : _a.missing) ? -1 : 1) - (((_b = b.upstream) == null ? void 0 : _b.missing) ? -1 : 1) : 0) || (options.current ? (a.current ? -1 : 1) - (b.current ? -1 : 1) : 0) || (a.starred ? -1 : 1) - (b.starred ? -1 : 1) || (b.remote ? -1 : 1) - (a.remote ? -1 : 1) || (b.date == null ? -1 : b.date.getTime()) - (a.date == null ? -1 : a.date.getTime());
        });
    }
  }
  get formattedDate() {
    return BranchDateFormatting.dateStyle === _configuration__WEBPACK_IMPORTED_MODULE_0__.DateStyle.Absolute ? this.formatDate(BranchDateFormatting.dateFormat) : this.formatDateFromNow();
  }
  get ref() {
    return this.detached ? this.sha : this.name;
  }
  get dateFormatter() {
    return this.date == null ? void 0 : _system__WEBPACK_IMPORTED_MODULE_3__.Dates.getFormatter(this.date);
  }
  formatDate(format) {
    var _a, _b;
    if (format == null) {
      format = "MMMM Do, YYYY h:mma";
    }
    return (_b = (_a = this.dateFormatter) == null ? void 0 : _a.format(format)) != null ? _b : "";
  }
  formatDateFromNow() {
    var _a, _b;
    return (_b = (_a = this.dateFormatter) == null ? void 0 : _a.fromNow()) != null ? _b : "";
  }
  async getAssociatedPullRequest(options) {
    const remote = await this.getRemote();
    if (remote == null)
      return void 0;
    return _container__WEBPACK_IMPORTED_MODULE_2__.Container.git.getPullRequestForBranch(this.getNameWithoutRemote(), remote, options);
  }
  getBasename() {
    const name = this.getNameWithoutRemote();
    const index = name.lastIndexOf("/");
    return index !== -1 ? name.substring(index + 1) : name;
  }
  getNameWithoutRemote() {
    return this.remote ? this.name.substring(this.name.indexOf("/") + 1) : this.name;
  }
  getTrackingWithoutRemote() {
    var _a;
    return (_a = this.upstream) == null ? void 0 : _a.name.substring(this.upstream.name.indexOf("/") + 1);
  }
  async getRemote() {
    const remoteName = this.getRemoteName();
    if (remoteName == null)
      return void 0;
    const remotes = await _container__WEBPACK_IMPORTED_MODULE_2__.Container.git.getRemotes(this.repoPath);
    if (remotes.length === 0)
      return void 0;
    return remotes.find((r) => r.name === remoteName);
  }
  getRemoteName() {
    if (this.remote)
      return _GitBranch.getRemote(this.name);
    if (this.upstream != null)
      return _GitBranch.getRemote(this.upstream.name);
    return void 0;
  }
  async getStatus() {
    if (this.remote)
      return GitBranchStatus.Remote;
    if (this.upstream != null) {
      if (this.upstream.missing)
        return GitBranchStatus.MissingUpstream;
      if (this.state.ahead && this.state.behind)
        return GitBranchStatus.Diverged;
      if (this.state.ahead)
        return GitBranchStatus.Ahead;
      if (this.state.behind)
        return GitBranchStatus.Behind;
      return GitBranchStatus.UpToDate;
    }
    const remotes = await _container__WEBPACK_IMPORTED_MODULE_2__.Container.git.getRemotes(this.repoPath);
    if (remotes.length > 0)
      return GitBranchStatus.Unpublished;
    return GitBranchStatus.Local;
  }
  getTrackingStatus(options) {
    return _status__WEBPACK_IMPORTED_MODULE_5__.GitStatus.getUpstreamStatus(this.upstream, this.state, options);
  }
  get starred() {
    const starred = _container__WEBPACK_IMPORTED_MODULE_2__.Container.context.workspaceState.get(_constants__WEBPACK_IMPORTED_MODULE_1__.WorkspaceState.StarredBranches);
    return starred !== void 0 && starred[this.id] === true;
  }
  async star() {
    var _a;
    await ((_a = await _container__WEBPACK_IMPORTED_MODULE_2__.Container.git.getRepository(this.repoPath)) == null ? void 0 : _a.star(this));
  }
  async unstar() {
    var _a;
    await ((_a = await _container__WEBPACK_IMPORTED_MODULE_2__.Container.git.getRepository(this.repoPath)) == null ? void 0 : _a.unstar(this));
  }
  static formatDetached(sha) {
    return `(${_git__WEBPACK_IMPORTED_MODULE_4__.GitRevision.shorten(sha)}...)`;
  }
  static getNameWithoutRemote(name) {
    return name.substring(name.indexOf("/") + 1);
  }
  static getRemote(name) {
    return name.substring(0, name.indexOf("/"));
  }
  static isDetached(name) {
    return whitespaceRegex.test(name) || detachedHEADRegex.test(name);
  }
};
let GitBranch = _GitBranch;
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_3__.memoize)()
], GitBranch.prototype, "dateFormatter", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_3__.memoize)((format) => format == null ? "MMMM Do, YYYY h:mma" : format)
], GitBranch.prototype, "formatDate", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_3__.debug)()
], GitBranch.prototype, "getAssociatedPullRequest", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_3__.memoize)()
], GitBranch.prototype, "getBasename", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_3__.memoize)()
], GitBranch.prototype, "getNameWithoutRemote", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_3__.memoize)()
], GitBranch.prototype, "getTrackingWithoutRemote", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_3__.memoize)()
], GitBranch.prototype, "getRemote", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_3__.memoize)()
], GitBranch.prototype, "getRemoteName", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_3__.memoize)()
], GitBranch.prototype, "getStatus", 1);


/***/ }),

/***/ "./src/git/models/commit.ts":
/*!**********************************!*\
  !*** ./src/git/models/commit.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "GitCommitType": () => (/* binding */ GitCommitType),
/* harmony export */   "CommitDateFormatting": () => (/* binding */ CommitDateFormatting),
/* harmony export */   "GitCommit": () => (/* binding */ GitCommit)
/* harmony export */ });
/* harmony import */ var _avatars__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../avatars */ "./src/avatars.ts");
/* harmony import */ var _configuration__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../configuration */ "./src/configuration.ts");
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../container */ "./src/container.ts");
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../system */ "./src/system.ts");
/* harmony import */ var _formatters_formatters__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../formatters/formatters */ "./src/git/formatters/formatters.ts");
/* harmony import */ var _gitUri__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../gitUri */ "./src/git/gitUri.ts");
/* harmony import */ var _models__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./models */ "./src/git/models/models.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};







var GitCommitType;
(function(GitCommitType2) {
  GitCommitType2["Blame"] = "blame";
  GitCommitType2["Log"] = "log";
  GitCommitType2["LogFile"] = "logFile";
  GitCommitType2["Stash"] = "stash";
  GitCommitType2["StashFile"] = "stashFile";
})(GitCommitType || (GitCommitType = {}));
const CommitDateFormatting = {
  dateFormat: void 0,
  dateSource: void 0,
  dateStyle: void 0,
  reset: () => {
    CommitDateFormatting.dateFormat = _configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.get("defaultDateFormat");
    CommitDateFormatting.dateSource = _configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.get("defaultDateSource");
    CommitDateFormatting.dateStyle = _configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.get("defaultDateStyle");
  }
};
const _GitCommit = class {
  constructor(type, repoPath, sha, author, email, authorDate, committerDate, message, fileName, originalFileName, previousSha, previousFileName) {
    this.type = type;
    this.repoPath = repoPath;
    this.sha = sha;
    this.author = author;
    this.email = email;
    this.authorDate = authorDate;
    this.committerDate = committerDate;
    this.message = message;
    this.originalFileName = originalFileName;
    this.previousSha = previousSha;
    this.previousFileName = previousFileName;
    __publicField(this, "refType", "revision");
    __publicField(this, "_fileName");
    this._fileName = fileName || "";
  }
  static is(commit) {
    return commit instanceof _GitCommit;
  }
  static isOfRefType(commit) {
    return (commit == null ? void 0 : commit.refType) === "revision" || (commit == null ? void 0 : commit.refType) === "stash";
  }
  get hasConflicts() {
    return false;
  }
  get ref() {
    return this.sha;
  }
  get name() {
    return this.shortSha;
  }
  get fileName() {
    return this.isFile ? this._fileName : "";
  }
  get date() {
    return CommitDateFormatting.dateSource === _configuration__WEBPACK_IMPORTED_MODULE_1__.DateSource.Committed ? this.committerDate : this.authorDate;
  }
  get formattedDate() {
    return CommitDateFormatting.dateStyle === _configuration__WEBPACK_IMPORTED_MODULE_1__.DateStyle.Absolute ? this.formatDate(CommitDateFormatting.dateFormat) : this.formatDateFromNow();
  }
  get shortSha() {
    return _models__WEBPACK_IMPORTED_MODULE_6__.GitRevision.shorten(this.sha);
  }
  get isFile() {
    return this.type === GitCommitType.Blame || this.type === GitCommitType.LogFile || this.type === GitCommitType.StashFile;
  }
  get isStash() {
    return this.type === GitCommitType.Stash || this.type === GitCommitType.StashFile;
  }
  get isUncommitted() {
    return _models__WEBPACK_IMPORTED_MODULE_6__.GitRevision.isUncommitted(this.sha);
  }
  get isUncommittedStaged() {
    return _models__WEBPACK_IMPORTED_MODULE_6__.GitRevision.isUncommittedStaged(this.sha);
  }
  get originalUri() {
    return this.originalFileName ? _gitUri__WEBPACK_IMPORTED_MODULE_5__.GitUri.resolveToUri(this.originalFileName, this.repoPath) : this.uri;
  }
  get previousFileSha() {
    return `${this.sha}^`;
  }
  get previousShortSha() {
    return this.previousSha && _models__WEBPACK_IMPORTED_MODULE_6__.GitRevision.shorten(this.previousSha);
  }
  get previousUri() {
    return this.previousFileName ? _gitUri__WEBPACK_IMPORTED_MODULE_5__.GitUri.resolveToUri(this.previousFileName, this.repoPath) : this.uri;
  }
  get uri() {
    return _gitUri__WEBPACK_IMPORTED_MODULE_5__.GitUri.resolveToUri(this.fileName, this.repoPath);
  }
  async getAssociatedPullRequest(options) {
    const remote = await _container__WEBPACK_IMPORTED_MODULE_2__.Container.git.getRichRemoteProvider(this.repoPath);
    if ((remote == null ? void 0 : remote.provider) == null)
      return void 0;
    return _container__WEBPACK_IMPORTED_MODULE_2__.Container.git.getPullRequestForCommit(this.ref, remote, options);
  }
  getPreviousLineDiffUris(uri, editorLine, ref) {
    if (!this.isFile)
      return Promise.resolve(void 0);
    return _container__WEBPACK_IMPORTED_MODULE_2__.Container.git.getPreviousLineDiffUris(this.repoPath, uri, editorLine, ref);
  }
  getWorkingUri() {
    if (!this.isFile)
      return Promise.resolve(void 0);
    return _container__WEBPACK_IMPORTED_MODULE_2__.Container.git.getWorkingUri(this.repoPath, this.uri);
  }
  get authorDateFormatter() {
    return _system__WEBPACK_IMPORTED_MODULE_3__.Dates.getFormatter(this.authorDate);
  }
  get committerDateFormatter() {
    return _system__WEBPACK_IMPORTED_MODULE_3__.Dates.getFormatter(this.committerDate);
  }
  get dateFormatter() {
    return CommitDateFormatting.dateSource === _configuration__WEBPACK_IMPORTED_MODULE_1__.DateSource.Committed ? this.committerDateFormatter : this.authorDateFormatter;
  }
  formatAuthorDate(format) {
    if (format == null) {
      format = "MMMM Do, YYYY h:mma";
    }
    return this.authorDateFormatter.format(format);
  }
  formatAuthorDateFromNow(locale) {
    return this.authorDateFormatter.fromNow(locale);
  }
  formatCommitterDate(format) {
    if (format == null) {
      format = "MMMM Do, YYYY h:mma";
    }
    return this.committerDateFormatter.format(format);
  }
  formatCommitterDateFromNow(locale) {
    return this.committerDateFormatter.fromNow(locale);
  }
  formatDate(format) {
    if (format == null) {
      format = "MMMM Do, YYYY h:mma";
    }
    return this.dateFormatter.format(format);
  }
  formatDateFromNow(locale) {
    return this.dateFormatter.fromNow(locale);
  }
  getFormattedPath(options = {}) {
    return _gitUri__WEBPACK_IMPORTED_MODULE_5__.GitUri.getFormattedPath(this.fileName, options);
  }
  getAvatarUri(options) {
    return (0,_avatars__WEBPACK_IMPORTED_MODULE_0__.getAvatarUri)(this.email, this, options);
  }
  getShortMessage() {
    return _formatters_formatters__WEBPACK_IMPORTED_MODULE_4__.CommitFormatter.fromTemplate(`\${message}`, this, { messageTruncateAtNewLine: true });
  }
  toGitUri(previous = false) {
    return _gitUri__WEBPACK_IMPORTED_MODULE_5__.GitUri.fromCommit(this, previous);
  }
  getChangedValue(change, original) {
    if (change === void 0)
      return original;
    return change !== null ? change : void 0;
  }
};
let GitCommit = _GitCommit;
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_3__.memoize)()
], GitCommit.prototype, "shortSha", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_3__.memoize)()
], GitCommit.prototype, "isUncommitted", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_3__.memoize)()
], GitCommit.prototype, "isUncommittedStaged", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_3__.memoize)()
], GitCommit.prototype, "originalUri", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_3__.memoize)()
], GitCommit.prototype, "uri", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_3__.memoize)()
], GitCommit.prototype, "getAssociatedPullRequest", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_3__.memoize)((uri, editorLine, ref) => `${uri.toString(true)}|${editorLine != null ? editorLine : ""}|${ref != null ? ref : ""}`)
], GitCommit.prototype, "getPreviousLineDiffUris", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_3__.memoize)()
], GitCommit.prototype, "getWorkingUri", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_3__.memoize)()
], GitCommit.prototype, "authorDateFormatter", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_3__.memoize)()
], GitCommit.prototype, "committerDateFormatter", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_3__.memoize)((format) => format == null ? "MMMM Do, YYYY h:mma" : format)
], GitCommit.prototype, "formatAuthorDate", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_3__.memoize)((format) => format == null ? "MMMM Do, YYYY h:mma" : format)
], GitCommit.prototype, "formatCommitterDate", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_3__.memoize)((format) => format == null ? "MMMM Do, YYYY h:mma" : format)
], GitCommit.prototype, "formatDate", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_3__.memoize)()
], GitCommit.prototype, "getShortMessage", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_3__.memoize)()
], GitCommit.prototype, "toGitUri", 1);


/***/ }),

/***/ "./src/git/models/contributor.ts":
/*!***************************************!*\
  !*** ./src/git/models/contributor.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "GitContributor": () => (/* binding */ GitContributor)
/* harmony export */ });
/* harmony import */ var _avatars__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../avatars */ "./src/avatars.ts");
/* harmony import */ var _configuration__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../configuration */ "./src/configuration.ts");
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../system */ "./src/system.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};



const _GitContributor = class {
  constructor(repoPath, name, email, count, date, stats, current = false) {
    this.repoPath = repoPath;
    this.name = name;
    this.email = email;
    this.count = count;
    this.date = date;
    this.stats = stats;
    this.current = current;
  }
  static is(contributor) {
    return contributor instanceof _GitContributor;
  }
  static sort(contributors, options) {
    options = { current: true, orderBy: _configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.get("sortContributorsBy"), ...options };
    switch (options.orderBy) {
      case _configuration__WEBPACK_IMPORTED_MODULE_1__.ContributorSorting.CountAsc:
        return contributors.sort((a, b) => (a.current ? -1 : 1) - (b.current ? -1 : 1) || a.count - b.count || a.date.getTime() - b.date.getTime());
      case _configuration__WEBPACK_IMPORTED_MODULE_1__.ContributorSorting.DateDesc:
        return contributors.sort((a, b) => (options.current ? (a.current ? -1 : 1) - (b.current ? -1 : 1) : 0) || b.date.getTime() - a.date.getTime() || b.count - a.count);
      case _configuration__WEBPACK_IMPORTED_MODULE_1__.ContributorSorting.DateAsc:
        return contributors.sort((a, b) => (options.current ? (a.current ? -1 : 1) - (b.current ? -1 : 1) : 0) || a.date.getTime() - b.date.getTime() || b.count - a.count);
      case _configuration__WEBPACK_IMPORTED_MODULE_1__.ContributorSorting.NameAsc:
        return contributors.sort((a, b) => (a.current ? -1 : 1) - (b.current ? -1 : 1) || a.name.localeCompare(b.name, void 0, { numeric: true, sensitivity: "base" }));
      case _configuration__WEBPACK_IMPORTED_MODULE_1__.ContributorSorting.NameDesc:
        return contributors.sort((a, b) => (a.current ? -1 : 1) - (b.current ? -1 : 1) || b.name.localeCompare(a.name, void 0, { numeric: true, sensitivity: "base" }));
      case _configuration__WEBPACK_IMPORTED_MODULE_1__.ContributorSorting.CountDesc:
      default:
        return contributors.sort((a, b) => (a.current ? -1 : 1) - (b.current ? -1 : 1) || b.count - a.count || b.date.getTime() - a.date.getTime());
    }
  }
  get dateFormatter() {
    return _system__WEBPACK_IMPORTED_MODULE_2__.Dates.getFormatter(this.date);
  }
  formatDate(format) {
    if (format == null) {
      format = "MMMM Do, YYYY h:mma";
    }
    return this.dateFormatter.format(format);
  }
  formatDateFromNow(locale) {
    return this.dateFormatter.fromNow(locale);
  }
  getAvatarUri(options) {
    return (0,_avatars__WEBPACK_IMPORTED_MODULE_0__.getAvatarUri)(this.email, void 0, options);
  }
  toCoauthor() {
    return `${this.name}${this.email ? ` <${this.email}>` : ""}`;
  }
};
let GitContributor = _GitContributor;
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_2__.memoize)()
], GitContributor.prototype, "dateFormatter", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_2__.memoize)((format) => format == null ? "MMMM Do, YYYY h:mma" : format)
], GitContributor.prototype, "formatDate", 1);


/***/ }),

/***/ "./src/git/models/defaultBranch.ts":
/*!*****************************************!*\
  !*** ./src/git/models/defaultBranch.ts ***!
  \*****************************************/
/***/ (() => {

"use strict";



/***/ }),

/***/ "./src/git/models/diff.ts":
/*!********************************!*\
  !*** ./src/git/models/diff.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "GitDiffHunk": () => (/* binding */ GitDiffHunk)
/* harmony export */ });
/* harmony import */ var _parsers_diffParser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../parsers/diffParser */ "./src/git/parsers/diffParser.ts");

var __defProp = Object.defineProperty;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};

class GitDiffHunk {
  constructor(diff, current, previous) {
    this.diff = diff;
    this.current = current;
    this.previous = previous;
    __publicField(this, "parsedHunk");
  }
  get lines() {
    return this.parseHunk().lines;
  }
  get state() {
    return this.parseHunk().state;
  }
  parseHunk() {
    if (this.parsedHunk == null) {
      this.parsedHunk = _parsers_diffParser__WEBPACK_IMPORTED_MODULE_0__.GitDiffParser.parseHunk(this);
    }
    return this.parsedHunk;
  }
}


/***/ }),

/***/ "./src/git/models/file.ts":
/*!********************************!*\
  !*** ./src/git/models/file.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "GitFileConflictStatus": () => (/* binding */ GitFileConflictStatus),
/* harmony export */   "GitFileIndexStatus": () => (/* binding */ GitFileIndexStatus),
/* harmony export */   "GitFileWorkingTreeStatus": () => (/* binding */ GitFileWorkingTreeStatus),
/* harmony export */   "GitFile": () => (/* binding */ GitFile)
/* harmony export */ });
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../constants */ "./src/constants.ts");
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../system */ "./src/system.ts");
/* harmony import */ var _gitUri__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../gitUri */ "./src/git/gitUri.ts");




var GitFileConflictStatus;
(function(GitFileConflictStatus2) {
  GitFileConflictStatus2["AddedByBoth"] = "AA";
  GitFileConflictStatus2["AddedByUs"] = "AU";
  GitFileConflictStatus2["AddedByThem"] = "UA";
  GitFileConflictStatus2["DeletedByBoth"] = "DD";
  GitFileConflictStatus2["DeletedByUs"] = "DU";
  GitFileConflictStatus2["DeletedByThem"] = "UD";
  GitFileConflictStatus2["ModifiedByBoth"] = "UU";
})(GitFileConflictStatus || (GitFileConflictStatus = {}));
var GitFileIndexStatus;
(function(GitFileIndexStatus2) {
  GitFileIndexStatus2["Added"] = "A";
  GitFileIndexStatus2["Deleted"] = "D";
  GitFileIndexStatus2["Modified"] = "M";
  GitFileIndexStatus2["Renamed"] = "R";
  GitFileIndexStatus2["Copied"] = "C";
})(GitFileIndexStatus || (GitFileIndexStatus = {}));
var GitFileWorkingTreeStatus;
(function(GitFileWorkingTreeStatus2) {
  GitFileWorkingTreeStatus2["Added"] = "A";
  GitFileWorkingTreeStatus2["Deleted"] = "D";
  GitFileWorkingTreeStatus2["Modified"] = "M";
  GitFileWorkingTreeStatus2["Untracked"] = "?";
  GitFileWorkingTreeStatus2["Ignored"] = "!";
})(GitFileWorkingTreeStatus || (GitFileWorkingTreeStatus = {}));
var GitFile;
(function(GitFile2) {
  function is(file) {
    return file != null && "fileName" in file && typeof file.fileName === "string" && "status" in file && typeof file.status === "string" && file.status.length === 1;
  }
  GitFile2.is = is;
  function getFormattedDirectory(file, includeOriginal = false, relativeTo) {
    const directory = _gitUri__WEBPACK_IMPORTED_MODULE_2__.GitUri.getDirectory(file.fileName, relativeTo);
    return includeOriginal && (file.status === "R" || file.status === "C") && file.originalFileName ? `${directory} ${_system__WEBPACK_IMPORTED_MODULE_1__.Strings.pad(_constants__WEBPACK_IMPORTED_MODULE_0__.GlyphChars.ArrowLeft, 1, 1)} ${file.originalFileName}` : directory;
  }
  GitFile2.getFormattedDirectory = getFormattedDirectory;
  function getFormattedPath(file, options = {}) {
    return _gitUri__WEBPACK_IMPORTED_MODULE_2__.GitUri.getFormattedPath(file.fileName, options);
  }
  GitFile2.getFormattedPath = getFormattedPath;
  function getOriginalRelativePath(file, relativeTo) {
    if (file.originalFileName == null || file.originalFileName.length === 0)
      return "";
    return _gitUri__WEBPACK_IMPORTED_MODULE_2__.GitUri.relativeTo(file.originalFileName, relativeTo);
  }
  GitFile2.getOriginalRelativePath = getOriginalRelativePath;
  function getRelativePath(file, relativeTo) {
    return _gitUri__WEBPACK_IMPORTED_MODULE_2__.GitUri.relativeTo(file.fileName, relativeTo);
  }
  GitFile2.getRelativePath = getRelativePath;
  const statusIconsMap = {
    "!": "icon-status-ignored.svg",
    "?": "icon-status-untracked.svg",
    A: "icon-status-added.svg",
    D: "icon-status-deleted.svg",
    M: "icon-status-modified.svg",
    R: "icon-status-renamed.svg",
    C: "icon-status-copied.svg",
    AA: "icon-status-conflict.svg",
    AU: "icon-status-conflict.svg",
    UA: "icon-status-conflict.svg",
    DD: "icon-status-conflict.svg",
    DU: "icon-status-conflict.svg",
    UD: "icon-status-conflict.svg",
    UU: "icon-status-conflict.svg",
    T: "icon-status-modified.svg"
  };
  function getStatusIcon(status) {
    var _a;
    return (_a = statusIconsMap[status]) != null ? _a : "icon-status-unknown.svg";
  }
  GitFile2.getStatusIcon = getStatusIcon;
  const statusCodiconsMap = {
    "!": "$(diff-ignored)",
    "?": "$(diff-added)",
    A: "$(diff-added)",
    D: "$(diff-removed)",
    M: "$(diff-modified)",
    R: "$(diff-renamed)",
    C: "$(diff-added)",
    AA: "$(warning)",
    AU: "$(warning)",
    UA: "$(warning)",
    DD: "$(warning)",
    DU: "$(warning)",
    UD: "$(warning)",
    UU: "$(warning)",
    T: "$(diff-modified)"
  };
  function getStatusCodicon(status, missing = _constants__WEBPACK_IMPORTED_MODULE_0__.GlyphChars.Space.repeat(4)) {
    var _a;
    return (_a = statusCodiconsMap[status]) != null ? _a : missing;
  }
  GitFile2.getStatusCodicon = getStatusCodicon;
  const statusTextMap = {
    "!": "Ignored",
    "?": "Untracked",
    A: "Added",
    D: "Deleted",
    M: "Modified",
    R: "Renamed",
    C: "Copied",
    AA: "Conflict",
    AU: "Conflict",
    UA: "Conflict",
    DD: "Conflict",
    DU: "Conflict",
    UD: "Conflict",
    UU: "Conflict",
    T: "Modified"
  };
  function getStatusText(status) {
    var _a;
    return (_a = statusTextMap[status]) != null ? _a : "Unknown";
  }
  GitFile2.getStatusText = getStatusText;
})(GitFile || (GitFile = {}));


/***/ }),

/***/ "./src/git/models/issue.ts":
/*!*********************************!*\
  !*** ./src/git/models/issue.ts ***!
  \*********************************/
/***/ (() => {

"use strict";



/***/ }),

/***/ "./src/git/models/log.ts":
/*!*******************************!*\
  !*** ./src/git/models/log.ts ***!
  \*******************************/
/***/ (() => {

"use strict";



/***/ }),

/***/ "./src/git/models/logCommit.ts":
/*!*************************************!*\
  !*** ./src/git/models/logCommit.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "GitLogCommit": () => (/* binding */ GitLogCommit)
/* harmony export */ });
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../system */ "./src/system.ts");
/* harmony import */ var _gitUri__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../gitUri */ "./src/git/gitUri.ts");
/* harmony import */ var _commit__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./commit */ "./src/git/models/commit.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};



const emptyStats = Object.freeze({
  added: 0,
  deleted: 0,
  changed: 0
});
const _GitLogCommit = class extends _commit__WEBPACK_IMPORTED_MODULE_2__.GitCommit {
  constructor(type, repoPath, sha, author, email, authorDate, committerDate, message, fileName, files, status, originalFileName, previousSha, previousFileName, _fileStats, parentShas, line) {
    super(type, repoPath, sha, author, email, authorDate, committerDate, message, fileName, originalFileName, previousSha != null ? previousSha : `${sha}^`, previousFileName);
    this.files = files;
    this.status = status;
    this._fileStats = _fileStats;
    this.parentShas = parentShas;
    this.line = line;
    __publicField(this, "nextSha");
    __publicField(this, "nextFileName");
  }
  static isOfRefType(commit) {
    return (commit == null ? void 0 : commit.refType) === "revision";
  }
  static is(commit) {
    return commit instanceof _GitLogCommit;
  }
  get hasConflicts() {
    return this.files.some((f) => f.conflictStatus != null);
  }
  get isMerge() {
    return this.parentShas != null && this.parentShas.length > 1;
  }
  get nextUri() {
    return this.nextFileName ? _gitUri__WEBPACK_IMPORTED_MODULE_1__.GitUri.resolveToUri(this.nextFileName, this.repoPath) : this.uri;
  }
  get previousFileSha() {
    return this.isFile ? this.previousSha : `${this.sha}^`;
  }
  findFile(fileName) {
    fileName = _gitUri__WEBPACK_IMPORTED_MODULE_1__.GitUri.relativeTo(fileName, this.repoPath);
    return this.files.find((f) => f.fileName === fileName);
  }
  getDiffStatus() {
    if (this._fileStats !== void 0) {
      return {
        added: this._fileStats.insertions,
        deleted: this._fileStats.deletions,
        changed: 0
      };
    }
    if (this.isFile || this.files.length === 0)
      return emptyStats;
    const diff = {
      added: 0,
      deleted: 0,
      changed: 0
    };
    for (const f of this.files) {
      switch (f.status) {
        case "A":
        case "?":
          diff.added++;
          break;
        case "D":
          diff.deleted++;
          break;
        default:
          diff.changed++;
          break;
      }
    }
    return diff;
  }
  getFormattedDiffStatus({
    compact,
    empty,
    expand,
    prefix = "",
    separator = " ",
    suffix = ""
  } = {}) {
    const { added, changed, deleted } = this.getDiffStatus();
    if (added === 0 && changed === 0 && deleted === 0)
      return empty != null ? empty : "";
    if (expand) {
      const type = this.isFile ? "line" : "file";
      let status = "";
      if (added) {
        status += `${_system__WEBPACK_IMPORTED_MODULE_0__.Strings.pluralize(type, added)} added`;
      }
      if (changed) {
        status += `${status.length === 0 ? "" : separator}${_system__WEBPACK_IMPORTED_MODULE_0__.Strings.pluralize(type, changed)} changed`;
      }
      if (deleted) {
        status += `${status.length === 0 ? "" : separator}${_system__WEBPACK_IMPORTED_MODULE_0__.Strings.pluralize(type, deleted)} deleted`;
      }
      return `${prefix}${status}${suffix}`;
    }
    return `${prefix}${compact && added === 0 ? "" : `+${added}${separator}`}${(compact || this.isFile) && changed === 0 ? "" : `~${changed}${separator}`}${compact && deleted === 0 ? "" : `-${deleted}`}${suffix}`;
  }
  toFileCommit(file) {
    var _a;
    const fileName = typeof file === "string" ? _gitUri__WEBPACK_IMPORTED_MODULE_1__.GitUri.relativeTo(file, this.repoPath) : file.fileName;
    const foundFile = this.files.find((f) => f.fileName === fileName);
    if (foundFile == null)
      return void 0;
    let sha;
    if (this.type === _commit__WEBPACK_IMPORTED_MODULE_2__.GitCommitType.Stash && foundFile.status === "?") {
      sha = `${this.sha}^3`;
    }
    const previousSha = this.isFile ? this.previousSha : `${this.sha}^`;
    return this.with({
      type: this.isStash ? _commit__WEBPACK_IMPORTED_MODULE_2__.GitCommitType.StashFile : _commit__WEBPACK_IMPORTED_MODULE_2__.GitCommitType.LogFile,
      sha,
      fileName: foundFile.fileName,
      originalFileName: foundFile.originalFileName,
      previousSha,
      previousFileName: (_a = foundFile.originalFileName) != null ? _a : foundFile.fileName,
      status: foundFile.status,
      files: [foundFile]
    });
  }
  with(changes) {
    var _a, _b, _c, _d, _e, _f, _g, _h, _i;
    return new _GitLogCommit((_a = changes.type) != null ? _a : this.type, this.repoPath, this.getChangedValue(changes.sha, this.sha), (_b = changes.author) != null ? _b : this.author, (_c = changes.email) != null ? _c : this.email, (_d = changes.authorDate) != null ? _d : this.authorDate, (_e = changes.committedDate) != null ? _e : this.committerDate, (_f = changes.message) != null ? _f : this.message, (_g = changes.fileName) != null ? _g : this.fileName, (_h = this.getChangedValue(changes.files, this.files)) != null ? _h : [], (_i = changes.status) != null ? _i : this.status, this.getChangedValue(changes.originalFileName, this.originalFileName), this.getChangedValue(changes.previousSha, this.previousSha), this.getChangedValue(changes.previousFileName, this.previousFileName), this._fileStats, this.parentShas, this.line);
  }
};
let GitLogCommit = _GitLogCommit;
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_0__.memoize)()
], GitLogCommit.prototype, "hasConflicts", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_0__.memoize)()
], GitLogCommit.prototype, "getDiffStatus", 1);


/***/ }),

/***/ "./src/git/models/merge.ts":
/*!*********************************!*\
  !*** ./src/git/models/merge.ts ***!
  \*********************************/
/***/ (() => {

"use strict";



/***/ }),

/***/ "./src/git/models/models.ts":
/*!**********************************!*\
  !*** ./src/git/models/models.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "GitRevision": () => (/* binding */ GitRevision),
/* harmony export */   "GitReference": () => (/* binding */ GitReference),
/* harmony export */   "GitBlameCommit": () => (/* reexport safe */ _blameCommit__WEBPACK_IMPORTED_MODULE_5__.GitBlameCommit),
/* harmony export */   "BranchDateFormatting": () => (/* reexport safe */ _branch__WEBPACK_IMPORTED_MODULE_2__.BranchDateFormatting),
/* harmony export */   "GitBranch": () => (/* reexport safe */ _branch__WEBPACK_IMPORTED_MODULE_2__.GitBranch),
/* harmony export */   "GitBranchStatus": () => (/* reexport safe */ _branch__WEBPACK_IMPORTED_MODULE_2__.GitBranchStatus),
/* harmony export */   "CommitDateFormatting": () => (/* reexport safe */ _commit__WEBPACK_IMPORTED_MODULE_6__.CommitDateFormatting),
/* harmony export */   "GitCommit": () => (/* reexport safe */ _commit__WEBPACK_IMPORTED_MODULE_6__.GitCommit),
/* harmony export */   "GitCommitType": () => (/* reexport safe */ _commit__WEBPACK_IMPORTED_MODULE_6__.GitCommitType),
/* harmony export */   "GitContributor": () => (/* reexport safe */ _contributor__WEBPACK_IMPORTED_MODULE_7__.GitContributor),
/* harmony export */   "GitDiffHunk": () => (/* reexport safe */ _diff__WEBPACK_IMPORTED_MODULE_9__.GitDiffHunk),
/* harmony export */   "GitFile": () => (/* reexport safe */ _file__WEBPACK_IMPORTED_MODULE_10__.GitFile),
/* harmony export */   "GitFileConflictStatus": () => (/* reexport safe */ _file__WEBPACK_IMPORTED_MODULE_10__.GitFileConflictStatus),
/* harmony export */   "GitFileIndexStatus": () => (/* reexport safe */ _file__WEBPACK_IMPORTED_MODULE_10__.GitFileIndexStatus),
/* harmony export */   "GitFileWorkingTreeStatus": () => (/* reexport safe */ _file__WEBPACK_IMPORTED_MODULE_10__.GitFileWorkingTreeStatus),
/* harmony export */   "GitLogCommit": () => (/* reexport safe */ _logCommit__WEBPACK_IMPORTED_MODULE_13__.GitLogCommit),
/* harmony export */   "PullRequest": () => (/* reexport safe */ _pullRequest__WEBPACK_IMPORTED_MODULE_15__.PullRequest),
/* harmony export */   "PullRequestDateFormatting": () => (/* reexport safe */ _pullRequest__WEBPACK_IMPORTED_MODULE_15__.PullRequestDateFormatting),
/* harmony export */   "PullRequestState": () => (/* reexport safe */ _pullRequest__WEBPACK_IMPORTED_MODULE_15__.PullRequestState),
/* harmony export */   "GitReflogRecord": () => (/* reexport safe */ _reflog__WEBPACK_IMPORTED_MODULE_17__.GitReflogRecord),
/* harmony export */   "GitRemote": () => (/* reexport safe */ _remote__WEBPACK_IMPORTED_MODULE_18__.GitRemote),
/* harmony export */   "GitRemoteType": () => (/* reexport safe */ _remote__WEBPACK_IMPORTED_MODULE_18__.GitRemoteType),
/* harmony export */   "Repository": () => (/* reexport safe */ _repository__WEBPACK_IMPORTED_MODULE_20__.Repository),
/* harmony export */   "RepositoryChange": () => (/* reexport safe */ _repository__WEBPACK_IMPORTED_MODULE_20__.RepositoryChange),
/* harmony export */   "RepositoryChangeComparisonMode": () => (/* reexport safe */ _repository__WEBPACK_IMPORTED_MODULE_20__.RepositoryChangeComparisonMode),
/* harmony export */   "RepositoryChangeEvent": () => (/* reexport safe */ _repository__WEBPACK_IMPORTED_MODULE_20__.RepositoryChangeEvent),
/* harmony export */   "GitStashCommit": () => (/* reexport safe */ _stashCommit__WEBPACK_IMPORTED_MODULE_23__.GitStashCommit),
/* harmony export */   "GitStatus": () => (/* reexport safe */ _status__WEBPACK_IMPORTED_MODULE_24__.GitStatus),
/* harmony export */   "GitStatusFile": () => (/* reexport safe */ _status__WEBPACK_IMPORTED_MODULE_24__.GitStatusFile),
/* harmony export */   "GitTag": () => (/* reexport safe */ _tag__WEBPACK_IMPORTED_MODULE_25__.GitTag),
/* harmony export */   "TagDateFormatting": () => (/* reexport safe */ _tag__WEBPACK_IMPORTED_MODULE_25__.TagDateFormatting)
/* harmony export */ });
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../constants */ "./src/constants.ts");
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../container */ "./src/container.ts");
/* harmony import */ var _branch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./branch */ "./src/git/models/branch.ts");
/* harmony import */ var _author__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./author */ "./src/git/models/author.ts");
/* harmony import */ var _author__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_author__WEBPACK_IMPORTED_MODULE_3__);
/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};
/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _author__WEBPACK_IMPORTED_MODULE_3__) if(["default","GitRevision","GitReference"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _author__WEBPACK_IMPORTED_MODULE_3__[__WEBPACK_IMPORT_KEY__]
/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);
/* harmony import */ var _blame__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./blame */ "./src/git/models/blame.ts");
/* harmony import */ var _blame__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_blame__WEBPACK_IMPORTED_MODULE_4__);
/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};
/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _blame__WEBPACK_IMPORTED_MODULE_4__) if(["default","GitRevision","GitReference"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _blame__WEBPACK_IMPORTED_MODULE_4__[__WEBPACK_IMPORT_KEY__]
/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);
/* harmony import */ var _blameCommit__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./blameCommit */ "./src/git/models/blameCommit.ts");
/* harmony import */ var _commit__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./commit */ "./src/git/models/commit.ts");
/* harmony import */ var _contributor__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./contributor */ "./src/git/models/contributor.ts");
/* harmony import */ var _defaultBranch__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./defaultBranch */ "./src/git/models/defaultBranch.ts");
/* harmony import */ var _defaultBranch__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(_defaultBranch__WEBPACK_IMPORTED_MODULE_8__);
/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};
/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _defaultBranch__WEBPACK_IMPORTED_MODULE_8__) if(["default","GitRevision","GitReference","GitBlameCommit","BranchDateFormatting","GitBranch","GitBranchStatus","CommitDateFormatting","GitCommit","GitCommitType","GitContributor"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _defaultBranch__WEBPACK_IMPORTED_MODULE_8__[__WEBPACK_IMPORT_KEY__]
/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);
/* harmony import */ var _diff__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./diff */ "./src/git/models/diff.ts");
/* harmony import */ var _file__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./file */ "./src/git/models/file.ts");
/* harmony import */ var _issue__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./issue */ "./src/git/models/issue.ts");
/* harmony import */ var _issue__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(_issue__WEBPACK_IMPORTED_MODULE_11__);
/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};
/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _issue__WEBPACK_IMPORTED_MODULE_11__) if(["default","GitRevision","GitReference","GitBlameCommit","BranchDateFormatting","GitBranch","GitBranchStatus","CommitDateFormatting","GitCommit","GitCommitType","GitContributor","GitDiffHunk","GitFile","GitFileConflictStatus","GitFileIndexStatus","GitFileWorkingTreeStatus"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _issue__WEBPACK_IMPORTED_MODULE_11__[__WEBPACK_IMPORT_KEY__]
/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./log */ "./src/git/models/log.ts");
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(_log__WEBPACK_IMPORTED_MODULE_12__);
/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};
/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _log__WEBPACK_IMPORTED_MODULE_12__) if(["default","GitRevision","GitReference","GitBlameCommit","BranchDateFormatting","GitBranch","GitBranchStatus","CommitDateFormatting","GitCommit","GitCommitType","GitContributor","GitDiffHunk","GitFile","GitFileConflictStatus","GitFileIndexStatus","GitFileWorkingTreeStatus"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _log__WEBPACK_IMPORTED_MODULE_12__[__WEBPACK_IMPORT_KEY__]
/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);
/* harmony import */ var _logCommit__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./logCommit */ "./src/git/models/logCommit.ts");
/* harmony import */ var _merge__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./merge */ "./src/git/models/merge.ts");
/* harmony import */ var _merge__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(_merge__WEBPACK_IMPORTED_MODULE_14__);
/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};
/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _merge__WEBPACK_IMPORTED_MODULE_14__) if(["default","GitRevision","GitReference","GitBlameCommit","BranchDateFormatting","GitBranch","GitBranchStatus","CommitDateFormatting","GitCommit","GitCommitType","GitContributor","GitDiffHunk","GitFile","GitFileConflictStatus","GitFileIndexStatus","GitFileWorkingTreeStatus","GitLogCommit"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _merge__WEBPACK_IMPORTED_MODULE_14__[__WEBPACK_IMPORT_KEY__]
/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);
/* harmony import */ var _pullRequest__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./pullRequest */ "./src/git/models/pullRequest.ts");
/* harmony import */ var _rebase__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./rebase */ "./src/git/models/rebase.ts");
/* harmony import */ var _rebase__WEBPACK_IMPORTED_MODULE_16___default = /*#__PURE__*/__webpack_require__.n(_rebase__WEBPACK_IMPORTED_MODULE_16__);
/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};
/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _rebase__WEBPACK_IMPORTED_MODULE_16__) if(["default","GitRevision","GitReference","GitBlameCommit","BranchDateFormatting","GitBranch","GitBranchStatus","CommitDateFormatting","GitCommit","GitCommitType","GitContributor","GitDiffHunk","GitFile","GitFileConflictStatus","GitFileIndexStatus","GitFileWorkingTreeStatus","GitLogCommit","PullRequest","PullRequestDateFormatting","PullRequestState"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _rebase__WEBPACK_IMPORTED_MODULE_16__[__WEBPACK_IMPORT_KEY__]
/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);
/* harmony import */ var _reflog__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./reflog */ "./src/git/models/reflog.ts");
/* harmony import */ var _remote__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./remote */ "./src/git/models/remote.ts");
/* harmony import */ var _remoteProvider__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./remoteProvider */ "./src/git/models/remoteProvider.ts");
/* harmony import */ var _remoteProvider__WEBPACK_IMPORTED_MODULE_19___default = /*#__PURE__*/__webpack_require__.n(_remoteProvider__WEBPACK_IMPORTED_MODULE_19__);
/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};
/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _remoteProvider__WEBPACK_IMPORTED_MODULE_19__) if(["default","GitRevision","GitReference","GitBlameCommit","BranchDateFormatting","GitBranch","GitBranchStatus","CommitDateFormatting","GitCommit","GitCommitType","GitContributor","GitDiffHunk","GitFile","GitFileConflictStatus","GitFileIndexStatus","GitFileWorkingTreeStatus","GitLogCommit","PullRequest","PullRequestDateFormatting","PullRequestState","GitReflogRecord","GitRemote","GitRemoteType"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _remoteProvider__WEBPACK_IMPORTED_MODULE_19__[__WEBPACK_IMPORT_KEY__]
/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);
/* harmony import */ var _repository__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./repository */ "./src/git/models/repository.ts");
/* harmony import */ var _shortlog__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./shortlog */ "./src/git/models/shortlog.ts");
/* harmony import */ var _shortlog__WEBPACK_IMPORTED_MODULE_21___default = /*#__PURE__*/__webpack_require__.n(_shortlog__WEBPACK_IMPORTED_MODULE_21__);
/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};
/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _shortlog__WEBPACK_IMPORTED_MODULE_21__) if(["default","GitRevision","GitReference","GitBlameCommit","BranchDateFormatting","GitBranch","GitBranchStatus","CommitDateFormatting","GitCommit","GitCommitType","GitContributor","GitDiffHunk","GitFile","GitFileConflictStatus","GitFileIndexStatus","GitFileWorkingTreeStatus","GitLogCommit","PullRequest","PullRequestDateFormatting","PullRequestState","GitReflogRecord","GitRemote","GitRemoteType","Repository","RepositoryChange","RepositoryChangeComparisonMode","RepositoryChangeEvent"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _shortlog__WEBPACK_IMPORTED_MODULE_21__[__WEBPACK_IMPORT_KEY__]
/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);
/* harmony import */ var _stash__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./stash */ "./src/git/models/stash.ts");
/* harmony import */ var _stash__WEBPACK_IMPORTED_MODULE_22___default = /*#__PURE__*/__webpack_require__.n(_stash__WEBPACK_IMPORTED_MODULE_22__);
/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};
/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _stash__WEBPACK_IMPORTED_MODULE_22__) if(["default","GitRevision","GitReference","GitBlameCommit","BranchDateFormatting","GitBranch","GitBranchStatus","CommitDateFormatting","GitCommit","GitCommitType","GitContributor","GitDiffHunk","GitFile","GitFileConflictStatus","GitFileIndexStatus","GitFileWorkingTreeStatus","GitLogCommit","PullRequest","PullRequestDateFormatting","PullRequestState","GitReflogRecord","GitRemote","GitRemoteType","Repository","RepositoryChange","RepositoryChangeComparisonMode","RepositoryChangeEvent"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _stash__WEBPACK_IMPORTED_MODULE_22__[__WEBPACK_IMPORT_KEY__]
/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);
/* harmony import */ var _stashCommit__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./stashCommit */ "./src/git/models/stashCommit.ts");
/* harmony import */ var _status__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./status */ "./src/git/models/status.ts");
/* harmony import */ var _tag__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./tag */ "./src/git/models/tag.ts");
/* harmony import */ var _tree__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./tree */ "./src/git/models/tree.ts");
/* harmony import */ var _tree__WEBPACK_IMPORTED_MODULE_26___default = /*#__PURE__*/__webpack_require__.n(_tree__WEBPACK_IMPORTED_MODULE_26__);
/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};
/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _tree__WEBPACK_IMPORTED_MODULE_26__) if(["default","GitRevision","GitReference","GitBlameCommit","BranchDateFormatting","GitBranch","GitBranchStatus","CommitDateFormatting","GitCommit","GitCommitType","GitContributor","GitDiffHunk","GitFile","GitFileConflictStatus","GitFileIndexStatus","GitFileWorkingTreeStatus","GitLogCommit","PullRequest","PullRequestDateFormatting","PullRequestState","GitReflogRecord","GitRemote","GitRemoteType","Repository","RepositoryChange","RepositoryChangeComparisonMode","RepositoryChangeEvent","GitStashCommit","GitStatus","GitStatusFile","GitTag","TagDateFormatting"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _tree__WEBPACK_IMPORTED_MODULE_26__[__WEBPACK_IMPORT_KEY__]
/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);
/* harmony import */ var _user__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./user */ "./src/git/models/user.ts");
/* harmony import */ var _user__WEBPACK_IMPORTED_MODULE_27___default = /*#__PURE__*/__webpack_require__.n(_user__WEBPACK_IMPORTED_MODULE_27__);
/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};
/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _user__WEBPACK_IMPORTED_MODULE_27__) if(["default","GitRevision","GitReference","GitBlameCommit","BranchDateFormatting","GitBranch","GitBranchStatus","CommitDateFormatting","GitCommit","GitCommitType","GitContributor","GitDiffHunk","GitFile","GitFileConflictStatus","GitFileIndexStatus","GitFileWorkingTreeStatus","GitLogCommit","PullRequest","PullRequestDateFormatting","PullRequestState","GitReflogRecord","GitRemote","GitRemoteType","Repository","RepositoryChange","RepositoryChangeComparisonMode","RepositoryChangeEvent","GitStashCommit","GitStatus","GitStatusFile","GitTag","TagDateFormatting"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _user__WEBPACK_IMPORTED_MODULE_27__[__WEBPACK_IMPORT_KEY__]
/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);




const emptyStr = "";
const rangeRegex = /^(\S*?)(\.\.\.?)(\S*)\s*$/;
const shaLikeRegex = /(^[0-9a-f]{40}([\^@~:]\S*)?$)|(^[0]{40}(:|-)$)/;
const shaRegex = /(^[0-9a-f]{40}$)|(^[0]{40}(:|-)$)/;
const shaParentRegex = /(^[0-9a-f]{40})\^[0-3]?$/;
const shaShortenRegex = /^(.*?)([\^@~:].*)?$/;
const uncommittedRegex = /^[0]{40}(?:[\^@~:]\S*)?:?$/;
const uncommittedStagedRegex = /^[0]{40}([\^@~]\S*)?:$/;
function isMatch(regex, ref) {
  return ref == null || ref.length === 0 ? false : regex.test(ref);
}
var GitRevision;
(function(GitRevision2) {
  GitRevision2.deletedOrMissing = "0000000000000000000000000000000000000000-";
  GitRevision2.uncommitted = "0000000000000000000000000000000000000000";
  GitRevision2.uncommittedStaged = "0000000000000000000000000000000000000000:";
  function createRange(ref1, ref2, notation = "..") {
    return `${ref1 != null ? ref1 : ""}${notation}${ref2 != null ? ref2 : ""}`;
  }
  GitRevision2.createRange = createRange;
  function isRange(ref) {
    var _a;
    return (_a = ref == null ? void 0 : ref.includes("..")) != null ? _a : false;
  }
  GitRevision2.isRange = isRange;
  function isSha(ref) {
    return isMatch(shaRegex, ref);
  }
  GitRevision2.isSha = isSha;
  function isShaLike(ref) {
    return isMatch(shaLikeRegex, ref);
  }
  GitRevision2.isShaLike = isShaLike;
  function isShaParent(ref) {
    return isMatch(shaParentRegex, ref);
  }
  GitRevision2.isShaParent = isShaParent;
  function isUncommitted(ref) {
    return isMatch(uncommittedRegex, ref);
  }
  GitRevision2.isUncommitted = isUncommitted;
  function isUncommittedStaged(ref) {
    return isMatch(uncommittedStagedRegex, ref);
  }
  GitRevision2.isUncommittedStaged = isUncommittedStaged;
  function shorten(ref, {
    force,
    strings = {}
  } = {}) {
    var _a, _b, _c;
    if (ref === GitRevision2.deletedOrMissing)
      return "(deleted)";
    if (ref == null || ref.length === 0)
      return (_a = strings.working) != null ? _a : emptyStr;
    if (isUncommitted(ref)) {
      return isUncommittedStaged(ref) ? (_b = strings.uncommittedStaged) != null ? _b : "Index" : (_c = strings.uncommitted) != null ? _c : "Working Tree";
    }
    if (GitRevision2.isRange(ref))
      return ref;
    if (!force && !isShaLike(ref))
      return ref;
    const len = Math.max(5, _container__WEBPACK_IMPORTED_MODULE_1__.Container.config.advanced.abbreviatedShaLength);
    const match = shaShortenRegex.exec(ref);
    if (match != null) {
      const [, rev, suffix] = match;
      if (suffix != null) {
        return `${rev.substr(0, len)}${suffix}`;
      }
    }
    return ref.substr(0, len);
  }
  GitRevision2.shorten = shorten;
  function splitRange(ref) {
    const match = rangeRegex.exec(ref);
    if (match == null)
      return void 0;
    const [, ref1, notation, ref2] = match;
    return {
      ref1,
      notation,
      ref2
    };
  }
  GitRevision2.splitRange = splitRange;
})(GitRevision || (GitRevision = {}));
var GitReference;
(function(GitReference2) {
  function create(ref, repoPath, options = { refType: "revision" }) {
    var _a;
    switch (options.refType) {
      case "branch":
        return {
          name: options.name,
          ref,
          refType: "branch",
          remote: options.remote,
          repoPath
        };
      case "stash":
        return {
          name: options.name,
          ref,
          refType: "stash",
          repoPath,
          number: options.number,
          message: options.message
        };
      case "tag":
        return {
          name: options.name,
          ref,
          refType: "tag",
          repoPath
        };
      default:
        return {
          name: (_a = options.name) != null ? _a : GitRevision.shorten(ref, { force: true, strings: { working: "Working Tree" } }),
          ref,
          refType: "revision",
          repoPath,
          message: options.message
        };
    }
  }
  GitReference2.create = create;
  function fromBranch(branch) {
    return create(branch.ref, branch.repoPath, {
      refType: branch.refType,
      name: branch.name,
      remote: branch.remote,
      upstream: branch.upstream
    });
  }
  GitReference2.fromBranch = fromBranch;
  function fromTag(tag) {
    return create(tag.ref, tag.repoPath, {
      refType: tag.refType,
      name: tag.name
    });
  }
  GitReference2.fromTag = fromTag;
  function getNameWithoutRemote(ref) {
    if (ref.refType === "branch") {
      return ref.remote ? _branch__WEBPACK_IMPORTED_MODULE_2__.GitBranch.getNameWithoutRemote(ref.name) : ref.name;
    }
    return ref.name;
  }
  GitReference2.getNameWithoutRemote = getNameWithoutRemote;
  function isBranch(ref) {
    return (ref == null ? void 0 : ref.refType) === "branch";
  }
  GitReference2.isBranch = isBranch;
  function isRevision(ref) {
    return (ref == null ? void 0 : ref.refType) === "revision";
  }
  GitReference2.isRevision = isRevision;
  function isRevisionRange(ref) {
    return (ref == null ? void 0 : ref.refType) === "revision" && GitRevision.isRange(ref.ref);
  }
  GitReference2.isRevisionRange = isRevisionRange;
  function isStash(ref) {
    return (ref == null ? void 0 : ref.refType) === "stash" || (ref == null ? void 0 : ref.refType) === "revision" && (ref == null ? void 0 : ref.stashName);
  }
  GitReference2.isStash = isStash;
  function isTag(ref) {
    return (ref == null ? void 0 : ref.refType) === "tag";
  }
  GitReference2.isTag = isTag;
  function toString(refs, options) {
    var _a, _b, _c;
    if (refs == null)
      return "";
    options = options === false ? {} : { expand: true, icon: true, label: (_b = (_a = options == null ? void 0 : options.label) != null ? _a : options == null ? void 0 : options.expand) != null ? _b : true, ...options };
    let result;
    if (!Array.isArray(refs) || refs.length === 1) {
      const ref = Array.isArray(refs) ? refs[0] : refs;
      switch (ref.refType) {
        case "branch":
          result = `${options.label ? `${ref.remote ? "remote " : ""}branch ` : ""}${options.icon ? `$(git-branch)${_constants__WEBPACK_IMPORTED_MODULE_0__.GlyphChars.Space}${ref.name}${_constants__WEBPACK_IMPORTED_MODULE_0__.GlyphChars.Space}` : ref.name}`;
          break;
        case "tag":
          result = `${options.label ? "tag " : ""}${options.icon ? `$(tag)${_constants__WEBPACK_IMPORTED_MODULE_0__.GlyphChars.Space}${ref.name}${_constants__WEBPACK_IMPORTED_MODULE_0__.GlyphChars.Space}` : ref.name}`;
          break;
        default: {
          if (GitReference2.isStash(ref)) {
            let message;
            if (options.expand && ref.message) {
              message = `${ref.number != null ? `${ref.number}: ` : ""}${ref.message.length > 20 ? `${ref.message.substring(0, 20).trimRight()}${_constants__WEBPACK_IMPORTED_MODULE_0__.GlyphChars.Ellipsis}` : ref.message}`;
            }
            result = `${options.label ? "stash " : ""}${options.icon ? `$(archive)${_constants__WEBPACK_IMPORTED_MODULE_0__.GlyphChars.Space}${message != null ? message : ref.name}${_constants__WEBPACK_IMPORTED_MODULE_0__.GlyphChars.Space}` : `${(_c = message != null ? message : ref.number) != null ? _c : ref.name}`}`;
          } else if (GitRevision.isRange(ref.ref)) {
            result = ref.name;
          } else {
            let message;
            if (options.expand && ref.message) {
              message = ref.message.length > 20 ? ` (${ref.message.substring(0, 20).trimRight()}${_constants__WEBPACK_IMPORTED_MODULE_0__.GlyphChars.Ellipsis})` : ` (${ref.message})`;
            }
            let name;
            let prefix;
            if (options.expand && options.label && GitRevision.isShaParent(ref.ref)) {
              name = ref.name.endsWith("^") ? ref.name.substr(0, ref.name.length - 1) : ref.name;
              prefix = "before ";
            } else {
              name = ref.name;
              prefix = "";
            }
            result = `${options.label ? `${prefix}commit ` : ""}${options.icon ? `$(git-commit)${_constants__WEBPACK_IMPORTED_MODULE_0__.GlyphChars.Space}${name}${message != null ? message : ""}${_constants__WEBPACK_IMPORTED_MODULE_0__.GlyphChars.Space}` : `${name}${message != null ? message : ""}`}`;
          }
          break;
        }
      }
      return options.capitalize && options.expand && options.label !== false ? `${result[0].toLocaleUpperCase()}${result.substring(1)}` : result;
    }
    const expanded = options.expand ? ` (${refs.map((r) => r.name).join(", ")})` : "";
    switch (refs[0].refType) {
      case "branch":
        return `${refs.length} branches${expanded}`;
      case "tag":
        return `${refs.length} tags${expanded}`;
      default:
        return `${refs.length} ${GitReference2.isStash(refs[0]) ? "stashes" : "commits"}${expanded}`;
    }
  }
  GitReference2.toString = toString;
})(GitReference || (GitReference = {}));




























/***/ }),

/***/ "./src/git/models/pullRequest.ts":
/*!***************************************!*\
  !*** ./src/git/models/pullRequest.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PullRequestDateFormatting": () => (/* binding */ PullRequestDateFormatting),
/* harmony export */   "PullRequestState": () => (/* binding */ PullRequestState),
/* harmony export */   "PullRequest": () => (/* binding */ PullRequest)
/* harmony export */ });
/* harmony import */ var _configuration__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../configuration */ "./src/configuration.ts");
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../system */ "./src/system.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};


const PullRequestDateFormatting = {
  dateFormat: void 0,
  dateStyle: void 0,
  reset: () => {
    PullRequestDateFormatting.dateFormat = _configuration__WEBPACK_IMPORTED_MODULE_0__.configuration.get("defaultDateFormat");
    PullRequestDateFormatting.dateStyle = _configuration__WEBPACK_IMPORTED_MODULE_0__.configuration.get("defaultDateStyle");
  }
};
var PullRequestState;
(function(PullRequestState2) {
  PullRequestState2["Open"] = "Open";
  PullRequestState2["Closed"] = "Closed";
  PullRequestState2["Merged"] = "Merged";
})(PullRequestState || (PullRequestState = {}));
const _PullRequest = class {
  constructor(provider, author, id, title, url, state, date, closedDate, mergedDate) {
    this.provider = provider;
    this.author = author;
    this.id = id;
    this.title = title;
    this.url = url;
    this.state = state;
    this.date = date;
    this.closedDate = closedDate;
    this.mergedDate = mergedDate;
  }
  static is(pr) {
    return pr instanceof _PullRequest;
  }
  get formattedDate() {
    return PullRequestDateFormatting.dateStyle === _configuration__WEBPACK_IMPORTED_MODULE_0__.DateStyle.Absolute ? this.formatDate(PullRequestDateFormatting.dateFormat) : this.formatDateFromNow();
  }
  get dateFormatter() {
    var _a, _b;
    return _system__WEBPACK_IMPORTED_MODULE_1__.Dates.getFormatter((_b = (_a = this.mergedDate) != null ? _a : this.closedDate) != null ? _b : this.date);
  }
  formatDate(format) {
    if (format == null) {
      format = "MMMM Do, YYYY h:mma";
    }
    return this.dateFormatter.format(format);
  }
  formatDateFromNow() {
    return this.dateFormatter.fromNow();
  }
  get closedDateFormatter() {
    return this.closedDate === void 0 ? void 0 : _system__WEBPACK_IMPORTED_MODULE_1__.Dates.getFormatter(this.closedDate);
  }
  formatClosedDate(format) {
    var _a, _b;
    if (format == null) {
      format = "MMMM Do, YYYY h:mma";
    }
    return (_b = (_a = this.closedDateFormatter) == null ? void 0 : _a.format(format)) != null ? _b : "";
  }
  formatClosedDateFromNow() {
    var _a, _b;
    return (_b = (_a = this.closedDateFormatter) == null ? void 0 : _a.fromNow()) != null ? _b : "";
  }
  get mergedDateFormatter() {
    return this.mergedDate === void 0 ? void 0 : _system__WEBPACK_IMPORTED_MODULE_1__.Dates.getFormatter(this.mergedDate);
  }
  formatMergedDate(format) {
    var _a, _b;
    if (format == null) {
      format = "MMMM Do, YYYY h:mma";
    }
    return (_b = (_a = this.mergedDateFormatter) == null ? void 0 : _a.format(format)) != null ? _b : "";
  }
  formatMergedDateFromNow() {
    var _a, _b;
    return (_b = (_a = this.mergedDateFormatter) == null ? void 0 : _a.fromNow()) != null ? _b : "";
  }
  get updatedDateFormatter() {
    return _system__WEBPACK_IMPORTED_MODULE_1__.Dates.getFormatter(this.date);
  }
  formatUpdatedDate(format) {
    if (format == null) {
      format = "MMMM Do, YYYY h:mma";
    }
    return this.updatedDateFormatter.format(format);
  }
  formatUpdatedDateFromNow() {
    return this.updatedDateFormatter.fromNow();
  }
};
let PullRequest = _PullRequest;
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_1__.memoize)()
], PullRequest.prototype, "dateFormatter", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_1__.memoize)((format) => format == null ? "MMMM Do, YYYY h:mma" : format)
], PullRequest.prototype, "formatDate", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_1__.memoize)()
], PullRequest.prototype, "closedDateFormatter", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_1__.memoize)((format) => format == null ? "MMMM Do, YYYY h:mma" : format)
], PullRequest.prototype, "formatClosedDate", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_1__.memoize)()
], PullRequest.prototype, "mergedDateFormatter", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_1__.memoize)((format) => format == null ? "MMMM Do, YYYY h:mma" : format)
], PullRequest.prototype, "formatMergedDate", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_1__.memoize)()
], PullRequest.prototype, "updatedDateFormatter", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_1__.memoize)((format) => format == null ? "MMMM Do, YYYY h:mma" : format)
], PullRequest.prototype, "formatUpdatedDate", 1);


/***/ }),

/***/ "./src/git/models/rebase.ts":
/*!**********************************!*\
  !*** ./src/git/models/rebase.ts ***!
  \**********************************/
/***/ (() => {

"use strict";



/***/ }),

/***/ "./src/git/models/reflog.ts":
/*!**********************************!*\
  !*** ./src/git/models/reflog.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "GitReflogRecord": () => (/* binding */ GitReflogRecord)
/* harmony export */ });
/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../config */ "./src/config.ts");
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../system */ "./src/system.ts");
/* harmony import */ var _git__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../git */ "./src/git/git.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};



class GitReflogRecord {
  constructor(repoPath, sha, _selector, date, command, commandArgs, details) {
    this.repoPath = repoPath;
    this.sha = sha;
    this._selector = _selector;
    this.date = date;
    this.command = command;
    this.commandArgs = commandArgs;
    this.details = details;
    __publicField(this, "_previousSha");
  }
  formatDate(format) {
    if (format == null) {
      format = "MMMM Do, YYYY h:mma";
    }
    return this.dateFormatter.format(format);
  }
  formatDateFromNow() {
    return this.dateFormatter.fromNow();
  }
  get formattedDate() {
    return _git__WEBPACK_IMPORTED_MODULE_2__.CommitDateFormatting.dateStyle === _config__WEBPACK_IMPORTED_MODULE_0__.DateStyle.Absolute ? this.formatDate(_git__WEBPACK_IMPORTED_MODULE_2__.CommitDateFormatting.dateFormat) : this.formatDateFromNow();
  }
  get HEAD() {
    if (this._selector == null || this._selector.length === 0)
      return "";
    if (this._selector.startsWith("refs/heads")) {
      return this._selector.substr(11);
    }
    if (this._selector.startsWith("refs/remotes")) {
      return this._selector.substr(13);
    }
    return this._selector;
  }
  get previousSha() {
    return this._previousSha;
  }
  get previousShortSha() {
    return _git__WEBPACK_IMPORTED_MODULE_2__.GitRevision.shorten(this._previousSha);
  }
  get selector() {
    return this._selector;
  }
  get shortSha() {
    return _git__WEBPACK_IMPORTED_MODULE_2__.GitRevision.shorten(this.sha);
  }
  update(previousSha, selector) {
    if (previousSha !== void 0) {
      this._previousSha = previousSha;
    }
    if (selector !== void 0) {
      this._selector = selector;
    }
  }
  get dateFormatter() {
    return _system__WEBPACK_IMPORTED_MODULE_1__.Dates.getFormatter(this.date);
  }
}
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_1__.memoize)((format) => format == null ? "MMMM Do, YYYY h:mma" : format)
], GitReflogRecord.prototype, "formatDate", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_1__.memoize)()
], GitReflogRecord.prototype, "HEAD", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_1__.memoize)()
], GitReflogRecord.prototype, "previousShortSha", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_1__.memoize)()
], GitReflogRecord.prototype, "shortSha", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_1__.memoize)()
], GitReflogRecord.prototype, "dateFormatter", 1);


/***/ }),

/***/ "./src/git/models/remote.ts":
/*!**********************************!*\
  !*** ./src/git/models/remote.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "GitRemoteType": () => (/* binding */ GitRemoteType),
/* harmony export */   "GitRemote": () => (/* binding */ GitRemote)
/* harmony export */ });
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../constants */ "./src/constants.ts");
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../container */ "./src/container.ts");



var GitRemoteType;
(function(GitRemoteType2) {
  GitRemoteType2["Fetch"] = "fetch";
  GitRemoteType2["Push"] = "push";
})(GitRemoteType || (GitRemoteType = {}));
class GitRemote {
  constructor(repoPath, id, name, scheme, domain, path, provider, urls) {
    this.repoPath = repoPath;
    this.id = id;
    this.name = name;
    this.scheme = scheme;
    this.domain = domain;
    this.path = path;
    this.provider = provider;
    this.urls = urls;
  }
  static getHighlanderProviders(remotes) {
    if (remotes.length === 0)
      return void 0;
    const remote = remotes.length === 1 ? remotes[0] : remotes.find((r) => r.default);
    if (remote != null)
      return [remote.provider];
    const providerName = remotes[0].provider.name;
    if (remotes.every((r) => r.provider.name === providerName))
      return remotes.map((r) => r.provider);
    return void 0;
  }
  static getHighlanderProviderName(remotes) {
    if (remotes.length === 0)
      return void 0;
    const remote = remotes.length === 1 ? remotes[0] : remotes.find((r) => r.default);
    if (remote != null)
      return remote.provider.name;
    const providerName = remotes[0].provider.name;
    if (remotes.every((r) => r.provider.name === providerName))
      return providerName;
    return void 0;
  }
  static is(remote) {
    return remote instanceof GitRemote;
  }
  static sort(remotes) {
    return remotes.sort((a, b) => (a.default ? -1 : 1) - (b.default ? -1 : 1) || (a.name === "origin" ? -1 : 1) - (b.name === "origin" ? -1 : 1) || a.name.localeCompare(b.name, void 0, { numeric: true, sensitivity: "base" }));
  }
  get default() {
    const defaultRemote = _container__WEBPACK_IMPORTED_MODULE_1__.Container.context.workspaceState.get(_constants__WEBPACK_IMPORTED_MODULE_0__.WorkspaceState.DefaultRemote);
    return this.id === defaultRemote;
  }
  get url() {
    let bestUrl;
    for (const remoteUrl of this.urls) {
      if (remoteUrl.type === GitRemoteType.Push) {
        return remoteUrl.url;
      }
      if (bestUrl == null) {
        bestUrl = remoteUrl.url;
      }
    }
    return bestUrl;
  }
  async setAsDefault(state = true, updateViews = true) {
    void await _container__WEBPACK_IMPORTED_MODULE_1__.Container.context.workspaceState.update(_constants__WEBPACK_IMPORTED_MODULE_0__.WorkspaceState.DefaultRemote, state ? this.id : void 0);
    if (updateViews) {
      void await _container__WEBPACK_IMPORTED_MODULE_1__.Container.remotesView.refresh();
      void await _container__WEBPACK_IMPORTED_MODULE_1__.Container.repositoriesView.refresh();
    }
  }
}


/***/ }),

/***/ "./src/git/models/remoteProvider.ts":
/*!******************************************!*\
  !*** ./src/git/models/remoteProvider.ts ***!
  \******************************************/
/***/ (() => {

"use strict";



/***/ }),

/***/ "./src/git/models/repository.ts":
/*!**************************************!*\
  !*** ./src/git/models/repository.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "RepositoryChange": () => (/* binding */ RepositoryChange),
/* harmony export */   "RepositoryChangeComparisonMode": () => (/* binding */ RepositoryChangeComparisonMode),
/* harmony export */   "RepositoryChangeEvent": () => (/* binding */ RepositoryChangeEvent),
/* harmony export */   "Repository": () => (/* binding */ Repository)
/* harmony export */ });
/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! path */ "./node_modules/path-browserify/index.js");
/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _commands__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../commands */ "./src/commands.ts");
/* harmony import */ var _configuration__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../configuration */ "./src/configuration.ts");
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../constants */ "./src/constants.ts");
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../container */ "./src/container.ts");
/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../logger */ "./src/logger.ts");
/* harmony import */ var _messages__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../messages */ "./src/messages.ts");
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../system */ "./src/system.ts");
/* harmony import */ var _terminal__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../terminal */ "./src/terminal.ts");
/* harmony import */ var _git__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../git */ "./src/git/git.ts");
/* harmony import */ var _gitService__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../gitService */ "./src/git/gitService.ts");
/* harmony import */ var _gitUri__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../gitUri */ "./src/git/gitUri.ts");
/* harmony import */ var _remotes_factory__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../remotes/factory */ "./src/git/remotes/factory.ts");
/* harmony import */ var _models__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./models */ "./src/git/models/models.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};















var RepositoryChange;
(function(RepositoryChange2) {
  RepositoryChange2["Unknown"] = "unknown";
  RepositoryChange2["Closed"] = "closed";
  RepositoryChange2["Ignores"] = "ignores";
  RepositoryChange2["Starred"] = "starred";
  RepositoryChange2["CherryPick"] = "cherrypick";
  RepositoryChange2["Config"] = "config";
  RepositoryChange2["Heads"] = "heads";
  RepositoryChange2["Index"] = "index";
  RepositoryChange2["Merge"] = "merge";
  RepositoryChange2["Rebase"] = "rebase";
  RepositoryChange2["Remotes"] = "remotes";
  RepositoryChange2["RemoteProviders"] = "providers";
  RepositoryChange2["Stash"] = "stash";
  RepositoryChange2["Status"] = "status";
  RepositoryChange2["Tags"] = "tags";
})(RepositoryChange || (RepositoryChange = {}));
var RepositoryChangeComparisonMode;
(function(RepositoryChangeComparisonMode2) {
  RepositoryChangeComparisonMode2[RepositoryChangeComparisonMode2["Any"] = 0] = "Any";
  RepositoryChangeComparisonMode2[RepositoryChangeComparisonMode2["All"] = 1] = "All";
  RepositoryChangeComparisonMode2[RepositoryChangeComparisonMode2["Exclusive"] = 2] = "Exclusive";
})(RepositoryChangeComparisonMode || (RepositoryChangeComparisonMode = {}));
class RepositoryChangeEvent {
  constructor(repository, changes) {
    this.repository = repository;
    __publicField(this, "_changes");
    this._changes = new Set(changes);
  }
  toString(changesOnly = false) {
    var _a, _b;
    return changesOnly ? `changes=${_system__WEBPACK_IMPORTED_MODULE_8__.Iterables.join(this._changes, ", ")}` : `{ repository: ${(_b = (_a = this.repository) == null ? void 0 : _a.name) != null ? _b : ""}, changes: ${_system__WEBPACK_IMPORTED_MODULE_8__.Iterables.join(this._changes, ", ")} }`;
  }
  changed(...args) {
    let affected = args.slice(0, -1);
    const mode = args[args.length - 1];
    if (!this.repository.supportsChangeEvents) {
      if (this._changes.has(RepositoryChange.Unknown)) {
        affected = affected.filter((c) => c === RepositoryChange.Closed || c === RepositoryChange.Ignores || c === RepositoryChange.Starred);
        if (affected.length === 0)
          return true;
      }
    }
    if (mode === 0) {
      return _system__WEBPACK_IMPORTED_MODULE_8__.Iterables.some(this._changes, (c) => affected.includes(c));
    }
    let changes = this._changes;
    if (mode === 2) {
      if (affected.includes(RepositoryChange.CherryPick) || affected.includes(RepositoryChange.Merge) || affected.includes(RepositoryChange.Rebase)) {
        if (!affected.includes(RepositoryChange.Status)) {
          affected.push(RepositoryChange.Status);
        }
      } else if (affected.includes(RepositoryChange.Status)) {
        changes = new Set(changes);
        changes.delete(RepositoryChange.CherryPick);
        changes.delete(RepositoryChange.Merge);
        changes.delete(RepositoryChange.Rebase);
      }
    }
    const intersection = [..._system__WEBPACK_IMPORTED_MODULE_8__.Iterables.filter(changes, (c) => affected.includes(c))];
    return mode === 2 ? intersection.length === changes.size : intersection.length === affected.length;
  }
  with(changes) {
    return new RepositoryChangeEvent(this.repository, [...this._changes, ...changes]);
  }
}
let Repository = class {
  constructor(folder, path, root, onAnyRepositoryChanged, suspended, closed = false) {
    this.folder = folder;
    this.path = path;
    this.root = root;
    this.onAnyRepositoryChanged = onAnyRepositoryChanged;
    __publicField(this, "_onDidChange", new vscode__WEBPACK_IMPORTED_MODULE_1__.EventEmitter());
    __publicField(this, "_onDidChangeFileSystem", new vscode__WEBPACK_IMPORTED_MODULE_1__.EventEmitter());
    __publicField(this, "formattedName");
    __publicField(this, "id");
    __publicField(this, "index");
    __publicField(this, "name");
    __publicField(this, "normalizedPath");
    __publicField(this, "_branch");
    __publicField(this, "_disposable");
    __publicField(this, "_fireChangeDebounced");
    __publicField(this, "_fireFileSystemChangeDebounced");
    __publicField(this, "_fsWatchCounter", 0);
    __publicField(this, "_fsWatcherDisposable");
    __publicField(this, "_pendingFileSystemChange");
    __publicField(this, "_pendingRepoChange");
    __publicField(this, "_providers");
    __publicField(this, "_remotes");
    __publicField(this, "_remotesDisposable");
    __publicField(this, "_repoWatcherDisposable");
    __publicField(this, "_suspended");
    __publicField(this, "_supportsChangeEvents", true);
    __publicField(this, "_updatedAt", 0);
    __publicField(this, "_closed", false);
    __publicField(this, "_lastFetched");
    var _a;
    const relativePath = path__WEBPACK_IMPORTED_MODULE_0__.relative(folder.uri.fsPath, path);
    if (root) {
      const repoFolder = vscode__WEBPACK_IMPORTED_MODULE_1__.workspace.getWorkspaceFolder(_gitUri__WEBPACK_IMPORTED_MODULE_12__.GitUri.fromRepoPath(path));
      if (repoFolder == null) {
        this._supportsChangeEvents = false;
        this.formattedName = this.name = path__WEBPACK_IMPORTED_MODULE_0__.basename(path);
      } else {
        this.formattedName = this.name = folder.name;
      }
    } else {
      this.formattedName = relativePath ? `${folder.name} (${relativePath})` : folder.name;
      this.name = folder.name;
    }
    this.index = folder.index;
    this.normalizedPath = (path.endsWith("/") ? path : `${path}/`).toLowerCase();
    this.id = this.normalizedPath;
    this._suspended = suspended;
    this._closed = closed;
    const watcher = vscode__WEBPACK_IMPORTED_MODULE_1__.workspace.createFileSystemWatcher(new vscode__WEBPACK_IMPORTED_MODULE_1__.RelativePattern(folder, "{**/.git/config,**/.git/index,**/.git/HEAD,**/.git/*_HEAD,**/.git/MERGE_*,**/.git/refs/**,**/.git/rebase-merge/**,**/.git/sequencer/**,**/.gitignore}"));
    this._disposable = vscode__WEBPACK_IMPORTED_MODULE_1__.Disposable.from(watcher, watcher.onDidChange(this.onRepositoryChanged, this), watcher.onDidCreate(this.onRepositoryChanged, this), watcher.onDidDelete(this.onRepositoryChanged, this), _configuration__WEBPACK_IMPORTED_MODULE_3__.configuration.onDidChange(this.onConfigurationChanged, this));
    this.onConfigurationChanged();
    if (!this.supportsChangeEvents) {
      void this.tryWatchingForChangesViaBuiltInApi();
      if (_logger__WEBPACK_IMPORTED_MODULE_6__.Logger.willLog("debug")) {
        _logger__WEBPACK_IMPORTED_MODULE_6__.Logger.debug(`Repository(${this.id}) doesn't support file watching; path=${path}, workspaceFolders=${(_a = vscode__WEBPACK_IMPORTED_MODULE_1__.workspace.workspaceFolders) == null ? void 0 : _a.map((wf) => wf.uri.fsPath).join("; ")}`);
      }
    }
  }
  static formatLastFetched(lastFetched, short = true) {
    var _a, _b, _c, _d;
    const formatter = _system__WEBPACK_IMPORTED_MODULE_8__.Dates.getFormatter(new Date(lastFetched));
    if (Date.now() - lastFetched < _system__WEBPACK_IMPORTED_MODULE_8__.Dates.MillisecondsPerDay) {
      return formatter.fromNow();
    }
    if (short) {
      return formatter.format((_a = _container__WEBPACK_IMPORTED_MODULE_5__.Container.config.defaultDateShortFormat) != null ? _a : "MMM D, YYYY");
    }
    let format = (_c = _container__WEBPACK_IMPORTED_MODULE_5__.Container.config.defaultDateFormat) != null ? _c : `dddd, MMMM Do, YYYY [at] ${(_b = _container__WEBPACK_IMPORTED_MODULE_5__.Container.config.defaultTimeFormat) != null ? _b : "h:mma"}`;
    if (!/[hHm]/.test(format)) {
      format += ` [at] ${(_d = _container__WEBPACK_IMPORTED_MODULE_5__.Container.config.defaultTimeFormat) != null ? _d : "h:mma"}`;
    }
    return formatter.format(format);
  }
  static getLastFetchedUpdateInterval(lastFetched) {
    const timeDiff = Date.now() - lastFetched;
    return timeDiff < _system__WEBPACK_IMPORTED_MODULE_8__.Dates.MillisecondsPerDay ? (timeDiff < _system__WEBPACK_IMPORTED_MODULE_8__.Dates.MillisecondsPerHour ? _system__WEBPACK_IMPORTED_MODULE_8__.Dates.MillisecondsPerMinute : _system__WEBPACK_IMPORTED_MODULE_8__.Dates.MillisecondsPerHour) / 2 : 0;
  }
  static sort(repositories) {
    return repositories.sort((a, b) => (a.starred ? -1 : 1) - (b.starred ? -1 : 1) || a.index - b.index);
  }
  get onDidChange() {
    return this._onDidChange.event;
  }
  get onDidChangeFileSystem() {
    return this._onDidChangeFileSystem.event;
  }
  dispose() {
    var _a, _b;
    this.stopWatchingFileSystem();
    (_a = this._remotesDisposable) == null ? void 0 : _a.dispose();
    (_b = this._repoWatcherDisposable) == null ? void 0 : _b.dispose();
    this._disposable.dispose();
  }
  get supportsChangeEvents() {
    return this._supportsChangeEvents;
  }
  get updatedAt() {
    return this._updatedAt;
  }
  onConfigurationChanged(e) {
    if (_configuration__WEBPACK_IMPORTED_MODULE_3__.configuration.changed(e, "remotes", this.folder.uri)) {
      this._providers = _remotes_factory__WEBPACK_IMPORTED_MODULE_13__.RemoteProviderFactory.loadProviders(_configuration__WEBPACK_IMPORTED_MODULE_3__.configuration.get("remotes", this.folder.uri));
      if (e != null) {
        this.resetCaches("remotes");
        this.fireChange(RepositoryChange.Remotes);
      }
    }
  }
  onFileSystemChanged(uri) {
    if (/\.git(?:\/|\\|$)/.test(uri.fsPath))
      return;
    this.fireFileSystemChange(uri);
  }
  onRepositoryChanged(uri) {
    this._lastFetched = void 0;
    if (uri == null) {
      this.fireChange(RepositoryChange.Unknown);
      return;
    }
    if (uri.path.endsWith(".git/config")) {
      this.resetCaches();
      this.fireChange(RepositoryChange.Config, RepositoryChange.Remotes);
      return;
    }
    if (uri.path.endsWith(".git/index")) {
      this.fireChange(RepositoryChange.Index);
      return;
    }
    if (uri.path.endsWith(".git/HEAD") || uri.path.endsWith(".git/ORIG_HEAD")) {
      this.resetCaches("branch");
      this.fireChange(RepositoryChange.Heads);
      return;
    }
    if (uri.path.endsWith(".git/refs/stash")) {
      this.fireChange(RepositoryChange.Stash);
      return;
    }
    if (uri.path.endsWith(".git/CHERRY_PICK_HEAD")) {
      this.fireChange(RepositoryChange.CherryPick, RepositoryChange.Status);
      return;
    }
    if (uri.path.endsWith(".git/MERGE_HEAD")) {
      this.fireChange(RepositoryChange.Merge, RepositoryChange.Status);
      return;
    }
    if (uri.path.endsWith(".git/REBASE_HEAD") || /\.git\/rebase-merge/.test(uri.path)) {
      this.fireChange(RepositoryChange.Rebase, RepositoryChange.Status);
      return;
    }
    if (uri.path.endsWith("/.gitignore")) {
      this.fireChange(RepositoryChange.Ignores);
      return;
    }
    const match = /\.git\/refs\/(heads|remotes|tags)/.exec(uri.path);
    if (match != null) {
      switch (match[1]) {
        case "heads":
          this.resetCaches("branch");
          this.fireChange(RepositoryChange.Heads);
          return;
        case "remotes":
          this.resetCaches();
          this.fireChange(RepositoryChange.Remotes);
          return;
        case "tags":
          this.fireChange(RepositoryChange.Tags);
          return;
      }
    }
    this.fireChange(RepositoryChange.Unknown);
  }
  get closed() {
    return this._closed;
  }
  set closed(value) {
    const changed = this._closed !== value;
    this._closed = value;
    if (changed) {
      this.fireChange(RepositoryChange.Closed);
    }
  }
  branch(...args) {
    this.runTerminalCommand("branch", ...args);
  }
  branchDelete(branches, { force, remote } = {}) {
    if (!Array.isArray(branches)) {
      branches = [branches];
    }
    const localBranches = branches.filter((b) => !b.remote);
    if (localBranches.length !== 0) {
      const args = ["--delete"];
      if (force) {
        args.push("--force");
      }
      this.runTerminalCommand("branch", ...args, ...branches.map((b) => b.ref));
      if (remote) {
        const trackingBranches = localBranches.filter((b) => b.upstream != null);
        if (trackingBranches.length !== 0) {
          const branchesByOrigin = _system__WEBPACK_IMPORTED_MODULE_8__.Arrays.groupByMap(trackingBranches, (b) => _git__WEBPACK_IMPORTED_MODULE_10__.GitBranch.getRemote(b.upstream.name));
          for (const [remote2, branches2] of branchesByOrigin.entries()) {
            this.runTerminalCommand("push", "-d", remote2, ...branches2.map((b) => _git__WEBPACK_IMPORTED_MODULE_10__.GitBranch.getNameWithoutRemote(b.upstream.name)));
          }
        }
      }
    }
    const remoteBranches = branches.filter((b) => b.remote);
    if (remoteBranches.length !== 0) {
      const branchesByOrigin = _system__WEBPACK_IMPORTED_MODULE_8__.Arrays.groupByMap(remoteBranches, (b) => _git__WEBPACK_IMPORTED_MODULE_10__.GitBranch.getRemote(b.name));
      for (const [remote2, branches2] of branchesByOrigin.entries()) {
        this.runTerminalCommand("push", "-d", remote2, ...branches2.map((b) => _models__WEBPACK_IMPORTED_MODULE_14__.GitReference.getNameWithoutRemote(b)));
      }
    }
  }
  cherryPick(...args) {
    this.runTerminalCommand("cherry-pick", ...args);
  }
  containsUri(uri) {
    if (_gitUri__WEBPACK_IMPORTED_MODULE_12__.GitUri.is(uri)) {
      uri = uri.repoPath != null ? _gitUri__WEBPACK_IMPORTED_MODULE_12__.GitUri.file(uri.repoPath) : uri.documentUri();
    }
    return this.folder === vscode__WEBPACK_IMPORTED_MODULE_1__.workspace.getWorkspaceFolder(uri);
  }
  async fetch(options = {}) {
    const { progress, ...opts } = { progress: true, ...options };
    if (!progress)
      return this.fetchCore(opts);
    return void await vscode__WEBPACK_IMPORTED_MODULE_1__.window.withProgress({
      location: vscode__WEBPACK_IMPORTED_MODULE_1__.ProgressLocation.Notification,
      title: opts.branch != null ? `${opts.pull ? "Pulling" : "Fetching"} ${opts.branch.name}...` : `Fetching ${opts.remote ? `${opts.remote} of ` : ""}${this.formattedName}...`
    }, () => this.fetchCore(opts));
  }
  async fetchCore(options = {}) {
    try {
      void await _container__WEBPACK_IMPORTED_MODULE_5__.Container.git.fetch(this.path, options);
      this.fireChange(RepositoryChange.Unknown);
    } catch (ex) {
      _logger__WEBPACK_IMPORTED_MODULE_6__.Logger.error(ex);
      void _messages__WEBPACK_IMPORTED_MODULE_7__.Messages.showGenericErrorMessage("Unable to fetch repository");
    }
  }
  async getBranch(name) {
    if (name) {
      const [branch] = await this.getBranches({ filter: (b) => b.name === name });
      return branch;
    }
    if (this._branch == null || !this.supportsChangeEvents) {
      this._branch = _container__WEBPACK_IMPORTED_MODULE_5__.Container.git.getBranch(this.path);
    }
    return this._branch;
  }
  getBranches(options = {}) {
    return _container__WEBPACK_IMPORTED_MODULE_5__.Container.git.getBranches(this.path, options);
  }
  getBranchesAndOrTags(options = {}) {
    return _container__WEBPACK_IMPORTED_MODULE_5__.Container.git.getBranchesAndOrTags(this.path, options);
  }
  getChangedFilesCount(sha) {
    return _container__WEBPACK_IMPORTED_MODULE_5__.Container.git.getChangedFilesCount(this.path, sha);
  }
  getCommit(ref) {
    return _container__WEBPACK_IMPORTED_MODULE_5__.Container.git.getCommit(this.path, ref);
  }
  getContributors(options) {
    return _container__WEBPACK_IMPORTED_MODULE_5__.Container.git.getContributors(this.path, options);
  }
  async getLastFetched() {
    var _a;
    if (this._lastFetched == null) {
      const hasRemotes = await this.hasRemotes();
      if (!hasRemotes || _container__WEBPACK_IMPORTED_MODULE_5__.Container.vsls.isMaybeGuest)
        return 0;
    }
    try {
      const stat = await vscode__WEBPACK_IMPORTED_MODULE_1__.workspace.fs.stat(vscode__WEBPACK_IMPORTED_MODULE_1__.Uri.file(path__WEBPACK_IMPORTED_MODULE_0__.join(this.path, ".git/FETCH_HEAD")));
      if (stat.size > 0) {
        this._lastFetched = stat.mtime;
      }
    } catch {
      this._lastFetched = void 0;
    }
    return (_a = this._lastFetched) != null ? _a : 0;
  }
  getMergeStatus() {
    return _container__WEBPACK_IMPORTED_MODULE_5__.Container.git.getMergeStatus(this.path);
  }
  getRebaseStatus() {
    return _container__WEBPACK_IMPORTED_MODULE_5__.Container.git.getRebaseStatus(this.path);
  }
  async getRemote(remote) {
    return (await this.getRemotes()).find((r) => r.name === remote);
  }
  async getRemotes(options = {}) {
    if (this._remotes == null || !this.supportsChangeEvents) {
      if (this._providers == null) {
        const remotesCfg = _configuration__WEBPACK_IMPORTED_MODULE_3__.configuration.get("remotes", this.folder.uri);
        this._providers = _remotes_factory__WEBPACK_IMPORTED_MODULE_13__.RemoteProviderFactory.loadProviders(remotesCfg);
      }
      this._remotes = _container__WEBPACK_IMPORTED_MODULE_5__.Container.git.getRemotesCore(this.path, this._providers, { sort: true });
      void this.subscribeToRemotes(this._remotes);
    }
    return options.filter != null ? (await this._remotes).filter(options.filter) : this._remotes;
  }
  async getRichRemote(connectedOnly = false) {
    return _container__WEBPACK_IMPORTED_MODULE_5__.Container.git.getRichRemoteProvider(await this.getRemotes(), { includeDisconnected: !connectedOnly });
  }
  async subscribeToRemotes(remotes) {
    var _a;
    (_a = this._remotesDisposable) == null ? void 0 : _a.dispose();
    this._remotesDisposable = void 0;
    this._remotesDisposable = vscode__WEBPACK_IMPORTED_MODULE_1__.Disposable.from(..._system__WEBPACK_IMPORTED_MODULE_8__.Iterables.filterMap(await remotes, (r) => {
      if (!_remotes_factory__WEBPACK_IMPORTED_MODULE_13__.RichRemoteProvider.is(r.provider))
        return void 0;
      return r.provider.onDidChange(() => this.fireChange(RepositoryChange.RemoteProviders));
    }));
  }
  getStash() {
    return _container__WEBPACK_IMPORTED_MODULE_5__.Container.git.getStash(this.path);
  }
  getStatus() {
    return _container__WEBPACK_IMPORTED_MODULE_5__.Container.git.getStatusForRepo(this.path);
  }
  getTags(options) {
    return _container__WEBPACK_IMPORTED_MODULE_5__.Container.git.getTags(this.path, options);
  }
  async hasRemotes() {
    const remotes = await this.getRemotes();
    return (remotes == null ? void 0 : remotes.length) > 0;
  }
  async hasRichRemote(connectedOnly = false) {
    const remote = await this.getRichRemote(connectedOnly);
    return (remote == null ? void 0 : remote.provider) != null;
  }
  async hasUpstreamBranch() {
    const branch = await this.getBranch();
    return (branch == null ? void 0 : branch.upstream) != null;
  }
  merge(...args) {
    this.runTerminalCommand("merge", ...args);
  }
  async pull(options = {}) {
    const { progress, ...opts } = { progress: true, ...options };
    if (!progress)
      return this.pullCore();
    return void await vscode__WEBPACK_IMPORTED_MODULE_1__.window.withProgress({
      location: vscode__WEBPACK_IMPORTED_MODULE_1__.ProgressLocation.Notification,
      title: `Pulling ${this.formattedName}...`
    }, () => this.pullCore(opts));
  }
  async pullCore(options = {}) {
    try {
      const upstream = await this.hasUpstreamBranch();
      if (upstream) {
        void await vscode__WEBPACK_IMPORTED_MODULE_1__.commands.executeCommand(options.rebase ? _constants__WEBPACK_IMPORTED_MODULE_4__.BuiltInGitCommands.PullRebase : _constants__WEBPACK_IMPORTED_MODULE_4__.BuiltInGitCommands.Pull, this.path);
      } else if (_configuration__WEBPACK_IMPORTED_MODULE_3__.configuration.getAny(_constants__WEBPACK_IMPORTED_MODULE_4__.BuiltInGitConfiguration.FetchOnPull, vscode__WEBPACK_IMPORTED_MODULE_1__.Uri.file(this.path))) {
        void await _container__WEBPACK_IMPORTED_MODULE_5__.Container.git.fetch(this.path);
      }
      this.fireChange(RepositoryChange.Unknown);
    } catch (ex) {
      _logger__WEBPACK_IMPORTED_MODULE_6__.Logger.error(ex);
      void _messages__WEBPACK_IMPORTED_MODULE_7__.Messages.showGenericErrorMessage("Unable to pull repository");
    }
  }
  async push(options = {}) {
    const { progress, ...opts } = { progress: true, ...options };
    if (!progress)
      return this.pushCore(opts);
    return void await vscode__WEBPACK_IMPORTED_MODULE_1__.window.withProgress({
      location: vscode__WEBPACK_IMPORTED_MODULE_1__.ProgressLocation.Notification,
      title: _models__WEBPACK_IMPORTED_MODULE_14__.GitReference.isBranch(opts.reference) ? `${opts.publish != null ? "Publishing " : "Pushing "}${opts.reference.name}...` : `Pushing ${this.formattedName}...`
    }, () => this.pushCore(opts));
  }
  async showCreatePullRequestPrompt(remoteName, branch) {
    var _a;
    if (!_container__WEBPACK_IMPORTED_MODULE_5__.Container.actionRunners.count("createPullRequest"))
      return;
    if (!await _messages__WEBPACK_IMPORTED_MODULE_7__.Messages.showCreatePullRequestPrompt(branch.name))
      return;
    const remote = await this.getRemote(remoteName);
    void (0,_commands__WEBPACK_IMPORTED_MODULE_2__.executeActionCommand)("createPullRequest", {
      repoPath: this.path,
      remote: remote != null ? {
        name: remote.name,
        provider: remote.provider != null ? {
          id: remote.provider.id,
          name: remote.provider.name,
          domain: remote.provider.domain
        } : void 0,
        url: remote.url
      } : { name: remoteName },
      branch: {
        name: branch.name,
        isRemote: branch.remote,
        upstream: (_a = branch.upstream) == null ? void 0 : _a.name
      }
    });
  }
  async pushCore(options = {}) {
    try {
      if (_models__WEBPACK_IMPORTED_MODULE_14__.GitReference.isBranch(options.reference)) {
        const repo = await _gitService__WEBPACK_IMPORTED_MODULE_11__.GitService.getOrOpenBuiltInGitRepository(this.path);
        if (repo == null)
          return;
        if (options.publish != null) {
          await (repo == null ? void 0 : repo.push(options.publish.remote, options.reference.name, true));
          void this.showCreatePullRequestPrompt(options.publish.remote, options.reference);
        } else {
          const branch = await this.getBranch(options.reference.name);
          if (branch == null)
            return;
          const currentBranch = await this.getBranch();
          if (branch.id === (currentBranch == null ? void 0 : currentBranch.id)) {
            void await vscode__WEBPACK_IMPORTED_MODULE_1__.commands.executeCommand(options.force ? _constants__WEBPACK_IMPORTED_MODULE_4__.BuiltInGitCommands.PushForce : _constants__WEBPACK_IMPORTED_MODULE_4__.BuiltInGitCommands.Push, this.path);
          } else {
            await (repo == null ? void 0 : repo.push(branch.getRemoteName(), branch.name));
          }
        }
      } else if (options.reference != null) {
        const repo = await _gitService__WEBPACK_IMPORTED_MODULE_11__.GitService.getOrOpenBuiltInGitRepository(this.path);
        if (repo == null)
          return;
        const branch = await this.getBranch();
        if (branch == null)
          return;
        await (repo == null ? void 0 : repo.push(branch.getRemoteName(), `${options.reference.ref}:${branch.getNameWithoutRemote()}`));
      } else {
        void await vscode__WEBPACK_IMPORTED_MODULE_1__.commands.executeCommand(options.force ? _constants__WEBPACK_IMPORTED_MODULE_4__.BuiltInGitCommands.PushForce : _constants__WEBPACK_IMPORTED_MODULE_4__.BuiltInGitCommands.Push, this.path);
      }
      this.fireChange(RepositoryChange.Unknown);
    } catch (ex) {
      _logger__WEBPACK_IMPORTED_MODULE_6__.Logger.error(ex);
      void _messages__WEBPACK_IMPORTED_MODULE_7__.Messages.showGenericErrorMessage("Unable to push repository");
    }
  }
  rebase(configs, ...args) {
    this.runTerminalCommand(configs != null && configs.length !== 0 ? `${configs.join(" ")} rebase` : "rebase", ...args);
  }
  reset(...args) {
    this.runTerminalCommand("reset", ...args);
  }
  resetCaches(...cache) {
    var _a;
    if (cache.length === 0 || cache.includes("branch")) {
      this._branch = void 0;
    }
    if (cache.length === 0 || cache.includes("remotes")) {
      this._remotes = void 0;
      (_a = this._remotesDisposable) == null ? void 0 : _a.dispose();
      this._remotesDisposable = void 0;
    }
  }
  resume() {
    if (!this._suspended)
      return;
    this._suspended = false;
    if (this._pendingRepoChange != null) {
      this._fireChangeDebounced();
    }
    if (this._pendingFileSystemChange != null) {
      this._fireFileSystemChangeDebounced();
    }
  }
  revert(...args) {
    this.runTerminalCommand("revert", ...args);
  }
  searchForCommits(search, options = {}) {
    return _container__WEBPACK_IMPORTED_MODULE_5__.Container.git.getLogForSearch(this.path, search, options);
  }
  get starred() {
    const starred = _container__WEBPACK_IMPORTED_MODULE_5__.Container.context.workspaceState.get(_constants__WEBPACK_IMPORTED_MODULE_4__.WorkspaceState.StarredRepositories);
    return starred != null && starred[this.id] === true;
  }
  star(branch) {
    return this.updateStarred(true, branch);
  }
  async stashApply(stashName, options = {}) {
    void await _container__WEBPACK_IMPORTED_MODULE_5__.Container.git.stashApply(this.path, stashName, options);
    this.fireChange(RepositoryChange.Stash);
  }
  async stashDelete(stashName, ref) {
    void await _container__WEBPACK_IMPORTED_MODULE_5__.Container.git.stashDelete(this.path, stashName, ref);
    this.fireChange(RepositoryChange.Stash);
  }
  async stashSave(message, uris, options = {}) {
    void await _container__WEBPACK_IMPORTED_MODULE_5__.Container.git.stashSave(this.path, message, uris, options);
    this.fireChange(RepositoryChange.Stash);
  }
  async switch(ref, options = {}) {
    const { progress, ...opts } = { progress: true, ...options };
    if (!progress)
      return this.switchCore(ref, opts);
    return void await vscode__WEBPACK_IMPORTED_MODULE_1__.window.withProgress({
      location: vscode__WEBPACK_IMPORTED_MODULE_1__.ProgressLocation.Notification,
      title: `Switching ${this.formattedName} to ${ref}...`,
      cancellable: false
    }, () => this.switchCore(ref, opts));
  }
  async switchCore(ref, options = {}) {
    try {
      void await _container__WEBPACK_IMPORTED_MODULE_5__.Container.git.checkout(this.path, ref, options);
      this.fireChange(RepositoryChange.Unknown);
    } catch (ex) {
      _logger__WEBPACK_IMPORTED_MODULE_6__.Logger.error(ex);
      void _messages__WEBPACK_IMPORTED_MODULE_7__.Messages.showGenericErrorMessage("Unable to switch to reference");
    }
  }
  toAbsoluteUri(path, options) {
    var _a;
    const uri = vscode__WEBPACK_IMPORTED_MODULE_1__.Uri.joinPath(_gitUri__WEBPACK_IMPORTED_MODULE_12__.GitUri.file(this.path), path);
    return !((_a = options == null ? void 0 : options.validate) != null ? _a : true) || this.containsUri(uri) ? uri : void 0;
  }
  unstar(branch) {
    return this.updateStarred(false, branch);
  }
  async updateStarred(star, branch) {
    if (branch != null) {
      await this.updateStarredCore(_constants__WEBPACK_IMPORTED_MODULE_4__.WorkspaceState.StarredBranches, branch.id, star);
    } else {
      await this.updateStarredCore(_constants__WEBPACK_IMPORTED_MODULE_4__.WorkspaceState.StarredRepositories, this.id, star);
    }
    this.fireChange(RepositoryChange.Starred);
  }
  async updateStarredCore(key, id, star) {
    let starred = _container__WEBPACK_IMPORTED_MODULE_5__.Container.context.workspaceState.get(key);
    if (starred === void 0) {
      starred = Object.create(null);
    }
    if (star) {
      starred[id] = true;
    } else {
      const { [id]: _, ...rest } = starred;
      starred = rest;
    }
    await _container__WEBPACK_IMPORTED_MODULE_5__.Container.context.workspaceState.update(key, starred);
    this.fireChange(RepositoryChange.Starred);
  }
  startWatchingFileSystem() {
    this._fsWatchCounter++;
    if (this._fsWatcherDisposable == null) {
      const watcher = vscode__WEBPACK_IMPORTED_MODULE_1__.workspace.createFileSystemWatcher(new vscode__WEBPACK_IMPORTED_MODULE_1__.RelativePattern(this.folder, "**"));
      this._fsWatcherDisposable = vscode__WEBPACK_IMPORTED_MODULE_1__.Disposable.from(watcher, watcher.onDidChange(this.onFileSystemChanged, this), watcher.onDidCreate(this.onFileSystemChanged, this), watcher.onDidDelete(this.onFileSystemChanged, this));
    }
    return { dispose: () => this.stopWatchingFileSystem() };
  }
  stopWatchingFileSystem(force = false) {
    if (this._fsWatcherDisposable == null)
      return;
    if (--this._fsWatchCounter > 0 && !force)
      return;
    this._fsWatchCounter = 0;
    this._fsWatcherDisposable.dispose();
    this._fsWatcherDisposable = void 0;
  }
  suspend() {
    this._suspended = true;
  }
  tag(...args) {
    this.runTerminalCommand("tag", ...args);
  }
  tagDelete(tags) {
    if (!Array.isArray(tags)) {
      tags = [tags];
    }
    const args = ["--delete"];
    this.runTerminalCommand("tag", ...args, ...tags.map((t) => t.ref));
  }
  fireChange(...changes) {
    var _a, _b;
    const cc = _logger__WEBPACK_IMPORTED_MODULE_6__.Logger.getCorrelationContext();
    this._updatedAt = Date.now();
    if (this._fireChangeDebounced == null) {
      this._fireChangeDebounced = _system__WEBPACK_IMPORTED_MODULE_8__.Functions.debounce(this.fireChangeCore.bind(this), 250);
    }
    this._pendingRepoChange = (_b = (_a = this._pendingRepoChange) == null ? void 0 : _a.with(changes)) != null ? _b : new RepositoryChangeEvent(this, changes);
    this.onAnyRepositoryChanged(this, new RepositoryChangeEvent(this, changes));
    if (this._suspended) {
      _logger__WEBPACK_IMPORTED_MODULE_6__.Logger.debug(cc, `queueing suspended ${this._pendingRepoChange.toString(true)}`);
      return;
    }
    this._fireChangeDebounced();
  }
  fireChangeCore() {
    const e = this._pendingRepoChange;
    if (e == null)
      return;
    this._pendingRepoChange = void 0;
    _logger__WEBPACK_IMPORTED_MODULE_6__.Logger.debug(`Repository(${this.id}) firing ${e.toString(true)}`);
    this._onDidChange.fire(e);
  }
  fireFileSystemChange(uri) {
    const cc = _logger__WEBPACK_IMPORTED_MODULE_6__.Logger.getCorrelationContext();
    this._updatedAt = Date.now();
    if (this._fireFileSystemChangeDebounced == null) {
      this._fireFileSystemChangeDebounced = _system__WEBPACK_IMPORTED_MODULE_8__.Functions.debounce(this.fireFileSystemChangeCore.bind(this), 2500);
    }
    if (this._pendingFileSystemChange == null) {
      this._pendingFileSystemChange = { repository: this, uris: [] };
    }
    const e = this._pendingFileSystemChange;
    e.uris.push(uri);
    if (this._suspended) {
      _logger__WEBPACK_IMPORTED_MODULE_6__.Logger.debug(cc, `queueing suspended fs changes=${e.uris.map((u) => u.fsPath).join(", ")}`);
      return;
    }
    this._fireFileSystemChangeDebounced();
  }
  async fireFileSystemChangeCore() {
    let e = this._pendingFileSystemChange;
    if (e == null)
      return;
    this._pendingFileSystemChange = void 0;
    const uris = await _container__WEBPACK_IMPORTED_MODULE_5__.Container.git.excludeIgnoredUris(this.path, e.uris);
    if (uris.length === 0)
      return;
    if (uris.length !== e.uris.length) {
      e = { ...e, uris };
    }
    _logger__WEBPACK_IMPORTED_MODULE_6__.Logger.debug(`Repository(${this.id}) firing fs changes=${e.uris.map((u) => u.fsPath).join(", ")}`);
    this._onDidChangeFileSystem.fire(e);
  }
  runTerminalCommand(command, ...args) {
    const parsedArgs = args.map((arg) => arg.startsWith("#") || arg.includes("'") || arg.includes("(") || arg.includes(")") ? `"${arg}"` : arg);
    (0,_terminal__WEBPACK_IMPORTED_MODULE_9__.runGitCommandInTerminal)(command, parsedArgs.join(" "), this.path, true);
    setTimeout(() => this.fireChange(RepositoryChange.Unknown), 2500);
  }
  async tryWatchingForChangesViaBuiltInApi() {
    const repo = await _gitService__WEBPACK_IMPORTED_MODULE_11__.GitService.getOrOpenBuiltInGitRepository(this.path);
    if (repo != null) {
      const internalRepo = repo._repository;
      if (internalRepo != null && "onDidChangeRepository" in internalRepo) {
        try {
          this._repoWatcherDisposable = internalRepo.onDidChangeRepository((e) => this.onRepositoryChanged(e));
          this._supportsChangeEvents = true;
          if (_logger__WEBPACK_IMPORTED_MODULE_6__.Logger.willLog("debug")) {
            _logger__WEBPACK_IMPORTED_MODULE_6__.Logger.debug(`Repository(${this.id}) is now using fallback file watching`);
          }
        } catch {
        }
      }
    }
  }
};
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_8__.debug)()
], Repository.prototype, "onRepositoryChanged", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_8__.gate)(),
  (0,_system__WEBPACK_IMPORTED_MODULE_8__.log)()
], Repository.prototype, "branch", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_8__.gate)(),
  (0,_system__WEBPACK_IMPORTED_MODULE_8__.log)()
], Repository.prototype, "branchDelete", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_8__.gate)(() => ""),
  (0,_system__WEBPACK_IMPORTED_MODULE_8__.log)()
], Repository.prototype, "cherryPick", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_8__.gate)(),
  (0,_system__WEBPACK_IMPORTED_MODULE_8__.log)()
], Repository.prototype, "fetch", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_8__.gate)()
], Repository.prototype, "getLastFetched", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_8__.gate)(() => ""),
  (0,_system__WEBPACK_IMPORTED_MODULE_8__.log)()
], Repository.prototype, "merge", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_8__.gate)(),
  (0,_system__WEBPACK_IMPORTED_MODULE_8__.log)()
], Repository.prototype, "pull", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_8__.gate)(),
  (0,_system__WEBPACK_IMPORTED_MODULE_8__.log)()
], Repository.prototype, "push", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_8__.gate)(() => ""),
  (0,_system__WEBPACK_IMPORTED_MODULE_8__.log)()
], Repository.prototype, "rebase", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_8__.gate)(() => ""),
  (0,_system__WEBPACK_IMPORTED_MODULE_8__.log)()
], Repository.prototype, "reset", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_8__.gate)(),
  (0,_system__WEBPACK_IMPORTED_MODULE_8__.log)()
], Repository.prototype, "revert", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_8__.gate)(() => ""),
  (0,_system__WEBPACK_IMPORTED_MODULE_8__.log)()
], Repository.prototype, "stashApply", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_8__.gate)(() => ""),
  (0,_system__WEBPACK_IMPORTED_MODULE_8__.log)()
], Repository.prototype, "stashDelete", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_8__.gate)(() => ""),
  (0,_system__WEBPACK_IMPORTED_MODULE_8__.log)()
], Repository.prototype, "stashSave", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_8__.gate)(),
  (0,_system__WEBPACK_IMPORTED_MODULE_8__.log)()
], Repository.prototype, "switch", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_8__.gate)(),
  (0,_system__WEBPACK_IMPORTED_MODULE_8__.log)()
], Repository.prototype, "tag", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_8__.gate)(),
  (0,_system__WEBPACK_IMPORTED_MODULE_8__.log)()
], Repository.prototype, "tagDelete", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_8__.debug)()
], Repository.prototype, "fireChange", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_8__.debug)()
], Repository.prototype, "fireFileSystemChange", 1);
Repository = __decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_8__.logName)((r, name) => `${name}(${r.id})`)
], Repository);


/***/ }),

/***/ "./src/git/models/shortlog.ts":
/*!************************************!*\
  !*** ./src/git/models/shortlog.ts ***!
  \************************************/
/***/ (() => {

"use strict";



/***/ }),

/***/ "./src/git/models/stash.ts":
/*!*********************************!*\
  !*** ./src/git/models/stash.ts ***!
  \*********************************/
/***/ (() => {

"use strict";



/***/ }),

/***/ "./src/git/models/stashCommit.ts":
/*!***************************************!*\
  !*** ./src/git/models/stashCommit.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "GitStashCommit": () => (/* binding */ GitStashCommit)
/* harmony export */ });
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../container */ "./src/container.ts");
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../system */ "./src/system.ts");
/* harmony import */ var _file__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./file */ "./src/git/models/file.ts");
/* harmony import */ var _logCommit__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./logCommit */ "./src/git/models/logCommit.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};




const stashNumberRegex = /stash@{(\d+)}/;
const _GitStashCommit = class extends _logCommit__WEBPACK_IMPORTED_MODULE_3__.GitLogCommit {
  constructor(type, stashName, repoPath, sha, authorDate, committedDate, message, fileName, files) {
    super(type, repoPath, sha, "You", void 0, authorDate, committedDate, message, fileName, files);
    this.stashName = stashName;
    __publicField(this, "refType", "stash");
    __publicField(this, "_untrackedFilesChecked", false);
  }
  static isOfRefType(commit) {
    return (commit == null ? void 0 : commit.refType) === "stash";
  }
  static is(commit) {
    return commit instanceof _GitStashCommit;
  }
  get number() {
    const match = stashNumberRegex.exec(this.stashName);
    if (match == null)
      return void 0;
    return match[1];
  }
  get shortSha() {
    return this.stashName;
  }
  async checkForUntrackedFiles() {
    if (!this._untrackedFilesChecked) {
      this._untrackedFilesChecked = true;
      const commit = await _container__WEBPACK_IMPORTED_MODULE_0__.Container.git.getCommit(this.repoPath, `${this.stashName}^3`);
      if (commit != null && commit.files.length !== 0) {
        const files = commit.files.map((s) => ({
          ...s,
          status: _file__WEBPACK_IMPORTED_MODULE_2__.GitFileWorkingTreeStatus.Untracked,
          conflictStatus: void 0,
          indexStatus: void 0,
          workingTreeStatus: void 0
        }));
        this.files.push(...files);
      }
    }
  }
  with(changes) {
    var _a, _b, _c, _d, _e, _f;
    return new _GitStashCommit((_a = changes.type) != null ? _a : this.type, this.stashName, this.repoPath, this.getChangedValue(changes.sha, this.sha), (_b = changes.authorDate) != null ? _b : this.authorDate, (_c = changes.committedDate) != null ? _c : this.committerDate, (_d = changes.message) != null ? _d : this.message, (_e = changes.fileName) != null ? _e : this.fileName, (_f = this.getChangedValue(changes.files, this.files)) != null ? _f : []);
  }
};
let GitStashCommit = _GitStashCommit;
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_1__.memoize)()
], GitStashCommit.prototype, "number", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_1__.gate)()
], GitStashCommit.prototype, "checkForUntrackedFiles", 1);


/***/ }),

/***/ "./src/git/models/status.ts":
/*!**********************************!*\
  !*** ./src/git/models/status.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "GitStatus": () => (/* binding */ GitStatus),
/* harmony export */   "GitStatusFile": () => (/* binding */ GitStatusFile)
/* harmony export */ });
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../constants */ "./src/constants.ts");
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../container */ "./src/container.ts");
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../system */ "./src/system.ts");
/* harmony import */ var _gitUri__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../gitUri */ "./src/git/gitUri.ts");
/* harmony import */ var _branch__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./branch */ "./src/git/models/branch.ts");
/* harmony import */ var _file__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./file */ "./src/git/models/file.ts");
/* harmony import */ var _models__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./models */ "./src/git/models/models.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};







const _GitStatus = class {
  constructor(repoPath, branch, sha, files, state, upstream, rebasing = false) {
    this.repoPath = repoPath;
    this.branch = branch;
    this.sha = sha;
    this.files = files;
    this.state = state;
    this.upstream = upstream;
    this.rebasing = rebasing;
    __publicField(this, "detached");
    this.detached = _branch__WEBPACK_IMPORTED_MODULE_4__.GitBranch.isDetached(branch);
    if (this.detached) {
      this.branch = _branch__WEBPACK_IMPORTED_MODULE_4__.GitBranch.formatDetached(this.sha);
    }
  }
  get conflicts() {
    return this.files.filter((f) => f.conflicted);
  }
  get hasConflicts() {
    return this.files.some((f) => f.conflicted);
  }
  get ref() {
    return this.detached ? this.sha : this.branch;
  }
  computeWorkingTreeStatus() {
    let conflictedAdds = 0;
    let conflictedDeletes = 0;
    let conflictedChanges = 0;
    let stagedAdds = 0;
    let unstagedAdds = 0;
    let stagedChanges = 0;
    let unstagedChanges = 0;
    let stagedDeletes = 0;
    let unstagedDeletes = 0;
    const conflictedAddsAndChanges = [];
    const stagedAddsAndChanges = [];
    const unstagedAddsAndChanges = [];
    for (const f of this.files) {
      switch (f.conflictStatus) {
        case void 0:
          break;
        case _file__WEBPACK_IMPORTED_MODULE_5__.GitFileConflictStatus.AddedByBoth:
        case _file__WEBPACK_IMPORTED_MODULE_5__.GitFileConflictStatus.AddedByUs:
        case _file__WEBPACK_IMPORTED_MODULE_5__.GitFileConflictStatus.AddedByThem:
          conflictedAdds++;
          stagedAddsAndChanges.push(f);
          break;
        case _file__WEBPACK_IMPORTED_MODULE_5__.GitFileConflictStatus.DeletedByBoth:
        case _file__WEBPACK_IMPORTED_MODULE_5__.GitFileConflictStatus.DeletedByUs:
        case _file__WEBPACK_IMPORTED_MODULE_5__.GitFileConflictStatus.DeletedByThem:
          conflictedDeletes++;
          break;
        default:
          conflictedChanges++;
          conflictedAddsAndChanges.push(f);
          break;
      }
      switch (f.indexStatus) {
        case void 0:
          break;
        case _file__WEBPACK_IMPORTED_MODULE_5__.GitFileIndexStatus.Added:
          stagedAdds++;
          stagedAddsAndChanges.push(f);
          break;
        case _file__WEBPACK_IMPORTED_MODULE_5__.GitFileIndexStatus.Deleted:
          stagedDeletes++;
          break;
        default:
          stagedChanges++;
          stagedAddsAndChanges.push(f);
          break;
      }
      switch (f.workingTreeStatus) {
        case void 0:
        case _file__WEBPACK_IMPORTED_MODULE_5__.GitFileWorkingTreeStatus.Ignored:
          break;
        case _file__WEBPACK_IMPORTED_MODULE_5__.GitFileWorkingTreeStatus.Added:
        case _file__WEBPACK_IMPORTED_MODULE_5__.GitFileWorkingTreeStatus.Untracked:
          unstagedAdds++;
          unstagedAddsAndChanges.push(f);
          break;
        case _file__WEBPACK_IMPORTED_MODULE_5__.GitFileWorkingTreeStatus.Deleted:
          unstagedDeletes++;
          break;
        default:
          unstagedChanges++;
          unstagedAddsAndChanges.push(f);
          break;
      }
    }
    const conflicted = conflictedAdds + conflictedChanges + conflictedDeletes;
    const staged = stagedAdds + stagedChanges + stagedDeletes;
    const unstaged = unstagedAdds + unstagedChanges + unstagedDeletes;
    return {
      conflicted,
      conflictedAddsAndChanges,
      conflictedStatus: conflicted > 0 ? `+${conflictedAdds} ~${conflictedChanges} -${conflictedDeletes}` : "",
      staged,
      stagedStatus: staged > 0 ? `+${stagedAdds} ~${stagedChanges} -${stagedDeletes}` : "",
      stagedAddsAndChanges,
      unstaged,
      unstagedStatus: unstaged > 0 ? `+${unstagedAdds} ~${unstagedChanges} -${unstagedDeletes}` : "",
      unstagedAddsAndChanges
    };
  }
  getDiffStatus() {
    const diff = {
      added: 0,
      deleted: 0,
      changed: 0
    };
    if (this.files.length === 0)
      return diff;
    for (const f of this.files) {
      switch (f.status) {
        case "A":
        case "?":
          diff.added++;
          break;
        case "D":
          diff.deleted++;
          break;
        default:
          diff.changed++;
          break;
      }
    }
    return diff;
  }
  getFormattedDiffStatus({
    compact,
    empty,
    expand,
    prefix = "",
    separator = " ",
    suffix = ""
  } = {}) {
    const { added, changed, deleted } = this.getDiffStatus();
    if (added === 0 && changed === 0 && deleted === 0)
      return empty != null ? empty : "";
    if (expand) {
      let status2 = "";
      if (added) {
        status2 += `${_system__WEBPACK_IMPORTED_MODULE_2__.Strings.pluralize("file", added)} added`;
      }
      if (changed) {
        status2 += `${status2.length === 0 ? "" : separator}${_system__WEBPACK_IMPORTED_MODULE_2__.Strings.pluralize("file", changed)} changed`;
      }
      if (deleted) {
        status2 += `${status2.length === 0 ? "" : separator}${_system__WEBPACK_IMPORTED_MODULE_2__.Strings.pluralize("file", deleted)} deleted`;
      }
      return `${prefix}${status2}${suffix}`;
    }
    let status = "";
    if (compact) {
      if (added !== 0) {
        status += `+${added}`;
      }
      if (changed !== 0) {
        status += `${status.length === 0 ? "" : separator}~${changed}`;
      }
      if (deleted !== 0) {
        status += `${status.length === 0 ? "" : separator}-${deleted}`;
      }
    } else {
      status += `+${added}${separator}~${changed}${separator}-${deleted}`;
    }
    return `${prefix}${status}${suffix}`;
  }
  async getRemote() {
    if (this.upstream == null)
      return void 0;
    const remotes = await _container__WEBPACK_IMPORTED_MODULE_1__.Container.git.getRemotes(this.repoPath);
    if (remotes.length === 0)
      return void 0;
    const remoteName = _branch__WEBPACK_IMPORTED_MODULE_4__.GitBranch.getRemote(this.upstream);
    return remotes.find((r) => r.name === remoteName);
  }
  getUpstreamStatus(options) {
    return _GitStatus.getUpstreamStatus(this.upstream ? { name: this.upstream, missing: false } : void 0, this.state, options);
  }
  static getUpstreamStatus(upstream, state, options = {}) {
    var _a;
    const { count = true, expand = false, icons = false, prefix = "", separator = " ", suffix = "" } = options;
    if (upstream == null || state.behind === 0 && state.ahead === 0)
      return (_a = options.empty) != null ? _a : "";
    if (expand) {
      let status = "";
      if (upstream.missing) {
        status = "missing";
      } else {
        if (state.behind) {
          status += `${_system__WEBPACK_IMPORTED_MODULE_2__.Strings.pluralize("commit", state.behind, {
            infix: icons ? "$(arrow-down) " : void 0
          })} behind`;
        }
        if (state.ahead) {
          status += `${status.length === 0 ? "" : separator}${_system__WEBPACK_IMPORTED_MODULE_2__.Strings.pluralize("commit", state.ahead, {
            infix: icons ? "$(arrow-up) " : void 0
          })} ahead`;
          if (suffix.startsWith(` ${upstream.name.split("/")[0]}`)) {
            status += " of";
          }
        }
      }
      return `${prefix}${status}${suffix}`;
    }
    const showCounts = count && !upstream.missing;
    return `${prefix}${showCounts ? state.behind : ""}${showCounts || state.behind !== 0 ? _constants__WEBPACK_IMPORTED_MODULE_0__.GlyphChars.ArrowDown : ""}${separator}${showCounts ? state.ahead : ""}${showCounts || state.ahead !== 0 ? _constants__WEBPACK_IMPORTED_MODULE_0__.GlyphChars.ArrowUp : ""}${suffix}`;
  }
};
let GitStatus = _GitStatus;
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_2__.memoize)()
], GitStatus.prototype, "conflicts", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_2__.memoize)()
], GitStatus.prototype, "hasConflicts", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_2__.memoize)()
], GitStatus.prototype, "computeWorkingTreeStatus", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_2__.memoize)()
], GitStatus.prototype, "getDiffStatus", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_2__.memoize)()
], GitStatus.prototype, "getRemote", 1);
const _GitStatusFile = class {
  constructor(repoPath, x, y, fileName, originalFileName) {
    this.repoPath = repoPath;
    this.fileName = fileName;
    this.originalFileName = originalFileName;
    __publicField(this, "conflictStatus");
    __publicField(this, "indexStatus");
    __publicField(this, "workingTreeStatus");
    if (x != null && y != null) {
      switch (x + y) {
        case "??":
          this.workingTreeStatus = _file__WEBPACK_IMPORTED_MODULE_5__.GitFileWorkingTreeStatus.Untracked;
          break;
        case "!!":
          this.workingTreeStatus = _file__WEBPACK_IMPORTED_MODULE_5__.GitFileWorkingTreeStatus.Ignored;
          break;
        case "AA":
          this.conflictStatus = _file__WEBPACK_IMPORTED_MODULE_5__.GitFileConflictStatus.AddedByBoth;
          break;
        case "AU":
          this.conflictStatus = _file__WEBPACK_IMPORTED_MODULE_5__.GitFileConflictStatus.AddedByUs;
          break;
        case "UA":
          this.conflictStatus = _file__WEBPACK_IMPORTED_MODULE_5__.GitFileConflictStatus.AddedByThem;
          break;
        case "DD":
          this.conflictStatus = _file__WEBPACK_IMPORTED_MODULE_5__.GitFileConflictStatus.DeletedByBoth;
          break;
        case "DU":
          this.conflictStatus = _file__WEBPACK_IMPORTED_MODULE_5__.GitFileConflictStatus.DeletedByUs;
          break;
        case "UD":
          this.conflictStatus = _file__WEBPACK_IMPORTED_MODULE_5__.GitFileConflictStatus.DeletedByThem;
          break;
        case "UU":
          this.conflictStatus = _file__WEBPACK_IMPORTED_MODULE_5__.GitFileConflictStatus.ModifiedByBoth;
          break;
      }
    }
    if (this.conflictStatus == null) {
      switch (x) {
        case "A":
          this.indexStatus = _file__WEBPACK_IMPORTED_MODULE_5__.GitFileIndexStatus.Added;
          break;
        case "D":
          this.indexStatus = _file__WEBPACK_IMPORTED_MODULE_5__.GitFileIndexStatus.Deleted;
          break;
        case "M":
          this.indexStatus = _file__WEBPACK_IMPORTED_MODULE_5__.GitFileIndexStatus.Modified;
          break;
        case "R":
          this.indexStatus = _file__WEBPACK_IMPORTED_MODULE_5__.GitFileIndexStatus.Renamed;
          break;
        case "C":
          this.indexStatus = _file__WEBPACK_IMPORTED_MODULE_5__.GitFileIndexStatus.Copied;
          break;
      }
      switch (y) {
        case "A":
          this.workingTreeStatus = _file__WEBPACK_IMPORTED_MODULE_5__.GitFileWorkingTreeStatus.Modified;
          break;
        case "D":
          this.workingTreeStatus = _file__WEBPACK_IMPORTED_MODULE_5__.GitFileWorkingTreeStatus.Modified;
          break;
        case "M":
          this.workingTreeStatus = _file__WEBPACK_IMPORTED_MODULE_5__.GitFileWorkingTreeStatus.Modified;
          break;
      }
    }
  }
  get conflicted() {
    return this.conflictStatus != null;
  }
  get edited() {
    return this.workingTreeStatus != null;
  }
  get staged() {
    return this.indexStatus != null;
  }
  get status() {
    var _a, _b;
    return (_b = (_a = this.conflictStatus) != null ? _a : this.indexStatus) != null ? _b : this.workingTreeStatus;
  }
  get uri() {
    return _gitUri__WEBPACK_IMPORTED_MODULE_3__.GitUri.resolveToUri(this.fileName, this.repoPath);
  }
  getFormattedDirectory(includeOriginal = false) {
    return _file__WEBPACK_IMPORTED_MODULE_5__.GitFile.getFormattedDirectory(this, includeOriginal);
  }
  getFormattedPath(options = {}) {
    return _file__WEBPACK_IMPORTED_MODULE_5__.GitFile.getFormattedPath(this, options);
  }
  getOcticon() {
    return _file__WEBPACK_IMPORTED_MODULE_5__.GitFile.getStatusCodicon(this.status);
  }
  getStatusText() {
    return _file__WEBPACK_IMPORTED_MODULE_5__.GitFile.getStatusText(this.status);
  }
  toPsuedoCommits(user) {
    var _a, _b, _c, _d, _e, _f, _g;
    const commits = [];
    if (this.conflictStatus != null) {
      commits.push(new _models__WEBPACK_IMPORTED_MODULE_6__.GitLogCommit(_models__WEBPACK_IMPORTED_MODULE_6__.GitCommitType.LogFile, this.repoPath, _models__WEBPACK_IMPORTED_MODULE_6__.GitRevision.uncommitted, "You", (_a = user == null ? void 0 : user.email) != null ? _a : void 0, new Date(), new Date(), "", this.fileName, [this], this.status, this.originalFileName, _models__WEBPACK_IMPORTED_MODULE_6__.GitRevision.uncommittedStaged, (_b = this.originalFileName) != null ? _b : this.fileName));
      return commits;
    }
    if (this.workingTreeStatus == null && this.indexStatus == null)
      return commits;
    if (this.workingTreeStatus != null && this.indexStatus != null) {
      commits.push(new _models__WEBPACK_IMPORTED_MODULE_6__.GitLogCommit(_models__WEBPACK_IMPORTED_MODULE_6__.GitCommitType.LogFile, this.repoPath, _models__WEBPACK_IMPORTED_MODULE_6__.GitRevision.uncommitted, "You", (_c = user == null ? void 0 : user.email) != null ? _c : void 0, new Date(), new Date(), "", this.fileName, [this], this.status, this.originalFileName, _models__WEBPACK_IMPORTED_MODULE_6__.GitRevision.uncommittedStaged, (_d = this.originalFileName) != null ? _d : this.fileName), new _models__WEBPACK_IMPORTED_MODULE_6__.GitLogCommit(_models__WEBPACK_IMPORTED_MODULE_6__.GitCommitType.LogFile, this.repoPath, _models__WEBPACK_IMPORTED_MODULE_6__.GitRevision.uncommittedStaged, "You", user != null ? user.email : void 0, new Date(), new Date(), "", this.fileName, [this], this.status, this.originalFileName, "HEAD", (_e = this.originalFileName) != null ? _e : this.fileName));
    } else {
      commits.push(new _models__WEBPACK_IMPORTED_MODULE_6__.GitLogCommit(_models__WEBPACK_IMPORTED_MODULE_6__.GitCommitType.LogFile, this.repoPath, this.workingTreeStatus != null ? _models__WEBPACK_IMPORTED_MODULE_6__.GitRevision.uncommitted : _models__WEBPACK_IMPORTED_MODULE_6__.GitRevision.uncommittedStaged, "You", (_f = user == null ? void 0 : user.email) != null ? _f : void 0, new Date(), new Date(), "", this.fileName, [this], this.status, this.originalFileName, "HEAD", (_g = this.originalFileName) != null ? _g : this.fileName));
    }
    return commits;
  }
  with(changes) {
    var _a, _b, _c, _d, _e;
    const working = this.getChangedValue(changes.workTreeStatus, this.workingTreeStatus);
    let status;
    switch (working) {
      case _file__WEBPACK_IMPORTED_MODULE_5__.GitFileWorkingTreeStatus.Untracked:
        status = "??";
        break;
      case _file__WEBPACK_IMPORTED_MODULE_5__.GitFileWorkingTreeStatus.Ignored:
        status = "!!";
        break;
      default:
        status = (_b = this.getChangedValue(changes.conflictStatus, this.conflictStatus)) != null ? _b : `${(_a = this.getChangedValue(changes.indexStatus, this.indexStatus)) != null ? _a : " "}${working != null ? working : " "}`;
        break;
    }
    return new _GitStatusFile(this.repoPath, ((_c = status[0]) == null ? void 0 : _c.trim()) || void 0, ((_d = status[1]) == null ? void 0 : _d.trim()) || void 0, (_e = changes.fileName) != null ? _e : this.fileName, this.getChangedValue(changes.originalFileName, this.originalFileName));
  }
  getChangedValue(change, original) {
    if (change === void 0)
      return original;
    return change !== null ? change : void 0;
  }
};
let GitStatusFile = _GitStatusFile;
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_2__.memoize)()
], GitStatusFile.prototype, "uri", 1);


/***/ }),

/***/ "./src/git/models/tag.ts":
/*!*******************************!*\
  !*** ./src/git/models/tag.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TagDateFormatting": () => (/* binding */ TagDateFormatting),
/* harmony export */   "GitTag": () => (/* binding */ GitTag)
/* harmony export */ });
/* harmony import */ var _configuration__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../configuration */ "./src/configuration.ts");
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../system */ "./src/system.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};


const TagDateFormatting = {
  dateFormat: void 0,
  dateStyle: void 0,
  reset: () => {
    TagDateFormatting.dateFormat = _configuration__WEBPACK_IMPORTED_MODULE_0__.configuration.get("defaultDateFormat");
    TagDateFormatting.dateStyle = _configuration__WEBPACK_IMPORTED_MODULE_0__.configuration.get("defaultDateStyle");
  }
};
const _GitTag = class {
  constructor(repoPath, name, sha, message, date, commitDate) {
    this.repoPath = repoPath;
    this.name = name;
    this.sha = sha;
    this.message = message;
    this.date = date;
    this.commitDate = commitDate;
    __publicField(this, "refType", "tag");
  }
  static is(tag) {
    return tag instanceof _GitTag;
  }
  static isOfRefType(tag) {
    return (tag == null ? void 0 : tag.refType) === "tag";
  }
  static sort(tags, options) {
    options = { orderBy: _configuration__WEBPACK_IMPORTED_MODULE_0__.configuration.get("sortTagsBy"), ...options };
    switch (options.orderBy) {
      case _configuration__WEBPACK_IMPORTED_MODULE_0__.TagSorting.DateAsc:
        return tags.sort((a, b) => a.date.getTime() - b.date.getTime());
      case _configuration__WEBPACK_IMPORTED_MODULE_0__.TagSorting.NameAsc:
        return tags.sort((a, b) => a.name.localeCompare(b.name, void 0, { numeric: true, sensitivity: "base" }));
      case _configuration__WEBPACK_IMPORTED_MODULE_0__.TagSorting.NameDesc:
        return tags.sort((a, b) => b.name.localeCompare(a.name, void 0, { numeric: true, sensitivity: "base" }));
      case _configuration__WEBPACK_IMPORTED_MODULE_0__.TagSorting.DateDesc:
      default:
        return tags.sort((a, b) => b.date.getTime() - a.date.getTime());
    }
  }
  get formattedDate() {
    return TagDateFormatting.dateStyle === _configuration__WEBPACK_IMPORTED_MODULE_0__.DateStyle.Absolute ? this.formatDate(TagDateFormatting.dateFormat) : this.formatDateFromNow();
  }
  get ref() {
    return this.name;
  }
  get commitDateFormatter() {
    return this.commitDate == null ? void 0 : _system__WEBPACK_IMPORTED_MODULE_1__.Dates.getFormatter(this.commitDate);
  }
  get dateFormatter() {
    return _system__WEBPACK_IMPORTED_MODULE_1__.Dates.getFormatter(this.date);
  }
  formatCommitDate(format) {
    const formatter = this.commitDateFormatter;
    if (formatter == null)
      return "";
    if (format == null) {
      format = "MMMM Do, YYYY h:mma";
    }
    return formatter.format(format);
  }
  formatCommitDateFromNow() {
    const formatter = this.commitDateFormatter;
    if (formatter == null)
      return "";
    return formatter.fromNow();
  }
  formatDate(format) {
    if (format == null) {
      format = "MMMM Do, YYYY h:mma";
    }
    return this.dateFormatter.format(format);
  }
  formatDateFromNow() {
    return this.dateFormatter.fromNow();
  }
  getBasename() {
    const index = this.name.lastIndexOf("/");
    return index !== -1 ? this.name.substring(index + 1) : this.name;
  }
};
let GitTag = _GitTag;
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_1__.memoize)()
], GitTag.prototype, "commitDateFormatter", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_1__.memoize)()
], GitTag.prototype, "dateFormatter", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_1__.memoize)((format) => format == null ? "MMMM Do, YYYY h:mma" : format)
], GitTag.prototype, "formatCommitDate", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_1__.memoize)((format) => format == null ? "MMMM Do, YYYY h:mma" : format)
], GitTag.prototype, "formatDate", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_1__.memoize)()
], GitTag.prototype, "getBasename", 1);


/***/ }),

/***/ "./src/git/models/tree.ts":
/*!********************************!*\
  !*** ./src/git/models/tree.ts ***!
  \********************************/
/***/ (() => {

"use strict";



/***/ }),

/***/ "./src/git/models/user.ts":
/*!********************************!*\
  !*** ./src/git/models/user.ts ***!
  \********************************/
/***/ (() => {

"use strict";



/***/ }),

/***/ "./src/git/parsers/blameParser.ts":
/*!****************************************!*\
  !*** ./src/git/parsers/blameParser.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "GitBlameParser": () => (/* binding */ GitBlameParser)
/* harmony export */ });
/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! path */ "./node_modules/path-browserify/index.js");
/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../system */ "./src/system.ts");
/* harmony import */ var _git__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../git */ "./src/git/git.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};



const emptyStr = "";
const slash = "/";
const _GitBlameParser = class {
  static parse(data, repoPath, fileName, currentUser) {
    if (!data)
      return void 0;
    const authors = new Map();
    const commits = new Map();
    const lines = [];
    let relativeFileName;
    let entry = void 0;
    let line;
    let lineParts;
    let first = true;
    for (line of _system__WEBPACK_IMPORTED_MODULE_1__.Strings.lines(data)) {
      lineParts = line.split(" ");
      if (lineParts.length < 2)
        continue;
      if (entry === void 0) {
        entry = {
          author: void 0,
          sha: lineParts[0],
          originalLine: parseInt(lineParts[1], 10),
          line: parseInt(lineParts[2], 10),
          lineCount: parseInt(lineParts[3], 10)
        };
        continue;
      }
      switch (lineParts[0]) {
        case "author":
          if (_git__WEBPACK_IMPORTED_MODULE_2__.GitRevision.isUncommitted(entry.sha)) {
            entry.author = "You";
          } else {
            entry.author = lineParts.slice(1).join(" ").trim();
          }
          break;
        case "author-mail": {
          if (_git__WEBPACK_IMPORTED_MODULE_2__.GitRevision.isUncommitted(entry.sha)) {
            entry.authorEmail = currentUser !== void 0 ? currentUser.email : void 0;
            continue;
          }
          entry.authorEmail = lineParts.slice(1).join(" ").trim();
          const start = entry.authorEmail.indexOf("<");
          if (start >= 0) {
            const end = entry.authorEmail.indexOf(">", start);
            if (end > start) {
              entry.authorEmail = entry.authorEmail.substring(start + 1, end);
            } else {
              entry.authorEmail = entry.authorEmail.substring(start + 1);
            }
          }
          break;
        }
        case "author-time":
          entry.authorDate = lineParts[1];
          break;
        case "author-tz":
          entry.authorTimeZone = lineParts[1];
          break;
        case "committer-time":
          entry.committerDate = lineParts[1];
          break;
        case "committer-tz":
          entry.committerTimeZone = lineParts[1];
          break;
        case "summary":
          entry.summary = lineParts.slice(1).join(" ").trim();
          break;
        case "previous":
          entry.previousSha = lineParts[1];
          entry.previousFileName = lineParts.slice(2).join(" ");
          break;
        case "filename":
          entry.fileName = lineParts.slice(1).join(" ");
          if (first && repoPath === void 0) {
            repoPath = _system__WEBPACK_IMPORTED_MODULE_1__.Strings.normalizePath(fileName.replace(fileName.startsWith(slash) ? `/${entry.fileName}` : entry.fileName, emptyStr));
            relativeFileName = _system__WEBPACK_IMPORTED_MODULE_1__.Strings.normalizePath(path__WEBPACK_IMPORTED_MODULE_0__.relative(repoPath, fileName));
          } else {
            relativeFileName = entry.fileName;
          }
          first = false;
          _GitBlameParser.parseEntry(entry, repoPath, relativeFileName, commits, authors, lines, currentUser);
          entry = void 0;
          break;
        default:
          break;
      }
    }
    for (const [, c] of commits) {
      if (c.author === void 0)
        return void 0;
      const author = authors.get(c.author);
      if (author === void 0)
        return void 0;
      author.lineCount += c.lines.length;
    }
    const sortedAuthors = new Map([...authors.entries()].sort((a, b) => b[1].lineCount - a[1].lineCount));
    const blame = {
      repoPath,
      authors: sortedAuthors,
      commits,
      lines
    };
    return blame;
  }
  static parseEntry(entry, repoPath, relativeFileName, commits, authors, lines, currentUser) {
    let commit = commits.get(entry.sha);
    if (commit === void 0) {
      if (entry.author !== void 0) {
        if (currentUser !== void 0 && (currentUser.name !== void 0 || currentUser.email !== void 0) && (currentUser.name === void 0 || currentUser.name === entry.author) && (currentUser.email === void 0 || currentUser.email === entry.authorEmail)) {
          entry.author = "You";
        }
        let author = authors.get(entry.author);
        if (author === void 0) {
          author = {
            name: entry.author,
            lineCount: 0
          };
          authors.set(entry.author, author);
        }
      }
      commit = new _git__WEBPACK_IMPORTED_MODULE_2__.GitBlameCommit(repoPath, entry.sha, entry.author, entry.authorEmail, new Date(entry.authorDate * 1e3), new Date(entry.committerDate * 1e3), entry.summary, relativeFileName, entry.previousFileName !== void 0 && entry.previousFileName !== entry.fileName ? entry.previousFileName : void 0, entry.previousSha, entry.previousSha && entry.previousFileName, []);
      commits.set(entry.sha, commit);
    }
    for (let i = 0, len = entry.lineCount; i < len; i++) {
      const line = {
        sha: entry.sha,
        line: entry.line + i,
        originalLine: entry.originalLine + i
      };
      if (commit.previousSha) {
        line.previousSha = commit.previousSha;
      }
      commit.lines.push(line);
      lines[line.line - 1] = line;
    }
  }
};
let GitBlameParser = _GitBlameParser;
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_1__.debug)({ args: false, singleLine: true })
], GitBlameParser, "parse", 1);


/***/ }),

/***/ "./src/git/parsers/branchParser.ts":
/*!*****************************************!*\
  !*** ./src/git/parsers/branchParser.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "GitBranchParser": () => (/* binding */ GitBranchParser)
/* harmony export */ });
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../system */ "./src/system.ts");
/* harmony import */ var _models_branch__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../models/branch */ "./src/git/models/branch.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};


const branchWithTrackingRegex = /^<h>(.+)<n>(.+)<u>(.*)<t>(?:\[(?:ahead ([0-9]+))?[,\s]*(?:behind ([0-9]+))?]|\[(gone)])?<r>(.*)<d>(.*)$/gm;
const lb = "%3c";
const rb = "%3e";
class GitBranchParser {
  static parse(data, repoPath) {
    const branches = [];
    if (!data)
      return branches;
    let current;
    let name;
    let upstream;
    let ahead;
    let behind;
    let missing;
    let ref;
    let date;
    let remote;
    let match;
    do {
      match = branchWithTrackingRegex.exec(data);
      if (match == null)
        break;
      [, current, name, upstream, ahead, behind, missing, ref, date] = match;
      if (name.startsWith("refs/remotes/")) {
        name = name.substr(13);
        if (name.endsWith("/HEAD"))
          continue;
        remote = true;
      } else {
        name = name.substr(11);
        remote = false;
      }
      branches.push(new _models_branch__WEBPACK_IMPORTED_MODULE_1__.GitBranch(repoPath, name, remote, current.charCodeAt(0) === 42, new Date(date), ref == null || ref.length === 0 ? void 0 : ` ${ref}`.substr(1), upstream == null || upstream.length === 0 ? void 0 : { name: ` ${upstream}`.substr(1), missing: Boolean(missing) }, Number(ahead) || 0, Number(behind) || 0));
    } while (true);
    return branches;
  }
}
__publicField(GitBranchParser, "defaultFormat", [
  `${lb}h${rb}%(HEAD)`,
  `${lb}n${rb}%(refname)`,
  `${lb}u${rb}%(upstream:short)`,
  `${lb}t${rb}%(upstream:track)`,
  `${lb}r${rb}%(objectname)`,
  `${lb}d${rb}%(committerdate:iso8601)`
].join(""));
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_0__.debug)({ args: false, singleLine: true })
], GitBranchParser, "parse", 1);


/***/ }),

/***/ "./src/git/parsers/diffParser.ts":
/*!***************************************!*\
  !*** ./src/git/parsers/diffParser.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "GitDiffParser": () => (/* binding */ GitDiffParser)
/* harmony export */ });
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../system */ "./src/system.ts");
/* harmony import */ var _models_diff__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../models/diff */ "./src/git/models/diff.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};


const nameStatusDiffRegex = /^(.*?)\t(.*?)(?:\t(.*?))?$/gm;
const shortStatDiffRegex = /^\s*(\d+)\sfiles? changed(?:,\s+(\d+)\s+insertions?\(\+\))?(?:,\s+(\d+)\s+deletions?\(-\))?/;
const unifiedDiffRegex = /^@@ -([\d]+)(?:,([\d]+))? \+([\d]+)(?:,([\d]+))? @@(?:.*?)\n([\s\S]*?)(?=^@@)/gm;
class GitDiffParser {
  static parse(data, debug2 = false) {
    if (!data)
      return void 0;
    const hunks = [];
    let previousStart;
    let previousCount;
    let currentStart;
    let currentCount;
    let hunk;
    let match;
    do {
      match = unifiedDiffRegex.exec(`${data}
@@`);
      if (match == null)
        break;
      [, previousStart, previousCount, currentStart, currentCount, hunk] = match;
      previousCount = Number(previousCount) || 0;
      previousStart = Number(previousStart) || 0;
      currentCount = Number(currentCount) || 0;
      currentStart = Number(currentStart) || 0;
      hunks.push(new _models_diff__WEBPACK_IMPORTED_MODULE_1__.GitDiffHunk(` ${hunk}`.substr(1), {
        count: currentCount,
        position: {
          start: currentStart,
          end: currentStart + (currentCount > 0 ? currentCount - 1 : 0)
        }
      }, {
        count: previousCount,
        position: {
          start: previousStart,
          end: previousStart + (previousCount > 0 ? previousCount - 1 : 0)
        }
      }));
    } while (true);
    if (!hunks.length)
      return void 0;
    const diff = {
      diff: debug2 ? data : void 0,
      hunks
    };
    return diff;
  }
  static parseHunk(hunk) {
    const currentLines = [];
    const previousLines = [];
    let hasAddedOrChanged;
    let hasRemoved;
    let removed = 0;
    for (const l of _system__WEBPACK_IMPORTED_MODULE_0__.Strings.lines(hunk.diff)) {
      switch (l[0]) {
        case "+":
          hasAddedOrChanged = true;
          currentLines.push({
            line: ` ${l.substring(1)}`,
            state: "added"
          });
          if (removed > 0) {
            removed--;
          } else {
            previousLines.push(void 0);
          }
          break;
        case "-":
          hasRemoved = true;
          removed++;
          previousLines.push({
            line: ` ${l.substring(1)}`,
            state: "removed"
          });
          break;
        default:
          while (removed > 0) {
            removed--;
            currentLines.push(void 0);
          }
          currentLines.push({ line: l, state: "unchanged" });
          previousLines.push({ line: l, state: "unchanged" });
          break;
      }
    }
    while (removed > 0) {
      removed--;
      currentLines.push(void 0);
    }
    const hunkLines = [];
    for (let i = 0; i < currentLines.length; i++) {
      hunkLines.push({
        hunk,
        current: currentLines[i],
        previous: previousLines[i]
      });
    }
    return {
      lines: hunkLines,
      state: hasAddedOrChanged && hasRemoved ? "changed" : hasAddedOrChanged ? "added" : "removed"
    };
  }
  static parseNameStatus(data, repoPath) {
    if (!data)
      return void 0;
    const files = [];
    let status;
    let fileName;
    let originalFileName;
    let match;
    do {
      match = nameStatusDiffRegex.exec(data);
      if (match == null)
        break;
      [, status, fileName, originalFileName] = match;
      files.push({
        repoPath,
        status: !status.startsWith(".") ? status[0].trim() : "?",
        conflictStatus: void 0,
        indexStatus: void 0,
        workingTreeStatus: void 0,
        fileName: ` ${fileName}`.substr(1),
        originalFileName: originalFileName == null || originalFileName.length === 0 ? void 0 : ` ${originalFileName}`.substr(1)
      });
    } while (true);
    return files;
  }
  static parseShortStat(data) {
    if (!data)
      return void 0;
    const match = shortStatDiffRegex.exec(data);
    if (match == null)
      return void 0;
    const [, files, insertions, deletions] = match;
    const diffShortStat = {
      files: files == null ? 0 : parseInt(files, 10),
      insertions: insertions == null ? 0 : parseInt(insertions, 10),
      deletions: deletions == null ? 0 : parseInt(deletions, 10)
    };
    return diffShortStat;
  }
}
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_0__.debug)({ args: false, singleLine: true })
], GitDiffParser, "parse", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_0__.debug)({ args: false, singleLine: true })
], GitDiffParser, "parseHunk", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_0__.debug)({ args: false, singleLine: true })
], GitDiffParser, "parseNameStatus", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_0__.debug)({ args: false, singleLine: true })
], GitDiffParser, "parseShortStat", 1);


/***/ }),

/***/ "./src/git/parsers/logParser.ts":
/*!**************************************!*\
  !*** ./src/git/parsers/logParser.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "fileStatusRegex": () => (/* binding */ fileStatusRegex),
/* harmony export */   "GitLogParser": () => (/* binding */ GitLogParser)
/* harmony export */ });
/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! path */ "./node_modules/path-browserify/index.js");
/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../system */ "./src/system.ts");
/* harmony import */ var _git__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../git */ "./src/git/git.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};



const emptyEntry = {};
const emptyStr = "";
const slash = "/";
const diffRegex = /diff --git a\/(.*) b\/(.*)/;
const diffRangeRegex = /^@@ -(\d+?),(\d+?) \+(\d+?),(\d+?) @@/;
const fileStatusRegex = /(\S)\S*\t([^\t\n]+)(?:\t(.+))?/;
const fileStatusAndSummaryRegex = /^(\d+?|-)\s+?(\d+?|-)\s+?(.*)(?:\n\s(delete|rename|copy|create))?/;
const fileStatusAndSummaryRenamedFileRegex = /(.+)\s=>\s(.+)/;
const fileStatusAndSummaryRenamedFilePathRegex = /(.*?){(.+?)\s=>\s(.*?)}(.*)/;
const logRefsRegex = /^<r> (.*)/gm;
const logFileSimpleRegex = /^<r> (.*)\s*(?:(?:diff --git a\/(.*) b\/(.*))|(?:(\S)\S*\t([^\t\n]+)(?:\t(.+))?))/gm;
const logFileSimpleRenamedRegex = /^<r> (\S+)\s*(.*)$/s;
const logFileSimpleRenamedFilesRegex = /^(\S)\S*\t([^\t\n]+)(?:\t(.+)?)?$/gm;
const lb = "%x3c";
const rb = "%x3e";
const sl = "%x2f";
const sp = "%x20";
const _GitLogParser = class {
  static parse(data, type, repoPath, fileName, sha, currentUser, limit, reverse, range) {
    var _a, _b;
    if (!data)
      return void 0;
    let relativeFileName;
    let recentCommit = void 0;
    let entry = emptyEntry;
    let line = void 0;
    let token;
    let i = 0;
    let first = true;
    const lines = _system__WEBPACK_IMPORTED_MODULE_1__.Strings.lines(`${data}</f>`);
    let next = lines.next();
    if (next.done)
      return void 0;
    if (repoPath !== void 0) {
      repoPath = _system__WEBPACK_IMPORTED_MODULE_1__.Strings.normalizePath(repoPath);
    }
    const authors = new Map();
    const commits = new Map();
    let truncationCount = limit;
    let match;
    let renamedFileName;
    let renamedMatch;
    loop:
      while (true) {
        next = lines.next();
        if (next.done)
          break;
        line = next.value;
        if (reverse && limit && i >= limit)
          break;
        token = line.charCodeAt(1);
        switch (token) {
          case 114:
            entry = {
              ref: line.substring(4)
            };
            break;
          case 97:
            if (_git__WEBPACK_IMPORTED_MODULE_2__.GitRevision.isUncommitted(entry.ref)) {
              entry.author = "You";
            } else {
              entry.author = line.substring(4);
            }
            break;
          case 101:
            entry.email = line.substring(4);
            break;
          case 100:
            entry.date = line.substring(4);
            break;
          case 99:
            entry.committedDate = line.substring(4);
            break;
          case 112:
            entry.parentShas = line.substring(4).split(" ");
            break;
          case 115:
            while (true) {
              next = lines.next();
              if (next.done)
                break;
              line = next.value;
              if (line === "</s>")
                break;
              if (entry.summary === void 0) {
                entry.summary = line;
              } else {
                entry.summary += `
${line}`;
              }
            }
            if (entry.summary != null && entry.summary.charCodeAt(entry.summary.length - 1) === 10) {
              entry.summary = entry.summary.slice(0, -1);
            }
            break;
          case 102: {
            next = lines.next();
            let hasFiles = true;
            if (next.done || next.value === "</f>") {
              if (((_b = (_a = entry.parentShas) == null ? void 0 : _a.length) != null ? _b : 0) > 1) {
                if (truncationCount) {
                  truncationCount--;
                }
                break;
              }
              hasFiles = false;
            }
            while (hasFiles) {
              next = lines.next();
              if (next.done)
                break;
              line = next.value;
              if (line === "</f>")
                break;
              if (line.startsWith("warning:"))
                continue;
              if (type === _git__WEBPACK_IMPORTED_MODULE_2__.GitCommitType.Log) {
                match = fileStatusRegex.exec(line);
                if (match != null) {
                  if (entry.files === void 0) {
                    entry.files = [];
                  }
                  renamedFileName = match[3];
                  if (renamedFileName !== void 0) {
                    entry.files.push({
                      status: match[1],
                      fileName: renamedFileName,
                      originalFileName: match[2]
                    });
                  } else {
                    entry.files.push({
                      status: match[1],
                      fileName: match[2]
                    });
                  }
                }
              } else {
                match = diffRegex.exec(line);
                if (match != null) {
                  [, entry.originalFileName, entry.fileName] = match;
                  if (entry.fileName === entry.originalFileName) {
                    entry.originalFileName = void 0;
                    entry.status = _git__WEBPACK_IMPORTED_MODULE_2__.GitFileIndexStatus.Modified;
                  } else {
                    entry.status = _git__WEBPACK_IMPORTED_MODULE_2__.GitFileIndexStatus.Renamed;
                  }
                  void lines.next();
                  void lines.next();
                  next = lines.next();
                  match = diffRangeRegex.exec(next.value);
                  if (match !== null) {
                    entry.line = {
                      from: {
                        line: parseInt(match[1], 10),
                        count: parseInt(match[2], 10)
                      },
                      to: {
                        line: parseInt(match[3], 10),
                        count: parseInt(match[4], 10)
                      }
                    };
                  }
                  while (true) {
                    next = lines.next();
                    if (next.done || next.value === "</f>")
                      break;
                  }
                  break;
                } else {
                  next = lines.next();
                  match = fileStatusAndSummaryRegex.exec(`${line}
${next.value}`);
                  if (match != null) {
                    entry.fileStats = {
                      insertions: Number(match[1]) || 0,
                      deletions: Number(match[2]) || 0
                    };
                    switch (match[4]) {
                      case void 0:
                        entry.status = "M";
                        entry.fileName = match[3];
                        break;
                      case "copy":
                      case "rename":
                        entry.status = match[4] === "copy" ? "C" : "R";
                        renamedFileName = match[3];
                        renamedMatch = fileStatusAndSummaryRenamedFilePathRegex.exec(renamedFileName);
                        if (renamedMatch != null) {
                          entry.fileName = renamedMatch[3] === "" ? `${renamedMatch[1]}${renamedMatch[4]}`.replace("//", "/") : `${renamedMatch[1]}${renamedMatch[3]}${renamedMatch[4]}`;
                          entry.originalFileName = `${renamedMatch[1]}${renamedMatch[2]}${renamedMatch[4]}`;
                        } else {
                          renamedMatch = fileStatusAndSummaryRenamedFileRegex.exec(renamedFileName);
                          if (renamedMatch != null) {
                            entry.fileName = renamedMatch[2];
                            entry.originalFileName = renamedMatch[1];
                          } else {
                            entry.fileName = renamedFileName;
                          }
                        }
                        break;
                      case "create":
                        entry.status = "A";
                        entry.fileName = match[3];
                        break;
                      case "delete":
                        entry.status = "D";
                        entry.fileName = match[3];
                        break;
                      default:
                        entry.status = "M";
                        entry.fileName = match[3];
                        break;
                    }
                  }
                  if (next.done || next.value === "</f>")
                    break;
                }
              }
            }
            if (entry.files !== void 0) {
              entry.fileName = _system__WEBPACK_IMPORTED_MODULE_1__.Arrays.filterMap(entry.files, (f) => f.fileName ? f.fileName : void 0).join(", ");
            }
            if (first && repoPath === void 0 && type === _git__WEBPACK_IMPORTED_MODULE_2__.GitCommitType.LogFile && fileName !== void 0) {
              repoPath = _system__WEBPACK_IMPORTED_MODULE_1__.Strings.normalizePath(fileName.replace(fileName.startsWith(slash) ? `/${entry.fileName}` : entry.fileName, emptyStr));
              relativeFileName = _system__WEBPACK_IMPORTED_MODULE_1__.Strings.normalizePath(path__WEBPACK_IMPORTED_MODULE_0__.relative(repoPath, fileName));
            } else {
              relativeFileName = entry.fileName;
            }
            first = false;
            const commit = commits.get(entry.ref);
            if (commit === void 0) {
              i++;
              if (limit && i > limit)
                break loop;
            } else if (truncationCount) {
              truncationCount--;
            }
            recentCommit = _GitLogParser.parseEntry(entry, commit, type, repoPath, relativeFileName, commits, authors, recentCommit, currentUser);
            break;
          }
        }
      }
    const log = {
      repoPath,
      authors,
      commits,
      sha,
      count: i,
      limit,
      range,
      hasMore: Boolean(truncationCount && i > truncationCount && truncationCount !== 1)
    };
    return log;
  }
  static parseEntry(entry, commit, type, repoPath, relativeFileName, commits, authors, recentCommit, currentUser) {
    var _a, _b, _c, _d;
    if (commit === void 0) {
      if (entry.author !== void 0) {
        if (currentUser !== void 0 && (currentUser.name !== void 0 || currentUser.email !== void 0) && (currentUser.name === void 0 || currentUser.name === entry.author) && (currentUser.email === void 0 || currentUser.email === entry.email)) {
          entry.author = "You";
        }
        let author = authors.get(entry.author);
        if (author === void 0) {
          author = {
            name: entry.author,
            lineCount: 0
          };
          authors.set(entry.author, author);
        }
      }
      const originalFileName = (_a = entry.originalFileName) != null ? _a : relativeFileName !== entry.fileName ? entry.fileName : void 0;
      if (type === _git__WEBPACK_IMPORTED_MODULE_2__.GitCommitType.LogFile) {
        entry.files = [
          {
            status: entry.status,
            fileName: relativeFileName,
            originalFileName
          }
        ];
      }
      commit = new _git__WEBPACK_IMPORTED_MODULE_2__.GitLogCommit(type, repoPath, entry.ref, entry.author, entry.email, new Date(entry.date * 1e3), new Date(entry.committedDate * 1e3), entry.summary === void 0 ? emptyStr : entry.summary, relativeFileName, (_b = entry.files) != null ? _b : [], entry.status, originalFileName, type === _git__WEBPACK_IMPORTED_MODULE_2__.GitCommitType.Log ? entry.parentShas[0] : void 0, void 0, entry.fileStats, entry.parentShas, entry.line);
      commits.set(entry.ref, commit);
    }
    if (recentCommit !== void 0) {
      commit.nextSha = commit.sha !== recentCommit.sha ? recentCommit.sha : recentCommit.nextSha;
      if (type === _git__WEBPACK_IMPORTED_MODULE_2__.GitCommitType.LogFile) {
        recentCommit.previousFileName = (_c = commit.originalFileName) != null ? _c : commit.fileName;
        commit.nextFileName = (_d = recentCommit.originalFileName) != null ? _d : recentCommit.fileName;
      }
    }
    return commit;
  }
  static parseLastRefOnly(data) {
    let ref;
    let match;
    do {
      match = logRefsRegex.exec(data);
      if (match == null)
        break;
      [, ref] = match;
    } while (true);
    logRefsRegex.lastIndex = 0;
    return ref;
  }
  static parseRefsOnly(data) {
    const refs = [];
    let ref;
    let match;
    do {
      match = logRefsRegex.exec(data);
      if (match == null)
        break;
      [, ref] = match;
      if (ref == null || ref.length === 0)
        continue;
      refs.push(` ${ref}`.substr(1));
    } while (true);
    logRefsRegex.lastIndex = 0;
    return refs;
  }
  static parseSimple(data, skip, skipRef) {
    let ref;
    let diffFile;
    let diffRenamed;
    let status;
    let file;
    let renamed;
    let match;
    do {
      match = logFileSimpleRegex.exec(data);
      if (match == null)
        break;
      if (match[1] === skipRef)
        continue;
      if (skip-- > 0)
        continue;
      [, ref, diffFile, diffRenamed, status, file, renamed] = match;
      file = ` ${diffRenamed || diffFile || renamed || file}`.substr(1);
      status = status == null || status.length === 0 ? void 0 : ` ${status}`.substr(1);
    } while (skip >= 0);
    logFileSimpleRegex.lastIndex = 0;
    return [
      ref == null || ref.length === 0 ? void 0 : ` ${ref}`.substr(1),
      file,
      status
    ];
  }
  static parseSimpleRenamed(data, originalFileName) {
    let match = logFileSimpleRenamedRegex.exec(data);
    if (match == null)
      return [void 0, void 0, void 0];
    const [, ref, files] = match;
    let status;
    let file;
    let renamed;
    do {
      match = logFileSimpleRenamedFilesRegex.exec(files);
      if (match == null)
        break;
      [, status, file, renamed] = match;
      if (originalFileName !== file) {
        status = void 0;
        file = void 0;
        renamed = void 0;
        continue;
      }
      file = ` ${renamed || file}`.substr(1);
      status = status == null || status.length === 0 ? void 0 : ` ${status}`.substr(1);
      break;
    } while (true);
    logFileSimpleRenamedFilesRegex.lastIndex = 0;
    return [
      ref == null || ref.length === 0 || file == null ? void 0 : ` ${ref}`.substr(1),
      file,
      status
    ];
  }
};
let GitLogParser = _GitLogParser;
__publicField(GitLogParser, "defaultFormat", [
  `${lb}${sl}f${rb}`,
  `${lb}r${rb}${sp}%H`,
  `${lb}a${rb}${sp}%aN`,
  `${lb}e${rb}${sp}%aE`,
  `${lb}d${rb}${sp}%at`,
  `${lb}c${rb}${sp}%ct`,
  `${lb}p${rb}${sp}%P`,
  `${lb}s${rb}`,
  "%B",
  `${lb}${sl}s${rb}`,
  `${lb}f${rb}`
].join("%n"));
__publicField(GitLogParser, "simpleRefs", `${lb}r${rb}${sp}%H`);
__publicField(GitLogParser, "simpleFormat", `${lb}r${rb}${sp}%H`);
__publicField(GitLogParser, "shortlog", "%H%x00%aN%x00%aE%x00%at");
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_1__.debug)({ args: false })
], GitLogParser, "parse", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_1__.debug)({ args: false })
], GitLogParser, "parseLastRefOnly", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_1__.debug)({ args: false })
], GitLogParser, "parseRefsOnly", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_1__.debug)({ args: false })
], GitLogParser, "parseSimple", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_1__.debug)({ args: false })
], GitLogParser, "parseSimpleRenamed", 1);


/***/ }),

/***/ "./src/git/parsers/parsers.ts":
/*!************************************!*\
  !*** ./src/git/parsers/parsers.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "GitBlameParser": () => (/* reexport safe */ _blameParser__WEBPACK_IMPORTED_MODULE_0__.GitBlameParser),
/* harmony export */   "GitBranchParser": () => (/* reexport safe */ _branchParser__WEBPACK_IMPORTED_MODULE_1__.GitBranchParser),
/* harmony export */   "GitDiffParser": () => (/* reexport safe */ _diffParser__WEBPACK_IMPORTED_MODULE_2__.GitDiffParser),
/* harmony export */   "GitLogParser": () => (/* reexport safe */ _logParser__WEBPACK_IMPORTED_MODULE_3__.GitLogParser),
/* harmony export */   "fileStatusRegex": () => (/* reexport safe */ _logParser__WEBPACK_IMPORTED_MODULE_3__.fileStatusRegex),
/* harmony export */   "GitReflogParser": () => (/* reexport safe */ _reflogParser__WEBPACK_IMPORTED_MODULE_4__.GitReflogParser),
/* harmony export */   "GitRemoteParser": () => (/* reexport safe */ _remoteParser__WEBPACK_IMPORTED_MODULE_5__.GitRemoteParser),
/* harmony export */   "GitShortLogParser": () => (/* reexport safe */ _shortlogParser__WEBPACK_IMPORTED_MODULE_6__.GitShortLogParser),
/* harmony export */   "GitStashParser": () => (/* reexport safe */ _stashParser__WEBPACK_IMPORTED_MODULE_7__.GitStashParser),
/* harmony export */   "GitStatusParser": () => (/* reexport safe */ _statusParser__WEBPACK_IMPORTED_MODULE_8__.GitStatusParser),
/* harmony export */   "GitTagParser": () => (/* reexport safe */ _tagParser__WEBPACK_IMPORTED_MODULE_9__.GitTagParser),
/* harmony export */   "GitTreeParser": () => (/* reexport safe */ _treeParser__WEBPACK_IMPORTED_MODULE_10__.GitTreeParser)
/* harmony export */ });
/* harmony import */ var _blameParser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./blameParser */ "./src/git/parsers/blameParser.ts");
/* harmony import */ var _branchParser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./branchParser */ "./src/git/parsers/branchParser.ts");
/* harmony import */ var _diffParser__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./diffParser */ "./src/git/parsers/diffParser.ts");
/* harmony import */ var _logParser__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./logParser */ "./src/git/parsers/logParser.ts");
/* harmony import */ var _reflogParser__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./reflogParser */ "./src/git/parsers/reflogParser.ts");
/* harmony import */ var _remoteParser__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./remoteParser */ "./src/git/parsers/remoteParser.ts");
/* harmony import */ var _shortlogParser__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./shortlogParser */ "./src/git/parsers/shortlogParser.ts");
/* harmony import */ var _stashParser__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./stashParser */ "./src/git/parsers/stashParser.ts");
/* harmony import */ var _statusParser__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./statusParser */ "./src/git/parsers/statusParser.ts");
/* harmony import */ var _tagParser__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./tagParser */ "./src/git/parsers/tagParser.ts");
/* harmony import */ var _treeParser__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./treeParser */ "./src/git/parsers/treeParser.ts");














/***/ }),

/***/ "./src/git/parsers/reflogParser.ts":
/*!*****************************************!*\
  !*** ./src/git/parsers/reflogParser.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "GitReflogParser": () => (/* binding */ GitReflogParser)
/* harmony export */ });
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../system */ "./src/system.ts");
/* harmony import */ var _models_reflog__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../models/reflog */ "./src/git/models/reflog.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};


const reflogRegex = /^<r>(.+)<d>(.+?)@{(.+)}<s>(\w*)(.*?)(?::(.*))?$/gm;
const reflogHEADRegex = /.*?\/?HEAD$/;
const lb = "%x3c";
const rb = "%x3e";
class GitReflogParser {
  static parse(data, repoPath, commands, limit, totalLimit) {
    if (!data)
      return void 0;
    const records = [];
    let sha;
    let selector;
    let date;
    let command;
    let commandArgs;
    let details;
    let head;
    let headDate;
    let headSha;
    let count = 0;
    let total = 0;
    let recordDate;
    let record;
    let match;
    do {
      match = reflogRegex.exec(data);
      if (match == null)
        break;
      [, sha, selector, date, command, commandArgs, details] = match;
      total++;
      if (record !== void 0) {
        if (sha === record.sha && (date !== recordDate || !reflogHEADRegex.test(record.selector) || reflogHEADRegex.test(selector))) {
          continue;
        }
        if (sha !== record.sha) {
          if (head != null && headDate === recordDate && headSha == record.sha && reflogHEADRegex.test(record.selector)) {
            record.update(sha, head);
          } else {
            record.update(sha);
          }
          records.push(record);
          record = void 0;
          recordDate = void 0;
          count++;
          if (limit !== 0 && count >= limit)
            break;
        }
      }
      if (command === "HEAD") {
        head = selector;
        headDate = date;
        headSha = sha;
        continue;
      }
      if (commands.includes(command)) {
        record = new _models_reflog__WEBPACK_IMPORTED_MODULE_1__.GitReflogRecord(repoPath, ` ${sha}`.substr(1), ` ${selector}`.substr(1), new Date(date), ` ${command}`.substr(1), commandArgs == null || commandArgs.length === 0 ? void 0 : commandArgs.substr(1), details == null || details.length === 0 ? void 0 : details.substr(1));
        recordDate = date;
      }
    } while (true);
    reflogRegex.lastIndex = 0;
    return {
      repoPath,
      records,
      count,
      total,
      limit,
      hasMore: limit !== 0 && count >= limit || totalLimit !== 0 && total >= totalLimit
    };
  }
}
__publicField(GitReflogParser, "defaultFormat", [
  `${lb}r${rb}%H`,
  `${lb}d${rb}%gD`,
  `${lb}s${rb}%gs`
].join(""));
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_0__.debug)({ args: false })
], GitReflogParser, "parse", 1);


/***/ }),

/***/ "./src/git/parsers/remoteParser.ts":
/*!*****************************************!*\
  !*** ./src/git/parsers/remoteParser.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "GitRemoteParser": () => (/* binding */ GitRemoteParser)
/* harmony export */ });
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../system */ "./src/system.ts");
/* harmony import */ var _git__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../git */ "./src/git/git.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};


const emptyStr = "";
const remoteRegex = /^(.*)\t(.*)\s\((.*)\)$/gm;
const urlRegex = /^(?:(git:\/\/)(.*?)\/|(https?:\/\/)(?:.*?@)?(.*?)\/|git@(.*):|(ssh:\/\/)(?:.*@)?(.*?)(?::.*?)?(?:\/|(?=~))|(?:.*?@)(.*?):)(.*)$/;
class GitRemoteParser {
  static parse(data, repoPath, providerFactory) {
    if (!data)
      return void 0;
    const remotes = [];
    const groups = Object.create(null);
    let name;
    let url;
    let type;
    let scheme;
    let domain;
    let path;
    let uniqueness;
    let remote;
    let match;
    do {
      match = remoteRegex.exec(data);
      if (match == null)
        break;
      [, name, url, type] = match;
      url = ` ${url}`.substr(1);
      [scheme, domain, path] = this.parseGitUrl(url);
      uniqueness = `${domain ? `${domain}/` : ""}${path}`;
      remote = groups[uniqueness];
      if (remote === void 0) {
        const provider = providerFactory(url, domain, path);
        remote = new _git__WEBPACK_IMPORTED_MODULE_1__.GitRemote(repoPath, uniqueness, ` ${name}`.substr(1), scheme, provider !== void 0 ? provider.domain : domain, provider !== void 0 ? provider.path : path, provider, [{ url, type: ` ${type}`.substr(1) }]);
        remotes.push(remote);
        groups[uniqueness] = remote;
      } else {
        remote.urls.push({ url, type: ` ${type}`.substr(1) });
      }
    } while (true);
    return remotes;
  }
  static parseGitUrl(url) {
    const match = urlRegex.exec(url);
    if (match == null)
      return [emptyStr, emptyStr, url];
    return [
      match[1] || match[3] || match[6],
      match[2] || match[4] || match[5] || match[7] || match[8],
      match[9].replace(/\.git\/?$/, emptyStr)
    ];
  }
}
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_0__.debug)({ args: false, singleLine: true })
], GitRemoteParser, "parse", 1);


/***/ }),

/***/ "./src/git/parsers/shortlogParser.ts":
/*!*******************************************!*\
  !*** ./src/git/parsers/shortlogParser.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "GitShortLogParser": () => (/* binding */ GitShortLogParser)
/* harmony export */ });
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../system */ "./src/system.ts");
/* harmony import */ var _git__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../git */ "./src/git/git.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};


const shortlogRegex = /^(.*?)\t(.*?) <(.*?)>$/gm;
const shortstatRegex = /(?<files>\d+) files? changed(?:, (?<additions>\d+) insertions?\(\+\))?(?:, (?<deletions>\d+) deletions?\(-\))?/;
class GitShortLogParser {
  static parse(data, repoPath) {
    if (!data)
      return void 0;
    const contributors = [];
    let count;
    let name;
    let email;
    let match;
    do {
      match = shortlogRegex.exec(data);
      if (match == null)
        break;
      [, count, name, email] = match;
      contributors.push(new _git__WEBPACK_IMPORTED_MODULE_1__.GitContributor(repoPath, ` ${name}`.substr(1), ` ${email}`.substr(1), Number(count) || 0, new Date()));
    } while (true);
    return { repoPath, contributors };
  }
  static parseFromLog(data, repoPath, currentUser) {
    if (!data)
      return void 0;
    const contributors = new Map();
    const lines = data.trim().split("\n");
    for (let i = 0; i < lines.length; i++) {
      const [sha, author, email, date] = lines[i].trim().split("\0");
      let stats;
      if (lines[i + 1] === "") {
        i += 2;
        const match = shortstatRegex.exec(lines[i]);
        if ((match == null ? void 0 : match.groups) != null) {
          const { files, additions, deletions } = match.groups;
          stats = {
            files: Number(files || 0),
            additions: Number(additions || 0),
            deletions: Number(deletions || 0)
          };
        }
      }
      const timestamp = Number(date);
      const contributor = contributors.get(`${author}${email}`);
      if (contributor == null) {
        contributors.set(`${author}${email}`, {
          sha,
          name: author,
          email,
          count: 1,
          timestamp,
          stats
        });
      } else {
        contributor.count++;
        if (stats != null) {
          if (contributor.stats == null) {
            contributor.stats = stats;
          } else {
            contributor.stats.files += stats.files;
            contributor.stats.additions += stats.additions;
            contributor.stats.deletions += stats.deletions;
          }
        }
        if (timestamp > contributor.timestamp) {
          contributor.timestamp = timestamp;
        }
      }
    }
    return {
      repoPath,
      contributors: contributors.size === 0 ? [] : Array.from(contributors.values(), (c) => new _git__WEBPACK_IMPORTED_MODULE_1__.GitContributor(repoPath, c.name, c.email, c.count, new Date(Number(c.timestamp) * 1e3), c.stats, currentUser != null ? currentUser.name === c.name && currentUser.email === c.email : false))
    };
  }
}
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_0__.debug)({ args: false, singleLine: true })
], GitShortLogParser, "parse", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_0__.debug)({ args: false })
], GitShortLogParser, "parseFromLog", 1);


/***/ }),

/***/ "./src/git/parsers/stashParser.ts":
/*!****************************************!*\
  !*** ./src/git/parsers/stashParser.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "GitStashParser": () => (/* binding */ GitStashParser)
/* harmony export */ });
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../system */ "./src/system.ts");
/* harmony import */ var _git__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../git */ "./src/git/git.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};


const lb = "%x3c";
const rb = "%x3e";
const sl = "%x2f";
const sp = "%x20";
const emptyStr = "";
const emptyEntry = {};
const _GitStashParser = class {
  static parse(data, repoPath) {
    if (!data)
      return void 0;
    const lines = _system__WEBPACK_IMPORTED_MODULE_0__.Strings.lines(`${data}</f>`);
    let next = lines.next();
    if (next.done)
      return void 0;
    if (repoPath !== void 0) {
      repoPath = _system__WEBPACK_IMPORTED_MODULE_0__.Strings.normalizePath(repoPath);
    }
    const commits = new Map();
    let entry = emptyEntry;
    let line = void 0;
    let token;
    let match;
    let renamedFileName;
    while (true) {
      next = lines.next();
      if (next.done)
        break;
      line = next.value;
      token = line.charCodeAt(1);
      switch (token) {
        case 114:
          entry = {
            ref: line.substring(4)
          };
          break;
        case 100:
          entry.date = line.substring(4);
          break;
        case 99:
          entry.committedDate = line.substring(4);
          break;
        case 108:
          entry.stashName = line.substring(4);
          break;
        case 115:
          while (true) {
            next = lines.next();
            if (next.done)
              break;
            line = next.value;
            if (line === "</s>")
              break;
            if (entry.summary === void 0) {
              entry.summary = line;
            } else {
              entry.summary += `
${line}`;
            }
          }
          if (entry.summary != null && entry.summary.charCodeAt(entry.summary.length - 1) === 10) {
            entry.summary = entry.summary.slice(0, -1);
          }
          break;
        case 102:
          next = lines.next();
          if (!next.done && next.value !== "</f>") {
            while (true) {
              next = lines.next();
              if (next.done)
                break;
              line = next.value;
              if (line === "</f>")
                break;
              if (line.startsWith("warning:"))
                continue;
              match = _git__WEBPACK_IMPORTED_MODULE_1__.fileStatusRegex.exec(line);
              if (match != null) {
                if (entry.files === void 0) {
                  entry.files = [];
                }
                renamedFileName = match[3];
                if (renamedFileName !== void 0) {
                  entry.files.push({
                    status: match[1],
                    fileName: renamedFileName,
                    originalFileName: match[2]
                  });
                } else {
                  entry.files.push({
                    status: match[1],
                    fileName: match[2]
                  });
                }
              }
            }
            if (entry.files !== void 0) {
              entry.fileNames = _system__WEBPACK_IMPORTED_MODULE_0__.Arrays.filterMap(entry.files, (f) => f.fileName ? f.fileName : void 0).join(", ");
            }
          }
          _GitStashParser.parseEntry(entry, repoPath, commits);
      }
    }
    const stash = {
      repoPath,
      commits
    };
    return stash;
  }
  static parseEntry(entry, repoPath, commits) {
    var _a;
    let commit = commits.get(entry.ref);
    if (commit === void 0) {
      commit = new _git__WEBPACK_IMPORTED_MODULE_1__.GitStashCommit(_git__WEBPACK_IMPORTED_MODULE_1__.GitCommitType.Stash, entry.stashName, repoPath, entry.ref, new Date(entry.date * 1e3), new Date(entry.committedDate * 1e3), entry.summary === void 0 ? emptyStr : entry.summary, entry.fileNames, (_a = entry.files) != null ? _a : []);
    }
    commits.set(entry.ref, commit);
  }
};
let GitStashParser = _GitStashParser;
__publicField(GitStashParser, "defaultFormat", [
  `${lb}${sl}f${rb}`,
  `${lb}r${rb}${sp}%H`,
  `${lb}d${rb}${sp}%at`,
  `${lb}c${rb}${sp}%ct`,
  `${lb}l${rb}${sp}%gd`,
  `${lb}s${rb}`,
  "%B",
  `${lb}${sl}s${rb}`,
  `${lb}f${rb}`
].join("%n"));
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_0__.debug)({ args: false, singleLine: true })
], GitStashParser, "parse", 1);


/***/ }),

/***/ "./src/git/parsers/statusParser.ts":
/*!*****************************************!*\
  !*** ./src/git/parsers/statusParser.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "GitStatusParser": () => (/* binding */ GitStatusParser)
/* harmony export */ });
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../system */ "./src/system.ts");
/* harmony import */ var _git__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../git */ "./src/git/git.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};


const emptyStr = "";
const aheadStatusV1Regex = /(?:ahead ([0-9]+))/;
const behindStatusV1Regex = /(?:behind ([0-9]+))/;
class GitStatusParser {
  static parse(data, repoPath, porcelainVersion) {
    if (!data)
      return void 0;
    const lines = data.split("\n").filter((i) => Boolean(i));
    if (lines.length === 0)
      return void 0;
    if (porcelainVersion < 2)
      return this.parseV1(lines, repoPath);
    return this.parseV2(lines, repoPath);
  }
  static parseV1(lines, repoPath) {
    let branch;
    const files = [];
    const state = {
      ahead: 0,
      behind: 0
    };
    let upstream;
    let position = -1;
    while (++position < lines.length) {
      const line = lines[position];
      if (line.startsWith("##")) {
        const lineParts = line.split(" ");
        [branch, upstream] = lineParts[1].split("...");
        if (lineParts.length > 2) {
          const upstreamStatus = lineParts.slice(2).join(" ");
          const aheadStatus = aheadStatusV1Regex.exec(upstreamStatus);
          state.ahead = aheadStatus == null ? 0 : Number(aheadStatus[1]) || 0;
          const behindStatus = behindStatusV1Regex.exec(upstreamStatus);
          state.behind = behindStatus == null ? 0 : Number(behindStatus[1]) || 0;
        }
      } else {
        const rawStatus = line.substring(0, 2);
        const fileName = line.substring(3);
        if (rawStatus.startsWith("R") || rawStatus.startsWith("C")) {
          const [file1, file2] = fileName.replace(/"/g, emptyStr).split("->");
          files.push(this.parseStatusFile(repoPath, rawStatus, file2.trim(), file1.trim()));
        } else {
          files.push(this.parseStatusFile(repoPath, rawStatus, fileName));
        }
      }
    }
    return new _git__WEBPACK_IMPORTED_MODULE_1__.GitStatus(_system__WEBPACK_IMPORTED_MODULE_0__.Strings.normalizePath(repoPath), branch != null ? branch : emptyStr, emptyStr, files, state, upstream);
  }
  static parseV2(lines, repoPath) {
    let branch;
    const files = [];
    let sha;
    const state = {
      ahead: 0,
      behind: 0
    };
    let upstream;
    let position = -1;
    while (++position < lines.length) {
      const line = lines[position];
      if (line.startsWith("#")) {
        const lineParts = line.split(" ");
        switch (lineParts[1]) {
          case "branch.oid":
            sha = lineParts[2];
            break;
          case "branch.head":
            branch = lineParts[2];
            break;
          case "branch.upstream":
            upstream = lineParts[2];
            break;
          case "branch.ab":
            state.ahead = Number(lineParts[2].substring(1));
            state.behind = Number(lineParts[3].substring(1));
            break;
        }
      } else {
        const lineParts = line.split(" ");
        switch (lineParts[0][0]) {
          case "1":
            files.push(this.parseStatusFile(repoPath, lineParts[1], lineParts.slice(8).join(" ")));
            break;
          case "2": {
            const file = lineParts.slice(9).join(" ").split("	");
            files.push(this.parseStatusFile(repoPath, lineParts[1], file[0], file[1]));
            break;
          }
          case "u":
            files.push(this.parseStatusFile(repoPath, lineParts[1], lineParts.slice(10).join(" ")));
            break;
          case "?":
            files.push(this.parseStatusFile(repoPath, "??", lineParts.slice(1).join(" ")));
            break;
        }
      }
    }
    return new _git__WEBPACK_IMPORTED_MODULE_1__.GitStatus(_system__WEBPACK_IMPORTED_MODULE_0__.Strings.normalizePath(repoPath), branch != null ? branch : emptyStr, sha != null ? sha : emptyStr, files, state, upstream);
  }
  static parseStatusFile(repoPath, rawStatus, fileName, originalFileName) {
    let x = !rawStatus.startsWith(".") ? rawStatus[0].trim() : void 0;
    if (x == null || x.length === 0) {
      x = void 0;
    }
    let y = void 0;
    if (rawStatus.length > 1) {
      y = rawStatus[1] !== "." ? rawStatus[1].trim() : void 0;
      if (y == null || y.length === 0) {
        y = void 0;
      }
    }
    return new _git__WEBPACK_IMPORTED_MODULE_1__.GitStatusFile(repoPath, x, y, fileName, originalFileName);
  }
}
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_0__.debug)({ args: false, singleLine: true })
], GitStatusParser, "parse", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_0__.debug)({ args: false, singleLine: true })
], GitStatusParser, "parseV1", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_0__.debug)({ args: false, singleLine: true })
], GitStatusParser, "parseV2", 1);


/***/ }),

/***/ "./src/git/parsers/tagParser.ts":
/*!**************************************!*\
  !*** ./src/git/parsers/tagParser.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "GitTagParser": () => (/* binding */ GitTagParser)
/* harmony export */ });
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../system */ "./src/system.ts");
/* harmony import */ var _git__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../git */ "./src/git/git.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};


const tagRegex = /^<n>(.+)<\*r>(.*)<r>(.*)<d>(.*)<ad>(.*)<s>(.*)$/gm;
const lb = "%3c";
const rb = "%3e";
class GitTagParser {
  static parse(data, repoPath) {
    if (!data)
      return void 0;
    const tags = [];
    let name;
    let ref1;
    let ref2;
    let date;
    let commitDate;
    let message;
    let match;
    do {
      match = tagRegex.exec(data);
      if (match == null)
        break;
      [, name, ref1, ref2, date, commitDate, message] = match;
      name = name.substr(10);
      tags.push(new _git__WEBPACK_IMPORTED_MODULE_1__.GitTag(repoPath, name, ` ${ref1 || ref2}`.substr(1), ` ${message}`.substr(1), new Date(date), commitDate == null || commitDate.length === 0 ? void 0 : new Date(commitDate)));
    } while (true);
    return tags;
  }
}
__publicField(GitTagParser, "defaultFormat", [
  `${lb}n${rb}%(refname)`,
  `${lb}*r${rb}%(*objectname)`,
  `${lb}r${rb}%(objectname)`,
  `${lb}d${rb}%(creatordate:iso8601)`,
  `${lb}ad${rb}%(authordate:iso8601)`,
  `${lb}s${rb}%(subject)`
].join(""));
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_0__.debug)({ args: false, singleLine: true })
], GitTagParser, "parse", 1);


/***/ }),

/***/ "./src/git/parsers/treeParser.ts":
/*!***************************************!*\
  !*** ./src/git/parsers/treeParser.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "GitTreeParser": () => (/* binding */ GitTreeParser)
/* harmony export */ });
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../system */ "./src/system.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};

const emptyStr = "";
const treeRegex = /(?:.+?)\s+(.+?)\s+(.+?)\s+(.+?)\s+(.+)/gm;
class GitTreeParser {
  static parse(data) {
    if (!data)
      return void 0;
    const trees = [];
    let type;
    let sha;
    let size;
    let filePath;
    let match;
    do {
      match = treeRegex.exec(data);
      if (match == null)
        break;
      [, type, sha, size, filePath] = match;
      trees.push({
        commitSha: sha == null || sha.length === 0 ? emptyStr : ` ${sha}`.substr(1),
        path: filePath == null || filePath.length === 0 ? emptyStr : ` ${filePath}`.substr(1),
        size: Number(size) || 0,
        type: type == null || type.length === 0 ? emptyStr : ` ${type}`.substr(1)
      });
    } while (true);
    return trees;
  }
}
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_0__.debug)({ args: false, singleLine: true })
], GitTreeParser, "parse", 1);


/***/ }),

/***/ "./src/git/remotes/azure-devops.ts":
/*!*****************************************!*\
  !*** ./src/git/remotes/azure-devops.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AzureDevOpsRemote": () => (/* binding */ AzureDevOpsRemote)
/* harmony export */ });
/* harmony import */ var _provider__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./provider */ "./src/git/remotes/provider.ts");

var __defProp = Object.defineProperty;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};

const gitRegex = /\/_git\/?/i;
const legacyDefaultCollectionRegex = /^DefaultCollection\//i;
const orgAndProjectRegex = /^(.*?)\/(.*?)\/(.*)/;
const sshDomainRegex = /^(ssh|vs-ssh)\./i;
const sshPathRegex = /^\/?v\d\//i;
const fileRegex = /path=([^&]+)/i;
const rangeRegex = /line=(\d+)(?:&lineEnd=(\d+))?/;
class AzureDevOpsRemote extends _provider__WEBPACK_IMPORTED_MODULE_0__.RemoteProvider {
  constructor(domain, path, protocol, name, legacy = false) {
    if (sshDomainRegex.test(domain)) {
      path = path.replace(sshPathRegex, "");
      domain = domain.replace(sshDomainRegex, "");
      const match = orgAndProjectRegex.exec(path);
      if (match != null) {
        const [, org, project, rest] = match;
        if (legacy) {
          domain = `${org}.${domain}`;
          path = `${project}/_git/${rest}`;
        } else {
          path = `${org}/${project}/_git/${rest}`;
        }
      }
    }
    path = decodeURIComponent(path);
    super(domain, path, protocol, name);
    __publicField(this, "_autolinks");
    __publicField(this, "_displayPath");
  }
  get autolinks() {
    if (this._autolinks === void 0) {
      const baseUrl = this.baseUrl.replace(gitRegex, "/");
      this._autolinks = [
        {
          prefix: "#",
          url: `${baseUrl}/_workitems/edit/<num>`,
          title: `Open Work Item #<num> on ${this.name}`
        }
      ];
    }
    return this._autolinks;
  }
  get icon() {
    return "vsts";
  }
  get id() {
    return "azure-devops";
  }
  get name() {
    return "Azure DevOps";
  }
  get displayPath() {
    if (this._displayPath === void 0) {
      this._displayPath = this.path.replace(gitRegex, "/").replace(legacyDefaultCollectionRegex, "");
    }
    return this._displayPath;
  }
  async getLocalInfoFromRemoteUri(repository, uri, options) {
    if (uri.authority !== this.domain)
      return Promise.resolve(void 0);
    let startLine;
    let endLine;
    if (uri.query) {
      const match2 = rangeRegex.exec(uri.query);
      if (match2 != null) {
        const [, start, end] = match2;
        if (start) {
          startLine = parseInt(start, 10);
          if (end) {
            endLine = parseInt(end, 10);
          }
        }
      }
    }
    const match = fileRegex.exec(uri.query);
    if (match == null)
      return Promise.resolve(void 0);
    const [, path] = match;
    const absoluteUri = repository.toAbsoluteUri(path, { validate: options == null ? void 0 : options.validate });
    return Promise.resolve(absoluteUri != null ? { uri: absoluteUri, startLine, endLine } : void 0);
  }
  getUrlForBranches() {
    return this.encodeUrl(`${this.baseUrl}/branches`);
  }
  getUrlForBranch(branch) {
    return this.encodeUrl(`${this.baseUrl}/?version=GB${branch}&_a=history`);
  }
  getUrlForCommit(sha) {
    return this.encodeUrl(`${this.baseUrl}/commit/${sha}`);
  }
  getUrlForComparison(base, compare, _notation) {
    return this.encodeUrl(`${this.baseUrl}/branchCompare?baseVersion=GB${base}&targetVersion=GB${compare}`);
  }
  getUrlForFile(fileName, branch, sha, range) {
    let line;
    if (range != null) {
      if (range.start.line === range.end.line) {
        line = `&line=${range.start.line}&lineStartColumn=${range.start.character + 1}&lineEndColumn=${range.end.character + 1}`;
      } else {
        line = `&line=${range.start.line}&lineEnd=${range.end.line}&lineStartColumn=${range.start.character + 1}&lineEndColumn=${range.end.character + 1}`;
      }
    } else {
      line = "";
    }
    if (sha)
      return this.encodeUrl(`${this.baseUrl}?path=${fileName}&version=GC${sha}${line}&_a=contents`);
    if (branch)
      return this.encodeUrl(`${this.baseUrl}/?path=/${fileName}&version=GB${branch}&_a=contents${line}`);
    return this.encodeUrl(`${this.baseUrl}?path=/${fileName}${line}`);
  }
}


/***/ }),

/***/ "./src/git/remotes/bitbucket-server.ts":
/*!*********************************************!*\
  !*** ./src/git/remotes/bitbucket-server.ts ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "BitbucketServerRemote": () => (/* binding */ BitbucketServerRemote)
/* harmony export */ });
/* harmony import */ var _models_models__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../models/models */ "./src/git/models/models.ts");
/* harmony import */ var _provider__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./provider */ "./src/git/remotes/provider.ts");

var __defProp = Object.defineProperty;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};


const fileRegex = /^\/([^/]+)\/([^/]+?)\/src(.+)$/i;
const rangeRegex = /^lines-(\d+)(?::(\d+))?$/;
class BitbucketServerRemote extends _provider__WEBPACK_IMPORTED_MODULE_1__.RemoteProvider {
  constructor(domain, path, protocol, name, custom = false) {
    super(domain, path, protocol, name, custom);
    __publicField(this, "_autolinks");
  }
  get autolinks() {
    if (this._autolinks === void 0) {
      this._autolinks = [
        {
          prefix: "issue #",
          url: `${this.baseUrl}/issues/<num>`,
          title: `Open Issue #<num> on ${this.name}`
        },
        {
          prefix: "pull request #",
          url: `${this.baseUrl}/pull-requests/<num>`,
          title: `Open PR #<num> on ${this.name}`
        }
      ];
    }
    return this._autolinks;
  }
  get baseUrl() {
    const [project, repo] = this.path.startsWith("scm/") ? this.path.replace("scm/", "").split("/") : this.splitPath();
    return `${this.protocol}://${this.domain}/projects/${project}/repos/${repo}`;
  }
  get icon() {
    return "bitbucket";
  }
  get id() {
    return "bitbucket-server";
  }
  get name() {
    return this.formatName("Bitbucket Server");
  }
  async getLocalInfoFromRemoteUri(repository, uri, options) {
    var _a;
    if (uri.authority !== this.domain)
      return void 0;
    if (((_a = options == null ? void 0 : options.validate) != null ? _a : true) && !uri.path.startsWith(`/${this.path}/`))
      return void 0;
    let startLine;
    let endLine;
    if (uri.fragment) {
      const match2 = rangeRegex.exec(uri.fragment);
      if (match2 != null) {
        const [, start, end] = match2;
        if (start) {
          startLine = parseInt(start, 10);
          if (end) {
            endLine = parseInt(end, 10);
          }
        }
      }
    }
    const match = fileRegex.exec(uri.path);
    if (match == null)
      return void 0;
    const [, , , path] = match;
    let index = path.indexOf("/", 1);
    if (index !== -1) {
      const sha = path.substring(1, index);
      if (_models_models__WEBPACK_IMPORTED_MODULE_0__.GitRevision.isSha(sha)) {
        const uri2 = repository.toAbsoluteUri(path.substr(index), { validate: options == null ? void 0 : options.validate });
        if (uri2 != null)
          return { uri: uri2, startLine, endLine };
      }
    }
    const branches = new Set((await repository.getBranches({
      filter: (b) => b.remote
    })).map((b) => b.getNameWithoutRemote()));
    let branch;
    index = path.length;
    do {
      index = path.lastIndexOf("/", index - 1);
      branch = path.substring(1, index);
      if (branches.has(branch)) {
        const uri2 = repository.toAbsoluteUri(path.substr(index), { validate: options == null ? void 0 : options.validate });
        if (uri2 != null)
          return { uri: uri2, startLine, endLine };
      }
    } while (index > 0);
    return void 0;
  }
  getUrlForBranches() {
    return this.encodeUrl(`${this.baseUrl}/branches`);
  }
  getUrlForBranch(branch) {
    return this.encodeUrl(`${this.baseUrl}/commits?until=${branch}`);
  }
  getUrlForCommit(sha) {
    return this.encodeUrl(`${this.baseUrl}/commits/${sha}`);
  }
  getUrlForComparison(base, compare, _notation) {
    return this.encodeUrl(`${this.baseUrl}/branches/compare/${base}%0D${compare}`).replace("%250D", "%0D");
  }
  getUrlForFile(fileName, branch, sha, range) {
    let line;
    if (range != null) {
      if (range.start.line === range.end.line) {
        line = `#${range.start.line}`;
      } else {
        line = `#${range.start.line}-${range.end.line}`;
      }
    } else {
      line = "";
    }
    if (sha)
      return `${this.encodeUrl(`${this.baseUrl}/browse/${fileName}?at=${sha}`)}${line}`;
    if (branch)
      return `${this.encodeUrl(`${this.baseUrl}/browse/${fileName}?at=${branch}`)}${line}`;
    return `${this.encodeUrl(`${this.baseUrl}/browse/${fileName}`)}${line}`;
  }
}


/***/ }),

/***/ "./src/git/remotes/bitbucket.ts":
/*!**************************************!*\
  !*** ./src/git/remotes/bitbucket.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "BitbucketRemote": () => (/* binding */ BitbucketRemote)
/* harmony export */ });
/* harmony import */ var _models_models__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../models/models */ "./src/git/models/models.ts");
/* harmony import */ var _provider__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./provider */ "./src/git/remotes/provider.ts");

var __defProp = Object.defineProperty;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};


const fileRegex = /^\/([^/]+)\/([^/]+?)\/src(.+)$/i;
const rangeRegex = /^lines-(\d+)(?::(\d+))?$/;
class BitbucketRemote extends _provider__WEBPACK_IMPORTED_MODULE_1__.RemoteProvider {
  constructor(domain, path, protocol, name, custom = false) {
    super(domain, path, protocol, name, custom);
    __publicField(this, "_autolinks");
  }
  get autolinks() {
    if (this._autolinks === void 0) {
      this._autolinks = [
        {
          prefix: "issue #",
          url: `${this.baseUrl}/issues/<num>`,
          title: `Open Issue #<num> on ${this.name}`
        },
        {
          prefix: "pull request #",
          url: `${this.baseUrl}/pull-requests/<num>`,
          title: `Open PR #<num> on ${this.name}`
        }
      ];
    }
    return this._autolinks;
  }
  get icon() {
    return "bitbucket";
  }
  get id() {
    return "bitbucket";
  }
  get name() {
    return this.formatName("Bitbucket");
  }
  async getLocalInfoFromRemoteUri(repository, uri, options) {
    var _a;
    if (uri.authority !== this.domain)
      return void 0;
    if (((_a = options == null ? void 0 : options.validate) != null ? _a : true) && !uri.path.startsWith(`/${this.path}/`))
      return void 0;
    let startLine;
    let endLine;
    if (uri.fragment) {
      const match2 = rangeRegex.exec(uri.fragment);
      if (match2 != null) {
        const [, start, end] = match2;
        if (start) {
          startLine = parseInt(start, 10);
          if (end) {
            endLine = parseInt(end, 10);
          }
        }
      }
    }
    const match = fileRegex.exec(uri.path);
    if (match == null)
      return void 0;
    const [, , , path] = match;
    let index = path.indexOf("/", 1);
    if (index !== -1) {
      const sha = path.substring(1, index);
      if (_models_models__WEBPACK_IMPORTED_MODULE_0__.GitRevision.isSha(sha)) {
        const uri2 = repository.toAbsoluteUri(path.substr(index), { validate: options == null ? void 0 : options.validate });
        if (uri2 != null)
          return { uri: uri2, startLine, endLine };
      }
    }
    const branches = new Set((await repository.getBranches({
      filter: (b) => b.remote
    })).map((b) => b.getNameWithoutRemote()));
    let branch;
    index = path.length;
    do {
      index = path.lastIndexOf("/", index - 1);
      branch = path.substring(1, index);
      if (branches.has(branch)) {
        const uri2 = repository.toAbsoluteUri(path.substr(index), { validate: options == null ? void 0 : options.validate });
        if (uri2 != null)
          return { uri: uri2, startLine, endLine };
      }
    } while (index > 0);
    return void 0;
  }
  getUrlForBranches() {
    return this.encodeUrl(`${this.baseUrl}/branches`);
  }
  getUrlForBranch(branch) {
    return this.encodeUrl(`${this.baseUrl}/branch/${branch}`);
  }
  getUrlForCommit(sha) {
    return this.encodeUrl(`${this.baseUrl}/commits/${sha}`);
  }
  getUrlForComparison(base, compare, _notation) {
    return this.encodeUrl(`${this.baseUrl}/branches/compare/${base}%0D${compare}`).replace("%250D", "%0D");
  }
  getUrlForFile(fileName, branch, sha, range) {
    let line;
    if (range != null) {
      if (range.start.line === range.end.line) {
        line = `#${fileName}-${range.start.line}`;
      } else {
        line = `#${fileName}-${range.start.line}:${range.end.line}`;
      }
    } else {
      line = "";
    }
    if (sha)
      return `${this.encodeUrl(`${this.baseUrl}/src/${sha}/${fileName}`)}${line}`;
    if (branch)
      return `${this.encodeUrl(`${this.baseUrl}/src/${branch}/${fileName}`)}${line}`;
    return `${this.encodeUrl(`${this.baseUrl}?path=${fileName}`)}${line}`;
  }
}


/***/ }),

/***/ "./src/git/remotes/custom.ts":
/*!***********************************!*\
  !*** ./src/git/remotes/custom.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CustomRemote": () => (/* binding */ CustomRemote)
/* harmony export */ });
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../system */ "./src/system.ts");
/* harmony import */ var _provider__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./provider */ "./src/git/remotes/provider.ts");

var __defProp = Object.defineProperty;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};


class CustomRemote extends _provider__WEBPACK_IMPORTED_MODULE_1__.RemoteProvider {
  constructor(domain, path, urls, protocol, name) {
    super(domain, path, protocol, name, true);
    __publicField(this, "urls");
    this.urls = urls;
  }
  get id() {
    return "custom";
  }
  get name() {
    return this.formatName("Custom");
  }
  getLocalInfoFromRemoteUri(_repository, _uri) {
    return Promise.resolve(void 0);
  }
  getUrlForRepository() {
    return this.encodeUrl(_system__WEBPACK_IMPORTED_MODULE_0__.Strings.interpolate(this.urls.repository, this.getContext()));
  }
  getUrlForBranches() {
    return this.encodeUrl(_system__WEBPACK_IMPORTED_MODULE_0__.Strings.interpolate(this.urls.branches, this.getContext()));
  }
  getUrlForBranch(branch) {
    return this.encodeUrl(_system__WEBPACK_IMPORTED_MODULE_0__.Strings.interpolate(this.urls.branch, this.getContext({ branch })));
  }
  getUrlForCommit(sha) {
    return this.encodeUrl(_system__WEBPACK_IMPORTED_MODULE_0__.Strings.interpolate(this.urls.commit, this.getContext({ id: sha })));
  }
  getUrlForComparison(base, compare, notation) {
    if (this.urls.comparison == null)
      return void 0;
    return this.encodeUrl(_system__WEBPACK_IMPORTED_MODULE_0__.Strings.interpolate(this.urls.comparison, this.getContext({ ref1: base, ref2: compare, notation })));
  }
  getUrlForFile(fileName, branch, sha, range) {
    let line;
    if (range != null) {
      if (range.start.line === range.end.line) {
        line = _system__WEBPACK_IMPORTED_MODULE_0__.Strings.interpolate(this.urls.fileLine, { line: range.start.line });
      } else {
        line = _system__WEBPACK_IMPORTED_MODULE_0__.Strings.interpolate(this.urls.fileRange, { start: range.start.line, end: range.end.line });
      }
    } else {
      line = "";
    }
    let url;
    if (sha) {
      url = _system__WEBPACK_IMPORTED_MODULE_0__.Strings.interpolate(this.urls.fileInCommit, this.getContext({ id: sha, file: fileName, line }));
    } else if (branch) {
      url = _system__WEBPACK_IMPORTED_MODULE_0__.Strings.interpolate(this.urls.fileInBranch, this.getContext({ branch, file: fileName, line }));
    } else {
      url = _system__WEBPACK_IMPORTED_MODULE_0__.Strings.interpolate(this.urls.file, this.getContext({ file: fileName, line }));
    }
    const decodeHash = url.includes("#");
    url = this.encodeUrl(url);
    if (decodeHash) {
      const index = url.lastIndexOf("%23");
      if (index !== -1) {
        url = `${url.substring(0, index)}#${url.substring(index + 3)}`;
      }
    }
    return url;
  }
  getContext(context) {
    const [repoBase, repoPath] = this.splitPath();
    return {
      repo: this.path,
      repoBase,
      repoPath,
      ...context != null ? context : {}
    };
  }
}


/***/ }),

/***/ "./src/git/remotes/factory.ts":
/*!************************************!*\
  !*** ./src/git/remotes/factory.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "RemoteProvider": () => (/* reexport safe */ _provider__WEBPACK_IMPORTED_MODULE_9__.RemoteProvider),
/* harmony export */   "RichRemoteProvider": () => (/* reexport safe */ _provider__WEBPACK_IMPORTED_MODULE_9__.RichRemoteProvider),
/* harmony export */   "RemoteProviderFactory": () => (/* binding */ RemoteProviderFactory)
/* harmony export */ });
/* harmony import */ var _configuration__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../configuration */ "./src/configuration.ts");
/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../logger */ "./src/logger.ts");
/* harmony import */ var _azure_devops__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./azure-devops */ "./src/git/remotes/azure-devops.ts");
/* harmony import */ var _bitbucket__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./bitbucket */ "./src/git/remotes/bitbucket.ts");
/* harmony import */ var _bitbucket_server__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./bitbucket-server */ "./src/git/remotes/bitbucket-server.ts");
/* harmony import */ var _custom__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./custom */ "./src/git/remotes/custom.ts");
/* harmony import */ var _gitea__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./gitea */ "./src/git/remotes/gitea.ts");
/* harmony import */ var _github__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./github */ "./src/git/remotes/github.ts");
/* harmony import */ var _gitlab__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./gitlab */ "./src/git/remotes/gitlab.ts");
/* harmony import */ var _provider__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./provider */ "./src/git/remotes/provider.ts");












const builtInProviders = [
  {
    custom: false,
    matcher: "bitbucket.org",
    creator: (domain, path) => new _bitbucket__WEBPACK_IMPORTED_MODULE_3__.BitbucketRemote(domain, path)
  },
  {
    custom: false,
    matcher: "github.com",
    creator: (domain, path) => new _github__WEBPACK_IMPORTED_MODULE_7__.GitHubRemote(domain, path)
  },
  {
    custom: false,
    matcher: "gitlab.com",
    creator: (domain, path) => new _gitlab__WEBPACK_IMPORTED_MODULE_8__.GitLabRemote(domain, path)
  },
  {
    custom: false,
    matcher: /\bdev\.azure\.com$/i,
    creator: (domain, path) => new _azure_devops__WEBPACK_IMPORTED_MODULE_2__.AzureDevOpsRemote(domain, path)
  },
  {
    custom: true,
    matcher: /^(.+\/(?:bitbucket|stash))\/scm\/(.+)$/i,
    creator: (domain, path) => new _bitbucket_server__WEBPACK_IMPORTED_MODULE_4__.BitbucketServerRemote(domain, path)
  },
  {
    custom: false,
    matcher: /\bgitlab\b/i,
    creator: (domain, path) => new _gitlab__WEBPACK_IMPORTED_MODULE_8__.GitLabRemote(domain, path)
  },
  {
    custom: false,
    matcher: /\bvisualstudio\.com$/i,
    creator: (domain, path) => new _azure_devops__WEBPACK_IMPORTED_MODULE_2__.AzureDevOpsRemote(domain, path, void 0, void 0, true)
  },
  {
    custom: false,
    matcher: /\bgitea\b/i,
    creator: (domain, path) => new _gitea__WEBPACK_IMPORTED_MODULE_6__.GiteaRemote(domain, path)
  }
];
class RemoteProviderFactory {
  static factory(providers) {
    return (url, domain, path) => this.create(providers, url, domain, path);
  }
  static create(providers, url, domain, path) {
    try {
      const key = domain.toLowerCase();
      for (const { custom, matcher, creator } of providers) {
        if (typeof matcher === "string") {
          if (matcher === key)
            return creator(domain, path);
          continue;
        }
        if (matcher.test(key))
          return creator(domain, path);
        if (!custom)
          continue;
        const match = matcher.exec(url);
        if (match != null) {
          return creator(match[1], match[2]);
        }
      }
      return void 0;
    } catch (ex) {
      _logger__WEBPACK_IMPORTED_MODULE_1__.Logger.error(ex, "RemoteProviderFactory");
      return void 0;
    }
  }
  static loadProviders(cfg) {
    var _a, _b;
    const providers = [];
    if (cfg != null && cfg.length > 0) {
      for (const rc of cfg) {
        const provider = this.getCustomProvider(rc);
        if (provider == null)
          continue;
        let matcher;
        try {
          matcher = rc.regex ? new RegExp(rc.regex, "i") : (_a = rc.domain) == null ? void 0 : _a.toLowerCase();
          if (matcher == null)
            throw new Error("No matcher found");
        } catch (ex) {
          _logger__WEBPACK_IMPORTED_MODULE_1__.Logger.error(ex, `Loading remote provider '${(_b = rc.name) != null ? _b : ""}' failed`);
        }
        providers.push({
          custom: true,
          matcher,
          creator: provider
        });
      }
    }
    providers.push(...builtInProviders);
    return providers;
  }
  static getCustomProvider(cfg) {
    switch (cfg.type) {
      case _configuration__WEBPACK_IMPORTED_MODULE_0__.CustomRemoteType.Bitbucket:
        return (domain, path) => new _bitbucket__WEBPACK_IMPORTED_MODULE_3__.BitbucketRemote(domain, path, cfg.protocol, cfg.name, true);
      case _configuration__WEBPACK_IMPORTED_MODULE_0__.CustomRemoteType.BitbucketServer:
        return (domain, path) => new _bitbucket_server__WEBPACK_IMPORTED_MODULE_4__.BitbucketServerRemote(domain, path, cfg.protocol, cfg.name, true);
      case _configuration__WEBPACK_IMPORTED_MODULE_0__.CustomRemoteType.Custom:
        return (domain, path) => new _custom__WEBPACK_IMPORTED_MODULE_5__.CustomRemote(domain, path, cfg.urls, cfg.protocol, cfg.name);
      case _configuration__WEBPACK_IMPORTED_MODULE_0__.CustomRemoteType.Gitea:
        return (domain, path) => new _gitea__WEBPACK_IMPORTED_MODULE_6__.GiteaRemote(domain, path, cfg.protocol, cfg.name, true);
      case _configuration__WEBPACK_IMPORTED_MODULE_0__.CustomRemoteType.GitHub:
        return (domain, path) => new _github__WEBPACK_IMPORTED_MODULE_7__.GitHubRemote(domain, path, cfg.protocol, cfg.name, true);
      case _configuration__WEBPACK_IMPORTED_MODULE_0__.CustomRemoteType.GitLab:
        return (domain, path) => new _gitlab__WEBPACK_IMPORTED_MODULE_8__.GitLabRemote(domain, path, cfg.protocol, cfg.name, true);
      default:
        return void 0;
    }
  }
}


/***/ }),

/***/ "./src/git/remotes/gitea.ts":
/*!**********************************!*\
  !*** ./src/git/remotes/gitea.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "GiteaRemote": () => (/* binding */ GiteaRemote)
/* harmony export */ });
/* harmony import */ var _models_models__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../models/models */ "./src/git/models/models.ts");
/* harmony import */ var _provider__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./provider */ "./src/git/remotes/provider.ts");

var __defProp = Object.defineProperty;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};


const fileRegex = /^\/([^/]+)\/([^/]+?)\/src(.+)$/i;
const rangeRegex = /^L(\d+)(?:-L(\d+))?$/;
class GiteaRemote extends _provider__WEBPACK_IMPORTED_MODULE_1__.RemoteProvider {
  constructor(domain, path, protocol, name, custom = false) {
    super(domain, path, protocol, name, custom);
    __publicField(this, "_autolinks");
  }
  get autolinks() {
    if (this._autolinks === void 0) {
      this._autolinks = [
        {
          prefix: "#",
          url: `${this.baseUrl}/issues/<num>`,
          title: `Open Issue #<num> on ${this.name}`
        }
      ];
    }
    return this._autolinks;
  }
  get icon() {
    return "gitea";
  }
  get id() {
    return "gitea";
  }
  get name() {
    return this.formatName("Gitea");
  }
  async getLocalInfoFromRemoteUri(repository, uri, options) {
    var _a;
    if (uri.authority !== this.domain)
      return void 0;
    if (((_a = options == null ? void 0 : options.validate) != null ? _a : true) && !uri.path.startsWith(`/${this.path}/`))
      return void 0;
    let startLine;
    let endLine;
    if (uri.fragment) {
      const match2 = rangeRegex.exec(uri.fragment);
      if (match2 != null) {
        const [, start, end] = match2;
        if (start) {
          startLine = parseInt(start, 10);
          if (end) {
            endLine = parseInt(end, 10);
          }
        }
      }
    }
    const match = fileRegex.exec(uri.path);
    if (match == null)
      return void 0;
    const [, , , path] = match;
    let offset;
    let index;
    if (path.startsWith("/commit/")) {
      offset = "/commit/".length;
      index = path.indexOf("/", offset);
      if (index !== -1) {
        const sha = path.substring(offset, index);
        if (_models_models__WEBPACK_IMPORTED_MODULE_0__.GitRevision.isSha(sha)) {
          const uri2 = repository.toAbsoluteUri(path.substr(index), { validate: options == null ? void 0 : options.validate });
          if (uri2 != null)
            return { uri: uri2, startLine, endLine };
        }
      }
    }
    const branches = new Set((await repository.getBranches({
      filter: (b) => b.remote
    })).map((b) => b.getNameWithoutRemote()));
    if (path.startsWith("/branch/")) {
      let branch;
      offset = "/branch/".length;
      index = offset;
      do {
        branch = path.substring(offset, index);
        if (branches.has(branch)) {
          const uri2 = repository.toAbsoluteUri(path.substr(index), { validate: options == null ? void 0 : options.validate });
          if (uri2 != null)
            return { uri: uri2, startLine, endLine };
        }
        index = path.indexOf("/", index + 1);
      } while (index < path.length && index !== -1);
    }
    return void 0;
  }
  getUrlForBranches() {
    return `${this.baseUrl}/branches`;
  }
  getUrlForBranch(branch) {
    return `${this.baseUrl}/src/branch/${branch}`;
  }
  getUrlForCommit(sha) {
    return `${this.baseUrl}/commit/${sha}`;
  }
  getUrlForComparison(ref1, ref2, _notation) {
    return `${this.baseUrl}/compare/${ref1}...${ref2}`;
  }
  getUrlForFile(fileName, branch, sha, range) {
    let line;
    if (range != null) {
      if (range.start.line === range.end.line) {
        line = `#L${range.start.line}`;
      } else {
        line = `#L${range.start.line}-L${range.end.line}`;
      }
    } else {
      line = "";
    }
    if (sha)
      return `${this.baseUrl}/src/commit/${sha}/${fileName}${line}`;
    if (branch)
      return `${this.baseUrl}/src/branch/${branch}/${fileName}${line}`;
    return `${this.baseUrl}/src/${fileName}${line}`;
  }
}


/***/ }),

/***/ "./src/git/remotes/github.ts":
/*!***********************************!*\
  !*** ./src/git/remotes/github.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "GitHubRemote": () => (/* binding */ GitHubRemote)
/* harmony export */ });
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../container */ "./src/container.ts");
/* harmony import */ var _github_github__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../github/github */ "./src/github/github.ts");
/* harmony import */ var _models_models__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../models/models */ "./src/git/models/models.ts");
/* harmony import */ var _provider__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./provider */ "./src/git/remotes/provider.ts");

var __defProp = Object.defineProperty;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};




const issueEnricher3rdPartyRegex = /\b(?<repo>[^/\s]+\/[^/\s]+)\\#(?<num>[0-9]+)\b(?!]\()/g;
const fileRegex = /^\/([^/]+)\/([^/]+?)\/blob(.+)$/i;
const rangeRegex = /^L(\d+)(?:-L(\d+))?$/;
const authProvider = Object.freeze({ id: "github", scopes: ["repo"] });
class GitHubRemote extends _provider__WEBPACK_IMPORTED_MODULE_3__.RichRemoteProvider {
  constructor(domain, path, protocol, name, custom = false) {
    super(domain, path, protocol, name, custom);
    __publicField(this, "_autolinks");
  }
  get authProvider() {
    return authProvider;
  }
  get apiBaseUrl() {
    return this.custom ? `${this.protocol}://${this.domain}/api` : `https://api.${this.domain}`;
  }
  get autolinks() {
    if (this._autolinks === void 0) {
      this._autolinks = [
        {
          prefix: "#",
          url: `${this.baseUrl}/issues/<num>`,
          title: `Open Issue #<num> on ${this.name}`
        },
        {
          prefix: "gh-",
          url: `${this.baseUrl}/issues/<num>`,
          title: `Open Issue #<num> on ${this.name}`,
          ignoreCase: true
        },
        {
          linkify: (text) => text.replace(issueEnricher3rdPartyRegex, `[$&](${this.protocol}://${this.domain}/$<repo>/issues/$<num> "Open Issue #$<num> from $<repo> on ${this.name}")`)
        }
      ];
    }
    return this._autolinks;
  }
  get icon() {
    return "github";
  }
  get id() {
    return "github";
  }
  get name() {
    return this.formatName("GitHub");
  }
  async getLocalInfoFromRemoteUri(repository, uri, options) {
    var _a;
    if (uri.authority !== this.domain)
      return void 0;
    if (((_a = options == null ? void 0 : options.validate) != null ? _a : true) && !uri.path.startsWith(`/${this.path}/`))
      return void 0;
    let startLine;
    let endLine;
    if (uri.fragment) {
      const match2 = rangeRegex.exec(uri.fragment);
      if (match2 != null) {
        const [, start, end] = match2;
        if (start) {
          startLine = parseInt(start, 10);
          if (end) {
            endLine = parseInt(end, 10);
          }
        }
      }
    }
    const match = fileRegex.exec(uri.path);
    if (match == null)
      return void 0;
    const [, , , path] = match;
    let index = path.indexOf("/", 1);
    if (index !== -1) {
      const sha = path.substring(1, index);
      if (_models_models__WEBPACK_IMPORTED_MODULE_2__.GitRevision.isSha(sha)) {
        const uri2 = repository.toAbsoluteUri(path.substr(index), { validate: options == null ? void 0 : options.validate });
        if (uri2 != null)
          return { uri: uri2, startLine, endLine };
      }
    }
    const branches = new Set((await repository.getBranches({
      filter: (b) => b.remote
    })).map((b) => b.getNameWithoutRemote()));
    let branch;
    index = path.length;
    do {
      index = path.lastIndexOf("/", index - 1);
      branch = path.substring(1, index);
      if (branches.has(branch)) {
        const uri2 = repository.toAbsoluteUri(path.substr(index), { validate: options == null ? void 0 : options.validate });
        if (uri2 != null)
          return { uri: uri2, startLine, endLine };
      }
    } while (index > 0);
    return void 0;
  }
  getUrlForBranches() {
    return this.encodeUrl(`${this.baseUrl}/branches`);
  }
  getUrlForBranch(branch) {
    return this.encodeUrl(`${this.baseUrl}/tree/${branch}`);
  }
  getUrlForCommit(sha) {
    return this.encodeUrl(`${this.baseUrl}/commit/${sha}`);
  }
  getUrlForComparison(base, compare, notation) {
    return this.encodeUrl(`${this.baseUrl}/compare/${base}${notation}${compare}`);
  }
  getUrlForCreatePullRequest(base, compare) {
    var _a, _b;
    if (base.remote.url === compare.remote.url) {
      return this.encodeUrl(`${this.baseUrl}/pull/new/${(_a = base.branch) != null ? _a : "HEAD"}...${compare.branch}`);
    }
    const [owner] = compare.remote.path.split("/", 1);
    return this.encodeUrl(`${this.baseUrl}/pull/new/${(_b = base.branch) != null ? _b : "HEAD"}...${owner}:${compare.branch}`);
  }
  getUrlForFile(fileName, branch, sha, range) {
    let line;
    if (range != null) {
      if (range.start.line === range.end.line) {
        line = `#L${range.start.line}`;
      } else {
        line = `#L${range.start.line}-L${range.end.line}`;
      }
    } else {
      line = "";
    }
    if (sha)
      return `${this.encodeUrl(`${this.baseUrl}/blob/${sha}/${fileName}`)}${line}`;
    if (branch)
      return `${this.encodeUrl(`${this.baseUrl}/blob/${branch}/${fileName}`)}${line}`;
    return `${this.encodeUrl(`${this.baseUrl}?path=${fileName}`)}${line}`;
  }
  async getProviderAccountForCommit({ accessToken }, ref, options) {
    var _a;
    const [owner, repo] = this.splitPath();
    return (_a = await _container__WEBPACK_IMPORTED_MODULE_0__.Container.github) == null ? void 0 : _a.getAccountForCommit(this, accessToken, owner, repo, ref, {
      ...options,
      baseUrl: this.apiBaseUrl
    });
  }
  async getProviderAccountForEmail({ accessToken }, email, options) {
    var _a;
    const [owner, repo] = this.splitPath();
    return (_a = await _container__WEBPACK_IMPORTED_MODULE_0__.Container.github) == null ? void 0 : _a.getAccountForEmail(this, accessToken, owner, repo, email, {
      ...options,
      baseUrl: this.apiBaseUrl
    });
  }
  async getProviderDefaultBranch({
    accessToken
  }) {
    var _a;
    const [owner, repo] = this.splitPath();
    return (_a = await _container__WEBPACK_IMPORTED_MODULE_0__.Container.github) == null ? void 0 : _a.getDefaultBranch(this, accessToken, owner, repo, {
      baseUrl: this.apiBaseUrl
    });
  }
  async getProviderIssueOrPullRequest({ accessToken }, id) {
    var _a;
    const [owner, repo] = this.splitPath();
    return (_a = await _container__WEBPACK_IMPORTED_MODULE_0__.Container.github) == null ? void 0 : _a.getIssueOrPullRequest(this, accessToken, owner, repo, Number(id), {
      baseUrl: this.apiBaseUrl
    });
  }
  async getProviderPullRequestForBranch({ accessToken }, branch, options) {
    var _a;
    const [owner, repo] = this.splitPath();
    const { include, ...opts } = options != null ? options : {};
    return (_a = await _container__WEBPACK_IMPORTED_MODULE_0__.Container.github) == null ? void 0 : _a.getPullRequestForBranch(this, accessToken, owner, repo, branch, {
      ...opts,
      include: include == null ? void 0 : include.map((s) => _github_github__WEBPACK_IMPORTED_MODULE_1__.GitHubPullRequest.toState(s)),
      baseUrl: this.apiBaseUrl
    });
  }
  async getProviderPullRequestForCommit({ accessToken }, ref) {
    var _a;
    const [owner, repo] = this.splitPath();
    return (_a = await _container__WEBPACK_IMPORTED_MODULE_0__.Container.github) == null ? void 0 : _a.getPullRequestForCommit(this, accessToken, owner, repo, ref, {
      baseUrl: this.apiBaseUrl
    });
  }
}


/***/ }),

/***/ "./src/git/remotes/gitlab.ts":
/*!***********************************!*\
  !*** ./src/git/remotes/gitlab.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "GitLabRemote": () => (/* binding */ GitLabRemote)
/* harmony export */ });
/* harmony import */ var _models_models__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../models/models */ "./src/git/models/models.ts");
/* harmony import */ var _provider__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./provider */ "./src/git/remotes/provider.ts");

var __defProp = Object.defineProperty;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};


const fileRegex = /^\/([^/]+)\/([^/]+?)\/-\/blob(.+)$/i;
const rangeRegex = /^L(\d+)(?:-(\d+))?$/;
class GitLabRemote extends _provider__WEBPACK_IMPORTED_MODULE_1__.RemoteProvider {
  constructor(domain, path, protocol, name, custom = false) {
    super(domain, path, protocol, name, custom);
    __publicField(this, "_autolinks");
  }
  get autolinks() {
    if (this._autolinks === void 0) {
      this._autolinks = [
        {
          prefix: "#",
          url: `${this.baseUrl}/issues/<num>`,
          title: `Open Issue #<num> on ${this.name}`
        }
      ];
    }
    return this._autolinks;
  }
  get icon() {
    return "gitlab";
  }
  get id() {
    return "gitlab";
  }
  get name() {
    return this.formatName("GitLab");
  }
  async getLocalInfoFromRemoteUri(repository, uri, options) {
    var _a;
    if (uri.authority !== this.domain)
      return void 0;
    if (((_a = options == null ? void 0 : options.validate) != null ? _a : true) && !uri.path.startsWith(`/${this.path}/`))
      return void 0;
    let startLine;
    let endLine;
    if (uri.fragment) {
      const match2 = rangeRegex.exec(uri.fragment);
      if (match2 != null) {
        const [, start, end] = match2;
        if (start) {
          startLine = parseInt(start, 10);
          if (end) {
            endLine = parseInt(end, 10);
          }
        }
      }
    }
    const match = fileRegex.exec(uri.path);
    if (match == null)
      return void 0;
    const [, , , path] = match;
    let index = path.indexOf("/", 1);
    if (index !== -1) {
      const sha = path.substring(1, index);
      if (_models_models__WEBPACK_IMPORTED_MODULE_0__.GitRevision.isSha(sha)) {
        const uri2 = repository.toAbsoluteUri(path.substr(index), { validate: options == null ? void 0 : options.validate });
        if (uri2 != null)
          return { uri: uri2, startLine, endLine };
      }
    }
    const branches = new Set((await repository.getBranches({
      filter: (b) => b.remote
    })).map((b) => b.getNameWithoutRemote()));
    let branch;
    index = path.length;
    do {
      index = path.lastIndexOf("/", index - 1);
      branch = path.substring(1, index);
      if (branches.has(branch)) {
        const uri2 = repository.toAbsoluteUri(path.substr(index), { validate: options == null ? void 0 : options.validate });
        if (uri2 != null)
          return { uri: uri2, startLine, endLine };
      }
    } while (index > 0);
    return void 0;
  }
  getUrlForBranches() {
    return this.encodeUrl(`${this.baseUrl}/branches`);
  }
  getUrlForBranch(branch) {
    return this.encodeUrl(`${this.baseUrl}/tree/${branch}`);
  }
  getUrlForCommit(sha) {
    return this.encodeUrl(`${this.baseUrl}/commit/${sha}`);
  }
  getUrlForComparison(base, compare, notation) {
    return this.encodeUrl(`${this.baseUrl}/-/compare/${base}${notation}${compare}`);
  }
  getUrlForFile(fileName, branch, sha, range) {
    let line;
    if (range != null) {
      if (range.start.line === range.end.line) {
        line = `#L${range.start.line}`;
      } else {
        line = `#L${range.start.line}-${range.end.line}`;
      }
    } else {
      line = "";
    }
    if (sha)
      return `${this.encodeUrl(`${this.baseUrl}/blob/${sha}/${fileName}`)}${line}`;
    if (branch)
      return `${this.encodeUrl(`${this.baseUrl}/blob/${branch}/${fileName}`)}${line}`;
    return `${this.encodeUrl(`${this.baseUrl}?path=${fileName}`)}${line}`;
  }
}


/***/ }),

/***/ "./src/git/remotes/provider.ts":
/*!*************************************!*\
  !*** ./src/git/remotes/provider.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "RemoteResourceType": () => (/* binding */ RemoteResourceType),
/* harmony export */   "getNameFromRemoteResource": () => (/* binding */ getNameFromRemoteResource),
/* harmony export */   "RemoteProvider": () => (/* binding */ RemoteProvider),
/* harmony export */   "Authentication": () => (/* binding */ Authentication),
/* harmony export */   "AuthenticationError": () => (/* binding */ AuthenticationError),
/* harmony export */   "ClientError": () => (/* binding */ ClientError),
/* harmony export */   "RichRemoteProvider": () => (/* binding */ RichRemoteProvider)
/* harmony export */ });
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../constants */ "./src/constants.ts");
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../container */ "./src/container.ts");
/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../logger */ "./src/logger.ts");
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../system */ "./src/system.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};





var RemoteResourceType;
(function(RemoteResourceType2) {
  RemoteResourceType2["Branch"] = "branch";
  RemoteResourceType2["Branches"] = "branches";
  RemoteResourceType2["Commit"] = "commit";
  RemoteResourceType2["Comparison"] = "comparison";
  RemoteResourceType2["CreatePullRequest"] = "createPullRequest";
  RemoteResourceType2["File"] = "file";
  RemoteResourceType2["Repo"] = "repo";
  RemoteResourceType2["Revision"] = "revision";
})(RemoteResourceType || (RemoteResourceType = {}));
function getNameFromRemoteResource(resource) {
  switch (resource.type) {
    case RemoteResourceType.Branch:
      return "Branch";
    case RemoteResourceType.Branches:
      return "Branches";
    case RemoteResourceType.Commit:
      return "Commit";
    case RemoteResourceType.Comparison:
      return "Comparison";
    case RemoteResourceType.CreatePullRequest:
      return "Create Pull Request";
    case RemoteResourceType.File:
      return "File";
    case RemoteResourceType.Repo:
      return "Repository";
    case RemoteResourceType.Revision:
      return "File";
    default:
      return "";
  }
}
class RemoteProvider {
  constructor(domain, path, protocol = "https", name, custom = false) {
    this.domain = domain;
    this.path = path;
    this.protocol = protocol;
    this.custom = custom;
    __publicField(this, "type", "simple");
    __publicField(this, "_name");
    this._name = name;
  }
  get autolinks() {
    return [];
  }
  get displayPath() {
    return this.path;
  }
  get icon() {
    return "remote";
  }
  async copy(resource) {
    const url = this.url(resource);
    if (url == null)
      return;
    void await vscode__WEBPACK_IMPORTED_MODULE_0__.env.clipboard.writeText(url);
  }
  hasApi() {
    return RichRemoteProvider.is(this);
  }
  open(resource) {
    return this.openUrl(this.url(resource));
  }
  url(resource) {
    var _a, _b, _c;
    switch (resource.type) {
      case RemoteResourceType.Branch:
        return this.getUrlForBranch(resource.branch);
      case RemoteResourceType.Branches:
        return this.getUrlForBranches();
      case RemoteResourceType.Commit:
        return this.getUrlForCommit(resource.sha);
      case RemoteResourceType.Comparison: {
        return (_b = this.getUrlForComparison) == null ? void 0 : _b.call(this, resource.base, resource.compare, (_a = resource.notation) != null ? _a : "...");
      }
      case RemoteResourceType.CreatePullRequest: {
        return (_c = this.getUrlForCreatePullRequest) == null ? void 0 : _c.call(this, resource.base, resource.compare);
      }
      case RemoteResourceType.File:
        return this.getUrlForFile(resource.fileName, resource.branchOrTag != null ? resource.branchOrTag : void 0, void 0, resource.range);
      case RemoteResourceType.Repo:
        return this.getUrlForRepository();
      case RemoteResourceType.Revision:
        return this.getUrlForFile(resource.fileName, resource.branchOrTag != null ? resource.branchOrTag : void 0, resource.sha != null ? resource.sha : void 0, resource.range);
      default:
        return void 0;
    }
  }
  get baseUrl() {
    return `${this.protocol}://${this.domain}/${this.path}`;
  }
  formatName(name) {
    if (this._name != null)
      return this._name;
    return `${name}${this.custom ? ` (${this.domain})` : ""}`;
  }
  splitPath() {
    const index = this.path.indexOf("/");
    return [this.path.substring(0, index), this.path.substring(index + 1)];
  }
  getUrlForRepository() {
    return this.baseUrl;
  }
  async openUrl(url) {
    if (url == null)
      return void 0;
    return vscode__WEBPACK_IMPORTED_MODULE_0__.env.openExternal(vscode__WEBPACK_IMPORTED_MODULE_0__.Uri.parse(url));
  }
  encodeUrl(url) {
    return url != null ? encodeURI(url).replace(/#/g, "%23") : void 0;
  }
}
const _onDidChangeAuthentication = new vscode__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
class Authentication {
  static get onDidChange() {
    return _onDidChangeAuthentication.event;
  }
}
class AuthenticationError extends Error {
  constructor(original) {
    super(original.message);
    this.original = original;
    Error.captureStackTrace(this, AuthenticationError);
  }
}
class ClientError extends Error {
  constructor(original) {
    super(original.message);
    this.original = original;
    Error.captureStackTrace(this, ClientError);
  }
}
class RichRemoteProvider extends RemoteProvider {
  constructor(domain, path, protocol, name, custom) {
    super(domain, path, protocol, name, custom);
    __publicField(this, "type", "rich");
    __publicField(this, "_onDidChange", new vscode__WEBPACK_IMPORTED_MODULE_0__.EventEmitter());
    __publicField(this, "invalidClientExceptionCount", 0);
    __publicField(this, "_session");
    __publicField(this, "_prsByCommit", new Map());
    _container__WEBPACK_IMPORTED_MODULE_2__.Container.context.subscriptions.push(Authentication.onDidChange((e) => {
      if (e.key !== this.key)
        return;
      if (e.reason === "disconnected") {
        this.disconnect(true);
      } else if (e.reason === "connected") {
        void this.ensureSession(false);
      }
    }), vscode__WEBPACK_IMPORTED_MODULE_0__.authentication.onDidChangeSessions(this.onAuthenticationSessionsChanged, this));
  }
  static is(provider) {
    return (provider == null ? void 0 : provider.type) === "rich";
  }
  get onDidChange() {
    return this._onDidChange.event;
  }
  get key() {
    return this.custom ? `${this.name}:${this.domain}` : this.name;
  }
  get connectedKey() {
    return `${_constants__WEBPACK_IMPORTED_MODULE_1__.WorkspaceState.ConnectedPrefix}${this.key}`;
  }
  get maybeConnected() {
    if (this._session === void 0)
      return void 0;
    return this._session !== null;
  }
  session() {
    var _a;
    if (this._session === void 0) {
      return this.ensureSession(false);
    }
    return (_a = this._session) != null ? _a : void 0;
  }
  onAuthenticationSessionsChanged(e) {
    if (e.provider.id === this.authProvider.id) {
      void this.ensureSession(false);
    }
  }
  async connect() {
    try {
      const session = await this.ensureSession(true);
      return Boolean(session);
    } catch (ex) {
      return false;
    }
  }
  disconnect(silent = false) {
    const disconnected = this._session != null;
    this.invalidClientExceptionCount = 0;
    this._prsByCommit.clear();
    this._session = null;
    if (disconnected) {
      void _container__WEBPACK_IMPORTED_MODULE_2__.Container.context.workspaceState.update(this.connectedKey, false);
      this._onDidChange.fire();
      if (!silent) {
        _onDidChangeAuthentication.fire({ reason: "disconnected", key: this.key });
      }
    }
  }
  async isConnected() {
    return await this.session() != null;
  }
  async getAccountForCommit(ref, options) {
    var _a;
    const cc = _logger__WEBPACK_IMPORTED_MODULE_3__.Logger.getCorrelationContext();
    const connected = (_a = this.maybeConnected) != null ? _a : await this.isConnected();
    if (!connected)
      return void 0;
    try {
      const author = await this.getProviderAccountForCommit(this._session, ref, options);
      this.invalidClientExceptionCount = 0;
      return author;
    } catch (ex) {
      _logger__WEBPACK_IMPORTED_MODULE_3__.Logger.error(ex, cc);
      if (ex instanceof ClientError || ex instanceof AuthenticationError) {
        this.handleClientException();
      }
      return void 0;
    }
  }
  async getAccountForEmail(email, options) {
    var _a;
    const cc = _logger__WEBPACK_IMPORTED_MODULE_3__.Logger.getCorrelationContext();
    const connected = (_a = this.maybeConnected) != null ? _a : await this.isConnected();
    if (!connected)
      return void 0;
    try {
      const author = await this.getProviderAccountForEmail(this._session, email, options);
      this.invalidClientExceptionCount = 0;
      return author;
    } catch (ex) {
      _logger__WEBPACK_IMPORTED_MODULE_3__.Logger.error(ex, cc);
      if (ex instanceof ClientError || ex instanceof AuthenticationError) {
        this.handleClientException();
      }
      return void 0;
    }
  }
  async getDefaultBranch() {
    var _a;
    const cc = _logger__WEBPACK_IMPORTED_MODULE_3__.Logger.getCorrelationContext();
    const connected = (_a = this.maybeConnected) != null ? _a : await this.isConnected();
    if (!connected)
      return void 0;
    try {
      const defaultBranch = await this.getProviderDefaultBranch(this._session);
      this.invalidClientExceptionCount = 0;
      return defaultBranch;
    } catch (ex) {
      _logger__WEBPACK_IMPORTED_MODULE_3__.Logger.error(ex, cc);
      if (ex instanceof ClientError || ex instanceof AuthenticationError) {
        this.handleClientException();
      }
      return void 0;
    }
  }
  async getIssueOrPullRequest(id) {
    var _a;
    const cc = _logger__WEBPACK_IMPORTED_MODULE_3__.Logger.getCorrelationContext();
    const connected = (_a = this.maybeConnected) != null ? _a : await this.isConnected();
    if (!connected)
      return void 0;
    try {
      const issueOrPullRequest = await this.getProviderIssueOrPullRequest(this._session, id);
      this.invalidClientExceptionCount = 0;
      return issueOrPullRequest;
    } catch (ex) {
      _logger__WEBPACK_IMPORTED_MODULE_3__.Logger.error(ex, cc);
      if (ex instanceof ClientError || ex instanceof AuthenticationError) {
        this.handleClientException();
      }
      return void 0;
    }
  }
  async getPullRequestForBranch(branch, options) {
    var _a;
    const cc = _logger__WEBPACK_IMPORTED_MODULE_3__.Logger.getCorrelationContext();
    const connected = (_a = this.maybeConnected) != null ? _a : await this.isConnected();
    if (!connected)
      return void 0;
    try {
      const pr = await this.getProviderPullRequestForBranch(this._session, branch, options);
      this.invalidClientExceptionCount = 0;
      return pr;
    } catch (ex) {
      _logger__WEBPACK_IMPORTED_MODULE_3__.Logger.error(ex, cc);
      if (ex instanceof ClientError || ex instanceof AuthenticationError) {
        this.handleClientException();
      }
      return void 0;
    }
  }
  getPullRequestForCommit(ref) {
    let pr = this._prsByCommit.get(ref);
    if (pr === void 0) {
      pr = this.getPullRequestForCommitCore(ref);
      this._prsByCommit.set(ref, pr);
    }
    if (pr == null || !_system__WEBPACK_IMPORTED_MODULE_4__.Promises.is(pr))
      return pr != null ? pr : void 0;
    return pr.then((pr2) => pr2 != null ? pr2 : void 0);
  }
  async getPullRequestForCommitCore(ref) {
    var _a, _b;
    const cc = _logger__WEBPACK_IMPORTED_MODULE_3__.Logger.getCorrelationContext();
    const connected = (_a = this.maybeConnected) != null ? _a : await this.isConnected();
    if (!connected)
      return null;
    try {
      const pr = (_b = await this.getProviderPullRequestForCommit(this._session, ref)) != null ? _b : null;
      this._prsByCommit.set(ref, pr);
      this.invalidClientExceptionCount = 0;
      return pr;
    } catch (ex) {
      _logger__WEBPACK_IMPORTED_MODULE_3__.Logger.error(ex, cc);
      this._prsByCommit.delete(ref);
      if (ex instanceof ClientError || ex instanceof AuthenticationError) {
        this.handleClientException();
      }
      return null;
    }
  }
  async ensureSession(createIfNeeded) {
    if (this._session != null)
      return this._session;
    if (!_container__WEBPACK_IMPORTED_MODULE_2__.Container.config.integrations.enabled)
      return void 0;
    if (createIfNeeded) {
      await _container__WEBPACK_IMPORTED_MODULE_2__.Container.context.workspaceState.update(this.connectedKey, void 0);
    } else if (_container__WEBPACK_IMPORTED_MODULE_2__.Container.context.workspaceState.get(this.connectedKey) === false) {
      return void 0;
    }
    let session;
    try {
      session = await vscode__WEBPACK_IMPORTED_MODULE_0__.authentication.getSession(this.authProvider.id, this.authProvider.scopes, {
        createIfNone: createIfNeeded
      });
    } catch (ex) {
      await _container__WEBPACK_IMPORTED_MODULE_2__.Container.context.workspaceState.update(this.connectedKey, void 0);
      if (ex instanceof Error && ex.message.includes("User did not consent")) {
        return void 0;
      }
      session = null;
    }
    if (session === void 0 && !createIfNeeded) {
      await _container__WEBPACK_IMPORTED_MODULE_2__.Container.context.workspaceState.update(this.connectedKey, void 0);
    }
    this._session = session != null ? session : null;
    this.invalidClientExceptionCount = 0;
    if (session != null) {
      await _container__WEBPACK_IMPORTED_MODULE_2__.Container.context.workspaceState.update(this.connectedKey, true);
      this._onDidChange.fire();
      _onDidChangeAuthentication.fire({ reason: "connected", key: this.key });
    }
    return session != null ? session : void 0;
  }
  handleClientException() {
    this.invalidClientExceptionCount++;
    if (this.invalidClientExceptionCount >= 5) {
      this.disconnect();
    }
  }
}
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_4__.log)()
], RichRemoteProvider.prototype, "connect", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_4__.log)()
], RichRemoteProvider.prototype, "disconnect", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_4__.gate)(),
  (0,_system__WEBPACK_IMPORTED_MODULE_4__.debug)({
    exit: (connected) => `returned ${connected}`
  })
], RichRemoteProvider.prototype, "isConnected", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_4__.gate)(),
  (0,_system__WEBPACK_IMPORTED_MODULE_4__.debug)()
], RichRemoteProvider.prototype, "getAccountForCommit", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_4__.gate)(),
  (0,_system__WEBPACK_IMPORTED_MODULE_4__.debug)()
], RichRemoteProvider.prototype, "getAccountForEmail", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_4__.gate)(),
  (0,_system__WEBPACK_IMPORTED_MODULE_4__.debug)()
], RichRemoteProvider.prototype, "getDefaultBranch", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_4__.gate)(),
  (0,_system__WEBPACK_IMPORTED_MODULE_4__.debug)()
], RichRemoteProvider.prototype, "getIssueOrPullRequest", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_4__.gate)(),
  (0,_system__WEBPACK_IMPORTED_MODULE_4__.debug)()
], RichRemoteProvider.prototype, "getPullRequestForBranch", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_4__.gate)(),
  (0,_system__WEBPACK_IMPORTED_MODULE_4__.debug)()
], RichRemoteProvider.prototype, "getPullRequestForCommit", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_4__.debug)()
], RichRemoteProvider.prototype, "getPullRequestForCommitCore", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_4__.gate)()
], RichRemoteProvider.prototype, "ensureSession", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_4__.debug)()
], RichRemoteProvider.prototype, "handleClientException", 1);


/***/ }),

/***/ "./src/git/search.ts":
/*!***************************!*\
  !*** ./src/git/search.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "searchOperators": () => (/* binding */ searchOperators),
/* harmony export */   "SearchPattern": () => (/* binding */ SearchPattern),
/* harmony export */   "normalizeSearchOperatorsMap": () => (/* binding */ normalizeSearchOperatorsMap)
/* harmony export */ });
/* harmony import */ var _git__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./git */ "./src/git/git.ts");


const searchOperators = new Set([
  "",
  "=:",
  "message:",
  "@:",
  "author:",
  "#:",
  "commit:",
  "?:",
  "file:",
  "~:",
  "change:"
]);
var SearchPattern;
(function(SearchPattern2) {
  const emptyStr = "";
  const searchMessageOperationRegex = /(?=(.*?)\s?(?:(?:=:|message:|@:|author:|#:|commit:|\?:|file:|~:|change:)|$))/;
  const searchMessageValuesRegex = /(".+"|[^\b\s]+)/g;
  const searchOperationRegex = /((?:=|message|@|author|#|commit|\?|file|~|change):)\s?(?=(.*?)\s?(?:(?:=:|message:|@:|author:|#:|commit:|\?:|file:|~:|change:)|$))/g;
  function fromCommit(refOrCommit) {
    return `#:${typeof refOrCommit === "string" ? _git__WEBPACK_IMPORTED_MODULE_0__.GitRevision.shorten(refOrCommit) : refOrCommit.name}`;
  }
  SearchPattern2.fromCommit = fromCommit;
  function fromCommits(refsOrCommits) {
    return refsOrCommits.map((r) => `#:${typeof r === "string" ? _git__WEBPACK_IMPORTED_MODULE_0__.GitRevision.shorten(r) : r.name}`).join(" ");
  }
  SearchPattern2.fromCommits = fromCommits;
  function parseSearchOperations(search) {
    const operations = new Map();
    let op;
    let value;
    let match = searchMessageOperationRegex.exec(search);
    if (match != null && match[1] !== "") {
      [, value] = match;
      if (_git__WEBPACK_IMPORTED_MODULE_0__.GitRevision.isSha(value)) {
        let values = operations.get("commit:");
        if (values === void 0) {
          values = [value];
          operations.set("commit:", values);
        } else {
          values.push(value);
        }
      } else {
        parseSearchMessageOperations(value, operations);
      }
    }
    do {
      match = searchOperationRegex.exec(search);
      if (match == null)
        break;
      [, op, value] = match;
      if (op !== void 0) {
        op = normalizeSearchOperatorsMap.get(op);
        if (op === "message:") {
          parseSearchMessageOperations(value, operations);
        } else {
          let values = operations.get(op);
          if (values === void 0) {
            values = [value];
            operations.set(op, values);
          } else {
            values.push(value);
          }
        }
      }
    } while (true);
    return operations;
  }
  SearchPattern2.parseSearchOperations = parseSearchOperations;
  function parseSearchMessageOperations(message, operations) {
    let values = operations.get("message:");
    if (message === emptyStr) {
      if (values === void 0) {
        values = [""];
        operations.set("message:", values);
      } else {
        values.push("");
      }
      return;
    }
    let match;
    let value;
    do {
      match = searchMessageValuesRegex.exec(message);
      if (match == null)
        break;
      [, value] = match;
      if (values === void 0) {
        values = [value];
        operations.set("message:", values);
      } else {
        values.push(value);
      }
    } while (true);
  }
  function toKey(search) {
    return `${search.pattern}|${search.matchAll ? "A" : ""}${search.matchCase ? "C" : ""}${search.matchRegex ? "R" : ""}`;
  }
  SearchPattern2.toKey = toKey;
})(SearchPattern || (SearchPattern = {}));
const normalizeSearchOperatorsMap = new Map([
  ["", "message:"],
  ["=:", "message:"],
  ["message:", "message:"],
  ["@:", "author:"],
  ["author:", "author:"],
  ["#:", "commit:"],
  ["commit:", "commit:"],
  ["?:", "file:"],
  ["file:", "file:"],
  ["~:", "change:"],
  ["change:", "change:"]
]);


/***/ }),

/***/ "./src/git/shell.ts":
/*!**************************!*\
  !*** ./src/git/shell.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "isWindows": () => (/* binding */ isWindows),
/* harmony export */   "findExecutable": () => (/* binding */ findExecutable),
/* harmony export */   "RunError": () => (/* binding */ RunError),
/* harmony export */   "run": () => (/* binding */ run),
/* harmony export */   "fsExists": () => (/* binding */ fsExists)
/* harmony export */ });
Object(function webpackMissingModule() { var e = new Error("Cannot find module 'child_process'"); e.code = 'MODULE_NOT_FOUND'; throw e; }());
Object(function webpackMissingModule() { var e = new Error("Cannot find module 'fs'"); e.code = 'MODULE_NOT_FOUND'; throw e; }());
/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! path */ "./node_modules/path-browserify/index.js");
/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var iconv_lite__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! iconv-lite */ "./node_modules/iconv-lite/lib/index.js");
/* harmony import */ var iconv_lite__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(iconv_lite__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../logger */ "./src/logger.ts");






const isWindows = process.platform === "win32";
const slashesRegex = /[\\/]/;
const ps1Regex = /\.ps1$/i;
const batOrCmdRegex = /\.(bat|cmd)$/i;
const jsRegex = /\.(js)$/i;
function runDownPath(exe) {
  if (slashesRegex.test(exe))
    return exe;
  const target = path__WEBPACK_IMPORTED_MODULE_1__.join(".", exe);
  try {
    const stats = Object(function webpackMissingModule() { var e = new Error("Cannot find module 'fs'"); e.code = 'MODULE_NOT_FOUND'; throw e; }())(target);
    if ((stats == null ? void 0 : stats.isFile()) && isExecutable(stats))
      return target;
  } catch {
  }
  const path = process.env.PATH;
  if (path != null && path.length !== 0) {
    const haystack = path.split(isWindows ? ";" : ":");
    let stats;
    for (const p of haystack) {
      const needle = path__WEBPACK_IMPORTED_MODULE_1__.join(p, exe);
      try {
        stats = Object(function webpackMissingModule() { var e = new Error("Cannot find module 'fs'"); e.code = 'MODULE_NOT_FOUND'; throw e; }())(needle);
        if ((stats == null ? void 0 : stats.isFile()) && isExecutable(stats))
          return needle;
      } catch {
      }
    }
  }
  return exe;
}
function isExecutable(stats) {
  if (isWindows)
    return true;
  const isGroup = stats.gid ? process.getgid != null && stats.gid === process.getgid() : true;
  const isUser = stats.uid ? process.getuid != null && stats.uid === process.getuid() : true;
  return Boolean(stats.mode & 1 || stats.mode & 8 && isGroup || stats.mode & 64 && isUser);
}
function findExecutable(exe, args) {
  var _a, _b;
  if (!isWindows)
    return { cmd: runDownPath(exe), args };
  if (!Object(function webpackMissingModule() { var e = new Error("Cannot find module 'fs'"); e.code = 'MODULE_NOT_FOUND'; throw e; }())(exe)) {
    const possibleExts = [".exe", ".bat", ".cmd", ".ps1"];
    for (const ext of possibleExts) {
      const possibleFullPath = runDownPath(`${exe}${ext}`);
      if (Object(function webpackMissingModule() { var e = new Error("Cannot find module 'fs'"); e.code = 'MODULE_NOT_FOUND'; throw e; }())(possibleFullPath))
        return findExecutable(possibleFullPath, args);
    }
  }
  if (ps1Regex.test(exe)) {
    const cmd = path__WEBPACK_IMPORTED_MODULE_1__.join((_a = process.env.SYSTEMROOT) != null ? _a : "C:\\WINDOWS", "System32", "WindowsPowerShell", "v1.0", "PowerShell.exe");
    const psargs = ["-ExecutionPolicy", "Unrestricted", "-NoLogo", "-NonInteractive", "-File", exe];
    return { cmd, args: psargs.concat(args) };
  }
  if (batOrCmdRegex.test(exe)) {
    const cmd = path__WEBPACK_IMPORTED_MODULE_1__.join((_b = process.env.SYSTEMROOT) != null ? _b : "C:\\WINDOWS", "System32", "cmd.exe");
    const cmdArgs = ["/C", exe, ...args];
    return { cmd, args: cmdArgs };
  }
  if (jsRegex.test(exe)) {
    const cmd = process.execPath;
    const nodeArgs = [exe];
    return { cmd, args: nodeArgs.concat(args) };
  }
  return { cmd: exe, args };
}
const bufferExceededRegex = /stdout maxBuffer( length)? exceeded/;
class RunError extends Error {
  constructor(original, stdout, stderr) {
    super(original.message);
    this.original = original;
    this.stdout = stdout;
    this.stderr = stderr;
    stdout = stdout.trim();
    stderr = stderr.trim();
    Error.captureStackTrace(this, RunError);
  }
  get cmd() {
    return this.original.cmd;
  }
  get killed() {
    return this.original.killed;
  }
  get code() {
    return this.original.code;
  }
  get signal() {
    return this.original.signal;
  }
}
function run(command, args, encoding, options = {}) {
  const { stdin, stdinEncoding, ...opts } = { maxBuffer: 100 * 1024 * 1024, ...options };
  return new Promise((resolve, reject) => {
    var _a;
    const proc = Object(function webpackMissingModule() { var e = new Error("Cannot find module 'child_process'"); e.code = 'MODULE_NOT_FOUND'; throw e; }())(command, args, opts, (error, stdout, stderr) => {
      if (error != null) {
        if (bufferExceededRegex.test(error.message)) {
          error.message = `Command output exceeded the allocated stdout buffer. Set 'options.maxBuffer' to a larger value than ${opts.maxBuffer} bytes`;
        }
        reject(new RunError(error, encoding === "utf8" || encoding === "binary" || encoding === "buffer" ? stdout : iconv_lite__WEBPACK_IMPORTED_MODULE_2__.decode(Buffer.from(stdout, "binary"), encoding), encoding === "utf8" || encoding === "binary" || encoding === "buffer" ? stderr : iconv_lite__WEBPACK_IMPORTED_MODULE_2__.decode(Buffer.from(stderr, "binary"), encoding)));
        return;
      }
      if (stderr) {
        _logger__WEBPACK_IMPORTED_MODULE_3__.Logger.warn(`Warning(${command} ${args.join(" ")}): ${stderr}`);
      }
      resolve(encoding === "utf8" || encoding === "binary" || encoding === "buffer" ? stdout : iconv_lite__WEBPACK_IMPORTED_MODULE_2__.decode(Buffer.from(stdout, "binary"), encoding));
    });
    if (stdin != null) {
      (_a = proc.stdin) == null ? void 0 : _a.end(stdin, stdinEncoding != null ? stdinEncoding : "utf8");
    }
  });
}
function fsExists(path) {
  return new Promise((resolve) => Object(function webpackMissingModule() { var e = new Error("Cannot find module 'fs'"); e.code = 'MODULE_NOT_FOUND'; throw e; }())(path, (exists) => resolve(exists)));
}


/***/ }),

/***/ "./src/github/github.ts":
/*!******************************!*\
  !*** ./src/github/github.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "GitHubApi": () => (/* binding */ GitHubApi),
/* harmony export */   "GitHubPullRequest": () => (/* binding */ GitHubPullRequest)
/* harmony export */ });
/* harmony import */ var _octokit_graphql__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @octokit/graphql */ "./node_modules/@octokit/graphql/dist-web/index.js");
/* harmony import */ var _git_git__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../git/git */ "./src/git/git.ts");
/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../logger */ "./src/logger.ts");
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../system */ "./src/system.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};




class GitHubApi {
  async getAccountForCommit(provider, token, owner, repo, ref, options) {
    var _a, _b, _c, _d;
    const cc = _logger__WEBPACK_IMPORTED_MODULE_1__.Logger.getCorrelationContext();
    try {
      const query = `query getAccountForCommit(
	$owner: String!
	$repo: String!
	$ref: GitObjectID!
	$avatarSize: Int
) {
	repository(name: $repo, owner: $owner) {
		object(oid: $ref) {
			... on Commit {
				author {
					name
					email
					avatarUrl(size: $avatarSize)
				}
			}
		}
	}
}`;
      const rsp = await (0,_octokit_graphql__WEBPACK_IMPORTED_MODULE_3__.graphql)(query, {
        ...options,
        headers: { authorization: `Bearer ${token}` },
        owner,
        repo,
        ref
      });
      const author = (_b = (_a = rsp == null ? void 0 : rsp.repository) == null ? void 0 : _a.object) == null ? void 0 : _b.author;
      if (author == null)
        return void 0;
      return {
        provider,
        name: (_c = author.name) != null ? _c : void 0,
        email: (_d = author.email) != null ? _d : void 0,
        avatarUrl: author.avatarUrl
      };
    } catch (ex) {
      _logger__WEBPACK_IMPORTED_MODULE_1__.Logger.error(ex, cc);
      if (ex.code >= 400 && ex.code <= 500) {
        if (ex.code === 401)
          throw new _git_git__WEBPACK_IMPORTED_MODULE_0__.AuthenticationError(ex);
        throw new _git_git__WEBPACK_IMPORTED_MODULE_0__.ClientError(ex);
      }
      throw ex;
    }
  }
  async getAccountForEmail(provider, token, owner, repo, email, options) {
    var _a, _b, _c, _d;
    const cc = _logger__WEBPACK_IMPORTED_MODULE_1__.Logger.getCorrelationContext();
    try {
      const query = `query getAccountForEmail(
	$emailQuery: String!
	$avatarSize: Int
) {
	search(type: USER, query: $emailQuery, first: 1) {
		nodes {
			... on User {
				name
				email
				avatarUrl(size: $avatarSize)
			}
		}
	}
}`;
      const rsp = await (0,_octokit_graphql__WEBPACK_IMPORTED_MODULE_3__.graphql)(query, {
        ...options,
        headers: { authorization: `Bearer ${token}` },
        owner,
        repo,
        emailQuery: `in:email ${email}`
      });
      const author = (_b = (_a = rsp == null ? void 0 : rsp.search) == null ? void 0 : _a.nodes) == null ? void 0 : _b[0];
      if (author == null)
        return void 0;
      return {
        provider,
        name: (_c = author.name) != null ? _c : void 0,
        email: (_d = author.email) != null ? _d : void 0,
        avatarUrl: author.avatarUrl
      };
    } catch (ex) {
      _logger__WEBPACK_IMPORTED_MODULE_1__.Logger.error(ex, cc);
      if (ex.code >= 400 && ex.code <= 500) {
        if (ex.code === 401)
          throw new _git_git__WEBPACK_IMPORTED_MODULE_0__.AuthenticationError(ex);
        throw new _git_git__WEBPACK_IMPORTED_MODULE_0__.ClientError(ex);
      }
      throw ex;
    }
  }
  async getDefaultBranch(provider, token, owner, repo, options) {
    var _a, _b, _c;
    const cc = _logger__WEBPACK_IMPORTED_MODULE_1__.Logger.getCorrelationContext();
    try {
      const query = `query getDefaultBranch(
	$owner: String!
	$repo: String!
) {
	repository(name: $repo, owner: $owner) {
		defaultBranchRef {
			name
		}
	}
}`;
      const rsp = await (0,_octokit_graphql__WEBPACK_IMPORTED_MODULE_3__.graphql)(query, {
        ...options,
        headers: { authorization: `Bearer ${token}` },
        owner,
        repo
      });
      const defaultBranch = (_c = (_b = (_a = rsp == null ? void 0 : rsp.repository) == null ? void 0 : _a.defaultBranchRef) == null ? void 0 : _b.name) != null ? _c : void 0;
      if (defaultBranch == null)
        return void 0;
      return {
        provider,
        name: defaultBranch
      };
    } catch (ex) {
      _logger__WEBPACK_IMPORTED_MODULE_1__.Logger.error(ex, cc);
      if (ex.code >= 400 && ex.code <= 500) {
        if (ex.code === 401)
          throw new _git_git__WEBPACK_IMPORTED_MODULE_0__.AuthenticationError(ex);
        throw new _git_git__WEBPACK_IMPORTED_MODULE_0__.ClientError(ex);
      }
      throw ex;
    }
  }
  async getIssueOrPullRequest(provider, token, owner, repo, number, options) {
    var _a;
    const cc = _logger__WEBPACK_IMPORTED_MODULE_1__.Logger.getCorrelationContext();
    try {
      const query = `query getIssueOrPullRequest(
	$owner: String!
	$repo: String!
	$number: Int!
) {
	repository(name: $repo, owner: $owner) {
		issueOrPullRequest(number: $number) {
			__typename
			... on Issue {
				createdAt
				closed
				closedAt
				title
			}
			... on PullRequest {
				createdAt
				closed
				closedAt
				title
			}
		}
	}
}`;
      const rsp = await (0,_octokit_graphql__WEBPACK_IMPORTED_MODULE_3__.graphql)(query, {
        ...options,
        headers: { authorization: `Bearer ${token}` },
        owner,
        repo,
        number
      });
      const issue = (_a = rsp == null ? void 0 : rsp.repository) == null ? void 0 : _a.issueOrPullRequest;
      if (issue == null)
        return void 0;
      return {
        provider,
        type: issue.type,
        id: number,
        date: new Date(issue.createdAt),
        title: issue.title,
        closed: issue.closed,
        closedDate: issue.closedAt == null ? void 0 : new Date(issue.closedAt)
      };
    } catch (ex) {
      _logger__WEBPACK_IMPORTED_MODULE_1__.Logger.error(ex, cc);
      if (ex.code >= 400 && ex.code <= 500) {
        if (ex.code === 401)
          throw new _git_git__WEBPACK_IMPORTED_MODULE_0__.AuthenticationError(ex);
        throw new _git_git__WEBPACK_IMPORTED_MODULE_0__.ClientError(ex);
      }
      throw ex;
    }
  }
  async getPullRequestForBranch(provider, token, owner, repo, branch, options) {
    var _a, _b, _c, _d;
    const cc = _logger__WEBPACK_IMPORTED_MODULE_1__.Logger.getCorrelationContext();
    try {
      const query = `query getPullRequestForBranch(
	$owner: String!
	$repo: String!
	$branch: String!
	$limit: Int!
	$include: [PullRequestState!]
	$avatarSize: Int
) {
	repository(name: $repo, owner: $owner) {
		refs(query: $branch, refPrefix: "refs/heads/", first: 1) {
			nodes {
				associatedPullRequests(first: $limit, orderBy: {field: UPDATED_AT, direction: DESC}, states: $include) {
					nodes {
						author {
							login
							avatarUrl(size: $avatarSize)
							url
						}
						permalink
						number
						title
						state
						updatedAt
						closedAt
						mergedAt
						repository {
							isFork
							owner {
								login
							}
						}
					}
				}
			}
		}
	}
}`;
      const rsp = await (0,_octokit_graphql__WEBPACK_IMPORTED_MODULE_3__.graphql)(query, {
        ...options,
        headers: { authorization: `Bearer ${token}` },
        owner,
        repo,
        branch,
        limit: 10
      });
      const prs = (_d = (_c = (_b = (_a = rsp == null ? void 0 : rsp.repository) == null ? void 0 : _a.refs.nodes[0]) == null ? void 0 : _b.associatedPullRequests) == null ? void 0 : _c.nodes) == null ? void 0 : _d.filter((pr) => !pr.repository.isFork || pr.repository.owner.login === owner);
      if (prs == null || prs.length === 0)
        return void 0;
      if (prs.length > 1) {
        prs.sort((a, b) => (a.repository.owner.login === owner ? -1 : 1) - (b.repository.owner.login === owner ? -1 : 1) || (a.state === "OPEN" ? -1 : 1) - (b.state === "OPEN" ? -1 : 1) || new Date(b.updatedAt).getTime() - new Date(a.updatedAt).getTime());
      }
      return GitHubPullRequest.from(prs[0], provider);
    } catch (ex) {
      _logger__WEBPACK_IMPORTED_MODULE_1__.Logger.error(ex, cc);
      if (ex.code >= 400 && ex.code <= 500) {
        if (ex.code === 401)
          throw new _git_git__WEBPACK_IMPORTED_MODULE_0__.AuthenticationError(ex);
        throw new _git_git__WEBPACK_IMPORTED_MODULE_0__.ClientError(ex);
      }
      throw ex;
    }
  }
  async getPullRequestForCommit(provider, token, owner, repo, ref, options) {
    var _a, _b, _c, _d;
    const cc = _logger__WEBPACK_IMPORTED_MODULE_1__.Logger.getCorrelationContext();
    try {
      const query = `query getPullRequestForCommit(
	$owner: String!
	$repo: String!
	$ref: GitObjectID!
	$avatarSize: Int
) {
	repository(name: $repo, owner: $owner) {
		object(oid: $ref) {
			... on Commit {
				associatedPullRequests(first: 2, orderBy: {field: UPDATED_AT, direction: DESC}) {
					nodes {
						author {
							login
							avatarUrl(size: $avatarSize)
							url
						}
						permalink
						number
						title
						state
						updatedAt
						closedAt
						mergedAt
						repository {
							isFork
							owner {
								login
							}
						}
					}
				}
			}
		}
	}
}`;
      const rsp = await (0,_octokit_graphql__WEBPACK_IMPORTED_MODULE_3__.graphql)(query, {
        ...options,
        headers: { authorization: `Bearer ${token}` },
        owner,
        repo,
        ref
      });
      const prs = (_d = (_c = (_b = (_a = rsp == null ? void 0 : rsp.repository) == null ? void 0 : _a.object) == null ? void 0 : _b.associatedPullRequests) == null ? void 0 : _c.nodes) == null ? void 0 : _d.filter((pr) => !pr.repository.isFork || pr.repository.owner.login === owner);
      if (prs == null || prs.length === 0)
        return void 0;
      if (prs.length > 1) {
        prs.sort((a, b) => (a.repository.owner.login === owner ? -1 : 1) - (b.repository.owner.login === owner ? -1 : 1) || (a.state === "OPEN" ? -1 : 1) - (b.state === "OPEN" ? -1 : 1) || new Date(b.updatedAt).getTime() - new Date(a.updatedAt).getTime());
      }
      return GitHubPullRequest.from(prs[0], provider);
    } catch (ex) {
      _logger__WEBPACK_IMPORTED_MODULE_1__.Logger.error(ex, cc);
      if (ex.code >= 400 && ex.code <= 500) {
        if (ex.code === 401)
          throw new _git_git__WEBPACK_IMPORTED_MODULE_0__.AuthenticationError(ex);
        throw new _git_git__WEBPACK_IMPORTED_MODULE_0__.ClientError(ex);
      }
      throw ex;
    }
  }
}
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_2__.debug)({
    args: {
      0: (p) => p.name,
      1: (_) => "<token>"
    }
  })
], GitHubApi.prototype, "getAccountForCommit", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_2__.debug)({
    args: {
      0: (p) => p.name,
      1: (_) => "<token>"
    }
  })
], GitHubApi.prototype, "getAccountForEmail", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_2__.debug)({
    args: {
      0: (p) => p.name,
      1: (_) => "<token>"
    }
  })
], GitHubApi.prototype, "getDefaultBranch", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_2__.debug)({
    args: {
      0: (p) => p.name,
      1: (_) => "<token>"
    }
  })
], GitHubApi.prototype, "getIssueOrPullRequest", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_2__.debug)({
    args: {
      0: (p) => p.name,
      1: (_) => "<token>"
    }
  })
], GitHubApi.prototype, "getPullRequestForBranch", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_2__.debug)({
    args: {
      0: (p) => p.name,
      1: (_) => "<token>"
    }
  })
], GitHubApi.prototype, "getPullRequestForCommit", 1);
var GitHubPullRequest;
(function(GitHubPullRequest2) {
  function from(pr, provider) {
    return new _git_git__WEBPACK_IMPORTED_MODULE_0__.PullRequest(provider, {
      name: pr.author.login,
      avatarUrl: pr.author.avatarUrl,
      url: pr.author.url
    }, String(pr.number), pr.title, pr.permalink, fromState(pr.state), new Date(pr.updatedAt), pr.closedAt == null ? void 0 : new Date(pr.closedAt), pr.mergedAt == null ? void 0 : new Date(pr.mergedAt));
  }
  GitHubPullRequest2.from = from;
  function fromState(state) {
    return state === "MERGED" ? _git_git__WEBPACK_IMPORTED_MODULE_0__.PullRequestState.Merged : state === "CLOSED" ? _git_git__WEBPACK_IMPORTED_MODULE_0__.PullRequestState.Closed : _git_git__WEBPACK_IMPORTED_MODULE_0__.PullRequestState.Open;
  }
  GitHubPullRequest2.fromState = fromState;
  function toState(state) {
    return state === _git_git__WEBPACK_IMPORTED_MODULE_0__.PullRequestState.Merged ? "MERGED" : state === _git_git__WEBPACK_IMPORTED_MODULE_0__.PullRequestState.Closed ? "CLOSED" : "OPEN";
  }
  GitHubPullRequest2.toState = toState;
})(GitHubPullRequest || (GitHubPullRequest = {}));


/***/ }),

/***/ "./src/hovers/hovers.ts":
/*!******************************!*\
  !*** ./src/hovers/hovers.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Hovers": () => (/* binding */ Hovers)
/* harmony export */ });
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _commands__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../commands */ "./src/commands.ts");
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../constants */ "./src/constants.ts");
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../container */ "./src/container.ts");
/* harmony import */ var _git_git__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../git/git */ "./src/git/git.ts");
/* harmony import */ var _git_gitUri__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../git/gitUri */ "./src/git/gitUri.ts");
/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../logger */ "./src/logger.ts");
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../system */ "./src/system.ts");









var Hovers;
(function(Hovers2) {
  async function changesMessage(commit, uri, editorLine) {
    var _a, _b, _c;
    const documentRef = uri.sha;
    let hunkLine;
    if (_git_git__WEBPACK_IMPORTED_MODULE_4__.GitBlameCommit.is(commit)) {
      let ref;
      if (commit.isUncommitted) {
        if (_git_git__WEBPACK_IMPORTED_MODULE_4__.GitRevision.isUncommittedStaged(documentRef)) {
          ref = documentRef;
        }
      } else {
        ref = commit.previousSha;
      }
      const line = editorLine + 1;
      const commitLine = (_a = commit.lines.find((l) => l.line === line)) != null ? _a : commit.lines[0];
      let originalFileName = commit.originalFileName;
      if (originalFileName == null) {
        if (uri.fsPath !== commit.uri.fsPath) {
          originalFileName = commit.fileName;
        }
      }
      editorLine = commitLine.line - 1;
      hunkLine = await _container__WEBPACK_IMPORTED_MODULE_3__.Container.git.getDiffForLine(uri, editorLine, ref, documentRef, originalFileName);
      if (hunkLine == null && ref == null) {
        hunkLine = await _container__WEBPACK_IMPORTED_MODULE_3__.Container.git.getDiffForLine(uri, editorLine, void 0, _git_git__WEBPACK_IMPORTED_MODULE_4__.GitRevision.uncommittedStaged, originalFileName);
      }
    }
    if (hunkLine == null || commit.previousSha == null)
      return void 0;
    const diff = getDiffFromHunkLine(hunkLine);
    let message;
    let previous;
    let current;
    if (commit.isUncommitted) {
      const diffUris = await commit.getPreviousLineDiffUris(uri, editorLine, documentRef);
      if (diffUris == null || diffUris.previous == null) {
        return void 0;
      }
      message = `[$(compare-changes)](${_commands__WEBPACK_IMPORTED_MODULE_1__.DiffWithCommand.getMarkdownCommandArgs({
        lhs: {
          sha: (_b = diffUris.previous.sha) != null ? _b : "",
          uri: diffUris.previous.documentUri()
        },
        rhs: {
          sha: (_c = diffUris.current.sha) != null ? _c : "",
          uri: diffUris.current.documentUri()
        },
        repoPath: commit.repoPath,
        line: editorLine
      })} "Open Changes")`;
      previous = diffUris.previous.sha == null || diffUris.previous.isUncommitted ? `_${_git_git__WEBPACK_IMPORTED_MODULE_4__.GitRevision.shorten(diffUris.previous.sha, {
        strings: {
          working: "Working Tree"
        }
      })}_` : `[$(git-commit) ${_git_git__WEBPACK_IMPORTED_MODULE_4__.GitRevision.shorten(diffUris.previous.sha || "")}](${_commands__WEBPACK_IMPORTED_MODULE_1__.ShowQuickCommitCommand.getMarkdownCommandArgs(diffUris.previous.sha || "")} "Show Commit")`;
      current = diffUris.current.sha == null || diffUris.current.isUncommitted ? `_${_git_git__WEBPACK_IMPORTED_MODULE_4__.GitRevision.shorten(diffUris.current.sha, {
        strings: {
          working: "Working Tree"
        }
      })}_` : `[$(git-commit) ${_git_git__WEBPACK_IMPORTED_MODULE_4__.GitRevision.shorten(diffUris.current.sha || "")}](${_commands__WEBPACK_IMPORTED_MODULE_1__.ShowQuickCommitCommand.getMarkdownCommandArgs(diffUris.current.sha || "")} "Show Commit")`;
    } else {
      message = `[$(compare-changes)](${_commands__WEBPACK_IMPORTED_MODULE_1__.DiffWithCommand.getMarkdownCommandArgs(commit, editorLine)} "Open Changes")`;
      previous = `[$(git-commit) ${commit.previousShortSha}](${_commands__WEBPACK_IMPORTED_MODULE_1__.ShowQuickCommitCommand.getMarkdownCommandArgs(commit.previousSha)} "Show Commit")`;
      current = `[$(git-commit) ${commit.shortSha}](${_commands__WEBPACK_IMPORTED_MODULE_1__.ShowQuickCommitCommand.getMarkdownCommandArgs(commit.sha)} "Show Commit")`;
    }
    message = `${diff}
---

Changes  &nbsp;${previous} &nbsp;${_constants__WEBPACK_IMPORTED_MODULE_2__.GlyphChars.ArrowLeftRightLong}&nbsp; ${current} &nbsp;&nbsp;|&nbsp;&nbsp; ${message}`;
    const markdown = new vscode__WEBPACK_IMPORTED_MODULE_0__.MarkdownString(message, true);
    markdown.isTrusted = true;
    return markdown;
  }
  Hovers2.changesMessage = changesMessage;
  function localChangesMessage(fromCommit, uri, editorLine, hunk) {
    const diff = getDiffFromHunk(hunk);
    let message;
    let previous;
    let current;
    if (fromCommit == null) {
      previous = "_Working Tree_";
      current = "_Unsaved_";
    } else {
      const file = fromCommit.findFile(uri.fsPath);
      message = `[$(compare-changes)](${_commands__WEBPACK_IMPORTED_MODULE_1__.DiffWithCommand.getMarkdownCommandArgs({
        lhs: {
          sha: fromCommit.sha,
          uri: _git_gitUri__WEBPACK_IMPORTED_MODULE_5__.GitUri.fromFile(file, uri.repoPath, void 0, true).toFileUri()
        },
        rhs: {
          sha: "",
          uri: uri.toFileUri()
        },
        repoPath: uri.repoPath,
        line: editorLine
      })} "Open Changes")`;
      previous = `[$(git-commit) ${fromCommit.shortSha}](${_commands__WEBPACK_IMPORTED_MODULE_1__.ShowQuickCommitCommand.getMarkdownCommandArgs(fromCommit.sha)} "Show Commit")`;
      current = "_Working Tree_";
    }
    message = `${diff}
---

Local Changes  &nbsp;${previous} &nbsp;${_constants__WEBPACK_IMPORTED_MODULE_2__.GlyphChars.ArrowLeftRightLong}&nbsp; ${current}${message == null ? "" : ` &nbsp;&nbsp;|&nbsp;&nbsp; ${message}`}`;
    const markdown = new vscode__WEBPACK_IMPORTED_MODULE_0__.MarkdownString(message, true);
    markdown.isTrusted = true;
    return markdown;
  }
  Hovers2.localChangesMessage = localChangesMessage;
  async function detailsMessage(commit, uri, editorLine, dateFormat) {
    if (dateFormat === null) {
      dateFormat = "MMMM Do, YYYY h:mma";
    }
    const remotes = await _container__WEBPACK_IMPORTED_MODULE_3__.Container.git.getRemotes(commit.repoPath, { sort: true });
    const [previousLineDiffUris, autolinkedIssuesOrPullRequests, pr, presence] = await Promise.all([
      commit.isUncommitted ? commit.getPreviousLineDiffUris(uri, editorLine, uri.sha) : void 0,
      getAutoLinkedIssuesOrPullRequests(commit.message, remotes),
      getPullRequestForCommit(commit.ref, remotes),
      _container__WEBPACK_IMPORTED_MODULE_3__.Container.vsls.maybeGetPresence(commit.email)
    ]);
    const details = await _git_git__WEBPACK_IMPORTED_MODULE_4__.CommitFormatter.fromTemplateAsync(_container__WEBPACK_IMPORTED_MODULE_3__.Container.config.hovers.detailsMarkdownFormat, commit, {
      autolinkedIssuesOrPullRequests,
      dateFormat,
      editor: {
        line: editorLine,
        uri
      },
      markdown: true,
      messageAutolinks: _container__WEBPACK_IMPORTED_MODULE_3__.Container.config.hovers.autolinks.enabled,
      pullRequestOrRemote: pr,
      presence,
      previousLineDiffUris,
      remotes
    });
    const markdown = new vscode__WEBPACK_IMPORTED_MODULE_0__.MarkdownString(details, true);
    markdown.isTrusted = true;
    return markdown;
  }
  Hovers2.detailsMessage = detailsMessage;
  function getDiffFromHunk(hunk) {
    return `\`\`\`diff
${hunk.diff.trim()}
\`\`\``;
  }
  function getDiffFromHunkLine(hunkLine, diffStyle) {
    if (diffStyle === "hunk" || diffStyle == null && _container__WEBPACK_IMPORTED_MODULE_3__.Container.config.hovers.changesDiff === "hunk") {
      return getDiffFromHunk(hunkLine.hunk);
    }
    return `\`\`\`diff${hunkLine.previous == null ? "" : `
- ${hunkLine.previous.line.trim()}`}${hunkLine.current == null ? "" : `
+ ${hunkLine.current.line.trim()}`}
\`\`\``;
  }
  async function getAutoLinkedIssuesOrPullRequests(message, remotes) {
    const cc = _logger__WEBPACK_IMPORTED_MODULE_6__.Logger.getNewCorrelationContext("Hovers.getAutoLinkedIssues");
    _logger__WEBPACK_IMPORTED_MODULE_6__.Logger.debug(cc, `${_constants__WEBPACK_IMPORTED_MODULE_2__.GlyphChars.Dash} message=<message>`);
    const start = process.hrtime();
    if (!_container__WEBPACK_IMPORTED_MODULE_3__.Container.config.hovers.autolinks.enabled || !_container__WEBPACK_IMPORTED_MODULE_3__.Container.config.hovers.autolinks.enhanced || !_git_git__WEBPACK_IMPORTED_MODULE_4__.CommitFormatter.has(_container__WEBPACK_IMPORTED_MODULE_3__.Container.config.hovers.detailsMarkdownFormat, "message")) {
      _logger__WEBPACK_IMPORTED_MODULE_6__.Logger.debug(cc, `completed ${_constants__WEBPACK_IMPORTED_MODULE_2__.GlyphChars.Dot} ${_system__WEBPACK_IMPORTED_MODULE_7__.Strings.getDurationMilliseconds(start)} ms`);
      return void 0;
    }
    const remote = await _container__WEBPACK_IMPORTED_MODULE_3__.Container.git.getRichRemoteProvider(remotes);
    if ((remote == null ? void 0 : remote.provider) == null) {
      _logger__WEBPACK_IMPORTED_MODULE_6__.Logger.debug(cc, `completed ${_constants__WEBPACK_IMPORTED_MODULE_2__.GlyphChars.Dot} ${_system__WEBPACK_IMPORTED_MODULE_7__.Strings.getDurationMilliseconds(start)} ms`);
      return void 0;
    }
    const timeout = 250;
    try {
      const autolinks = await _container__WEBPACK_IMPORTED_MODULE_3__.Container.autolinks.getIssueOrPullRequestLinks(message, remote, {
        timeout
      });
      if (autolinks != null && _logger__WEBPACK_IMPORTED_MODULE_6__.Logger.willLog("debug")) {
        const count = _system__WEBPACK_IMPORTED_MODULE_7__.Iterables.count(autolinks.values(), (pr) => pr instanceof _system__WEBPACK_IMPORTED_MODULE_7__.Promises.CancellationError);
        if (count !== 0) {
          _logger__WEBPACK_IMPORTED_MODULE_6__.Logger.debug(cc, `timed out ${_constants__WEBPACK_IMPORTED_MODULE_2__.GlyphChars.Dash} ${count} issue/pull request queries took too long (over ${timeout} ms) ${_constants__WEBPACK_IMPORTED_MODULE_2__.GlyphChars.Dot} ${_system__WEBPACK_IMPORTED_MODULE_7__.Strings.getDurationMilliseconds(start)} ms`);
          return autolinks;
        }
      }
      _logger__WEBPACK_IMPORTED_MODULE_6__.Logger.debug(cc, `completed ${_constants__WEBPACK_IMPORTED_MODULE_2__.GlyphChars.Dot} ${_system__WEBPACK_IMPORTED_MODULE_7__.Strings.getDurationMilliseconds(start)} ms`);
      return autolinks;
    } catch (ex) {
      _logger__WEBPACK_IMPORTED_MODULE_6__.Logger.error(ex, cc, `failed ${_constants__WEBPACK_IMPORTED_MODULE_2__.GlyphChars.Dot} ${_system__WEBPACK_IMPORTED_MODULE_7__.Strings.getDurationMilliseconds(start)} ms`);
      return void 0;
    }
  }
  async function getPullRequestForCommit(ref, remotes) {
    var _a;
    const cc = _logger__WEBPACK_IMPORTED_MODULE_6__.Logger.getNewCorrelationContext("Hovers.getPullRequestForCommit");
    _logger__WEBPACK_IMPORTED_MODULE_6__.Logger.debug(cc, `${_constants__WEBPACK_IMPORTED_MODULE_2__.GlyphChars.Dash} ref=${ref}`);
    const start = process.hrtime();
    if (!_container__WEBPACK_IMPORTED_MODULE_3__.Container.config.hovers.pullRequests.enabled || !_git_git__WEBPACK_IMPORTED_MODULE_4__.CommitFormatter.has(_container__WEBPACK_IMPORTED_MODULE_3__.Container.config.hovers.detailsMarkdownFormat, "pullRequest", "pullRequestAgo", "pullRequestAgoOrDate", "pullRequestDate", "pullRequestState")) {
      _logger__WEBPACK_IMPORTED_MODULE_6__.Logger.debug(cc, `completed ${_constants__WEBPACK_IMPORTED_MODULE_2__.GlyphChars.Dot} ${_system__WEBPACK_IMPORTED_MODULE_7__.Strings.getDurationMilliseconds(start)} ms`);
      return void 0;
    }
    const remote = await _container__WEBPACK_IMPORTED_MODULE_3__.Container.git.getRichRemoteProvider(remotes, { includeDisconnected: true });
    if ((remote == null ? void 0 : remote.provider) == null) {
      _logger__WEBPACK_IMPORTED_MODULE_6__.Logger.debug(cc, `completed ${_constants__WEBPACK_IMPORTED_MODULE_2__.GlyphChars.Dot} ${_system__WEBPACK_IMPORTED_MODULE_7__.Strings.getDurationMilliseconds(start)} ms`);
      return void 0;
    }
    const { provider } = remote;
    const connected = (_a = provider.maybeConnected) != null ? _a : await provider.isConnected();
    if (!connected) {
      _logger__WEBPACK_IMPORTED_MODULE_6__.Logger.debug(cc, `completed ${_constants__WEBPACK_IMPORTED_MODULE_2__.GlyphChars.Dot} ${_system__WEBPACK_IMPORTED_MODULE_7__.Strings.getDurationMilliseconds(start)} ms`);
      return remote;
    }
    try {
      const pr = await _container__WEBPACK_IMPORTED_MODULE_3__.Container.git.getPullRequestForCommit(ref, provider, { timeout: 250 });
      _logger__WEBPACK_IMPORTED_MODULE_6__.Logger.debug(cc, `completed ${_constants__WEBPACK_IMPORTED_MODULE_2__.GlyphChars.Dot} ${_system__WEBPACK_IMPORTED_MODULE_7__.Strings.getDurationMilliseconds(start)} ms`);
      return pr;
    } catch (ex) {
      if (ex instanceof _system__WEBPACK_IMPORTED_MODULE_7__.Promises.CancellationError) {
        _logger__WEBPACK_IMPORTED_MODULE_6__.Logger.debug(cc, `timed out ${_constants__WEBPACK_IMPORTED_MODULE_2__.GlyphChars.Dot} ${_system__WEBPACK_IMPORTED_MODULE_7__.Strings.getDurationMilliseconds(start)} ms`);
        return ex;
      }
      _logger__WEBPACK_IMPORTED_MODULE_6__.Logger.error(ex, cc, `failed ${_constants__WEBPACK_IMPORTED_MODULE_2__.GlyphChars.Dot} ${_system__WEBPACK_IMPORTED_MODULE_7__.Strings.getDurationMilliseconds(start)} ms`);
      return void 0;
    }
  }
})(Hovers || (Hovers = {}));


/***/ }),

/***/ "./src/hovers/lineHoverController.ts":
/*!*******************************************!*\
  !*** ./src/hovers/lineHoverController.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "LineHoverController": () => (/* binding */ LineHoverController)
/* harmony export */ });
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _comparers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../comparers */ "./src/comparers.ts");
/* harmony import */ var _configuration__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../configuration */ "./src/configuration.ts");
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../container */ "./src/container.ts");
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../system */ "./src/system.ts");
/* harmony import */ var _hovers__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./hovers */ "./src/hovers/hovers.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};






class LineHoverController {
  constructor() {
    __publicField(this, "_disposable");
    __publicField(this, "_hoverProviderDisposable");
    __publicField(this, "_uri");
    this._disposable = vscode__WEBPACK_IMPORTED_MODULE_0__.Disposable.from(_configuration__WEBPACK_IMPORTED_MODULE_2__.configuration.onDidChange(this.onConfigurationChanged, this));
    this.onConfigurationChanged();
  }
  dispose() {
    this.unregister();
    _container__WEBPACK_IMPORTED_MODULE_3__.Container.lineTracker.stop(this);
    this._disposable.dispose();
  }
  onConfigurationChanged(e) {
    if (!_configuration__WEBPACK_IMPORTED_MODULE_2__.configuration.changed(e, "hovers.enabled") && !_configuration__WEBPACK_IMPORTED_MODULE_2__.configuration.changed(e, "hovers.currentLine.enabled")) {
      return;
    }
    if (_container__WEBPACK_IMPORTED_MODULE_3__.Container.config.hovers.enabled && _container__WEBPACK_IMPORTED_MODULE_3__.Container.config.hovers.currentLine.enabled) {
      _container__WEBPACK_IMPORTED_MODULE_3__.Container.lineTracker.start(this, _container__WEBPACK_IMPORTED_MODULE_3__.Container.lineTracker.onDidChangeActiveLines(this.onActiveLinesChanged, this));
      this.register(vscode__WEBPACK_IMPORTED_MODULE_0__.window.activeTextEditor);
    } else {
      _container__WEBPACK_IMPORTED_MODULE_3__.Container.lineTracker.stop(this);
      this.unregister();
    }
  }
  onActiveLinesChanged(e) {
    var _a;
    if (e.pending)
      return;
    if (e.editor == null || e.selections == null) {
      this.unregister();
      return;
    }
    if (this.isRegistered((_a = e.editor) == null ? void 0 : _a.document.uri))
      return;
    this.register(e.editor);
  }
  async provideDetailsHover(document, position, _token) {
    var _a;
    if (!_container__WEBPACK_IMPORTED_MODULE_3__.Container.lineTracker.includes(position.line))
      return void 0;
    const lineState = _container__WEBPACK_IMPORTED_MODULE_3__.Container.lineTracker.getState(position.line);
    const commit = lineState == null ? void 0 : lineState.commit;
    if (commit == null)
      return void 0;
    if (_container__WEBPACK_IMPORTED_MODULE_3__.Container.config.hovers.annotations.details) {
      const fileAnnotations = await _container__WEBPACK_IMPORTED_MODULE_3__.Container.fileAnnotations.getAnnotationType(vscode__WEBPACK_IMPORTED_MODULE_0__.window.activeTextEditor);
      if (fileAnnotations === _configuration__WEBPACK_IMPORTED_MODULE_2__.FileAnnotationType.Blame)
        return void 0;
    }
    const wholeLine = _container__WEBPACK_IMPORTED_MODULE_3__.Container.config.hovers.currentLine.over === "line";
    if (!wholeLine && _container__WEBPACK_IMPORTED_MODULE_3__.Container.lineAnnotations.suspended)
      return void 0;
    const range = document.validateRange(new vscode__WEBPACK_IMPORTED_MODULE_0__.Range(position.line, wholeLine ? 0 : Number.MAX_SAFE_INTEGER, position.line, Number.MAX_SAFE_INTEGER));
    if (!wholeLine && range.start.character !== position.character)
      return void 0;
    let logCommit = lineState == null ? void 0 : lineState.logCommit;
    if (logCommit == null && !commit.isUncommitted) {
      logCommit = await _container__WEBPACK_IMPORTED_MODULE_3__.Container.git.getCommitForFile(commit.repoPath, commit.uri.fsPath, {
        ref: commit.sha
      });
      if (logCommit != null) {
        logCommit.previousSha = commit.previousSha;
        logCommit.previousFileName = commit.previousFileName;
        if (lineState != null) {
          lineState.logCommit = logCommit;
        }
      }
    }
    let editorLine = position.line;
    const line = editorLine + 1;
    const commitLine = (_a = commit.lines.find((l) => l.line === line)) != null ? _a : commit.lines[0];
    editorLine = commitLine.originalLine - 1;
    const trackedDocument = await _container__WEBPACK_IMPORTED_MODULE_3__.Container.tracker.get(document);
    if (trackedDocument == null)
      return void 0;
    const message = await _hovers__WEBPACK_IMPORTED_MODULE_5__.Hovers.detailsMessage(logCommit != null ? logCommit : commit, trackedDocument.uri, editorLine, _container__WEBPACK_IMPORTED_MODULE_3__.Container.config.defaultDateFormat);
    return new vscode__WEBPACK_IMPORTED_MODULE_0__.Hover(message, range);
  }
  async provideChangesHover(document, position, _token) {
    if (!_container__WEBPACK_IMPORTED_MODULE_3__.Container.lineTracker.includes(position.line))
      return void 0;
    const lineState = _container__WEBPACK_IMPORTED_MODULE_3__.Container.lineTracker.getState(position.line);
    const commit = lineState == null ? void 0 : lineState.commit;
    if (commit == null)
      return void 0;
    if (_container__WEBPACK_IMPORTED_MODULE_3__.Container.config.hovers.annotations.changes) {
      const fileAnnotations = await _container__WEBPACK_IMPORTED_MODULE_3__.Container.fileAnnotations.getAnnotationType(vscode__WEBPACK_IMPORTED_MODULE_0__.window.activeTextEditor);
      if (fileAnnotations === _configuration__WEBPACK_IMPORTED_MODULE_2__.FileAnnotationType.Blame)
        return void 0;
    }
    const wholeLine = _container__WEBPACK_IMPORTED_MODULE_3__.Container.config.hovers.currentLine.over === "line";
    if (!wholeLine && _container__WEBPACK_IMPORTED_MODULE_3__.Container.lineAnnotations.suspended)
      return void 0;
    const range = document.validateRange(new vscode__WEBPACK_IMPORTED_MODULE_0__.Range(position.line, wholeLine ? 0 : Number.MAX_SAFE_INTEGER, position.line, Number.MAX_SAFE_INTEGER));
    if (!wholeLine && range.start.character !== position.character)
      return void 0;
    const trackedDocument = await _container__WEBPACK_IMPORTED_MODULE_3__.Container.tracker.get(document);
    if (trackedDocument == null)
      return void 0;
    const message = await _hovers__WEBPACK_IMPORTED_MODULE_5__.Hovers.changesMessage(commit, trackedDocument.uri, position.line);
    if (message == null)
      return void 0;
    return new vscode__WEBPACK_IMPORTED_MODULE_0__.Hover(message, range);
  }
  isRegistered(uri) {
    return this._hoverProviderDisposable != null && _comparers__WEBPACK_IMPORTED_MODULE_1__.UriComparer.equals(this._uri, uri);
  }
  register(editor) {
    this.unregister();
    if (editor == null)
      return;
    const cfg = _container__WEBPACK_IMPORTED_MODULE_3__.Container.config.hovers;
    if (!cfg.enabled || !cfg.currentLine.enabled || !cfg.currentLine.details && !cfg.currentLine.changes)
      return;
    this._uri = editor.document.uri;
    const subscriptions = [];
    if (cfg.currentLine.changes) {
      subscriptions.push(vscode__WEBPACK_IMPORTED_MODULE_0__.languages.registerHoverProvider({ pattern: this._uri.fsPath }, {
        provideHover: this.provideChangesHover.bind(this)
      }));
    }
    if (cfg.currentLine.details) {
      subscriptions.push(vscode__WEBPACK_IMPORTED_MODULE_0__.languages.registerHoverProvider({ pattern: this._uri.fsPath }, {
        provideHover: this.provideDetailsHover.bind(this)
      }));
    }
    this._hoverProviderDisposable = vscode__WEBPACK_IMPORTED_MODULE_0__.Disposable.from(...subscriptions);
  }
  unregister() {
    this._uri = void 0;
    if (this._hoverProviderDisposable != null) {
      this._hoverProviderDisposable.dispose();
      this._hoverProviderDisposable = void 0;
    }
  }
}
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_4__.debug)({
    args: {
      0: (e) => {
        var _a, _b;
        return `editor=${(_a = e.editor) == null ? void 0 : _a.document.uri.toString(true)}, selections=${(_b = e.selections) == null ? void 0 : _b.map((s) => `[${s.anchor}-${s.active}]`).join(",")}, pending=${Boolean(e.pending)}, reason=${e.reason}`;
      }
    }
  })
], LineHoverController.prototype, "onActiveLinesChanged", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_4__.debug)({
    args: {
      0: (document) => document.uri.toString(true),
      1: (position) => `${position.line}:${position.character}`,
      2: () => false
    }
  })
], LineHoverController.prototype, "provideDetailsHover", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_4__.debug)({
    args: {
      0: (document) => document.uri.toString(true),
      1: (position) => `${position.line}:${position.character}`,
      2: () => false
    }
  })
], LineHoverController.prototype, "provideChangesHover", 1);


/***/ }),

/***/ "./src/keyboard.ts":
/*!*************************!*\
  !*** ./src/keyboard.ts ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "KeyNoopCommand": () => (/* binding */ keyNoopCommand),
/* harmony export */   "keys": () => (/* binding */ keys),
/* harmony export */   "KeyboardScope": () => (/* binding */ KeyboardScope),
/* harmony export */   "Keyboard": () => (/* binding */ Keyboard)
/* harmony export */ });
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constants */ "./src/constants.ts");
/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./logger */ "./src/logger.ts");
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./system */ "./src/system.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};




const keyNoopCommand = Object.create(null);

const keys = [
  "left",
  "alt+left",
  "ctrl+left",
  "right",
  "alt+right",
  "ctrl+right",
  "alt+,",
  "alt+.",
  "escape"
];
const mappings = [];
class KeyboardScope {
  constructor(mapping) {
    __publicField(this, "_mapping");
    __publicField(this, "_paused", true);
    var _a;
    this._mapping = mapping;
    for (const key in this._mapping) {
      this._mapping[key] = (_a = this._mapping[key]) != null ? _a : keyNoopCommand;
    }
    mappings.push(this._mapping);
  }
  async dispose() {
    const index = mappings.indexOf(this._mapping);
    const cc = _logger__WEBPACK_IMPORTED_MODULE_2__.Logger.getCorrelationContext();
    if (cc != null) {
      cc.exitDetails = ` \u2022 index=${index}`;
    }
    if (index === mappings.length - 1) {
      mappings.pop();
      await this.updateKeyCommandsContext(mappings[mappings.length - 1]);
    } else {
      mappings.splice(index, 1);
    }
  }
  get paused() {
    return this._paused;
  }
  async clearKeyCommand(key) {
    const cc = _logger__WEBPACK_IMPORTED_MODULE_2__.Logger.getCorrelationContext();
    const mapping = mappings[mappings.length - 1];
    if (mapping !== this._mapping || mapping[key] == null) {
      if (cc != null) {
        cc.exitDetails = " \u2022 skipped";
      }
      return;
    }
    mapping[key] = void 0;
    await (0,_constants__WEBPACK_IMPORTED_MODULE_1__.setContext)(`${_constants__WEBPACK_IMPORTED_MODULE_1__.ContextKeys.Key}:${key}`, false);
  }
  async pause(keys2) {
    if (this._paused)
      return;
    this._paused = true;
    const mapping = Object.keys(this._mapping).reduce((accumulator, key) => {
      accumulator[key] = keys2 == null || keys2.includes(key) ? void 0 : this._mapping[key];
      return accumulator;
    }, Object.create(null));
    await this.updateKeyCommandsContext(mapping);
  }
  async resume() {
    if (!this._paused)
      return;
    this._paused = false;
    await this.updateKeyCommandsContext(this._mapping);
  }
  async start() {
    await this.resume();
  }
  async setKeyCommand(key, command) {
    const cc = _logger__WEBPACK_IMPORTED_MODULE_2__.Logger.getCorrelationContext();
    const mapping = mappings[mappings.length - 1];
    if (mapping !== this._mapping) {
      if (cc != null) {
        cc.exitDetails = " \u2022 skipped";
      }
      return;
    }
    const set = Boolean(mapping[key]);
    mapping[key] = command;
    if (!set) {
      await (0,_constants__WEBPACK_IMPORTED_MODULE_1__.setContext)(`${_constants__WEBPACK_IMPORTED_MODULE_1__.ContextKeys.Key}:${key}`, true);
    }
  }
  async updateKeyCommandsContext(mapping) {
    await Promise.all(keys.map((key) => (0,_constants__WEBPACK_IMPORTED_MODULE_1__.setContext)(`${_constants__WEBPACK_IMPORTED_MODULE_1__.ContextKeys.Key}:${key}`, Boolean(mapping == null ? void 0 : mapping[key]))));
  }
}
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_3__.log)({
    args: false,
    prefix: (context) => `${context.prefix}[${mappings.length}]`
  })
], KeyboardScope.prototype, "dispose", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_3__.log)({
    args: false,
    prefix: (context, key) => `${context.prefix}[${mappings.length}](${key})`
  })
], KeyboardScope.prototype, "clearKeyCommand", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_3__.log)({
    args: false,
    prefix: (context) => `${context.prefix}(paused=${context.instance._paused})`
  })
], KeyboardScope.prototype, "pause", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_3__.log)({
    args: false,
    prefix: (context) => `${context.prefix}(paused=${context.instance._paused})`
  })
], KeyboardScope.prototype, "resume", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_3__.log)({
    args: false,
    prefix: (context, key) => `${context.prefix}[${mappings.length}](${key})`
  })
], KeyboardScope.prototype, "setKeyCommand", 1);
class Keyboard {
  constructor() {
    __publicField(this, "_disposable");
    const subscriptions = keys.map((key) => vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(`gitlens.key.${key}`, () => this.execute(key), this));
    this._disposable = vscode__WEBPACK_IMPORTED_MODULE_0__.Disposable.from(...subscriptions);
  }
  dispose() {
    this._disposable.dispose();
  }
  createScope(mapping) {
    return new KeyboardScope({ ...mapping });
  }
  async beginScope(mapping) {
    const scope = this.createScope(mapping);
    await scope.start();
    return scope;
  }
  async execute(key) {
    const cc = _logger__WEBPACK_IMPORTED_MODULE_2__.Logger.getCorrelationContext();
    if (!mappings.length) {
      if (cc != null) {
        cc.exitDetails = " \u2022 skipped, no mappings";
      }
      return;
    }
    try {
      const mapping = mappings[mappings.length - 1];
      let command = mapping[key];
      if (typeof command === "function") {
        command = await command();
      }
      if (typeof (command == null ? void 0 : command.onDidPressKey) !== "function") {
        if (cc != null) {
          cc.exitDetails = " \u2022 skipped, no callback";
        }
        return;
      }
      void await command.onDidPressKey(key);
    } catch (ex) {
      _logger__WEBPACK_IMPORTED_MODULE_2__.Logger.error(ex, cc);
    }
  }
}
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_3__.log)({
    args: false,
    prefix: (context, mapping) => `${context.prefix}[${mappings.length}](${mapping === void 0 ? "" : Object.keys(mapping).join(",")})`
  })
], Keyboard.prototype, "createScope", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_3__.log)({
    args: false,
    prefix: (context, mapping) => `${context.prefix}[${mappings.length}](${mapping === void 0 ? "" : Object.keys(mapping).join(",")})`
  })
], Keyboard.prototype, "beginScope", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_3__.log)()
], Keyboard.prototype, "execute", 1);


/***/ }),

/***/ "./src/logger.ts":
/*!***********************!*\
  !*** ./src/logger.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TraceLevel": () => (/* reexport safe */ _configuration__WEBPACK_IMPORTED_MODULE_1__.TraceLevel),
/* harmony export */   "Logger": () => (/* binding */ Logger)
/* harmony export */ });
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _configuration__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./configuration */ "./src/configuration.ts");
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./system */ "./src/system.ts");

var __defProp = Object.defineProperty;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};



const emptyStr = "";
const extensionOutputChannelName = "GitLens";
const ConsolePrefix = "[GitLens]";
const extensionGitOutputChannelName = "GitLens (Git)";
const GitConsolePrefix = "[GitLens (Git)]";

const _Logger = class {
  static configure(context, level, loggableFn) {
    this.customLoggableFn = loggableFn;
    this._isDebugging = context.extensionMode === vscode__WEBPACK_IMPORTED_MODULE_0__.ExtensionMode.Development;
    this.level = level;
  }
  static get isDebugging() {
    return this._isDebugging;
  }
  static get level() {
    return this._level;
  }
  static set level(value) {
    var _a;
    this._level = value;
    if (value === _configuration__WEBPACK_IMPORTED_MODULE_1__.TraceLevel.Silent) {
      if (this.output != null) {
        this.output.dispose();
        this.output = void 0;
      }
    } else {
      this.output = (_a = this.output) != null ? _a : vscode__WEBPACK_IMPORTED_MODULE_0__.window.createOutputChannel(extensionOutputChannelName);
    }
  }
  static debug(contextOrMessage, ...params) {
    if (this.level !== _configuration__WEBPACK_IMPORTED_MODULE_1__.TraceLevel.Debug && !_Logger.isDebugging)
      return;
    let message;
    if (typeof contextOrMessage === "string") {
      message = contextOrMessage;
    } else {
      message = params.shift();
      if (contextOrMessage != null) {
        message = `${contextOrMessage.prefix} ${message != null ? message : emptyStr}`;
      }
    }
    if (_Logger.isDebugging) {
      console.log(this.timestamp, ConsolePrefix, message != null ? message : emptyStr, ...params);
    }
    if (this.output != null && this.level === _configuration__WEBPACK_IMPORTED_MODULE_1__.TraceLevel.Debug) {
      this.output.appendLine(`${this.timestamp} ${message != null ? message : emptyStr}${this.toLoggableParams(true, params)}`);
    }
  }
  static error(ex, contextOrMessage, ...params) {
    var _a;
    if (this.level === _configuration__WEBPACK_IMPORTED_MODULE_1__.TraceLevel.Silent && !_Logger.isDebugging)
      return;
    let message;
    if (contextOrMessage == null || typeof contextOrMessage === "string") {
      message = contextOrMessage;
    } else {
      message = `${contextOrMessage.prefix} ${(_a = params.shift()) != null ? _a : emptyStr}`;
    }
    if (message == null) {
      const stack = ex.stack;
      if (stack) {
        const match = /.*\s*?at\s(.+?)\s/.exec(stack);
        if (match != null) {
          message = match[1];
        }
      }
    }
    if (_Logger.isDebugging) {
      console.error(this.timestamp, ConsolePrefix, message != null ? message : emptyStr, ...params, ex);
    }
    if (this.output != null && this.level !== _configuration__WEBPACK_IMPORTED_MODULE_1__.TraceLevel.Silent) {
      this.output.appendLine(`${this.timestamp} ${message != null ? message : emptyStr}${this.toLoggableParams(false, params)}
${ex == null ? void 0 : ex.toString()}`);
    }
  }
  static getCorrelationContext() {
    return (0,_system__WEBPACK_IMPORTED_MODULE_2__.getCorrelationContext)();
  }
  static getNewCorrelationContext(prefix) {
    const correlationId = (0,_system__WEBPACK_IMPORTED_MODULE_2__.getNextCorrelationId)();
    return {
      correlationId,
      prefix: `[${correlationId}] ${prefix}`
    };
  }
  static log(contextOrMessage, ...params) {
    if (this.level !== _configuration__WEBPACK_IMPORTED_MODULE_1__.TraceLevel.Verbose && this.level !== _configuration__WEBPACK_IMPORTED_MODULE_1__.TraceLevel.Debug && !_Logger.isDebugging) {
      return;
    }
    let message;
    if (typeof contextOrMessage === "string") {
      message = contextOrMessage;
    } else {
      message = params.shift();
      if (contextOrMessage != null) {
        message = `${contextOrMessage.prefix} ${message != null ? message : emptyStr}`;
      }
    }
    if (_Logger.isDebugging) {
      console.log(this.timestamp, ConsolePrefix, message != null ? message : emptyStr, ...params);
    }
    if (this.output != null && (this.level === _configuration__WEBPACK_IMPORTED_MODULE_1__.TraceLevel.Verbose || this.level === _configuration__WEBPACK_IMPORTED_MODULE_1__.TraceLevel.Debug)) {
      this.output.appendLine(`${this.timestamp} ${message != null ? message : emptyStr}${this.toLoggableParams(false, params)}`);
    }
  }
  static logWithDebugParams(contextOrMessage, ...params) {
    if (this.level !== _configuration__WEBPACK_IMPORTED_MODULE_1__.TraceLevel.Verbose && this.level !== _configuration__WEBPACK_IMPORTED_MODULE_1__.TraceLevel.Debug && !_Logger.isDebugging) {
      return;
    }
    let message;
    if (typeof contextOrMessage === "string") {
      message = contextOrMessage;
    } else {
      message = params.shift();
      if (contextOrMessage != null) {
        message = `${contextOrMessage.prefix} ${message != null ? message : emptyStr}`;
      }
    }
    if (_Logger.isDebugging) {
      console.log(this.timestamp, ConsolePrefix, message != null ? message : emptyStr, ...params);
    }
    if (this.output != null && (this.level === _configuration__WEBPACK_IMPORTED_MODULE_1__.TraceLevel.Verbose || this.level === _configuration__WEBPACK_IMPORTED_MODULE_1__.TraceLevel.Debug)) {
      this.output.appendLine(`${this.timestamp} ${message != null ? message : emptyStr}${this.toLoggableParams(true, params)}`);
    }
  }
  static warn(contextOrMessage, ...params) {
    if (this.level === _configuration__WEBPACK_IMPORTED_MODULE_1__.TraceLevel.Silent && !_Logger.isDebugging)
      return;
    let message;
    if (typeof contextOrMessage === "string") {
      message = contextOrMessage;
    } else {
      message = params.shift();
      if (contextOrMessage != null) {
        message = `${contextOrMessage.prefix} ${message != null ? message : emptyStr}`;
      }
    }
    if (_Logger.isDebugging) {
      console.warn(this.timestamp, ConsolePrefix, message != null ? message : emptyStr, ...params);
    }
    if (this.output != null && this.level !== _configuration__WEBPACK_IMPORTED_MODULE_1__.TraceLevel.Silent) {
      this.output.appendLine(`${this.timestamp} ${message != null ? message : emptyStr}${this.toLoggableParams(false, params)}`);
    }
  }
  static willLog(type) {
    switch (type) {
      case "debug":
        return this.level === _configuration__WEBPACK_IMPORTED_MODULE_1__.TraceLevel.Debug || _Logger.isDebugging;
      case "error":
      case "warn":
        return this.level !== _configuration__WEBPACK_IMPORTED_MODULE_1__.TraceLevel.Silent || _Logger.isDebugging;
      case "log":
        return this.level === _configuration__WEBPACK_IMPORTED_MODULE_1__.TraceLevel.Verbose || this.level === _configuration__WEBPACK_IMPORTED_MODULE_1__.TraceLevel.Debug || _Logger.isDebugging;
      default:
        return false;
    }
  }
  static showOutputChannel() {
    if (this.output == null)
      return;
    this.output.show();
  }
  static toLoggable(p, sanitize) {
    if (typeof p !== "object")
      return String(p);
    if (this.customLoggableFn != null) {
      const loggable = this.customLoggableFn(p);
      if (loggable != null)
        return loggable;
    }
    if (p instanceof vscode__WEBPACK_IMPORTED_MODULE_0__.Uri)
      return `Uri(${p.toString(true)})`;
    try {
      return JSON.stringify(p, sanitize);
    } catch {
      return "<error>";
    }
  }
  static toLoggableName(instance) {
    var _a, _b, _c;
    let name;
    if (typeof instance === "function") {
      if (instance.prototype == null || instance.prototype.constructor == null) {
        return instance.name;
      }
      name = (_a = instance.prototype.constructor.name) != null ? _a : emptyStr;
    } else {
      name = (_c = (_b = instance.constructor) == null ? void 0 : _b.name) != null ? _c : emptyStr;
    }
    const index = name.indexOf("_");
    return index === -1 ? name : name.substr(index + 1);
  }
  static get timestamp() {
    const now = new Date();
    return `[${now.toISOString().replace(/T/, " ").replace(/\..+/, emptyStr)}:${`00${now.getUTCMilliseconds()}`.slice(-3)}]`;
  }
  static toLoggableParams(debugOnly, params) {
    if (params.length === 0 || debugOnly && this.level !== _configuration__WEBPACK_IMPORTED_MODULE_1__.TraceLevel.Debug && !_Logger.isDebugging) {
      return emptyStr;
    }
    const loggableParams = params.map((p) => this.toLoggable(p)).join(", ");
    return loggableParams.length !== 0 ? ` \u2014 ${loggableParams}` : emptyStr;
  }
  static logGitCommand(command, ex) {
    if (this.level !== _configuration__WEBPACK_IMPORTED_MODULE_1__.TraceLevel.Debug)
      return;
    if (_Logger.isDebugging) {
      if (ex != null) {
        console.error(this.timestamp, GitConsolePrefix, command != null ? command : emptyStr, ex);
      } else {
        console.log(this.timestamp, GitConsolePrefix, command != null ? command : emptyStr);
      }
    }
    if (this.gitOutput == null) {
      this.gitOutput = vscode__WEBPACK_IMPORTED_MODULE_0__.window.createOutputChannel(extensionGitOutputChannelName);
    }
    this.gitOutput.appendLine(`${this.timestamp} ${command}${ex != null ? `

${ex.toString()}` : emptyStr}`);
  }
};
let Logger = _Logger;
__publicField(Logger, "output");
__publicField(Logger, "customLoggableFn");
__publicField(Logger, "_isDebugging");
__publicField(Logger, "_level", _configuration__WEBPACK_IMPORTED_MODULE_1__.TraceLevel.Silent);
__publicField(Logger, "gitOutput");


/***/ }),

/***/ "./src/messages.ts":
/*!*************************!*\
  !*** ./src/messages.ts ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SuppressedMessages": () => (/* binding */ SuppressedMessages),
/* harmony export */   "Messages": () => (/* binding */ Messages)
/* harmony export */ });
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _configuration__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./configuration */ "./src/configuration.ts");
/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./logger */ "./src/logger.ts");




var SuppressedMessages;
(function(SuppressedMessages2) {
  SuppressedMessages2["CommitHasNoPreviousCommitWarning"] = "suppressCommitHasNoPreviousCommitWarning";
  SuppressedMessages2["CommitNotFoundWarning"] = "suppressCommitNotFoundWarning";
  SuppressedMessages2["CreatePullRequestPrompt"] = "suppressCreatePullRequestPrompt";
  SuppressedMessages2["SuppressDebugLoggingWarning"] = "suppressDebugLoggingWarning";
  SuppressedMessages2["FileNotUnderSourceControlWarning"] = "suppressFileNotUnderSourceControlWarning";
  SuppressedMessages2["GitDisabledWarning"] = "suppressGitDisabledWarning";
  SuppressedMessages2["GitMissingWarning"] = "suppressGitMissingWarning";
  SuppressedMessages2["GitVersionWarning"] = "suppressGitVersionWarning";
  SuppressedMessages2["IncorrectWorkspaceCasingWarning"] = "suppressImproperWorkspaceCasingWarning";
  SuppressedMessages2["LineUncommittedWarning"] = "suppressLineUncommittedWarning";
  SuppressedMessages2["NoRepositoryWarning"] = "suppressNoRepositoryWarning";
  SuppressedMessages2["RebaseSwitchToTextWarning"] = "suppressRebaseSwitchToTextWarning";
})(SuppressedMessages || (SuppressedMessages = {}));
class Messages {
  static showCommitHasNoPreviousCommitWarningMessage(commit) {
    if (commit === void 0) {
      return Messages.showMessage("info", "There is no previous commit.", SuppressedMessages.CommitHasNoPreviousCommitWarning);
    }
    return Messages.showMessage("info", `Commit ${commit.shortSha} (${commit.author}, ${commit.formattedDate}) has no previous commit.`, SuppressedMessages.CommitHasNoPreviousCommitWarning);
  }
  static showCommitNotFoundWarningMessage(message) {
    return Messages.showMessage("warn", `${message}. The commit could not be found.`, SuppressedMessages.CommitNotFoundWarning);
  }
  static async showCreatePullRequestPrompt(branch) {
    const create = { title: "Create Pull Request..." };
    const result = await Messages.showMessage("info", `Would you like to create a Pull Request for branch '${branch}'?`, SuppressedMessages.CreatePullRequestPrompt, { title: "Don't Show Again" }, create);
    return result === create;
  }
  static async showDebugLoggingWarningMessage() {
    const disable = { title: "Disable Debug Logging" };
    const result = await Messages.showMessage("warn", "GitLens debug logging is currently enabled. Unless you are reporting an issue, it is recommended to be disabled. Would you like to disable it?", SuppressedMessages.SuppressDebugLoggingWarning, { title: "Don't Show Again" }, disable);
    return result === disable;
  }
  static async showGenericErrorMessage(message) {
    const actions = [{ title: "Open Output Channel" }];
    const result = await Messages.showMessage("error", `${message}. See output channel for more details`, void 0, null, ...actions);
    if (result !== void 0) {
      _logger__WEBPACK_IMPORTED_MODULE_2__.Logger.showOutputChannel();
    }
    return result;
  }
  static showFileNotUnderSourceControlWarningMessage(message) {
    return Messages.showMessage("warn", `${message}. The file is probably not under source control.`, SuppressedMessages.FileNotUnderSourceControlWarning);
  }
  static showGitDisabledErrorMessage() {
    return Messages.showMessage("error", "GitLens requires Git to be enabled. Please re-enable Git \u2014 set `git.enabled` to true and reload.", SuppressedMessages.GitDisabledWarning);
  }
  static showGitInvalidConfigErrorMessage() {
    return Messages.showMessage("error", "GitLens is unable to use Git. Your Git configuration seems to be invalid. Please resolve any issues with your Git configuration and reload.");
  }
  static showGitMissingErrorMessage() {
    return Messages.showMessage("error", "GitLens was unable to find Git. Please make sure Git is installed. Also ensure that Git is either in the PATH, or that 'git.path' is pointed to its installed location.", SuppressedMessages.GitMissingWarning);
  }
  static showGitVersionUnsupportedErrorMessage(version, required) {
    return Messages.showMessage("error", `GitLens requires a newer version of Git (>= ${required}) than is currently installed (${version}). Please install a more recent version of Git.`, SuppressedMessages.GitVersionWarning);
  }
  static async showIncorrectWorkspaceCasingWarningMessage() {
    void await Messages.showMessage("warn", "This workspace was opened with a different casing than what exists on disk. Please re-open this workspace with the exact casing as it exists on disk, otherwise you may experience issues with certain Git features, such as missing blame or history.", SuppressedMessages.IncorrectWorkspaceCasingWarning);
  }
  static showInsidersErrorMessage() {
    return Messages.showMessage("error", "GitLens (Insiders) cannot be used while GitLens is also installed. Please ensure that only one version of GitLens is installed.", SuppressedMessages.GitDisabledWarning);
  }
  static showLineUncommittedWarningMessage(message) {
    return Messages.showMessage("warn", `${message}. The line has uncommitted changes.`, SuppressedMessages.LineUncommittedWarning);
  }
  static showNoRepositoryWarningMessage(message) {
    return Messages.showMessage("warn", `${message}. No repository could be found.`, SuppressedMessages.NoRepositoryWarning);
  }
  static showRebaseSwitchToTextWarningMessage() {
    return Messages.showMessage("warn", "Closing either the git-rebase-todo file or the Rebase Editor will start the rebase.", SuppressedMessages.RebaseSwitchToTextWarning);
  }
  static async showWhatsNewMessage(version) {
    const actions = [{ title: "What's New" }, { title: "\u2764 Sponsor" }];
    const result = await Messages.showMessage("info", `GitLens has been updated to v${version} \u2014 check out what's new!`, void 0, null, ...actions);
    if (result != null) {
      if (result === actions[0]) {
        await vscode__WEBPACK_IMPORTED_MODULE_0__.env.openExternal(vscode__WEBPACK_IMPORTED_MODULE_0__.Uri.parse("https://gitlens.amod.io/#whats-new"));
      } else if (result === actions[1]) {
        await vscode__WEBPACK_IMPORTED_MODULE_0__.env.openExternal(vscode__WEBPACK_IMPORTED_MODULE_0__.Uri.parse("https://gitlens.amod.io/#sponsor"));
      }
    }
  }
  static async showMessage(type, message, suppressionKey, dontShowAgain = { title: "Don't Show Again" }, ...actions) {
    _logger__WEBPACK_IMPORTED_MODULE_2__.Logger.log(`ShowMessage(${type}, '${message}', ${suppressionKey}, ${JSON.stringify(dontShowAgain)})`);
    if (suppressionKey !== void 0 && _configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.get(`advanced.messages.${suppressionKey}`)) {
      _logger__WEBPACK_IMPORTED_MODULE_2__.Logger.log(`ShowMessage(${type}, '${message}', ${suppressionKey}, ${JSON.stringify(dontShowAgain)}) skipped`);
      return void 0;
    }
    if (suppressionKey !== void 0 && dontShowAgain !== null) {
      actions.push(dontShowAgain);
    }
    let result = void 0;
    switch (type) {
      case "info":
        result = await vscode__WEBPACK_IMPORTED_MODULE_0__.window.showInformationMessage(message, ...actions);
        break;
      case "warn":
        result = await vscode__WEBPACK_IMPORTED_MODULE_0__.window.showWarningMessage(message, ...actions);
        break;
      case "error":
        result = await vscode__WEBPACK_IMPORTED_MODULE_0__.window.showErrorMessage(message, ...actions);
        break;
    }
    if (suppressionKey !== void 0 && dontShowAgain === null || result === dontShowAgain) {
      _logger__WEBPACK_IMPORTED_MODULE_2__.Logger.log(`ShowMessage(${type}, '${message}', ${suppressionKey}, ${JSON.stringify(dontShowAgain)}) don't show again requested`);
      await this.suppressedMessage(suppressionKey);
      if (result === dontShowAgain)
        return void 0;
    }
    _logger__WEBPACK_IMPORTED_MODULE_2__.Logger.log(`ShowMessage(${type}, '${message}', ${suppressionKey}, ${JSON.stringify(dontShowAgain)}) returned ${result != null ? result.title : result}`);
    return result;
  }
  static suppressedMessage(suppressionKey) {
    const messages = { ..._configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.get("advanced.messages") };
    messages[suppressionKey] = true;
    for (const [key, value] of Object.entries(messages)) {
      if (value !== true) {
        delete messages[key];
      }
    }
    return _configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.update("advanced.messages", messages, vscode__WEBPACK_IMPORTED_MODULE_0__.ConfigurationTarget.Global);
  }
}


/***/ }),

/***/ "./src/partners.ts":
/*!*************************!*\
  !*** ./src/partners.ts ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "installExtension": () => (/* binding */ installExtension),
/* harmony export */   "registerPartnerActionRunners": () => (/* binding */ registerPartnerActionRunners)
/* harmony export */ });
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _commands__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./commands */ "./src/commands.ts");
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./constants */ "./src/constants.ts");
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./container */ "./src/container.ts");





async function installExtension(extensionId, tokenSource, timeout, vsix) {
  try {
    let timer = 0;
    const extension = new Promise((resolve) => {
      const disposable = vscode__WEBPACK_IMPORTED_MODULE_0__.extensions.onDidChange(() => {
        const extension2 = vscode__WEBPACK_IMPORTED_MODULE_0__.extensions.getExtension(extensionId);
        if (extension2 != null) {
          clearTimeout(timer);
          disposable.dispose();
          resolve(extension2);
        }
      });
      tokenSource.token.onCancellationRequested(() => {
        disposable.dispose();
        resolve(void 0);
      });
    });
    await vscode__WEBPACK_IMPORTED_MODULE_0__.commands.executeCommand(_constants__WEBPACK_IMPORTED_MODULE_2__.BuiltInCommands.InstallExtension, vsix != null ? vsix : extensionId);
    timer = setTimeout(() => tokenSource.cancel(), timeout);
    return extension;
  } catch {
    tokenSource.cancel();
    return void 0;
  }
}
function registerPartnerActionRunners(context) {
  registerLiveShare(context);
}
function registerLiveShare(context) {
  context.subscriptions.push(_container__WEBPACK_IMPORTED_MODULE_3__.Container.actionRunners.registerBuiltInPartner("liveshare", "hover.commands", {
    name: "Live Share",
    label: (context2) => {
      var _a, _b;
      if (context2.type === "hover.commands") {
        if (context2.commit.author.name !== "You") {
          return `$(live-share) Invite ${context2.commit.author.name}${((_a = context2.commit.author.presence) == null ? void 0 : _a.statusText) ? ` (${(_b = context2.commit.author.presence) == null ? void 0 : _b.statusText})` : ""} to a Live Share Session`;
        }
      }
      return "$(live-share) Start a Live Share Session";
    },
    run: async (context2) => {
      if (context2.type !== "hover.commands" || context2.commit.author.name === "You") {
        await (0,_commands__WEBPACK_IMPORTED_MODULE_1__.executeCommand)(_commands__WEBPACK_IMPORTED_MODULE_1__.Commands.InviteToLiveShare, {});
        return;
      }
      await (0,_commands__WEBPACK_IMPORTED_MODULE_1__.executeCommand)(_commands__WEBPACK_IMPORTED_MODULE_1__.Commands.InviteToLiveShare, {
        email: context2.commit.author.email
      });
    }
  }));
}


/***/ }),

/***/ "./src/quickpicks.ts":
/*!***************************!*\
  !*** ./src/quickpicks.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getQuickPickIgnoreFocusOut": () => (/* binding */ getQuickPickIgnoreFocusOut),
/* harmony export */   "ActionQuickPickItem": () => (/* reexport safe */ _quickpicks_quickPicksItems__WEBPACK_IMPORTED_MODULE_1__.ActionQuickPickItem),
/* harmony export */   "CommandQuickPickItem": () => (/* reexport safe */ _quickpicks_quickPicksItems__WEBPACK_IMPORTED_MODULE_1__.CommandQuickPickItem),
/* harmony export */   "Directive": () => (/* reexport safe */ _quickpicks_quickPicksItems__WEBPACK_IMPORTED_MODULE_1__.Directive),
/* harmony export */   "DirectiveQuickPickItem": () => (/* reexport safe */ _quickpicks_quickPicksItems__WEBPACK_IMPORTED_MODULE_1__.DirectiveQuickPickItem),
/* harmony export */   "FlagsQuickPickItem": () => (/* reexport safe */ _quickpicks_quickPicksItems__WEBPACK_IMPORTED_MODULE_1__.FlagsQuickPickItem),
/* harmony export */   "RevealInSideBarQuickPickItem": () => (/* reexport safe */ _quickpicks_quickPicksItems__WEBPACK_IMPORTED_MODULE_1__.RevealInSideBarQuickPickItem),
/* harmony export */   "SearchForCommitQuickPickItem": () => (/* reexport safe */ _quickpicks_quickPicksItems__WEBPACK_IMPORTED_MODULE_1__.SearchForCommitQuickPickItem),
/* harmony export */   "BranchQuickPickItem": () => (/* reexport safe */ _quickpicks_gitQuickPickItems__WEBPACK_IMPORTED_MODULE_2__.BranchQuickPickItem),
/* harmony export */   "CommitLoadMoreQuickPickItem": () => (/* reexport safe */ _quickpicks_gitQuickPickItems__WEBPACK_IMPORTED_MODULE_2__.CommitLoadMoreQuickPickItem),
/* harmony export */   "CommitQuickPickItem": () => (/* reexport safe */ _quickpicks_gitQuickPickItems__WEBPACK_IMPORTED_MODULE_2__.CommitQuickPickItem),
/* harmony export */   "ContributorQuickPickItem": () => (/* reexport safe */ _quickpicks_gitQuickPickItems__WEBPACK_IMPORTED_MODULE_2__.ContributorQuickPickItem),
/* harmony export */   "GitCommandQuickPickItem": () => (/* reexport safe */ _quickpicks_gitQuickPickItems__WEBPACK_IMPORTED_MODULE_2__.GitCommandQuickPickItem),
/* harmony export */   "RefQuickPickItem": () => (/* reexport safe */ _quickpicks_gitQuickPickItems__WEBPACK_IMPORTED_MODULE_2__.RefQuickPickItem),
/* harmony export */   "RepositoryQuickPickItem": () => (/* reexport safe */ _quickpicks_gitQuickPickItems__WEBPACK_IMPORTED_MODULE_2__.RepositoryQuickPickItem),
/* harmony export */   "TagQuickPickItem": () => (/* reexport safe */ _quickpicks_gitQuickPickItems__WEBPACK_IMPORTED_MODULE_2__.TagQuickPickItem),
/* harmony export */   "CommitApplyFileChangesCommandQuickPickItem": () => (/* reexport safe */ _quickpicks_commitQuickPickItems__WEBPACK_IMPORTED_MODULE_3__.CommitApplyFileChangesCommandQuickPickItem),
/* harmony export */   "CommitBrowseRepositoryFromHereCommandQuickPickItem": () => (/* reexport safe */ _quickpicks_commitQuickPickItems__WEBPACK_IMPORTED_MODULE_3__.CommitBrowseRepositoryFromHereCommandQuickPickItem),
/* harmony export */   "CommitCompareWithHEADCommandQuickPickItem": () => (/* reexport safe */ _quickpicks_commitQuickPickItems__WEBPACK_IMPORTED_MODULE_3__.CommitCompareWithHEADCommandQuickPickItem),
/* harmony export */   "CommitCompareWithWorkingCommandQuickPickItem": () => (/* reexport safe */ _quickpicks_commitQuickPickItems__WEBPACK_IMPORTED_MODULE_3__.CommitCompareWithWorkingCommandQuickPickItem),
/* harmony export */   "CommitCopyIdQuickPickItem": () => (/* reexport safe */ _quickpicks_commitQuickPickItems__WEBPACK_IMPORTED_MODULE_3__.CommitCopyIdQuickPickItem),
/* harmony export */   "CommitCopyMessageQuickPickItem": () => (/* reexport safe */ _quickpicks_commitQuickPickItems__WEBPACK_IMPORTED_MODULE_3__.CommitCopyMessageQuickPickItem),
/* harmony export */   "CommitFileQuickPickItem": () => (/* reexport safe */ _quickpicks_commitQuickPickItems__WEBPACK_IMPORTED_MODULE_3__.CommitFileQuickPickItem),
/* harmony export */   "CommitFilesQuickPickItem": () => (/* reexport safe */ _quickpicks_commitQuickPickItems__WEBPACK_IMPORTED_MODULE_3__.CommitFilesQuickPickItem),
/* harmony export */   "CommitOpenAllChangesCommandQuickPickItem": () => (/* reexport safe */ _quickpicks_commitQuickPickItems__WEBPACK_IMPORTED_MODULE_3__.CommitOpenAllChangesCommandQuickPickItem),
/* harmony export */   "CommitOpenAllChangesWithDiffToolCommandQuickPickItem": () => (/* reexport safe */ _quickpicks_commitQuickPickItems__WEBPACK_IMPORTED_MODULE_3__.CommitOpenAllChangesWithDiffToolCommandQuickPickItem),
/* harmony export */   "CommitOpenAllChangesWithWorkingCommandQuickPickItem": () => (/* reexport safe */ _quickpicks_commitQuickPickItems__WEBPACK_IMPORTED_MODULE_3__.CommitOpenAllChangesWithWorkingCommandQuickPickItem),
/* harmony export */   "CommitOpenChangesCommandQuickPickItem": () => (/* reexport safe */ _quickpicks_commitQuickPickItems__WEBPACK_IMPORTED_MODULE_3__.CommitOpenChangesCommandQuickPickItem),
/* harmony export */   "CommitOpenChangesWithDiffToolCommandQuickPickItem": () => (/* reexport safe */ _quickpicks_commitQuickPickItems__WEBPACK_IMPORTED_MODULE_3__.CommitOpenChangesWithDiffToolCommandQuickPickItem),
/* harmony export */   "CommitOpenChangesWithWorkingCommandQuickPickItem": () => (/* reexport safe */ _quickpicks_commitQuickPickItems__WEBPACK_IMPORTED_MODULE_3__.CommitOpenChangesWithWorkingCommandQuickPickItem),
/* harmony export */   "CommitOpenDirectoryCompareCommandQuickPickItem": () => (/* reexport safe */ _quickpicks_commitQuickPickItems__WEBPACK_IMPORTED_MODULE_3__.CommitOpenDirectoryCompareCommandQuickPickItem),
/* harmony export */   "CommitOpenDirectoryCompareWithWorkingCommandQuickPickItem": () => (/* reexport safe */ _quickpicks_commitQuickPickItems__WEBPACK_IMPORTED_MODULE_3__.CommitOpenDirectoryCompareWithWorkingCommandQuickPickItem),
/* harmony export */   "CommitOpenFileCommandQuickPickItem": () => (/* reexport safe */ _quickpicks_commitQuickPickItems__WEBPACK_IMPORTED_MODULE_3__.CommitOpenFileCommandQuickPickItem),
/* harmony export */   "CommitOpenFilesCommandQuickPickItem": () => (/* reexport safe */ _quickpicks_commitQuickPickItems__WEBPACK_IMPORTED_MODULE_3__.CommitOpenFilesCommandQuickPickItem),
/* harmony export */   "CommitOpenRevisionCommandQuickPickItem": () => (/* reexport safe */ _quickpicks_commitQuickPickItems__WEBPACK_IMPORTED_MODULE_3__.CommitOpenRevisionCommandQuickPickItem),
/* harmony export */   "CommitOpenRevisionsCommandQuickPickItem": () => (/* reexport safe */ _quickpicks_commitQuickPickItems__WEBPACK_IMPORTED_MODULE_3__.CommitOpenRevisionsCommandQuickPickItem),
/* harmony export */   "CommitRestoreFileChangesCommandQuickPickItem": () => (/* reexport safe */ _quickpicks_commitQuickPickItems__WEBPACK_IMPORTED_MODULE_3__.CommitRestoreFileChangesCommandQuickPickItem),
/* harmony export */   "OpenChangedFilesCommandQuickPickItem": () => (/* reexport safe */ _quickpicks_commitQuickPickItems__WEBPACK_IMPORTED_MODULE_3__.OpenChangedFilesCommandQuickPickItem),
/* harmony export */   "CommitPicker": () => (/* reexport safe */ _quickpicks_commitPicker__WEBPACK_IMPORTED_MODULE_4__.CommitPicker),
/* harmony export */   "ModePicker": () => (/* reexport safe */ _quickpicks_modePicker__WEBPACK_IMPORTED_MODULE_5__.ModePicker),
/* harmony export */   "ReferencePicker": () => (/* reexport safe */ _quickpicks_referencePicker__WEBPACK_IMPORTED_MODULE_6__.ReferencePicker),
/* harmony export */   "ReferencesQuickPickIncludes": () => (/* reexport safe */ _quickpicks_referencePicker__WEBPACK_IMPORTED_MODULE_6__.ReferencesQuickPickIncludes),
/* harmony export */   "ConfigureCustomRemoteProviderCommandQuickPickItem": () => (/* reexport safe */ _quickpicks_remoteProviderPicker__WEBPACK_IMPORTED_MODULE_7__.ConfigureCustomRemoteProviderCommandQuickPickItem),
/* harmony export */   "CopyOrOpenRemoteCommandQuickPickItem": () => (/* reexport safe */ _quickpicks_remoteProviderPicker__WEBPACK_IMPORTED_MODULE_7__.CopyOrOpenRemoteCommandQuickPickItem),
/* harmony export */   "CopyRemoteResourceCommandQuickPickItem": () => (/* reexport safe */ _quickpicks_remoteProviderPicker__WEBPACK_IMPORTED_MODULE_7__.CopyRemoteResourceCommandQuickPickItem),
/* harmony export */   "OpenRemoteResourceCommandQuickPickItem": () => (/* reexport safe */ _quickpicks_remoteProviderPicker__WEBPACK_IMPORTED_MODULE_7__.OpenRemoteResourceCommandQuickPickItem),
/* harmony export */   "RemoteProviderPicker": () => (/* reexport safe */ _quickpicks_remoteProviderPicker__WEBPACK_IMPORTED_MODULE_7__.RemoteProviderPicker),
/* harmony export */   "SetADefaultRemoteCommandQuickPickItem": () => (/* reexport safe */ _quickpicks_remoteProviderPicker__WEBPACK_IMPORTED_MODULE_7__.SetADefaultRemoteCommandQuickPickItem),
/* harmony export */   "SetRemoteAsDefaultCommandQuickPickItem": () => (/* reexport safe */ _quickpicks_remoteProviderPicker__WEBPACK_IMPORTED_MODULE_7__.SetRemoteAsDefaultCommandQuickPickItem),
/* harmony export */   "RepositoryPicker": () => (/* reexport safe */ _quickpicks_repositoryPicker__WEBPACK_IMPORTED_MODULE_8__.RepositoryPicker)
/* harmony export */ });
/* harmony import */ var _configuration__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./configuration */ "./src/configuration.ts");
/* harmony import */ var _quickpicks_quickPicksItems__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./quickpicks/quickPicksItems */ "./src/quickpicks/quickPicksItems.ts");
/* harmony import */ var _quickpicks_gitQuickPickItems__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./quickpicks/gitQuickPickItems */ "./src/quickpicks/gitQuickPickItems.ts");
/* harmony import */ var _quickpicks_commitQuickPickItems__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./quickpicks/commitQuickPickItems */ "./src/quickpicks/commitQuickPickItems.ts");
/* harmony import */ var _quickpicks_commitPicker__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./quickpicks/commitPicker */ "./src/quickpicks/commitPicker.ts");
/* harmony import */ var _quickpicks_modePicker__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./quickpicks/modePicker */ "./src/quickpicks/modePicker.ts");
/* harmony import */ var _quickpicks_referencePicker__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./quickpicks/referencePicker */ "./src/quickpicks/referencePicker.ts");
/* harmony import */ var _quickpicks_remoteProviderPicker__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./quickpicks/remoteProviderPicker */ "./src/quickpicks/remoteProviderPicker.ts");
/* harmony import */ var _quickpicks_repositoryPicker__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./quickpicks/repositoryPicker */ "./src/quickpicks/repositoryPicker.ts");


function getQuickPickIgnoreFocusOut() {
  return !_configuration__WEBPACK_IMPORTED_MODULE_0__.configuration.get("advanced.quickPick.closeOnFocusOut");
}










/***/ }),

/***/ "./src/quickpicks/commitPicker.ts":
/*!****************************************!*\
  !*** ./src/quickpicks/commitPicker.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CommitPicker": () => (/* binding */ CommitPicker)
/* harmony export */ });
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _configuration__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../configuration */ "./src/configuration.ts");
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../container */ "./src/container.ts");
/* harmony import */ var _quickpicks__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../quickpicks */ "./src/quickpicks.ts");
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../system */ "./src/system.ts");






var CommitPicker;
(function(CommitPicker2) {
  async function show(log, title, placeholder, options) {
    const quickpick = vscode__WEBPACK_IMPORTED_MODULE_0__.window.createQuickPick();
    quickpick.ignoreFocusOut = (0,_quickpicks__WEBPACK_IMPORTED_MODULE_3__.getQuickPickIgnoreFocusOut)();
    quickpick.title = title;
    quickpick.placeholder = placeholder;
    quickpick.matchOnDescription = true;
    quickpick.matchOnDetail = true;
    if (_system__WEBPACK_IMPORTED_MODULE_4__.Promises.is(log)) {
      quickpick.busy = true;
      quickpick.enabled = false;
      quickpick.show();
      log = await log;
      if (log == null) {
        quickpick.placeholder = "Unable to show commit history";
      }
    }
    quickpick.items = getItems(log);
    if (options == null ? void 0 : options.picked) {
      quickpick.activeItems = quickpick.items.filter((i) => _quickpicks__WEBPACK_IMPORTED_MODULE_3__.CommandQuickPickItem.is(i) ? false : i.picked);
    }
    function getItems(log2) {
      return log2 == null ? [_quickpicks__WEBPACK_IMPORTED_MODULE_3__.DirectiveQuickPickItem.create(_quickpicks__WEBPACK_IMPORTED_MODULE_3__.Directive.Cancel)] : [
        ...(options == null ? void 0 : options.showOtherReferences) != null ? [options == null ? void 0 : options.showOtherReferences] : [],
        ..._system__WEBPACK_IMPORTED_MODULE_4__.Iterables.map(log2.commits.values(), (commit) => _quickpicks__WEBPACK_IMPORTED_MODULE_3__.CommitQuickPickItem.create(commit, (options == null ? void 0 : options.picked) === commit.ref, {
          compact: true,
          icon: true
        })),
        ...(log2 == null ? void 0 : log2.hasMore) ? [_quickpicks__WEBPACK_IMPORTED_MODULE_3__.DirectiveQuickPickItem.create(_quickpicks__WEBPACK_IMPORTED_MODULE_3__.Directive.LoadMore)] : []
      ];
    }
    async function loadMore() {
      var _a, _b;
      quickpick.busy = true;
      quickpick.enabled = false;
      try {
        log = await ((_b = (_a = await log) == null ? void 0 : _a.more) == null ? void 0 : _b.call(_a, _configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.get("advanced.maxListItems")));
        const items = getItems(log);
        let activeIndex = -1;
        if (quickpick.activeItems.length !== 0) {
          const active = quickpick.activeItems[0];
          activeIndex = quickpick.items.indexOf(active);
          if (_quickpicks__WEBPACK_IMPORTED_MODULE_3__.DirectiveQuickPickItem.is(active)) {
            activeIndex--;
          }
        }
        quickpick.items = items;
        if (activeIndex) {
          quickpick.activeItems = [quickpick.items[activeIndex]];
        }
      } finally {
        quickpick.busy = false;
        quickpick.enabled = true;
      }
    }
    const disposables = [];
    let scope;
    if ((options == null ? void 0 : options.keys) != null && options.keys.length !== 0 && (options == null ? void 0 : options.onDidPressKey) !== null) {
      scope = _container__WEBPACK_IMPORTED_MODULE_2__.Container.keyboard.createScope(Object.fromEntries(options.keys.map((key) => [
        key,
        {
          onDidPressKey: (key2) => {
            if (quickpick.activeItems.length !== 0) {
              const [item] = quickpick.activeItems;
              if (item != null && !_quickpicks__WEBPACK_IMPORTED_MODULE_3__.DirectiveQuickPickItem.is(item) && !_quickpicks__WEBPACK_IMPORTED_MODULE_3__.CommandQuickPickItem.is(item)) {
                void options.onDidPressKey(key2, item);
              }
            }
          }
        }
      ])));
      void scope.start();
      disposables.push(scope);
    }
    try {
      const pick = await new Promise((resolve) => {
        disposables.push(quickpick.onDidHide(() => resolve(void 0)), quickpick.onDidAccept(() => {
          if (quickpick.activeItems.length !== 0) {
            const [item] = quickpick.activeItems;
            if (_quickpicks__WEBPACK_IMPORTED_MODULE_3__.DirectiveQuickPickItem.is(item)) {
              switch (item.directive) {
                case _quickpicks__WEBPACK_IMPORTED_MODULE_3__.Directive.LoadMore:
                  void loadMore();
                  return;
                default:
                  resolve(void 0);
                  return;
              }
            }
            resolve(item);
          }
        }), quickpick.onDidChangeValue(async (e) => {
          if (scope == null)
            return;
          if (e.length !== 0) {
            await scope.pause(["left", "right"]);
          } else {
            await scope.resume();
          }
        }));
        quickpick.busy = false;
        quickpick.enabled = true;
        quickpick.show();
      });
      if (pick == null || _quickpicks__WEBPACK_IMPORTED_MODULE_3__.DirectiveQuickPickItem.is(pick))
        return void 0;
      if (pick instanceof _quickpicks__WEBPACK_IMPORTED_MODULE_3__.CommandQuickPickItem) {
        void await pick.execute();
        return void 0;
      }
      return pick.item;
    } finally {
      quickpick.dispose();
      disposables.forEach((d) => d.dispose());
    }
  }
  CommitPicker2.show = show;
})(CommitPicker || (CommitPicker = {}));


/***/ }),

/***/ "./src/quickpicks/commitQuickPickItems.ts":
/*!************************************************!*\
  !*** ./src/quickpicks/commitQuickPickItems.ts ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CommitFilesQuickPickItem": () => (/* binding */ CommitFilesQuickPickItem),
/* harmony export */   "CommitFileQuickPickItem": () => (/* binding */ CommitFileQuickPickItem),
/* harmony export */   "CommitBrowseRepositoryFromHereCommandQuickPickItem": () => (/* binding */ CommitBrowseRepositoryFromHereCommandQuickPickItem),
/* harmony export */   "CommitCompareWithHEADCommandQuickPickItem": () => (/* binding */ CommitCompareWithHEADCommandQuickPickItem),
/* harmony export */   "CommitCompareWithWorkingCommandQuickPickItem": () => (/* binding */ CommitCompareWithWorkingCommandQuickPickItem),
/* harmony export */   "CommitCopyIdQuickPickItem": () => (/* binding */ CommitCopyIdQuickPickItem),
/* harmony export */   "CommitCopyMessageQuickPickItem": () => (/* binding */ CommitCopyMessageQuickPickItem),
/* harmony export */   "CommitOpenAllChangesCommandQuickPickItem": () => (/* binding */ CommitOpenAllChangesCommandQuickPickItem),
/* harmony export */   "CommitOpenAllChangesWithDiffToolCommandQuickPickItem": () => (/* binding */ CommitOpenAllChangesWithDiffToolCommandQuickPickItem),
/* harmony export */   "CommitOpenAllChangesWithWorkingCommandQuickPickItem": () => (/* binding */ CommitOpenAllChangesWithWorkingCommandQuickPickItem),
/* harmony export */   "CommitOpenChangesCommandQuickPickItem": () => (/* binding */ CommitOpenChangesCommandQuickPickItem),
/* harmony export */   "CommitOpenChangesWithDiffToolCommandQuickPickItem": () => (/* binding */ CommitOpenChangesWithDiffToolCommandQuickPickItem),
/* harmony export */   "CommitOpenChangesWithWorkingCommandQuickPickItem": () => (/* binding */ CommitOpenChangesWithWorkingCommandQuickPickItem),
/* harmony export */   "CommitOpenDirectoryCompareCommandQuickPickItem": () => (/* binding */ CommitOpenDirectoryCompareCommandQuickPickItem),
/* harmony export */   "CommitOpenDirectoryCompareWithWorkingCommandQuickPickItem": () => (/* binding */ CommitOpenDirectoryCompareWithWorkingCommandQuickPickItem),
/* harmony export */   "CommitOpenFilesCommandQuickPickItem": () => (/* binding */ CommitOpenFilesCommandQuickPickItem),
/* harmony export */   "CommitOpenFileCommandQuickPickItem": () => (/* binding */ CommitOpenFileCommandQuickPickItem),
/* harmony export */   "CommitOpenRevisionsCommandQuickPickItem": () => (/* binding */ CommitOpenRevisionsCommandQuickPickItem),
/* harmony export */   "CommitOpenRevisionCommandQuickPickItem": () => (/* binding */ CommitOpenRevisionCommandQuickPickItem),
/* harmony export */   "CommitApplyFileChangesCommandQuickPickItem": () => (/* binding */ CommitApplyFileChangesCommandQuickPickItem),
/* harmony export */   "CommitRestoreFileChangesCommandQuickPickItem": () => (/* binding */ CommitRestoreFileChangesCommandQuickPickItem),
/* harmony export */   "OpenChangedFilesCommandQuickPickItem": () => (/* binding */ OpenChangedFilesCommandQuickPickItem)
/* harmony export */ });
/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! path */ "./node_modules/path-browserify/index.js");
/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _commands__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../commands */ "./src/commands.ts");
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../constants */ "./src/constants.ts");
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../container */ "./src/container.ts");
/* harmony import */ var _git_git__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../git/git */ "./src/git/git.ts");
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../system */ "./src/system.ts");
/* harmony import */ var _quickPicksItems__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./quickPicksItems */ "./src/quickpicks/quickPicksItems.ts");









class CommitFilesQuickPickItem extends _quickPicksItems__WEBPACK_IMPORTED_MODULE_7__.CommandQuickPickItem {
  constructor(commit, picked = true, fileName) {
    super({
      label: commit.getShortMessage(),
      description: _git_git__WEBPACK_IMPORTED_MODULE_5__.CommitFormatter.fromTemplate(`\${author}, \${ago}  $(git-commit)  \${id}`, commit),
      detail: `$(files) ${commit.getFormattedDiffStatus({
        expand: true,
        separator: ", ",
        empty: "No files changed"
      })}${fileName ? `${_system__WEBPACK_IMPORTED_MODULE_6__.Strings.pad(_constants__WEBPACK_IMPORTED_MODULE_3__.GlyphChars.Dot, 2, 2)}${fileName}` : ""}`,
      picked
    }, void 0, void 0, { suppressKeyPress: true });
    this.commit = commit;
  }
  get sha() {
    return this.commit.sha;
  }
}
class CommitFileQuickPickItem extends _quickPicksItems__WEBPACK_IMPORTED_MODULE_7__.CommandQuickPickItem {
  constructor(commit, file, picked) {
    super({
      label: `${_system__WEBPACK_IMPORTED_MODULE_6__.Strings.pad(_git_git__WEBPACK_IMPORTED_MODULE_5__.GitFile.getStatusCodicon(file.status), 0, 2)}${path__WEBPACK_IMPORTED_MODULE_0__.basename(file.fileName)}`,
      description: _git_git__WEBPACK_IMPORTED_MODULE_5__.GitFile.getFormattedDirectory(file, true),
      picked
    });
    this.commit = commit;
    this.file = file;
  }
  get sha() {
    return this.commit.sha;
  }
  execute(options) {
    return _commands__WEBPACK_IMPORTED_MODULE_2__.GitActions.Commit.openChanges(this.file, this.commit, options);
  }
}
class CommitBrowseRepositoryFromHereCommandQuickPickItem extends _quickPicksItems__WEBPACK_IMPORTED_MODULE_7__.CommandQuickPickItem {
  constructor(commit, executeOptions, item) {
    super(item != null ? item : `$(folder-opened) Browse Repository from${(executeOptions == null ? void 0 : executeOptions.before) ? " Before" : ""} Here${(executeOptions == null ? void 0 : executeOptions.openInNewWindow) ? " in New Window" : ""}`);
    this.commit = commit;
    this.executeOptions = executeOptions;
  }
  execute(_options) {
    var _a, _b;
    return _commands__WEBPACK_IMPORTED_MODULE_2__.GitActions.browseAtRevision(this.commit.toGitUri(), {
      before: (_a = this.executeOptions) == null ? void 0 : _a.before,
      openInNewWindow: (_b = this.executeOptions) == null ? void 0 : _b.openInNewWindow
    });
  }
}
class CommitCompareWithHEADCommandQuickPickItem extends _quickPicksItems__WEBPACK_IMPORTED_MODULE_7__.CommandQuickPickItem {
  constructor(commit, item) {
    super(item != null ? item : "$(compare-changes) Compare with HEAD");
    this.commit = commit;
  }
  execute(_options) {
    return _container__WEBPACK_IMPORTED_MODULE_4__.Container.searchAndCompareView.compare(this.commit.repoPath, this.commit.ref, "HEAD");
  }
}
class CommitCompareWithWorkingCommandQuickPickItem extends _quickPicksItems__WEBPACK_IMPORTED_MODULE_7__.CommandQuickPickItem {
  constructor(commit, item) {
    super(item != null ? item : "$(compare-changes) Compare with Working Tree");
    this.commit = commit;
  }
  execute(_options) {
    return _container__WEBPACK_IMPORTED_MODULE_4__.Container.searchAndCompareView.compare(this.commit.repoPath, this.commit.ref, "");
  }
}
class CommitCopyIdQuickPickItem extends _quickPicksItems__WEBPACK_IMPORTED_MODULE_7__.CommandQuickPickItem {
  constructor(commit, item) {
    super(item != null ? item : "$(clippy) Copy SHA");
    this.commit = commit;
  }
  execute() {
    return _commands__WEBPACK_IMPORTED_MODULE_2__.GitActions.Commit.copyIdToClipboard(this.commit);
  }
  async onDidPressKey(key) {
    await super.onDidPressKey(key);
    void vscode__WEBPACK_IMPORTED_MODULE_1__.window.showInformationMessage("Commit SHA copied to the clipboard");
  }
}
class CommitCopyMessageQuickPickItem extends _quickPicksItems__WEBPACK_IMPORTED_MODULE_7__.CommandQuickPickItem {
  constructor(commit, item) {
    super(item != null ? item : "$(clippy) Copy Message");
    this.commit = commit;
  }
  execute() {
    return _commands__WEBPACK_IMPORTED_MODULE_2__.GitActions.Commit.copyMessageToClipboard(this.commit);
  }
  async onDidPressKey(key) {
    await super.onDidPressKey(key);
    void vscode__WEBPACK_IMPORTED_MODULE_1__.window.showInformationMessage(`${this.commit.isStash ? "Stash" : "Commit"} Message copied to the clipboard`);
  }
}
class CommitOpenAllChangesCommandQuickPickItem extends _quickPicksItems__WEBPACK_IMPORTED_MODULE_7__.CommandQuickPickItem {
  constructor(commit, item) {
    super(item != null ? item : "$(git-compare) Open All Changes");
    this.commit = commit;
  }
  execute(options) {
    return _commands__WEBPACK_IMPORTED_MODULE_2__.GitActions.Commit.openAllChanges(this.commit, options);
  }
}
class CommitOpenAllChangesWithDiffToolCommandQuickPickItem extends _quickPicksItems__WEBPACK_IMPORTED_MODULE_7__.CommandQuickPickItem {
  constructor(commit, item) {
    super(item != null ? item : "$(git-compare) Open All Changes (difftool)");
    this.commit = commit;
  }
  execute() {
    return _commands__WEBPACK_IMPORTED_MODULE_2__.GitActions.Commit.openAllChangesWithDiffTool(this.commit);
  }
}
class CommitOpenAllChangesWithWorkingCommandQuickPickItem extends _quickPicksItems__WEBPACK_IMPORTED_MODULE_7__.CommandQuickPickItem {
  constructor(commit, item) {
    super(item != null ? item : "$(git-compare) Open All Changes with Working Tree");
    this.commit = commit;
  }
  execute(options) {
    return _commands__WEBPACK_IMPORTED_MODULE_2__.GitActions.Commit.openAllChangesWithWorking(this.commit, options);
  }
}
class CommitOpenChangesCommandQuickPickItem extends _quickPicksItems__WEBPACK_IMPORTED_MODULE_7__.CommandQuickPickItem {
  constructor(commit, file, item) {
    super(item != null ? item : "$(git-compare) Open Changes");
    this.commit = commit;
    this.file = file;
  }
  execute(options) {
    return _commands__WEBPACK_IMPORTED_MODULE_2__.GitActions.Commit.openChanges(this.file, this.commit, options);
  }
}
class CommitOpenChangesWithDiffToolCommandQuickPickItem extends _quickPicksItems__WEBPACK_IMPORTED_MODULE_7__.CommandQuickPickItem {
  constructor(commit, file, item) {
    super(item != null ? item : "$(git-compare) Open Changes (difftool)");
    this.commit = commit;
    this.file = file;
  }
  execute() {
    return _commands__WEBPACK_IMPORTED_MODULE_2__.GitActions.Commit.openChangesWithDiffTool(this.file, this.commit);
  }
}
class CommitOpenChangesWithWorkingCommandQuickPickItem extends _quickPicksItems__WEBPACK_IMPORTED_MODULE_7__.CommandQuickPickItem {
  constructor(commit, file, item) {
    super(item != null ? item : "$(git-compare) Open Changes with Working File");
    this.commit = commit;
    this.file = file;
  }
  execute(options) {
    return _commands__WEBPACK_IMPORTED_MODULE_2__.GitActions.Commit.openChangesWithWorking(this.file, this.commit, options);
  }
}
class CommitOpenDirectoryCompareCommandQuickPickItem extends _quickPicksItems__WEBPACK_IMPORTED_MODULE_7__.CommandQuickPickItem {
  constructor(commit, item) {
    super(item != null ? item : "$(git-compare) Open Directory Compare");
    this.commit = commit;
  }
  execute() {
    return _commands__WEBPACK_IMPORTED_MODULE_2__.GitActions.Commit.openDirectoryCompareWithPrevious(this.commit);
  }
}
class CommitOpenDirectoryCompareWithWorkingCommandQuickPickItem extends _quickPicksItems__WEBPACK_IMPORTED_MODULE_7__.CommandQuickPickItem {
  constructor(commit, item) {
    super(item != null ? item : "$(git-compare) Open Directory Compare with Working Tree");
    this.commit = commit;
  }
  execute() {
    return _commands__WEBPACK_IMPORTED_MODULE_2__.GitActions.Commit.openDirectoryCompareWithWorking(this.commit);
  }
}
class CommitOpenFilesCommandQuickPickItem extends _quickPicksItems__WEBPACK_IMPORTED_MODULE_7__.CommandQuickPickItem {
  constructor(commit, item) {
    super(item != null ? item : "$(files) Open Files");
    this.commit = commit;
  }
  execute(_options) {
    return _commands__WEBPACK_IMPORTED_MODULE_2__.GitActions.Commit.openFiles(this.commit);
  }
}
class CommitOpenFileCommandQuickPickItem extends _quickPicksItems__WEBPACK_IMPORTED_MODULE_7__.CommandQuickPickItem {
  constructor(commit, file, item) {
    super(item != null ? item : "$(file) Open File");
    this.commit = commit;
    this.file = file;
  }
  execute(options) {
    return _commands__WEBPACK_IMPORTED_MODULE_2__.GitActions.Commit.openFile(this.file, this.commit, options);
  }
}
class CommitOpenRevisionsCommandQuickPickItem extends _quickPicksItems__WEBPACK_IMPORTED_MODULE_7__.CommandQuickPickItem {
  constructor(commit, item) {
    super(item != null ? item : "$(files) Open Files at Revision");
    this.commit = commit;
  }
  execute(_options) {
    return _commands__WEBPACK_IMPORTED_MODULE_2__.GitActions.Commit.openFilesAtRevision(this.commit);
  }
}
class CommitOpenRevisionCommandQuickPickItem extends _quickPicksItems__WEBPACK_IMPORTED_MODULE_7__.CommandQuickPickItem {
  constructor(commit, file, item) {
    super(item != null ? item : "$(file) Open File at Revision");
    this.commit = commit;
    this.file = file;
  }
  execute(options) {
    return _commands__WEBPACK_IMPORTED_MODULE_2__.GitActions.Commit.openFileAtRevision(this.file, this.commit, options);
  }
}
class CommitApplyFileChangesCommandQuickPickItem extends _quickPicksItems__WEBPACK_IMPORTED_MODULE_7__.CommandQuickPickItem {
  constructor(commit, file, item) {
    super(item != null ? item : "Apply Changes");
    this.commit = commit;
    this.file = file;
  }
  async execute() {
    return _commands__WEBPACK_IMPORTED_MODULE_2__.GitActions.Commit.applyChanges(this.file, this.commit);
  }
}
class CommitRestoreFileChangesCommandQuickPickItem extends _quickPicksItems__WEBPACK_IMPORTED_MODULE_7__.CommandQuickPickItem {
  constructor(commit, file, item) {
    super(item != null ? item : {
      label: "Restore",
      description: "aka checkout"
    });
    this.commit = commit;
    this.file = file;
  }
  execute() {
    return _commands__WEBPACK_IMPORTED_MODULE_2__.GitActions.Commit.restoreFile(this.file, this.commit);
  }
}
class OpenChangedFilesCommandQuickPickItem extends _quickPicksItems__WEBPACK_IMPORTED_MODULE_7__.CommandQuickPickItem {
  constructor(files, item) {
    const commandArgs = {
      uris: files.map((f) => f.uri)
    };
    super(item != null ? item : "$(files) Open All Changed Files", _commands__WEBPACK_IMPORTED_MODULE_2__.Commands.OpenChangedFiles, [commandArgs]);
  }
}


/***/ }),

/***/ "./src/quickpicks/gitQuickPickItems.ts":
/*!*********************************************!*\
  !*** ./src/quickpicks/gitQuickPickItems.ts ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "GitCommandQuickPickItem": () => (/* binding */ GitCommandQuickPickItem),
/* harmony export */   "BranchQuickPickItem": () => (/* binding */ BranchQuickPickItem),
/* harmony export */   "CommitLoadMoreQuickPickItem": () => (/* binding */ CommitLoadMoreQuickPickItem),
/* harmony export */   "CommitQuickPickItem": () => (/* binding */ CommitQuickPickItem),
/* harmony export */   "ContributorQuickPickItem": () => (/* binding */ ContributorQuickPickItem),
/* harmony export */   "RefQuickPickItem": () => (/* binding */ RefQuickPickItem),
/* harmony export */   "RepositoryQuickPickItem": () => (/* binding */ RepositoryQuickPickItem),
/* harmony export */   "TagQuickPickItem": () => (/* binding */ TagQuickPickItem)
/* harmony export */ });
/* harmony import */ var _commands__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../commands */ "./src/commands.ts");
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../constants */ "./src/constants.ts");
/* harmony import */ var _emojis__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../emojis */ "./src/emojis.ts");
/* harmony import */ var _git_git__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../git/git */ "./src/git/git.ts");
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../system */ "./src/system.ts");
/* harmony import */ var _quickPicksItems__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./quickPicksItems */ "./src/quickpicks/quickPicksItems.ts");

var __defProp = Object.defineProperty;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};






class GitCommandQuickPickItem extends _quickPicksItems__WEBPACK_IMPORTED_MODULE_5__.CommandQuickPickItem {
  constructor(labelOrItem, args) {
    super(labelOrItem, _commands__WEBPACK_IMPORTED_MODULE_0__.Commands.GitCommands, [args], { suppressKeyPress: true });
  }
  executeSteps(pickedVia) {
    return _commands__WEBPACK_IMPORTED_MODULE_0__.GitCommandsCommand.getSteps(this.args[0], pickedVia);
  }
}
var BranchQuickPickItem;
(function(BranchQuickPickItem2) {
  async function create(branch, picked, options = {}) {
    let description = "";
    if (options.type === true) {
      if (options.current === true && branch.current) {
        description = "current branch";
      } else {
        description = "branch";
      }
    } else if (options.type === "remote") {
      if (branch.remote) {
        description = "remote branch";
      }
    } else if (options.current === true && branch.current) {
      description = "current branch";
    }
    if (options.status && !branch.remote && branch.upstream != null) {
      let arrows = _constants__WEBPACK_IMPORTED_MODULE_1__.GlyphChars.Dash;
      const remote = await branch.getRemote();
      if (!branch.upstream.missing) {
        if (remote != null) {
          let left;
          let right;
          for (const { type } of remote.urls) {
            if (type === _git_git__WEBPACK_IMPORTED_MODULE_3__.GitRemoteType.Fetch) {
              left = true;
              if (right)
                break;
            } else if (type === _git_git__WEBPACK_IMPORTED_MODULE_3__.GitRemoteType.Push) {
              right = true;
              if (left)
                break;
            }
          }
          if (left && right) {
            arrows = _constants__WEBPACK_IMPORTED_MODULE_1__.GlyphChars.ArrowsRightLeft;
          } else if (right) {
            arrows = _constants__WEBPACK_IMPORTED_MODULE_1__.GlyphChars.ArrowRight;
          } else if (left) {
            arrows = _constants__WEBPACK_IMPORTED_MODULE_1__.GlyphChars.ArrowLeft;
          }
        }
      } else {
        arrows = _constants__WEBPACK_IMPORTED_MODULE_1__.GlyphChars.Warning;
      }
      const status = `${branch.getTrackingStatus({ suffix: `${_constants__WEBPACK_IMPORTED_MODULE_1__.GlyphChars.Space} ` })}${arrows}${_constants__WEBPACK_IMPORTED_MODULE_1__.GlyphChars.Space} ${branch.upstream.name}`;
      description = `${description ? `${description}${_constants__WEBPACK_IMPORTED_MODULE_1__.GlyphChars.Space.repeat(2)}${status}` : status}`;
    }
    if (options.ref) {
      if (branch.sha) {
        description = description ? `${description}${_system__WEBPACK_IMPORTED_MODULE_4__.Strings.pad("$(git-commit)", 2, 2)}${_git_git__WEBPACK_IMPORTED_MODULE_3__.GitRevision.shorten(branch.sha)}` : `${_system__WEBPACK_IMPORTED_MODULE_4__.Strings.pad("$(git-commit)", 0, 2)}${_git_git__WEBPACK_IMPORTED_MODULE_3__.GitRevision.shorten(branch.sha)}`;
      }
      if (branch.date !== void 0) {
        description = description ? `${description}${_system__WEBPACK_IMPORTED_MODULE_4__.Strings.pad(_constants__WEBPACK_IMPORTED_MODULE_1__.GlyphChars.Dot, 2, 2)}${branch.formattedDate}` : branch.formattedDate;
      }
    }
    const checked = options.checked || options.checked == null && options.current === "checkmark" && branch.current;
    const item = {
      label: `${_system__WEBPACK_IMPORTED_MODULE_4__.Strings.pad("$(git-branch)", 0, 2)}${branch.starred ? "$(star-full) " : ""}${branch.name}${checked ? `${_constants__WEBPACK_IMPORTED_MODULE_1__.GlyphChars.Space.repeat(2)}$(check)${_constants__WEBPACK_IMPORTED_MODULE_1__.GlyphChars.Space}` : ""}`,
      description,
      alwaysShow: options.alwaysShow,
      picked: picked != null ? picked : branch.current,
      item: branch,
      current: branch.current,
      ref: branch.name,
      remote: branch.remote
    };
    return item;
  }
  BranchQuickPickItem2.create = create;
})(BranchQuickPickItem || (BranchQuickPickItem = {}));
class CommitLoadMoreQuickPickItem {
  constructor() {
    __publicField(this, "label", "Load more");
    __publicField(this, "alwaysShow", true);
  }
}
var CommitQuickPickItem;
(function(CommitQuickPickItem2) {
  function create(commit, picked, options = {}) {
    if (_git_git__WEBPACK_IMPORTED_MODULE_3__.GitStashCommit.is(commit)) {
      const number = commit.number == null ? "" : `${commit.number}: `;
      if (options.compact) {
        const item3 = {
          label: `${options.icon ? _system__WEBPACK_IMPORTED_MODULE_4__.Strings.pad("$(archive)", 0, 2) : ""}${number}${commit.getShortMessage()}`,
          description: `${commit.formattedDate}${_system__WEBPACK_IMPORTED_MODULE_4__.Strings.pad(_constants__WEBPACK_IMPORTED_MODULE_1__.GlyphChars.Dot, 2, 2)}${commit.getFormattedDiffStatus({ compact: true })}`,
          alwaysShow: options.alwaysShow,
          picked,
          item: commit
        };
        return item3;
      }
      const item2 = {
        label: `${options.icon ? _system__WEBPACK_IMPORTED_MODULE_4__.Strings.pad("$(archive)", 0, 2) : ""}${number}${commit.getShortMessage()}`,
        description: "",
        detail: `${_constants__WEBPACK_IMPORTED_MODULE_1__.GlyphChars.Space.repeat(2)}${commit.formattedDate}${_system__WEBPACK_IMPORTED_MODULE_4__.Strings.pad(_constants__WEBPACK_IMPORTED_MODULE_1__.GlyphChars.Dot, 2, 2)}${commit.getFormattedDiffStatus({ compact: true })}`,
        alwaysShow: options.alwaysShow,
        picked,
        item: commit
      };
      return item2;
    }
    if (options.compact) {
      const item2 = {
        label: `${options.icon ? _system__WEBPACK_IMPORTED_MODULE_4__.Strings.pad("$(git-commit)", 0, 2) : ""}${commit.getShortMessage()}`,
        description: `${commit.author}, ${commit.formattedDate}${_system__WEBPACK_IMPORTED_MODULE_4__.Strings.pad("$(git-commit)", 2, 2)}${commit.shortSha}${_system__WEBPACK_IMPORTED_MODULE_4__.Strings.pad(_constants__WEBPACK_IMPORTED_MODULE_1__.GlyphChars.Dot, 2, 2)}${commit.getFormattedDiffStatus({ compact: true })}`,
        alwaysShow: options.alwaysShow,
        picked,
        item: commit
      };
      return item2;
    }
    const item = {
      label: `${options.icon ? _system__WEBPACK_IMPORTED_MODULE_4__.Strings.pad("$(git-commit)", 0, 2) : ""}${commit.getShortMessage()}`,
      description: "",
      detail: `${_constants__WEBPACK_IMPORTED_MODULE_1__.GlyphChars.Space.repeat(2)}${commit.author}, ${commit.formattedDate}${_system__WEBPACK_IMPORTED_MODULE_4__.Strings.pad("$(git-commit)", 2, 2)}${commit.shortSha}${_system__WEBPACK_IMPORTED_MODULE_4__.Strings.pad(_constants__WEBPACK_IMPORTED_MODULE_1__.GlyphChars.Dot, 2, 2)}${commit.getFormattedDiffStatus({
        compact: true
      })}`,
      alwaysShow: options.alwaysShow,
      picked,
      item: commit
    };
    return item;
  }
  CommitQuickPickItem2.create = create;
})(CommitQuickPickItem || (CommitQuickPickItem = {}));
var ContributorQuickPickItem;
(function(ContributorQuickPickItem2) {
  function create(contributor, picked, options = {}) {
    const item = {
      label: contributor.name,
      description: contributor.email,
      alwaysShow: options.alwaysShow,
      picked,
      item: contributor
    };
    return item;
  }
  ContributorQuickPickItem2.create = create;
})(ContributorQuickPickItem || (ContributorQuickPickItem = {}));
var RefQuickPickItem;
(function(RefQuickPickItem2) {
  function create(ref, repoPath, picked, options = {}) {
    if (ref === "") {
      return {
        label: `${options.icon ? _system__WEBPACK_IMPORTED_MODULE_4__.Strings.pad("$(file-directory)", 0, 2) : ""}Working Tree`,
        description: "",
        alwaysShow: options.alwaysShow,
        picked,
        item: _git_git__WEBPACK_IMPORTED_MODULE_3__.GitReference.create(ref, repoPath, { refType: "revision", name: "Working Tree" }),
        current: false,
        ref,
        remote: false
      };
    }
    if (ref === "HEAD") {
      return {
        label: `${options.icon ? _system__WEBPACK_IMPORTED_MODULE_4__.Strings.pad("$(git-branch)", 0, 2) : ""}HEAD`,
        description: "",
        alwaysShow: options.alwaysShow,
        picked,
        item: _git_git__WEBPACK_IMPORTED_MODULE_3__.GitReference.create(ref, repoPath, { refType: "revision", name: "HEAD" }),
        current: false,
        ref,
        remote: false
      };
    }
    const gitRef = _git_git__WEBPACK_IMPORTED_MODULE_3__.GitReference.create(ref, repoPath);
    if (_git_git__WEBPACK_IMPORTED_MODULE_3__.GitRevision.isRange(ref)) {
      return {
        label: `Range ${gitRef.name}`,
        description: "",
        alwaysShow: options.alwaysShow,
        picked,
        item: gitRef,
        current: false,
        ref,
        remote: false
      };
    }
    const item = {
      label: `Commit ${gitRef.name}`,
      description: options.ref ? `$(git-commit) ${ref}` : "",
      alwaysShow: options.alwaysShow,
      picked,
      item: gitRef,
      current: false,
      ref,
      remote: false
    };
    return item;
  }
  RefQuickPickItem2.create = create;
})(RefQuickPickItem || (RefQuickPickItem = {}));
var RepositoryQuickPickItem;
(function(RepositoryQuickPickItem2) {
  async function create(repository, picked, options = {}) {
    let repoStatus;
    if (options.branch || options.status) {
      repoStatus = await repository.getStatus();
    }
    let description = "";
    if (options.branch && repoStatus != null) {
      description = repoStatus.branch;
    }
    if (options.status && repoStatus != null) {
      let workingStatus = "";
      if (repoStatus.files.length !== 0) {
        workingStatus = repoStatus.getFormattedDiffStatus({
          compact: true,
          prefix: _system__WEBPACK_IMPORTED_MODULE_4__.Strings.pad(_constants__WEBPACK_IMPORTED_MODULE_1__.GlyphChars.Dot, 2, 2)
        });
      }
      const upstreamStatus = repoStatus.getUpstreamStatus({
        prefix: description ? `${_constants__WEBPACK_IMPORTED_MODULE_1__.GlyphChars.Space} ` : ""
      });
      const status = `${upstreamStatus}${workingStatus}`;
      if (status) {
        description = `${description ? `${description}${status}` : status}`;
      }
    }
    if (options.fetched) {
      const lastFetched = await repository.getLastFetched();
      if (lastFetched !== 0) {
        const fetched = `Last fetched ${_system__WEBPACK_IMPORTED_MODULE_4__.Dates.getFormatter(new Date(lastFetched)).fromNow()}`;
        description = `${description ? `${description}${_system__WEBPACK_IMPORTED_MODULE_4__.Strings.pad(_constants__WEBPACK_IMPORTED_MODULE_1__.GlyphChars.Dot, 2, 2)}${fetched}` : fetched}`;
      }
    }
    const item = {
      label: repository.formattedName,
      description,
      alwaysShow: options.alwaysShow,
      picked,
      item: repository,
      repoPath: repository.path
    };
    return item;
  }
  RepositoryQuickPickItem2.create = create;
})(RepositoryQuickPickItem || (RepositoryQuickPickItem = {}));
var TagQuickPickItem;
(function(TagQuickPickItem2) {
  function create(tag, picked, options = {}) {
    let description = "";
    if (options.type) {
      description = "tag";
    }
    if (options.ref) {
      description = description ? `${description}${_system__WEBPACK_IMPORTED_MODULE_4__.Strings.pad("$(git-commit)", 2, 2)}${_git_git__WEBPACK_IMPORTED_MODULE_3__.GitRevision.shorten(tag.sha)}` : `${_system__WEBPACK_IMPORTED_MODULE_4__.Strings.pad("$(git-commit)", 0, 2)}${_git_git__WEBPACK_IMPORTED_MODULE_3__.GitRevision.shorten(tag.sha)}`;
      description = description ? `${description}${_system__WEBPACK_IMPORTED_MODULE_4__.Strings.pad(_constants__WEBPACK_IMPORTED_MODULE_1__.GlyphChars.Dot, 2, 2)}${tag.formattedDate}` : tag.formattedDate;
    }
    if (options.message) {
      const message = (0,_emojis__WEBPACK_IMPORTED_MODULE_2__.emojify)(tag.message);
      description = description ? `${description}${_system__WEBPACK_IMPORTED_MODULE_4__.Strings.pad(_constants__WEBPACK_IMPORTED_MODULE_1__.GlyphChars.Dot, 2, 2)}${message}` : message;
    }
    const item = {
      label: `${_system__WEBPACK_IMPORTED_MODULE_4__.Strings.pad("$(tag)", 0, 2)}${tag.name}${options.checked ? `${_constants__WEBPACK_IMPORTED_MODULE_1__.GlyphChars.Space.repeat(2)}$(check)${_constants__WEBPACK_IMPORTED_MODULE_1__.GlyphChars.Space}` : ""}`,
      description,
      alwaysShow: options.alwaysShow,
      picked,
      item: tag,
      current: false,
      ref: tag.name,
      remote: false
    };
    return item;
  }
  TagQuickPickItem2.create = create;
})(TagQuickPickItem || (TagQuickPickItem = {}));


/***/ }),

/***/ "./src/quickpicks/modePicker.ts":
/*!**************************************!*\
  !*** ./src/quickpicks/modePicker.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ModePicker": () => (/* binding */ ModePicker)
/* harmony export */ });
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../constants */ "./src/constants.ts");
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../container */ "./src/container.ts");




var ModePicker;
(function(ModePicker2) {
  async function show() {
    if (_container__WEBPACK_IMPORTED_MODULE_2__.Container.config.modes == null)
      return void 0;
    const modes = _container__WEBPACK_IMPORTED_MODULE_2__.Container.config.modes;
    const modeKeys = Object.keys(modes);
    if (modeKeys.length === 0)
      return void 0;
    const mode = _container__WEBPACK_IMPORTED_MODULE_2__.Container.config.mode.active;
    const items = modeKeys.map((key) => {
      const modeCfg = modes[key];
      const item = {
        label: `${mode === key ? "$(check)\xA0\xA0" : "\xA0\xA0\xA0\xA0\xA0"}${modeCfg.name} mode`,
        description: modeCfg.description ? `\xA0${_constants__WEBPACK_IMPORTED_MODULE_1__.GlyphChars.Dash}\xA0 ${modeCfg.description}` : "",
        key
      };
      return item;
    });
    if (mode) {
      items.splice(0, 0, {
        label: `Exit ${modes[mode].name} mode`,
        key: void 0
      });
    }
    const pick = await vscode__WEBPACK_IMPORTED_MODULE_0__.window.showQuickPick(items, {
      placeHolder: "select a GitLens mode to enter"
    });
    return pick;
  }
  ModePicker2.show = show;
})(ModePicker || (ModePicker = {}));


/***/ }),

/***/ "./src/quickpicks/quickPicksItems.ts":
/*!*******************************************!*\
  !*** ./src/quickpicks/quickPicksItems.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Directive": () => (/* binding */ Directive),
/* harmony export */   "DirectiveQuickPickItem": () => (/* binding */ DirectiveQuickPickItem),
/* harmony export */   "CommandQuickPickItem": () => (/* binding */ CommandQuickPickItem),
/* harmony export */   "ActionQuickPickItem": () => (/* binding */ ActionQuickPickItem),
/* harmony export */   "FlagsQuickPickItem": () => (/* binding */ FlagsQuickPickItem),
/* harmony export */   "RevealInSideBarQuickPickItem": () => (/* binding */ RevealInSideBarQuickPickItem),
/* harmony export */   "SearchForCommitQuickPickItem": () => (/* binding */ SearchForCommitQuickPickItem)
/* harmony export */ });
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _commands__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../commands */ "./src/commands.ts");
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../container */ "./src/container.ts");
/* harmony import */ var _git_git__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../git/git */ "./src/git/git.ts");

var __defProp = Object.defineProperty;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};




var Directive;
(function(Directive2) {
  Directive2[Directive2["Back"] = 0] = "Back";
  Directive2[Directive2["Cancel"] = 1] = "Cancel";
  Directive2[Directive2["LoadMore"] = 2] = "LoadMore";
  Directive2[Directive2["Noop"] = 3] = "Noop";
})(Directive || (Directive = {}));
(function(Directive2) {
  function is(value) {
    return typeof value === "number" && Directive2[value] != null;
  }
  Directive2.is = is;
})(Directive || (Directive = {}));
var DirectiveQuickPickItem;
(function(DirectiveQuickPickItem2) {
  function create(directive, picked, options = {}) {
    let label = options.label;
    if (label == null) {
      switch (directive) {
        case 0:
          label = "Back";
          break;
        case 1:
          label = "Cancel";
          break;
        case 2:
          label = "Load more";
          break;
        case 3:
          label = "Try again";
          break;
      }
    }
    const item = {
      label,
      description: options.description,
      detail: options.detail,
      alwaysShow: true,
      picked,
      directive
    };
    return item;
  }
  DirectiveQuickPickItem2.create = create;
  function is(item) {
    return item != null && "directive" in item;
  }
  DirectiveQuickPickItem2.is = is;
})(DirectiveQuickPickItem || (DirectiveQuickPickItem = {}));
class CommandQuickPickItem {
  constructor(labelOrItem, command, args, options) {
    this.command = command;
    this.args = args;
    this.options = options;
    __publicField(this, "label");
    __publicField(this, "description");
    __publicField(this, "detail");
    this.command = command;
    this.args = args;
    if (typeof labelOrItem === "string") {
      this.label = labelOrItem;
    } else {
      Object.assign(this, labelOrItem);
    }
  }
  static fromCommand(labelOrItem, command, args) {
    return new CommandQuickPickItem(typeof labelOrItem === "string" ? { label: labelOrItem } : labelOrItem, command, args == null ? [] : [args]);
  }
  static is(item) {
    return item instanceof CommandQuickPickItem;
  }
  execute(_options) {
    var _a;
    if (this.command === void 0)
      return Promise.resolve(void 0);
    const result = vscode__WEBPACK_IMPORTED_MODULE_0__.commands.executeCommand(this.command, ...(_a = this.args) != null ? _a : []);
    return result;
  }
  async onDidPressKey(key) {
    var _a, _b, _c;
    if ((_a = this.options) == null ? void 0 : _a.suppressKeyPress)
      return;
    const result = this.execute({ preserveFocus: true, preview: false });
    (_c = (_b = this.options) == null ? void 0 : _b.onDidPressKey) == null ? void 0 : _c.call(_b, key, result);
    void await result;
  }
}
class ActionQuickPickItem extends CommandQuickPickItem {
  constructor(labelOrItem, action) {
    super(labelOrItem, void 0, void 0);
    this.action = action;
  }
  async execute(options) {
    return this.action(options);
  }
}
var FlagsQuickPickItem;
(function(FlagsQuickPickItem2) {
  function create(flags, item, options) {
    return { ...options, item, picked: hasFlags(flags, item) };
  }
  FlagsQuickPickItem2.create = create;
})(FlagsQuickPickItem || (FlagsQuickPickItem = {}));
function hasFlags(flags, has) {
  if (has === void 0)
    return flags.length === 0;
  if (!Array.isArray(has))
    return flags.includes(has);
  return has.length === 0 ? flags.length === 0 : has.every((f) => flags.includes(f));
}
class RevealInSideBarQuickPickItem extends CommandQuickPickItem {
  constructor(reference, item = {
    label: `$(eye) Reveal ${_git_git__WEBPACK_IMPORTED_MODULE_3__.GitReference.isStash(reference) ? "Stash" : "Commit"} in Side Bar`,
    description: _git_git__WEBPACK_IMPORTED_MODULE_3__.GitReference.isStash(reference) ? "" : "can take a while"
  }) {
    super(item, void 0, void 0);
    this.reference = reference;
  }
  async execute(options) {
    var _a, _b;
    if (_git_git__WEBPACK_IMPORTED_MODULE_3__.GitStashCommit.is(this.reference)) {
      void await _commands__WEBPACK_IMPORTED_MODULE_1__.GitActions.Stash.reveal(this.reference, {
        select: true,
        focus: !((_a = options == null ? void 0 : options.preserveFocus) != null ? _a : false),
        expand: true
      });
    } else {
      void await _commands__WEBPACK_IMPORTED_MODULE_1__.GitActions.Commit.reveal(this.reference, {
        select: true,
        focus: !((_b = options == null ? void 0 : options.preserveFocus) != null ? _b : false),
        expand: true
      });
    }
  }
}
class SearchForCommitQuickPickItem extends CommandQuickPickItem {
  constructor(reference, item = {
    label: "$(search) Search for Commit in Side Bar"
  }) {
    super(item, void 0, void 0);
    this.reference = reference;
  }
  async execute(options) {
    var _a;
    void await _container__WEBPACK_IMPORTED_MODULE_2__.Container.searchAndCompareView.search(this.reference.repoPath, {
      pattern: _git_git__WEBPACK_IMPORTED_MODULE_3__.SearchPattern.fromCommit(this.reference)
    }, {
      label: {
        label: `for ${_git_git__WEBPACK_IMPORTED_MODULE_3__.GitReference.toString(this.reference, { icon: false })}`
      },
      reveal: {
        select: true,
        focus: !((_a = options == null ? void 0 : options.preserveFocus) != null ? _a : false),
        expand: true
      }
    });
  }
}


/***/ }),

/***/ "./src/quickpicks/referencePicker.ts":
/*!*******************************************!*\
  !*** ./src/quickpicks/referencePicker.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ReferencesQuickPickIncludes": () => (/* binding */ ReferencesQuickPickIncludes),
/* harmony export */   "ReferencePicker": () => (/* binding */ ReferencePicker)
/* harmony export */ });
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _commands_quickCommand__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../commands/quickCommand */ "./src/commands/quickCommand.ts");
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../constants */ "./src/constants.ts");
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../container */ "./src/container.ts");
/* harmony import */ var _quickpicks__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../quickpicks */ "./src/quickpicks.ts");






var ReferencesQuickPickIncludes;
(function(ReferencesQuickPickIncludes2) {
  ReferencesQuickPickIncludes2[ReferencesQuickPickIncludes2["Branches"] = 1] = "Branches";
  ReferencesQuickPickIncludes2[ReferencesQuickPickIncludes2["Tags"] = 2] = "Tags";
  ReferencesQuickPickIncludes2[ReferencesQuickPickIncludes2["WorkingTree"] = 4] = "WorkingTree";
  ReferencesQuickPickIncludes2[ReferencesQuickPickIncludes2["HEAD"] = 8] = "HEAD";
  ReferencesQuickPickIncludes2[ReferencesQuickPickIncludes2["BranchesAndTags"] = 3] = "BranchesAndTags";
})(ReferencesQuickPickIncludes || (ReferencesQuickPickIncludes = {}));
var ReferencePicker;
(function(ReferencePicker2) {
  async function show(repoPath, title, placeHolder, options = {}) {
    const quickpick = vscode__WEBPACK_IMPORTED_MODULE_0__.window.createQuickPick();
    quickpick.ignoreFocusOut = (0,_quickpicks__WEBPACK_IMPORTED_MODULE_4__.getQuickPickIgnoreFocusOut)();
    quickpick.title = title;
    quickpick.placeholder = options.allowEnteringRefs != null ? `${placeHolder}${_constants__WEBPACK_IMPORTED_MODULE_2__.GlyphChars.Space.repeat(3)}(or enter a reference using #)` : placeHolder;
    quickpick.matchOnDescription = true;
    const disposables = [];
    let scope;
    if ((options == null ? void 0 : options.keys) != null && options.keys.length !== 0 && (options == null ? void 0 : options.onDidPressKey) !== null) {
      scope = _container__WEBPACK_IMPORTED_MODULE_3__.Container.keyboard.createScope(Object.fromEntries(options.keys.map((key) => [
        key,
        {
          onDidPressKey: (key2) => {
            if (quickpick.activeItems.length !== 0) {
              void options.onDidPressKey(key2, quickpick);
            }
          }
        }
      ])));
      void scope.start();
      disposables.push(scope);
    }
    const cancellation = new vscode__WEBPACK_IMPORTED_MODULE_0__.CancellationTokenSource();
    let autoPick;
    let items = getItems(repoPath, options);
    if (options.autoPick) {
      items = items.then((itms) => {
        if (itms.length <= 1) {
          autoPick = itms[0];
          cancellation.cancel();
        }
        return itms;
      });
    }
    quickpick.busy = true;
    quickpick.enabled = false;
    quickpick.show();
    const getValidateGitReference = (0,_commands_quickCommand__WEBPACK_IMPORTED_MODULE_1__.getValidateGitReferenceFn)(await _container__WEBPACK_IMPORTED_MODULE_3__.Container.git.getRepository(repoPath), {
      ranges: (options == null ? void 0 : options.allowEnteringRefs) && typeof options.allowEnteringRefs !== "boolean" ? options.allowEnteringRefs.ranges : void 0
    });
    quickpick.items = await items;
    quickpick.busy = false;
    quickpick.enabled = true;
    try {
      let pick = await new Promise((resolve) => {
        disposables.push(cancellation.token.onCancellationRequested(() => quickpick.hide()), quickpick.onDidHide(() => resolve(void 0)), quickpick.onDidAccept(() => {
          if (quickpick.activeItems.length === 0)
            return;
          resolve(quickpick.activeItems[0]);
        }), quickpick.onDidChangeValue(async (e) => {
          if (options.allowEnteringRefs) {
            if (!await getValidateGitReference(quickpick, e)) {
              quickpick.items = await items;
            }
          }
          if (scope == null)
            return;
          if (e.length !== 0) {
            await scope.pause(["left", "right"]);
          } else {
            await scope.resume();
          }
        }));
      });
      if (pick == null && autoPick != null) {
        pick = autoPick;
      }
      if (pick == null)
        return void 0;
      return pick.item;
    } finally {
      quickpick.dispose();
      disposables.forEach((d) => d.dispose());
    }
  }
  ReferencePicker2.show = show;
  async function getItems(repoPath, { picked, filter, include, sort }) {
    include = include != null ? include : 3;
    const items = await (0,_commands_quickCommand__WEBPACK_IMPORTED_MODULE_1__.getBranchesAndOrTags)(await _container__WEBPACK_IMPORTED_MODULE_3__.Container.git.getRepository(repoPath), include && 3 ? ["branches", "tags"] : include && 1 ? ["branches"] : include && 2 ? ["tags"] : [], {
      filter,
      picked,
      sort: sort != null ? sort : { branches: { current: false }, tags: {} }
    });
    if (picked) {
      const index = items.findIndex((i) => i.ref === picked);
      if (index !== -1) {
        items.splice(0, 0, ...items.splice(index, 1));
      }
    }
    if (include & 8) {
      items.splice(0, 0, _quickpicks__WEBPACK_IMPORTED_MODULE_4__.RefQuickPickItem.create("HEAD", repoPath, void 0, { icon: true }));
    }
    if (include & 4) {
      items.splice(0, 0, _quickpicks__WEBPACK_IMPORTED_MODULE_4__.RefQuickPickItem.create("", repoPath, void 0, { icon: true }));
    }
    return items;
  }
})(ReferencePicker || (ReferencePicker = {}));


/***/ }),

/***/ "./src/quickpicks/remoteProviderPicker.ts":
/*!************************************************!*\
  !*** ./src/quickpicks/remoteProviderPicker.ts ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ConfigureCustomRemoteProviderCommandQuickPickItem": () => (/* binding */ ConfigureCustomRemoteProviderCommandQuickPickItem),
/* harmony export */   "CopyOrOpenRemoteCommandQuickPickItem": () => (/* binding */ CopyOrOpenRemoteCommandQuickPickItem),
/* harmony export */   "CopyRemoteResourceCommandQuickPickItem": () => (/* binding */ CopyRemoteResourceCommandQuickPickItem),
/* harmony export */   "OpenRemoteResourceCommandQuickPickItem": () => (/* binding */ OpenRemoteResourceCommandQuickPickItem),
/* harmony export */   "SetADefaultRemoteCommandQuickPickItem": () => (/* binding */ SetADefaultRemoteCommandQuickPickItem),
/* harmony export */   "SetRemoteAsDefaultCommandQuickPickItem": () => (/* binding */ SetRemoteAsDefaultCommandQuickPickItem),
/* harmony export */   "RemoteProviderPicker": () => (/* binding */ RemoteProviderPicker)
/* harmony export */ });
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _commands__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../commands */ "./src/commands.ts");
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../constants */ "./src/constants.ts");
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../container */ "./src/container.ts");
/* harmony import */ var _git_git__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../git/git */ "./src/git/git.ts");
/* harmony import */ var _quickpicks__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../quickpicks */ "./src/quickpicks.ts");







class ConfigureCustomRemoteProviderCommandQuickPickItem extends _quickpicks__WEBPACK_IMPORTED_MODULE_5__.CommandQuickPickItem {
  constructor() {
    super({ label: "See how to configure a custom remote provider..." });
  }
  async execute() {
    await vscode__WEBPACK_IMPORTED_MODULE_0__.env.openExternal(vscode__WEBPACK_IMPORTED_MODULE_0__.Uri.parse("https://github.com/eamodio/vscode-gitlens#remote-provider-integration-settings-"));
  }
}
class CopyOrOpenRemoteCommandQuickPickItem extends _quickpicks__WEBPACK_IMPORTED_MODULE_5__.CommandQuickPickItem {
  constructor(remote, resource, clipboard) {
    super({
      label: `$(repo) ${remote.provider.path}`,
      description: remote.name
    });
    this.remote = remote;
    this.resource = resource;
    this.clipboard = clipboard;
  }
  async execute() {
    var _a, _b, _c;
    let resource = this.resource;
    if (resource.type === _git_git__WEBPACK_IMPORTED_MODULE_4__.RemoteResourceType.Comparison) {
      if (_git_git__WEBPACK_IMPORTED_MODULE_4__.GitBranch.getRemote(resource.base) === this.remote.name) {
        resource = { ...resource, base: _git_git__WEBPACK_IMPORTED_MODULE_4__.GitBranch.getNameWithoutRemote(resource.base) };
      }
      if (_git_git__WEBPACK_IMPORTED_MODULE_4__.GitBranch.getRemote(resource.compare) === this.remote.name) {
        resource = { ...resource, compare: _git_git__WEBPACK_IMPORTED_MODULE_4__.GitBranch.getNameWithoutRemote(resource.compare) };
      }
    } else if (resource.type === _git_git__WEBPACK_IMPORTED_MODULE_4__.RemoteResourceType.CreatePullRequest) {
      let branch = resource.base.branch;
      if (branch == null) {
        branch = await _container__WEBPACK_IMPORTED_MODULE_3__.Container.git.getDefaultBranchName(this.remote.repoPath, this.remote.name);
        if (branch == null && this.remote.provider.hasApi()) {
          const defaultBranch = await ((_b = (_a = this.remote.provider).getDefaultBranch) == null ? void 0 : _b.call(_a));
          branch = defaultBranch == null ? void 0 : defaultBranch.name;
        }
      }
      resource = {
        ...resource,
        base: { branch, remote: { path: this.remote.path, url: this.remote.url } }
      };
    } else if (resource.type === _git_git__WEBPACK_IMPORTED_MODULE_4__.RemoteResourceType.File && resource.branchOrTag != null && (this.remote.provider.id === "bitbucket" || this.remote.provider.id === "bitbucket-server")) {
      const { branchOrTag } = resource;
      const branchesOrTags = await _container__WEBPACK_IMPORTED_MODULE_3__.Container.git.getBranchesAndOrTags(this.remote.repoPath, {
        filter: {
          branches: (b) => b.name === branchOrTag || _git_git__WEBPACK_IMPORTED_MODULE_4__.GitBranch.getNameWithoutRemote(b.name) === branchOrTag,
          tags: (b) => b.name === branchOrTag
        }
      });
      const sha = (_c = branchesOrTags == null ? void 0 : branchesOrTags[0]) == null ? void 0 : _c.sha;
      if (sha) {
        resource = { ...resource, type: _git_git__WEBPACK_IMPORTED_MODULE_4__.RemoteResourceType.Revision, sha };
      }
    }
    void await (this.clipboard ? this.remote.provider.copy(resource) : this.remote.provider.open(resource));
  }
}
class CopyRemoteResourceCommandQuickPickItem extends _quickpicks__WEBPACK_IMPORTED_MODULE_5__.CommandQuickPickItem {
  constructor(remotes, resource) {
    const providers = _git_git__WEBPACK_IMPORTED_MODULE_4__.GitRemote.getHighlanderProviders(remotes);
    const commandArgs = {
      resource,
      remotes,
      clipboard: true
    };
    super(`$(clippy) Copy ${(providers == null ? void 0 : providers.length) ? providers[0].name : "Remote"} ${(0,_git_git__WEBPACK_IMPORTED_MODULE_4__.getNameFromRemoteResource)(resource)} Url${(providers == null ? void 0 : providers.length) === 1 ? "" : _constants__WEBPACK_IMPORTED_MODULE_2__.GlyphChars.Ellipsis}`, _commands__WEBPACK_IMPORTED_MODULE_1__.Commands.OpenOnRemote, [commandArgs]);
  }
  async onDidPressKey(key) {
    await super.onDidPressKey(key);
    void vscode__WEBPACK_IMPORTED_MODULE_0__.window.showInformationMessage("Url copied to the clipboard");
  }
}
class OpenRemoteResourceCommandQuickPickItem extends _quickpicks__WEBPACK_IMPORTED_MODULE_5__.CommandQuickPickItem {
  constructor(remotes, resource) {
    const providers = _git_git__WEBPACK_IMPORTED_MODULE_4__.GitRemote.getHighlanderProviders(remotes);
    const commandArgs = {
      resource,
      remotes,
      clipboard: false
    };
    super(`$(link-external) Open ${(0,_git_git__WEBPACK_IMPORTED_MODULE_4__.getNameFromRemoteResource)(resource)} on ${(providers == null ? void 0 : providers.length) === 1 ? providers[0].name : `${(providers == null ? void 0 : providers.length) ? providers[0].name : "Remote"}${_constants__WEBPACK_IMPORTED_MODULE_2__.GlyphChars.Ellipsis}`}`, _commands__WEBPACK_IMPORTED_MODULE_1__.Commands.OpenOnRemote, [commandArgs]);
  }
}
class SetADefaultRemoteCommandQuickPickItem extends _quickpicks__WEBPACK_IMPORTED_MODULE_5__.CommandQuickPickItem {
  constructor(remotes) {
    super({ label: "Set a Default Remote..." });
    this.remotes = remotes;
  }
  async execute() {
    return RemoteProviderPicker.setADefaultRemote(this.remotes);
  }
}
class SetRemoteAsDefaultCommandQuickPickItem extends _quickpicks__WEBPACK_IMPORTED_MODULE_5__.CommandQuickPickItem {
  constructor(remote) {
    super({
      label: remote.provider.name,
      detail: `$(repo) ${remote.provider.path}`
    });
    this.remote = remote;
  }
  async execute() {
    void await this.remote.setAsDefault(true);
    return this.remote;
  }
}
var RemoteProviderPicker;
(function(RemoteProviderPicker2) {
  async function show(title, placeHolder, resource, remotes, options) {
    const { autoPick, clipboard, setDefault } = { autoPick: false, clipboard: false, setDefault: true, ...options };
    let items;
    if (remotes.length === 0) {
      items = [new ConfigureCustomRemoteProviderCommandQuickPickItem()];
      placeHolder = "No auto-detected or configured remote providers found";
    } else {
      if (autoPick === "default" && remotes.length > 1) {
        const remote = remotes.find((r) => r.default);
        if (remote != null) {
          remotes = [remote];
        }
      }
      items = remotes.map((r) => new CopyOrOpenRemoteCommandQuickPickItem(r, resource, clipboard));
      if (setDefault) {
        items.push(new SetADefaultRemoteCommandQuickPickItem(remotes));
      }
    }
    if (autoPick && remotes.length === 1)
      return items[0];
    const quickpick = vscode__WEBPACK_IMPORTED_MODULE_0__.window.createQuickPick();
    quickpick.ignoreFocusOut = (0,_quickpicks__WEBPACK_IMPORTED_MODULE_5__.getQuickPickIgnoreFocusOut)();
    const disposables = [];
    try {
      const pick = await new Promise((resolve) => {
        disposables.push(quickpick.onDidHide(() => resolve(void 0)), quickpick.onDidAccept(() => {
          if (quickpick.activeItems.length !== 0) {
            resolve(quickpick.activeItems[0]);
          }
        }));
        quickpick.title = title;
        quickpick.placeholder = placeHolder;
        quickpick.matchOnDetail = true;
        quickpick.items = items;
        quickpick.show();
      });
      if (pick == null)
        return void 0;
      return pick;
    } finally {
      quickpick.dispose();
      disposables.forEach((d) => d.dispose());
    }
  }
  RemoteProviderPicker2.show = show;
  async function setADefaultRemote(remotes) {
    const items = remotes.map((r) => new SetRemoteAsDefaultCommandQuickPickItem(r));
    const quickpick = vscode__WEBPACK_IMPORTED_MODULE_0__.window.createQuickPick();
    quickpick.ignoreFocusOut = (0,_quickpicks__WEBPACK_IMPORTED_MODULE_5__.getQuickPickIgnoreFocusOut)();
    const disposables = [];
    try {
      const pick = await new Promise((resolve) => {
        disposables.push(quickpick.onDidHide(() => resolve(void 0)), quickpick.onDidAccept(() => {
          if (quickpick.activeItems.length !== 0) {
            resolve(quickpick.activeItems[0]);
          }
        }));
        quickpick.title = "Set a Default Remote";
        quickpick.placeholder = "Choose which remote to set as the default";
        quickpick.matchOnDetail = true;
        quickpick.items = items;
        quickpick.show();
      });
      if (pick == null)
        return void 0;
      return await pick.execute();
    } finally {
      quickpick.dispose();
      disposables.forEach((d) => d.dispose());
    }
  }
  RemoteProviderPicker2.setADefaultRemote = setADefaultRemote;
})(RemoteProviderPicker || (RemoteProviderPicker = {}));


/***/ }),

/***/ "./src/quickpicks/repositoryPicker.ts":
/*!********************************************!*\
  !*** ./src/quickpicks/repositoryPicker.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "RepositoryPicker": () => (/* binding */ RepositoryPicker)
/* harmony export */ });
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../container */ "./src/container.ts");
/* harmony import */ var _quickpicks__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../quickpicks */ "./src/quickpicks.ts");
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../system */ "./src/system.ts");





var RepositoryPicker;
(function(RepositoryPicker2) {
  async function show(title, placeholder = "Choose a repository", repositories) {
    const items = await Promise.all([
      ..._system__WEBPACK_IMPORTED_MODULE_3__.Iterables.map(repositories != null ? repositories : await _container__WEBPACK_IMPORTED_MODULE_1__.Container.git.getOrderedRepositories(), (r) => _quickpicks__WEBPACK_IMPORTED_MODULE_2__.RepositoryQuickPickItem.create(r, void 0, { branch: true, status: true }))
    ]);
    const quickpick = vscode__WEBPACK_IMPORTED_MODULE_0__.window.createQuickPick();
    quickpick.ignoreFocusOut = (0,_quickpicks__WEBPACK_IMPORTED_MODULE_2__.getQuickPickIgnoreFocusOut)();
    const disposables = [];
    try {
      const pick = await new Promise((resolve) => {
        disposables.push(quickpick.onDidHide(() => resolve(void 0)), quickpick.onDidAccept(() => {
          if (quickpick.activeItems.length !== 0) {
            resolve(quickpick.activeItems[0]);
          }
        }));
        quickpick.title = title;
        quickpick.placeholder = placeholder;
        quickpick.matchOnDescription = true;
        quickpick.matchOnDetail = true;
        quickpick.items = items;
        quickpick.show();
      });
      if (pick == null)
        return void 0;
      return pick;
    } finally {
      quickpick.dispose();
      disposables.forEach((d) => d.dispose());
    }
  }
  RepositoryPicker2.show = show;
})(RepositoryPicker || (RepositoryPicker = {}));


/***/ }),

/***/ "./src/statusbar/statusBarController.ts":
/*!**********************************************!*\
  !*** ./src/statusbar/statusBarController.ts ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "StatusBarController": () => (/* binding */ StatusBarController)
/* harmony export */ });
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _commands__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../commands */ "./src/commands.ts");
/* harmony import */ var _configuration__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../configuration */ "./src/configuration.ts");
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../constants */ "./src/constants.ts");
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../container */ "./src/container.ts");
/* harmony import */ var _git_git__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../git/git */ "./src/git/git.ts");
/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../logger */ "./src/logger.ts");
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../system */ "./src/system.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};








class StatusBarController {
  constructor() {
    __publicField(this, "_cancellation");
    __publicField(this, "_disposable");
    __publicField(this, "_statusBarBlame");
    __publicField(this, "_statusBarMode");
    this._disposable = vscode__WEBPACK_IMPORTED_MODULE_0__.Disposable.from(_configuration__WEBPACK_IMPORTED_MODULE_2__.configuration.onDidChange(this.onConfigurationChanged, this));
    this.onConfigurationChanged();
  }
  dispose() {
    var _a, _b;
    this.clearBlame();
    (_a = this._statusBarBlame) == null ? void 0 : _a.dispose();
    (_b = this._statusBarMode) == null ? void 0 : _b.dispose();
    _container__WEBPACK_IMPORTED_MODULE_4__.Container.lineTracker.stop(this);
    this._disposable.dispose();
  }
  onConfigurationChanged(e) {
    var _a, _b, _c, _d, _e, _f, _g, _h, _i;
    if (_configuration__WEBPACK_IMPORTED_MODULE_2__.configuration.changed(e, "mode")) {
      const mode = _container__WEBPACK_IMPORTED_MODULE_4__.Container.config.mode.active && _container__WEBPACK_IMPORTED_MODULE_4__.Container.config.mode.statusBar.enabled ? (_a = _container__WEBPACK_IMPORTED_MODULE_4__.Container.config.modes) == null ? void 0 : _a[_container__WEBPACK_IMPORTED_MODULE_4__.Container.config.mode.active] : void 0;
      if (mode == null ? void 0 : mode.statusBarItemName) {
        const alignment = _container__WEBPACK_IMPORTED_MODULE_4__.Container.config.mode.statusBar.alignment !== "left" ? vscode__WEBPACK_IMPORTED_MODULE_0__.StatusBarAlignment.Right : vscode__WEBPACK_IMPORTED_MODULE_0__.StatusBarAlignment.Left;
        if (_configuration__WEBPACK_IMPORTED_MODULE_2__.configuration.changed(e, "mode.statusBar.alignment")) {
          if (((_b = this._statusBarMode) == null ? void 0 : _b.alignment) !== alignment) {
            (_c = this._statusBarMode) == null ? void 0 : _c.dispose();
            this._statusBarMode = void 0;
          }
        }
        this._statusBarMode = (_d = this._statusBarMode) != null ? _d : vscode__WEBPACK_IMPORTED_MODULE_0__.window.createStatusBarItem("gitlens.mode", alignment, alignment === vscode__WEBPACK_IMPORTED_MODULE_0__.StatusBarAlignment.Right ? 999 : 1);
        this._statusBarMode.name = "GitLens Modes";
        this._statusBarMode.command = _commands__WEBPACK_IMPORTED_MODULE_1__.Commands.SwitchMode;
        this._statusBarMode.text = mode.statusBarItemName;
        this._statusBarMode.tooltip = "Switch GitLens Mode";
        this._statusBarMode.show();
      } else {
        (_e = this._statusBarMode) == null ? void 0 : _e.dispose();
        this._statusBarMode = void 0;
      }
    }
    if (!_configuration__WEBPACK_IMPORTED_MODULE_2__.configuration.changed(e, "statusBar"))
      return;
    if (_container__WEBPACK_IMPORTED_MODULE_4__.Container.config.statusBar.enabled) {
      const alignment = _container__WEBPACK_IMPORTED_MODULE_4__.Container.config.statusBar.alignment !== "left" ? vscode__WEBPACK_IMPORTED_MODULE_0__.StatusBarAlignment.Right : vscode__WEBPACK_IMPORTED_MODULE_0__.StatusBarAlignment.Left;
      if (_configuration__WEBPACK_IMPORTED_MODULE_2__.configuration.changed(e, "statusBar.alignment")) {
        if (((_f = this._statusBarBlame) == null ? void 0 : _f.alignment) !== alignment) {
          (_g = this._statusBarBlame) == null ? void 0 : _g.dispose();
          this._statusBarBlame = void 0;
        }
      }
      this._statusBarBlame = (_h = this._statusBarBlame) != null ? _h : vscode__WEBPACK_IMPORTED_MODULE_0__.window.createStatusBarItem("gitlens.blame", alignment, alignment === vscode__WEBPACK_IMPORTED_MODULE_0__.StatusBarAlignment.Right ? 1e3 : 0);
      this._statusBarBlame.name = "GitLens Current Line Blame";
      this._statusBarBlame.command = _container__WEBPACK_IMPORTED_MODULE_4__.Container.config.statusBar.command;
      if (_configuration__WEBPACK_IMPORTED_MODULE_2__.configuration.changed(e, "statusBar.enabled")) {
        _container__WEBPACK_IMPORTED_MODULE_4__.Container.lineTracker.start(this, _container__WEBPACK_IMPORTED_MODULE_4__.Container.lineTracker.onDidChangeActiveLines(this.onActiveLinesChanged, this));
      }
    } else if (_configuration__WEBPACK_IMPORTED_MODULE_2__.configuration.changed(e, "statusBar.enabled")) {
      _container__WEBPACK_IMPORTED_MODULE_4__.Container.lineTracker.stop(this);
      (_i = this._statusBarBlame) == null ? void 0 : _i.dispose();
      this._statusBarBlame = void 0;
    }
  }
  onActiveLinesChanged(e) {
    let clear = !(_container__WEBPACK_IMPORTED_MODULE_4__.Container.config.statusBar.reduceFlicker && e.reason === "selection" && (e.pending || e.selections != null));
    if (!e.pending && e.selections != null) {
      const state = _container__WEBPACK_IMPORTED_MODULE_4__.Container.lineTracker.getState(e.selections[0].active);
      if ((state == null ? void 0 : state.commit) != null) {
        void this.updateBlame(e.editor, state.commit);
        return;
      }
      clear = true;
    }
    if (clear) {
      this.clearBlame();
    } else if (this._statusBarBlame != null) {
      this._statusBarBlame.text = this._statusBarBlame.text.replace("$(git-commit)", "$(loading~spin)");
    }
  }
  clearBlame() {
    var _a, _b;
    (_a = this._cancellation) == null ? void 0 : _a.cancel();
    (_b = this._statusBarBlame) == null ? void 0 : _b.hide();
  }
  async updateBlame(editor, commit, options) {
    var _a, _b;
    const cfg = _container__WEBPACK_IMPORTED_MODULE_4__.Container.config.statusBar;
    if (!cfg.enabled || this._statusBarBlame == null || !(0,_constants__WEBPACK_IMPORTED_MODULE_3__.isTextEditor)(editor))
      return;
    const cc = _logger__WEBPACK_IMPORTED_MODULE_6__.Logger.getCorrelationContext();
    const timeout = 100;
    const [getBranchAndTagTips, pr] = await Promise.all([
      _git_git__WEBPACK_IMPORTED_MODULE_5__.CommitFormatter.has(cfg.format, "tips") ? _container__WEBPACK_IMPORTED_MODULE_4__.Container.git.getBranchesAndTagsTipsFn(commit.repoPath) : void 0,
      cfg.pullRequests.enabled && _git_git__WEBPACK_IMPORTED_MODULE_5__.CommitFormatter.has(cfg.format, "pullRequest", "pullRequestAgo", "pullRequestAgoOrDate", "pullRequestDate", "pullRequestState") && (options == null ? void 0 : options.pr) === void 0 ? this.getPullRequest(commit, { timeout }) : (_a = options == null ? void 0 : options.pr) != null ? _a : void 0
    ]);
    if (pr != null) {
      (_b = this._cancellation) == null ? void 0 : _b.cancel();
      this._cancellation = new vscode__WEBPACK_IMPORTED_MODULE_0__.CancellationTokenSource();
      void this.waitForPendingPullRequest(editor, commit, pr, this._cancellation.token, timeout, cc);
    }
    this._statusBarBlame.text = `$(git-commit) ${_git_git__WEBPACK_IMPORTED_MODULE_5__.CommitFormatter.fromTemplate(cfg.format, commit, {
      dateFormat: cfg.dateFormat === null ? _container__WEBPACK_IMPORTED_MODULE_4__.Container.config.defaultDateFormat : cfg.dateFormat,
      getBranchAndTagTips,
      messageTruncateAtNewLine: true,
      pullRequestOrRemote: pr,
      pullRequestPendingMessage: "PR $(loading~spin)"
    })}`;
    switch (cfg.command) {
      case _configuration__WEBPACK_IMPORTED_MODULE_2__.StatusBarCommand.CopyRemoteCommitUrl:
        this._statusBarBlame.tooltip = "Copy Remote Commit Url";
        break;
      case _configuration__WEBPACK_IMPORTED_MODULE_2__.StatusBarCommand.CopyRemoteFileUrl:
        this._statusBarBlame.command = _commands__WEBPACK_IMPORTED_MODULE_1__.Commands.CopyRemoteFileUrl;
        this._statusBarBlame.tooltip = "Copy Remote File Revision Url";
        break;
      case _configuration__WEBPACK_IMPORTED_MODULE_2__.StatusBarCommand.DiffWithPrevious:
        this._statusBarBlame.command = _commands__WEBPACK_IMPORTED_MODULE_1__.Commands.DiffLineWithPrevious;
        this._statusBarBlame.tooltip = "Open Line Changes with Previous Revision";
        break;
      case _configuration__WEBPACK_IMPORTED_MODULE_2__.StatusBarCommand.DiffWithWorking:
        this._statusBarBlame.command = _commands__WEBPACK_IMPORTED_MODULE_1__.Commands.DiffLineWithWorking;
        this._statusBarBlame.tooltip = "Open Line Changes with Working File";
        break;
      case _configuration__WEBPACK_IMPORTED_MODULE_2__.StatusBarCommand.OpenCommitOnRemote:
        this._statusBarBlame.tooltip = "Open Commit on Remote";
        break;
      case _configuration__WEBPACK_IMPORTED_MODULE_2__.StatusBarCommand.OpenFileOnRemote:
        this._statusBarBlame.tooltip = "Open Revision on Remote";
        break;
      case _configuration__WEBPACK_IMPORTED_MODULE_2__.StatusBarCommand.RevealCommitInView:
        this._statusBarBlame.tooltip = "Reveal Commit in the Side Bar";
        break;
      case _configuration__WEBPACK_IMPORTED_MODULE_2__.StatusBarCommand.ShowCommitsInView:
        this._statusBarBlame.tooltip = "Search for Commit";
        break;
      case _configuration__WEBPACK_IMPORTED_MODULE_2__.StatusBarCommand.ShowQuickCommitDetails:
        this._statusBarBlame.tooltip = "Show Commit";
        break;
      case _configuration__WEBPACK_IMPORTED_MODULE_2__.StatusBarCommand.ShowQuickCommitFileDetails:
        this._statusBarBlame.tooltip = "Show Commit (file)";
        break;
      case _configuration__WEBPACK_IMPORTED_MODULE_2__.StatusBarCommand.ShowQuickCurrentBranchHistory:
        this._statusBarBlame.tooltip = "Show Branch History";
        break;
      case _configuration__WEBPACK_IMPORTED_MODULE_2__.StatusBarCommand.ShowQuickFileHistory:
        this._statusBarBlame.tooltip = "Show File History";
        break;
      case _configuration__WEBPACK_IMPORTED_MODULE_2__.StatusBarCommand.ToggleCodeLens:
        this._statusBarBlame.tooltip = "Toggle Git CodeLens";
        break;
      case _configuration__WEBPACK_IMPORTED_MODULE_2__.StatusBarCommand.ToggleFileBlame:
        this._statusBarBlame.tooltip = "Toggle File Blame";
        break;
      case _configuration__WEBPACK_IMPORTED_MODULE_2__.StatusBarCommand.ToggleFileChanges: {
        this._statusBarBlame.command = (0,_commands__WEBPACK_IMPORTED_MODULE_1__.command)({
          title: "Toggle File Changes",
          command: _commands__WEBPACK_IMPORTED_MODULE_1__.Commands.ToggleFileChanges,
          arguments: [
            commit.uri,
            {
              type: _configuration__WEBPACK_IMPORTED_MODULE_2__.FileAnnotationType.Changes,
              context: { sha: commit.sha, only: false, selection: false }
            }
          ]
        });
        this._statusBarBlame.tooltip = "Toggle File Changes";
        break;
      }
      case _configuration__WEBPACK_IMPORTED_MODULE_2__.StatusBarCommand.ToggleFileChangesOnly: {
        this._statusBarBlame.command = (0,_commands__WEBPACK_IMPORTED_MODULE_1__.command)({
          title: "Toggle File Changes",
          command: _commands__WEBPACK_IMPORTED_MODULE_1__.Commands.ToggleFileChanges,
          arguments: [
            commit.uri,
            {
              type: _configuration__WEBPACK_IMPORTED_MODULE_2__.FileAnnotationType.Changes,
              context: { sha: commit.sha, only: true, selection: false }
            }
          ]
        });
        this._statusBarBlame.tooltip = "Toggle File Changes";
        break;
      }
      case _configuration__WEBPACK_IMPORTED_MODULE_2__.StatusBarCommand.ToggleFileHeatmap:
        this._statusBarBlame.tooltip = "Toggle File Heatmap";
        break;
    }
    this._statusBarBlame.show();
  }
  async getPullRequest(commit, { timeout } = {}) {
    const remote = await _container__WEBPACK_IMPORTED_MODULE_4__.Container.git.getRichRemoteProvider(commit.repoPath);
    if ((remote == null ? void 0 : remote.provider) == null)
      return void 0;
    const { provider } = remote;
    try {
      return await _container__WEBPACK_IMPORTED_MODULE_4__.Container.git.getPullRequestForCommit(commit.ref, provider, { timeout });
    } catch (ex) {
      return ex;
    }
  }
  async waitForPendingPullRequest(editor, commit, pr, cancellationToken, timeout, cc) {
    if (cancellationToken.isCancellationRequested || !(pr instanceof _system__WEBPACK_IMPORTED_MODULE_7__.Promises.CancellationError))
      return;
    _logger__WEBPACK_IMPORTED_MODULE_6__.Logger.debug(cc, `${_constants__WEBPACK_IMPORTED_MODULE_3__.GlyphChars.Dot} pull request query took too long (over ${timeout} ms)`);
    pr = await pr.promise;
    if (cancellationToken.isCancellationRequested)
      return;
    _logger__WEBPACK_IMPORTED_MODULE_6__.Logger.debug(cc, `${_constants__WEBPACK_IMPORTED_MODULE_3__.GlyphChars.Dot} pull request query completed; refreshing...`);
    void this.updateBlame(editor, commit, { pr: pr != null ? pr : null });
  }
}
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_7__.debug)({
    args: {
      0: (e) => {
        var _a, _b;
        return `editor=${(_a = e.editor) == null ? void 0 : _a.document.uri.toString(true)}, selections=${(_b = e.selections) == null ? void 0 : _b.map((s) => `[${s.anchor}-${s.active}]`).join(",")}, pending=${Boolean(e.pending)}, reason=${e.reason}`;
      }
    }
  })
], StatusBarController.prototype, "onActiveLinesChanged", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_7__.debug)({ args: false })
], StatusBarController.prototype, "updateBlame", 1);


/***/ }),

/***/ "./src/system.ts":
/*!***********************!*\
  !*** ./src/system.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Arrays": () => (/* reexport module object */ _system_array__WEBPACK_IMPORTED_MODULE_0__),
/* harmony export */   "Dates": () => (/* reexport module object */ _system_date__WEBPACK_IMPORTED_MODULE_1__),
/* harmony export */   "gate": () => (/* reexport safe */ _system_decorators_gate__WEBPACK_IMPORTED_MODULE_2__.gate),
/* harmony export */   "LogInstanceNameFn": () => (/* reexport safe */ _system_decorators_log__WEBPACK_IMPORTED_MODULE_3__.LogInstanceNameFn),
/* harmony export */   "debug": () => (/* reexport safe */ _system_decorators_log__WEBPACK_IMPORTED_MODULE_3__.debug),
/* harmony export */   "getCorrelationContext": () => (/* reexport safe */ _system_decorators_log__WEBPACK_IMPORTED_MODULE_3__.getCorrelationContext),
/* harmony export */   "getCorrelationId": () => (/* reexport safe */ _system_decorators_log__WEBPACK_IMPORTED_MODULE_3__.getCorrelationId),
/* harmony export */   "getNextCorrelationId": () => (/* reexport safe */ _system_decorators_log__WEBPACK_IMPORTED_MODULE_3__.getNextCorrelationId),
/* harmony export */   "log": () => (/* reexport safe */ _system_decorators_log__WEBPACK_IMPORTED_MODULE_3__.log),
/* harmony export */   "logName": () => (/* reexport safe */ _system_decorators_log__WEBPACK_IMPORTED_MODULE_3__.logName),
/* harmony export */   "memoize": () => (/* reexport safe */ _system_decorators_memoize__WEBPACK_IMPORTED_MODULE_4__.memoize),
/* harmony export */   "timeout": () => (/* reexport safe */ _system_decorators_timeout__WEBPACK_IMPORTED_MODULE_5__.timeout),
/* harmony export */   "Functions": () => (/* reexport module object */ _system_function__WEBPACK_IMPORTED_MODULE_6__),
/* harmony export */   "Iterables": () => (/* reexport module object */ _system_iterable__WEBPACK_IMPORTED_MODULE_7__),
/* harmony export */   "Objects": () => (/* reexport module object */ _system_object__WEBPACK_IMPORTED_MODULE_8__),
/* harmony export */   "Paths": () => (/* reexport module object */ _system_path__WEBPACK_IMPORTED_MODULE_9__),
/* harmony export */   "Promises": () => (/* reexport module object */ _system_promise__WEBPACK_IMPORTED_MODULE_10__),
/* harmony export */   "PathIterator": () => (/* reexport safe */ _system_searchTree__WEBPACK_IMPORTED_MODULE_11__.PathIterator),
/* harmony export */   "StringIterator": () => (/* reexport safe */ _system_searchTree__WEBPACK_IMPORTED_MODULE_11__.StringIterator),
/* harmony export */   "TernarySearchTree": () => (/* reexport safe */ _system_searchTree__WEBPACK_IMPORTED_MODULE_11__.TernarySearchTree),
/* harmony export */   "Stopwatch": () => (/* reexport safe */ _system_stopwatch__WEBPACK_IMPORTED_MODULE_12__.Stopwatch),
/* harmony export */   "Strings": () => (/* reexport module object */ _system_string__WEBPACK_IMPORTED_MODULE_13__),
/* harmony export */   "Versions": () => (/* reexport module object */ _system_version__WEBPACK_IMPORTED_MODULE_14__)
/* harmony export */ });
/* harmony import */ var _system_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./system/array */ "./src/system/array.ts");
/* harmony import */ var _system_date__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./system/date */ "./src/system/date.ts");
/* harmony import */ var _system_decorators_gate__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./system/decorators/gate */ "./src/system/decorators/gate.ts");
/* harmony import */ var _system_decorators_log__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./system/decorators/log */ "./src/system/decorators/log.ts");
/* harmony import */ var _system_decorators_memoize__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./system/decorators/memoize */ "./src/system/decorators/memoize.ts");
/* harmony import */ var _system_decorators_timeout__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./system/decorators/timeout */ "./src/system/decorators/timeout.ts");
/* harmony import */ var _system_function__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./system/function */ "./src/system/function.ts");
/* harmony import */ var _system_iterable__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./system/iterable */ "./src/system/iterable.ts");
/* harmony import */ var _system_object__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./system/object */ "./src/system/object.ts");
/* harmony import */ var _system_path__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./system/path */ "./src/system/path.ts");
/* harmony import */ var _system_promise__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./system/promise */ "./src/system/promise.ts");
/* harmony import */ var _system_searchTree__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./system/searchTree */ "./src/system/searchTree.ts");
/* harmony import */ var _system_stopwatch__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./system/stopwatch */ "./src/system/stopwatch.ts");
/* harmony import */ var _system_string__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./system/string */ "./src/system/string.ts");
/* harmony import */ var _system_version__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./system/version */ "./src/system/version.ts");



























/***/ }),

/***/ "./src/system/array.ts":
/*!*****************************!*\
  !*** ./src/system/array.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "findLastIndex": () => (/* reexport safe */ lodash_es__WEBPACK_IMPORTED_MODULE_0__.default),
/* harmony export */   "intersection": () => (/* reexport safe */ lodash_es__WEBPACK_IMPORTED_MODULE_1__.default),
/* harmony export */   "chunk": () => (/* binding */ chunk),
/* harmony export */   "countStringLength": () => (/* binding */ countStringLength),
/* harmony export */   "countUniques": () => (/* binding */ countUniques),
/* harmony export */   "filterMap": () => (/* binding */ filterMap),
/* harmony export */   "filterMapAsync": () => (/* binding */ filterMapAsync),
/* harmony export */   "groupBy": () => (/* binding */ groupBy),
/* harmony export */   "groupByMap": () => (/* binding */ groupByMap),
/* harmony export */   "groupByFilterMap": () => (/* binding */ groupByFilterMap),
/* harmony export */   "isStringArray": () => (/* binding */ isStringArray),
/* harmony export */   "makeHierarchical": () => (/* binding */ makeHierarchical),
/* harmony export */   "compactHierarchy": () => (/* binding */ compactHierarchy),
/* harmony export */   "uniqueBy": () => (/* binding */ uniqueBy)
/* harmony export */ });
/* harmony import */ var lodash_es__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash-es */ "./node_modules/lodash-es/findLastIndex.js");
/* harmony import */ var lodash_es__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash-es */ "./node_modules/lodash-es/intersection.js");


function chunk(source, size) {
  const chunks = [];
  let index = 0;
  while (index < source.length) {
    chunks.push(source.slice(index, size + index));
    index += size;
  }
  return chunks;
}
function countStringLength(source) {
  let length = 0;
  for (const s of source) {
    length += s.length;
  }
  return length;
}
function countUniques(source, accessor) {
  var _a;
  const uniqueCounts = Object.create(null);
  for (const item of source) {
    const value = accessor(item);
    uniqueCounts[value] = ((_a = uniqueCounts[value]) != null ? _a : 0) + 1;
  }
  return uniqueCounts;
}
function filterMap(source, predicateMapper) {
  let index = 0;
  return source.reduce((accumulator, current) => {
    const mapped = predicateMapper(current, index++);
    if (mapped != null) {
      accumulator.push(mapped);
    }
    return accumulator;
  }, []);
}
function filterMapAsync(source, predicateMapper) {
  let index = 0;
  return source.reduce(async (accumulator, current) => {
    const mapped = await predicateMapper(current, index++);
    if (mapped != null) {
      accumulator.push(mapped);
    }
    return accumulator;
  }, []);
}
function groupBy(source, groupingKey) {
  return source.reduce((groupings, current) => {
    const value = groupingKey(current);
    const group = groupings[value];
    if (group === void 0) {
      groupings[value] = [current];
    } else {
      group.push(current);
    }
    return groupings;
  }, Object.create(null));
}
function groupByMap(source, groupingKey) {
  return source.reduce((groupings, current) => {
    const value = groupingKey(current);
    const group = groupings.get(value);
    if (group === void 0) {
      groupings.set(value, [current]);
    } else {
      group.push(current);
    }
    return groupings;
  }, new Map());
}
function groupByFilterMap(source, groupingKey, predicateMapper) {
  return source.reduce((groupings, current) => {
    const mapped = predicateMapper(current);
    if (mapped != null) {
      const value = groupingKey(current);
      const group = groupings.get(value);
      if (group === void 0) {
        groupings.set(value, [mapped]);
      } else {
        group.push(mapped);
      }
    }
    return groupings;
  }, new Map());
}
function isStringArray(array) {
  return typeof array[0] === "string";
}
function makeHierarchical(values, splitPath, joinPath, compact = false, canCompact) {
  const seed = {
    name: "",
    relativePath: "",
    children: new Map(),
    descendants: []
  };
  let hierarchy = values.reduce((root, value) => {
    let folder = root;
    let relativePath = "";
    for (const folderName of splitPath(value)) {
      relativePath = joinPath(relativePath, folderName);
      if (folder.children === void 0) {
        folder.children = new Map();
      }
      let f = folder.children.get(folderName);
      if (f === void 0) {
        f = {
          name: folderName,
          relativePath,
          parent: folder,
          children: void 0,
          descendants: void 0
        };
        folder.children.set(folderName, f);
      }
      if (folder.descendants === void 0) {
        folder.descendants = [];
      }
      folder.descendants.push(value);
      folder = f;
    }
    folder.value = value;
    return root;
  }, seed);
  if (compact) {
    hierarchy = compactHierarchy(hierarchy, joinPath, true, canCompact);
  }
  return hierarchy;
}
function compactHierarchy(root, joinPath, isRoot = true, canCompact) {
  if (root.children === void 0)
    return root;
  const children = [...root.children.values()];
  for (const child of children) {
    compactHierarchy(child, joinPath, false, canCompact);
  }
  if (!isRoot && children.length === 1) {
    const child = children[0];
    if (child.value === void 0 || (canCompact == null ? void 0 : canCompact(child.value))) {
      root.name = joinPath(root.name, child.name);
      root.relativePath = child.relativePath;
      root.children = child.children;
      root.descendants = child.descendants;
      root.value = child.value;
    }
  }
  return root;
}
function uniqueBy(source, uniqueKey, onDeduplicate) {
  const map = source.reduce((uniques, current) => {
    const value = uniqueKey(current);
    const original = uniques.get(value);
    if (original === void 0) {
      uniques.set(value, current);
    } else {
      const updated = onDeduplicate(original, current);
      if (updated !== void 0) {
        uniques.set(value, updated);
      }
    }
    return uniques;
  }, new Map());
  return [...map.values()];
}


/***/ }),

/***/ "./src/system/date.ts":
/*!****************************!*\
  !*** ./src/system/date.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "MillisecondsPerMinute": () => (/* binding */ MillisecondsPerMinute),
/* harmony export */   "MillisecondsPerHour": () => (/* binding */ MillisecondsPerHour),
/* harmony export */   "MillisecondsPerDay": () => (/* binding */ MillisecondsPerDay),
/* harmony export */   "getFormatter": () => (/* binding */ getFormatter)
/* harmony export */ });
/* harmony import */ var dayjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! dayjs */ "./node_modules/dayjs/dayjs.min.js");
/* harmony import */ var dayjs__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(dayjs__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var dayjs_plugin_advancedFormat__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! dayjs/plugin/advancedFormat */ "./node_modules/dayjs/plugin/advancedFormat.js");
/* harmony import */ var dayjs_plugin_advancedFormat__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(dayjs_plugin_advancedFormat__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var dayjs_plugin_relativeTime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! dayjs/plugin/relativeTime */ "./node_modules/dayjs/plugin/relativeTime.js");
/* harmony import */ var dayjs_plugin_relativeTime__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(dayjs_plugin_relativeTime__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var dayjs_plugin_updateLocale__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! dayjs/plugin/updateLocale */ "./node_modules/dayjs/plugin/updateLocale.js");
/* harmony import */ var dayjs_plugin_updateLocale__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(dayjs_plugin_updateLocale__WEBPACK_IMPORTED_MODULE_3__);





dayjs__WEBPACK_IMPORTED_MODULE_0___default().extend((dayjs_plugin_advancedFormat__WEBPACK_IMPORTED_MODULE_1___default()));
dayjs__WEBPACK_IMPORTED_MODULE_0___default().extend((dayjs_plugin_relativeTime__WEBPACK_IMPORTED_MODULE_2___default()), {
  thresholds: [
    { l: "s", r: 44, d: "second" },
    { l: "m", r: 89 },
    { l: "mm", r: 44, d: "minute" },
    { l: "h", r: 89 },
    { l: "hh", r: 21, d: "hour" },
    { l: "d", r: 35 },
    { l: "dd", r: 6, d: "day" },
    { l: "w", r: 7 },
    { l: "ww", r: 3, d: "week" },
    { l: "M", r: 4 },
    { l: "MM", r: 10, d: "month" },
    { l: "y", r: 17 },
    { l: "yy", d: "year" }
  ]
});
dayjs__WEBPACK_IMPORTED_MODULE_0___default().extend((dayjs_plugin_updateLocale__WEBPACK_IMPORTED_MODULE_3___default()));
dayjs__WEBPACK_IMPORTED_MODULE_0___default().updateLocale("en", {
  relativeTime: {
    future: "in %s",
    past: "%s ago",
    s: "seconds",
    m: "a minute",
    mm: "%d minutes",
    h: "an hour",
    hh: "%d hours",
    d: "a day",
    dd: "%d days",
    w: "a week",
    ww: "%d weeks",
    M: "a month",
    MM: "%d months",
    y: "a year",
    yy: "%d years"
  }
});
const shortLocale = {
  name: "en-short",
  weekdays: "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),
  months: "January_February_March_April_May_June_July_August_September_October_November_December".split("_"),
  weekStart: 1,
  weekdaysShort: "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),
  monthsShort: "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"),
  weekdaysMin: "Su_Mo_Tu_We_Th_Fr_Sa".split("_"),
  relativeTime: {
    future: "in %s",
    past: "%s",
    s: "now",
    m: "1m",
    mm: "%dm",
    h: "1h",
    hh: "%dh",
    d: "1d",
    dd: "%dd",
    w: "1wk",
    ww: "%dwk",
    M: "1mo",
    MM: "%dmo",
    y: "1yr",
    yy: "%dyr"
  },
  formats: {
    LTS: "h:mm:ss A",
    LT: "h:mm A",
    L: "MM/DD/YYYY",
    LL: "MMMM D, YYYY",
    LLL: "MMMM D, YYYY h:mm A",
    LLLL: "dddd, MMMM D, YYYY h:mm A"
  },
  ordinal: (n) => {
    const s = ["th", "st", "nd", "rd"];
    const v = n % 100;
    return `[${n}${s[(v - 20) % 10] || s[v] || s[0]}]`;
  }
};
dayjs__WEBPACK_IMPORTED_MODULE_0___default().locale("en-short", shortLocale, true);
const MillisecondsPerMinute = 6e4;
const MillisecondsPerHour = 36e5;
const MillisecondsPerDay = 864e5;
function getFormatter(date) {
  const formatter = dayjs__WEBPACK_IMPORTED_MODULE_0___default()(date);
  return {
    fromNow: function(locale) {
      return (locale ? formatter.locale(locale) : formatter).fromNow();
    },
    format: function(format) {
      return formatter.format(format);
    }
  };
}


/***/ }),

/***/ "./src/system/decorators/gate.ts":
/*!***************************************!*\
  !*** ./src/system/decorators/gate.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "gate": () => (/* binding */ gate)
/* harmony export */ });
/* harmony import */ var _promise__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../promise */ "./src/system/promise.ts");


const emptyStr = "";
function defaultResolver(...args) {
  if (args.length === 1) {
    const arg0 = args[0];
    if (arg0 == null)
      return emptyStr;
    if (typeof arg0 === "string")
      return arg0;
    if (typeof arg0 === "number" || typeof arg0 === "boolean") {
      return String(arg0);
    }
    return JSON.stringify(arg0);
  }
  return JSON.stringify(args);
}
function gate(resolver) {
  return (target, key, descriptor) => {
    let fn;
    if (typeof descriptor.value === "function") {
      fn = descriptor.value;
    } else if (typeof descriptor.get === "function") {
      fn = descriptor.get;
    }
    if (fn == null)
      throw new Error("Not supported");
    const gateKey = `$gate$${key}`;
    descriptor.value = function(...args) {
      const prop = args.length === 0 ? gateKey : `${gateKey}$${(resolver != null ? resolver : defaultResolver)(...args)}`;
      if (!Object.prototype.hasOwnProperty.call(this, prop)) {
        Object.defineProperty(this, prop, {
          configurable: false,
          enumerable: false,
          writable: true,
          value: void 0
        });
      }
      let promise = this[prop];
      if (promise === void 0) {
        let result;
        try {
          result = fn.apply(this, args);
          if (result == null || !(0,_promise__WEBPACK_IMPORTED_MODULE_0__.is)(result)) {
            return result;
          }
          this[prop] = promise = result.then((r) => {
            this[prop] = void 0;
            return r;
          }).catch((ex) => {
            this[prop] = void 0;
            throw ex;
          });
        } catch (ex) {
          this[prop] = void 0;
          throw ex;
        }
      }
      return promise;
    };
  };
}


/***/ }),

/***/ "./src/system/decorators/log.ts":
/*!**************************************!*\
  !*** ./src/system/decorators/log.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getCorrelationContext": () => (/* binding */ getCorrelationContext),
/* harmony export */   "getCorrelationId": () => (/* binding */ getCorrelationId),
/* harmony export */   "getNextCorrelationId": () => (/* binding */ getNextCorrelationId),
/* harmony export */   "LogInstanceNameFn": () => (/* binding */ LogInstanceNameFn),
/* harmony export */   "logName": () => (/* binding */ logName),
/* harmony export */   "debug": () => (/* binding */ debug),
/* harmony export */   "log": () => (/* binding */ log)
/* harmony export */ });
/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../logger */ "./src/logger.ts");
/* harmony import */ var _array__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../array */ "./src/system/array.ts");
/* harmony import */ var _function__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../function */ "./src/system/function.ts");
/* harmony import */ var _promise__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../promise */ "./src/system/promise.ts");
/* harmony import */ var _string__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../string */ "./src/system/string.ts");






const emptyStr = "";
const correlationContext = new Map();
let correlationCounter = 0;
function getCorrelationContext() {
  return correlationContext.get(correlationCounter);
}
function getCorrelationId() {
  return correlationCounter;
}
function getNextCorrelationId() {
  if (correlationCounter === Number.MAX_SAFE_INTEGER) {
    correlationCounter = 0;
  }
  return ++correlationCounter;
}
function clearCorrelationContext(correlationId) {
  correlationContext.delete(correlationId);
}
function setCorrelationContext(correlationId, context) {
  correlationContext.set(correlationId, context);
}
const LogInstanceNameFn = Symbol("logInstanceNameFn");
function logName(fn) {
  return (target) => {
    target[LogInstanceNameFn] = fn;
  };
}
function debug(options = { timed: true }) {
  return log({ debug: true, ...options });
}
function log(options = { timed: true }) {
  options = { timed: true, ...options };
  const logFn = options.debug ? _logger__WEBPACK_IMPORTED_MODULE_0__.Logger.debug.bind(_logger__WEBPACK_IMPORTED_MODULE_0__.Logger) : _logger__WEBPACK_IMPORTED_MODULE_0__.Logger.log.bind(_logger__WEBPACK_IMPORTED_MODULE_0__.Logger);
  return (target, key, descriptor) => {
    let fn;
    let fnKey;
    if (typeof descriptor.value === "function") {
      fn = descriptor.value;
      fnKey = "value";
    } else if (typeof descriptor.get === "function") {
      fn = descriptor.get;
      fnKey = "get";
    }
    if (fn == null || fnKey == null)
      throw new Error("Not supported");
    const parameters = (0,_function__WEBPACK_IMPORTED_MODULE_2__.getParameters)(fn);
    descriptor[fnKey] = function(...args) {
      var _a;
      const correlationId = getNextCorrelationId();
      if (!_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.isDebugging && _logger__WEBPACK_IMPORTED_MODULE_0__.Logger.level !== _logger__WEBPACK_IMPORTED_MODULE_0__.TraceLevel.Debug && !(_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.level === _logger__WEBPACK_IMPORTED_MODULE_0__.TraceLevel.Verbose && !options.debug) || typeof options.condition === "function" && !options.condition(...args)) {
        return fn.apply(this, args);
      }
      let instanceName;
      if (this != null) {
        instanceName = _logger__WEBPACK_IMPORTED_MODULE_0__.Logger.toLoggableName(this);
        if ((_a = this.constructor) == null ? void 0 : _a[LogInstanceNameFn]) {
          instanceName = target.constructor[LogInstanceNameFn](this, instanceName);
        }
      } else {
        instanceName = emptyStr;
      }
      let { correlate } = options;
      if (!correlate && options.timed) {
        correlate = true;
      }
      let prefix = `${correlate ? `[${correlationId.toString(16)}] ` : emptyStr}${instanceName ? `${instanceName}.` : emptyStr}${key}`;
      if (options.prefix != null) {
        prefix = options.prefix({
          id: correlationId,
          instance: this,
          instanceName,
          name: key,
          prefix
        }, ...args);
      }
      let correlationContext2;
      if (correlate) {
        correlationContext2 = { correlationId, prefix };
        setCorrelationContext(correlationId, correlationContext2);
      }
      const enter = options.enter != null ? options.enter(...args) : emptyStr;
      let loggableParams;
      if (options.args === false || args.length === 0) {
        loggableParams = emptyStr;
        if (!options.singleLine) {
          logFn(`${prefix}${enter}`);
        }
      } else {
        const argFns = typeof options.args === "object" ? options.args : void 0;
        let argFn;
        let loggable;
        loggableParams = (0,_array__WEBPACK_IMPORTED_MODULE_1__.filterMap)(args, (v, index) => {
          const p = parameters[index];
          argFn = argFns !== void 0 ? argFns[index] : void 0;
          if (argFn !== void 0) {
            loggable = argFn(v);
            if (loggable === false)
              return void 0;
          } else {
            loggable = _logger__WEBPACK_IMPORTED_MODULE_0__.Logger.toLoggable(v, options.sanitize);
          }
          return p ? `${p}=${loggable}` : loggable;
        }).join(", ");
        if (!options.singleLine) {
          if (!options.debug) {
            _logger__WEBPACK_IMPORTED_MODULE_0__.Logger.logWithDebugParams(`${prefix}${enter}`, loggableParams);
          } else {
            logFn(`${prefix}${enter}`, loggableParams);
          }
        }
      }
      if (options.singleLine || options.timed || options.exit != null) {
        const start = options.timed ? process.hrtime() : void 0;
        const logError = (ex) => {
          const timing = start !== void 0 ? ` \u2022 ${(0,_string__WEBPACK_IMPORTED_MODULE_4__.getDurationMilliseconds)(start)} ms` : emptyStr;
          if (options.singleLine) {
            _logger__WEBPACK_IMPORTED_MODULE_0__.Logger.error(ex, `${prefix}${enter}`, `failed${(correlationContext2 == null ? void 0 : correlationContext2.exitDetails) ? correlationContext2.exitDetails : emptyStr}${timing}`, loggableParams);
          } else {
            _logger__WEBPACK_IMPORTED_MODULE_0__.Logger.error(ex, prefix, `failed${(correlationContext2 == null ? void 0 : correlationContext2.exitDetails) ? correlationContext2.exitDetails : emptyStr}${timing}`);
          }
          if (correlate) {
            clearCorrelationContext(correlationId);
          }
        };
        let result;
        try {
          result = fn.apply(this, args);
        } catch (ex) {
          logError(ex);
          throw ex;
        }
        const logResult = (r) => {
          const timing = start !== void 0 ? ` \u2022 ${(0,_string__WEBPACK_IMPORTED_MODULE_4__.getDurationMilliseconds)(start)} ms` : emptyStr;
          let exit;
          if (options.exit != null) {
            try {
              exit = options.exit(r);
            } catch (ex) {
              exit = `@log.exit error: ${ex}`;
            }
          } else {
            exit = "completed";
          }
          if (options.singleLine) {
            if (!options.debug) {
              _logger__WEBPACK_IMPORTED_MODULE_0__.Logger.logWithDebugParams(`${prefix}${enter} ${exit}${(correlationContext2 == null ? void 0 : correlationContext2.exitDetails) ? correlationContext2.exitDetails : emptyStr}${timing}`, loggableParams);
            } else {
              logFn(`${prefix}${enter} ${exit}${(correlationContext2 == null ? void 0 : correlationContext2.exitDetails) ? correlationContext2.exitDetails : emptyStr}${timing}`, loggableParams);
            }
          } else {
            logFn(`${prefix} ${exit}${(correlationContext2 == null ? void 0 : correlationContext2.exitDetails) ? correlationContext2.exitDetails : emptyStr}${timing}`);
          }
          if (correlate) {
            clearCorrelationContext(correlationId);
          }
        };
        if (result != null && (0,_promise__WEBPACK_IMPORTED_MODULE_3__.is)(result)) {
          const promise = result.then(logResult);
          promise.catch(logError);
        } else {
          logResult(result);
        }
        return result;
      }
      return fn.apply(this, args);
    };
  };
}


/***/ }),

/***/ "./src/system/decorators/memoize.ts":
/*!******************************************!*\
  !*** ./src/system/decorators/memoize.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "memoize": () => (/* binding */ memoize)
/* harmony export */ });

const emptyStr = "";
function defaultResolver(...args) {
  if (args.length === 1) {
    const arg0 = args[0];
    if (arg0 == null)
      return emptyStr;
    if (typeof arg0 === "string")
      return arg0;
    if (typeof arg0 === "number" || typeof arg0 === "boolean") {
      return String(arg0);
    }
    return JSON.stringify(arg0);
  }
  return JSON.stringify(args);
}
function memoize(resolver) {
  return (target, key, descriptor) => {
    let fn;
    let fnKey;
    if (typeof descriptor.value === "function") {
      fn = descriptor.value;
      fnKey = "value";
    } else if (typeof descriptor.get === "function") {
      fn = descriptor.get;
      fnKey = "get";
    } else {
      throw new Error("Not supported");
    }
    if (fn == null)
      throw new Error("Not supported");
    const memoizeKey = `$memoize$${key}`;
    let result;
    descriptor[fnKey] = function(...args) {
      const prop = fnKey === "get" || args.length === 0 ? memoizeKey : `${memoizeKey}$${(resolver != null ? resolver : defaultResolver)(...args)}`;
      if (Object.prototype.hasOwnProperty.call(this, prop)) {
        result = this[prop];
        return result;
      }
      result = fn.apply(this, args);
      Object.defineProperty(this, prop, {
        configurable: false,
        enumerable: false,
        writable: false,
        value: result
      });
      return result;
    };
  };
}


/***/ }),

/***/ "./src/system/decorators/timeout.ts":
/*!******************************************!*\
  !*** ./src/system/decorators/timeout.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "timeout": () => (/* binding */ timeout)
/* harmony export */ });
/* harmony import */ var _promise__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../promise */ "./src/system/promise.ts");


function timeout(timeoutOrTimeoutFromLastArg, defaultTimeout) {
  let timeout2;
  let timeoutFromLastArg = false;
  if (typeof timeoutOrTimeoutFromLastArg === "boolean") {
    timeoutFromLastArg = timeoutOrTimeoutFromLastArg;
  } else {
    timeout2 = timeoutOrTimeoutFromLastArg;
  }
  return (target, key, descriptor) => {
    let fn;
    if (typeof descriptor.value === "function") {
      fn = descriptor.value;
    }
    if (fn == null)
      throw new Error("Not supported");
    descriptor.value = function(...args) {
      if (timeoutFromLastArg) {
        const lastArg = args[args.length - 1];
        if (lastArg != null && typeof lastArg === "number") {
          timeout2 = lastArg;
        } else {
          timeout2 = defaultTimeout;
        }
      }
      const result = fn == null ? void 0 : fn.apply(this, args);
      if (timeout2 == null || timeout2 < 1 || !(0,_promise__WEBPACK_IMPORTED_MODULE_0__.is)(result))
        return result;
      return (0,_promise__WEBPACK_IMPORTED_MODULE_0__.cancellable)(result, timeout2, { onDidCancel: (resolve) => resolve(void 0) });
    };
  };
}


/***/ }),

/***/ "./src/system/function.ts":
/*!********************************!*\
  !*** ./src/system/function.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "cachedOnce": () => (/* binding */ cachedOnce),
/* harmony export */   "debounce": () => (/* binding */ debounce),
/* harmony export */   "getParameters": () => (/* binding */ getParameters),
/* harmony export */   "is": () => (/* binding */ is),
/* harmony export */   "once": () => (/* binding */ once),
/* harmony export */   "propOf": () => (/* binding */ propOf),
/* harmony export */   "interval": () => (/* binding */ interval),
/* harmony export */   "progress": () => (/* binding */ progress),
/* harmony export */   "wait": () => (/* binding */ wait),
/* harmony export */   "waitUntil": () => (/* binding */ waitUntil)
/* harmony export */ });
/* harmony import */ var lodash_es__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash-es */ "./node_modules/lodash-es/debounce.js");
/* harmony import */ var lodash_es__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash-es */ "./node_modules/lodash-es/once.js");


function cachedOnce(fn, seed) {
  let cached = seed;
  return (...args) => {
    if (cached !== void 0) {
      const promise = Promise.resolve(cached);
      cached = void 0;
      return promise;
    }
    return fn(...args);
  };
}
function debounce(fn, wait2, options) {
  const { track, ...opts } = {
    track: false,
    ...options != null ? options : {}
  };
  if (track !== true)
    return (0,lodash_es__WEBPACK_IMPORTED_MODULE_0__.default)(fn, wait2, opts);
  let pending = false;
  const debounced = (0,lodash_es__WEBPACK_IMPORTED_MODULE_0__.default)(function(...args) {
    pending = false;
    return fn.apply(this, args);
  }, wait2, options);
  const tracked = function(...args) {
    pending = true;
    return debounced.apply(this, args);
  };
  tracked.pending = function() {
    return pending;
  };
  tracked.cancel = function() {
    return debounced.cancel.apply(debounced);
  };
  tracked.flush = function() {
    return debounced.flush.apply(debounced);
  };
  return tracked;
}
const comma = ",";
const emptyStr = "";
const equals = "=";
const openBrace = "{";
const openParen = "(";
const closeParen = ")";
const fnBodyRegex = /\(([\s\S]*)\)/;
const fnBodyStripCommentsRegex = /(\/\*([\s\S]*?)\*\/|([^:]|^)\/\/(.*)$)/gm;
const fnBodyStripParamDefaultValueRegex = /\s?=.*$/;
function getParameters(fn) {
  if (typeof fn !== "function")
    throw new Error("Not supported");
  if (fn.length === 0)
    return [];
  let fnBody = Function.prototype.toString.call(fn);
  fnBody = fnBody.replace(fnBodyStripCommentsRegex, emptyStr) || fnBody;
  fnBody = fnBody.slice(0, fnBody.indexOf(openBrace));
  let open = fnBody.indexOf(openParen);
  let close = fnBody.indexOf(closeParen);
  open = open >= 0 ? open + 1 : 0;
  close = close > 0 ? close : fnBody.indexOf(equals);
  fnBody = fnBody.slice(open, close);
  fnBody = `(${fnBody})`;
  const match = fnBodyRegex.exec(fnBody);
  return match != null ? match[1].split(comma).map((param) => param.trim().replace(fnBodyStripParamDefaultValueRegex, emptyStr)) : [];
}
function is(o, propOrMatcher, value) {
  if (propOrMatcher == null)
    return o != null;
  if (typeof propOrMatcher === "function")
    return propOrMatcher(o);
  return value === void 0 ? o[propOrMatcher] !== void 0 : o[propOrMatcher] === value;
}
function once(fn) {
  return (0,lodash_es__WEBPACK_IMPORTED_MODULE_1__.default)(fn);
}
function propOf(o, key) {
  const propOfCore = (o2, key2) => {
    const value = propOfCore.value === void 0 ? key2 : `${propOfCore.value}.${key2}`;
    propOfCore.value = value;
    const fn = (k) => propOfCore(o2[key2], k);
    return Object.assign(fn, { value });
  };
  return propOfCore(o, key);
}
function interval(fn, ms) {
  let timer;
  const disposable = {
    dispose: () => {
      if (timer !== void 0) {
        clearInterval(timer);
        timer = void 0;
      }
    }
  };
  timer = __webpack_require__.g.setInterval(fn, ms);
  return disposable;
}
function progress(promise, intervalMs, onProgress) {
  return new Promise((resolve, reject) => {
    let timer;
    timer = __webpack_require__.g.setInterval(() => {
      if (onProgress()) {
        if (timer !== void 0) {
          clearInterval(timer);
          timer = void 0;
        }
      }
    }, intervalMs);
    promise.then(() => {
      if (timer !== void 0) {
        clearInterval(timer);
        timer = void 0;
      }
      resolve(promise);
    }, (ex) => {
      if (timer !== void 0) {
        clearInterval(timer);
        timer = void 0;
      }
      reject(ex);
    });
  });
}
async function wait(ms) {
  await new Promise((resolve) => setTimeout(resolve, ms));
}
async function waitUntil(fn, timeout) {
  const max = Math.round(timeout / 100);
  let counter = 0;
  while (true) {
    if (fn())
      return true;
    if (counter > max)
      return false;
    await wait(100);
    counter++;
  }
}


/***/ }),

/***/ "./src/system/iterable.ts":
/*!********************************!*\
  !*** ./src/system/iterable.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "chunk": () => (/* binding */ chunk),
/* harmony export */   "chunkByStringLength": () => (/* binding */ chunkByStringLength),
/* harmony export */   "count": () => (/* binding */ count),
/* harmony export */   "every": () => (/* binding */ every),
/* harmony export */   "filter": () => (/* binding */ filter),
/* harmony export */   "filterMap": () => (/* binding */ filterMap),
/* harmony export */   "forEach": () => (/* binding */ forEach),
/* harmony export */   "find": () => (/* binding */ find),
/* harmony export */   "first": () => (/* binding */ first),
/* harmony export */   "flatMap": () => (/* binding */ flatMap),
/* harmony export */   "has": () => (/* binding */ has),
/* harmony export */   "isIterable": () => (/* binding */ isIterable),
/* harmony export */   "join": () => (/* binding */ join),
/* harmony export */   "last": () => (/* binding */ last),
/* harmony export */   "map": () => (/* binding */ map),
/* harmony export */   "next": () => (/* binding */ next),
/* harmony export */   "skip": () => (/* binding */ skip),
/* harmony export */   "some": () => (/* binding */ some),
/* harmony export */   "take": () => (/* binding */ take),
/* harmony export */   "union": () => (/* binding */ union)
/* harmony export */ });

function* chunk(source, size) {
  let chunk2 = [];
  for (const item of source) {
    if (chunk2.length < size) {
      chunk2.push(item);
      continue;
    }
    yield chunk2;
    chunk2 = [];
  }
  if (chunk2.length > 0) {
    yield chunk2;
  }
}
function* chunkByStringLength(source, maxLength) {
  let chunk2 = [];
  let chunkLength = 0;
  for (const item of source) {
    let length = chunkLength + item.length;
    if (length > maxLength && chunk2.length > 0) {
      yield chunk2;
      chunk2 = [];
      length = item.length;
    }
    chunk2.push(item);
    chunkLength = length;
  }
  if (chunk2.length > 0) {
    yield chunk2;
  }
}
function count(source, predicate) {
  let count2 = 0;
  let next2;
  while (true) {
    next2 = source.next();
    if (next2.done)
      break;
    if (predicate === void 0 || predicate(next2.value)) {
      count2++;
    }
  }
  return count2;
}
function every(source, predicate) {
  for (const item of source) {
    if (!predicate(item))
      return false;
  }
  return true;
}
function* filter(source, predicate) {
  if (predicate === void 0) {
    for (const item of source) {
      if (item != null)
        yield item;
    }
  } else {
    for (const item of source) {
      if (predicate(item))
        yield item;
    }
  }
}
function* filterMap(source, predicateMapper) {
  for (const item of source) {
    const mapped = predicateMapper(item);
    if (mapped != null)
      yield mapped;
  }
}
function forEach(source, fn) {
  let i = 0;
  for (const item of source) {
    fn(item, i);
    i++;
  }
}
function find(source, predicate) {
  for (const item of source) {
    if (predicate(item))
      return item;
  }
  return null;
}
function first(source) {
  return source[Symbol.iterator]().next().value;
}
function* flatMap(source, mapper) {
  for (const item of source) {
    yield* mapper(item);
  }
}
function has(source, item) {
  return some(source, (i) => i === item);
}
function isIterable(source) {
  return typeof source[Symbol.iterator] === "function";
}
function join(source, separator) {
  let value = "";
  const iterator = source[Symbol.iterator]();
  let next2 = iterator.next();
  if (next2.done)
    return value;
  while (true) {
    const s = next2.value.toString();
    next2 = iterator.next();
    if (next2.done) {
      value += s;
      break;
    }
    value += `${s}${separator}`;
  }
  return value;
}
function last(source) {
  let item;
  for (item of source) {
  }
  return item;
}
function* map(source, mapper) {
  for (const item of source) {
    yield mapper(item);
  }
}
function next(source) {
  return source.next().value;
}
function* skip(source, count2) {
  let i = 0;
  for (const item of source) {
    if (i >= count2)
      yield item;
    i++;
  }
}
function some(source, predicate) {
  for (const item of source) {
    if (predicate(item))
      return true;
  }
  return false;
}
function* take(source, count2) {
  if (count2 > 0) {
    let i = 0;
    for (const item of source) {
      yield item;
      i++;
      if (i >= count2)
        break;
    }
  }
}
function* union(...sources) {
  for (const source of sources) {
    for (const item of source) {
      yield item;
    }
  }
}


/***/ }),

/***/ "./src/system/object.ts":
/*!******************************!*\
  !*** ./src/system/object.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "areEqual": () => (/* reexport safe */ lodash_es__WEBPACK_IMPORTED_MODULE_0__.default),
/* harmony export */   "flatten": () => (/* binding */ flatten),
/* harmony export */   "paths": () => (/* binding */ paths)
/* harmony export */ });
/* harmony import */ var lodash_es__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash-es */ "./node_modules/lodash-es/isEqual.js");


function flatten(o, prefix = "", stringify = false) {
  const flattened = Object.create(null);
  _flatten(flattened, prefix, o, stringify);
  return flattened;
}
function _flatten(flattened, key, value, stringify = false) {
  if (Object(value) !== value) {
    if (stringify) {
      if (value == null) {
        flattened[key] = null;
      } else if (typeof value === "string") {
        flattened[key] = value;
      } else {
        flattened[key] = JSON.stringify(value);
      }
    } else {
      flattened[key] = value;
    }
  } else if (Array.isArray(value)) {
    const len = value.length;
    for (let i = 0; i < len; i++) {
      _flatten(flattened, `${key}[${i}]`, value[i], stringify);
    }
    if (len === 0) {
      flattened[key] = null;
    }
  } else {
    let isEmpty = true;
    for (const p in value) {
      isEmpty = false;
      _flatten(flattened, key ? `${key}.${p}` : p, value[p], stringify);
    }
    if (isEmpty && key) {
      flattened[key] = null;
    }
  }
}
function paths(o, path) {
  const results = [];
  for (const key in o) {
    const child = o[key];
    if (typeof child === "object") {
      results.push(...paths(child, path === void 0 ? key : `${path}.${key}`));
    } else {
      results.push(path === void 0 ? key : `${path}.${key}`);
    }
  }
  return results;
}


/***/ }),

/***/ "./src/system/path.ts":
/*!****************************!*\
  !*** ./src/system/path.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "splitPath": () => (/* binding */ splitPath)
/* harmony export */ });
/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! path */ "./node_modules/path-browserify/index.js");
/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _string__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./string */ "./src/system/string.ts");



const slash = "/";
function splitPath(fileName, repoPath, extract = true) {
  if (repoPath) {
    fileName = (0,_string__WEBPACK_IMPORTED_MODULE_1__.normalizePath)(fileName);
    repoPath = (0,_string__WEBPACK_IMPORTED_MODULE_1__.normalizePath)(repoPath);
    const normalizedRepoPath = (repoPath.endsWith(slash) ? repoPath : `${repoPath}/`).toLowerCase();
    if (fileName.toLowerCase().startsWith(normalizedRepoPath)) {
      fileName = fileName.substring(normalizedRepoPath.length);
    }
  } else {
    repoPath = (0,_string__WEBPACK_IMPORTED_MODULE_1__.normalizePath)(extract ? path__WEBPACK_IMPORTED_MODULE_0__.dirname(fileName) : repoPath);
    fileName = (0,_string__WEBPACK_IMPORTED_MODULE_1__.normalizePath)(extract ? path__WEBPACK_IMPORTED_MODULE_0__.basename(fileName) : fileName);
  }
  return [fileName, repoPath];
}


/***/ }),

/***/ "./src/system/promise.ts":
/*!*******************************!*\
  !*** ./src/system/promise.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CancellationError": () => (/* binding */ CancellationError),
/* harmony export */   "CancellationErrorWithId": () => (/* binding */ CancellationErrorWithId),
/* harmony export */   "cancellable": () => (/* binding */ cancellable),
/* harmony export */   "first": () => (/* binding */ first),
/* harmony export */   "is": () => (/* binding */ is),
/* harmony export */   "raceAll": () => (/* binding */ raceAll)
/* harmony export */ });
/* harmony import */ var _iterable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./iterable */ "./src/system/iterable.ts");


class CancellationError extends Error {
  constructor(promise, message) {
    super(message);
    this.promise = promise;
  }
}
class CancellationErrorWithId extends CancellationError {
  constructor(id, promise, message) {
    super(promise, message);
    this.id = id;
  }
}
function cancellable(promise, timeoutOrToken, options = {}) {
  if (timeoutOrToken == null)
    return promise;
  return new Promise((resolve, reject) => {
    let fulfilled = false;
    let timer;
    if (typeof timeoutOrToken === "number") {
      timer = __webpack_require__.g.setTimeout(() => {
        var _a;
        if (typeof options.onDidCancel === "function") {
          options.onDidCancel(resolve, reject);
        } else {
          reject(new CancellationError(promise, (_a = options.cancelMessage) != null ? _a : "TIMED OUT"));
        }
      }, timeoutOrToken);
    } else {
      timeoutOrToken.onCancellationRequested(() => {
        var _a;
        if (fulfilled)
          return;
        if (typeof options.onDidCancel === "function") {
          options.onDidCancel(resolve, reject);
        } else {
          reject(new CancellationError(promise, (_a = options.cancelMessage) != null ? _a : "CANCELLED"));
        }
      });
    }
    promise.then(() => {
      fulfilled = true;
      if (timer !== void 0) {
        clearTimeout(timer);
      }
      resolve(promise);
    }, (ex) => {
      fulfilled = true;
      if (timer !== void 0) {
        clearTimeout(timer);
      }
      reject(ex);
    });
  });
}
function first(promises, predicate) {
  const newPromises = promises.map((p) => new Promise((resolve, reject) => p.then((value) => {
    if (predicate(value)) {
      resolve(value);
    }
  }, reject)));
  newPromises.push(Promise.all(promises).then(() => void 0));
  return Promise.race(newPromises);
}
function is(obj) {
  return obj != null && typeof obj.then === "function";
}
async function raceAll(promisesOrIds, timeoutOrFn, timeout) {
  let promises;
  if (timeoutOrFn != null && typeof timeoutOrFn !== "number") {
    promises = new Map((0,_iterable__WEBPACK_IMPORTED_MODULE_0__.map)(promisesOrIds, (id) => [id, timeoutOrFn(id)]));
  } else {
    timeout = timeoutOrFn;
    promises = promisesOrIds;
  }
  if (promises instanceof Map) {
    return new Map(await Promise.all((0,_iterable__WEBPACK_IMPORTED_MODULE_0__.map)(promises.entries(), timeout == null ? ([id, promise]) => promise.then((p) => [id, p]) : ([id, promise]) => Promise.race([
      promise,
      new Promise((resolve) => setTimeout(() => resolve(new CancellationErrorWithId(id, promise, "TIMED OUT")), timeout))
    ]).then((p) => [id, p]))));
  }
  return Promise.all(timeout == null ? promises : promises.map((p) => Promise.race([
    p,
    new Promise((resolve) => setTimeout(() => resolve(new CancellationError(p, "TIMED OUT")), timeout))
  ])));
}


/***/ }),

/***/ "./src/system/searchTree.ts":
/*!**********************************!*\
  !*** ./src/system/searchTree.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "StringIterator": () => (/* binding */ StringIterator),
/* harmony export */   "PathIterator": () => (/* binding */ PathIterator),
/* harmony export */   "TernarySearchTree": () => (/* binding */ TernarySearchTree)
/* harmony export */ });
/* harmony import */ var _iterable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./iterable */ "./src/system/iterable.ts");
/* harmony import */ var _string__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./string */ "./src/system/string.ts");

var __defProp = Object.defineProperty;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};


const FIN = { done: true, value: void 0 };
class StringIterator {
  constructor() {
    __publicField(this, "_value", "");
    __publicField(this, "_pos", 0);
  }
  reset(key) {
    this._value = key;
    this._pos = 0;
    return this;
  }
  next() {
    this._pos += 1;
    return this;
  }
  hasNext() {
    return this._pos < this._value.length - 1;
  }
  cmp(a) {
    const aCode = a.charCodeAt(0);
    const thisCode = this._value.charCodeAt(this._pos);
    return aCode - thisCode;
  }
  value() {
    return this._value[this._pos];
  }
}
class PathIterator {
  constructor(_splitOnBackslash = true, _caseSensitive = true) {
    this._splitOnBackslash = _splitOnBackslash;
    this._caseSensitive = _caseSensitive;
    __publicField(this, "_value");
    __publicField(this, "_from");
    __publicField(this, "_to");
  }
  reset(key) {
    this._value = key.replace(/\\$|\/$/, "");
    this._from = 0;
    this._to = 0;
    return this.next();
  }
  hasNext() {
    return this._to < this._value.length;
  }
  next() {
    this._from = this._to;
    let justSeps = true;
    for (; this._to < this._value.length; this._to++) {
      const ch = this._value.charCodeAt(this._to);
      if (ch === _string__WEBPACK_IMPORTED_MODULE_1__.CharCode.Slash || this._splitOnBackslash && ch === _string__WEBPACK_IMPORTED_MODULE_1__.CharCode.Backslash) {
        if (justSeps) {
          this._from++;
        } else {
          break;
        }
      } else {
        justSeps = false;
      }
    }
    return this;
  }
  cmp(a) {
    return this._caseSensitive ? (0,_string__WEBPACK_IMPORTED_MODULE_1__.compareSubstring)(a, this._value, 0, a.length, this._from, this._to) : (0,_string__WEBPACK_IMPORTED_MODULE_1__.compareSubstringIgnoreCase)(a, this._value, 0, a.length, this._from, this._to);
  }
  value() {
    return this._value.substring(this._from, this._to);
  }
}
class TernarySearchTreeNode {
  constructor() {
    __publicField(this, "segment");
    __publicField(this, "value");
    __publicField(this, "key");
    __publicField(this, "left");
    __publicField(this, "mid");
    __publicField(this, "right");
  }
  isEmpty() {
    return !this.left && !this.mid && !this.right && !this.value;
  }
}
class TernarySearchTree {
  constructor(segments) {
    __publicField(this, "_iter");
    __publicField(this, "_root");
    this._iter = segments;
  }
  static forPaths() {
    return new TernarySearchTree(new PathIterator());
  }
  static forStrings() {
    return new TernarySearchTree(new StringIterator());
  }
  clear() {
    this._root = void 0;
  }
  set(key, element) {
    const iter = this._iter.reset(key);
    let node;
    if (!this._root) {
      this._root = new TernarySearchTreeNode();
      this._root.segment = iter.value();
    }
    node = this._root;
    while (true) {
      const val = iter.cmp(node.segment);
      if (val > 0) {
        if (!node.left) {
          node.left = new TernarySearchTreeNode();
          node.left.segment = iter.value();
        }
        node = node.left;
      } else if (val < 0) {
        if (!node.right) {
          node.right = new TernarySearchTreeNode();
          node.right.segment = iter.value();
        }
        node = node.right;
      } else if (iter.hasNext()) {
        iter.next();
        if (!node.mid) {
          node.mid = new TernarySearchTreeNode();
          node.mid.segment = iter.value();
        }
        node = node.mid;
      } else {
        break;
      }
    }
    const oldElement = node.value;
    node.value = element;
    node.key = key;
    return oldElement;
  }
  get(key) {
    var _a;
    return (_a = this._getNode(key)) == null ? void 0 : _a.value;
  }
  _getNode(key) {
    const iter = this._iter.reset(key);
    let node = this._root;
    while (node) {
      const val = iter.cmp(node.segment);
      if (val > 0) {
        node = node.left;
      } else if (val < 0) {
        node = node.right;
      } else if (iter.hasNext()) {
        iter.next();
        node = node.mid;
      } else {
        break;
      }
    }
    return node;
  }
  has(key) {
    const node = this._getNode(key);
    return !((node == null ? void 0 : node.value) === void 0 && (node == null ? void 0 : node.mid) === void 0);
  }
  delete(key) {
    return this._delete(key, false);
  }
  deleteSuperstr(key) {
    return this._delete(key, true);
  }
  _delete(key, superStr) {
    const iter = this._iter.reset(key);
    const stack = [];
    let node = this._root;
    while (node) {
      const val = iter.cmp(node.segment);
      if (val > 0) {
        stack.push([1, node]);
        node = node.left;
      } else if (val < 0) {
        stack.push([-1, node]);
        node = node.right;
      } else if (iter.hasNext()) {
        iter.next();
        stack.push([0, node]);
        node = node.mid;
      } else {
        if (superStr) {
          node.left = void 0;
          node.mid = void 0;
          node.right = void 0;
        } else {
          node.value = void 0;
        }
        while (stack.length > 0 && node.isEmpty()) {
          const [dir, parent] = stack.pop();
          switch (dir) {
            case 1:
              parent.left = void 0;
              break;
            case 0:
              parent.mid = void 0;
              break;
            case -1:
              parent.right = void 0;
              break;
          }
          node = parent;
        }
        break;
      }
    }
  }
  findSubstr(key) {
    const iter = this._iter.reset(key);
    let node = this._root;
    let candidate;
    while (node) {
      const val = iter.cmp(node.segment);
      if (val > 0) {
        node = node.left;
      } else if (val < 0) {
        node = node.right;
      } else if (iter.hasNext()) {
        iter.next();
        candidate = node.value || candidate;
        node = node.mid;
      } else {
        break;
      }
    }
    return (node == null ? void 0 : node.value) || candidate;
  }
  findSuperstr(key, limit = false) {
    const iter = this._iter.reset(key);
    let node = this._root;
    while (node) {
      const val = iter.cmp(node.segment);
      if (val > 0) {
        node = node.left;
      } else if (val < 0) {
        node = node.right;
      } else if (iter.hasNext()) {
        iter.next();
        node = node.mid;
      } else {
        if (!node.mid) {
          return void 0;
        }
        node = node.mid;
        return {
          [Symbol.iterator]: () => this._nodeIterator(node, limit)
        };
      }
    }
    return void 0;
  }
  _nodeIterator(node, limit = false) {
    let res;
    let idx;
    let data;
    const next = () => {
      if (!data) {
        data = [];
        idx = 0;
        this._forEach(node, (value) => data.push(value), limit);
      }
      if (idx >= data.length) {
        return FIN;
      }
      if (!res) {
        res = { done: false, value: data[idx++] };
      } else {
        res.value = data[idx++];
      }
      return res;
    };
    return { next };
  }
  forEach(callback) {
    this._forEach(this._root, callback);
  }
  _forEach(node, callback, limit = false) {
    if (node === void 0)
      return;
    this._forEach(node.left, callback, limit);
    if (node.value) {
      callback(node.value, node.key);
    }
    if (!limit) {
      this._forEach(node.mid, callback, limit);
    }
    this._forEach(node.right, callback, limit);
  }
  any() {
    return this._root !== void 0 && !this._root.isEmpty();
  }
  count(predicate) {
    if (this._root === void 0 || this._root.isEmpty())
      return 0;
    return (0,_iterable__WEBPACK_IMPORTED_MODULE_0__.count)(this.entries(), predicate === void 0 ? void 0 : ([, e]) => predicate(e));
  }
  entries() {
    return this._iterator(this._root);
  }
  values() {
    return (0,_iterable__WEBPACK_IMPORTED_MODULE_0__.map)(this.entries(), ([, e]) => e);
  }
  highlander() {
    if (this._root === void 0 || this._root.isEmpty())
      return void 0;
    const entries = this.entries();
    let count2 = 0;
    let next;
    let value;
    while (true) {
      next = entries.next();
      if (next.done)
        break;
      value = next.value;
      count2++;
      if (count2 > 1)
        return void 0;
    }
    return value;
  }
  some(predicate) {
    if (this._root === void 0 || this._root.isEmpty())
      return false;
    return (0,_iterable__WEBPACK_IMPORTED_MODULE_0__.some)(this.entries(), ([, e]) => predicate(e));
  }
  *[Symbol.iterator]() {
    yield* this._iterator(this._root);
  }
  *_iterator(node) {
    if (node) {
      yield* this._iterator(node.left);
      if (node.value) {
        yield [node.key, node.value];
      }
      yield* this._iterator(node.mid);
      yield* this._iterator(node.right);
    }
  }
}


/***/ }),

/***/ "./src/system/stopwatch.ts":
/*!*********************************!*\
  !*** ./src/system/stopwatch.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Stopwatch": () => (/* binding */ Stopwatch)
/* harmony export */ });

var __defProp = Object.defineProperty;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};
const _Stopwatch = class {
  static start(id) {
    if (_Stopwatch.timers.has(id)) {
      this.log(id);
    }
    _Stopwatch.timers.set(id, process.hrtime());
  }
  static log(id, message) {
    const [secs, nanosecs] = process.hrtime(_Stopwatch.timers.get(id));
    const ms = secs * 1e3 + Math.floor(nanosecs / 1e6);
    console.log(`${id}${message ? `(${message})` : ""} took ${ms} ms`);
  }
  static stop(id, message) {
    if (!_Stopwatch.timers.has(id))
      return;
    this.log(id, message);
    _Stopwatch.timers.delete(id);
  }
};
let Stopwatch = _Stopwatch;
__publicField(Stopwatch, "timers", new Map());


/***/ }),

/***/ "./src/system/string.ts":
/*!******************************!*\
  !*** ./src/system/string.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "fromBase64": () => (/* reexport safe */ _env_base64__WEBPACK_IMPORTED_MODULE_2__.fromBase64),
/* harmony export */   "base64": () => (/* reexport safe */ _env_base64__WEBPACK_IMPORTED_MODULE_2__.base64),
/* harmony export */   "CharCode": () => (/* binding */ CharCode),
/* harmony export */   "compareSubstring": () => (/* binding */ compareSubstring),
/* harmony export */   "compareSubstringIgnoreCase": () => (/* binding */ compareSubstringIgnoreCase),
/* harmony export */   "escapeMarkdown": () => (/* binding */ escapeMarkdown),
/* harmony export */   "equalsIgnoreCase": () => (/* binding */ equalsIgnoreCase),
/* harmony export */   "escapeRegex": () => (/* binding */ escapeRegex),
/* harmony export */   "getCommonBase": () => (/* binding */ getCommonBase),
/* harmony export */   "getDurationMilliseconds": () => (/* binding */ getDurationMilliseconds),
/* harmony export */   "getSuperscript": () => (/* binding */ getSuperscript),
/* harmony export */   "getTokensFromTemplate": () => (/* binding */ getTokensFromTemplate),
/* harmony export */   "interpolate": () => (/* binding */ interpolate),
/* harmony export */   "interpolateAsync": () => (/* binding */ interpolateAsync),
/* harmony export */   "isLowerAsciiLetter": () => (/* binding */ isLowerAsciiLetter),
/* harmony export */   "isUpperAsciiLetter": () => (/* binding */ isUpperAsciiLetter),
/* harmony export */   "lines": () => (/* binding */ lines),
/* harmony export */   "md5": () => (/* binding */ md5),
/* harmony export */   "normalizePath": () => (/* binding */ normalizePath),
/* harmony export */   "pad": () => (/* binding */ pad),
/* harmony export */   "padLeft": () => (/* binding */ padLeft),
/* harmony export */   "padLeftOrTruncate": () => (/* binding */ padLeftOrTruncate),
/* harmony export */   "padRight": () => (/* binding */ padRight),
/* harmony export */   "padOrTruncate": () => (/* binding */ padOrTruncate),
/* harmony export */   "padRightOrTruncate": () => (/* binding */ padRightOrTruncate),
/* harmony export */   "pluralize": () => (/* binding */ pluralize),
/* harmony export */   "sanitizeForFileSystem": () => (/* binding */ sanitizeForFileSystem),
/* harmony export */   "sha1": () => (/* binding */ sha1),
/* harmony export */   "splitLast": () => (/* binding */ splitLast),
/* harmony export */   "splitSingle": () => (/* binding */ splitSingle),
/* harmony export */   "truncate": () => (/* binding */ truncate),
/* harmony export */   "truncateLeft": () => (/* binding */ truncateLeft),
/* harmony export */   "truncateMiddle": () => (/* binding */ truncateMiddle),
/* harmony export */   "getWidth": () => (/* binding */ getWidth)
/* harmony export */ });
/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! crypto */ "./node_modules/crypto-browserify/index.js");
/* harmony import */ var _git_shell__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../git/shell */ "./src/git/shell.ts");
/* harmony import */ var _env_base64__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @env/base64 */ "./src/env/browser/base64.ts");




const emptyStr = "";
var CharCode;
(function(CharCode2) {
  CharCode2[CharCode2["Slash"] = 47] = "Slash";
  CharCode2[CharCode2["Backslash"] = 92] = "Backslash";
  CharCode2[CharCode2["A"] = 65] = "A";
  CharCode2[CharCode2["Z"] = 90] = "Z";
  CharCode2[CharCode2["a"] = 97] = "a";
  CharCode2[CharCode2["z"] = 122] = "z";
})(CharCode || (CharCode = {}));
function compareSubstring(a, b, aStart = 0, aEnd = a.length, bStart = 0, bEnd = b.length) {
  for (; aStart < aEnd && bStart < bEnd; aStart++, bStart++) {
    const codeA = a.charCodeAt(aStart);
    const codeB = b.charCodeAt(bStart);
    if (codeA < codeB) {
      return -1;
    } else if (codeA > codeB) {
      return 1;
    }
  }
  const aLen = aEnd - aStart;
  const bLen = bEnd - bStart;
  if (aLen < bLen) {
    return -1;
  } else if (aLen > bLen) {
    return 1;
  }
  return 0;
}
function compareSubstringIgnoreCase(a, b, aStart = 0, aEnd = a.length, bStart = 0, bEnd = b.length) {
  for (; aStart < aEnd && bStart < bEnd; aStart++, bStart++) {
    const codeA = a.charCodeAt(aStart);
    const codeB = b.charCodeAt(bStart);
    if (codeA === codeB) {
      continue;
    }
    const diff = codeA - codeB;
    if (diff === 32 && isUpperAsciiLetter(codeB)) {
      continue;
    } else if (diff === -32 && isUpperAsciiLetter(codeA)) {
      continue;
    }
    if (isLowerAsciiLetter(codeA) && isLowerAsciiLetter(codeB)) {
      return diff;
    }
    return compareSubstring(a.toLowerCase(), b.toLowerCase(), aStart, aEnd, bStart, bEnd);
  }
  const aLen = aEnd - aStart;
  const bLen = bEnd - bStart;
  if (aLen < bLen) {
    return -1;
  } else if (aLen > bLen) {
    return 1;
  }
  return 0;
}
const escapeMarkdownRegex = /[\\`*_{}[\]()#+\-.!]/g;
const escapeMarkdownHeaderRegex = /^===/gm;
const markdownQuotedRegex = /\n/g;
function escapeMarkdown(s, options = {}) {
  s = s.replace(escapeMarkdownRegex, "\\$&").replace(escapeMarkdownHeaderRegex, "\u200B===");
  if (!options.quoted)
    return s;
  return s.replace(markdownQuotedRegex, "	\n>  ");
}
function equalsIgnoreCase(a, b) {
  if (a == null && b == null)
    return true;
  if (a == null || b == null)
    return false;
  return a.localeCompare(b, void 0, { sensitivity: "accent" }) === 0;
}
function escapeRegex(s) {
  return s.replace(/[-[\]{}()*+?.,\\^$|#\s]/g, "\\$&");
}
function getCommonBase(s1, s2, delimiter) {
  let char;
  let index = 0;
  for (let i = 0; i < s1.length; i++) {
    char = s1[i];
    if (char !== s2[i])
      break;
    if (char === delimiter) {
      index = i;
    }
  }
  return index > 0 ? s1.substring(0, index + 1) : void 0;
}
function getDurationMilliseconds(start) {
  const [secs, nanosecs] = process.hrtime(start);
  return secs * 1e3 + Math.floor(nanosecs / 1e6);
}
const superscripts = ["\xB9", "\xB2", "\xB3", "\u2074", "\u2075", "\u2076", "\u2077", "\u2078", "\u2079"];
function getSuperscript(num) {
  var _a;
  return (_a = superscripts[num - 1]) != null ? _a : "";
}
const driveLetterNormalizeRegex = /(?<=^\/?)([A-Z])(?=:\/)/;
const pathNormalizeRegex = /\\/g;
const pathStripTrailingSlashRegex = /\/$/g;
const tokenRegex = /\$\{('.*?[^\\]'|\W*)?([^|]*?)(?:\|(\d+)(-|\?)?)?('.*?[^\\]'|\W*)?\}/g;
const tokenSanitizeRegex = /\$\{(?:'.*?[^\\]'|\W*)?(\w*?)(?:'.*?[^\\]'|[\W\d]*)\}/g;
const tokenGroupCharacter = "'";
const tokenGroupCharacterEscapedRegex = /(\\')/g;
const tokenGroupRegex = /^'?(.*?)'?$/;
function getTokensFromTemplate(template) {
  const tokens = [];
  let match;
  do {
    match = tokenRegex.exec(template);
    if (match == null)
      break;
    let [, prefix, key, truncateTo, option, suffix] = match;
    if (prefix != null) {
      match = tokenGroupRegex.exec(prefix);
      if (match != null) {
        [, prefix] = match;
        prefix = prefix.replace(tokenGroupCharacterEscapedRegex, tokenGroupCharacter);
      }
    }
    if (suffix != null) {
      match = tokenGroupRegex.exec(suffix);
      if (match != null) {
        [, suffix] = match;
        suffix = suffix.replace(tokenGroupCharacterEscapedRegex, tokenGroupCharacter);
      }
    }
    tokens.push({
      key,
      options: {
        collapseWhitespace: option === "?",
        padDirection: option === "-" ? "left" : "right",
        prefix: prefix || void 0,
        suffix: suffix || void 0,
        truncateTo: truncateTo == null ? void 0 : parseInt(truncateTo, 10)
      }
    });
  } while (true);
  return tokens;
}
const tokenSanitizeReplacement = `$\${$1=this.$1,($1 == null ? '' : $1)}`;
const interpolationMap = new Map();
function interpolate(template, context) {
  if (template == null || template.length === 0)
    return template;
  if (context == null)
    return template.replace(tokenSanitizeRegex, emptyStr);
  let fn = interpolationMap.get(template);
  if (fn == null) {
    fn = new Function(`return \`${template.replace(tokenSanitizeRegex, tokenSanitizeReplacement)}\`;`);
    interpolationMap.set(template, fn);
  }
  return fn.call(context);
}
const AsyncFunction = Object.getPrototypeOf(async function() {
}).constructor;
const tokenSanitizeReplacementAsync = `$\${$1=this.$1,($1 == null ? '' : typeof $1.then === 'function' ? (($1 = await $1),$1 == null ? '' : $1) : $1)}`;
const interpolationAsyncMap = new Map();
async function interpolateAsync(template, context) {
  if (template == null || template.length === 0)
    return template;
  if (context == null)
    return template.replace(tokenSanitizeRegex, emptyStr);
  let fn = interpolationAsyncMap.get(template);
  if (fn == null) {
    const body = `return \`${template.replace(tokenSanitizeRegex, tokenSanitizeReplacementAsync)}\`;`;
    fn = new AsyncFunction(body);
    interpolationAsyncMap.set(template, fn);
  }
  const value = await fn.call(context);
  return value;
}
function isLowerAsciiLetter(code) {
  return code >= 97 && code <= 122;
}
function isUpperAsciiLetter(code) {
  return code >= 65 && code <= 90;
}
function* lines(s, char = "\n") {
  let i = 0;
  while (i < s.length) {
    let j = s.indexOf(char, i);
    if (j === -1) {
      j = s.length;
    }
    yield s.substring(i, j);
    i = j + 1;
  }
}
function md5(s, encoding = "base64") {
  return (0,crypto__WEBPACK_IMPORTED_MODULE_0__.createHash)("md5").update(s).digest(encoding);
}
function normalizePath(fileName, options = { stripTrailingSlash: true }) {
  if (fileName == null || fileName.length === 0)
    return fileName;
  let normalized = fileName.replace(pathNormalizeRegex, "/");
  const { addLeadingSlash, stripTrailingSlash } = { stripTrailingSlash: true, ...options };
  if (stripTrailingSlash) {
    normalized = normalized.replace(pathStripTrailingSlashRegex, emptyStr);
  }
  if (addLeadingSlash && normalized.charCodeAt(0) !== 47) {
    normalized = `/${normalized}`;
  }
  if (_git_shell__WEBPACK_IMPORTED_MODULE_1__.isWindows) {
    normalized = normalized.replace(driveLetterNormalizeRegex, (drive) => drive.toLowerCase());
  }
  return normalized;
}
function pad(s, before = 0, after = 0, padding = "\xA0") {
  if (before === 0 && after === 0)
    return s;
  return `${before === 0 ? emptyStr : padding.repeat(before)}${s}${after === 0 ? emptyStr : padding.repeat(after)}`;
}
function padLeft(s, padTo, padding = "\xA0", width) {
  const diff = padTo - (width != null ? width : getWidth(s));
  return diff <= 0 ? s : padding.repeat(diff) + s;
}
function padLeftOrTruncate(s, max, padding, width) {
  width = width != null ? width : getWidth(s);
  if (width < max)
    return padLeft(s, max, padding, width);
  if (width > max)
    return truncate(s, max, void 0, width);
  return s;
}
function padRight(s, padTo, padding = "\xA0", width) {
  const diff = padTo - (width != null ? width : getWidth(s));
  return diff <= 0 ? s : s + padding.repeat(diff);
}
function padOrTruncate(s, max, padding, width) {
  const left = max < 0;
  max = Math.abs(max);
  width = width != null ? width : getWidth(s);
  if (width < max)
    return left ? padLeft(s, max, padding, width) : padRight(s, max, padding, width);
  if (width > max)
    return truncate(s, max, void 0, width);
  return s;
}
function padRightOrTruncate(s, max, padding, width) {
  width = width != null ? width : getWidth(s);
  if (width < max)
    return padRight(s, max, padding, width);
  if (width > max)
    return truncate(s, max);
  return s;
}
function pluralize(s, count, options) {
  var _a, _b;
  if (options == null)
    return `${count} ${s}${count === 1 ? emptyStr : "s"}`;
  return `${count === 0 ? options.zero != null ? options.zero : count : options.number != null ? options.number : count}${(_a = options.infix) != null ? _a : " "}${count === 1 ? s : (_b = options.plural) != null ? _b : `${s}s`}`;
}
const illegalCharsForFSRegex = /[\\/:*?"<>|\x00-\x1f\x80-\x9f]/g;
function sanitizeForFileSystem(s, replacement = "_") {
  if (!s)
    return s;
  return s.replace(illegalCharsForFSRegex, replacement);
}
function sha1(s, encoding = "base64") {
  return (0,crypto__WEBPACK_IMPORTED_MODULE_0__.createHash)("sha1").update(s).digest(encoding);
}
function splitLast(s, splitter) {
  const index = s.lastIndexOf(splitter);
  if (index === -1)
    return [s];
  return [s.substr(index), s.substring(0, index - 1)];
}
function splitSingle(s, splitter) {
  const parts = s.split(splitter, 1);
  const first = parts[0];
  return first.length === s.length ? parts : [first, s.substr(first.length + 1)];
}
function truncate(s, truncateTo, ellipsis = "\u2026", width) {
  if (!s)
    return s;
  if (truncateTo <= 1)
    return ellipsis;
  width = width != null ? width : getWidth(s);
  if (width <= truncateTo)
    return s;
  if (width === s.length)
    return `${s.substring(0, truncateTo - 1)}${ellipsis}`;
  let chars = Math.floor(truncateTo / (width / s.length));
  let count = getWidth(s.substring(0, chars));
  while (count < truncateTo) {
    count += getWidth(s[chars++]);
  }
  if (count >= truncateTo) {
    chars--;
  }
  return `${s.substring(0, chars)}${ellipsis}`;
}
function truncateLeft(s, truncateTo, ellipsis = "\u2026", width) {
  if (!s)
    return s;
  if (truncateTo <= 1)
    return ellipsis;
  width = width != null ? width : getWidth(s);
  if (width <= truncateTo)
    return s;
  if (width === s.length)
    return `${ellipsis}${s.substring(width - truncateTo)}`;
  let chars = Math.floor(truncateTo / (width / s.length));
  let count = getWidth(s.substring(0, chars));
  while (count < truncateTo) {
    count += getWidth(s[chars++]);
  }
  if (count >= truncateTo) {
    chars--;
  }
  return `${ellipsis}${s.substring(s.length - chars)}`;
}
function truncateMiddle(s, truncateTo, ellipsis = "\u2026") {
  if (!s)
    return s;
  if (truncateTo <= 1)
    return ellipsis;
  const width = getWidth(s);
  if (width <= truncateTo)
    return s;
  return `${s.slice(0, Math.floor(truncateTo / 2) - 1)}${ellipsis}${s.slice(width - Math.ceil(truncateTo / 2))}`;
}
const ansiRegex = /[\u001B\u009B][[\]()#;?]*(?:(?:(?:[a-zA-Z\d]*(?:;[-a-zA-Z\d/#&.:=?%@~_]*)*)?\u0007)|(?:(?:\d{1,4}(?:;\d{0,4})*)?[\dA-PR-TZcf-ntqry=><~]))/g;
const containsNonAsciiRegex = /[^\x20-\x7F\u00a0\u2026]/;
function getWidth(s) {
  if (s == null || s.length === 0)
    return 0;
  if (!containsNonAsciiRegex.test(s))
    return s.length;
  s = s.replace(ansiRegex, emptyStr);
  let count = 0;
  let emoji = 0;
  let joiners = 0;
  const graphemes = [...s];
  for (let i = 0; i < graphemes.length; i++) {
    const code = graphemes[i].codePointAt(0);
    if (code <= 31 || code >= 127 && code <= 159)
      continue;
    if (code >= 768 && code <= 879)
      continue;
    if (code >= 128512 && code <= 128591 || code >= 127744 && code <= 128511 || code >= 128640 && code <= 128767 || code >= 9728 && code <= 9983 || code >= 9984 && code <= 10175 || code >= 65024 && code <= 65039 || code >= 129280 && code <= 129535 || code >= 65024 && code <= 65039 || code >= 8400 && code <= 8447) {
      if (code >= 127995 && code <= 127999)
        continue;
      emoji++;
      count += 2;
      continue;
    }
    if (code === 8205) {
      joiners++;
      count -= 2;
      continue;
    }
    if (code > 65535) {
      i++;
    }
    count += isFullwidthCodePoint(code) ? 2 : 1;
  }
  const offset = emoji - joiners;
  if (offset > 1) {
    count += offset - 1;
  }
  return count;
}
function isFullwidthCodePoint(cp) {
  if (cp >= 4352 && (cp <= 4447 || cp === 9001 || cp === 9002 || cp >= 11904 && cp <= 12871 && cp !== 12351 || cp >= 12880 && cp <= 19903 || cp >= 19968 && cp <= 42182 || cp >= 43360 && cp <= 43388 || cp >= 44032 && cp <= 55203 || cp >= 63744 && cp <= 64255 || cp >= 65040 && cp <= 65049 || cp >= 65072 && cp <= 65131 || cp >= 65281 && cp <= 65376 || cp >= 65504 && cp <= 65510 || cp >= 110592 && cp <= 110593 || cp >= 127488 && cp <= 127569 || cp >= 131072 && cp <= 262141)) {
    return true;
  }
  return false;
}


/***/ }),

/***/ "./src/system/version.ts":
/*!*******************************!*\
  !*** ./src/system/version.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "compare": () => (/* binding */ compare),
/* harmony export */   "from": () => (/* binding */ from),
/* harmony export */   "fromString": () => (/* binding */ fromString)
/* harmony export */ });

function compare(v1, v2) {
  if (typeof v1 === "string") {
    v1 = fromString(v1);
  }
  if (typeof v2 === "string") {
    v2 = fromString(v2);
  }
  if (v1.major > v2.major)
    return 1;
  if (v1.major < v2.major)
    return -1;
  if (v1.minor > v2.minor)
    return 1;
  if (v1.minor < v2.minor)
    return -1;
  if (v1.patch > v2.patch)
    return 1;
  if (v1.patch < v2.patch)
    return -1;
  if (v1.pre === void 0 && v2.pre !== void 0)
    return 1;
  if (v1.pre !== void 0 && v2.pre === void 0)
    return -1;
  if (v1.pre !== void 0 && v2.pre !== void 0) {
    return v1.pre.localeCompare(v2.pre);
  }
  return 0;
}
function from(major, minor, patch, pre) {
  return {
    major: typeof major === "string" ? parseInt(major, 10) : major,
    minor: typeof minor === "string" ? parseInt(minor, 10) : minor,
    patch: patch == null ? 0 : typeof patch === "string" ? parseInt(patch, 10) : patch,
    pre
  };
}
function fromString(version) {
  const [ver, pre] = version.split("-");
  const [major, minor, patch] = ver.split(".");
  return from(major, minor, patch, pre);
}


/***/ }),

/***/ "./src/terminal.ts":
/*!*************************!*\
  !*** ./src/terminal.ts ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "runGitCommandInTerminal": () => (/* binding */ runGitCommandInTerminal)
/* harmony export */ });
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./container */ "./src/container.ts");



let _terminal;
let _terminalCwd;
let _disposable;
const extensionTerminalName = "GitLens";
function ensureTerminal(cwd) {
  if (_terminal === void 0) {
    _terminal = vscode__WEBPACK_IMPORTED_MODULE_0__.window.createTerminal(extensionTerminalName);
    _disposable = vscode__WEBPACK_IMPORTED_MODULE_0__.window.onDidCloseTerminal((e) => {
      if (e.name === extensionTerminalName) {
        _terminal = void 0;
        _disposable.dispose();
        _disposable = void 0;
      }
    });
    _container__WEBPACK_IMPORTED_MODULE_1__.Container.context.subscriptions.push(_disposable);
    _terminalCwd = void 0;
  }
  if (_terminalCwd !== cwd) {
    _terminal.sendText(`cd "${cwd}"`, true);
    _terminalCwd = cwd;
  }
  return _terminal;
}
function runGitCommandInTerminal(command, args, cwd, execute = false) {
  const terminal = ensureTerminal(cwd);
  terminal.show(false);
  terminal.sendText(`git ${command} ${args}`, execute);
}


/***/ }),

/***/ "./src/terminal/linkProvider.ts":
/*!**************************************!*\
  !*** ./src/terminal/linkProvider.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "GitTerminalLinkProvider": () => (/* binding */ GitTerminalLinkProvider)
/* harmony export */ });
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _commands__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../commands */ "./src/commands.ts");
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../container */ "./src/container.ts");
/* harmony import */ var _git_git__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../git/git */ "./src/git/git.ts");

var __defProp = Object.defineProperty;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};




const commandsRegexShared = /\b(g(?:it)?\b\s*)\b(branch|checkout|cherry-pick|fetch|grep|log|merge|pull|push|rebase|reset|revert|show|stash|status|tag)\b/gi;
const refRegexShared = /\b((?!\/)(?!\S*\/\/)(?!\S*@\{)(?!@$)(?!\S*\\)[^\000-\037\177 ~^:?*[]+(?<!\/)(?<!\.))\b/gi;
const rangeRegex = /^[0-9a-f]{7,40}\.\.\.?[0-9a-f]{7,40}$/;
const shaRegex = /^[0-9a-f]{7,40}$/;
class GitTerminalLinkProvider {
  constructor() {
    __publicField(this, "disposable");
    this.disposable = vscode__WEBPACK_IMPORTED_MODULE_0__.window.registerTerminalLinkProvider(this);
  }
  dispose() {
    this.disposable.dispose();
  }
  async provideTerminalLinks(context) {
    if (context.line.trim().length === 0)
      return [];
    const repoPath = _container__WEBPACK_IMPORTED_MODULE_2__.Container.git.getHighlanderRepoPath();
    if (repoPath == null)
      return [];
    const links = [];
    const branchesAndTags = await _container__WEBPACK_IMPORTED_MODULE_2__.Container.git.getBranchesAndOrTags(repoPath);
    const refRegex = new RegExp(refRegexShared, refRegexShared.flags);
    const commandsRegex = new RegExp(commandsRegexShared, commandsRegexShared.flags);
    let match;
    do {
      match = commandsRegex.exec(context.line);
      if (match != null) {
        const [_2, git, command] = match;
        const link = {
          startIndex: match.index + git.length,
          length: command.length,
          tooltip: "Open in Git Command Palette",
          command: {
            command: _commands__WEBPACK_IMPORTED_MODULE_1__.Commands.GitCommands,
            args: {
              command
            }
          }
        };
        links.push(link);
      }
      match = refRegex.exec(context.line);
      if (match == null)
        break;
      const [_, ref] = match;
      if (ref.toUpperCase() === "HEAD") {
        const link = {
          startIndex: match.index,
          length: ref.length,
          tooltip: "Show HEAD",
          command: {
            command: _commands__WEBPACK_IMPORTED_MODULE_1__.Commands.ShowQuickBranchHistory,
            args: {
              branch: "HEAD",
              repoPath
            }
          }
        };
        links.push(link);
        continue;
      }
      const branchOrTag = branchesAndTags == null ? void 0 : branchesAndTags.find((r) => r.name === ref);
      if (branchOrTag != null) {
        const link = {
          startIndex: match.index,
          length: ref.length,
          tooltip: branchOrTag.refType === "branch" ? "Show Branch" : "Show Tag",
          command: {
            command: _commands__WEBPACK_IMPORTED_MODULE_1__.Commands.ShowQuickBranchHistory,
            args: {
              branch: branchOrTag.refType === "branch" ? branchOrTag.name : void 0,
              tag: branchOrTag.refType === "tag" ? branchOrTag.name : void 0,
              repoPath
            }
          }
        };
        links.push(link);
        continue;
      }
      if (!shaRegex.test(ref)) {
        if (rangeRegex.test(ref)) {
          const link = {
            startIndex: match.index,
            length: ref.length,
            tooltip: "Show Commits",
            command: {
              command: _commands__WEBPACK_IMPORTED_MODULE_1__.Commands.GitCommands,
              args: {
                command: "log",
                state: {
                  repo: repoPath,
                  reference: _git_git__WEBPACK_IMPORTED_MODULE_3__.GitReference.create(ref, repoPath, { refType: "revision" })
                }
              }
            }
          };
          links.push(link);
        }
        continue;
      }
      if (await _container__WEBPACK_IMPORTED_MODULE_2__.Container.git.validateReference(repoPath, ref)) {
        const link = {
          startIndex: match.index,
          length: ref.length,
          tooltip: "Show Commit",
          command: {
            command: _commands__WEBPACK_IMPORTED_MODULE_1__.Commands.ShowQuickCommit,
            args: {
              repoPath,
              sha: ref
            }
          }
        };
        links.push(link);
      }
    } while (true);
    return links;
  }
  handleTerminalLink(link) {
    void vscode__WEBPACK_IMPORTED_MODULE_0__.commands.executeCommand(link.command.command, link.command.args);
  }
}


/***/ }),

/***/ "./src/trackers/documentTracker.ts":
/*!*****************************************!*\
  !*** ./src/trackers/documentTracker.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TrackedDocument": () => (/* reexport safe */ _trackedDocument__WEBPACK_IMPORTED_MODULE_5__.TrackedDocument),
/* harmony export */   "DocumentTracker": () => (/* binding */ DocumentTracker)
/* harmony export */ });
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _configuration__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../configuration */ "./src/configuration.ts");
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../constants */ "./src/constants.ts");
/* harmony import */ var _git_gitUri__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../git/gitUri */ "./src/git/gitUri.ts");
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../system */ "./src/system.ts");
/* harmony import */ var _trackedDocument__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./trackedDocument */ "./src/trackers/trackedDocument.ts");

var __defProp = Object.defineProperty;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};







class DocumentTracker {
  constructor() {
    __publicField(this, "_onDidChangeBlameState", new vscode__WEBPACK_IMPORTED_MODULE_0__.EventEmitter());
    __publicField(this, "_onDidChangeContent", new vscode__WEBPACK_IMPORTED_MODULE_0__.EventEmitter());
    __publicField(this, "_onDidChangeDirtyState", new vscode__WEBPACK_IMPORTED_MODULE_0__.EventEmitter());
    __publicField(this, "_onDidTriggerDirtyIdle", new vscode__WEBPACK_IMPORTED_MODULE_0__.EventEmitter());
    __publicField(this, "_dirtyIdleTriggerDelay");
    __publicField(this, "_disposable");
    __publicField(this, "_documentMap", new Map());
    __publicField(this, "_timer");
    __publicField(this, "_dirtyIdleTriggeredDebounced");
    __publicField(this, "_dirtyStateChangedDebounced");
    this._disposable = vscode__WEBPACK_IMPORTED_MODULE_0__.Disposable.from(_configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.onDidChange(this.onConfigurationChanged, this), vscode__WEBPACK_IMPORTED_MODULE_0__.window.onDidChangeActiveTextEditor(this.onActiveTextEditorChanged, this), vscode__WEBPACK_IMPORTED_MODULE_0__.workspace.onDidChangeTextDocument(_system__WEBPACK_IMPORTED_MODULE_4__.Functions.debounce(this.onTextDocumentChanged, 50), this), vscode__WEBPACK_IMPORTED_MODULE_0__.workspace.onDidCloseTextDocument(this.onTextDocumentClosed, this), vscode__WEBPACK_IMPORTED_MODULE_0__.workspace.onDidSaveTextDocument(this.onTextDocumentSaved, this));
    void this.onConfigurationChanged();
  }
  get onDidChangeBlameState() {
    return this._onDidChangeBlameState.event;
  }
  get onDidChangeContent() {
    return this._onDidChangeContent.event;
  }
  get onDidChangeDirtyState() {
    return this._onDidChangeDirtyState.event;
  }
  get onDidTriggerDirtyIdle() {
    return this._onDidTriggerDirtyIdle.event;
  }
  dispose() {
    var _a;
    (_a = this._disposable) == null ? void 0 : _a.dispose();
    void this.clear();
  }
  initialize() {
    void this.onActiveTextEditorChanged(vscode__WEBPACK_IMPORTED_MODULE_0__.window.activeTextEditor);
  }
  async onConfigurationChanged(e) {
    if (e != null && (_configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.changed(e, "blame.ignoreWhitespace") || _configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.changed(e, "advanced.caching.enabled"))) {
      for (const d of this._documentMap.values()) {
        (await d).reset("config");
      }
    }
    if (_configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.changed(e, "advanced.blame.delayAfterEdit")) {
      this._dirtyIdleTriggerDelay = _configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.get("advanced.blame.delayAfterEdit");
      this._dirtyIdleTriggeredDebounced = void 0;
    }
  }
  async onActiveTextEditorChanged(editor) {
    if (editor != null && !(0,_constants__WEBPACK_IMPORTED_MODULE_2__.isTextEditor)(editor))
      return;
    if (this._timer != null) {
      clearTimeout(this._timer);
      this._timer = void 0;
    }
    if (editor == null) {
      this._timer = setTimeout(() => {
        this._timer = void 0;
        void (0,_constants__WEBPACK_IMPORTED_MODULE_2__.setContext)(_constants__WEBPACK_IMPORTED_MODULE_2__.ContextKeys.ActiveFileStatus, void 0);
      }, 250);
      return;
    }
    const doc = this._documentMap.get(editor.document);
    if (doc != null) {
      (await doc).activate();
      return;
    }
    void this.addCore(editor.document);
  }
  async onTextDocumentChanged(e) {
    var _a;
    const { scheme } = e.document.uri;
    if (scheme !== _constants__WEBPACK_IMPORTED_MODULE_2__.DocumentSchemes.File && scheme !== _constants__WEBPACK_IMPORTED_MODULE_2__.DocumentSchemes.Git && scheme !== _constants__WEBPACK_IMPORTED_MODULE_2__.DocumentSchemes.Vsls) {
      return;
    }
    const doc = await ((_a = this._documentMap.get(e.document)) != null ? _a : this.addCore(e.document));
    doc.reset("document");
    const dirty = e.document.isDirty;
    const editor = vscode__WEBPACK_IMPORTED_MODULE_0__.window.activeTextEditor;
    if (this._dirtyIdleTriggeredDebounced != null) {
      if (dirty) {
        this._dirtyIdleTriggeredDebounced({ editor, document: doc });
      } else {
        this._dirtyIdleTriggeredDebounced.cancel();
      }
    }
    if ((editor == null ? void 0 : editor.document) === e.document) {
      this._onDidChangeContent.fire({ editor, document: doc, contentChanges: e.contentChanges });
    }
    if (!doc.forceDirtyStateChangeOnNextDocumentChange && doc.dirty === dirty)
      return;
    doc.resetForceDirtyStateChangeOnNextDocumentChange();
    doc.dirty = dirty;
    if (editor == null || editor.document !== e.document)
      return;
    this.fireDocumentDirtyStateChanged({ editor, document: doc, dirty: doc.dirty });
  }
  async onTextDocumentClosed(document) {
    const doc = this._documentMap.get(document);
    if (doc == null)
      return;
    this._documentMap.delete(document);
    this._documentMap.delete(_git_gitUri__WEBPACK_IMPORTED_MODULE_3__.GitUri.toKey(document.uri));
    (await doc).dispose();
  }
  async onTextDocumentSaved(document) {
    const doc = this._documentMap.get(document);
    if (doc != null) {
      void (await doc).update({ forceBlameChange: true });
      return;
    }
    if ((0,_constants__WEBPACK_IMPORTED_MODULE_2__.isActiveDocument)(document)) {
      void this.addCore(document);
    }
  }
  add(documentOrId) {
    const doc = this._add(documentOrId);
    return doc;
  }
  async clear() {
    for (const d of this._documentMap.values()) {
      (await d).dispose();
    }
    this._documentMap.clear();
  }
  get(documentOrId) {
    const doc = this._get(documentOrId);
    return doc;
  }
  async getOrAdd(documentOrId) {
    var _a;
    const doc = (_a = this._get(documentOrId)) != null ? _a : this._add(documentOrId);
    return doc;
  }
  has(key) {
    if (typeof key === "string" || key instanceof vscode__WEBPACK_IMPORTED_MODULE_0__.Uri) {
      key = _git_gitUri__WEBPACK_IMPORTED_MODULE_3__.GitUri.toKey(key);
    }
    return this._documentMap.has(key);
  }
  async _add(documentOrId) {
    var _a;
    let document;
    if (_git_gitUri__WEBPACK_IMPORTED_MODULE_3__.GitUri.is(documentOrId)) {
      try {
        document = await vscode__WEBPACK_IMPORTED_MODULE_0__.workspace.openTextDocument(documentOrId.documentUri({ useVersionedPath: true }));
      } catch (ex) {
        const msg = (_a = ex == null ? void 0 : ex.toString()) != null ? _a : "";
        if (msg.includes("File seems to be binary and cannot be opened as text")) {
          document = new BinaryTextDocument(documentOrId);
        } else if (msg.includes("File not found") || msg.includes("Unable to read file") || msg.includes("Unable to resolve non-existing file")) {
          document = new MissingRevisionTextDocument(documentOrId);
        } else {
          throw ex;
        }
      }
    } else if (documentOrId instanceof vscode__WEBPACK_IMPORTED_MODULE_0__.Uri) {
      document = await vscode__WEBPACK_IMPORTED_MODULE_0__.workspace.openTextDocument(documentOrId);
    } else {
      document = documentOrId;
    }
    const doc = this.addCore(document);
    return doc;
  }
  _get(documentOrId) {
    if (_git_gitUri__WEBPACK_IMPORTED_MODULE_3__.GitUri.is(documentOrId)) {
      documentOrId = _git_gitUri__WEBPACK_IMPORTED_MODULE_3__.GitUri.toKey(documentOrId.documentUri({ useVersionedPath: true }));
    } else if (typeof documentOrId === "string" || documentOrId instanceof vscode__WEBPACK_IMPORTED_MODULE_0__.Uri) {
      documentOrId = _git_gitUri__WEBPACK_IMPORTED_MODULE_3__.GitUri.toKey(documentOrId);
    }
    const doc = this._documentMap.get(documentOrId);
    return doc;
  }
  async addCore(document) {
    const key = _git_gitUri__WEBPACK_IMPORTED_MODULE_3__.GitUri.toKey(document.uri);
    const doc = _trackedDocument__WEBPACK_IMPORTED_MODULE_5__.TrackedDocument.create(document, key, false, {
      onDidBlameStateChange: (e) => this._onDidChangeBlameState.fire(e)
    });
    this._documentMap.set(document, doc);
    this._documentMap.set(key, doc);
    return doc;
  }
  fireDocumentDirtyStateChanged(e) {
    if (e.dirty) {
      setImmediate(() => {
        var _a;
        (_a = this._dirtyStateChangedDebounced) == null ? void 0 : _a.cancel();
        if (vscode__WEBPACK_IMPORTED_MODULE_0__.window.activeTextEditor !== e.editor)
          return;
        this._onDidChangeDirtyState.fire(e);
      });
      if (this._dirtyIdleTriggerDelay > 0) {
        if (this._dirtyIdleTriggeredDebounced == null) {
          this._dirtyIdleTriggeredDebounced = _system__WEBPACK_IMPORTED_MODULE_4__.Functions.debounce((e2) => {
            var _a;
            if ((_a = this._dirtyIdleTriggeredDebounced) == null ? void 0 : _a.pending())
              return;
            e2.document.isDirtyIdle = true;
            this._onDidTriggerDirtyIdle.fire(e2);
          }, this._dirtyIdleTriggerDelay, { track: true });
        }
        this._dirtyIdleTriggeredDebounced({ editor: e.editor, document: e.document });
      }
      return;
    }
    if (this._dirtyStateChangedDebounced == null) {
      this._dirtyStateChangedDebounced = _system__WEBPACK_IMPORTED_MODULE_4__.Functions.debounce((e2) => {
        if (vscode__WEBPACK_IMPORTED_MODULE_0__.window.activeTextEditor !== e2.editor)
          return;
        this._onDidChangeDirtyState.fire(e2);
      }, 250);
    }
    this._dirtyStateChangedDebounced(e);
  }
}
class EmptyTextDocument {
  constructor(gitUri) {
    this.gitUri = gitUri;
    __publicField(this, "eol");
    __publicField(this, "fileName");
    __publicField(this, "isClosed");
    __publicField(this, "isDirty");
    __publicField(this, "isUntitled");
    __publicField(this, "languageId");
    __publicField(this, "lineCount");
    __publicField(this, "uri");
    __publicField(this, "version");
    this.uri = gitUri.documentUri({ useVersionedPath: true });
    this.eol = vscode__WEBPACK_IMPORTED_MODULE_0__.EndOfLine.LF;
    this.fileName = this.uri.fsPath;
    this.isClosed = false;
    this.isDirty = false;
    this.isUntitled = false;
    this.languageId = "";
    this.lineCount = 0;
    this.version = 0;
  }
  getText(_range) {
    throw new Error("Method not supported.");
  }
  getWordRangeAtPosition(_position, _regex) {
    throw new Error("Method not supported.");
  }
  lineAt(_position) {
    throw new Error("Method not supported.");
  }
  offsetAt(_position) {
    throw new Error("Method not supported.");
  }
  positionAt(_offset) {
    throw new Error("Method not supported.");
  }
  save() {
    throw new Error("Method not supported.");
  }
  validatePosition(_position) {
    throw new Error("Method not supported.");
  }
  validateRange(_range) {
    throw new Error("Method not supported.");
  }
}
class BinaryTextDocument extends EmptyTextDocument {
}
class MissingRevisionTextDocument extends EmptyTextDocument {
}


/***/ }),

/***/ "./src/trackers/gitDocumentTracker.ts":
/*!********************************************!*\
  !*** ./src/trackers/gitDocumentTracker.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DocumentTracker": () => (/* reexport safe */ _documentTracker__WEBPACK_IMPORTED_MODULE_0__.DocumentTracker),
/* harmony export */   "TrackedDocument": () => (/* reexport safe */ _documentTracker__WEBPACK_IMPORTED_MODULE_0__.TrackedDocument),
/* harmony export */   "GitDocumentState": () => (/* binding */ GitDocumentState),
/* harmony export */   "GitDocumentTracker": () => (/* binding */ GitDocumentTracker)
/* harmony export */ });
/* harmony import */ var _documentTracker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./documentTracker */ "./src/trackers/documentTracker.ts");

var __defProp = Object.defineProperty;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};


class GitDocumentState {
  constructor(key) {
    this.key = key;
    __publicField(this, "cache", new Map());
  }
  get(key) {
    return this.cache.get(key);
  }
  set(key, value) {
    this.cache.set(key, value);
  }
}
class GitDocumentTracker extends _documentTracker__WEBPACK_IMPORTED_MODULE_0__.DocumentTracker {
}


/***/ }),

/***/ "./src/trackers/gitLineTracker.ts":
/*!****************************************!*\
  !*** ./src/trackers/gitLineTracker.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "LineTracker": () => (/* reexport safe */ _lineTracker__WEBPACK_IMPORTED_MODULE_5__.LineTracker),
/* harmony export */   "GitLineState": () => (/* binding */ GitLineState),
/* harmony export */   "GitLineTracker": () => (/* binding */ GitLineTracker)
/* harmony export */ });
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../constants */ "./src/constants.ts");
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../container */ "./src/container.ts");
/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../logger */ "./src/logger.ts");
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../system */ "./src/system.ts");
/* harmony import */ var _lineTracker__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./lineTracker */ "./src/trackers/lineTracker.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};







class GitLineState {
  constructor(commit, logCommit) {
    this.commit = commit;
    this.logCommit = logCommit;
  }
}
class GitLineTracker extends _lineTracker__WEBPACK_IMPORTED_MODULE_5__.LineTracker {
  constructor() {
    super(...arguments);
    __publicField(this, "_subscriptionOnlyWhenActive");
  }
  async fireLinesChanged(e) {
    this.reset();
    let updated = false;
    if (!this.suspended && !e.pending && e.selections != null && e.editor != null) {
      updated = await this.updateState(e.selections, e.editor);
    }
    return super.fireLinesChanged(updated ? e : { ...e, selections: void 0 });
  }
  onStart() {
    this.onResume();
    return vscode__WEBPACK_IMPORTED_MODULE_0__.Disposable.from({ dispose: () => this.onSuspend() }, _container__WEBPACK_IMPORTED_MODULE_2__.Container.tracker.onDidChangeBlameState(this.onBlameStateChanged, this), _container__WEBPACK_IMPORTED_MODULE_2__.Container.tracker.onDidChangeDirtyState(this.onDirtyStateChanged, this), _container__WEBPACK_IMPORTED_MODULE_2__.Container.tracker.onDidTriggerDirtyIdle(this.onDirtyIdleTriggered, this));
  }
  onResume() {
    if (this._subscriptionOnlyWhenActive == null) {
      this._subscriptionOnlyWhenActive = _container__WEBPACK_IMPORTED_MODULE_2__.Container.tracker.onDidChangeContent(this.onContentChanged, this);
    }
  }
  onSuspend() {
    var _a;
    (_a = this._subscriptionOnlyWhenActive) == null ? void 0 : _a.dispose();
    this._subscriptionOnlyWhenActive = void 0;
  }
  onBlameStateChanged(_e) {
    this.trigger("editor");
  }
  onContentChanged(e) {
    if (e.contentChanges.some((cc) => {
      var _a;
      return (_a = this.selections) == null ? void 0 : _a.some((selection) => cc.range.end.line >= selection.active && selection.active >= cc.range.start.line || cc.range.start.line >= selection.active && selection.active >= cc.range.end.line);
    })) {
      this.trigger("editor");
    }
  }
  onDirtyIdleTriggered(e) {
    const maxLines = _container__WEBPACK_IMPORTED_MODULE_2__.Container.config.advanced.blame.sizeThresholdAfterEdit;
    if (maxLines > 0 && e.document.lineCount > maxLines)
      return;
    this.resume();
  }
  onDirtyStateChanged(e) {
    if (e.dirty) {
      this.suspend();
    } else {
      this.resume({ force: true });
    }
  }
  async updateState(selections, editor) {
    const cc = _logger__WEBPACK_IMPORTED_MODULE_3__.Logger.getCorrelationContext();
    if (!this.includes(selections)) {
      if (cc != null) {
        cc.exitDetails = ` ${_constants__WEBPACK_IMPORTED_MODULE_1__.GlyphChars.Dot} lines no longer match`;
      }
      return false;
    }
    const trackedDocument = await _container__WEBPACK_IMPORTED_MODULE_2__.Container.tracker.getOrAdd(editor.document);
    if (!trackedDocument.isBlameable) {
      if (cc != null) {
        cc.exitDetails = ` ${_constants__WEBPACK_IMPORTED_MODULE_1__.GlyphChars.Dot} document is not blameable`;
      }
      return false;
    }
    if (selections.length === 1) {
      const blameLine = editor.document.isDirty ? await _container__WEBPACK_IMPORTED_MODULE_2__.Container.git.getBlameForLineContents(trackedDocument.uri, selections[0].active, editor.document.getText()) : await _container__WEBPACK_IMPORTED_MODULE_2__.Container.git.getBlameForLine(trackedDocument.uri, selections[0].active);
      if (blameLine === void 0) {
        if (cc != null) {
          cc.exitDetails = ` ${_constants__WEBPACK_IMPORTED_MODULE_1__.GlyphChars.Dot} blame failed`;
        }
        return false;
      }
      this.setState(blameLine.line.line - 1, new GitLineState(blameLine.commit));
    } else {
      const blame = editor.document.isDirty ? await _container__WEBPACK_IMPORTED_MODULE_2__.Container.git.getBlameForFileContents(trackedDocument.uri, editor.document.getText()) : await _container__WEBPACK_IMPORTED_MODULE_2__.Container.git.getBlameForFile(trackedDocument.uri);
      if (blame === void 0) {
        if (cc != null) {
          cc.exitDetails = ` ${_constants__WEBPACK_IMPORTED_MODULE_1__.GlyphChars.Dot} blame failed`;
        }
        return false;
      }
      for (const selection of selections) {
        const commitLine = blame.lines[selection.active];
        this.setState(selection.active, new GitLineState(blame.commits.get(commitLine.sha)));
      }
    }
    if (!this.includes(selections)) {
      if (cc != null) {
        cc.exitDetails = ` ${_constants__WEBPACK_IMPORTED_MODULE_1__.GlyphChars.Dot} lines no longer match`;
      }
      return false;
    }
    if (!trackedDocument.isBlameable) {
      if (cc != null) {
        cc.exitDetails = ` ${_constants__WEBPACK_IMPORTED_MODULE_1__.GlyphChars.Dot} document is not blameable`;
      }
      return false;
    }
    if (editor.document.isDirty) {
      trackedDocument.setForceDirtyStateChangeOnNextDocumentChange();
    }
    return true;
  }
}
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_4__.debug)({
    args: {
      0: (e) => `editor=${e.editor.document.uri.toString(true)}, doc=${e.document.uri.toString(true)}, blameable=${e.blameable}`
    }
  })
], GitLineTracker.prototype, "onBlameStateChanged", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_4__.debug)({
    args: {
      0: (e) => `editor=${e.editor.document.uri.toString(true)}, doc=${e.document.uri.toString(true)}`
    }
  })
], GitLineTracker.prototype, "onContentChanged", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_4__.debug)({
    args: {
      0: (e) => `editor=${e.editor.document.uri.toString(true)}, doc=${e.document.uri.toString(true)}`
    }
  })
], GitLineTracker.prototype, "onDirtyIdleTriggered", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_4__.debug)({
    args: {
      0: (e) => `editor=${e.editor.document.uri.toString(true)}, doc=${e.document.uri.toString(true)}, dirty=${e.dirty}`
    }
  })
], GitLineTracker.prototype, "onDirtyStateChanged", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_4__.debug)({
    args: {
      0: (selections) => selections == null ? void 0 : selections.map((s) => s.active).join(","),
      1: (editor) => editor.document.uri.toString(true)
    },
    exit: (updated) => `returned ${updated}`,
    singleLine: true
  })
], GitLineTracker.prototype, "updateState", 1);


/***/ }),

/***/ "./src/trackers/lineTracker.ts":
/*!*************************************!*\
  !*** ./src/trackers/lineTracker.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "LineTracker": () => (/* binding */ LineTracker)
/* harmony export */ });
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../constants */ "./src/constants.ts");
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../system */ "./src/system.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};



const _LineTracker = class {
  constructor() {
    __publicField(this, "_onDidChangeActiveLines", new vscode__WEBPACK_IMPORTED_MODULE_0__.EventEmitter());
    __publicField(this, "_disposable");
    __publicField(this, "_editor");
    __publicField(this, "_state", new Map());
    __publicField(this, "_selections");
    __publicField(this, "_subscriptions", new Map());
    __publicField(this, "_suspended", false);
    __publicField(this, "_linesChangedDebounced");
  }
  get onDidChangeActiveLines() {
    return this._onDidChangeActiveLines.event;
  }
  dispose() {
    for (const subscriber of this._subscriptions.keys()) {
      this.stop(subscriber);
    }
  }
  onActiveTextEditorChanged(editor) {
    if (this._editor === editor)
      return;
    if (editor !== void 0 && !(0,_constants__WEBPACK_IMPORTED_MODULE_1__.isTextEditor)(editor))
      return;
    this.reset();
    this._editor = editor;
    this._selections = _LineTracker.toLineSelections(editor == null ? void 0 : editor.selections);
    this.trigger("editor");
  }
  onTextEditorSelectionChanged(e) {
    if (this._editor !== e.textEditor && !(0,_constants__WEBPACK_IMPORTED_MODULE_1__.isTextEditor)(e.textEditor))
      return;
    const selections = _LineTracker.toLineSelections(e.selections);
    if (this._editor === e.textEditor && this.includes(selections))
      return;
    this.reset();
    this._editor = e.textEditor;
    this._selections = selections;
    this.trigger(this._editor === e.textEditor ? "selection" : "editor");
  }
  getState(line) {
    return this._state.get(line);
  }
  setState(line, state) {
    this._state.set(line, state);
  }
  get selections() {
    return this._selections;
  }
  includes(lineOrSelections, options) {
    var _a;
    if (Array.isArray(lineOrSelections)) {
      return _LineTracker.includes(lineOrSelections, this._selections);
    }
    if (this._selections == null || this._selections.length === 0)
      return false;
    const line = lineOrSelections;
    const activeOnly = (_a = options == null ? void 0 : options.activeOnly) != null ? _a : true;
    for (const selection of this._selections) {
      if (line === selection.active || !activeOnly && (selection.anchor >= line && line >= selection.active || selection.active >= line && line >= selection.anchor)) {
        return true;
      }
    }
    return false;
  }
  refresh() {
    this.trigger("editor");
  }
  reset() {
    this._state.clear();
  }
  isSubscribed(subscriber) {
    return this._subscriptions.has(subscriber);
  }
  start(subscriber, subscription) {
    var _a, _b;
    const disposable = {
      dispose: () => this.stop(subscriber)
    };
    const first = this._subscriptions.size === 0;
    let subs = this._subscriptions.get(subscriber);
    if (subs === void 0) {
      subs = [subscription];
      this._subscriptions.set(subscriber, subs);
    } else {
      subs.push(subscription);
    }
    if (first) {
      this._disposable = vscode__WEBPACK_IMPORTED_MODULE_0__.Disposable.from(vscode__WEBPACK_IMPORTED_MODULE_0__.window.onDidChangeActiveTextEditor(_system__WEBPACK_IMPORTED_MODULE_2__.Functions.debounce(this.onActiveTextEditorChanged, 0), this), vscode__WEBPACK_IMPORTED_MODULE_0__.window.onDidChangeTextEditorSelection(this.onTextEditorSelectionChanged, this), (_b = (_a = this.onStart) == null ? void 0 : _a.call(this)) != null ? _b : { dispose: () => {
      } });
      setImmediate(() => this.onActiveTextEditorChanged(vscode__WEBPACK_IMPORTED_MODULE_0__.window.activeTextEditor));
    }
    return disposable;
  }
  stop(subscriber) {
    const subs = this._subscriptions.get(subscriber);
    if (subs === void 0)
      return;
    this._subscriptions.delete(subscriber);
    for (const sub of subs) {
      sub.dispose();
    }
    if (this._subscriptions.size !== 0)
      return;
    if (this._linesChangedDebounced !== void 0) {
      this._linesChangedDebounced.cancel();
    }
    if (this._disposable !== void 0) {
      this._disposable.dispose();
      this._disposable = void 0;
    }
  }
  get suspended() {
    return this._suspended;
  }
  resume(options = {}) {
    var _a;
    if (!options.force && !this._suspended)
      return;
    this._suspended = false;
    void ((_a = this.onResume) == null ? void 0 : _a.call(this));
    this.trigger("editor");
  }
  suspend(options = {}) {
    var _a;
    if (!options.force && this._suspended)
      return;
    this._suspended = true;
    void ((_a = this.onSuspend) == null ? void 0 : _a.call(this));
    this.trigger("editor");
  }
  fireLinesChanged(e) {
    this._onDidChangeActiveLines.fire(e);
  }
  trigger(reason) {
    this.onLinesChanged({ editor: this._editor, selections: this.selections, reason });
  }
  onLinesChanged(e) {
    if (e.selections === void 0) {
      setImmediate(() => {
        if (vscode__WEBPACK_IMPORTED_MODULE_0__.window.activeTextEditor !== e.editor)
          return;
        if (this._linesChangedDebounced !== void 0) {
          this._linesChangedDebounced.cancel();
        }
        void this.fireLinesChanged(e);
      });
      return;
    }
    if (this._linesChangedDebounced === void 0) {
      this._linesChangedDebounced = _system__WEBPACK_IMPORTED_MODULE_2__.Functions.debounce((e2) => {
        var _a;
        if (vscode__WEBPACK_IMPORTED_MODULE_0__.window.activeTextEditor !== e2.editor)
          return;
        if (!_LineTracker.includes(e2.selections, _LineTracker.toLineSelections((_a = e2.editor) == null ? void 0 : _a.selections))) {
          return;
        }
        void this.fireLinesChanged(e2);
      }, 250, { track: true });
    }
    if (!this._linesChangedDebounced.pending()) {
      void this.fireLinesChanged({ ...e, pending: true });
    }
    this._linesChangedDebounced(e);
  }
  static includes(selections, inSelections) {
    if (selections == null && inSelections == null)
      return true;
    if (selections == null || inSelections == null || selections.length !== inSelections.length)
      return false;
    let match;
    return selections.every((s, i) => {
      match = inSelections[i];
      return s.active === match.active && s.anchor === match.anchor;
    });
  }
  static toLineSelections(selections) {
    return selections == null ? void 0 : selections.map((s) => ({ active: s.active.line, anchor: s.anchor.line }));
  }
};
let LineTracker = _LineTracker;
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_2__.debug)({ args: false })
], LineTracker.prototype, "start", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_2__.debug)({ args: false })
], LineTracker.prototype, "stop", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_2__.debug)()
], LineTracker.prototype, "resume", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_2__.debug)()
], LineTracker.prototype, "suspend", 1);


/***/ }),

/***/ "./src/trackers/trackedDocument.ts":
/*!*****************************************!*\
  !*** ./src/trackers/trackedDocument.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TrackedDocument": () => (/* binding */ TrackedDocument)
/* harmony export */ });
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../constants */ "./src/constants.ts");
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../container */ "./src/container.ts");
/* harmony import */ var _git_git__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../git/git */ "./src/git/git.ts");
/* harmony import */ var _git_gitUri__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../git/gitUri */ "./src/git/gitUri.ts");
/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../logger */ "./src/logger.ts");
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../system */ "./src/system.ts");

var __defProp = Object.defineProperty;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};







class TrackedDocument {
  constructor(_document, key, dirty, _eventDelegates) {
    this._document = _document;
    this.key = key;
    this.dirty = dirty;
    this._eventDelegates = _eventDelegates;
    __publicField(this, "_onDidBlameStateChange", new vscode__WEBPACK_IMPORTED_MODULE_0__.EventEmitter());
    __publicField(this, "state");
    __publicField(this, "_disposable");
    __publicField(this, "_disposed", false);
    __publicField(this, "_repo");
    __publicField(this, "_uri");
    __publicField(this, "initializing", true);
    __publicField(this, "_forceDirtyStateChangeOnNextDocumentChange", false);
    __publicField(this, "_hasRemotes", false);
    __publicField(this, "_isDirtyIdle", false);
    __publicField(this, "_isTracked", false);
    __publicField(this, "_blameFailed", false);
  }
  static async create(document, key, dirty, eventDelegates) {
    const doc = new TrackedDocument(document, key, dirty, eventDelegates);
    await doc.initialize();
    return doc;
  }
  get onDidBlameStateChange() {
    return this._onDidBlameStateChange.event;
  }
  dispose() {
    var _a;
    this._disposed = true;
    this.reset("dispose");
    (_a = this._disposable) == null ? void 0 : _a.dispose();
  }
  async initialize() {
    const uri = this._document.uri;
    if (_container__WEBPACK_IMPORTED_MODULE_2__.Container.git == null) {
      if (!await _system__WEBPACK_IMPORTED_MODULE_6__.Functions.waitUntil(() => _container__WEBPACK_IMPORTED_MODULE_2__.Container.git != null, 2e3)) {
        _logger__WEBPACK_IMPORTED_MODULE_5__.Logger.log(`TrackedDocument.initialize(${uri.toString(true)})`, "Timed out waiting for the GitService to start");
        throw new Error("TrackedDocument timed out waiting for the GitService to start");
      }
    }
    this._uri = await _git_gitUri__WEBPACK_IMPORTED_MODULE_4__.GitUri.fromUri(uri);
    if (this._disposed)
      return void 0;
    const repo = await _container__WEBPACK_IMPORTED_MODULE_2__.Container.git.getRepository(this._uri);
    this._repo = repo;
    if (this._disposed)
      return void 0;
    if (repo != null) {
      this._disposable = repo.onDidChange(this.onRepositoryChanged, this);
    }
    await this.update();
    this.initializing = false;
    return repo;
  }
  onRepositoryChanged(e) {
    if (!e.changed(_git_git__WEBPACK_IMPORTED_MODULE_3__.RepositoryChange.Index, _git_git__WEBPACK_IMPORTED_MODULE_3__.RepositoryChange.Heads, _git_git__WEBPACK_IMPORTED_MODULE_3__.RepositoryChange.Status, _git_git__WEBPACK_IMPORTED_MODULE_3__.RepositoryChange.Unknown, _git_git__WEBPACK_IMPORTED_MODULE_3__.RepositoryChangeComparisonMode.Any)) {
      return;
    }
    this.reset("repository");
    void this.update();
  }
  get forceDirtyStateChangeOnNextDocumentChange() {
    return this._forceDirtyStateChangeOnNextDocumentChange;
  }
  get hasRemotes() {
    return this._hasRemotes;
  }
  get isBlameable() {
    if (this._blameFailed)
      return false;
    return this._isTracked;
  }
  get isDirtyIdle() {
    return this._isDirtyIdle;
  }
  set isDirtyIdle(value) {
    this._isDirtyIdle = value;
  }
  get isRevision() {
    return this._uri != null ? Boolean(this._uri.sha) && this._uri.sha !== _git_git__WEBPACK_IMPORTED_MODULE_3__.GitRevision.deletedOrMissing : false;
  }
  get isTracked() {
    return this._isTracked;
  }
  get lineCount() {
    return this._document.lineCount;
  }
  get uri() {
    return this._uri;
  }
  activate() {
    void (0,_constants__WEBPACK_IMPORTED_MODULE_1__.setContext)(_constants__WEBPACK_IMPORTED_MODULE_1__.ContextKeys.ActiveFileStatus, this.getStatus());
  }
  is(document) {
    return document === this._document;
  }
  reset(reason) {
    this._blameFailed = false;
    this._isDirtyIdle = false;
    if (this.state == null)
      return;
    this.state = void 0;
    _logger__WEBPACK_IMPORTED_MODULE_5__.Logger.log(`Reset state for '${this.key}', reason=${reason}`);
  }
  setBlameFailure() {
    const wasBlameable = this.isBlameable;
    this._blameFailed = true;
    if (wasBlameable && (0,_constants__WEBPACK_IMPORTED_MODULE_1__.isActiveDocument)(this._document)) {
      void this.update({ forceBlameChange: true });
    }
  }
  resetForceDirtyStateChangeOnNextDocumentChange() {
    this._forceDirtyStateChangeOnNextDocumentChange = false;
  }
  setForceDirtyStateChangeOnNextDocumentChange() {
    this._forceDirtyStateChangeOnNextDocumentChange = true;
  }
  async update({ forceBlameChange } = {}) {
    if (this._disposed || this._uri == null) {
      this._hasRemotes = false;
      this._isTracked = false;
      return;
    }
    this._isDirtyIdle = false;
    const active = (0,_constants__WEBPACK_IMPORTED_MODULE_1__.getEditorIfActive)(this._document);
    const wasBlameable = forceBlameChange ? void 0 : this.isBlameable;
    this._isTracked = await _container__WEBPACK_IMPORTED_MODULE_2__.Container.git.isTracked(this._uri);
    let repo = void 0;
    if (this._isTracked) {
      repo = this._repo;
    }
    if (repo != null) {
      this._hasRemotes = await repo.hasRemotes();
    } else {
      this._hasRemotes = false;
    }
    if (active != null) {
      const blameable = this.isBlameable;
      void (0,_constants__WEBPACK_IMPORTED_MODULE_1__.setContext)(_constants__WEBPACK_IMPORTED_MODULE_1__.ContextKeys.ActiveFileStatus, this.getStatus());
      if (!this.initializing && wasBlameable !== blameable) {
        const e = { editor: active, document: this, blameable };
        this._onDidBlameStateChange.fire(e);
        this._eventDelegates.onDidBlameStateChange(e);
      }
    }
  }
  getStatus() {
    let status = "";
    if (this.isTracked) {
      status += "tracked|";
    }
    if (this.isBlameable) {
      status += "blameable|";
    }
    if (this.isRevision) {
      status += "revision|";
    }
    if (this.hasRemotes) {
      status += "remotes|";
    }
    return status ? status : void 0;
  }
}


/***/ }),

/***/ "./src/views/branchesView.ts":
/*!***********************************!*\
  !*** ./src/views/branchesView.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "BranchesRepositoryNode": () => (/* binding */ BranchesRepositoryNode),
/* harmony export */   "BranchesViewNode": () => (/* binding */ BranchesViewNode),
/* harmony export */   "BranchesView": () => (/* binding */ BranchesView)
/* harmony export */ });
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _configuration__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../configuration */ "./src/configuration.ts");
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../constants */ "./src/constants.ts");
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../container */ "./src/container.ts");
/* harmony import */ var _git_git__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../git/git */ "./src/git/git.ts");
/* harmony import */ var _git_gitUri__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../git/gitUri */ "./src/git/gitUri.ts");
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../system */ "./src/system.ts");
/* harmony import */ var _nodes__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./nodes */ "./src/views/nodes.ts");
/* harmony import */ var _viewBase__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./viewBase */ "./src/views/viewBase.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};









class BranchesRepositoryNode extends _nodes__WEBPACK_IMPORTED_MODULE_7__.RepositoryFolderNode {
  async getChildren() {
    if (this.child == null) {
      this.child = new _nodes__WEBPACK_IMPORTED_MODULE_7__.BranchesNode(this.uri, this.view, this, this.repo);
    }
    return this.child.getChildren();
  }
  changed(e) {
    return e.changed(_git_git__WEBPACK_IMPORTED_MODULE_4__.RepositoryChange.Config, _git_git__WEBPACK_IMPORTED_MODULE_4__.RepositoryChange.Heads, _git_git__WEBPACK_IMPORTED_MODULE_4__.RepositoryChange.Index, _git_git__WEBPACK_IMPORTED_MODULE_4__.RepositoryChange.Remotes, _git_git__WEBPACK_IMPORTED_MODULE_4__.RepositoryChange.RemoteProviders, _git_git__WEBPACK_IMPORTED_MODULE_4__.RepositoryChange.Status, _git_git__WEBPACK_IMPORTED_MODULE_4__.RepositoryChange.Unknown, _git_git__WEBPACK_IMPORTED_MODULE_4__.RepositoryChangeComparisonMode.Any);
  }
}
class BranchesViewNode extends _nodes__WEBPACK_IMPORTED_MODULE_7__.ViewNode {
  constructor(view) {
    super(_nodes__WEBPACK_IMPORTED_MODULE_7__.unknownGitUri, view);
    __publicField(this, "splatted", true);
    __publicField(this, "children");
  }
  async getChildren() {
    if (this.children == null) {
      const repositories = await _container__WEBPACK_IMPORTED_MODULE_3__.Container.git.getOrderedRepositories();
      if (repositories.length === 0) {
        this.view.message = "No branches could be found.";
        return [];
      }
      this.view.message = void 0;
      const splat = repositories.length === 1;
      this.children = repositories.map((r) => new BranchesRepositoryNode(_git_gitUri__WEBPACK_IMPORTED_MODULE_5__.GitUri.fromRepoPath(r.path), this.view, this, r, splat));
    }
    if (this.children.length === 1) {
      const [child] = this.children;
      if (!child.repo.supportsChangeEvents) {
        this.view.description = `${_system__WEBPACK_IMPORTED_MODULE_6__.Strings.pad(_constants__WEBPACK_IMPORTED_MODULE_2__.GlyphChars.Warning, 0, 2)}Auto-refresh unavailable`;
      }
      const branches = await child.repo.getBranches({ filter: (b) => !b.remote });
      if (branches.length === 0) {
        this.view.message = "No branches could be found.";
        this.view.title = "Branches";
        void child.ensureSubscription();
        return [];
      }
      this.view.message = void 0;
      this.view.title = `Branches (${branches.length})`;
      return child.getChildren();
    }
    return this.children;
  }
  getTreeItem() {
    const item = new vscode__WEBPACK_IMPORTED_MODULE_0__.TreeItem("Branches", vscode__WEBPACK_IMPORTED_MODULE_0__.TreeItemCollapsibleState.Expanded);
    return item;
  }
  async getSplattedChild() {
    var _a;
    if (this.children == null) {
      await this.getChildren();
    }
    return ((_a = this.children) == null ? void 0 : _a.length) === 1 ? this.children[0] : void 0;
  }
  refresh(reset = false) {
    if (reset && this.children != null) {
      for (const child of this.children) {
        child.dispose();
      }
      this.children = void 0;
    }
  }
}
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_6__.gate)(),
  (0,_system__WEBPACK_IMPORTED_MODULE_6__.debug)()
], BranchesViewNode.prototype, "refresh", 1);
class BranchesView extends _viewBase__WEBPACK_IMPORTED_MODULE_8__.ViewBase {
  constructor() {
    super("gitlens.views.branches", "Branches");
    __publicField(this, "configKey", "branches");
  }
  getRoot() {
    return new BranchesViewNode(this);
  }
  registerCommands() {
    void _container__WEBPACK_IMPORTED_MODULE_3__.Container.viewCommands;
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("copy"), () => vscode__WEBPACK_IMPORTED_MODULE_0__.commands.executeCommand("gitlens.views.copy", this.selection), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("refresh"), async () => {
      await _container__WEBPACK_IMPORTED_MODULE_3__.Container.git.resetCaches("branches");
      return this.refresh(true);
    }, this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("setLayoutToList"), () => this.setLayout(_configuration__WEBPACK_IMPORTED_MODULE_1__.ViewBranchesLayout.List), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("setLayoutToTree"), () => this.setLayout(_configuration__WEBPACK_IMPORTED_MODULE_1__.ViewBranchesLayout.Tree), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("setFilesLayoutToAuto"), () => this.setFilesLayout(_configuration__WEBPACK_IMPORTED_MODULE_1__.ViewFilesLayout.Auto), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("setFilesLayoutToList"), () => this.setFilesLayout(_configuration__WEBPACK_IMPORTED_MODULE_1__.ViewFilesLayout.List), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("setFilesLayoutToTree"), () => this.setFilesLayout(_configuration__WEBPACK_IMPORTED_MODULE_1__.ViewFilesLayout.Tree), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("setShowAvatarsOn"), () => this.setShowAvatars(true), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("setShowAvatarsOff"), () => this.setShowAvatars(false), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("setShowBranchComparisonOn"), () => this.setShowBranchComparison(true), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("setShowBranchComparisonOff"), () => this.setShowBranchComparison(false), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("setShowBranchPullRequestOn"), () => this.setShowBranchPullRequest(true), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("setShowBranchPullRequestOff"), () => this.setShowBranchPullRequest(false), this);
  }
  filterConfigurationChanged(e) {
    const changed = super.filterConfigurationChanged(e);
    if (!changed && !_configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.changed(e, "defaultDateFormat") && !_configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.changed(e, "defaultDateShortFormat") && !_configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.changed(e, "defaultDateSource") && !_configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.changed(e, "defaultDateStyle") && !_configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.changed(e, "defaultGravatarsStyle") && !_configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.changed(e, "defaultTimeFormat") && !_configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.changed(e, "sortBranchesBy")) {
      return false;
    }
    return true;
  }
  findBranch(branch, token) {
    if (branch.remote)
      return void 0;
    const repoNodeId = _nodes__WEBPACK_IMPORTED_MODULE_7__.RepositoryNode.getId(branch.repoPath);
    return this.findNode((n) => {
      var _a;
      return ((_a = n.branch) == null ? void 0 : _a.ref) === branch.ref;
    }, {
      allowPaging: true,
      maxDepth: 4,
      canTraverse: (n) => {
        if (n instanceof BranchesViewNode)
          return true;
        if (n instanceof BranchesRepositoryNode || n instanceof _nodes__WEBPACK_IMPORTED_MODULE_7__.BranchOrTagFolderNode) {
          return n.id.startsWith(repoNodeId);
        }
        return false;
      },
      token
    });
  }
  async findCommit(commit, token) {
    const repoNodeId = _nodes__WEBPACK_IMPORTED_MODULE_7__.RepositoryNode.getId(commit.repoPath);
    const branches = await _container__WEBPACK_IMPORTED_MODULE_3__.Container.git.getCommitBranches(commit.repoPath, commit.ref);
    if (branches.length === 0)
      return void 0;
    return this.findNode((n) => {
      var _a;
      return ((_a = n.commit) == null ? void 0 : _a.ref) === commit.ref;
    }, {
      allowPaging: true,
      maxDepth: 5,
      canTraverse: async (n) => {
        if (n instanceof BranchesViewNode)
          return true;
        if (n instanceof BranchesRepositoryNode || n instanceof _nodes__WEBPACK_IMPORTED_MODULE_7__.BranchOrTagFolderNode) {
          return n.id.startsWith(repoNodeId);
        }
        if (n instanceof _nodes__WEBPACK_IMPORTED_MODULE_7__.BranchNode && branches.includes(n.branch.name)) {
          await n.loadMore({ until: commit.ref });
          return true;
        }
        return false;
      },
      token
    });
  }
  revealBranch(branch, options) {
    return vscode__WEBPACK_IMPORTED_MODULE_0__.window.withProgress({
      location: vscode__WEBPACK_IMPORTED_MODULE_0__.ProgressLocation.Notification,
      title: `Revealing ${_git_git__WEBPACK_IMPORTED_MODULE_4__.GitReference.toString(branch, { icon: false })} in the side bar...`,
      cancellable: true
    }, async (progress, token) => {
      const node = await this.findBranch(branch, token);
      if (node == null)
        return void 0;
      await this.ensureRevealNode(node, options);
      return node;
    });
  }
  async revealCommit(commit, options) {
    return vscode__WEBPACK_IMPORTED_MODULE_0__.window.withProgress({
      location: vscode__WEBPACK_IMPORTED_MODULE_0__.ProgressLocation.Notification,
      title: `Revealing ${_git_git__WEBPACK_IMPORTED_MODULE_4__.GitReference.toString(commit, { icon: false })} in the side bar...`,
      cancellable: true
    }, async (progress, token) => {
      const node = await this.findCommit(commit, token);
      if (node == null)
        return void 0;
      await this.ensureRevealNode(node, options);
      return node;
    });
  }
  setLayout(layout) {
    return _configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.updateEffective(`views.${this.configKey}.branches.layout`, layout);
  }
  setFilesLayout(layout) {
    return _configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.updateEffective(`views.${this.configKey}.files.layout`, layout);
  }
  setShowAvatars(enabled) {
    return _configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.updateEffective(`views.${this.configKey}.avatars`, enabled);
  }
  setShowBranchComparison(enabled) {
    return _configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.updateEffective(`views.${this.configKey}.showBranchComparison`, enabled ? _configuration__WEBPACK_IMPORTED_MODULE_1__.ViewShowBranchComparison.Branch : false);
  }
  async setShowBranchPullRequest(enabled) {
    await _configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.updateEffective(`views.${this.configKey}.pullRequests.showForBranches`, enabled);
    await _configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.updateEffective(`views.${this.configKey}.pullRequests.enabled`, enabled);
  }
}
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_6__.gate)(() => "")
], BranchesView.prototype, "revealBranch", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_6__.gate)(() => "")
], BranchesView.prototype, "revealCommit", 1);


/***/ }),

/***/ "./src/views/commitsView.ts":
/*!**********************************!*\
  !*** ./src/views/commitsView.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CommitsRepositoryNode": () => (/* binding */ CommitsRepositoryNode),
/* harmony export */   "CommitsViewNode": () => (/* binding */ CommitsViewNode),
/* harmony export */   "CommitsView": () => (/* binding */ CommitsView)
/* harmony export */ });
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _configuration__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../configuration */ "./src/configuration.ts");
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../constants */ "./src/constants.ts");
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../container */ "./src/container.ts");
/* harmony import */ var _git_git__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../git/git */ "./src/git/git.ts");
/* harmony import */ var _git_gitUri__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../git/gitUri */ "./src/git/gitUri.ts");
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../system */ "./src/system.ts");
/* harmony import */ var _nodes__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./nodes */ "./src/views/nodes.ts");
/* harmony import */ var _viewBase__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./viewBase */ "./src/views/viewBase.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};









class CommitsRepositoryNode extends _nodes__WEBPACK_IMPORTED_MODULE_7__.RepositoryFolderNode {
  async getChildren() {
    if (this.child == null) {
      const branch = await this.repo.getBranch();
      if (branch == null) {
        this.view.message = "No commits could be found.";
        return [];
      }
      this.view.message = void 0;
      let authors;
      if (this.view.state.myCommitsOnly) {
        const user = await _container__WEBPACK_IMPORTED_MODULE_3__.Container.git.getCurrentUser(this.repo.path);
        if (user != null) {
          authors = [`^${user.name} <${user.email}>$`];
        }
      }
      this.child = new _nodes__WEBPACK_IMPORTED_MODULE_7__.BranchNode(this.uri, this.view, this, branch, true, {
        expanded: true,
        limitCommits: !this.splatted,
        showComparison: this.view.config.showBranchComparison,
        showCurrent: false,
        showTracking: true,
        authors
      });
    }
    return this.child.getChildren();
  }
  async refresh(reset = false) {
    var _a;
    if (reset) {
      this.child = void 0;
    } else {
      void ((_a = this.parent) == null ? void 0 : _a.triggerChange(false));
    }
    await this.ensureSubscription();
  }
  async subscribe() {
    var _a, _b;
    const lastFetched = (_b = await ((_a = this.repo) == null ? void 0 : _a.getLastFetched())) != null ? _b : 0;
    const interval = _git_git__WEBPACK_IMPORTED_MODULE_4__.Repository.getLastFetchedUpdateInterval(lastFetched);
    if (lastFetched !== 0 && interval > 0) {
      return vscode__WEBPACK_IMPORTED_MODULE_0__.Disposable.from(await super.subscribe(), _system__WEBPACK_IMPORTED_MODULE_6__.Functions.interval(() => {
        var _a2;
        if (interval !== _git_git__WEBPACK_IMPORTED_MODULE_4__.Repository.getLastFetchedUpdateInterval(lastFetched)) {
          void this.resetSubscription();
        }
        if (this.splatted) {
          void this.view.triggerNodeChange((_a2 = this.parent) != null ? _a2 : this);
        } else {
          void this.view.triggerNodeChange(this);
        }
      }, interval));
    }
    return super.subscribe();
  }
  changed(e) {
    return e.changed(_git_git__WEBPACK_IMPORTED_MODULE_4__.RepositoryChange.Config, _git_git__WEBPACK_IMPORTED_MODULE_4__.RepositoryChange.Heads, _git_git__WEBPACK_IMPORTED_MODULE_4__.RepositoryChange.Index, _git_git__WEBPACK_IMPORTED_MODULE_4__.RepositoryChange.Remotes, _git_git__WEBPACK_IMPORTED_MODULE_4__.RepositoryChange.RemoteProviders, _git_git__WEBPACK_IMPORTED_MODULE_4__.RepositoryChange.Status, _git_git__WEBPACK_IMPORTED_MODULE_4__.RepositoryChange.Unknown, _git_git__WEBPACK_IMPORTED_MODULE_4__.RepositoryChangeComparisonMode.Any);
  }
}
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_6__.gate)(),
  (0,_system__WEBPACK_IMPORTED_MODULE_6__.debug)()
], CommitsRepositoryNode.prototype, "refresh", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_6__.debug)()
], CommitsRepositoryNode.prototype, "subscribe", 1);
class CommitsViewNode extends _nodes__WEBPACK_IMPORTED_MODULE_7__.ViewNode {
  constructor(view) {
    super(_nodes__WEBPACK_IMPORTED_MODULE_7__.unknownGitUri, view);
    __publicField(this, "splatted", true);
    __publicField(this, "children");
  }
  async getChildren() {
    var _a;
    if (this.children == null) {
      const repositories = await _container__WEBPACK_IMPORTED_MODULE_3__.Container.git.getOrderedRepositories();
      if (repositories.length === 0) {
        this.view.message = "No commits could be found.";
        return [];
      }
      this.view.message = void 0;
      const splat = repositories.length === 1;
      this.children = repositories.map((r) => new CommitsRepositoryNode(_git_gitUri__WEBPACK_IMPORTED_MODULE_5__.GitUri.fromRepoPath(r.path), this.view, this, r, splat, {
        showBranchAndLastFetched: true
      }));
    }
    if (this.children.length === 1) {
      const [child] = this.children;
      const branch = await child.repo.getBranch();
      if (branch != null) {
        const lastFetched = (_a = await child.repo.getLastFetched()) != null ? _a : 0;
        const status = branch.getTrackingStatus();
        this.view.description = `${status ? `${status} ${_constants__WEBPACK_IMPORTED_MODULE_2__.GlyphChars.Dot} ` : ""}${branch.name}${branch.rebasing ? " (Rebasing)" : ""}${lastFetched ? ` ${_constants__WEBPACK_IMPORTED_MODULE_2__.GlyphChars.Dot} Last fetched ${_git_git__WEBPACK_IMPORTED_MODULE_4__.Repository.formatLastFetched(lastFetched)}` : ""}${child.repo.supportsChangeEvents ? "" : `${_system__WEBPACK_IMPORTED_MODULE_6__.Strings.pad(_constants__WEBPACK_IMPORTED_MODULE_2__.GlyphChars.Warning, 3, 2)}Auto-refresh unavailable`}`;
      } else {
        this.view.description = child.repo.supportsChangeEvents ? void 0 : `${_system__WEBPACK_IMPORTED_MODULE_6__.Strings.pad(_constants__WEBPACK_IMPORTED_MODULE_2__.GlyphChars.Warning, 1, 2)}Auto-refresh unavailable`;
      }
      return child.getChildren();
    }
    return this.children;
  }
  getTreeItem() {
    const item = new vscode__WEBPACK_IMPORTED_MODULE_0__.TreeItem("Commits", vscode__WEBPACK_IMPORTED_MODULE_0__.TreeItemCollapsibleState.Expanded);
    return item;
  }
  async getSplattedChild() {
    var _a;
    if (this.children == null) {
      await this.getChildren();
    }
    return ((_a = this.children) == null ? void 0 : _a.length) === 1 ? this.children[0] : void 0;
  }
  refresh(reset = false) {
    if (reset && this.children != null) {
      for (const child of this.children) {
        child.dispose();
      }
      this.children = void 0;
    }
  }
}
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_6__.gate)(),
  (0,_system__WEBPACK_IMPORTED_MODULE_6__.debug)()
], CommitsViewNode.prototype, "refresh", 1);
class CommitsView extends _viewBase__WEBPACK_IMPORTED_MODULE_8__.ViewBase {
  constructor() {
    super("gitlens.views.commits", "Commits");
    __publicField(this, "configKey", "commits");
    __publicField(this, "_state", {});
  }
  get state() {
    return this._state;
  }
  getRoot() {
    return new CommitsViewNode(this);
  }
  registerCommands() {
    void _container__WEBPACK_IMPORTED_MODULE_3__.Container.viewCommands;
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("copy"), () => vscode__WEBPACK_IMPORTED_MODULE_0__.commands.executeCommand("gitlens.views.copy", this.selection), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("refresh"), async () => {
      await _container__WEBPACK_IMPORTED_MODULE_3__.Container.git.resetCaches("branches", "status", "tags");
      return this.refresh(true);
    }, this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("setFilesLayoutToAuto"), () => this.setFilesLayout(_configuration__WEBPACK_IMPORTED_MODULE_1__.ViewFilesLayout.Auto), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("setFilesLayoutToList"), () => this.setFilesLayout(_configuration__WEBPACK_IMPORTED_MODULE_1__.ViewFilesLayout.List), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("setFilesLayoutToTree"), () => this.setFilesLayout(_configuration__WEBPACK_IMPORTED_MODULE_1__.ViewFilesLayout.Tree), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("setMyCommitsOnlyOn"), () => this.setMyCommitsOnly(true), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("setMyCommitsOnlyOff"), () => this.setMyCommitsOnly(false), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("setShowAvatarsOn"), () => this.setShowAvatars(true), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("setShowAvatarsOff"), () => this.setShowAvatars(false), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("setShowBranchComparisonOn"), () => this.setShowBranchComparison(true), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("setShowBranchComparisonOff"), () => this.setShowBranchComparison(false), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("setShowBranchPullRequestOn"), () => this.setShowBranchPullRequest(true), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("setShowBranchPullRequestOff"), () => this.setShowBranchPullRequest(false), this);
  }
  filterConfigurationChanged(e) {
    const changed = super.filterConfigurationChanged(e);
    if (!changed && !_configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.changed(e, "defaultDateFormat") && !_configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.changed(e, "defaultDateShortFormat") && !_configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.changed(e, "defaultDateSource") && !_configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.changed(e, "defaultDateStyle") && !_configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.changed(e, "defaultGravatarsStyle") && !_configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.changed(e, "defaultTimeFormat")) {
      return false;
    }
    return true;
  }
  async findCommit(commit, token) {
    const repoNodeId = _nodes__WEBPACK_IMPORTED_MODULE_7__.RepositoryNode.getId(commit.repoPath);
    const branch = await _container__WEBPACK_IMPORTED_MODULE_3__.Container.git.getBranch(commit.repoPath);
    if (branch == null)
      return void 0;
    if (!await _container__WEBPACK_IMPORTED_MODULE_3__.Container.git.branchContainsCommit(commit.repoPath, branch.name, commit.ref))
      return void 0;
    return this.findNode((n) => {
      var _a;
      return ((_a = n.commit) == null ? void 0 : _a.ref) === commit.ref;
    }, {
      allowPaging: true,
      maxDepth: 2,
      canTraverse: async (n) => {
        var _a, _b, _c;
        if (n instanceof CommitsViewNode) {
          let node = await ((_a = n.getSplattedChild) == null ? void 0 : _a.call(n));
          if (node instanceof CommitsRepositoryNode) {
            node = await ((_b = node.getSplattedChild) == null ? void 0 : _b.call(node));
            if (node instanceof _nodes__WEBPACK_IMPORTED_MODULE_7__.BranchNode) {
              await node.loadMore({ until: commit.ref });
            }
          }
          return true;
        }
        if (n instanceof CommitsRepositoryNode) {
          if (n.id.startsWith(repoNodeId)) {
            const node = await ((_c = n.getSplattedChild) == null ? void 0 : _c.call(n));
            if (node instanceof _nodes__WEBPACK_IMPORTED_MODULE_7__.BranchNode) {
              await node.loadMore({ until: commit.ref });
              return true;
            }
          }
        }
        if (n instanceof _nodes__WEBPACK_IMPORTED_MODULE_7__.BranchTrackingStatusNode) {
          return n.id.startsWith(repoNodeId);
        }
        return false;
      },
      token
    });
  }
  async revealCommit(commit, options) {
    return vscode__WEBPACK_IMPORTED_MODULE_0__.window.withProgress({
      location: vscode__WEBPACK_IMPORTED_MODULE_0__.ProgressLocation.Notification,
      title: `Revealing ${_git_git__WEBPACK_IMPORTED_MODULE_4__.GitReference.toString(commit, { icon: false })} in the side bar...`,
      cancellable: true
    }, async (progress, token) => {
      const node = await this.findCommit(commit, token);
      if (node == null)
        return void 0;
      await this.ensureRevealNode(node, options);
      return node;
    });
  }
  setFilesLayout(layout) {
    return _configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.updateEffective(`views.${this.configKey}.files.layout`, layout);
  }
  setMyCommitsOnly(enabled) {
    void (0,_constants__WEBPACK_IMPORTED_MODULE_2__.setContext)(_constants__WEBPACK_IMPORTED_MODULE_2__.ContextKeys.ViewsCommitsMyCommitsOnly, enabled);
    this.state.myCommitsOnly = enabled;
    void this.refresh(true);
  }
  setShowAvatars(enabled) {
    return _configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.updateEffective(`views.${this.configKey}.avatars`, enabled);
  }
  setShowBranchComparison(enabled) {
    return _configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.updateEffective(`views.${this.configKey}.showBranchComparison`, enabled ? _configuration__WEBPACK_IMPORTED_MODULE_1__.ViewShowBranchComparison.Working : false);
  }
  async setShowBranchPullRequest(enabled) {
    await _configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.updateEffective(`views.${this.configKey}.pullRequests.showForBranches`, enabled);
    await _configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.updateEffective(`views.${this.configKey}.pullRequests.enabled`, enabled);
  }
}
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_6__.gate)(() => "")
], CommitsView.prototype, "revealCommit", 1);


/***/ }),

/***/ "./src/views/contributorsView.ts":
/*!***************************************!*\
  !*** ./src/views/contributorsView.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ContributorsRepositoryNode": () => (/* binding */ ContributorsRepositoryNode),
/* harmony export */   "ContributorsViewNode": () => (/* binding */ ContributorsViewNode),
/* harmony export */   "ContributorsView": () => (/* binding */ ContributorsView)
/* harmony export */ });
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _avatars__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../avatars */ "./src/avatars.ts");
/* harmony import */ var _configuration__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../configuration */ "./src/configuration.ts");
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../constants */ "./src/constants.ts");
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../container */ "./src/container.ts");
/* harmony import */ var _git_git__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../git/git */ "./src/git/git.ts");
/* harmony import */ var _git_gitUri__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../git/gitUri */ "./src/git/gitUri.ts");
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../system */ "./src/system.ts");
/* harmony import */ var _nodes__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./nodes */ "./src/views/nodes.ts");
/* harmony import */ var _viewBase__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./viewBase */ "./src/views/viewBase.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};










class ContributorsRepositoryNode extends _nodes__WEBPACK_IMPORTED_MODULE_8__.RepositoryFolderNode {
  async getChildren() {
    if (this.child == null) {
      this.child = new _nodes__WEBPACK_IMPORTED_MODULE_8__.ContributorsNode(this.uri, this.view, this, this.repo);
    }
    return this.child.getChildren();
  }
  async subscribe() {
    return vscode__WEBPACK_IMPORTED_MODULE_0__.Disposable.from(await super.subscribe(), _avatars__WEBPACK_IMPORTED_MODULE_1__.Avatars.onDidFetch((e) => {
      var _a;
      return (_a = this.child) == null ? void 0 : _a.updateAvatar(e.email);
    }));
  }
  changed(e) {
    return e.changed(_git_git__WEBPACK_IMPORTED_MODULE_5__.RepositoryChange.Config, _git_git__WEBPACK_IMPORTED_MODULE_5__.RepositoryChange.Heads, _git_git__WEBPACK_IMPORTED_MODULE_5__.RepositoryChange.Remotes, _git_git__WEBPACK_IMPORTED_MODULE_5__.RepositoryChange.Unknown, _git_git__WEBPACK_IMPORTED_MODULE_5__.RepositoryChangeComparisonMode.Any);
  }
}
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_7__.debug)()
], ContributorsRepositoryNode.prototype, "subscribe", 1);
class ContributorsViewNode extends _nodes__WEBPACK_IMPORTED_MODULE_8__.ViewNode {
  constructor(view) {
    super(_nodes__WEBPACK_IMPORTED_MODULE_8__.unknownGitUri, view);
    __publicField(this, "splatted", true);
    __publicField(this, "children");
  }
  async getChildren() {
    if (this.children == null) {
      const repositories = await _container__WEBPACK_IMPORTED_MODULE_4__.Container.git.getOrderedRepositories();
      if (repositories.length === 0) {
        this.view.message = "No contributors could be found.";
        return [];
      }
      this.view.message = void 0;
      const splat = repositories.length === 1;
      this.children = repositories.map((r) => new ContributorsRepositoryNode(_git_gitUri__WEBPACK_IMPORTED_MODULE_6__.GitUri.fromRepoPath(r.path), this.view, this, r, splat));
    }
    if (this.children.length === 1) {
      const [child] = this.children;
      if (!child.repo.supportsChangeEvents) {
        this.view.description = `${_system__WEBPACK_IMPORTED_MODULE_7__.Strings.pad(_constants__WEBPACK_IMPORTED_MODULE_3__.GlyphChars.Warning, 0, 2)}Auto-refresh unavailable`;
      }
      const children = await child.getChildren();
      if (children.length === 0) {
        this.view.message = "No contributors could be found.";
        this.view.title = "Contributors";
        void child.ensureSubscription();
        return [];
      }
      this.view.message = void 0;
      this.view.title = `Contributors (${children.length})`;
      return children;
    }
    return this.children;
  }
  getTreeItem() {
    const item = new vscode__WEBPACK_IMPORTED_MODULE_0__.TreeItem("Contributors", vscode__WEBPACK_IMPORTED_MODULE_0__.TreeItemCollapsibleState.Expanded);
    return item;
  }
  async getSplattedChild() {
    var _a;
    if (this.children == null) {
      await this.getChildren();
    }
    return ((_a = this.children) == null ? void 0 : _a.length) === 1 ? this.children[0] : void 0;
  }
  refresh(reset = false) {
    if (reset && this.children != null) {
      for (const child of this.children) {
        child.dispose();
      }
      this.children = void 0;
    }
  }
}
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_7__.gate)(),
  (0,_system__WEBPACK_IMPORTED_MODULE_7__.debug)()
], ContributorsViewNode.prototype, "refresh", 1);
class ContributorsView extends _viewBase__WEBPACK_IMPORTED_MODULE_9__.ViewBase {
  constructor() {
    super("gitlens.views.contributors", "Contributors");
    __publicField(this, "configKey", "contributors");
  }
  getRoot() {
    return new ContributorsViewNode(this);
  }
  registerCommands() {
    void _container__WEBPACK_IMPORTED_MODULE_4__.Container.viewCommands;
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("copy"), () => vscode__WEBPACK_IMPORTED_MODULE_0__.commands.executeCommand("gitlens.views.copy", this.selection), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("refresh"), async () => {
      await _container__WEBPACK_IMPORTED_MODULE_4__.Container.git.resetCaches("contributors");
      return this.refresh(true);
    }, this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("setFilesLayoutToAuto"), () => this.setFilesLayout(_configuration__WEBPACK_IMPORTED_MODULE_2__.ViewFilesLayout.Auto), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("setFilesLayoutToList"), () => this.setFilesLayout(_configuration__WEBPACK_IMPORTED_MODULE_2__.ViewFilesLayout.List), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("setFilesLayoutToTree"), () => this.setFilesLayout(_configuration__WEBPACK_IMPORTED_MODULE_2__.ViewFilesLayout.Tree), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("setShowAllBranchesOn"), () => this.setShowAllBranches(true), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("setShowAllBranchesOff"), () => this.setShowAllBranches(false), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("setShowAvatarsOn"), () => this.setShowAvatars(true), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("setShowAvatarsOff"), () => this.setShowAvatars(false), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("setShowStatisticsOn"), () => this.setShowStatistics(true), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("setShowStatisticsOff"), () => this.setShowStatistics(false), this);
  }
  filterConfigurationChanged(e) {
    const changed = super.filterConfigurationChanged(e);
    if (!changed && !_configuration__WEBPACK_IMPORTED_MODULE_2__.configuration.changed(e, "defaultDateFormat") && !_configuration__WEBPACK_IMPORTED_MODULE_2__.configuration.changed(e, "defaultDateShortFormat") && !_configuration__WEBPACK_IMPORTED_MODULE_2__.configuration.changed(e, "defaultDateSource") && !_configuration__WEBPACK_IMPORTED_MODULE_2__.configuration.changed(e, "defaultDateStyle") && !_configuration__WEBPACK_IMPORTED_MODULE_2__.configuration.changed(e, "defaultGravatarsStyle") && !_configuration__WEBPACK_IMPORTED_MODULE_2__.configuration.changed(e, "defaultTimeFormat") && !_configuration__WEBPACK_IMPORTED_MODULE_2__.configuration.changed(e, "sortContributorsBy")) {
      return false;
    }
    return true;
  }
  setFilesLayout(layout) {
    return _configuration__WEBPACK_IMPORTED_MODULE_2__.configuration.updateEffective(`views.${this.configKey}.files.layout`, layout);
  }
  setShowAllBranches(enabled) {
    return _configuration__WEBPACK_IMPORTED_MODULE_2__.configuration.updateEffective(`views.${this.configKey}.showAllBranches`, enabled);
  }
  setShowAvatars(enabled) {
    return _configuration__WEBPACK_IMPORTED_MODULE_2__.configuration.updateEffective(`views.${this.configKey}.avatars`, enabled);
  }
  setShowStatistics(enabled) {
    return _configuration__WEBPACK_IMPORTED_MODULE_2__.configuration.updateEffective(`views.${this.configKey}.showStatistics`, enabled);
  }
}


/***/ }),

/***/ "./src/views/fileHistoryView.ts":
/*!**************************************!*\
  !*** ./src/views/fileHistoryView.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "FileHistoryView": () => (/* binding */ FileHistoryView)
/* harmony export */ });
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _configuration__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../configuration */ "./src/configuration.ts");
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../constants */ "./src/constants.ts");
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../container */ "./src/container.ts");
/* harmony import */ var _nodes__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./nodes */ "./src/views/nodes.ts");
/* harmony import */ var _viewBase__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./viewBase */ "./src/views/viewBase.ts");

var __defProp = Object.defineProperty;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};






const pinnedSuffix = " (pinned)";
class FileHistoryView extends _viewBase__WEBPACK_IMPORTED_MODULE_5__.ViewBase {
  constructor() {
    super("gitlens.views.fileHistory", "File History");
    __publicField(this, "configKey", "fileHistory");
    __publicField(this, "_followCursor", false);
    __publicField(this, "_followEditor", true);
    void (0,_constants__WEBPACK_IMPORTED_MODULE_2__.setContext)(_constants__WEBPACK_IMPORTED_MODULE_2__.ContextKeys.ViewsFileHistoryCursorFollowing, this._followCursor);
    void (0,_constants__WEBPACK_IMPORTED_MODULE_2__.setContext)(_constants__WEBPACK_IMPORTED_MODULE_2__.ContextKeys.ViewsFileHistoryEditorFollowing, this._followEditor);
  }
  get showCollapseAll() {
    return false;
  }
  getRoot() {
    return this._followCursor ? new _nodes__WEBPACK_IMPORTED_MODULE_4__.LineHistoryTrackerNode(this) : new _nodes__WEBPACK_IMPORTED_MODULE_4__.FileHistoryTrackerNode(this);
  }
  registerCommands() {
    void _container__WEBPACK_IMPORTED_MODULE_3__.Container.viewCommands;
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("copy"), () => vscode__WEBPACK_IMPORTED_MODULE_0__.commands.executeCommand("gitlens.views.copy", this.selection), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("refresh"), () => this.refresh(true), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("changeBase"), () => this.changeBase(), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("setCursorFollowingOn"), () => this.setCursorFollowing(true), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("setCursorFollowingOff"), () => this.setCursorFollowing(false), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("setEditorFollowingOn"), () => this.setEditorFollowing(true), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("setEditorFollowingOff"), () => this.setEditorFollowing(false), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("setRenameFollowingOn"), () => this.setRenameFollowing(true), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("setRenameFollowingOff"), () => this.setRenameFollowing(false), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("setShowAllBranchesOn"), () => this.setShowAllBranches(true), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("setShowAllBranchesOff"), () => this.setShowAllBranches(false), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("setShowAvatarsOn"), () => this.setShowAvatars(true), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("setShowAvatarsOff"), () => this.setShowAvatars(false), this);
  }
  filterConfigurationChanged(e) {
    const changed = super.filterConfigurationChanged(e);
    if (!changed && !_configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.changed(e, "defaultDateFormat") && !_configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.changed(e, "defaultDateShortFormat") && !_configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.changed(e, "defaultDateSource") && !_configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.changed(e, "defaultDateStyle") && !_configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.changed(e, "defaultGravatarsStyle") && !_configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.changed(e, "defaultTimeFormat") && !_configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.changed(e, "advanced.fileHistoryFollowsRenames") && !_configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.changed(e, "advanced.fileHistoryShowAllBranches")) {
      return false;
    }
    return true;
  }
  async showHistoryForUri(uri) {
    this.setCursorFollowing(false);
    const root = this.ensureRoot(true);
    if (root instanceof _nodes__WEBPACK_IMPORTED_MODULE_4__.FileHistoryTrackerNode) {
      await root.showHistoryForUri(uri);
      this.setEditorFollowing(false);
    }
    return this.show();
  }
  changeBase() {
    var _a;
    void ((_a = this.root) == null ? void 0 : _a.changeBase());
  }
  setCursorFollowing(enabled) {
    var _a;
    const uri = !this._followEditor && ((_a = this.root) == null ? void 0 : _a.hasUri) ? this.root.uri : void 0;
    this._followCursor = enabled;
    void (0,_constants__WEBPACK_IMPORTED_MODULE_2__.setContext)(_constants__WEBPACK_IMPORTED_MODULE_2__.ContextKeys.ViewsFileHistoryCursorFollowing, enabled);
    this.title = this._followCursor ? "Line History" : "File History";
    const root = this.ensureRoot(true);
    if (uri != null) {
      root.setUri(uri);
    }
    root.setEditorFollowing(this._followEditor);
    void root.ensureSubscription();
    void this.refresh(true);
  }
  setEditorFollowing(enabled) {
    var _a;
    const root = this.ensureRoot();
    if (!root.hasUri)
      return;
    this._followEditor = enabled;
    void (0,_constants__WEBPACK_IMPORTED_MODULE_2__.setContext)(_constants__WEBPACK_IMPORTED_MODULE_2__.ContextKeys.ViewsFileHistoryEditorFollowing, enabled);
    root.setEditorFollowing(enabled);
    if ((_a = this.description) == null ? void 0 : _a.endsWith(pinnedSuffix)) {
      if (enabled) {
        this.description = this.description.substr(0, this.description.length - pinnedSuffix.length);
      }
    } else if (!enabled && this.description != null) {
      this.description += pinnedSuffix;
    }
    if (enabled) {
      void root.ensureSubscription();
      void this.refresh(true);
    }
  }
  setRenameFollowing(enabled) {
    return _configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.updateEffective("advanced.fileHistoryFollowsRenames", enabled);
  }
  setShowAllBranches(enabled) {
    return _configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.updateEffective("advanced.fileHistoryShowAllBranches", enabled);
  }
  setShowAvatars(enabled) {
    return _configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.updateEffective(`views.${this.configKey}.avatars`, enabled);
  }
}


/***/ }),

/***/ "./src/views/lineHistoryView.ts":
/*!**************************************!*\
  !*** ./src/views/lineHistoryView.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "LineHistoryView": () => (/* binding */ LineHistoryView)
/* harmony export */ });
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _configuration__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../configuration */ "./src/configuration.ts");
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../constants */ "./src/constants.ts");
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../container */ "./src/container.ts");
/* harmony import */ var _nodes__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./nodes */ "./src/views/nodes.ts");
/* harmony import */ var _viewBase__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./viewBase */ "./src/views/viewBase.ts");

var __defProp = Object.defineProperty;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};






const pinnedSuffix = " (pinned)";
class LineHistoryView extends _viewBase__WEBPACK_IMPORTED_MODULE_5__.ViewBase {
  constructor() {
    super("gitlens.views.lineHistory", "Line History");
    __publicField(this, "configKey", "lineHistory");
    void (0,_constants__WEBPACK_IMPORTED_MODULE_2__.setContext)(_constants__WEBPACK_IMPORTED_MODULE_2__.ContextKeys.ViewsLineHistoryEditorFollowing, true);
  }
  get showCollapseAll() {
    return false;
  }
  getRoot() {
    return new _nodes__WEBPACK_IMPORTED_MODULE_4__.LineHistoryTrackerNode(this);
  }
  registerCommands() {
    void _container__WEBPACK_IMPORTED_MODULE_3__.Container.viewCommands;
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("copy"), () => vscode__WEBPACK_IMPORTED_MODULE_0__.commands.executeCommand("gitlens.views.copy", this.selection), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("refresh"), () => this.refresh(true), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("changeBase"), () => this.changeBase(), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("setEditorFollowingOn"), () => this.setEditorFollowing(true), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("setEditorFollowingOff"), () => this.setEditorFollowing(false), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("setShowAvatarsOn"), () => this.setShowAvatars(true), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("setShowAvatarsOff"), () => this.setShowAvatars(false), this);
  }
  filterConfigurationChanged(e) {
    const changed = super.filterConfigurationChanged(e);
    if (!changed && !_configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.changed(e, "defaultDateFormat") && !_configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.changed(e, "defaultDateShortFormat") && !_configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.changed(e, "defaultDateSource") && !_configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.changed(e, "defaultDateStyle") && !_configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.changed(e, "defaultGravatarsStyle") && !_configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.changed(e, "defaultTimeFormat")) {
      return false;
    }
    return true;
  }
  changeBase() {
    var _a;
    void ((_a = this.root) == null ? void 0 : _a.changeBase());
  }
  setEditorFollowing(enabled) {
    var _a, _b;
    const root = this.ensureRoot();
    if (!root.hasUri)
      return;
    void (0,_constants__WEBPACK_IMPORTED_MODULE_2__.setContext)(_constants__WEBPACK_IMPORTED_MODULE_2__.ContextKeys.ViewsLineHistoryEditorFollowing, enabled);
    (_a = this.root) == null ? void 0 : _a.setEditorFollowing(enabled);
    if ((_b = this.description) == null ? void 0 : _b.endsWith(pinnedSuffix)) {
      if (enabled) {
        this.description = this.description.substr(0, this.description.length - pinnedSuffix.length);
      }
    } else if (!enabled && this.description != null) {
      this.description += pinnedSuffix;
    }
    if (enabled) {
      void root.ensureSubscription();
      void this.refresh(true);
    }
  }
  setShowAvatars(enabled) {
    return _configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.updateEffective(`views.${this.configKey}.avatars`, enabled);
  }
}


/***/ }),

/***/ "./src/views/nodes.ts":
/*!****************************!*\
  !*** ./src/views/nodes.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CommandMessageNode": () => (/* reexport safe */ _nodes_common__WEBPACK_IMPORTED_MODULE_0__.CommandMessageNode),
/* harmony export */   "LoadMoreNode": () => (/* reexport safe */ _nodes_common__WEBPACK_IMPORTED_MODULE_0__.LoadMoreNode),
/* harmony export */   "MessageNode": () => (/* reexport safe */ _nodes_common__WEBPACK_IMPORTED_MODULE_0__.MessageNode),
/* harmony export */   "PagerNode": () => (/* reexport safe */ _nodes_common__WEBPACK_IMPORTED_MODULE_0__.PagerNode),
/* harmony export */   "UpdateableMessageNode": () => (/* reexport safe */ _nodes_common__WEBPACK_IMPORTED_MODULE_0__.UpdateableMessageNode),
/* harmony export */   "ContextValues": () => (/* reexport safe */ _nodes_viewNode__WEBPACK_IMPORTED_MODULE_1__.ContextValues),
/* harmony export */   "PageableViewNode": () => (/* reexport safe */ _nodes_viewNode__WEBPACK_IMPORTED_MODULE_1__.PageableViewNode),
/* harmony export */   "RepositoryFolderNode": () => (/* reexport safe */ _nodes_viewNode__WEBPACK_IMPORTED_MODULE_1__.RepositoryFolderNode),
/* harmony export */   "SubscribeableViewNode": () => (/* reexport safe */ _nodes_viewNode__WEBPACK_IMPORTED_MODULE_1__.SubscribeableViewNode),
/* harmony export */   "ViewNode": () => (/* reexport safe */ _nodes_viewNode__WEBPACK_IMPORTED_MODULE_1__.ViewNode),
/* harmony export */   "ViewRefFileNode": () => (/* reexport safe */ _nodes_viewNode__WEBPACK_IMPORTED_MODULE_1__.ViewRefFileNode),
/* harmony export */   "ViewRefNode": () => (/* reexport safe */ _nodes_viewNode__WEBPACK_IMPORTED_MODULE_1__.ViewRefNode),
/* harmony export */   "canAutoRefreshView": () => (/* reexport safe */ _nodes_viewNode__WEBPACK_IMPORTED_MODULE_1__.canAutoRefreshView),
/* harmony export */   "canClearNode": () => (/* reexport safe */ _nodes_viewNode__WEBPACK_IMPORTED_MODULE_1__.canClearNode),
/* harmony export */   "canEditNode": () => (/* reexport safe */ _nodes_viewNode__WEBPACK_IMPORTED_MODULE_1__.canEditNode),
/* harmony export */   "canViewDismissNode": () => (/* reexport safe */ _nodes_viewNode__WEBPACK_IMPORTED_MODULE_1__.canViewDismissNode),
/* harmony export */   "unknownGitUri": () => (/* reexport safe */ _nodes_viewNode__WEBPACK_IMPORTED_MODULE_1__.unknownGitUri),
/* harmony export */   "BranchesNode": () => (/* reexport safe */ _nodes_branchesNode__WEBPACK_IMPORTED_MODULE_2__.BranchesNode),
/* harmony export */   "BranchNode": () => (/* reexport safe */ _nodes_branchNode__WEBPACK_IMPORTED_MODULE_3__.BranchNode),
/* harmony export */   "BranchOrTagFolderNode": () => (/* reexport safe */ _nodes_branchOrTagFolderNode__WEBPACK_IMPORTED_MODULE_4__.BranchOrTagFolderNode),
/* harmony export */   "BranchTrackingStatusFilesNode": () => (/* reexport safe */ _nodes_branchTrackingStatusFilesNode__WEBPACK_IMPORTED_MODULE_5__.BranchTrackingStatusFilesNode),
/* harmony export */   "BranchTrackingStatusNode": () => (/* reexport safe */ _nodes_branchTrackingStatusNode__WEBPACK_IMPORTED_MODULE_6__.BranchTrackingStatusNode),
/* harmony export */   "CommitFileNode": () => (/* reexport safe */ _nodes_commitFileNode__WEBPACK_IMPORTED_MODULE_7__.CommitFileNode),
/* harmony export */   "CommitNode": () => (/* reexport safe */ _nodes_commitNode__WEBPACK_IMPORTED_MODULE_8__.CommitNode),
/* harmony export */   "CompareBranchNode": () => (/* reexport safe */ _nodes_compareBranchNode__WEBPACK_IMPORTED_MODULE_9__.CompareBranchNode),
/* harmony export */   "ComparePickerNode": () => (/* reexport safe */ _nodes_comparePickerNode__WEBPACK_IMPORTED_MODULE_10__.ComparePickerNode),
/* harmony export */   "CompareResultsNode": () => (/* reexport safe */ _nodes_compareResultsNode__WEBPACK_IMPORTED_MODULE_11__.CompareResultsNode),
/* harmony export */   "ContributorNode": () => (/* reexport safe */ _nodes_contributorNode__WEBPACK_IMPORTED_MODULE_12__.ContributorNode),
/* harmony export */   "ContributorsNode": () => (/* reexport safe */ _nodes_contributorsNode__WEBPACK_IMPORTED_MODULE_13__.ContributorsNode),
/* harmony export */   "FileHistoryNode": () => (/* reexport safe */ _nodes_fileHistoryNode__WEBPACK_IMPORTED_MODULE_14__.FileHistoryNode),
/* harmony export */   "FileHistoryTrackerNode": () => (/* reexport safe */ _nodes_fileHistoryTrackerNode__WEBPACK_IMPORTED_MODULE_15__.FileHistoryTrackerNode),
/* harmony export */   "FileRevisionAsCommitNode": () => (/* reexport safe */ _nodes_fileRevisionAsCommitNode__WEBPACK_IMPORTED_MODULE_16__.FileRevisionAsCommitNode),
/* harmony export */   "FolderNode": () => (/* reexport safe */ _nodes_folderNode__WEBPACK_IMPORTED_MODULE_17__.FolderNode),
/* harmony export */   "LineHistoryNode": () => (/* reexport safe */ _nodes_lineHistoryNode__WEBPACK_IMPORTED_MODULE_18__.LineHistoryNode),
/* harmony export */   "LineHistoryTrackerNode": () => (/* reexport safe */ _nodes_lineHistoryTrackerNode__WEBPACK_IMPORTED_MODULE_19__.LineHistoryTrackerNode),
/* harmony export */   "MergeConflictFileNode": () => (/* reexport safe */ _nodes_mergeConflictFileNode__WEBPACK_IMPORTED_MODULE_20__.MergeConflictFileNode),
/* harmony export */   "MergeConflictCurrentChangesNode": () => (/* reexport safe */ _nodes_mergeConflictCurrentChangesNode__WEBPACK_IMPORTED_MODULE_21__.MergeConflictCurrentChangesNode),
/* harmony export */   "MergeConflictIncomingChangesNode": () => (/* reexport safe */ _nodes_mergeConflictIncomingChangesNode__WEBPACK_IMPORTED_MODULE_22__.MergeConflictIncomingChangesNode),
/* harmony export */   "MergeStatusNode": () => (/* reexport safe */ _nodes_mergeStatusNode__WEBPACK_IMPORTED_MODULE_23__.MergeStatusNode),
/* harmony export */   "PullRequestNode": () => (/* reexport safe */ _nodes_pullRequestNode__WEBPACK_IMPORTED_MODULE_24__.PullRequestNode),
/* harmony export */   "RebaseCommitNode": () => (/* reexport safe */ _nodes_rebaseStatusNode__WEBPACK_IMPORTED_MODULE_25__.RebaseCommitNode),
/* harmony export */   "RebaseStatusNode": () => (/* reexport safe */ _nodes_rebaseStatusNode__WEBPACK_IMPORTED_MODULE_25__.RebaseStatusNode),
/* harmony export */   "ReflogNode": () => (/* reexport safe */ _nodes_reflogNode__WEBPACK_IMPORTED_MODULE_26__.ReflogNode),
/* harmony export */   "ReflogRecordNode": () => (/* reexport safe */ _nodes_reflogRecordNode__WEBPACK_IMPORTED_MODULE_27__.ReflogRecordNode),
/* harmony export */   "RemoteNode": () => (/* reexport safe */ _nodes_remoteNode__WEBPACK_IMPORTED_MODULE_28__.RemoteNode),
/* harmony export */   "RemotesNode": () => (/* reexport safe */ _nodes_remotesNode__WEBPACK_IMPORTED_MODULE_29__.RemotesNode),
/* harmony export */   "RepositoriesNode": () => (/* reexport safe */ _nodes_repositoriesNode__WEBPACK_IMPORTED_MODULE_30__.RepositoriesNode),
/* harmony export */   "RepositoryNode": () => (/* reexport safe */ _nodes_repositoryNode__WEBPACK_IMPORTED_MODULE_31__.RepositoryNode),
/* harmony export */   "ResultsCommitsNode": () => (/* reexport safe */ _nodes_resultsCommitsNode__WEBPACK_IMPORTED_MODULE_32__.ResultsCommitsNode),
/* harmony export */   "ResultsFileNode": () => (/* reexport safe */ _nodes_resultsFileNode__WEBPACK_IMPORTED_MODULE_33__.ResultsFileNode),
/* harmony export */   "ResultsFilesNode": () => (/* reexport safe */ _nodes_resultsFilesNode__WEBPACK_IMPORTED_MODULE_34__.ResultsFilesNode),
/* harmony export */   "SearchResultsNode": () => (/* reexport safe */ _nodes_searchResultsNode__WEBPACK_IMPORTED_MODULE_35__.SearchResultsNode),
/* harmony export */   "StashesNode": () => (/* reexport safe */ _nodes_stashesNode__WEBPACK_IMPORTED_MODULE_36__.StashesNode),
/* harmony export */   "StashFileNode": () => (/* reexport safe */ _nodes_stashFileNode__WEBPACK_IMPORTED_MODULE_37__.StashFileNode),
/* harmony export */   "StashNode": () => (/* reexport safe */ _nodes_stashNode__WEBPACK_IMPORTED_MODULE_38__.StashNode),
/* harmony export */   "StatusFileNode": () => (/* reexport safe */ _nodes_statusFileNode__WEBPACK_IMPORTED_MODULE_39__.StatusFileNode),
/* harmony export */   "StatusFilesNode": () => (/* reexport safe */ _nodes_statusFilesNode__WEBPACK_IMPORTED_MODULE_40__.StatusFilesNode),
/* harmony export */   "TagsNode": () => (/* reexport safe */ _nodes_tagsNode__WEBPACK_IMPORTED_MODULE_41__.TagsNode),
/* harmony export */   "TagNode": () => (/* reexport safe */ _nodes_tagNode__WEBPACK_IMPORTED_MODULE_42__.TagNode)
/* harmony export */ });
/* harmony import */ var _nodes_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./nodes/common */ "./src/views/nodes/common.ts");
/* harmony import */ var _nodes_viewNode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./nodes/viewNode */ "./src/views/nodes/viewNode.ts");
/* harmony import */ var _nodes_branchesNode__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./nodes/branchesNode */ "./src/views/nodes/branchesNode.ts");
/* harmony import */ var _nodes_branchNode__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./nodes/branchNode */ "./src/views/nodes/branchNode.ts");
/* harmony import */ var _nodes_branchOrTagFolderNode__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./nodes/branchOrTagFolderNode */ "./src/views/nodes/branchOrTagFolderNode.ts");
/* harmony import */ var _nodes_branchTrackingStatusFilesNode__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./nodes/branchTrackingStatusFilesNode */ "./src/views/nodes/branchTrackingStatusFilesNode.ts");
/* harmony import */ var _nodes_branchTrackingStatusNode__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./nodes/branchTrackingStatusNode */ "./src/views/nodes/branchTrackingStatusNode.ts");
/* harmony import */ var _nodes_commitFileNode__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./nodes/commitFileNode */ "./src/views/nodes/commitFileNode.ts");
/* harmony import */ var _nodes_commitNode__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./nodes/commitNode */ "./src/views/nodes/commitNode.ts");
/* harmony import */ var _nodes_compareBranchNode__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./nodes/compareBranchNode */ "./src/views/nodes/compareBranchNode.ts");
/* harmony import */ var _nodes_comparePickerNode__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./nodes/comparePickerNode */ "./src/views/nodes/comparePickerNode.ts");
/* harmony import */ var _nodes_compareResultsNode__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./nodes/compareResultsNode */ "./src/views/nodes/compareResultsNode.ts");
/* harmony import */ var _nodes_contributorNode__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./nodes/contributorNode */ "./src/views/nodes/contributorNode.ts");
/* harmony import */ var _nodes_contributorsNode__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./nodes/contributorsNode */ "./src/views/nodes/contributorsNode.ts");
/* harmony import */ var _nodes_fileHistoryNode__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./nodes/fileHistoryNode */ "./src/views/nodes/fileHistoryNode.ts");
/* harmony import */ var _nodes_fileHistoryTrackerNode__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./nodes/fileHistoryTrackerNode */ "./src/views/nodes/fileHistoryTrackerNode.ts");
/* harmony import */ var _nodes_fileRevisionAsCommitNode__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./nodes/fileRevisionAsCommitNode */ "./src/views/nodes/fileRevisionAsCommitNode.ts");
/* harmony import */ var _nodes_folderNode__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./nodes/folderNode */ "./src/views/nodes/folderNode.ts");
/* harmony import */ var _nodes_lineHistoryNode__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./nodes/lineHistoryNode */ "./src/views/nodes/lineHistoryNode.ts");
/* harmony import */ var _nodes_lineHistoryTrackerNode__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./nodes/lineHistoryTrackerNode */ "./src/views/nodes/lineHistoryTrackerNode.ts");
/* harmony import */ var _nodes_mergeConflictFileNode__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./nodes/mergeConflictFileNode */ "./src/views/nodes/mergeConflictFileNode.ts");
/* harmony import */ var _nodes_mergeConflictCurrentChangesNode__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./nodes/mergeConflictCurrentChangesNode */ "./src/views/nodes/mergeConflictCurrentChangesNode.ts");
/* harmony import */ var _nodes_mergeConflictIncomingChangesNode__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./nodes/mergeConflictIncomingChangesNode */ "./src/views/nodes/mergeConflictIncomingChangesNode.ts");
/* harmony import */ var _nodes_mergeStatusNode__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./nodes/mergeStatusNode */ "./src/views/nodes/mergeStatusNode.ts");
/* harmony import */ var _nodes_pullRequestNode__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./nodes/pullRequestNode */ "./src/views/nodes/pullRequestNode.ts");
/* harmony import */ var _nodes_rebaseStatusNode__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./nodes/rebaseStatusNode */ "./src/views/nodes/rebaseStatusNode.ts");
/* harmony import */ var _nodes_reflogNode__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./nodes/reflogNode */ "./src/views/nodes/reflogNode.ts");
/* harmony import */ var _nodes_reflogRecordNode__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./nodes/reflogRecordNode */ "./src/views/nodes/reflogRecordNode.ts");
/* harmony import */ var _nodes_remoteNode__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./nodes/remoteNode */ "./src/views/nodes/remoteNode.ts");
/* harmony import */ var _nodes_remotesNode__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./nodes/remotesNode */ "./src/views/nodes/remotesNode.ts");
/* harmony import */ var _nodes_repositoriesNode__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./nodes/repositoriesNode */ "./src/views/nodes/repositoriesNode.ts");
/* harmony import */ var _nodes_repositoryNode__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./nodes/repositoryNode */ "./src/views/nodes/repositoryNode.ts");
/* harmony import */ var _nodes_resultsCommitsNode__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./nodes/resultsCommitsNode */ "./src/views/nodes/resultsCommitsNode.ts");
/* harmony import */ var _nodes_resultsFileNode__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./nodes/resultsFileNode */ "./src/views/nodes/resultsFileNode.ts");
/* harmony import */ var _nodes_resultsFilesNode__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./nodes/resultsFilesNode */ "./src/views/nodes/resultsFilesNode.ts");
/* harmony import */ var _nodes_searchResultsNode__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ./nodes/searchResultsNode */ "./src/views/nodes/searchResultsNode.ts");
/* harmony import */ var _nodes_stashesNode__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ./nodes/stashesNode */ "./src/views/nodes/stashesNode.ts");
/* harmony import */ var _nodes_stashFileNode__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ./nodes/stashFileNode */ "./src/views/nodes/stashFileNode.ts");
/* harmony import */ var _nodes_stashNode__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ./nodes/stashNode */ "./src/views/nodes/stashNode.ts");
/* harmony import */ var _nodes_statusFileNode__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ./nodes/statusFileNode */ "./src/views/nodes/statusFileNode.ts");
/* harmony import */ var _nodes_statusFilesNode__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! ./nodes/statusFilesNode */ "./src/views/nodes/statusFilesNode.ts");
/* harmony import */ var _nodes_tagsNode__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! ./nodes/tagsNode */ "./src/views/nodes/tagsNode.ts");
/* harmony import */ var _nodes_tagNode__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! ./nodes/tagNode */ "./src/views/nodes/tagNode.ts");














































/***/ }),

/***/ "./src/views/nodes/branchNode.ts":
/*!***************************************!*\
  !*** ./src/views/nodes/branchNode.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "BranchNode": () => (/* binding */ BranchNode)
/* harmony export */ });
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _configuration__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../configuration */ "./src/configuration.ts");
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../constants */ "./src/constants.ts");
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../container */ "./src/container.ts");
/* harmony import */ var _git_git__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../git/git */ "./src/git/git.ts");
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../system */ "./src/system.ts");
/* harmony import */ var _remotesView__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../remotesView */ "./src/views/remotesView.ts");
/* harmony import */ var _branchTrackingStatusNode__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./branchTrackingStatusNode */ "./src/views/nodes/branchTrackingStatusNode.ts");
/* harmony import */ var _commitNode__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./commitNode */ "./src/views/nodes/commitNode.ts");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./common */ "./src/views/nodes/common.ts");
/* harmony import */ var _compareBranchNode__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./compareBranchNode */ "./src/views/nodes/compareBranchNode.ts");
/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./helpers */ "./src/views/nodes/helpers.ts");
/* harmony import */ var _mergeStatusNode__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./mergeStatusNode */ "./src/views/nodes/mergeStatusNode.ts");
/* harmony import */ var _pullRequestNode__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./pullRequestNode */ "./src/views/nodes/pullRequestNode.ts");
/* harmony import */ var _rebaseStatusNode__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./rebaseStatusNode */ "./src/views/nodes/rebaseStatusNode.ts");
/* harmony import */ var _repositoryNode__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./repositoryNode */ "./src/views/nodes/repositoryNode.ts");
/* harmony import */ var _viewNode__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./viewNode */ "./src/views/nodes/viewNode.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};

















const _BranchNode = class extends _viewNode__WEBPACK_IMPORTED_MODULE_16__.ViewRefNode {
  constructor(uri, view, parent, branch, root, options) {
    super(uri, view, parent);
    this.branch = branch;
    this.root = root;
    __publicField(this, "_children");
    __publicField(this, "options");
    __publicField(this, "splatted", true);
    __publicField(this, "compacted", false);
    __publicField(this, "_log");
    __publicField(this, "limit", this.view.getNodeLastKnownLimit(this));
    this.options = {
      expanded: false,
      limitCommits: false,
      showAsCommits: false,
      showComparison: false,
      showCurrent: !this.root,
      showStatus: true,
      showTracking: !this.root,
      ...options
    };
  }
  static getId(repoPath, name, root) {
    return `${_repositoryNode__WEBPACK_IMPORTED_MODULE_15__.RepositoryNode.getId(repoPath)}${this.key}(${name})${root ? ":root" : ""}`;
  }
  toClipboard() {
    return this.branch.name;
  }
  get id() {
    return _BranchNode.getId(this.branch.repoPath, this.branch.name, this.root);
  }
  get current() {
    return this.branch.current;
  }
  get label() {
    var _a;
    if (this.options.showAsCommits)
      return "Commits";
    const branchName = this.branch.getNameWithoutRemote();
    return `${((_a = this.view.config.branches) == null ? void 0 : _a.layout) !== _configuration__WEBPACK_IMPORTED_MODULE_1__.ViewBranchesLayout.Tree || this.compacted || this.root || this.current || this.branch.detached || this.branch.starred ? branchName : this.branch.getBasename()}${this.branch.rebasing ? " (Rebasing)" : ""}`;
  }
  get ref() {
    return this.branch;
  }
  get treeHierarchy() {
    return this.root || this.current || this.branch.detached || this.branch.starred ? [this.branch.name] : this.branch.getNameWithoutRemote().split("/");
  }
  async getChildren() {
    var _a;
    if (this._children == null) {
      const children = [];
      const range = await _container__WEBPACK_IMPORTED_MODULE_3__.Container.git.getBranchAheadRange(this.branch);
      const [log2, getBranchAndTagTips, status, mergeStatus, rebaseStatus, pr, unpublishedCommits] = await Promise.all([
        this.getLog(),
        _container__WEBPACK_IMPORTED_MODULE_3__.Container.git.getBranchesAndTagsTipsFn(this.uri.repoPath, this.branch.name),
        this.options.showStatus && this.branch.current ? _container__WEBPACK_IMPORTED_MODULE_3__.Container.git.getStatusForRepo(this.uri.repoPath) : void 0,
        this.options.showStatus && this.branch.current ? _container__WEBPACK_IMPORTED_MODULE_3__.Container.git.getMergeStatus(this.uri.repoPath) : void 0,
        this.options.showStatus ? _container__WEBPACK_IMPORTED_MODULE_3__.Container.git.getRebaseStatus(this.uri.repoPath) : void 0,
        this.view.config.pullRequests.enabled && this.view.config.pullRequests.showForBranches && (this.branch.upstream != null || this.branch.remote) ? this.branch.getAssociatedPullRequest(this.root ? { include: [_git_git__WEBPACK_IMPORTED_MODULE_4__.PullRequestState.Open, _git_git__WEBPACK_IMPORTED_MODULE_4__.PullRequestState.Merged] } : void 0) : void 0,
        range && !this.branch.remote ? _container__WEBPACK_IMPORTED_MODULE_3__.Container.git.getLogRefsOnly(this.uri.repoPath, {
          limit: 0,
          ref: range
        }) : void 0
      ]);
      if (log2 == null)
        return [new _common__WEBPACK_IMPORTED_MODULE_9__.MessageNode(this.view, this, "No commits could be found.")];
      if (this.options.showComparison !== false && !(this.view instanceof _remotesView__WEBPACK_IMPORTED_MODULE_6__.RemotesView)) {
        children.push(new _compareBranchNode__WEBPACK_IMPORTED_MODULE_10__.CompareBranchNode(this.uri, this.view, this, this.branch, this.options.showComparison, this.splatted));
      }
      if (pr != null) {
        children.push(new _pullRequestNode__WEBPACK_IMPORTED_MODULE_13__.PullRequestNode(this.view, this, pr, this.branch));
      }
      if (this.options.showStatus && mergeStatus != null) {
        children.push(new _mergeStatusNode__WEBPACK_IMPORTED_MODULE_12__.MergeStatusNode(this.view, this, this.branch, mergeStatus, status != null ? status : await _container__WEBPACK_IMPORTED_MODULE_3__.Container.git.getStatusForRepo(this.uri.repoPath), this.root));
      } else if (this.options.showStatus && rebaseStatus != null && (this.branch.current || this.branch.name === rebaseStatus.incoming.name)) {
        children.push(new _rebaseStatusNode__WEBPACK_IMPORTED_MODULE_14__.RebaseStatusNode(this.view, this, this.branch, rebaseStatus, status != null ? status : await _container__WEBPACK_IMPORTED_MODULE_3__.Container.git.getStatusForRepo(this.uri.repoPath), this.root));
      } else if (this.options.showTracking) {
        const status2 = {
          ref: this.branch.ref,
          repoPath: this.branch.repoPath,
          state: this.branch.state,
          upstream: (_a = this.branch.upstream) == null ? void 0 : _a.name
        };
        if (this.branch.upstream != null) {
          if (this.root && !status2.state.behind && !status2.state.ahead) {
            children.push(new _branchTrackingStatusNode__WEBPACK_IMPORTED_MODULE_7__.BranchTrackingStatusNode(this.view, this, this.branch, status2, "same", this.root));
          } else {
            if (status2.state.behind) {
              children.push(new _branchTrackingStatusNode__WEBPACK_IMPORTED_MODULE_7__.BranchTrackingStatusNode(this.view, this, this.branch, status2, "behind", this.root));
            }
            if (status2.state.ahead) {
              children.push(new _branchTrackingStatusNode__WEBPACK_IMPORTED_MODULE_7__.BranchTrackingStatusNode(this.view, this, this.branch, status2, "ahead", this.root));
            }
          }
        } else {
          children.push(new _branchTrackingStatusNode__WEBPACK_IMPORTED_MODULE_7__.BranchTrackingStatusNode(this.view, this, this.branch, status2, "none", this.root));
        }
      }
      if (children.length !== 0) {
        children.push(new _common__WEBPACK_IMPORTED_MODULE_9__.MessageNode(this.view, this, "", _constants__WEBPACK_IMPORTED_MODULE_2__.GlyphChars.Dash.repeat(2), ""));
      }
      children.push(...(0,_helpers__WEBPACK_IMPORTED_MODULE_11__.insertDateMarkers)(_system__WEBPACK_IMPORTED_MODULE_5__.Iterables.map(log2.commits.values(), (c) => new _commitNode__WEBPACK_IMPORTED_MODULE_8__.CommitNode(this.view, this, c, unpublishedCommits == null ? void 0 : unpublishedCommits.has(c.ref), this.branch, getBranchAndTagTips)), this));
      if (log2.hasMore) {
        children.push(new _common__WEBPACK_IMPORTED_MODULE_9__.LoadMoreNode(this.view, this, children[children.length - 1], void 0, () => _container__WEBPACK_IMPORTED_MODULE_3__.Container.git.getCommitCount(this.branch.repoPath, this.branch.name)));
      }
      this._children = children;
    }
    return this._children;
  }
  async getTreeItem() {
    var _a, _b;
    this.splatted = false;
    let tooltip = `${this.current ? "Current branch" : "Branch"} $(git-branch) ${this.branch.getNameWithoutRemote()}${this.branch.rebasing ? " (Rebasing)" : ""}`;
    let contextValue = _viewNode__WEBPACK_IMPORTED_MODULE_16__.ContextValues.Branch;
    if (this.current) {
      contextValue += "+current";
    }
    if (this.branch.remote) {
      contextValue += "+remote";
    }
    if (this.branch.starred) {
      contextValue += "+starred";
    }
    if (this.branch.upstream != null && !this.branch.upstream.missing) {
      contextValue += "+tracking";
    }
    if (this.options.showAsCommits) {
      contextValue += "+commits";
    }
    let color;
    let description;
    let iconSuffix = "";
    if (!this.branch.remote) {
      if (this.branch.upstream != null) {
        let arrows = _constants__WEBPACK_IMPORTED_MODULE_2__.GlyphChars.Dash;
        const remote = await this.branch.getRemote();
        if (!this.branch.upstream.missing) {
          if (remote != null) {
            let left;
            let right;
            for (const { type } of remote.urls) {
              if (type === _git_git__WEBPACK_IMPORTED_MODULE_4__.GitRemoteType.Fetch) {
                left = true;
                if (right)
                  break;
              } else if (type === _git_git__WEBPACK_IMPORTED_MODULE_4__.GitRemoteType.Push) {
                right = true;
                if (left)
                  break;
              }
            }
            if (left && right) {
              arrows = _constants__WEBPACK_IMPORTED_MODULE_2__.GlyphChars.ArrowsRightLeft;
            } else if (right) {
              arrows = _constants__WEBPACK_IMPORTED_MODULE_2__.GlyphChars.ArrowRight;
            } else if (left) {
              arrows = _constants__WEBPACK_IMPORTED_MODULE_2__.GlyphChars.ArrowLeft;
            }
          }
        } else {
          arrows = _constants__WEBPACK_IMPORTED_MODULE_2__.GlyphChars.Warning;
        }
        description = this.options.showAsCommits ? `${this.branch.getTrackingStatus({
          suffix: _system__WEBPACK_IMPORTED_MODULE_5__.Strings.pad(_constants__WEBPACK_IMPORTED_MODULE_2__.GlyphChars.Dot, 1, 1)
        })}${this.branch.getNameWithoutRemote()}${this.branch.rebasing ? " (Rebasing)" : ""}${_system__WEBPACK_IMPORTED_MODULE_5__.Strings.pad(arrows, 2, 2)}${this.branch.upstream.name}` : `${this.branch.getTrackingStatus({ suffix: `${_constants__WEBPACK_IMPORTED_MODULE_2__.GlyphChars.Space} ` })}${arrows}${_constants__WEBPACK_IMPORTED_MODULE_2__.GlyphChars.Space} ${this.branch.upstream.name}`;
        tooltip += ` is ${this.branch.getTrackingStatus({
          empty: this.branch.upstream.missing ? `missing upstream $(git-branch) ${this.branch.upstream.name}` : `up to date with $(git-branch)  ${this.branch.upstream.name}${((_a = remote == null ? void 0 : remote.provider) == null ? void 0 : _a.name) ? ` on ${remote.provider.name}` : ""}`,
          expand: true,
          icons: true,
          separator: ", ",
          suffix: ` $(git-branch) ${this.branch.upstream.name}${((_b = remote == null ? void 0 : remote.provider) == null ? void 0 : _b.name) ? ` on ${remote.provider.name}` : ""}`
        })}`;
        if (this.branch.state.ahead || this.branch.state.behind) {
          if (this.branch.state.ahead) {
            contextValue += "+ahead";
            color = new vscode__WEBPACK_IMPORTED_MODULE_0__.ThemeColor(_constants__WEBPACK_IMPORTED_MODULE_2__.Colors.UnpushlishedChangesIconColor);
            iconSuffix = "-green";
          }
          if (this.branch.state.behind) {
            contextValue += "+behind";
            color = new vscode__WEBPACK_IMPORTED_MODULE_0__.ThemeColor(_constants__WEBPACK_IMPORTED_MODULE_2__.Colors.UnpulledChangesIconColor);
            iconSuffix = this.branch.state.ahead ? "-yellow" : "-red";
          }
        }
      } else {
        const providers = _git_git__WEBPACK_IMPORTED_MODULE_4__.GitRemote.getHighlanderProviders(await _container__WEBPACK_IMPORTED_MODULE_3__.Container.git.getRemotes(this.branch.repoPath));
        const providerName = (providers == null ? void 0 : providers.length) ? providers[0].name : void 0;
        tooltip += ` hasn't been published to ${providerName != null ? providerName : "a remote"}`;
      }
    }
    if (this.branch.date != null) {
      description = `${description ? `${description}${_system__WEBPACK_IMPORTED_MODULE_5__.Strings.pad(_constants__WEBPACK_IMPORTED_MODULE_2__.GlyphChars.Dot, 2, 2)}` : ""}${this.branch.formattedDate}`;
      tooltip += `

Last commit ${this.branch.formatDateFromNow()} (${this.branch.formatDate(_git_git__WEBPACK_IMPORTED_MODULE_4__.BranchDateFormatting.dateFormat)})`;
    }
    tooltip = new vscode__WEBPACK_IMPORTED_MODULE_0__.MarkdownString(tooltip, true);
    if (this.branch.starred) {
      tooltip.appendMarkdown("\\\n$(star-full) Favorited");
    }
    const item = new vscode__WEBPACK_IMPORTED_MODULE_0__.TreeItem(this.label, this.options.expanded ? vscode__WEBPACK_IMPORTED_MODULE_0__.TreeItemCollapsibleState.Expanded : vscode__WEBPACK_IMPORTED_MODULE_0__.TreeItemCollapsibleState.Collapsed);
    item.id = this.id;
    item.contextValue = contextValue;
    item.description = description;
    item.iconPath = this.options.showAsCommits ? new vscode__WEBPACK_IMPORTED_MODULE_0__.ThemeIcon("git-commit", color) : {
      dark: _container__WEBPACK_IMPORTED_MODULE_3__.Container.context.asAbsolutePath(`images/dark/icon-branch${iconSuffix}.svg`),
      light: _container__WEBPACK_IMPORTED_MODULE_3__.Container.context.asAbsolutePath(`images/light/icon-branch${iconSuffix}.svg`)
    };
    item.tooltip = tooltip;
    item.resourceUri = vscode__WEBPACK_IMPORTED_MODULE_0__.Uri.parse(`gitlens-view://branch/status/${await this.branch.getStatus()}${this.options.showCurrent && this.current ? "/current" : ""}`);
    return item;
  }
  async star() {
    await this.branch.star();
    void this.view.refresh(true);
  }
  async unstar() {
    await this.branch.unstar();
    void this.view.refresh(true);
  }
  refresh(reset) {
    this._children = void 0;
    if (reset) {
      this._log = void 0;
    }
  }
  async getLog() {
    var _a, _b;
    if (this._log == null) {
      let limit = (_a = this.limit) != null ? _a : this.root && !this.options.limitCommits ? this.view.config.pageItemLimit : this.view.config.defaultItemLimit;
      if (limit !== 0 && this.branch.state.ahead > limit) {
        limit = Math.min(this.branch.state.ahead + 1, limit * 2);
      }
      this._log = await _container__WEBPACK_IMPORTED_MODULE_3__.Container.git.getLog(this.uri.repoPath, {
        limit,
        ref: this.ref.ref,
        authors: (_b = this.options) == null ? void 0 : _b.authors
      });
    }
    return this._log;
  }
  get hasMore() {
    var _a, _b;
    return (_b = (_a = this._log) == null ? void 0 : _a.hasMore) != null ? _b : true;
  }
  async loadMore(limit) {
    var _a;
    let log2 = await vscode__WEBPACK_IMPORTED_MODULE_0__.window.withProgress({
      location: { viewId: this.view.id }
    }, () => this.getLog());
    if (log2 == null || !log2.hasMore)
      return;
    log2 = await ((_a = log2.more) == null ? void 0 : _a.call(log2, limit != null ? limit : this.view.config.pageItemLimit));
    if (this._log === log2)
      return;
    this._log = log2;
    this.limit = log2 == null ? void 0 : log2.count;
    this._children = void 0;
    void this.triggerChange(false);
  }
};
let BranchNode = _BranchNode;
__publicField(BranchNode, "key", ":branch");
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.log)()
], BranchNode.prototype, "star", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.log)()
], BranchNode.prototype, "unstar", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.gate)(),
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.debug)()
], BranchNode.prototype, "refresh", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.gate)()
], BranchNode.prototype, "loadMore", 1);


/***/ }),

/***/ "./src/views/nodes/branchOrTagFolderNode.ts":
/*!**************************************************!*\
  !*** ./src/views/nodes/branchOrTagFolderNode.ts ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "BranchOrTagFolderNode": () => (/* binding */ BranchOrTagFolderNode)
/* harmony export */ });
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _git_gitUri__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../git/gitUri */ "./src/git/gitUri.ts");
/* harmony import */ var _branchNode__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./branchNode */ "./src/views/nodes/branchNode.ts");
/* harmony import */ var _repositoryNode__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./repositoryNode */ "./src/views/nodes/repositoryNode.ts");
/* harmony import */ var _viewNode__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./viewNode */ "./src/views/nodes/viewNode.ts");






class BranchOrTagFolderNode extends _viewNode__WEBPACK_IMPORTED_MODULE_4__.ViewNode {
  constructor(view, parent, type, repoPath, folderName, relativePath, root, _key, _expanded = false) {
    super(_git_gitUri__WEBPACK_IMPORTED_MODULE_1__.GitUri.fromRepoPath(repoPath), view, parent);
    this.type = type;
    this.repoPath = repoPath;
    this.folderName = folderName;
    this.relativePath = relativePath;
    this.root = root;
    this._key = _key;
    this._expanded = _expanded;
  }
  static getId(repoPath, key, type, relativePath) {
    return `${_repositoryNode__WEBPACK_IMPORTED_MODULE_3__.RepositoryNode.getId(repoPath)}:${key === void 0 ? type : `${key}:${type}`}-folder(${relativePath})`;
  }
  toClipboard() {
    return this.folderName;
  }
  get id() {
    return BranchOrTagFolderNode.getId(this.repoPath, this._key, this.type, this.relativePath);
  }
  getChildren() {
    var _a;
    if (this.root.descendants === void 0 || this.root.children === void 0)
      return [];
    const children = [];
    for (const folder of this.root.children.values()) {
      if (folder.value === void 0) {
        const expanded = (_a = folder.descendants) == null ? void 0 : _a.some((n) => n instanceof _branchNode__WEBPACK_IMPORTED_MODULE_2__.BranchNode && n.current);
        children.push(new BranchOrTagFolderNode(this.view, this.folderName ? this : this.parent, this.type, this.repoPath, folder.name, folder.relativePath, folder, this._key, expanded));
        continue;
      }
      folder.value.parent = this.folderName ? this : this.parent;
      children.push(folder.value);
    }
    return children;
  }
  getTreeItem() {
    const item = new vscode__WEBPACK_IMPORTED_MODULE_0__.TreeItem(this.label, this._expanded ? vscode__WEBPACK_IMPORTED_MODULE_0__.TreeItemCollapsibleState.Expanded : vscode__WEBPACK_IMPORTED_MODULE_0__.TreeItemCollapsibleState.Collapsed);
    item.id = this.id;
    item.contextValue = _viewNode__WEBPACK_IMPORTED_MODULE_4__.ContextValues.Folder;
    item.iconPath = vscode__WEBPACK_IMPORTED_MODULE_0__.ThemeIcon.Folder;
    item.tooltip = this.label;
    return item;
  }
  get label() {
    return this.folderName;
  }
}


/***/ }),

/***/ "./src/views/nodes/branchTrackingStatusFilesNode.ts":
/*!**********************************************************!*\
  !*** ./src/views/nodes/branchTrackingStatusFilesNode.ts ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "BranchTrackingStatusFilesNode": () => (/* binding */ BranchTrackingStatusFilesNode)
/* harmony export */ });
/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! path */ "./node_modules/path-browserify/index.js");
/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _configuration__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../configuration */ "./src/configuration.ts");
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../container */ "./src/container.ts");
/* harmony import */ var _git_git__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../git/git */ "./src/git/git.ts");
/* harmony import */ var _git_gitUri__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../git/gitUri */ "./src/git/gitUri.ts");
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../system */ "./src/system.ts");
/* harmony import */ var _branchNode__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./branchNode */ "./src/views/nodes/branchNode.ts");
/* harmony import */ var _folderNode__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./folderNode */ "./src/views/nodes/folderNode.ts");
/* harmony import */ var _statusFileNode__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./statusFileNode */ "./src/views/nodes/statusFileNode.ts");
/* harmony import */ var _viewNode__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./viewNode */ "./src/views/nodes/viewNode.ts");

var __defProp = Object.defineProperty;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};











const _BranchTrackingStatusFilesNode = class extends _viewNode__WEBPACK_IMPORTED_MODULE_10__.ViewNode {
  constructor(view, parent, branch, status, direction, root = false) {
    super(_git_gitUri__WEBPACK_IMPORTED_MODULE_5__.GitUri.fromRepoPath(status.repoPath), view, parent);
    this.branch = branch;
    this.status = status;
    this.direction = direction;
    this.root = root;
    __publicField(this, "repoPath");
    this.repoPath = status.repoPath;
  }
  static getId(repoPath, name, root, upstream, direction) {
    return `${_branchNode__WEBPACK_IMPORTED_MODULE_7__.BranchNode.getId(repoPath, name, root)}${this.key}(${upstream}|${direction})`;
  }
  get id() {
    return _BranchTrackingStatusFilesNode.getId(this.status.repoPath, this.status.ref, this.root, this.status.upstream, this.direction);
  }
  async getChildren() {
    const log = await _container__WEBPACK_IMPORTED_MODULE_3__.Container.git.getLog(this.repoPath, {
      limit: 0,
      ref: _git_git__WEBPACK_IMPORTED_MODULE_4__.GitRevision.createRange(this.status.upstream, this.branch.ref, this.direction === "behind" ? "..." : "..")
    });
    const files = log != null ? [
      ..._system__WEBPACK_IMPORTED_MODULE_6__.Iterables.flatMap(log.commits.values(), (c) => c.files.map((s) => {
        const file = { ...s, commit: c };
        return file;
      }))
    ] : [];
    files.sort((a, b) => b.commit.date.getTime() - a.commit.date.getTime());
    const groups = _system__WEBPACK_IMPORTED_MODULE_6__.Arrays.groupBy(files, (s) => s.fileName);
    let children = Object.values(groups).map((files2) => new _statusFileNode__WEBPACK_IMPORTED_MODULE_9__.StatusFileNode(this.view, this, this.repoPath, files2[files2.length - 1], files2.map((s) => s.commit)));
    if (this.view.config.files.layout !== _configuration__WEBPACK_IMPORTED_MODULE_2__.ViewFilesLayout.List) {
      const hierarchy = _system__WEBPACK_IMPORTED_MODULE_6__.Arrays.makeHierarchical(children, (n) => n.uri.relativePath.split("/"), (...parts) => _system__WEBPACK_IMPORTED_MODULE_6__.Strings.normalizePath(path__WEBPACK_IMPORTED_MODULE_0__.join(...parts)), this.view.config.files.compact);
      const root = new _folderNode__WEBPACK_IMPORTED_MODULE_8__.FolderNode(this.view, this, this.repoPath, "", hierarchy, false);
      children = root.getChildren();
    } else {
      children.sort((a, b) => a.priority - b.priority || a.label.localeCompare(b.label, void 0, { numeric: true, sensitivity: "base" }));
    }
    return children;
  }
  async getTreeItem() {
    var _a;
    const stats = await _container__WEBPACK_IMPORTED_MODULE_3__.Container.git.getChangedFilesCount(this.repoPath, `${this.status.upstream}${this.direction === "behind" ? ".." : "..."}`);
    const files = (_a = stats == null ? void 0 : stats.files) != null ? _a : 0;
    const label = `${_system__WEBPACK_IMPORTED_MODULE_6__.Strings.pluralize("file", files)} changed`;
    const item = new vscode__WEBPACK_IMPORTED_MODULE_1__.TreeItem(label, vscode__WEBPACK_IMPORTED_MODULE_1__.TreeItemCollapsibleState.Collapsed);
    item.id = this.id;
    item.contextValue = _viewNode__WEBPACK_IMPORTED_MODULE_10__.ContextValues.BranchStatusFiles;
    return item;
  }
};
let BranchTrackingStatusFilesNode = _BranchTrackingStatusFilesNode;
__publicField(BranchTrackingStatusFilesNode, "key", ":status-branch:files");


/***/ }),

/***/ "./src/views/nodes/branchTrackingStatusNode.ts":
/*!*****************************************************!*\
  !*** ./src/views/nodes/branchTrackingStatusNode.ts ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "BranchTrackingStatusNode": () => (/* binding */ BranchTrackingStatusNode)
/* harmony export */ });
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../constants */ "./src/constants.ts");
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../container */ "./src/container.ts");
/* harmony import */ var _git_git__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../git/git */ "./src/git/git.ts");
/* harmony import */ var _git_gitUri__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../git/gitUri */ "./src/git/gitUri.ts");
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../system */ "./src/system.ts");
/* harmony import */ var _branchNode__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./branchNode */ "./src/views/nodes/branchNode.ts");
/* harmony import */ var _branchTrackingStatusFilesNode__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./branchTrackingStatusFilesNode */ "./src/views/nodes/branchTrackingStatusFilesNode.ts");
/* harmony import */ var _commitNode__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./commitNode */ "./src/views/nodes/commitNode.ts");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./common */ "./src/views/nodes/common.ts");
/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./helpers */ "./src/views/nodes/helpers.ts");
/* harmony import */ var _viewNode__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./viewNode */ "./src/views/nodes/viewNode.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};












const _BranchTrackingStatusNode = class extends _viewNode__WEBPACK_IMPORTED_MODULE_11__.ViewNode {
  constructor(view, parent, branch, status, upstreamType, root = false, options) {
    super(_git_gitUri__WEBPACK_IMPORTED_MODULE_4__.GitUri.fromRepoPath(status.repoPath), view, parent);
    this.branch = branch;
    this.status = status;
    this.upstreamType = upstreamType;
    this.root = root;
    __publicField(this, "options");
    __publicField(this, "_log");
    __publicField(this, "limit", this.view.getNodeLastKnownLimit(this));
    this.options = { showAheadCommits: false, ...options };
  }
  static getId(repoPath, name, root, upstream, upstreamType) {
    return `${_branchNode__WEBPACK_IMPORTED_MODULE_6__.BranchNode.getId(repoPath, name, root)}${this.key}(${upstream != null ? upstream : ""}):${upstreamType}`;
  }
  get id() {
    return _BranchTrackingStatusNode.getId(this.status.repoPath, this.status.ref, this.root, this.status.upstream, this.upstreamType);
  }
  get repoPath() {
    return this.uri.repoPath;
  }
  async getChildren() {
    if (this.upstreamType === "same" || this.upstreamType === "none")
      return [];
    const log = await this.getLog();
    if (log == null)
      return [];
    let commits;
    if (this.upstreamType === "ahead") {
      commits = [...log.commits.values()];
      const commit = commits[commits.length - 1];
      if (commit.previousSha == null) {
        const previousLog = await _container__WEBPACK_IMPORTED_MODULE_2__.Container.git.getLog(this.uri.repoPath, { limit: 2, ref: commit.sha });
        if (previousLog != null) {
          commits[commits.length - 1] = _system__WEBPACK_IMPORTED_MODULE_5__.Iterables.first(previousLog.commits.values());
        }
      }
    } else {
      commits = log.commits.values();
    }
    const children = [];
    let showFiles = true;
    if (!this.options.showAheadCommits && this.upstreamType === "ahead" && this.status.upstream && this.status.state.ahead > 0) {
      showFiles = false;
      children.push(...await new _branchTrackingStatusFilesNode__WEBPACK_IMPORTED_MODULE_7__.BranchTrackingStatusFilesNode(this.view, this, this.branch, this.status, this.upstreamType, this.root).getChildren());
    } else {
      children.push(...(0,_helpers__WEBPACK_IMPORTED_MODULE_10__.insertDateMarkers)(_system__WEBPACK_IMPORTED_MODULE_5__.Iterables.map(commits, (c) => new _commitNode__WEBPACK_IMPORTED_MODULE_8__.CommitNode(this.view, this, c, this.upstreamType === "ahead", this.branch)), this, 1));
      if (log.hasMore) {
        children.push(new _common__WEBPACK_IMPORTED_MODULE_9__.LoadMoreNode(this.view, this, children[children.length - 1]));
      }
    }
    if (showFiles) {
      children.splice(0, 0, new _branchTrackingStatusFilesNode__WEBPACK_IMPORTED_MODULE_7__.BranchTrackingStatusFilesNode(this.view, this, this.branch, this.status, this.upstreamType, this.root));
    }
    return children;
  }
  async getTreeItem() {
    var _a, _b, _c, _d, _e, _f, _g, _h, _i, _j;
    let lastFetched = 0;
    if (this.upstreamType !== "none") {
      const repo = await _container__WEBPACK_IMPORTED_MODULE_2__.Container.git.getRepository(this.repoPath);
      lastFetched = (_a = await (repo == null ? void 0 : repo.getLastFetched())) != null ? _a : 0;
    }
    let label;
    let description;
    let collapsibleState;
    let contextValue;
    let icon;
    let tooltip;
    switch (this.upstreamType) {
      case "ahead": {
        const remote = await this.branch.getRemote();
        label = `Changes to push to ${(_b = remote == null ? void 0 : remote.name) != null ? _b : _git_git__WEBPACK_IMPORTED_MODULE_3__.GitBranch.getRemote(this.status.upstream)}${((_c = remote == null ? void 0 : remote.provider) == null ? void 0 : _c.name) ? ` on ${remote == null ? void 0 : remote.provider.name}` : ""}`;
        description = _system__WEBPACK_IMPORTED_MODULE_5__.Strings.pluralize("commit", this.status.state.ahead);
        tooltip = `Branch $(git-branch) ${this.branch.name} is ${_system__WEBPACK_IMPORTED_MODULE_5__.Strings.pluralize("commit", this.status.state.ahead, { infix: "$(arrow-up) " })} ahead of $(git-branch) ${this.status.upstream}${((_d = remote == null ? void 0 : remote.provider) == null ? void 0 : _d.name) ? ` on ${remote.provider.name}` : ""}`;
        collapsibleState = vscode__WEBPACK_IMPORTED_MODULE_0__.TreeItemCollapsibleState.Collapsed;
        contextValue = this.root ? _viewNode__WEBPACK_IMPORTED_MODULE_11__.ContextValues.StatusAheadOfUpstream : _viewNode__WEBPACK_IMPORTED_MODULE_11__.ContextValues.BranchStatusAheadOfUpstream;
        icon = new vscode__WEBPACK_IMPORTED_MODULE_0__.ThemeIcon("cloud-upload", new vscode__WEBPACK_IMPORTED_MODULE_0__.ThemeColor(_constants__WEBPACK_IMPORTED_MODULE_1__.Colors.UnpushlishedChangesIconColor));
        break;
      }
      case "behind": {
        const remote = await this.branch.getRemote();
        label = `Changes to pull from ${(_e = remote == null ? void 0 : remote.name) != null ? _e : _git_git__WEBPACK_IMPORTED_MODULE_3__.GitBranch.getRemote(this.status.upstream)}${((_f = remote == null ? void 0 : remote.provider) == null ? void 0 : _f.name) ? ` on ${remote.provider.name}` : ""}`;
        description = _system__WEBPACK_IMPORTED_MODULE_5__.Strings.pluralize("commit", this.status.state.behind);
        tooltip = `Branch $(git-branch) ${this.branch.name} is ${_system__WEBPACK_IMPORTED_MODULE_5__.Strings.pluralize("commit", this.status.state.behind, { infix: "$(arrow-down) " })} behind $(git-branch) ${this.status.upstream}${((_g = remote == null ? void 0 : remote.provider) == null ? void 0 : _g.name) ? ` on ${remote.provider.name}` : ""}`;
        collapsibleState = vscode__WEBPACK_IMPORTED_MODULE_0__.TreeItemCollapsibleState.Collapsed;
        contextValue = this.root ? _viewNode__WEBPACK_IMPORTED_MODULE_11__.ContextValues.StatusBehindUpstream : _viewNode__WEBPACK_IMPORTED_MODULE_11__.ContextValues.BranchStatusBehindUpstream;
        icon = new vscode__WEBPACK_IMPORTED_MODULE_0__.ThemeIcon("cloud-download", new vscode__WEBPACK_IMPORTED_MODULE_0__.ThemeColor(_constants__WEBPACK_IMPORTED_MODULE_1__.Colors.UnpulledChangesIconColor));
        break;
      }
      case "same": {
        const remote = await this.branch.getRemote();
        label = `Up to date with ${(_h = remote == null ? void 0 : remote.name) != null ? _h : _git_git__WEBPACK_IMPORTED_MODULE_3__.GitBranch.getRemote(this.status.upstream)}${((_i = remote == null ? void 0 : remote.provider) == null ? void 0 : _i.name) ? ` on ${remote.provider.name}` : ""}`;
        description = lastFetched ? `Last fetched ${_system__WEBPACK_IMPORTED_MODULE_5__.Dates.getFormatter(new Date(lastFetched)).fromNow()}` : "";
        tooltip = `Branch $(git-branch) ${this.branch.name} is up to date with $(git-branch) ${this.status.upstream}${((_j = remote == null ? void 0 : remote.provider) == null ? void 0 : _j.name) ? ` on ${remote.provider.name}` : ""}`;
        collapsibleState = vscode__WEBPACK_IMPORTED_MODULE_0__.TreeItemCollapsibleState.None;
        contextValue = this.root ? _viewNode__WEBPACK_IMPORTED_MODULE_11__.ContextValues.StatusSameAsUpstream : _viewNode__WEBPACK_IMPORTED_MODULE_11__.ContextValues.BranchStatusSameAsUpstream;
        icon = new vscode__WEBPACK_IMPORTED_MODULE_0__.ThemeIcon("cloud");
        break;
      }
      case "none": {
        const remotes = await _container__WEBPACK_IMPORTED_MODULE_2__.Container.git.getRemotes(this.branch.repoPath);
        const providers = _git_git__WEBPACK_IMPORTED_MODULE_3__.GitRemote.getHighlanderProviders(remotes);
        const providerName = (providers == null ? void 0 : providers.length) ? providers[0].name : void 0;
        label = `Publish ${this.branch.name} to ${providerName != null ? providerName : "a remote"}`;
        tooltip = `Branch $(git-branch) ${this.branch.name} hasn't been published to ${providerName != null ? providerName : "a remote"}`;
        collapsibleState = vscode__WEBPACK_IMPORTED_MODULE_0__.TreeItemCollapsibleState.None;
        contextValue = this.root ? _viewNode__WEBPACK_IMPORTED_MODULE_11__.ContextValues.StatusNoUpstream : _viewNode__WEBPACK_IMPORTED_MODULE_11__.ContextValues.BranchStatusNoUpstream;
        icon = new vscode__WEBPACK_IMPORTED_MODULE_0__.ThemeIcon("cloud-upload", remotes.length ? new vscode__WEBPACK_IMPORTED_MODULE_0__.ThemeColor(_constants__WEBPACK_IMPORTED_MODULE_1__.Colors.UnpushlishedChangesIconColor) : void 0);
        break;
      }
    }
    const item = new vscode__WEBPACK_IMPORTED_MODULE_0__.TreeItem(label, collapsibleState);
    item.id = this.id;
    item.contextValue = contextValue;
    item.description = description;
    if (lastFetched) {
      tooltip += `

Last fetched ${_system__WEBPACK_IMPORTED_MODULE_5__.Dates.getFormatter(new Date(lastFetched)).fromNow()}`;
    }
    item.iconPath = icon;
    item.tooltip = new vscode__WEBPACK_IMPORTED_MODULE_0__.MarkdownString(tooltip, true);
    return item;
  }
  refresh(reset) {
    if (reset) {
      this._log = void 0;
    }
  }
  async getLog() {
    var _a;
    if (this.upstreamType === "same" || this.upstreamType === "none")
      return void 0;
    if (this._log == null) {
      const range = this.upstreamType === "ahead" ? _git_git__WEBPACK_IMPORTED_MODULE_3__.GitRevision.createRange(this.status.upstream, this.status.ref) : _git_git__WEBPACK_IMPORTED_MODULE_3__.GitRevision.createRange(this.status.ref, this.status.upstream);
      this._log = await _container__WEBPACK_IMPORTED_MODULE_2__.Container.git.getLog(this.uri.repoPath, {
        limit: (_a = this.limit) != null ? _a : this.view.config.defaultItemLimit,
        ref: range
      });
    }
    return this._log;
  }
  get hasMore() {
    var _a, _b;
    return (_b = (_a = this._log) == null ? void 0 : _a.hasMore) != null ? _b : true;
  }
  async loadMore(limit) {
    var _a;
    let log = await vscode__WEBPACK_IMPORTED_MODULE_0__.window.withProgress({
      location: { viewId: this.view.id }
    }, () => this.getLog());
    if (log == null || !log.hasMore)
      return;
    log = await ((_a = log.more) == null ? void 0 : _a.call(log, limit != null ? limit : this.view.config.pageItemLimit));
    if (this._log === log)
      return;
    this._log = log;
    this.limit = log == null ? void 0 : log.count;
    void this.triggerChange(false);
  }
};
let BranchTrackingStatusNode = _BranchTrackingStatusNode;
__publicField(BranchTrackingStatusNode, "key", ":status-branch:upstream");
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.gate)(),
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.debug)()
], BranchTrackingStatusNode.prototype, "refresh", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.gate)()
], BranchTrackingStatusNode.prototype, "loadMore", 1);


/***/ }),

/***/ "./src/views/nodes/branchesNode.ts":
/*!*****************************************!*\
  !*** ./src/views/nodes/branchesNode.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "BranchesNode": () => (/* binding */ BranchesNode)
/* harmony export */ });
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _configuration__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../configuration */ "./src/configuration.ts");
/* harmony import */ var _git_gitUri__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../git/gitUri */ "./src/git/gitUri.ts");
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../system */ "./src/system.ts");
/* harmony import */ var _repositoriesView__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../repositoriesView */ "./src/views/repositoriesView.ts");
/* harmony import */ var _branchNode__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./branchNode */ "./src/views/nodes/branchNode.ts");
/* harmony import */ var _branchOrTagFolderNode__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./branchOrTagFolderNode */ "./src/views/nodes/branchOrTagFolderNode.ts");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./common */ "./src/views/nodes/common.ts");
/* harmony import */ var _repositoryNode__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./repositoryNode */ "./src/views/nodes/repositoryNode.ts");
/* harmony import */ var _viewNode__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./viewNode */ "./src/views/nodes/viewNode.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};










const _BranchesNode = class extends _viewNode__WEBPACK_IMPORTED_MODULE_9__.ViewNode {
  constructor(uri, view, parent, repo) {
    super(uri, view, parent);
    this.repo = repo;
    __publicField(this, "_children");
  }
  static getId(repoPath) {
    return `${_repositoryNode__WEBPACK_IMPORTED_MODULE_8__.RepositoryNode.getId(repoPath)}${this.key}`;
  }
  get id() {
    return _BranchesNode.getId(this.repo.path);
  }
  get repoPath() {
    return this.repo.path;
  }
  async getChildren() {
    if (this._children == null) {
      const branches = await this.repo.getBranches({
        filter: (b) => !b.remote,
        sort: { current: false }
      });
      if (branches.length === 0)
        return [new _common__WEBPACK_IMPORTED_MODULE_7__.MessageNode(this.view, this, "No branches could be found.")];
      const branchNodes = branches.map((b) => new _branchNode__WEBPACK_IMPORTED_MODULE_5__.BranchNode(_git_gitUri__WEBPACK_IMPORTED_MODULE_2__.GitUri.fromRepoPath(this.uri.repoPath, b.ref), this.view, this, b, false, {
        showComparison: this.view instanceof _repositoriesView__WEBPACK_IMPORTED_MODULE_4__.RepositoriesView ? this.view.config.branches.showBranchComparison : this.view.config.showBranchComparison
      }));
      if (this.view.config.branches.layout === _configuration__WEBPACK_IMPORTED_MODULE_1__.ViewBranchesLayout.List)
        return branchNodes;
      const hierarchy = _system__WEBPACK_IMPORTED_MODULE_3__.Arrays.makeHierarchical(branchNodes, (n) => n.treeHierarchy, (...paths) => paths.join("/"), this.view.config.files.compact, (b) => {
        b.compacted = true;
        return true;
      });
      const root = new _branchOrTagFolderNode__WEBPACK_IMPORTED_MODULE_6__.BranchOrTagFolderNode(this.view, this, "branch", this.repo.path, "", void 0, hierarchy, "branches");
      this._children = root.getChildren();
    }
    return this._children;
  }
  async getTreeItem() {
    const item = new vscode__WEBPACK_IMPORTED_MODULE_0__.TreeItem("Branches", vscode__WEBPACK_IMPORTED_MODULE_0__.TreeItemCollapsibleState.Collapsed);
    item.id = this.id;
    item.contextValue = _viewNode__WEBPACK_IMPORTED_MODULE_9__.ContextValues.Branches;
    if (await this.repo.hasRemotes()) {
      item.contextValue += "+remotes";
    }
    item.iconPath = new vscode__WEBPACK_IMPORTED_MODULE_0__.ThemeIcon("git-branch");
    return item;
  }
  refresh() {
    this._children = void 0;
  }
};
let BranchesNode = _BranchesNode;
__publicField(BranchesNode, "key", ":branches");
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_3__.gate)(),
  (0,_system__WEBPACK_IMPORTED_MODULE_3__.debug)()
], BranchesNode.prototype, "refresh", 1);


/***/ }),

/***/ "./src/views/nodes/commitFileNode.ts":
/*!*******************************************!*\
  !*** ./src/views/nodes/commitFileNode.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CommitFileNode": () => (/* binding */ CommitFileNode)
/* harmony export */ });
/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! path */ "./node_modules/path-browserify/index.js");
/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _commands__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../commands */ "./src/commands.ts");
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../container */ "./src/container.ts");
/* harmony import */ var _git_git__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../git/git */ "./src/git/git.ts");
/* harmony import */ var _git_gitUri__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../git/gitUri */ "./src/git/gitUri.ts");
/* harmony import */ var _viewNode__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./viewNode */ "./src/views/nodes/viewNode.ts");

var __defProp = Object.defineProperty;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};







class CommitFileNode extends _viewNode__WEBPACK_IMPORTED_MODULE_6__.ViewRefFileNode {
  constructor(view, parent, file, commit, _options = {}) {
    super(_git_gitUri__WEBPACK_IMPORTED_MODULE_5__.GitUri.fromFile(file, commit.repoPath, commit.sha), view, parent);
    this.file = file;
    this.commit = commit;
    this._options = _options;
    __publicField(this, "_folderName");
    __publicField(this, "_label");
    __publicField(this, "_relativePath");
  }
  toClipboard() {
    return this.fileName;
  }
  get fileName() {
    return this.file.fileName;
  }
  get priority() {
    return 0;
  }
  get ref() {
    return this.commit;
  }
  getChildren() {
    return [];
  }
  async getTreeItem() {
    var _a;
    if (!this.commit.isFile) {
      const commit = this.commit.toFileCommit(this.file);
      if (commit == null) {
        const log = await _container__WEBPACK_IMPORTED_MODULE_3__.Container.git.getLogForFile(this.repoPath, this.file.fileName, {
          limit: 2,
          ref: this.commit.sha
        });
        if (log != null) {
          this.commit = (_a = log.commits.get(this.commit.sha)) != null ? _a : this.commit;
        }
      } else {
        this.commit = commit;
      }
    }
    const item = new vscode__WEBPACK_IMPORTED_MODULE_1__.TreeItem(this.label, vscode__WEBPACK_IMPORTED_MODULE_1__.TreeItemCollapsibleState.None);
    item.contextValue = this.contextValue;
    item.description = this.description;
    item.resourceUri = vscode__WEBPACK_IMPORTED_MODULE_1__.Uri.parse(`gitlens-view://commit-file/status/${this.file.status}`);
    item.tooltip = this.tooltip;
    const icon = _git_git__WEBPACK_IMPORTED_MODULE_4__.GitFile.getStatusIcon(this.file.status);
    item.iconPath = {
      dark: _container__WEBPACK_IMPORTED_MODULE_3__.Container.context.asAbsolutePath(path__WEBPACK_IMPORTED_MODULE_0__.join("images", "dark", icon)),
      light: _container__WEBPACK_IMPORTED_MODULE_3__.Container.context.asAbsolutePath(path__WEBPACK_IMPORTED_MODULE_0__.join("images", "light", icon))
    };
    item.command = this.getCommand();
    this._label = void 0;
    return item;
  }
  get contextValue() {
    var _a, _b;
    if (!this.commit.isUncommitted) {
      return `${_viewNode__WEBPACK_IMPORTED_MODULE_6__.ContextValues.File}+committed${((_a = this._options.branch) == null ? void 0 : _a.current) ? "+current" : ""}${((_b = this._options.branch) == null ? void 0 : _b.current) && this._options.branch.sha === this.commit.ref ? "+HEAD" : ""}${this._options.unpublished ? "+unpublished" : ""}`;
    }
    return this.commit.isUncommittedStaged ? `${_viewNode__WEBPACK_IMPORTED_MODULE_6__.ContextValues.File}+staged` : `${_viewNode__WEBPACK_IMPORTED_MODULE_6__.ContextValues.File}+unstaged`;
  }
  get description() {
    return _git_git__WEBPACK_IMPORTED_MODULE_4__.StatusFileFormatter.fromTemplate(this.view.config.formats.files.description, this.file, {
      relativePath: this.relativePath
    });
  }
  get folderName() {
    if (this._folderName === void 0) {
      this._folderName = path__WEBPACK_IMPORTED_MODULE_0__.dirname(this.uri.relativePath);
    }
    return this._folderName;
  }
  get label() {
    if (this._label === void 0) {
      this._label = _git_git__WEBPACK_IMPORTED_MODULE_4__.StatusFileFormatter.fromTemplate(this.view.config.formats.files.label, this.file, {
        relativePath: this.relativePath
      });
    }
    return this._label;
  }
  get relativePath() {
    return this._relativePath;
  }
  set relativePath(value) {
    this._relativePath = value;
    this._label = void 0;
  }
  get tooltip() {
    return _git_git__WEBPACK_IMPORTED_MODULE_4__.StatusFileFormatter.fromTemplate(`\${file}
\${directory}/

\${status}\${ (originalPath)}`, this.file);
  }
  getCommand() {
    let line;
    if (this.commit.line !== void 0) {
      line = this.commit.line.to.line - 1;
    } else {
      line = this._options.selection !== void 0 ? this._options.selection.active.line : 0;
    }
    const commandArgs = {
      commit: this.commit,
      uri: _git_gitUri__WEBPACK_IMPORTED_MODULE_5__.GitUri.fromFile(this.file, this.commit.repoPath),
      line,
      showOptions: {
        preserveFocus: true,
        preview: true
      }
    };
    return {
      title: "Open Changes with Previous Revision",
      command: _commands__WEBPACK_IMPORTED_MODULE_2__.Commands.DiffWithPrevious,
      arguments: [void 0, commandArgs]
    };
  }
}


/***/ }),

/***/ "./src/views/nodes/commitNode.ts":
/*!***************************************!*\
  !*** ./src/views/nodes/commitNode.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CommitNode": () => (/* binding */ CommitNode)
/* harmony export */ });
/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! path */ "./node_modules/path-browserify/index.js");
/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _commands__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../commands */ "./src/commands.ts");
/* harmony import */ var _configuration__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../configuration */ "./src/configuration.ts");
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../constants */ "./src/constants.ts");
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../container */ "./src/container.ts");
/* harmony import */ var _git_git__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../git/git */ "./src/git/git.ts");
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../system */ "./src/system.ts");
/* harmony import */ var _fileHistoryView__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../fileHistoryView */ "./src/views/fileHistoryView.ts");
/* harmony import */ var _tagsView__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../tagsView */ "./src/views/tagsView.ts");
/* harmony import */ var _commitFileNode__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./commitFileNode */ "./src/views/nodes/commitFileNode.ts");
/* harmony import */ var _folderNode__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./folderNode */ "./src/views/nodes/folderNode.ts");
/* harmony import */ var _pullRequestNode__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./pullRequestNode */ "./src/views/nodes/pullRequestNode.ts");
/* harmony import */ var _viewNode__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./viewNode */ "./src/views/nodes/viewNode.ts");















class CommitNode extends _viewNode__WEBPACK_IMPORTED_MODULE_13__.ViewRefNode {
  constructor(view, parent, commit, unpublished, branch, getBranchAndTagTips, _options = {}) {
    super(commit.toGitUri(), view, parent);
    this.commit = commit;
    this.unpublished = unpublished;
    this.branch = branch;
    this.getBranchAndTagTips = getBranchAndTagTips;
    this._options = _options;
  }
  toClipboard() {
    let message = this.commit.message;
    const index = message.indexOf("\n");
    if (index !== -1) {
      message = `${message.substring(0, index)}${_constants__WEBPACK_IMPORTED_MODULE_4__.GlyphChars.Space}${_constants__WEBPACK_IMPORTED_MODULE_4__.GlyphChars.Ellipsis}`;
    }
    return `${this.commit.shortSha}: ${message}`;
  }
  get isTip() {
    var _a, _b;
    return (_b = ((_a = this.branch) == null ? void 0 : _a.current) && this.branch.sha === this.commit.ref) != null ? _b : false;
  }
  get ref() {
    return this.commit;
  }
  async getChildren() {
    const commit = this.commit;
    let children = commit.files.map((s) => new _commitFileNode__WEBPACK_IMPORTED_MODULE_10__.CommitFileNode(this.view, this, s, commit.toFileCommit(s)));
    if (this.view.config.files.layout !== _configuration__WEBPACK_IMPORTED_MODULE_3__.ViewFilesLayout.List) {
      const hierarchy = _system__WEBPACK_IMPORTED_MODULE_7__.Arrays.makeHierarchical(children, (n) => n.uri.relativePath.split("/"), (...parts) => _system__WEBPACK_IMPORTED_MODULE_7__.Strings.normalizePath(path__WEBPACK_IMPORTED_MODULE_0__.join(...parts)), this.view.config.files.compact);
      const root = new _folderNode__WEBPACK_IMPORTED_MODULE_11__.FolderNode(this.view, this, this.repoPath, "", hierarchy);
      children = root.getChildren();
    } else {
      children.sort((a, b) => a.label.localeCompare(b.label, void 0, { numeric: true, sensitivity: "base" }));
    }
    if (!(this.view instanceof _tagsView__WEBPACK_IMPORTED_MODULE_9__.TagsView) && !(this.view instanceof _fileHistoryView__WEBPACK_IMPORTED_MODULE_8__.FileHistoryView)) {
      if (this.view.config.pullRequests.enabled && this.view.config.pullRequests.showForCommits) {
        const pr = await commit.getAssociatedPullRequest();
        if (pr != null) {
          children.splice(0, 0, new _pullRequestNode__WEBPACK_IMPORTED_MODULE_12__.PullRequestNode(this.view, this, pr, commit));
        }
      }
    }
    return children;
  }
  async getTreeItem() {
    var _a;
    const label = _git_git__WEBPACK_IMPORTED_MODULE_6__.CommitFormatter.fromTemplate(this.view.config.formats.commits.label, this.commit, {
      dateFormat: _container__WEBPACK_IMPORTED_MODULE_5__.Container.config.defaultDateFormat,
      getBranchAndTagTips: (sha) => {
        var _a2;
        return (_a2 = this.getBranchAndTagTips) == null ? void 0 : _a2.call(this, sha, { compact: true });
      },
      messageTruncateAtNewLine: true
    });
    const item = new vscode__WEBPACK_IMPORTED_MODULE_1__.TreeItem(label, this._options.expand ? vscode__WEBPACK_IMPORTED_MODULE_1__.TreeItemCollapsibleState.Expanded : vscode__WEBPACK_IMPORTED_MODULE_1__.TreeItemCollapsibleState.Collapsed);
    item.contextValue = `${_viewNode__WEBPACK_IMPORTED_MODULE_13__.ContextValues.Commit}${((_a = this.branch) == null ? void 0 : _a.current) ? "+current" : ""}${this.isTip ? "+HEAD" : ""}${this.unpublished ? "+unpublished" : ""}`;
    item.description = _git_git__WEBPACK_IMPORTED_MODULE_6__.CommitFormatter.fromTemplate(this.view.config.formats.commits.description, this.commit, {
      dateFormat: _container__WEBPACK_IMPORTED_MODULE_5__.Container.config.defaultDateFormat,
      getBranchAndTagTips: (sha) => {
        var _a2;
        return (_a2 = this.getBranchAndTagTips) == null ? void 0 : _a2.call(this, sha, { compact: true });
      },
      messageTruncateAtNewLine: true
    });
    item.iconPath = this.unpublished ? new vscode__WEBPACK_IMPORTED_MODULE_1__.ThemeIcon("arrow-up", new vscode__WEBPACK_IMPORTED_MODULE_1__.ThemeColor(_constants__WEBPACK_IMPORTED_MODULE_4__.Colors.UnpublishedCommitIconColor)) : this.view.config.avatars ? await this.commit.getAvatarUri({ defaultStyle: _container__WEBPACK_IMPORTED_MODULE_5__.Container.config.defaultGravatarsStyle }) : new vscode__WEBPACK_IMPORTED_MODULE_1__.ThemeIcon("git-commit");
    return item;
  }
  getCommand() {
    const commandArgs = {
      commit: this.commit,
      uri: this.uri,
      line: 0,
      showOptions: {
        preserveFocus: true,
        preview: true
      }
    };
    return {
      title: "Open Changes with Previous Revision",
      command: _commands__WEBPACK_IMPORTED_MODULE_2__.Commands.DiffWithPrevious,
      arguments: [void 0, commandArgs]
    };
  }
  async resolveTreeItem(item) {
    if (item.tooltip == null) {
      item.tooltip = await this.getTooltip();
    }
    return item;
  }
  async getTooltip() {
    const remotes = await _container__WEBPACK_IMPORTED_MODULE_5__.Container.git.getRemotes(this.commit.repoPath);
    const remote = await _container__WEBPACK_IMPORTED_MODULE_5__.Container.git.getRichRemoteProvider(remotes);
    let autolinkedIssuesOrPullRequests;
    let pr;
    if ((remote == null ? void 0 : remote.provider) != null) {
      [autolinkedIssuesOrPullRequests, pr] = await Promise.all([
        _container__WEBPACK_IMPORTED_MODULE_5__.Container.autolinks.getIssueOrPullRequestLinks(this.commit.message, remote),
        _container__WEBPACK_IMPORTED_MODULE_5__.Container.git.getPullRequestForCommit(this.commit.ref, remote.provider)
      ]);
    }
    const tooltip = await _git_git__WEBPACK_IMPORTED_MODULE_6__.CommitFormatter.fromTemplateAsync(`\${'$(git-commit) 'id}\${' via 'pullRequest}\${ \u2022 changesDetail}\${'&nbsp;&nbsp;&nbsp;'tips}

\${avatar} &nbsp;__\${author}__, \${ago} &nbsp; _(\${date})_ 

\${message}\${

---

footnotes}`, this.commit, {
      autolinkedIssuesOrPullRequests,
      dateFormat: _container__WEBPACK_IMPORTED_MODULE_5__.Container.config.defaultDateFormat,
      getBranchAndTagTips: this.getBranchAndTagTips,
      markdown: true,
      messageAutolinks: true,
      messageIndent: 4,
      pullRequestOrRemote: pr,
      remotes,
      unpublished: this.unpublished
    });
    const markdown = new vscode__WEBPACK_IMPORTED_MODULE_1__.MarkdownString(tooltip, true);
    markdown.isTrusted = true;
    return markdown;
  }
}


/***/ }),

/***/ "./src/views/nodes/common.ts":
/*!***********************************!*\
  !*** ./src/views/nodes/common.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "MessageNode": () => (/* binding */ MessageNode),
/* harmony export */   "CommandMessageNode": () => (/* binding */ CommandMessageNode),
/* harmony export */   "UpdateableMessageNode": () => (/* binding */ UpdateableMessageNode),
/* harmony export */   "PagerNode": () => (/* binding */ PagerNode),
/* harmony export */   "LoadMoreNode": () => (/* binding */ LoadMoreNode)
/* harmony export */ });
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../constants */ "./src/constants.ts");
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../container */ "./src/container.ts");
/* harmony import */ var _viewNode__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./viewNode */ "./src/views/nodes/viewNode.ts");
var __defProp = Object.defineProperty;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};




class MessageNode extends _viewNode__WEBPACK_IMPORTED_MODULE_3__.ViewNode {
  constructor(view, parent, _message, _description, _tooltip, _iconPath, _contextValue) {
    super(_viewNode__WEBPACK_IMPORTED_MODULE_3__.unknownGitUri, view, parent);
    this._message = _message;
    this._description = _description;
    this._tooltip = _tooltip;
    this._iconPath = _iconPath;
    this._contextValue = _contextValue;
  }
  getChildren() {
    return [];
  }
  getTreeItem() {
    var _a;
    const item = new vscode__WEBPACK_IMPORTED_MODULE_0__.TreeItem(this._message, vscode__WEBPACK_IMPORTED_MODULE_0__.TreeItemCollapsibleState.None);
    item.contextValue = (_a = this._contextValue) != null ? _a : _viewNode__WEBPACK_IMPORTED_MODULE_3__.ContextValues.Message;
    item.description = this._description;
    item.tooltip = this._tooltip;
    item.iconPath = this._iconPath;
    return item;
  }
}
class CommandMessageNode extends MessageNode {
  constructor(view, parent, _command, message, description, tooltip, iconPath) {
    super(view, parent, message, description, tooltip, iconPath);
    this._command = _command;
  }
  getTreeItem() {
    const item = super.getTreeItem();
    if (item instanceof vscode__WEBPACK_IMPORTED_MODULE_0__.TreeItem) {
      item.command = this._command;
      return item;
    }
    return item.then((i) => {
      i.command = this._command;
      return i;
    });
  }
}
class UpdateableMessageNode extends _viewNode__WEBPACK_IMPORTED_MODULE_3__.ViewNode {
  constructor(view, parent, id, _message, _tooltip, _iconPath) {
    super(_viewNode__WEBPACK_IMPORTED_MODULE_3__.unknownGitUri, view, parent);
    this._message = _message;
    this._tooltip = _tooltip;
    this._iconPath = _iconPath;
    __publicField(this, "id");
    this.id = id;
  }
  getChildren() {
    return [];
  }
  getTreeItem() {
    const item = new vscode__WEBPACK_IMPORTED_MODULE_0__.TreeItem(this._message, vscode__WEBPACK_IMPORTED_MODULE_0__.TreeItemCollapsibleState.None);
    item.id = this.id;
    item.contextValue = _viewNode__WEBPACK_IMPORTED_MODULE_3__.ContextValues.Message;
    item.tooltip = this._tooltip;
    item.iconPath = this._iconPath;
    return item;
  }
  update(changes, view) {
    if (changes.message !== void 0) {
      this._message = changes.message;
    }
    if (changes.tooltip !== void 0) {
      this._tooltip = changes.tooltip === null ? void 0 : changes.tooltip;
    }
    if (changes.iconPath !== void 0) {
      this._iconPath = changes.iconPath === null ? void 0 : changes.iconPath;
    }
    view.triggerNodeChange(this);
  }
}
class PagerNode extends _viewNode__WEBPACK_IMPORTED_MODULE_3__.ViewNode {
  constructor(view, parent, message, previousNode, pageSize = _container__WEBPACK_IMPORTED_MODULE_2__.Container.config.views.pageItemLimit, countFn) {
    super(_viewNode__WEBPACK_IMPORTED_MODULE_3__.unknownGitUri, view, parent);
    this.message = message;
    this.previousNode = previousNode;
    this.pageSize = pageSize;
    this.countFn = countFn;
  }
  async loadAll() {
    var _a, _b;
    const count = (_b = await ((_a = this.countFn) == null ? void 0 : _a.call(this))) != null ? _b : 0;
    return this.view.loadMoreNodeChildren(this.parent, count > 5e3 ? 5e3 : 0, this.previousNode);
  }
  loadMore() {
    return this.view.loadMoreNodeChildren(this.parent, this.pageSize, this.previousNode);
  }
  getChildren() {
    return [];
  }
  getTreeItem() {
    const item = new vscode__WEBPACK_IMPORTED_MODULE_0__.TreeItem(this.message, vscode__WEBPACK_IMPORTED_MODULE_0__.TreeItemCollapsibleState.None);
    item.contextValue = _viewNode__WEBPACK_IMPORTED_MODULE_3__.ContextValues.Pager;
    item.command = this.getCommand();
    return item;
  }
  getCommand() {
    return {
      title: "Load more",
      command: "gitlens.views.loadMoreChildren",
      arguments: [this]
    };
  }
}
class LoadMoreNode extends PagerNode {
  constructor(view, parent, previousNode, pageSize, countFn) {
    super(view, parent, pageSize === 0 ? `Load all ${_constants__WEBPACK_IMPORTED_MODULE_1__.GlyphChars.Space}${_constants__WEBPACK_IMPORTED_MODULE_1__.GlyphChars.Dash}${_constants__WEBPACK_IMPORTED_MODULE_1__.GlyphChars.Space} this may take a while` : "Load more", previousNode, pageSize, countFn);
  }
}


/***/ }),

/***/ "./src/views/nodes/compareBranchNode.ts":
/*!**********************************************!*\
  !*** ./src/views/nodes/compareBranchNode.ts ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CompareBranchNode": () => (/* binding */ CompareBranchNode)
/* harmony export */ });
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _configuration__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../configuration */ "./src/configuration.ts");
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../constants */ "./src/constants.ts");
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../container */ "./src/container.ts");
/* harmony import */ var _git_git__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../git/git */ "./src/git/git.ts");
/* harmony import */ var _quickpicks__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../quickpicks */ "./src/quickpicks.ts");
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../system */ "./src/system.ts");
/* harmony import */ var _repositoryNode__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./repositoryNode */ "./src/views/nodes/repositoryNode.ts");
/* harmony import */ var _resultsCommitsNode__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./resultsCommitsNode */ "./src/views/nodes/resultsCommitsNode.ts");
/* harmony import */ var _resultsFilesNode__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./resultsFilesNode */ "./src/views/nodes/resultsFilesNode.ts");
/* harmony import */ var _viewNode__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./viewNode */ "./src/views/nodes/viewNode.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};











const _CompareBranchNode = class extends _viewNode__WEBPACK_IMPORTED_MODULE_10__.ViewNode {
  constructor(uri, view, parent, branch, showComparison, root = false) {
    super(uri, view, parent);
    this.branch = branch;
    this.showComparison = showComparison;
    this.root = root;
    __publicField(this, "_children");
    __publicField(this, "_compareWith");
    this.loadCompareWith();
  }
  static getId(repoPath, name, root) {
    return `${_repositoryNode__WEBPACK_IMPORTED_MODULE_7__.RepositoryNode.getId(repoPath)}${this.key}(${name})${root ? ":root" : ""}`;
  }
  get ahead() {
    var _a;
    return {
      ref1: ((_a = this._compareWith) == null ? void 0 : _a.ref) || "HEAD",
      ref2: this.branch.ref
    };
  }
  get behind() {
    var _a;
    return {
      ref1: this.branch.ref,
      ref2: ((_a = this._compareWith) == null ? void 0 : _a.ref) || "HEAD"
    };
  }
  get id() {
    return _CompareBranchNode.getId(this.branch.repoPath, this.branch.name, this.root);
  }
  get repoPath() {
    return this.branch.repoPath;
  }
  async getChildren() {
    var _a, _b, _c;
    if (this._compareWith == null)
      return [];
    if (this._children == null) {
      const ahead = this.ahead;
      const behind = this.behind;
      const aheadBehindCounts = await _container__WEBPACK_IMPORTED_MODULE_3__.Container.git.getAheadBehindCommitCount(this.branch.repoPath, [
        _git_git__WEBPACK_IMPORTED_MODULE_4__.GitRevision.createRange(behind.ref1, behind.ref2, "...")
      ]);
      const mergeBase = (_a = await _container__WEBPACK_IMPORTED_MODULE_3__.Container.git.getMergeBase(this.repoPath, behind.ref1, behind.ref2, { forkPoint: true })) != null ? _a : await _container__WEBPACK_IMPORTED_MODULE_3__.Container.git.getMergeBase(this.repoPath, behind.ref1, behind.ref2);
      this._children = [
        new _resultsCommitsNode__WEBPACK_IMPORTED_MODULE_8__.ResultsCommitsNode(this.view, this, this.uri.repoPath, "Behind", {
          query: this.getCommitsQuery(_git_git__WEBPACK_IMPORTED_MODULE_4__.GitRevision.createRange(behind.ref1, behind.ref2, "..")),
          comparison: behind,
          direction: "behind",
          files: {
            ref1: this.compareWithWorkingTree ? "" : mergeBase != null ? mergeBase : behind.ref1,
            ref2: behind.ref2,
            query: this.getBehindFilesQuery.bind(this)
          }
        }, {
          id: "behind",
          description: _system__WEBPACK_IMPORTED_MODULE_6__.Strings.pluralize("commit", (_b = aheadBehindCounts == null ? void 0 : aheadBehindCounts.behind) != null ? _b : 0),
          expand: false
        }),
        new _resultsCommitsNode__WEBPACK_IMPORTED_MODULE_8__.ResultsCommitsNode(this.view, this, this.uri.repoPath, "Ahead", {
          query: this.getCommitsQuery(_git_git__WEBPACK_IMPORTED_MODULE_4__.GitRevision.createRange(ahead.ref1, this.compareWithWorkingTree ? "" : ahead.ref2, "..")),
          comparison: ahead,
          direction: "ahead",
          files: {
            ref1: mergeBase != null ? mergeBase : ahead.ref1,
            ref2: this.compareWithWorkingTree ? "" : ahead.ref2,
            query: this.getAheadFilesQuery.bind(this)
          }
        }, {
          id: "ahead",
          description: _system__WEBPACK_IMPORTED_MODULE_6__.Strings.pluralize("commit", (_c = aheadBehindCounts == null ? void 0 : aheadBehindCounts.ahead) != null ? _c : 0),
          expand: false
        }),
        new _resultsFilesNode__WEBPACK_IMPORTED_MODULE_9__.ResultsFilesNode(this.view, this, this.uri.repoPath, this._compareWith.ref || "HEAD", this.compareWithWorkingTree ? "" : this.branch.ref, this.getFilesQuery.bind(this), void 0, {
          expand: false
        })
      ];
    }
    return this._children;
  }
  getTreeItem() {
    let state;
    let label;
    let tooltip;
    if (this._compareWith == null) {
      label = `Compare ${this.compareWithWorkingTree ? "Working Tree" : this.branch.name} with <branch, tag, or ref>`;
      state = vscode__WEBPACK_IMPORTED_MODULE_0__.TreeItemCollapsibleState.None;
      tooltip = `Click to compare ${this.compareWithWorkingTree ? "Working Tree" : this.branch.name} with a branch, tag, or ref`;
    } else {
      label = `Compare ${this.compareWithWorkingTree ? "Working Tree" : this.branch.name} with ${_git_git__WEBPACK_IMPORTED_MODULE_4__.GitRevision.shorten(this._compareWith.ref, {
        strings: { working: "Working Tree" }
      })}`;
      state = vscode__WEBPACK_IMPORTED_MODULE_0__.TreeItemCollapsibleState.Collapsed;
    }
    const item = new vscode__WEBPACK_IMPORTED_MODULE_0__.TreeItem(label, state);
    item.id = this.id;
    item.contextValue = `${_viewNode__WEBPACK_IMPORTED_MODULE_10__.ContextValues.CompareBranch}${this.branch.current ? "+current" : ""}+${this.comparisonType}${this._compareWith == null ? "" : "+comparing"}${this.root ? "+root" : ""}`;
    if (this._compareWith == null) {
      item.command = {
        title: `Compare ${this.branch.name}${this.compareWithWorkingTree ? " (working)" : ""} with${_constants__WEBPACK_IMPORTED_MODULE_2__.GlyphChars.Ellipsis}`,
        command: "gitlens.views.editNode",
        arguments: [this]
      };
    }
    item.iconPath = new vscode__WEBPACK_IMPORTED_MODULE_0__.ThemeIcon("git-compare");
    item.tooltip = tooltip;
    return item;
  }
  async clear() {
    if (this._compareWith == null)
      return;
    this._compareWith = void 0;
    await this.updateCompareWith(void 0);
    this._children = void 0;
    this.view.triggerNodeChange(this);
  }
  async edit() {
    await this.compareWith();
  }
  refresh() {
    this._children = void 0;
    this.loadCompareWith();
  }
  async setComparisonType(comparisonType) {
    if (this._compareWith != null) {
      await this.updateCompareWith({ ...this._compareWith, type: comparisonType });
    } else {
      this.showComparison = comparisonType;
    }
    this._children = void 0;
    this.view.triggerNodeChange(this);
  }
  get comparisonType() {
    var _a, _b;
    return (_b = (_a = this._compareWith) == null ? void 0 : _a.type) != null ? _b : this.showComparison;
  }
  get compareWithWorkingTree() {
    return this.comparisonType === _configuration__WEBPACK_IMPORTED_MODULE_1__.ViewShowBranchComparison.Working;
  }
  async compareWith() {
    const pick = await _quickpicks__WEBPACK_IMPORTED_MODULE_5__.ReferencePicker.show(this.branch.repoPath, `Compare ${this.branch.name}${this.compareWithWorkingTree ? " (working)" : ""} with`, "Choose a reference to compare with", {
      allowEnteringRefs: true,
      picked: this.branch.ref,
      sort: { branches: { current: true }, tags: {} }
    });
    if (pick == null || pick instanceof _quickpicks__WEBPACK_IMPORTED_MODULE_5__.CommandQuickPickItem)
      return;
    await this.updateCompareWith({
      ref: pick.ref,
      notation: void 0,
      type: this.comparisonType
    });
    this._children = void 0;
    this.view.triggerNodeChange(this);
  }
  async getAheadFilesQuery() {
    var _a, _b;
    let files = await _container__WEBPACK_IMPORTED_MODULE_3__.Container.git.getDiffStatus(this.repoPath, _git_git__WEBPACK_IMPORTED_MODULE_4__.GitRevision.createRange(((_a = this._compareWith) == null ? void 0 : _a.ref) || "HEAD", this.branch.ref || "HEAD", "..."));
    if (this.compareWithWorkingTree) {
      const workingFiles = await _container__WEBPACK_IMPORTED_MODULE_3__.Container.git.getDiffStatus(this.repoPath, "HEAD");
      if (workingFiles != null) {
        if (files != null) {
          for (const wf of workingFiles) {
            const index = files.findIndex((f) => f.fileName === wf.fileName);
            if (index !== -1) {
              files.splice(index, 1, wf);
            } else {
              files.push(wf);
            }
          }
        } else {
          files = workingFiles;
        }
      }
    }
    return {
      label: `${_system__WEBPACK_IMPORTED_MODULE_6__.Strings.pluralize("file", (_b = files == null ? void 0 : files.length) != null ? _b : 0, { zero: "No" })} changed`,
      files
    };
  }
  async getBehindFilesQuery() {
    var _a, _b;
    const files = await _container__WEBPACK_IMPORTED_MODULE_3__.Container.git.getDiffStatus(this.uri.repoPath, _git_git__WEBPACK_IMPORTED_MODULE_4__.GitRevision.createRange(this.branch.ref, ((_a = this._compareWith) == null ? void 0 : _a.ref) || "HEAD", "..."));
    return {
      label: `${_system__WEBPACK_IMPORTED_MODULE_6__.Strings.pluralize("file", (_b = files == null ? void 0 : files.length) != null ? _b : 0, { zero: "No" })} changed`,
      files
    };
  }
  getCommitsQuery(range) {
    const repoPath = this.uri.repoPath;
    return async (limit) => {
      var _a;
      const log2 = await _container__WEBPACK_IMPORTED_MODULE_3__.Container.git.getLog(repoPath, {
        limit,
        ref: range
      });
      const results = {
        log: log2,
        hasMore: (_a = log2 == null ? void 0 : log2.hasMore) != null ? _a : true
      };
      if (results.hasMore) {
        results.more = async (limit2) => {
          var _a2, _b, _c, _d, _e;
          results.log = (_c = await ((_b = (_a2 = results.log) == null ? void 0 : _a2.more) == null ? void 0 : _b.call(_a2, limit2))) != null ? _c : results.log;
          results.hasMore = (_e = (_d = results.log) == null ? void 0 : _d.hasMore) != null ? _e : true;
        };
      }
      return results;
    };
  }
  async getFilesQuery() {
    var _a;
    let comparison;
    if (this._compareWith.ref === "") {
      comparison = this.branch.ref;
    } else if (this.compareWithWorkingTree) {
      comparison = this._compareWith.ref;
    } else {
      comparison = `${this._compareWith.ref}..${this.branch.ref}`;
    }
    const files = await _container__WEBPACK_IMPORTED_MODULE_3__.Container.git.getDiffStatus(this.uri.repoPath, comparison);
    return {
      label: `${_system__WEBPACK_IMPORTED_MODULE_6__.Strings.pluralize("file", (_a = files == null ? void 0 : files.length) != null ? _a : 0, { zero: "No" })} changed`,
      files
    };
  }
  loadCompareWith() {
    const comparisons = _container__WEBPACK_IMPORTED_MODULE_3__.Container.context.workspaceState.get(_constants__WEBPACK_IMPORTED_MODULE_2__.WorkspaceState.BranchComparisons);
    const id = `${this.branch.id}${this.branch.current ? "+current" : ""}`;
    const compareWith = comparisons == null ? void 0 : comparisons[id];
    if (compareWith != null && typeof compareWith === "string") {
      this._compareWith = {
        ref: compareWith,
        notation: void 0,
        type: this.showComparison
      };
    } else {
      this._compareWith = compareWith;
    }
  }
  async updateCompareWith(compareWith) {
    this._compareWith = compareWith;
    let comparisons = _container__WEBPACK_IMPORTED_MODULE_3__.Container.context.workspaceState.get(_constants__WEBPACK_IMPORTED_MODULE_2__.WorkspaceState.BranchComparisons);
    if (comparisons == null) {
      comparisons = Object.create(null);
    }
    const id = `${this.branch.id}${this.branch.current ? "+current" : ""}`;
    if (compareWith != null) {
      comparisons[id] = { ...compareWith };
    } else {
      const { [id]: _, ...rest } = comparisons;
      comparisons = rest;
    }
    await _container__WEBPACK_IMPORTED_MODULE_3__.Container.context.workspaceState.update(_constants__WEBPACK_IMPORTED_MODULE_2__.WorkspaceState.BranchComparisons, comparisons);
  }
};
let CompareBranchNode = _CompareBranchNode;
__publicField(CompareBranchNode, "key", ":compare-branch");
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_6__.log)()
], CompareBranchNode.prototype, "clear", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_6__.log)()
], CompareBranchNode.prototype, "edit", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_6__.gate)(),
  (0,_system__WEBPACK_IMPORTED_MODULE_6__.debug)()
], CompareBranchNode.prototype, "refresh", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_6__.log)()
], CompareBranchNode.prototype, "setComparisonType", 1);


/***/ }),

/***/ "./src/views/nodes/comparePickerNode.ts":
/*!**********************************************!*\
  !*** ./src/views/nodes/comparePickerNode.ts ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ComparePickerNode": () => (/* binding */ ComparePickerNode)
/* harmony export */ });
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../constants */ "./src/constants.ts");
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../container */ "./src/container.ts");
/* harmony import */ var _viewNode__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./viewNode */ "./src/views/nodes/viewNode.ts");

var __defProp = Object.defineProperty;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};




class ComparePickerNode extends _viewNode__WEBPACK_IMPORTED_MODULE_3__.ViewNode {
  constructor(view, parent, selectedRef) {
    super(_viewNode__WEBPACK_IMPORTED_MODULE_3__.unknownGitUri, view, parent);
    this.selectedRef = selectedRef;
    __publicField(this, "order", Date.now());
    __publicField(this, "pinned", false);
  }
  get canDismiss() {
    return true;
  }
  getChildren() {
    return [];
  }
  async getTreeItem() {
    var _a;
    const selectedRef = this.selectedRef;
    const repoPath = selectedRef == null ? void 0 : selectedRef.repoPath;
    let description;
    if (repoPath !== void 0) {
      if (await _container__WEBPACK_IMPORTED_MODULE_2__.Container.git.getRepositoryCount() > 1) {
        const repo = await _container__WEBPACK_IMPORTED_MODULE_2__.Container.git.getRepository(repoPath);
        description = (_a = repo == null ? void 0 : repo.formattedName) != null ? _a : repoPath;
      }
    }
    let item;
    if (selectedRef == null) {
      item = new vscode__WEBPACK_IMPORTED_MODULE_0__.TreeItem("Compare <branch, tag, or ref> with <branch, tag, or ref>", vscode__WEBPACK_IMPORTED_MODULE_0__.TreeItemCollapsibleState.None);
      item.contextValue = _viewNode__WEBPACK_IMPORTED_MODULE_3__.ContextValues.ComparePicker;
      item.description = description;
      item.tooltip = `Click to select or enter a reference for compare${_constants__WEBPACK_IMPORTED_MODULE_1__.GlyphChars.Ellipsis}`;
      item.command = {
        title: `Compare${_constants__WEBPACK_IMPORTED_MODULE_1__.GlyphChars.Ellipsis}`,
        command: this.view.getQualifiedCommand("selectForCompare")
      };
    } else {
      item = new vscode__WEBPACK_IMPORTED_MODULE_0__.TreeItem(`Compare ${selectedRef.label} with <branch, tag, or ref>`, vscode__WEBPACK_IMPORTED_MODULE_0__.TreeItemCollapsibleState.None);
      item.contextValue = _viewNode__WEBPACK_IMPORTED_MODULE_3__.ContextValues.ComparePickerWithRef;
      item.description = description;
      item.tooltip = `Click to compare ${selectedRef.label} with${_constants__WEBPACK_IMPORTED_MODULE_1__.GlyphChars.Ellipsis}`;
      item.command = {
        title: `Compare ${selectedRef.label} with${_constants__WEBPACK_IMPORTED_MODULE_1__.GlyphChars.Ellipsis}`,
        command: this.view.getQualifiedCommand("compareWithSelected")
      };
    }
    return item;
  }
}


/***/ }),

/***/ "./src/views/nodes/compareResultsNode.ts":
/*!***********************************************!*\
  !*** ./src/views/nodes/compareResultsNode.ts ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CompareResultsNode": () => (/* binding */ CompareResultsNode)
/* harmony export */ });
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../container */ "./src/container.ts");
/* harmony import */ var _git_git__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../git/git */ "./src/git/git.ts");
/* harmony import */ var _git_gitUri__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../git/gitUri */ "./src/git/gitUri.ts");
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../system */ "./src/system.ts");
/* harmony import */ var _repositoryNode__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./repositoryNode */ "./src/views/nodes/repositoryNode.ts");
/* harmony import */ var _resultsCommitsNode__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./resultsCommitsNode */ "./src/views/nodes/resultsCommitsNode.ts");
/* harmony import */ var _resultsFilesNode__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./resultsFilesNode */ "./src/views/nodes/resultsFilesNode.ts");
/* harmony import */ var _viewNode__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./viewNode */ "./src/views/nodes/viewNode.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};









let instanceId = 0;
const _CompareResultsNode = class extends _viewNode__WEBPACK_IMPORTED_MODULE_8__.ViewNode {
  constructor(view, parent, repoPath, _ref, _compareWith, _pinned = 0) {
    super(_git_gitUri__WEBPACK_IMPORTED_MODULE_3__.GitUri.fromRepoPath(repoPath), view, parent);
    this.repoPath = repoPath;
    this._ref = _ref;
    this._compareWith = _compareWith;
    this._pinned = _pinned;
    __publicField(this, "_children");
    __publicField(this, "_instanceId");
    __publicField(this, "_order", Date.now());
    this._instanceId = instanceId++;
  }
  static getId(repoPath, ref1, ref2, instanceId2) {
    return `${_repositoryNode__WEBPACK_IMPORTED_MODULE_5__.RepositoryNode.getId(repoPath)}${this.key}(${ref1}|${ref2}):${instanceId2}`;
  }
  static getPinnableId(repoPath, ref1, ref2) {
    return _system__WEBPACK_IMPORTED_MODULE_4__.Strings.sha1(`${repoPath}|${ref1}|${ref2}`);
  }
  get ahead() {
    return {
      ref1: this._compareWith.ref || "HEAD",
      ref2: this._ref.ref
    };
  }
  get behind() {
    return {
      ref1: this._ref.ref,
      ref2: this._compareWith.ref || "HEAD"
    };
  }
  get id() {
    return _CompareResultsNode.getId(this.repoPath, this._ref.ref, this._compareWith.ref, this._instanceId);
  }
  get canDismiss() {
    return !this.pinned;
  }
  get order() {
    return this._pinned || this._order;
  }
  get pinned() {
    return this._pinned !== 0;
  }
  async getChildren() {
    var _a, _b, _c;
    if (this._children == null) {
      const ahead = this.ahead;
      const behind = this.behind;
      const aheadBehindCounts = await _container__WEBPACK_IMPORTED_MODULE_1__.Container.git.getAheadBehindCommitCount(this.repoPath, [
        _git_git__WEBPACK_IMPORTED_MODULE_2__.GitRevision.createRange(behind.ref1 || "HEAD", behind.ref2, "...")
      ]);
      const mergeBase = (_a = await _container__WEBPACK_IMPORTED_MODULE_1__.Container.git.getMergeBase(this.repoPath, behind.ref1, behind.ref2, { forkPoint: true })) != null ? _a : await _container__WEBPACK_IMPORTED_MODULE_1__.Container.git.getMergeBase(this.repoPath, behind.ref1, behind.ref2);
      this._children = [
        new _resultsCommitsNode__WEBPACK_IMPORTED_MODULE_6__.ResultsCommitsNode(this.view, this, this.uri.repoPath, "Behind", {
          query: this.getCommitsQuery(_git_git__WEBPACK_IMPORTED_MODULE_2__.GitRevision.createRange(behind.ref1, behind.ref2, "..")),
          comparison: behind,
          direction: "behind",
          files: {
            ref1: behind.ref1 === "" ? "" : mergeBase != null ? mergeBase : behind.ref1,
            ref2: behind.ref2,
            query: this.getBehindFilesQuery.bind(this)
          }
        }, {
          id: "behind",
          description: _system__WEBPACK_IMPORTED_MODULE_4__.Strings.pluralize("commit", (_b = aheadBehindCounts == null ? void 0 : aheadBehindCounts.behind) != null ? _b : 0),
          expand: false
        }),
        new _resultsCommitsNode__WEBPACK_IMPORTED_MODULE_6__.ResultsCommitsNode(this.view, this, this.uri.repoPath, "Ahead", {
          query: this.getCommitsQuery(_git_git__WEBPACK_IMPORTED_MODULE_2__.GitRevision.createRange(ahead.ref1, ahead.ref2, "..")),
          comparison: ahead,
          direction: "ahead",
          files: {
            ref1: mergeBase != null ? mergeBase : ahead.ref1,
            ref2: ahead.ref2,
            query: this.getAheadFilesQuery.bind(this)
          }
        }, {
          id: "ahead",
          description: _system__WEBPACK_IMPORTED_MODULE_4__.Strings.pluralize("commit", (_c = aheadBehindCounts == null ? void 0 : aheadBehindCounts.ahead) != null ? _c : 0),
          expand: false
        }),
        new _resultsFilesNode__WEBPACK_IMPORTED_MODULE_7__.ResultsFilesNode(this.view, this, this.uri.repoPath, this._compareWith.ref, this._ref.ref, this.getFilesQuery.bind(this), void 0, {
          expand: false
        })
      ];
    }
    return this._children;
  }
  async getTreeItem() {
    var _a, _b, _c;
    let description;
    if (await _container__WEBPACK_IMPORTED_MODULE_1__.Container.git.getRepositoryCount() > 1) {
      const repo = await _container__WEBPACK_IMPORTED_MODULE_1__.Container.git.getRepository(this.uri.repoPath);
      description = (_a = repo == null ? void 0 : repo.formattedName) != null ? _a : this.uri.repoPath;
    }
    const item = new vscode__WEBPACK_IMPORTED_MODULE_0__.TreeItem(`Comparing ${(_b = this._ref.label) != null ? _b : _git_git__WEBPACK_IMPORTED_MODULE_2__.GitRevision.shorten(this._ref.ref, { strings: { working: "Working Tree" } })} with ${(_c = this._compareWith.label) != null ? _c : _git_git__WEBPACK_IMPORTED_MODULE_2__.GitRevision.shorten(this._compareWith.ref, { strings: { working: "Working Tree" } })}`, vscode__WEBPACK_IMPORTED_MODULE_0__.TreeItemCollapsibleState.Collapsed);
    item.id = this.id;
    item.contextValue = `${_viewNode__WEBPACK_IMPORTED_MODULE_8__.ContextValues.CompareResults}${this._pinned ? "+pinned" : ""}`;
    item.description = description;
    if (this._pinned) {
      item.iconPath = new vscode__WEBPACK_IMPORTED_MODULE_0__.ThemeIcon("pinned");
    }
    return item;
  }
  async getDiffRefs() {
    return Promise.resolve([this._compareWith.ref, this._ref.ref]);
  }
  async pin() {
    if (this.pinned)
      return;
    this._pinned = Date.now();
    await this.updatePinned();
    setImmediate(() => this.view.reveal(this, { focus: true, select: true }));
  }
  refresh(reset = false) {
    if (!reset)
      return;
    this._children = void 0;
  }
  async swap() {
    const currentId = this.getPinnableId();
    const ref1 = this._ref;
    this._ref = this._compareWith;
    this._compareWith = ref1;
    if (this.pinned) {
      await this.view.updatePinned(currentId);
      await this.updatePinned();
    }
    this._children = void 0;
    this.view.triggerNodeChange(this.parent);
    setImmediate(() => this.view.reveal(this, { expand: true, focus: true, select: true }));
  }
  async unpin() {
    if (!this.pinned)
      return;
    this._pinned = 0;
    await this.view.updatePinned(this.getPinnableId());
    setImmediate(() => this.view.reveal(this, { focus: true, select: true }));
  }
  getPinnableId() {
    return _CompareResultsNode.getPinnableId(this.repoPath, this._ref.ref, this._compareWith.ref);
  }
  async getAheadFilesQuery() {
    var _a, _b;
    let files = await _container__WEBPACK_IMPORTED_MODULE_1__.Container.git.getDiffStatus(this.repoPath, _git_git__WEBPACK_IMPORTED_MODULE_2__.GitRevision.createRange(((_a = this._compareWith) == null ? void 0 : _a.ref) || "HEAD", this._ref.ref || "HEAD", "..."));
    if (this._ref.ref === "") {
      const workingFiles = await _container__WEBPACK_IMPORTED_MODULE_1__.Container.git.getDiffStatus(this.repoPath, "HEAD");
      if (workingFiles != null) {
        if (files != null) {
          for (const wf of workingFiles) {
            const index = files.findIndex((f) => f.fileName === wf.fileName);
            if (index !== -1) {
              files.splice(index, 1, wf);
            } else {
              files.push(wf);
            }
          }
        } else {
          files = workingFiles;
        }
      }
    }
    return {
      label: `${_system__WEBPACK_IMPORTED_MODULE_4__.Strings.pluralize("file", (_b = files == null ? void 0 : files.length) != null ? _b : 0, { zero: "No" })} changed`,
      files
    };
  }
  async getBehindFilesQuery() {
    var _a;
    let files = await _container__WEBPACK_IMPORTED_MODULE_1__.Container.git.getDiffStatus(this.repoPath, _git_git__WEBPACK_IMPORTED_MODULE_2__.GitRevision.createRange(this._ref.ref || "HEAD", this._compareWith.ref || "HEAD", "..."));
    if (this._compareWith.ref === "") {
      const workingFiles = await _container__WEBPACK_IMPORTED_MODULE_1__.Container.git.getDiffStatus(this.repoPath, "HEAD");
      if (workingFiles != null) {
        if (files != null) {
          for (const wf of workingFiles) {
            const index = files.findIndex((f) => f.fileName === wf.fileName);
            if (index !== -1) {
              files.splice(index, 1, wf);
            } else {
              files.push(wf);
            }
          }
        } else {
          files = workingFiles;
        }
      }
    }
    return {
      label: `${_system__WEBPACK_IMPORTED_MODULE_4__.Strings.pluralize("file", (_a = files == null ? void 0 : files.length) != null ? _a : 0, { zero: "No" })} changed`,
      files
    };
  }
  getCommitsQuery(range) {
    const repoPath = this.repoPath;
    return async (limit) => {
      var _a;
      const log2 = await _container__WEBPACK_IMPORTED_MODULE_1__.Container.git.getLog(repoPath, {
        limit,
        ref: range
      });
      const results = {
        log: log2,
        hasMore: (_a = log2 == null ? void 0 : log2.hasMore) != null ? _a : true
      };
      if (results.hasMore) {
        results.more = async (limit2) => {
          var _a2, _b, _c, _d, _e;
          results.log = (_c = await ((_b = (_a2 = results.log) == null ? void 0 : _a2.more) == null ? void 0 : _b.call(_a2, limit2))) != null ? _c : results.log;
          results.hasMore = (_e = (_d = results.log) == null ? void 0 : _d.hasMore) != null ? _e : true;
        };
      }
      return results;
    };
  }
  async getFilesQuery() {
    var _a;
    let comparison;
    if (this._compareWith.ref === "") {
      comparison = this._ref.ref;
    } else if (this._ref.ref === "") {
      comparison = this._compareWith.ref;
    } else {
      comparison = `${this._compareWith.ref}..${this._ref.ref}`;
    }
    const files = await _container__WEBPACK_IMPORTED_MODULE_1__.Container.git.getDiffStatus(this.uri.repoPath, comparison);
    return {
      label: `${_system__WEBPACK_IMPORTED_MODULE_4__.Strings.pluralize("file", (_a = files == null ? void 0 : files.length) != null ? _a : 0, { zero: "No" })} changed`,
      files
    };
  }
  updatePinned() {
    return this.view.updatePinned(this.getPinnableId(), {
      type: "comparison",
      timestamp: this._pinned,
      path: this.repoPath,
      ref1: { label: this._ref.label, ref: this._ref.ref },
      ref2: { label: this._compareWith.label, ref: this._compareWith.ref }
    });
  }
};
let CompareResultsNode = _CompareResultsNode;
__publicField(CompareResultsNode, "key", ":compare-results");
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_4__.gate)(),
  (0,_system__WEBPACK_IMPORTED_MODULE_4__.debug)()
], CompareResultsNode.prototype, "getDiffRefs", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_4__.log)()
], CompareResultsNode.prototype, "pin", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_4__.gate)(),
  (0,_system__WEBPACK_IMPORTED_MODULE_4__.debug)()
], CompareResultsNode.prototype, "refresh", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_4__.log)()
], CompareResultsNode.prototype, "swap", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_4__.log)()
], CompareResultsNode.prototype, "unpin", 1);


/***/ }),

/***/ "./src/views/nodes/contributorNode.ts":
/*!********************************************!*\
  !*** ./src/views/nodes/contributorNode.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ContributorNode": () => (/* binding */ ContributorNode)
/* harmony export */ });
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _avatars__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../avatars */ "./src/avatars.ts");
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../constants */ "./src/constants.ts");
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../container */ "./src/container.ts");
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../system */ "./src/system.ts");
/* harmony import */ var _commitNode__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./commitNode */ "./src/views/nodes/commitNode.ts");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./common */ "./src/views/nodes/common.ts");
/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./helpers */ "./src/views/nodes/helpers.ts");
/* harmony import */ var _repositoryNode__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./repositoryNode */ "./src/views/nodes/repositoryNode.ts");
/* harmony import */ var _viewNode__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./viewNode */ "./src/views/nodes/viewNode.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};










const _ContributorNode = class extends _viewNode__WEBPACK_IMPORTED_MODULE_9__.ViewNode {
  constructor(uri, view, parent, contributor, _options) {
    super(uri, view, parent);
    this.contributor = contributor;
    this._options = _options;
    __publicField(this, "_log");
    __publicField(this, "limit", this.view.getNodeLastKnownLimit(this));
  }
  static getId(repoPath, name, email) {
    return `${_repositoryNode__WEBPACK_IMPORTED_MODULE_8__.RepositoryNode.getId(repoPath)}${this.key}(${name}|${email})`;
  }
  toClipboard() {
    return `${this.contributor.name}${this.contributor.email ? ` <${this.contributor.email}>` : ""}`;
  }
  get id() {
    return _ContributorNode.getId(this.contributor.repoPath, this.contributor.name, this.contributor.email);
  }
  async getChildren() {
    const log = await this.getLog();
    if (log == null)
      return [new _common__WEBPACK_IMPORTED_MODULE_6__.MessageNode(this.view, this, "No commits could be found.")];
    const getBranchAndTagTips = await _container__WEBPACK_IMPORTED_MODULE_3__.Container.git.getBranchesAndTagsTipsFn(this.uri.repoPath);
    const children = [
      ...(0,_helpers__WEBPACK_IMPORTED_MODULE_7__.insertDateMarkers)(_system__WEBPACK_IMPORTED_MODULE_4__.Iterables.map(log.commits.values(), (c) => new _commitNode__WEBPACK_IMPORTED_MODULE_5__.CommitNode(this.view, this, c, void 0, void 0, getBranchAndTagTips)), this)
    ];
    if (log.hasMore) {
      children.push(new _common__WEBPACK_IMPORTED_MODULE_6__.LoadMoreNode(this.view, this, children[children.length - 1]));
    }
    return children;
  }
  async getTreeItem() {
    var _a, _b;
    const presence = (_b = (_a = this._options) == null ? void 0 : _a.presence) == null ? void 0 : _b.get(this.contributor.email);
    const item = new vscode__WEBPACK_IMPORTED_MODULE_0__.TreeItem(this.contributor.current ? `${this.contributor.name} (you)` : this.contributor.name, vscode__WEBPACK_IMPORTED_MODULE_0__.TreeItemCollapsibleState.Collapsed);
    item.id = this.id;
    item.contextValue = this.contributor.current ? `${_viewNode__WEBPACK_IMPORTED_MODULE_9__.ContextValues.Contributor}+current` : _viewNode__WEBPACK_IMPORTED_MODULE_9__.ContextValues.Contributor;
    item.description = `${presence != null && presence.status !== "offline" ? `${presence.statusText} ${_constants__WEBPACK_IMPORTED_MODULE_2__.GlyphChars.Space}${_constants__WEBPACK_IMPORTED_MODULE_2__.GlyphChars.Dot}${_constants__WEBPACK_IMPORTED_MODULE_2__.GlyphChars.Space} ` : ""}${this.contributor.email}`;
    let avatarUri;
    let avatarMarkdown;
    if (this.view.config.avatars) {
      const size = _container__WEBPACK_IMPORTED_MODULE_3__.Container.config.hovers.avatarSize;
      avatarUri = await this.contributor.getAvatarUri({
        defaultStyle: _container__WEBPACK_IMPORTED_MODULE_3__.Container.config.defaultGravatarsStyle,
        size
      });
      if (presence != null) {
        const title = `${this.contributor.count ? "You are" : `${this.contributor.name} is`} ${presence.status === "dnd" ? "in " : ""}${presence.statusText.toLocaleLowerCase()}`;
        avatarMarkdown = `![${title}](${avatarUri.toString(true)}|width=${size},height=${size} "${title}")![${title}](${(0,_avatars__WEBPACK_IMPORTED_MODULE_1__.getPresenceDataUri)(presence.status)} "${title}")`;
      } else {
        avatarMarkdown = `![${this.contributor.name}](${avatarUri.toString(true)}|width=${size},height=${size} "${this.contributor.name}")`;
      }
    }
    const numberFormatter = new Intl.NumberFormat();
    const stats = this.contributor.stats != null ? `\\
${_system__WEBPACK_IMPORTED_MODULE_4__.Strings.pluralize("file", this.contributor.stats.files, {
      number: numberFormatter.format(this.contributor.stats.files)
    })} changed, ${_system__WEBPACK_IMPORTED_MODULE_4__.Strings.pluralize("addition", this.contributor.stats.additions, {
      number: numberFormatter.format(this.contributor.stats.additions)
    })}, ${_system__WEBPACK_IMPORTED_MODULE_4__.Strings.pluralize("deletion", this.contributor.stats.deletions, {
      number: numberFormatter.format(this.contributor.stats.deletions)
    })}` : "";
    item.tooltip = new vscode__WEBPACK_IMPORTED_MODULE_0__.MarkdownString(`${avatarMarkdown != null ? avatarMarkdown : ""} &nbsp;__[${this.contributor.name}](mailto:${this.contributor.email} "Email ${this.contributor.name} (${this.contributor.email})")__ \\
Last commit ${this.contributor.formatDateFromNow()} (${this.contributor.formatDate()})

${_system__WEBPACK_IMPORTED_MODULE_4__.Strings.pluralize("commit", this.contributor.count, { number: numberFormatter.format(this.contributor.count) })}${stats}`);
    item.iconPath = avatarUri;
    return item;
  }
  refresh(reset) {
    if (reset) {
      this._log = void 0;
    }
  }
  async getLog() {
    var _a, _b, _c;
    if (this._log == null) {
      this._log = await _container__WEBPACK_IMPORTED_MODULE_3__.Container.git.getLog(this.uri.repoPath, {
        all: (_a = this._options) == null ? void 0 : _a.all,
        ref: (_b = this._options) == null ? void 0 : _b.ref,
        limit: (_c = this.limit) != null ? _c : this.view.config.defaultItemLimit,
        authors: [`^${this.contributor.name} <${this.contributor.email}>$`]
      });
    }
    return this._log;
  }
  get hasMore() {
    var _a, _b;
    return (_b = (_a = this._log) == null ? void 0 : _a.hasMore) != null ? _b : true;
  }
  async loadMore(limit) {
    var _a;
    let log = await vscode__WEBPACK_IMPORTED_MODULE_0__.window.withProgress({
      location: { viewId: this.view.id }
    }, () => this.getLog());
    if (log == null || !log.hasMore)
      return;
    log = await ((_a = log.more) == null ? void 0 : _a.call(log, limit != null ? limit : this.view.config.pageItemLimit));
    if (this._log === log)
      return;
    this._log = log;
    this.limit = log == null ? void 0 : log.count;
    void this.triggerChange(false);
  }
};
let ContributorNode = _ContributorNode;
__publicField(ContributorNode, "key", ":contributor");
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_4__.gate)(),
  (0,_system__WEBPACK_IMPORTED_MODULE_4__.debug)()
], ContributorNode.prototype, "refresh", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_4__.gate)()
], ContributorNode.prototype, "loadMore", 1);


/***/ }),

/***/ "./src/views/nodes/contributorsNode.ts":
/*!*********************************************!*\
  !*** ./src/views/nodes/contributorsNode.ts ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ContributorsNode": () => (/* binding */ ContributorsNode)
/* harmony export */ });
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../container */ "./src/container.ts");
/* harmony import */ var _git_git__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../git/git */ "./src/git/git.ts");
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../system */ "./src/system.ts");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./common */ "./src/views/nodes/common.ts");
/* harmony import */ var _contributorNode__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./contributorNode */ "./src/views/nodes/contributorNode.ts");
/* harmony import */ var _repositoryNode__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./repositoryNode */ "./src/views/nodes/repositoryNode.ts");
/* harmony import */ var _viewNode__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./viewNode */ "./src/views/nodes/viewNode.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};








const _ContributorsNode = class extends _viewNode__WEBPACK_IMPORTED_MODULE_7__.ViewNode {
  constructor(uri, view, parent, repo) {
    super(uri, view, parent);
    this.repo = repo;
    __publicField(this, "splatted", true);
    __publicField(this, "_children");
  }
  static getId(repoPath) {
    return `${_repositoryNode__WEBPACK_IMPORTED_MODULE_6__.RepositoryNode.getId(repoPath)}${this.key}`;
  }
  get id() {
    return _ContributorsNode.getId(this.repo.path);
  }
  async getChildren() {
    var _a;
    if (this._children == null) {
      const all = _container__WEBPACK_IMPORTED_MODULE_1__.Container.config.views.contributors.showAllBranches;
      let ref;
      if (!all) {
        try {
          const branch = await _container__WEBPACK_IMPORTED_MODULE_1__.Container.git.getBranch(this.uri.repoPath);
          if (((_a = branch == null ? void 0 : branch.upstream) == null ? void 0 : _a.name) != null && !branch.upstream.missing) {
            ref = "@{u}";
          }
        } catch {
        }
      }
      const stats = _container__WEBPACK_IMPORTED_MODULE_1__.Container.config.views.contributors.showStatistics;
      const contributors = await this.repo.getContributors({ all, ref, stats });
      if (contributors.length === 0)
        return [new _common__WEBPACK_IMPORTED_MODULE_4__.MessageNode(this.view, this, "No contributors could be found.")];
      _git_git__WEBPACK_IMPORTED_MODULE_2__.GitContributor.sort(contributors);
      const presenceMap = await this.maybeGetPresenceMap(contributors);
      this._children = contributors.map((c) => new _contributorNode__WEBPACK_IMPORTED_MODULE_5__.ContributorNode(this.uri, this.view, this, c, { all, ref, presence: presenceMap }));
    }
    return this._children;
  }
  getTreeItem() {
    this.splatted = false;
    const item = new vscode__WEBPACK_IMPORTED_MODULE_0__.TreeItem("Contributors", vscode__WEBPACK_IMPORTED_MODULE_0__.TreeItemCollapsibleState.Collapsed);
    item.id = this.id;
    item.contextValue = _viewNode__WEBPACK_IMPORTED_MODULE_7__.ContextValues.Contributors;
    item.iconPath = new vscode__WEBPACK_IMPORTED_MODULE_0__.ThemeIcon("organization");
    return item;
  }
  updateAvatar(email) {
    if (this._children == null)
      return;
    for (const child of this._children) {
      if (child.contributor.email === email) {
        void child.triggerChange();
      }
    }
  }
  refresh() {
    this._children = void 0;
  }
  async maybeGetPresenceMap(contributors) {
    var _a;
    const email = (_a = contributors.find((c) => c.current)) == null ? void 0 : _a.email;
    if (email == null)
      return void 0;
    return _container__WEBPACK_IMPORTED_MODULE_1__.Container.vsls.getContactsPresence([email]);
  }
};
let ContributorsNode = _ContributorsNode;
__publicField(ContributorsNode, "key", ":contributors");
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_3__.gate)(),
  (0,_system__WEBPACK_IMPORTED_MODULE_3__.debug)()
], ContributorsNode.prototype, "refresh", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_3__.debug)({ args: false }),
  (0,_system__WEBPACK_IMPORTED_MODULE_3__.timeout)(250)
], ContributorsNode.prototype, "maybeGetPresenceMap", 1);


/***/ }),

/***/ "./src/views/nodes/fileHistoryNode.ts":
/*!********************************************!*\
  !*** ./src/views/nodes/fileHistoryNode.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "FileHistoryNode": () => (/* binding */ FileHistoryNode)
/* harmony export */ });
/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! path */ "./node_modules/path-browserify/index.js");
/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _configuration__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../configuration */ "./src/configuration.ts");
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../container */ "./src/container.ts");
/* harmony import */ var _git_git__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../git/git */ "./src/git/git.ts");
/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../logger */ "./src/logger.ts");
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../system */ "./src/system.ts");
/* harmony import */ var _commitNode__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./commitNode */ "./src/views/nodes/commitNode.ts");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./common */ "./src/views/nodes/common.ts");
/* harmony import */ var _fileHistoryTrackerNode__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./fileHistoryTrackerNode */ "./src/views/nodes/fileHistoryTrackerNode.ts");
/* harmony import */ var _fileRevisionAsCommitNode__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./fileRevisionAsCommitNode */ "./src/views/nodes/fileRevisionAsCommitNode.ts");
/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./helpers */ "./src/views/nodes/helpers.ts");
/* harmony import */ var _repositoryNode__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./repositoryNode */ "./src/views/nodes/repositoryNode.ts");
/* harmony import */ var _viewNode__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./viewNode */ "./src/views/nodes/viewNode.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};














const _FileHistoryNode = class extends _viewNode__WEBPACK_IMPORTED_MODULE_13__.SubscribeableViewNode {
  constructor(uri, view, parent, folder, branch) {
    super(uri, view, parent);
    this.folder = folder;
    this.branch = branch;
    __publicField(this, "splatted", true);
    __publicField(this, "_log");
    __publicField(this, "limit", this.view.getNodeLastKnownLimit(this));
  }
  static getId(repoPath, uri) {
    return `${_repositoryNode__WEBPACK_IMPORTED_MODULE_12__.RepositoryNode.getId(repoPath)}${this.key}(${uri})`;
  }
  toClipboard() {
    return this.uri.fileName;
  }
  get id() {
    return _FileHistoryNode.getId(this.uri.repoPath, this.uri.toString(true));
  }
  async getChildren() {
    this.view.description = `${this.label}${this.parent instanceof _fileHistoryTrackerNode__WEBPACK_IMPORTED_MODULE_9__.FileHistoryTrackerNode && !this.parent.followingEditor ? " (pinned)" : ""}`;
    const children = [];
    const range = this.branch != null ? await _container__WEBPACK_IMPORTED_MODULE_3__.Container.git.getBranchAheadRange(this.branch) : void 0;
    const [log, fileStatuses, currentUser, getBranchAndTagTips, unpublishedCommits] = await Promise.all([
      this.getLog(),
      this.uri.sha == null ? _container__WEBPACK_IMPORTED_MODULE_3__.Container.git.getStatusForFiles(this.uri.repoPath, this.getPathOrGlob()) : void 0,
      this.uri.sha == null ? _container__WEBPACK_IMPORTED_MODULE_3__.Container.git.getCurrentUser(this.uri.repoPath) : void 0,
      this.branch != null ? _container__WEBPACK_IMPORTED_MODULE_3__.Container.git.getBranchesAndTagsTipsFn(this.uri.repoPath, this.branch.name) : void 0,
      range ? _container__WEBPACK_IMPORTED_MODULE_3__.Container.git.getLogRefsOnly(this.uri.repoPath, {
        limit: 0,
        ref: range
      }) : void 0
    ]);
    if (fileStatuses == null ? void 0 : fileStatuses.length) {
      if (this.folder) {
        const commits = _system__WEBPACK_IMPORTED_MODULE_6__.Arrays.uniqueBy([..._system__WEBPACK_IMPORTED_MODULE_6__.Iterables.flatMap(fileStatuses, (f) => f.toPsuedoCommits(currentUser))], (c) => c.sha, (original, c) => void original.files.push(...c.files));
        if (commits.length) {
          children.push(...commits.map((commit) => new _commitNode__WEBPACK_IMPORTED_MODULE_7__.CommitNode(this.view, this, commit)));
        }
      } else {
        const [file] = fileStatuses;
        const commits = file.toPsuedoCommits(currentUser);
        if (commits.length) {
          children.push(...commits.map((commit) => new _fileRevisionAsCommitNode__WEBPACK_IMPORTED_MODULE_10__.FileRevisionAsCommitNode(this.view, this, file, commit)));
        }
      }
    }
    if (log != null) {
      children.push(...(0,_helpers__WEBPACK_IMPORTED_MODULE_11__.insertDateMarkers)(_system__WEBPACK_IMPORTED_MODULE_6__.Iterables.map(log.commits.values(), (c) => this.folder ? new _commitNode__WEBPACK_IMPORTED_MODULE_7__.CommitNode(this.view, this, c, unpublishedCommits == null ? void 0 : unpublishedCommits.has(c.ref), this.branch, void 0, {
        expand: false
      }) : new _fileRevisionAsCommitNode__WEBPACK_IMPORTED_MODULE_10__.FileRevisionAsCommitNode(this.view, this, c.files[0], c, {
        branch: this.branch,
        getBranchAndTagTips,
        unpublished: unpublishedCommits == null ? void 0 : unpublishedCommits.has(c.ref)
      })), this));
      if (log.hasMore) {
        children.push(new _common__WEBPACK_IMPORTED_MODULE_8__.LoadMoreNode(this.view, this, children[children.length - 1]));
      }
    }
    if (children.length === 0)
      return [new _common__WEBPACK_IMPORTED_MODULE_8__.MessageNode(this.view, this, "No file history could be found.")];
    return children;
  }
  getTreeItem() {
    this.splatted = false;
    const label = this.label;
    const item = new vscode__WEBPACK_IMPORTED_MODULE_1__.TreeItem(label, vscode__WEBPACK_IMPORTED_MODULE_1__.TreeItemCollapsibleState.Expanded);
    item.contextValue = _viewNode__WEBPACK_IMPORTED_MODULE_13__.ContextValues.FileHistory;
    item.description = this.uri.directory;
    item.tooltip = `History of ${this.uri.fileName}
${this.uri.directory}/${this.uri.sha == null ? "" : `

${this.uri.sha}`}`;
    this.view.description = `${label}${this.parent instanceof _fileHistoryTrackerNode__WEBPACK_IMPORTED_MODULE_9__.FileHistoryTrackerNode && !this.parent.followingEditor ? " (pinned)" : ""}`;
    return item;
  }
  get label() {
    if (this.folder && this.uri.fileName === "") {
      return `${path__WEBPACK_IMPORTED_MODULE_0__.basename(this.uri.fsPath)}${this.uri.sha ? ` ${this.uri.sha === _git_git__WEBPACK_IMPORTED_MODULE_4__.GitRevision.deletedOrMissing ? this.uri.shortSha : `(${this.uri.shortSha})`}` : ""}`;
    }
    return `${this.uri.fileName}${this.uri.sha ? ` ${this.uri.sha === _git_git__WEBPACK_IMPORTED_MODULE_4__.GitRevision.deletedOrMissing ? this.uri.shortSha : `(${this.uri.shortSha})`}` : ""}`;
  }
  async subscribe() {
    const repo = await _container__WEBPACK_IMPORTED_MODULE_3__.Container.git.getRepository(this.uri);
    if (repo == null)
      return void 0;
    const subscription = vscode__WEBPACK_IMPORTED_MODULE_1__.Disposable.from(repo.onDidChange(this.onRepositoryChanged, this), repo.onDidChangeFileSystem(this.onFileSystemChanged, this), repo.startWatchingFileSystem(), _configuration__WEBPACK_IMPORTED_MODULE_2__.configuration.onDidChange((e) => {
      if (_configuration__WEBPACK_IMPORTED_MODULE_2__.configuration.changed(e, "advanced.fileHistoryFollowsRenames")) {
        this.view.resetNodeLastKnownLimit(this);
      }
    }));
    return subscription;
  }
  get requiresResetOnVisible() {
    return true;
  }
  onRepositoryChanged(e) {
    if (!e.changed(_git_git__WEBPACK_IMPORTED_MODULE_4__.RepositoryChange.Index, _git_git__WEBPACK_IMPORTED_MODULE_4__.RepositoryChange.Heads, _git_git__WEBPACK_IMPORTED_MODULE_4__.RepositoryChange.Remotes, _git_git__WEBPACK_IMPORTED_MODULE_4__.RepositoryChange.RemoteProviders, _git_git__WEBPACK_IMPORTED_MODULE_4__.RepositoryChange.Status, _git_git__WEBPACK_IMPORTED_MODULE_4__.RepositoryChange.Unknown, _git_git__WEBPACK_IMPORTED_MODULE_4__.RepositoryChangeComparisonMode.Any)) {
      return;
    }
    _logger__WEBPACK_IMPORTED_MODULE_5__.Logger.debug(`FileHistoryNode.onRepositoryChanged(${e.toString()}); triggering node refresh`);
    void this.triggerChange(true);
  }
  onFileSystemChanged(e) {
    if (this.folder) {
      if (!e.uris.some((uri) => uri.fsPath.startsWith(this.uri.fsPath)))
        return;
    } else if (!e.uris.some((uri) => uri.toString() === this.uri.toString())) {
      return;
    }
    _logger__WEBPACK_IMPORTED_MODULE_5__.Logger.debug(`FileHistoryNode.onFileSystemChanged(${this.uri.toString(true)}); triggering node refresh`);
    void this.triggerChange(true);
  }
  refresh(reset) {
    if (reset) {
      this._log = void 0;
    }
  }
  async getLog() {
    var _a;
    if (this._log == null) {
      this._log = await _container__WEBPACK_IMPORTED_MODULE_3__.Container.git.getLogForFile(this.uri.repoPath, this.getPathOrGlob(), {
        limit: (_a = this.limit) != null ? _a : this.view.config.pageItemLimit,
        ref: this.uri.sha
      });
    }
    return this._log;
  }
  getPathOrGlob() {
    return this.folder ? (0,_git_git__WEBPACK_IMPORTED_MODULE_4__.toFolderGlob)(this.uri.fsPath) : this.uri.fsPath;
  }
  get hasMore() {
    var _a, _b;
    return (_b = (_a = this._log) == null ? void 0 : _a.hasMore) != null ? _b : true;
  }
  async loadMore(limit) {
    var _a;
    let log = await vscode__WEBPACK_IMPORTED_MODULE_1__.window.withProgress({
      location: { viewId: this.view.id }
    }, () => this.getLog());
    if (log == null || !log.hasMore)
      return;
    log = await ((_a = log.more) == null ? void 0 : _a.call(log, limit != null ? limit : this.view.config.pageItemLimit));
    if (this._log === log)
      return;
    this._log = log;
    this.limit = log == null ? void 0 : log.count;
    void this.triggerChange(false, this.splatted);
  }
};
let FileHistoryNode = _FileHistoryNode;
__publicField(FileHistoryNode, "key", ":history:file");
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_6__.debug)()
], FileHistoryNode.prototype, "subscribe", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_6__.gate)(),
  (0,_system__WEBPACK_IMPORTED_MODULE_6__.debug)()
], FileHistoryNode.prototype, "refresh", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_6__.memoize)()
], FileHistoryNode.prototype, "getPathOrGlob", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_6__.gate)()
], FileHistoryNode.prototype, "loadMore", 1);


/***/ }),

/***/ "./src/views/nodes/fileHistoryTrackerNode.ts":
/*!***************************************************!*\
  !*** ./src/views/nodes/fileHistoryTrackerNode.ts ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "FileHistoryTrackerNode": () => (/* binding */ FileHistoryTrackerNode)
/* harmony export */ });
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _comparers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../comparers */ "./src/comparers.ts");
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../constants */ "./src/constants.ts");
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../container */ "./src/container.ts");
/* harmony import */ var _git_git__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../git/git */ "./src/git/git.ts");
/* harmony import */ var _git_gitUri__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../git/gitUri */ "./src/git/gitUri.ts");
/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../logger */ "./src/logger.ts");
/* harmony import */ var _quickpicks__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../quickpicks */ "./src/quickpicks.ts");
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../system */ "./src/system.ts");
/* harmony import */ var _fileHistoryNode__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./fileHistoryNode */ "./src/views/nodes/fileHistoryNode.ts");
/* harmony import */ var _viewNode__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./viewNode */ "./src/views/nodes/viewNode.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};











class FileHistoryTrackerNode extends _viewNode__WEBPACK_IMPORTED_MODULE_10__.SubscribeableViewNode {
  constructor(view) {
    super(_viewNode__WEBPACK_IMPORTED_MODULE_10__.unknownGitUri, view);
    __publicField(this, "_base");
    __publicField(this, "_child");
    __publicField(this, "splatted", true);
  }
  dispose() {
    super.dispose();
    this.resetChild();
  }
  resetChild() {
    if (this._child == null)
      return;
    this._child.dispose();
    this._child = void 0;
  }
  async getChildren() {
    var _a;
    if (this._child == null) {
      if (!this.hasUri) {
        this.view.description = void 0;
        this.view.message = "There are no editors open that can provide file history information.";
        return [];
      }
      this.view.message = void 0;
      const commitish = {
        ...this.uri,
        repoPath: this.uri.repoPath,
        sha: (_a = this._base) != null ? _a : this.uri.sha
      };
      const fileUri = new _git_gitUri__WEBPACK_IMPORTED_MODULE_5__.GitUri(this.uri, commitish);
      let folder = false;
      try {
        const stat = await vscode__WEBPACK_IMPORTED_MODULE_0__.workspace.fs.stat(this.uri);
        if (stat.type === vscode__WEBPACK_IMPORTED_MODULE_0__.FileType.Directory) {
          folder = true;
        }
      } catch {
      }
      this.view.title = folder ? "Folder History" : "File History";
      let branch;
      if (!commitish.sha || commitish.sha === "HEAD") {
        branch = await _container__WEBPACK_IMPORTED_MODULE_3__.Container.git.getBranch(this.uri.repoPath);
      } else if (!_git_git__WEBPACK_IMPORTED_MODULE_4__.GitRevision.isSha(commitish.sha)) {
        [branch] = await _container__WEBPACK_IMPORTED_MODULE_3__.Container.git.getBranches(this.uri.repoPath, {
          filter: (b) => b.name === commitish.sha
        });
      }
      this._child = new _fileHistoryNode__WEBPACK_IMPORTED_MODULE_9__.FileHistoryNode(fileUri, this.view, this, folder, branch);
    }
    return this._child.getChildren();
  }
  getTreeItem() {
    this.splatted = false;
    const item = new vscode__WEBPACK_IMPORTED_MODULE_0__.TreeItem("File History", vscode__WEBPACK_IMPORTED_MODULE_0__.TreeItemCollapsibleState.Expanded);
    item.contextValue = _viewNode__WEBPACK_IMPORTED_MODULE_10__.ContextValues.ActiveFileHistory;
    return item;
  }
  get followingEditor() {
    return this.canSubscribe;
  }
  get hasUri() {
    return this._uri != _viewNode__WEBPACK_IMPORTED_MODULE_10__.unknownGitUri;
  }
  async changeBase() {
    const pick = await _quickpicks__WEBPACK_IMPORTED_MODULE_7__.ReferencePicker.show(this.uri.repoPath, "Change File History Base", "Choose a reference to set as the new base", {
      allowEnteringRefs: true,
      picked: this._base,
      sort: { branches: { current: true }, tags: {} }
    });
    if (pick == null)
      return;
    if (_git_git__WEBPACK_IMPORTED_MODULE_4__.GitReference.isBranch(pick)) {
      const branch = await _container__WEBPACK_IMPORTED_MODULE_3__.Container.git.getBranch(this.uri.repoPath);
      this._base = (branch == null ? void 0 : branch.name) === pick.name ? void 0 : pick.ref;
    } else {
      this._base = pick.ref;
    }
    if (this._child == null)
      return;
    this.setUri();
    await this.triggerChange();
  }
  async refresh(reset = false) {
    const cc = _logger__WEBPACK_IMPORTED_MODULE_6__.Logger.getCorrelationContext();
    if (!this.canSubscribe)
      return false;
    if (reset) {
      this.setUri();
      this.resetChild();
    }
    const editor = vscode__WEBPACK_IMPORTED_MODULE_0__.window.activeTextEditor;
    if (editor == null || !_container__WEBPACK_IMPORTED_MODULE_3__.Container.git.isTrackable(editor.document.uri)) {
      if (!this.hasUri || _container__WEBPACK_IMPORTED_MODULE_3__.Container.git.isTrackable(this.uri) && vscode__WEBPACK_IMPORTED_MODULE_0__.window.visibleTextEditors.some((e) => {
        var _a;
        return ((_a = e.document) == null ? void 0 : _a.uri.path) === this.uri.path;
      })) {
        return true;
      }
      this.setUri();
      this.resetChild();
      if (cc != null) {
        cc.exitDetails = `, uri=${_logger__WEBPACK_IMPORTED_MODULE_6__.Logger.toLoggable(this._uri)}`;
      }
      return false;
    }
    if (editor.document.uri.path === this.uri.path) {
      if (cc != null) {
        cc.exitDetails = `, uri=${_logger__WEBPACK_IMPORTED_MODULE_6__.Logger.toLoggable(this._uri)}`;
      }
      return true;
    }
    let gitUri = await _git_gitUri__WEBPACK_IMPORTED_MODULE_5__.GitUri.fromUri(editor.document.uri);
    let uri;
    if (gitUri.sha != null) {
      const workingUri = await _container__WEBPACK_IMPORTED_MODULE_3__.Container.git.getWorkingUri(gitUri.repoPath, gitUri);
      if (workingUri != null) {
        uri = workingUri;
      }
    }
    if (this.hasUri && _comparers__WEBPACK_IMPORTED_MODULE_1__.UriComparer.equals(uri != null ? uri : gitUri, this.uri)) {
      return true;
    }
    if (uri != null) {
      gitUri = await _git_gitUri__WEBPACK_IMPORTED_MODULE_5__.GitUri.fromUri(uri);
    }
    this.setUri(gitUri);
    this.resetChild();
    if (cc != null) {
      cc.exitDetails = `, uri=${_logger__WEBPACK_IMPORTED_MODULE_6__.Logger.toLoggable(this._uri)}`;
    }
    return false;
  }
  setEditorFollowing(enabled) {
    if (enabled) {
      this.setUri();
    }
    this.canSubscribe = enabled;
    if (!enabled) {
      void this.triggerChange();
    }
  }
  async showHistoryForUri(uri) {
    this.setUri(uri);
    await this.triggerChange();
  }
  subscribe() {
    return vscode__WEBPACK_IMPORTED_MODULE_0__.Disposable.from(vscode__WEBPACK_IMPORTED_MODULE_0__.window.onDidChangeActiveTextEditor(_system__WEBPACK_IMPORTED_MODULE_8__.Functions.debounce(this.onActiveEditorChanged, 250), this));
  }
  onActiveEditorChanged(_editor) {
    void this.triggerChange();
  }
  setUri(uri) {
    this._uri = uri != null ? uri : _viewNode__WEBPACK_IMPORTED_MODULE_10__.unknownGitUri;
    void (0,_constants__WEBPACK_IMPORTED_MODULE_2__.setContext)(_constants__WEBPACK_IMPORTED_MODULE_2__.ContextKeys.ViewsFileHistoryCanPin, this.hasUri);
  }
}
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_8__.debug)()
], FileHistoryTrackerNode.prototype, "resetChild", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_8__.gate)(),
  (0,_system__WEBPACK_IMPORTED_MODULE_8__.log)()
], FileHistoryTrackerNode.prototype, "changeBase", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_8__.gate)(),
  (0,_system__WEBPACK_IMPORTED_MODULE_8__.debug)({
    exit: (r) => `returned ${r}`
  })
], FileHistoryTrackerNode.prototype, "refresh", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_8__.log)()
], FileHistoryTrackerNode.prototype, "setEditorFollowing", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_8__.log)()
], FileHistoryTrackerNode.prototype, "showHistoryForUri", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_8__.debug)()
], FileHistoryTrackerNode.prototype, "subscribe", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_8__.debug)({ args: false })
], FileHistoryTrackerNode.prototype, "onActiveEditorChanged", 1);


/***/ }),

/***/ "./src/views/nodes/fileRevisionAsCommitNode.ts":
/*!*****************************************************!*\
  !*** ./src/views/nodes/fileRevisionAsCommitNode.ts ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "FileRevisionAsCommitNode": () => (/* binding */ FileRevisionAsCommitNode)
/* harmony export */ });
/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! path */ "./node_modules/path-browserify/index.js");
/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _commands__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../commands */ "./src/commands.ts");
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../constants */ "./src/constants.ts");
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../container */ "./src/container.ts");
/* harmony import */ var _git_git__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../git/git */ "./src/git/git.ts");
/* harmony import */ var _git_gitUri__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../git/gitUri */ "./src/git/gitUri.ts");
/* harmony import */ var _mergeConflictCurrentChangesNode__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./mergeConflictCurrentChangesNode */ "./src/views/nodes/mergeConflictCurrentChangesNode.ts");
/* harmony import */ var _mergeConflictIncomingChangesNode__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./mergeConflictIncomingChangesNode */ "./src/views/nodes/mergeConflictIncomingChangesNode.ts");
/* harmony import */ var _viewNode__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./viewNode */ "./src/views/nodes/viewNode.ts");











class FileRevisionAsCommitNode extends _viewNode__WEBPACK_IMPORTED_MODULE_9__.ViewRefFileNode {
  constructor(view, parent, file, commit, _options = {}) {
    super(_git_gitUri__WEBPACK_IMPORTED_MODULE_6__.GitUri.fromFile(file, commit.repoPath, commit.sha), view, parent);
    this.file = file;
    this.commit = commit;
    this._options = _options;
  }
  toClipboard() {
    let message = this.commit.message;
    const index = message.indexOf("\n");
    if (index !== -1) {
      message = `${message.substring(0, index)}${_constants__WEBPACK_IMPORTED_MODULE_3__.GlyphChars.Space}${_constants__WEBPACK_IMPORTED_MODULE_3__.GlyphChars.Ellipsis}`;
    }
    return `${this.commit.shortSha}: ${message}`;
  }
  get fileName() {
    return this.file.fileName;
  }
  get isTip() {
    var _a, _b;
    return (_b = ((_a = this._options.branch) == null ? void 0 : _a.current) && this._options.branch.sha === this.commit.ref) != null ? _b : false;
  }
  get ref() {
    return this.commit;
  }
  async getChildren() {
    if (!this.commit.hasConflicts)
      return [];
    const [mergeStatus, rebaseStatus] = await Promise.all([
      _container__WEBPACK_IMPORTED_MODULE_4__.Container.git.getMergeStatus(this.commit.repoPath),
      _container__WEBPACK_IMPORTED_MODULE_4__.Container.git.getRebaseStatus(this.commit.repoPath)
    ]);
    if (mergeStatus == null && rebaseStatus == null)
      return [];
    return [
      new _mergeConflictCurrentChangesNode__WEBPACK_IMPORTED_MODULE_7__.MergeConflictCurrentChangesNode(this.view, this, mergeStatus != null ? mergeStatus : rebaseStatus, this.file),
      new _mergeConflictIncomingChangesNode__WEBPACK_IMPORTED_MODULE_8__.MergeConflictIncomingChangesNode(this.view, this, mergeStatus != null ? mergeStatus : rebaseStatus, this.file)
    ];
  }
  async getTreeItem() {
    var _a;
    if (!this.commit.isFile) {
      const commit = this.commit.toFileCommit(this.file);
      if (commit == null) {
        const log = await _container__WEBPACK_IMPORTED_MODULE_4__.Container.git.getLogForFile(this.repoPath, this.file.fileName, {
          limit: 2,
          ref: this.commit.sha
        });
        if (log != null) {
          this.commit = (_a = log.commits.get(this.commit.sha)) != null ? _a : this.commit;
        }
      } else {
        this.commit = commit;
      }
    }
    const item = new vscode__WEBPACK_IMPORTED_MODULE_1__.TreeItem(_git_git__WEBPACK_IMPORTED_MODULE_5__.CommitFormatter.fromTemplate(this.view.config.formats.commits.label, this.commit, {
      dateFormat: _container__WEBPACK_IMPORTED_MODULE_4__.Container.config.defaultDateFormat,
      getBranchAndTagTips: (sha) => {
        var _a2, _b;
        return (_b = (_a2 = this._options).getBranchAndTagTips) == null ? void 0 : _b.call(_a2, sha, { compact: true });
      },
      messageTruncateAtNewLine: true
    }), this.commit.hasConflicts ? vscode__WEBPACK_IMPORTED_MODULE_1__.TreeItemCollapsibleState.Expanded : vscode__WEBPACK_IMPORTED_MODULE_1__.TreeItemCollapsibleState.None);
    item.contextValue = this.contextValue;
    item.description = _git_git__WEBPACK_IMPORTED_MODULE_5__.CommitFormatter.fromTemplate(this.view.config.formats.commits.description, this.commit, {
      dateFormat: _container__WEBPACK_IMPORTED_MODULE_4__.Container.config.defaultDateFormat,
      getBranchAndTagTips: (sha) => {
        var _a2, _b;
        return (_b = (_a2 = this._options).getBranchAndTagTips) == null ? void 0 : _b.call(_a2, sha, { compact: true });
      },
      messageTruncateAtNewLine: true
    });
    item.resourceUri = vscode__WEBPACK_IMPORTED_MODULE_1__.Uri.parse(`gitlens-view://commit-file/status/${this.file.status}`);
    if (!this.commit.isUncommitted && this.view.config.avatars) {
      item.iconPath = this._options.unpublished ? new vscode__WEBPACK_IMPORTED_MODULE_1__.ThemeIcon("arrow-up", new vscode__WEBPACK_IMPORTED_MODULE_1__.ThemeColor(_constants__WEBPACK_IMPORTED_MODULE_3__.Colors.UnpublishedCommitIconColor)) : await this.commit.getAvatarUri({ defaultStyle: _container__WEBPACK_IMPORTED_MODULE_4__.Container.config.defaultGravatarsStyle });
    }
    if (item.iconPath == null) {
      const icon = _git_git__WEBPACK_IMPORTED_MODULE_5__.GitFile.getStatusIcon(this.file.status);
      item.iconPath = {
        dark: _container__WEBPACK_IMPORTED_MODULE_4__.Container.context.asAbsolutePath(path__WEBPACK_IMPORTED_MODULE_0__.join("images", "dark", icon)),
        light: _container__WEBPACK_IMPORTED_MODULE_4__.Container.context.asAbsolutePath(path__WEBPACK_IMPORTED_MODULE_0__.join("images", "light", icon))
      };
    }
    item.command = this.getCommand();
    return item;
  }
  get contextValue() {
    var _a;
    if (!this.commit.isUncommitted) {
      return `${_viewNode__WEBPACK_IMPORTED_MODULE_9__.ContextValues.File}+committed${((_a = this._options.branch) == null ? void 0 : _a.current) ? "+current" : ""}${this.isTip ? "+HEAD" : ""}${this._options.unpublished ? "+unpublished" : ""}`;
    }
    return this.commit.hasConflicts ? `${_viewNode__WEBPACK_IMPORTED_MODULE_9__.ContextValues.File}+conflicted` : this.commit.isUncommittedStaged ? `${_viewNode__WEBPACK_IMPORTED_MODULE_9__.ContextValues.File}+staged` : `${_viewNode__WEBPACK_IMPORTED_MODULE_9__.ContextValues.File}+unstaged`;
  }
  getCommand() {
    let line;
    if (this.commit.line !== void 0) {
      line = this.commit.line.to.line - 1;
    } else {
      line = this._options.selection !== void 0 ? this._options.selection.active.line : 0;
    }
    if (this.commit.hasConflicts) {
      return {
        title: "Open Changes",
        command: _commands__WEBPACK_IMPORTED_MODULE_2__.Commands.DiffWith,
        arguments: [
          {
            lhs: {
              sha: "MERGE_HEAD",
              uri: _git_gitUri__WEBPACK_IMPORTED_MODULE_6__.GitUri.fromFile(this.file, this.repoPath, void 0, true)
            },
            rhs: {
              sha: "HEAD",
              uri: _git_gitUri__WEBPACK_IMPORTED_MODULE_6__.GitUri.fromFile(this.file, this.repoPath)
            },
            repoPath: this.repoPath,
            line: 0,
            showOptions: {
              preserveFocus: false,
              preview: false
            }
          }
        ]
      };
    }
    const commandArgs = {
      commit: this.commit,
      uri: _git_gitUri__WEBPACK_IMPORTED_MODULE_6__.GitUri.fromFile(this.file, this.commit.repoPath),
      line,
      showOptions: {
        preserveFocus: true,
        preview: true
      }
    };
    return {
      title: "Open Changes with Previous Revision",
      command: _commands__WEBPACK_IMPORTED_MODULE_2__.Commands.DiffWithPrevious,
      arguments: [void 0, commandArgs]
    };
  }
  async resolveTreeItem(item) {
    if (item.tooltip == null) {
      item.tooltip = await this.getTooltip();
    }
    return item;
  }
  async getConflictBaseUri() {
    if (!this.commit.hasConflicts)
      return void 0;
    const mergeBase = await _container__WEBPACK_IMPORTED_MODULE_4__.Container.git.getMergeBase(this.repoPath, "MERGE_HEAD", "HEAD");
    return _git_gitUri__WEBPACK_IMPORTED_MODULE_6__.GitUri.fromFile(this.file, this.repoPath, mergeBase != null ? mergeBase : "HEAD");
  }
  async getTooltip() {
    const remotes = await _container__WEBPACK_IMPORTED_MODULE_4__.Container.git.getRemotes(this.commit.repoPath);
    const remote = await _container__WEBPACK_IMPORTED_MODULE_4__.Container.git.getRichRemoteProvider(remotes);
    let autolinkedIssuesOrPullRequests;
    let pr;
    if ((remote == null ? void 0 : remote.provider) != null) {
      [autolinkedIssuesOrPullRequests, pr] = await Promise.all([
        _container__WEBPACK_IMPORTED_MODULE_4__.Container.autolinks.getIssueOrPullRequestLinks(this.commit.message, remote),
        _container__WEBPACK_IMPORTED_MODULE_4__.Container.git.getPullRequestForCommit(this.commit.ref, remote.provider)
      ]);
    }
    const status = _git_git__WEBPACK_IMPORTED_MODULE_5__.StatusFileFormatter.fromTemplate(`\${status}\${ (originalPath)}`, this.file);
    const tooltip = await _git_git__WEBPACK_IMPORTED_MODULE_5__.CommitFormatter.fromTemplateAsync(`\${'$(git-commit) 'id}\${' via 'pullRequest} \u2022 ${status}\${ \u2022 changesDetail}\${'&nbsp;&nbsp;&nbsp;'tips}

\${avatar} &nbsp;__\${author}__, \${ago} &nbsp; _(\${date})_ 

\${message}\${

---

footnotes}`, this.commit, {
      autolinkedIssuesOrPullRequests,
      dateFormat: _container__WEBPACK_IMPORTED_MODULE_4__.Container.config.defaultDateFormat,
      getBranchAndTagTips: this._options.getBranchAndTagTips,
      markdown: true,
      messageAutolinks: true,
      messageIndent: 4,
      pullRequestOrRemote: pr,
      remotes,
      unpublished: this._options.unpublished
    });
    const markdown = new vscode__WEBPACK_IMPORTED_MODULE_1__.MarkdownString(tooltip, true);
    markdown.isTrusted = true;
    return markdown;
  }
}


/***/ }),

/***/ "./src/views/nodes/folderNode.ts":
/*!***************************************!*\
  !*** ./src/views/nodes/folderNode.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "FolderNode": () => (/* binding */ FolderNode)
/* harmony export */ });
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _configuration__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../configuration */ "./src/configuration.ts");
/* harmony import */ var _git_gitUri__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../git/gitUri */ "./src/git/gitUri.ts");
/* harmony import */ var _viewNode__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./viewNode */ "./src/views/nodes/viewNode.ts");

var __defProp = Object.defineProperty;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};




class FolderNode extends _viewNode__WEBPACK_IMPORTED_MODULE_3__.ViewNode {
  constructor(view, parent, repoPath, folderName, root, containsWorkingFiles, relativePath) {
    super(_git_gitUri__WEBPACK_IMPORTED_MODULE_2__.GitUri.fromRepoPath(repoPath), view, parent);
    this.repoPath = repoPath;
    this.folderName = folderName;
    this.root = root;
    this.containsWorkingFiles = containsWorkingFiles;
    this.relativePath = relativePath;
    __publicField(this, "priority", 1);
  }
  toClipboard() {
    return this.folderName;
  }
  getChildren() {
    if (this.root.descendants === void 0 || this.root.children === void 0)
      return [];
    let children;
    const nesting = FolderNode.getFileNesting(this.view.config.files, this.root.descendants, this.relativePath === void 0);
    if (nesting === _configuration__WEBPACK_IMPORTED_MODULE_1__.ViewFilesLayout.List) {
      this.root.descendants.forEach((n) => n.relativePath = this.root.relativePath);
      children = this.root.descendants;
    } else {
      children = [];
      for (const folder of this.root.children.values()) {
        if (folder.value === void 0) {
          children.push(new FolderNode(this.view, this.folderName ? this : this.parent, this.repoPath, folder.name, folder, this.containsWorkingFiles, folder.relativePath));
          continue;
        }
        folder.value.parent = this.folderName ? this : this.parent;
        folder.value.relativePath = this.root.relativePath;
        children.push(folder.value);
      }
    }
    children.sort((a, b) => {
      return (a instanceof FolderNode ? -1 : 1) - (b instanceof FolderNode ? -1 : 1) || a.priority - b.priority || a.label.localeCompare(b.label, void 0, { numeric: true, sensitivity: "base" });
    });
    return children;
  }
  getTreeItem() {
    const item = new vscode__WEBPACK_IMPORTED_MODULE_0__.TreeItem(this.label, vscode__WEBPACK_IMPORTED_MODULE_0__.TreeItemCollapsibleState.Expanded);
    item.contextValue = _viewNode__WEBPACK_IMPORTED_MODULE_3__.ContextValues.Folder;
    if (this.containsWorkingFiles) {
      item.contextValue += "+working";
    }
    item.iconPath = vscode__WEBPACK_IMPORTED_MODULE_0__.ThemeIcon.Folder;
    item.tooltip = this.label;
    return item;
  }
  get label() {
    return this.folderName;
  }
  static getFileNesting(config, children, isRoot) {
    const nesting = config.layout || _configuration__WEBPACK_IMPORTED_MODULE_1__.ViewFilesLayout.Auto;
    if (nesting === _configuration__WEBPACK_IMPORTED_MODULE_1__.ViewFilesLayout.Auto) {
      if (isRoot || config.compact) {
        const nestingThreshold = config.threshold || 5;
        if (children.length <= nestingThreshold)
          return _configuration__WEBPACK_IMPORTED_MODULE_1__.ViewFilesLayout.List;
      }
      return _configuration__WEBPACK_IMPORTED_MODULE_1__.ViewFilesLayout.Tree;
    }
    return nesting;
  }
}


/***/ }),

/***/ "./src/views/nodes/helpers.ts":
/*!************************************!*\
  !*** ./src/views/nodes/helpers.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "insertDateMarkers": () => (/* binding */ insertDateMarkers)
/* harmony export */ });
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common */ "./src/views/nodes/common.ts");
/* harmony import */ var _viewNode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./viewNode */ "./src/views/nodes/viewNode.ts");



const markers = [
  [0, "Less than a week ago"],
  [7, "Over a week ago"],
  [25, "Over a month ago"],
  [77, "Over 3 months ago"]
];
function* insertDateMarkers(iterable, parent, skip, { show } = { show: true }) {
  if (!parent.view.config.showRelativeDateMarkers || !show) {
    return yield* iterable;
  }
  let index = skip != null ? skip : 0;
  let time = void 0;
  const now = Date.now();
  let first = true;
  for (const node of iterable) {
    if (index < markers.length) {
      let [daysAgo, marker] = markers[index];
      if (time === void 0) {
        const date2 = new Date(now);
        time = date2.setDate(date2.getDate() - daysAgo);
      }
      const date = new Date(node.commit.committerDate).setUTCHours(0, 0, 0, 0);
      if (date <= time) {
        while (index < markers.length - 1) {
          [daysAgo] = markers[index + 1];
          const nextDate = new Date(now);
          const nextTime = nextDate.setDate(nextDate.getDate() - daysAgo);
          if (date > nextTime)
            break;
          index++;
          time = void 0;
          [, marker] = markers[index];
        }
        if (!first) {
          yield new _common__WEBPACK_IMPORTED_MODULE_0__.MessageNode(parent.view, parent, "", marker, void 0, void 0, _viewNode__WEBPACK_IMPORTED_MODULE_1__.ContextValues.DateMarker);
        }
        index++;
        time = void 0;
      }
    }
    first = false;
    yield node;
  }
  return void 0;
}


/***/ }),

/***/ "./src/views/nodes/lineHistoryNode.ts":
/*!********************************************!*\
  !*** ./src/views/nodes/lineHistoryNode.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "LineHistoryNode": () => (/* binding */ LineHistoryNode)
/* harmony export */ });
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../container */ "./src/container.ts");
/* harmony import */ var _git_git__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../git/git */ "./src/git/git.ts");
/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../logger */ "./src/logger.ts");
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../system */ "./src/system.ts");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./common */ "./src/views/nodes/common.ts");
/* harmony import */ var _fileRevisionAsCommitNode__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./fileRevisionAsCommitNode */ "./src/views/nodes/fileRevisionAsCommitNode.ts");
/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./helpers */ "./src/views/nodes/helpers.ts");
/* harmony import */ var _lineHistoryTrackerNode__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./lineHistoryTrackerNode */ "./src/views/nodes/lineHistoryTrackerNode.ts");
/* harmony import */ var _repositoryNode__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./repositoryNode */ "./src/views/nodes/repositoryNode.ts");
/* harmony import */ var _viewNode__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./viewNode */ "./src/views/nodes/viewNode.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};











const _LineHistoryNode = class extends _viewNode__WEBPACK_IMPORTED_MODULE_10__.SubscribeableViewNode {
  constructor(uri, view, parent, branch, selection, editorContents) {
    super(uri, view, parent);
    this.branch = branch;
    this.selection = selection;
    this.editorContents = editorContents;
    __publicField(this, "splatted", true);
    __publicField(this, "_log");
    __publicField(this, "limit", this.view.getNodeLastKnownLimit(this));
  }
  static getId(repoPath, uri, selection) {
    return `${_repositoryNode__WEBPACK_IMPORTED_MODULE_9__.RepositoryNode.getId(repoPath)}${this.key}(${uri}[${selection.start.line},${selection.start.character}-${selection.end.line},${selection.end.character}])`;
  }
  toClipboard() {
    return this.uri.fileName;
  }
  get id() {
    return _LineHistoryNode.getId(this.uri.repoPath, this.uri.toString(true), this.selection);
  }
  async getChildren() {
    var _a, _b, _c, _d;
    this.view.description = `${this.label}${this.parent instanceof _lineHistoryTrackerNode__WEBPACK_IMPORTED_MODULE_8__.LineHistoryTrackerNode && !this.parent.followingEditor ? " (pinned)" : ""}`;
    const children = [];
    let selection = this.selection;
    const range = this.branch != null ? await _container__WEBPACK_IMPORTED_MODULE_1__.Container.git.getBranchAheadRange(this.branch) : void 0;
    const [log, blame, getBranchAndTagTips, unpublishedCommits] = await Promise.all([
      this.getLog(selection),
      this.uri.sha == null ? this.editorContents ? await _container__WEBPACK_IMPORTED_MODULE_1__.Container.git.getBlameForRangeContents(this.uri, selection, this.editorContents) : await _container__WEBPACK_IMPORTED_MODULE_1__.Container.git.getBlameForRange(this.uri, selection) : void 0,
      this.branch != null ? _container__WEBPACK_IMPORTED_MODULE_1__.Container.git.getBranchesAndTagsTipsFn(this.uri.repoPath, this.branch.name) : void 0,
      range ? _container__WEBPACK_IMPORTED_MODULE_1__.Container.git.getLogRefsOnly(this.uri.repoPath, {
        limit: 0,
        ref: range
      }) : void 0
    ]);
    if (this.uri.sha == null) {
      if (blame != null) {
        for (const commit of blame.commits.values()) {
          if (!commit.isUncommitted)
            continue;
          const firstLine = blame.lines[0];
          const lastLine = blame.lines[blame.lines.length - 1];
          const firstActive = selection.active.line === firstLine.line - 1;
          selection = new vscode__WEBPACK_IMPORTED_MODULE_0__.Selection((firstActive ? lastLine : firstLine).originalLine - 1, selection.anchor.character, (firstActive ? firstLine : lastLine).originalLine - 1, selection.active.character);
          const status = await _container__WEBPACK_IMPORTED_MODULE_1__.Container.git.getStatusForFile(this.uri.repoPath, this.uri.fsPath);
          const file = {
            conflictStatus: status == null ? void 0 : status.conflictStatus,
            fileName: commit.fileName,
            indexStatus: status == null ? void 0 : status.indexStatus,
            originalFileName: commit.originalFileName,
            repoPath: this.uri.repoPath,
            status: (_a = status == null ? void 0 : status.status) != null ? _a : _git_git__WEBPACK_IMPORTED_MODULE_2__.GitFileIndexStatus.Modified,
            workingTreeStatus: status == null ? void 0 : status.workingTreeStatus
          };
          if ((status == null ? void 0 : status.workingTreeStatus) != null && (status == null ? void 0 : status.indexStatus) != null) {
            let uncommitted = new _git_git__WEBPACK_IMPORTED_MODULE_2__.GitLogCommit(_git_git__WEBPACK_IMPORTED_MODULE_2__.GitCommitType.LogFile, this.uri.repoPath, _git_git__WEBPACK_IMPORTED_MODULE_2__.GitRevision.uncommittedStaged, "You", commit.email, commit.authorDate, commit.committerDate, commit.message, commit.fileName, [file], _git_git__WEBPACK_IMPORTED_MODULE_2__.GitFileIndexStatus.Modified, commit.originalFileName, commit.previousSha, (_b = commit.originalFileName) != null ? _b : commit.fileName);
            children.splice(0, 0, new _fileRevisionAsCommitNode__WEBPACK_IMPORTED_MODULE_6__.FileRevisionAsCommitNode(this.view, this, file, uncommitted, {
              selection
            }));
            uncommitted = new _git_git__WEBPACK_IMPORTED_MODULE_2__.GitLogCommit(_git_git__WEBPACK_IMPORTED_MODULE_2__.GitCommitType.LogFile, this.uri.repoPath, _git_git__WEBPACK_IMPORTED_MODULE_2__.GitRevision.uncommitted, "You", commit.email, commit.authorDate, commit.committerDate, commit.message, commit.fileName, [file], _git_git__WEBPACK_IMPORTED_MODULE_2__.GitFileIndexStatus.Modified, commit.originalFileName, _git_git__WEBPACK_IMPORTED_MODULE_2__.GitRevision.uncommittedStaged, (_c = commit.originalFileName) != null ? _c : commit.fileName);
            children.splice(0, 0, new _fileRevisionAsCommitNode__WEBPACK_IMPORTED_MODULE_6__.FileRevisionAsCommitNode(this.view, this, file, uncommitted, {
              selection
            }));
          } else {
            const uncommitted = new _git_git__WEBPACK_IMPORTED_MODULE_2__.GitLogCommit(_git_git__WEBPACK_IMPORTED_MODULE_2__.GitCommitType.LogFile, this.uri.repoPath, (status == null ? void 0 : status.workingTreeStatus) != null ? _git_git__WEBPACK_IMPORTED_MODULE_2__.GitRevision.uncommitted : (status == null ? void 0 : status.indexStatus) != null ? _git_git__WEBPACK_IMPORTED_MODULE_2__.GitRevision.uncommittedStaged : commit.sha, "You", commit.email, commit.authorDate, commit.committerDate, commit.message, commit.fileName, [file], _git_git__WEBPACK_IMPORTED_MODULE_2__.GitFileIndexStatus.Modified, commit.originalFileName, commit.previousSha, (_d = commit.originalFileName) != null ? _d : commit.fileName);
            children.splice(0, 0, new _fileRevisionAsCommitNode__WEBPACK_IMPORTED_MODULE_6__.FileRevisionAsCommitNode(this.view, this, file, uncommitted, {
              selection
            }));
          }
          break;
        }
      }
    }
    if (log != null) {
      children.push(...(0,_helpers__WEBPACK_IMPORTED_MODULE_7__.insertDateMarkers)(_system__WEBPACK_IMPORTED_MODULE_4__.Iterables.filterMap(log.commits.values(), (c) => new _fileRevisionAsCommitNode__WEBPACK_IMPORTED_MODULE_6__.FileRevisionAsCommitNode(this.view, this, c.files[0], c, {
        branch: this.branch,
        getBranchAndTagTips,
        selection,
        unpublished: unpublishedCommits == null ? void 0 : unpublishedCommits.has(c.ref)
      })), this));
      if (log.hasMore) {
        children.push(new _common__WEBPACK_IMPORTED_MODULE_5__.LoadMoreNode(this.view, this, children[children.length - 1]));
      }
    }
    if (children.length === 0)
      return [new _common__WEBPACK_IMPORTED_MODULE_5__.MessageNode(this.view, this, "No line history could be found.")];
    return children;
  }
  getTreeItem() {
    this.splatted = false;
    const label = this.label;
    const item = new vscode__WEBPACK_IMPORTED_MODULE_0__.TreeItem(label, vscode__WEBPACK_IMPORTED_MODULE_0__.TreeItemCollapsibleState.Expanded);
    item.contextValue = _viewNode__WEBPACK_IMPORTED_MODULE_10__.ContextValues.LineHistory;
    item.description = this.uri.directory;
    item.tooltip = `History of ${this.uri.fileName}${this.lines}
${this.uri.directory}/${this.uri.sha == null ? "" : `

${this.uri.sha}`}`;
    this.view.description = `${label}${this.parent instanceof _lineHistoryTrackerNode__WEBPACK_IMPORTED_MODULE_8__.LineHistoryTrackerNode && !this.parent.followingEditor ? " (pinned)" : ""}`;
    return item;
  }
  get label() {
    return `${this.uri.fileName}${this.lines}${this.uri.sha ? ` ${this.uri.sha === _git_git__WEBPACK_IMPORTED_MODULE_2__.GitRevision.deletedOrMissing ? this.uri.shortSha : `(${this.uri.shortSha})`}` : ""}`;
  }
  get lines() {
    return this.selection.isSingleLine ? `:${this.selection.start.line + 1}` : `:${this.selection.start.line + 1}-${this.selection.end.line + 1}`;
  }
  async subscribe() {
    const repo = await _container__WEBPACK_IMPORTED_MODULE_1__.Container.git.getRepository(this.uri);
    if (repo == null)
      return void 0;
    const subscription = vscode__WEBPACK_IMPORTED_MODULE_0__.Disposable.from(repo.onDidChange(this.onRepositoryChanged, this), repo.onDidChangeFileSystem(this.onFileSystemChanged, this), repo.startWatchingFileSystem());
    return subscription;
  }
  get requiresResetOnVisible() {
    return true;
  }
  onRepositoryChanged(e) {
    if (!e.changed(_git_git__WEBPACK_IMPORTED_MODULE_2__.RepositoryChange.Index, _git_git__WEBPACK_IMPORTED_MODULE_2__.RepositoryChange.Heads, _git_git__WEBPACK_IMPORTED_MODULE_2__.RepositoryChange.Remotes, _git_git__WEBPACK_IMPORTED_MODULE_2__.RepositoryChange.RemoteProviders, _git_git__WEBPACK_IMPORTED_MODULE_2__.RepositoryChange.Status, _git_git__WEBPACK_IMPORTED_MODULE_2__.RepositoryChange.Unknown, _git_git__WEBPACK_IMPORTED_MODULE_2__.RepositoryChangeComparisonMode.Any)) {
      return;
    }
    _logger__WEBPACK_IMPORTED_MODULE_3__.Logger.debug(`LineHistoryNode.onRepositoryChanged(${e.toString()}); triggering node refresh`);
    void this.triggerChange(true);
  }
  onFileSystemChanged(e) {
    if (!e.uris.some((uri) => uri.toString() === this.uri.toString()))
      return;
    _logger__WEBPACK_IMPORTED_MODULE_3__.Logger.debug(`LineHistoryNode.onFileSystemChanged(${this.uri.toString(true)}); triggering node refresh`);
    void this.triggerChange(true);
  }
  refresh(reset) {
    if (reset) {
      this._log = void 0;
    }
  }
  async getLog(selection) {
    var _a;
    if (this._log == null) {
      this._log = await _container__WEBPACK_IMPORTED_MODULE_1__.Container.git.getLogForFile(this.uri.repoPath, this.uri.fsPath, {
        all: false,
        limit: (_a = this.limit) != null ? _a : this.view.config.pageItemLimit,
        range: selection != null ? selection : this.selection,
        ref: this.uri.sha,
        renames: false
      });
    }
    return this._log;
  }
  get hasMore() {
    var _a, _b;
    return (_b = (_a = this._log) == null ? void 0 : _a.hasMore) != null ? _b : true;
  }
  async loadMore(limit) {
    var _a;
    let log = await vscode__WEBPACK_IMPORTED_MODULE_0__.window.withProgress({
      location: { viewId: this.view.id }
    }, () => this.getLog());
    if (log == null || !log.hasMore)
      return;
    log = await ((_a = log.more) == null ? void 0 : _a.call(log, limit != null ? limit : this.view.config.pageItemLimit));
    if (this._log === log)
      return;
    this._log = log;
    this.limit = log == null ? void 0 : log.count;
    void this.triggerChange(false, this.splatted);
  }
};
let LineHistoryNode = _LineHistoryNode;
__publicField(LineHistoryNode, "key", ":history:line");
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_4__.memoize)()
], LineHistoryNode.prototype, "lines", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_4__.debug)()
], LineHistoryNode.prototype, "subscribe", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_4__.gate)(),
  (0,_system__WEBPACK_IMPORTED_MODULE_4__.debug)()
], LineHistoryNode.prototype, "refresh", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_4__.gate)()
], LineHistoryNode.prototype, "loadMore", 1);


/***/ }),

/***/ "./src/views/nodes/lineHistoryTrackerNode.ts":
/*!***************************************************!*\
  !*** ./src/views/nodes/lineHistoryTrackerNode.ts ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "LineHistoryTrackerNode": () => (/* binding */ LineHistoryTrackerNode)
/* harmony export */ });
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _comparers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../comparers */ "./src/comparers.ts");
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../constants */ "./src/constants.ts");
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../container */ "./src/container.ts");
/* harmony import */ var _git_git__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../git/git */ "./src/git/git.ts");
/* harmony import */ var _git_gitUri__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../git/gitUri */ "./src/git/gitUri.ts");
/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../logger */ "./src/logger.ts");
/* harmony import */ var _quickpicks__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../quickpicks */ "./src/quickpicks.ts");
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../system */ "./src/system.ts");
/* harmony import */ var _lineHistoryNode__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./lineHistoryNode */ "./src/views/nodes/lineHistoryNode.ts");
/* harmony import */ var _viewNode__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./viewNode */ "./src/views/nodes/viewNode.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};











class LineHistoryTrackerNode extends _viewNode__WEBPACK_IMPORTED_MODULE_10__.SubscribeableViewNode {
  constructor(view) {
    super(_viewNode__WEBPACK_IMPORTED_MODULE_10__.unknownGitUri, view);
    __publicField(this, "_base");
    __publicField(this, "_child");
    __publicField(this, "_editorContents");
    __publicField(this, "_selection");
    __publicField(this, "splatted", true);
  }
  dispose() {
    super.dispose();
    this.resetChild();
  }
  resetChild() {
    if (this._child == null)
      return;
    this._child.dispose();
    this._child = void 0;
  }
  async getChildren() {
    var _a;
    if (this._child == null) {
      if (!this.hasUri) {
        this.view.description = void 0;
        this.view.message = "There are no editors open that can provide line history information.";
        return [];
      }
      if (this._selection == null) {
        this.view.description = void 0;
        this.view.message = "There was no selection provided for line history.";
        this.view.description = `${this.uri.fileName}${this.uri.sha ? ` ${this.uri.sha === _git_git__WEBPACK_IMPORTED_MODULE_4__.GitRevision.deletedOrMissing ? this.uri.shortSha : `(${this.uri.shortSha})`}` : ""}${!this.followingEditor ? " (pinned)" : ""}`;
        return [];
      }
      this.view.message = void 0;
      const commitish = {
        ...this.uri,
        repoPath: this.uri.repoPath,
        sha: (_a = this.uri.sha) != null ? _a : this._base
      };
      const fileUri = new _git_gitUri__WEBPACK_IMPORTED_MODULE_5__.GitUri(this.uri, commitish);
      let branch;
      if (!commitish.sha || commitish.sha === "HEAD") {
        branch = await _container__WEBPACK_IMPORTED_MODULE_3__.Container.git.getBranch(this.uri.repoPath);
      } else if (!_git_git__WEBPACK_IMPORTED_MODULE_4__.GitRevision.isSha(commitish.sha)) {
        [branch] = await _container__WEBPACK_IMPORTED_MODULE_3__.Container.git.getBranches(this.uri.repoPath, {
          filter: (b) => b.name === commitish.sha
        });
      }
      this._child = new _lineHistoryNode__WEBPACK_IMPORTED_MODULE_9__.LineHistoryNode(fileUri, this.view, this, branch, this._selection, this._editorContents);
    }
    return this._child.getChildren();
  }
  getTreeItem() {
    this.splatted = false;
    const item = new vscode__WEBPACK_IMPORTED_MODULE_0__.TreeItem("Line History", vscode__WEBPACK_IMPORTED_MODULE_0__.TreeItemCollapsibleState.Expanded);
    item.contextValue = _viewNode__WEBPACK_IMPORTED_MODULE_10__.ContextValues.ActiveLineHistory;
    void this.ensureSubscription();
    return item;
  }
  get followingEditor() {
    return this.canSubscribe;
  }
  get hasUri() {
    return this._uri != _viewNode__WEBPACK_IMPORTED_MODULE_10__.unknownGitUri;
  }
  async changeBase() {
    const pick = await _quickpicks__WEBPACK_IMPORTED_MODULE_7__.ReferencePicker.show(this.uri.repoPath, "Change Line History Base", "Choose a reference to set as the new base", {
      allowEnteringRefs: true,
      picked: this._base,
      sort: { branches: { current: true }, tags: {} }
    });
    if (pick == null)
      return;
    if (_git_git__WEBPACK_IMPORTED_MODULE_4__.GitReference.isBranch(pick)) {
      const branch = await _container__WEBPACK_IMPORTED_MODULE_3__.Container.git.getBranch(this.uri.repoPath);
      this._base = (branch == null ? void 0 : branch.name) === pick.name ? void 0 : pick.ref;
    } else {
      this._base = pick.ref;
    }
    if (this._child == null)
      return;
    this.setUri();
    await this.triggerChange();
  }
  async refresh(reset = false) {
    const cc = _logger__WEBPACK_IMPORTED_MODULE_6__.Logger.getCorrelationContext();
    if (!this.canSubscribe)
      return false;
    if (reset) {
      this.setUri();
      this._editorContents = void 0;
      this._selection = void 0;
      this.resetChild();
    }
    const editor = vscode__WEBPACK_IMPORTED_MODULE_0__.window.activeTextEditor;
    if (editor == null || !_container__WEBPACK_IMPORTED_MODULE_3__.Container.git.isTrackable(editor.document.uri)) {
      if (!this.hasUri || _container__WEBPACK_IMPORTED_MODULE_3__.Container.git.isTrackable(this.uri) && vscode__WEBPACK_IMPORTED_MODULE_0__.window.visibleTextEditors.some((e) => {
        var _a;
        return ((_a = e.document) == null ? void 0 : _a.uri.path) === this.uri.path;
      })) {
        return true;
      }
      this.setUri();
      this._editorContents = void 0;
      this._selection = void 0;
      this.resetChild();
      if (cc != null) {
        cc.exitDetails = `, uri=${_logger__WEBPACK_IMPORTED_MODULE_6__.Logger.toLoggable(this._uri)}`;
      }
      return false;
    }
    if (editor.document.uri.path === this.uri.path && this._selection != null && editor.selection.isEqual(this._selection)) {
      if (cc != null) {
        cc.exitDetails = `, uri=${_logger__WEBPACK_IMPORTED_MODULE_6__.Logger.toLoggable(this._uri)}`;
      }
      return true;
    }
    const gitUri = await _git_gitUri__WEBPACK_IMPORTED_MODULE_5__.GitUri.fromUri(editor.document.uri);
    if (this.hasUri && _comparers__WEBPACK_IMPORTED_MODULE_1__.UriComparer.equals(gitUri, this.uri) && this._selection != null && editor.selection.isEqual(this._selection)) {
      return true;
    }
    this.setUri(gitUri);
    this._editorContents = editor.document.isDirty ? editor.document.getText() : void 0;
    this._selection = editor.selection;
    this.resetChild();
    if (cc != null) {
      cc.exitDetails = `, uri=${_logger__WEBPACK_IMPORTED_MODULE_6__.Logger.toLoggable(this._uri)}`;
    }
    return false;
  }
  setEditorFollowing(enabled) {
    this.canSubscribe = enabled;
  }
  subscribe() {
    if (_container__WEBPACK_IMPORTED_MODULE_3__.Container.lineTracker.isSubscribed(this))
      return void 0;
    const onActiveLinesChanged = _system__WEBPACK_IMPORTED_MODULE_8__.Functions.debounce(this.onActiveLinesChanged.bind(this), 250);
    return _container__WEBPACK_IMPORTED_MODULE_3__.Container.lineTracker.start(this, _container__WEBPACK_IMPORTED_MODULE_3__.Container.lineTracker.onDidChangeActiveLines((e) => {
      if (e.pending)
        return;
      onActiveLinesChanged(e);
    }));
  }
  onActiveLinesChanged(_e) {
    void this.triggerChange();
  }
  setUri(uri) {
    this._uri = uri != null ? uri : _viewNode__WEBPACK_IMPORTED_MODULE_10__.unknownGitUri;
    void (0,_constants__WEBPACK_IMPORTED_MODULE_2__.setContext)(_constants__WEBPACK_IMPORTED_MODULE_2__.ContextKeys.ViewsFileHistoryCanPin, this.hasUri);
  }
}
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_8__.debug)()
], LineHistoryTrackerNode.prototype, "resetChild", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_8__.gate)(),
  (0,_system__WEBPACK_IMPORTED_MODULE_8__.log)()
], LineHistoryTrackerNode.prototype, "changeBase", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_8__.gate)(),
  (0,_system__WEBPACK_IMPORTED_MODULE_8__.debug)({
    exit: (r) => `returned ${r}`
  })
], LineHistoryTrackerNode.prototype, "refresh", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_8__.log)()
], LineHistoryTrackerNode.prototype, "setEditorFollowing", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_8__.debug)()
], LineHistoryTrackerNode.prototype, "subscribe", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_8__.debug)({
    args: {
      0: (e) => {
        var _a, _b;
        return `editor=${(_a = e.editor) == null ? void 0 : _a.document.uri.toString(true)}, selections=${(_b = e.selections) == null ? void 0 : _b.map((s) => `[${s.anchor}-${s.active}]`).join(",")}, pending=${Boolean(e.pending)}, reason=${e.reason}`;
      }
    }
  })
], LineHistoryTrackerNode.prototype, "onActiveLinesChanged", 1);


/***/ }),

/***/ "./src/views/nodes/mergeConflictCurrentChangesNode.ts":
/*!************************************************************!*\
  !*** ./src/views/nodes/mergeConflictCurrentChangesNode.ts ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "MergeConflictCurrentChangesNode": () => (/* binding */ MergeConflictCurrentChangesNode)
/* harmony export */ });
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _commands__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../commands */ "./src/commands.ts");
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../constants */ "./src/constants.ts");
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../container */ "./src/container.ts");
/* harmony import */ var _git_git__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../git/git */ "./src/git/git.ts");
/* harmony import */ var _git_gitUri__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../git/gitUri */ "./src/git/gitUri.ts");
/* harmony import */ var _viewNode__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./viewNode */ "./src/views/nodes/viewNode.ts");








class MergeConflictCurrentChangesNode extends _viewNode__WEBPACK_IMPORTED_MODULE_6__.ViewNode {
  constructor(view, parent, status, file) {
    super(_git_gitUri__WEBPACK_IMPORTED_MODULE_5__.GitUri.fromFile(file, status.repoPath, "HEAD"), view, parent);
    this.status = status;
    this.file = file;
  }
  getChildren() {
    return [];
  }
  async getTreeItem() {
    var _a;
    const commit = await _container__WEBPACK_IMPORTED_MODULE_3__.Container.git.getCommit(this.status.repoPath, "HEAD");
    const item = new vscode__WEBPACK_IMPORTED_MODULE_0__.TreeItem("Current changes", vscode__WEBPACK_IMPORTED_MODULE_0__.TreeItemCollapsibleState.None);
    item.contextValue = _viewNode__WEBPACK_IMPORTED_MODULE_6__.ContextValues.MergeConflictCurrentChanges;
    item.description = `${_git_git__WEBPACK_IMPORTED_MODULE_4__.GitReference.toString(this.status.current, { expand: false, icon: false })}${commit != null ? ` (${_git_git__WEBPACK_IMPORTED_MODULE_4__.GitReference.toString(commit, { expand: false, icon: false })})` : " (HEAD)"}`;
    item.iconPath = this.view.config.avatars ? (_a = await (commit == null ? void 0 : commit.getAvatarUri({ defaultStyle: _container__WEBPACK_IMPORTED_MODULE_3__.Container.config.defaultGravatarsStyle }))) != null ? _a : new vscode__WEBPACK_IMPORTED_MODULE_0__.ThemeIcon("diff") : new vscode__WEBPACK_IMPORTED_MODULE_0__.ThemeIcon("diff");
    item.tooltip = new vscode__WEBPACK_IMPORTED_MODULE_0__.MarkdownString(`Current changes to $(file)${_constants__WEBPACK_IMPORTED_MODULE_2__.GlyphChars.Space}${this.file.fileName} on ${_git_git__WEBPACK_IMPORTED_MODULE_4__.GitReference.toString(this.status.current)}${commit != null ? `

${await _git_git__WEBPACK_IMPORTED_MODULE_4__.CommitFormatter.fromTemplateAsync(`$(git-commit)&nbsp;\${id} ${_constants__WEBPACK_IMPORTED_MODULE_2__.GlyphChars.Dash} \${avatar}&nbsp;__\${author}__, \${ago}\${' via 'pullRequest} &nbsp; _(\${date})_ 

\${message}`, commit, {
      avatarSize: 16,
      dateFormat: _container__WEBPACK_IMPORTED_MODULE_3__.Container.config.defaultDateFormat,
      markdown: true,
      messageIndent: 4
    })}` : ""}`, true);
    item.command = this.getCommand();
    return item;
  }
  getCommand() {
    if (this.status.mergeBase == null) {
      return {
        title: "Open Revision",
        command: _constants__WEBPACK_IMPORTED_MODULE_2__.BuiltInCommands.Open,
        arguments: [_git_gitUri__WEBPACK_IMPORTED_MODULE_5__.GitUri.toRevisionUri("HEAD", this.file.fileName, this.status.repoPath)]
      };
    }
    const commandArgs = {
      lhs: {
        sha: this.status.mergeBase,
        uri: _git_gitUri__WEBPACK_IMPORTED_MODULE_5__.GitUri.fromFile(this.file, this.status.repoPath, void 0, true),
        title: `${this.file.fileName} (merge-base)`
      },
      rhs: {
        sha: "HEAD",
        uri: _git_gitUri__WEBPACK_IMPORTED_MODULE_5__.GitUri.fromFile(this.file, this.status.repoPath),
        title: `${this.file.fileName} (${_git_git__WEBPACK_IMPORTED_MODULE_4__.GitReference.toString(this.status.current, {
          expand: false,
          icon: false
        })})`
      },
      repoPath: this.status.repoPath,
      line: 0,
      showOptions: {
        preserveFocus: true,
        preview: true
      }
    };
    return {
      title: "Open Changes",
      command: _commands__WEBPACK_IMPORTED_MODULE_1__.Commands.DiffWith,
      arguments: [commandArgs]
    };
  }
}


/***/ }),

/***/ "./src/views/nodes/mergeConflictFileNode.ts":
/*!**************************************************!*\
  !*** ./src/views/nodes/mergeConflictFileNode.ts ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "MergeConflictFileNode": () => (/* binding */ MergeConflictFileNode)
/* harmony export */ });
/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! path */ "./node_modules/path-browserify/index.js");
/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../constants */ "./src/constants.ts");
/* harmony import */ var _git_git__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../git/git */ "./src/git/git.ts");
/* harmony import */ var _git_gitUri__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../git/gitUri */ "./src/git/gitUri.ts");
/* harmony import */ var _mergeConflictCurrentChangesNode__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./mergeConflictCurrentChangesNode */ "./src/views/nodes/mergeConflictCurrentChangesNode.ts");
/* harmony import */ var _mergeConflictIncomingChangesNode__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./mergeConflictIncomingChangesNode */ "./src/views/nodes/mergeConflictIncomingChangesNode.ts");
/* harmony import */ var _viewNode__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./viewNode */ "./src/views/nodes/viewNode.ts");

var __defProp = Object.defineProperty;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};








class MergeConflictFileNode extends _viewNode__WEBPACK_IMPORTED_MODULE_7__.ViewNode {
  constructor(view, parent, status, file) {
    super(_git_gitUri__WEBPACK_IMPORTED_MODULE_4__.GitUri.fromFile(file, status.repoPath, status.HEAD.ref), view, parent);
    this.status = status;
    this.file = file;
    __publicField(this, "_description");
    __publicField(this, "_folderName");
    __publicField(this, "_label");
    __publicField(this, "_relativePath");
  }
  toClipboard() {
    return this.fileName;
  }
  get baseUri() {
    var _a;
    return _git_gitUri__WEBPACK_IMPORTED_MODULE_4__.GitUri.fromFile(this.file, this.status.repoPath, (_a = this.status.mergeBase) != null ? _a : "HEAD");
  }
  get fileName() {
    return this.file.fileName;
  }
  get repoPath() {
    return this.status.repoPath;
  }
  getChildren() {
    return [
      new _mergeConflictCurrentChangesNode__WEBPACK_IMPORTED_MODULE_5__.MergeConflictCurrentChangesNode(this.view, this, this.status, this.file),
      new _mergeConflictIncomingChangesNode__WEBPACK_IMPORTED_MODULE_6__.MergeConflictIncomingChangesNode(this.view, this, this.status, this.file)
    ];
  }
  getTreeItem() {
    const item = new vscode__WEBPACK_IMPORTED_MODULE_1__.TreeItem(this.label, vscode__WEBPACK_IMPORTED_MODULE_1__.TreeItemCollapsibleState.Collapsed);
    item.description = this.description;
    item.contextValue = `${_viewNode__WEBPACK_IMPORTED_MODULE_7__.ContextValues.File}+conflicted`;
    item.tooltip = _git_git__WEBPACK_IMPORTED_MODULE_3__.StatusFileFormatter.fromTemplate(`\${file}
\${directory}/

\${status}\${ (originalPath)} in Index (staged)`, this.file);
    item.resourceUri = _git_gitUri__WEBPACK_IMPORTED_MODULE_4__.GitUri.resolveToUri(this.file.fileName, this.repoPath);
    item.iconPath = vscode__WEBPACK_IMPORTED_MODULE_1__.ThemeIcon.File;
    item.command = this.getCommand();
    this._label = void 0;
    this._description = void 0;
    return item;
  }
  get description() {
    if (this._description == null) {
      this._description = _git_git__WEBPACK_IMPORTED_MODULE_3__.StatusFileFormatter.fromTemplate(this.view.config.formats.files.description, this.file, {
        relativePath: this.relativePath
      });
    }
    return this._description;
  }
  get folderName() {
    if (this._folderName == null) {
      this._folderName = path__WEBPACK_IMPORTED_MODULE_0__.dirname(this.uri.relativePath);
    }
    return this._folderName;
  }
  get label() {
    if (this._label == null) {
      this._label = _git_git__WEBPACK_IMPORTED_MODULE_3__.StatusFileFormatter.fromTemplate(this.view.config.formats.files.label, this.file, {
        relativePath: this.relativePath
      });
    }
    return this._label;
  }
  get priority() {
    return 0;
  }
  get relativePath() {
    return this._relativePath;
  }
  set relativePath(value) {
    this._relativePath = value;
    this._label = void 0;
    this._description = void 0;
  }
  getCommand() {
    return {
      title: "Open File",
      command: _constants__WEBPACK_IMPORTED_MODULE_2__.BuiltInCommands.Open,
      arguments: [
        _git_gitUri__WEBPACK_IMPORTED_MODULE_4__.GitUri.resolveToUri(this.file.fileName, this.repoPath),
        {
          preserveFocus: true,
          preview: true
        }
      ]
    };
  }
}


/***/ }),

/***/ "./src/views/nodes/mergeConflictIncomingChangesNode.ts":
/*!*************************************************************!*\
  !*** ./src/views/nodes/mergeConflictIncomingChangesNode.ts ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "MergeConflictIncomingChangesNode": () => (/* binding */ MergeConflictIncomingChangesNode)
/* harmony export */ });
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _commands__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../commands */ "./src/commands.ts");
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../constants */ "./src/constants.ts");
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../container */ "./src/container.ts");
/* harmony import */ var _git_git__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../git/git */ "./src/git/git.ts");
/* harmony import */ var _git_gitUri__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../git/gitUri */ "./src/git/gitUri.ts");
/* harmony import */ var _viewNode__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./viewNode */ "./src/views/nodes/viewNode.ts");








class MergeConflictIncomingChangesNode extends _viewNode__WEBPACK_IMPORTED_MODULE_6__.ViewNode {
  constructor(view, parent, status, file) {
    super(_git_gitUri__WEBPACK_IMPORTED_MODULE_5__.GitUri.fromFile(file, status.repoPath, status.HEAD.ref), view, parent);
    this.status = status;
    this.file = file;
  }
  getChildren() {
    return [];
  }
  async getTreeItem() {
    var _a;
    const commit = await _container__WEBPACK_IMPORTED_MODULE_3__.Container.git.getCommit(this.status.repoPath, this.status.type === "rebase" ? this.status.steps.current.commit.ref : this.status.HEAD.ref);
    const item = new vscode__WEBPACK_IMPORTED_MODULE_0__.TreeItem("Incoming changes", vscode__WEBPACK_IMPORTED_MODULE_0__.TreeItemCollapsibleState.None);
    item.contextValue = _viewNode__WEBPACK_IMPORTED_MODULE_6__.ContextValues.MergeConflictIncomingChanges;
    item.description = `${_git_git__WEBPACK_IMPORTED_MODULE_4__.GitReference.toString(this.status.incoming, { expand: false, icon: false })}${this.status.type === "rebase" ? ` (${_git_git__WEBPACK_IMPORTED_MODULE_4__.GitReference.toString(this.status.steps.current.commit, { expand: false, icon: false })})` : ` (${_git_git__WEBPACK_IMPORTED_MODULE_4__.GitReference.toString(this.status.HEAD, { expand: false, icon: false })})`}`;
    item.iconPath = this.view.config.avatars ? (_a = await (commit == null ? void 0 : commit.getAvatarUri({ defaultStyle: _container__WEBPACK_IMPORTED_MODULE_3__.Container.config.defaultGravatarsStyle }))) != null ? _a : new vscode__WEBPACK_IMPORTED_MODULE_0__.ThemeIcon("diff") : new vscode__WEBPACK_IMPORTED_MODULE_0__.ThemeIcon("diff");
    item.tooltip = new vscode__WEBPACK_IMPORTED_MODULE_0__.MarkdownString(`Incoming changes to $(file)${_constants__WEBPACK_IMPORTED_MODULE_2__.GlyphChars.Space}${this.file.fileName}${this.status.incoming != null ? ` from ${_git_git__WEBPACK_IMPORTED_MODULE_4__.GitReference.toString(this.status.incoming)}${commit != null ? `

${await _git_git__WEBPACK_IMPORTED_MODULE_4__.CommitFormatter.fromTemplateAsync(`$(git-commit)&nbsp;\${id} ${_constants__WEBPACK_IMPORTED_MODULE_2__.GlyphChars.Dash} \${avatar}&nbsp;__\${author}__, \${ago}\${' via 'pullRequest} &nbsp; _(\${date})_ 

\${message}`, commit, {
      avatarSize: 16,
      dateFormat: _container__WEBPACK_IMPORTED_MODULE_3__.Container.config.defaultDateFormat,
      markdown: true,
      messageIndent: 4
    })}` : this.status.type === "rebase" ? `

${_git_git__WEBPACK_IMPORTED_MODULE_4__.GitReference.toString(this.status.steps.current.commit, {
      capitalize: true,
      label: false
    })}` : `

${_git_git__WEBPACK_IMPORTED_MODULE_4__.GitReference.toString(this.status.HEAD, { capitalize: true, label: false })}`}` : ""}`, true);
    item.command = this.getCommand();
    return item;
  }
  getCommand() {
    if (this.status.mergeBase == null) {
      return {
        title: "Open Revision",
        command: _constants__WEBPACK_IMPORTED_MODULE_2__.BuiltInCommands.Open,
        arguments: [_git_gitUri__WEBPACK_IMPORTED_MODULE_5__.GitUri.toRevisionUri(this.status.HEAD.ref, this.file.fileName, this.status.repoPath)]
      };
    }
    const commandArgs = {
      lhs: {
        sha: this.status.mergeBase,
        uri: _git_gitUri__WEBPACK_IMPORTED_MODULE_5__.GitUri.fromFile(this.file, this.status.repoPath, void 0, true),
        title: `${this.file.fileName} (merge-base)`
      },
      rhs: {
        sha: this.status.HEAD.ref,
        uri: _git_gitUri__WEBPACK_IMPORTED_MODULE_5__.GitUri.fromFile(this.file, this.status.repoPath),
        title: `${this.file.fileName} (${this.status.incoming != null ? _git_git__WEBPACK_IMPORTED_MODULE_4__.GitReference.toString(this.status.incoming, { expand: false, icon: false }) : "incoming"})`
      },
      repoPath: this.status.repoPath,
      line: 0,
      showOptions: {
        preserveFocus: true,
        preview: true
      }
    };
    return {
      title: "Open Changes",
      command: _commands__WEBPACK_IMPORTED_MODULE_1__.Commands.DiffWith,
      arguments: [commandArgs]
    };
  }
}


/***/ }),

/***/ "./src/views/nodes/mergeStatusNode.ts":
/*!********************************************!*\
  !*** ./src/views/nodes/mergeStatusNode.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "MergeStatusNode": () => (/* binding */ MergeStatusNode)
/* harmony export */ });
/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! path */ "./node_modules/path-browserify/index.js");
/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _configuration__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../configuration */ "./src/configuration.ts");
/* harmony import */ var _git_git__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../git/git */ "./src/git/git.ts");
/* harmony import */ var _git_gitUri__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../git/gitUri */ "./src/git/gitUri.ts");
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../system */ "./src/system.ts");
/* harmony import */ var _branchNode__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./branchNode */ "./src/views/nodes/branchNode.ts");
/* harmony import */ var _folderNode__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./folderNode */ "./src/views/nodes/folderNode.ts");
/* harmony import */ var _mergeConflictFileNode__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./mergeConflictFileNode */ "./src/views/nodes/mergeConflictFileNode.ts");
/* harmony import */ var _viewNode__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./viewNode */ "./src/views/nodes/viewNode.ts");

var __defProp = Object.defineProperty;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};










const _MergeStatusNode = class extends _viewNode__WEBPACK_IMPORTED_MODULE_9__.ViewNode {
  constructor(view, parent, branch, mergeStatus, status, root) {
    super(_git_gitUri__WEBPACK_IMPORTED_MODULE_4__.GitUri.fromRepoPath(mergeStatus.repoPath), view, parent);
    this.branch = branch;
    this.mergeStatus = mergeStatus;
    this.status = status;
    this.root = root;
  }
  static getId(repoPath, name, root) {
    return `${_branchNode__WEBPACK_IMPORTED_MODULE_6__.BranchNode.getId(repoPath, name, root)}${this.key}`;
  }
  get id() {
    return _MergeStatusNode.getId(this.mergeStatus.repoPath, this.mergeStatus.current.name, this.root);
  }
  get repoPath() {
    return this.uri.repoPath;
  }
  getChildren() {
    var _a;
    if (((_a = this.status) == null ? void 0 : _a.hasConflicts) !== true)
      return [];
    let children = this.status.conflicts.map((f) => new _mergeConflictFileNode__WEBPACK_IMPORTED_MODULE_8__.MergeConflictFileNode(this.view, this, this.mergeStatus, f));
    if (this.view.config.files.layout !== _configuration__WEBPACK_IMPORTED_MODULE_2__.ViewFilesLayout.List) {
      const hierarchy = _system__WEBPACK_IMPORTED_MODULE_5__.Arrays.makeHierarchical(children, (n) => n.uri.relativePath.split("/"), (...parts) => _system__WEBPACK_IMPORTED_MODULE_5__.Strings.normalizePath(path__WEBPACK_IMPORTED_MODULE_0__.join(...parts)), this.view.config.files.compact);
      const root = new _folderNode__WEBPACK_IMPORTED_MODULE_7__.FolderNode(this.view, this, this.repoPath, "", hierarchy);
      children = root.getChildren();
    } else {
      children.sort((a, b) => a.label.localeCompare(b.label, void 0, { numeric: true, sensitivity: "base" }));
    }
    return children;
  }
  getTreeItem() {
    var _a, _b, _c, _d;
    const item = new vscode__WEBPACK_IMPORTED_MODULE_1__.TreeItem(`${((_a = this.status) == null ? void 0 : _a.hasConflicts) ? "Resolve conflicts before merging" : "Merging"} ${this.mergeStatus.incoming != null ? `${_git_git__WEBPACK_IMPORTED_MODULE_3__.GitReference.toString(this.mergeStatus.incoming, { expand: false, icon: false })} ` : ""}into ${_git_git__WEBPACK_IMPORTED_MODULE_3__.GitReference.toString(this.mergeStatus.current, { expand: false, icon: false })}`, vscode__WEBPACK_IMPORTED_MODULE_1__.TreeItemCollapsibleState.Expanded);
    item.id = this.id;
    item.contextValue = _viewNode__WEBPACK_IMPORTED_MODULE_9__.ContextValues.Merge;
    item.description = ((_b = this.status) == null ? void 0 : _b.hasConflicts) ? _system__WEBPACK_IMPORTED_MODULE_5__.Strings.pluralize("conflict", this.status.conflicts.length) : void 0;
    item.iconPath = ((_c = this.status) == null ? void 0 : _c.hasConflicts) ? new vscode__WEBPACK_IMPORTED_MODULE_1__.ThemeIcon("warning", new vscode__WEBPACK_IMPORTED_MODULE_1__.ThemeColor("list.warningForeground")) : new vscode__WEBPACK_IMPORTED_MODULE_1__.ThemeIcon("debug-pause", new vscode__WEBPACK_IMPORTED_MODULE_1__.ThemeColor("list.foreground"));
    item.tooltip = new vscode__WEBPACK_IMPORTED_MODULE_1__.MarkdownString(`${`Merging ${this.mergeStatus.incoming != null ? _git_git__WEBPACK_IMPORTED_MODULE_3__.GitReference.toString(this.mergeStatus.incoming) : ""}into ${_git_git__WEBPACK_IMPORTED_MODULE_3__.GitReference.toString(this.mergeStatus.current)}`}${((_d = this.status) == null ? void 0 : _d.hasConflicts) ? `

${_system__WEBPACK_IMPORTED_MODULE_5__.Strings.pluralize("conflicted file", this.status.conflicts.length)}` : ""}`, true);
    return item;
  }
};
let MergeStatusNode = _MergeStatusNode;
__publicField(MergeStatusNode, "key", ":merge");


/***/ }),

/***/ "./src/views/nodes/pullRequestNode.ts":
/*!********************************************!*\
  !*** ./src/views/nodes/pullRequestNode.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PullRequestNode": () => (/* binding */ PullRequestNode)
/* harmony export */ });
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../constants */ "./src/constants.ts");
/* harmony import */ var _git_git__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../git/git */ "./src/git/git.ts");
/* harmony import */ var _git_gitUri__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../git/gitUri */ "./src/git/gitUri.ts");
/* harmony import */ var _repositoryNode__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./repositoryNode */ "./src/views/nodes/repositoryNode.ts");
/* harmony import */ var _viewNode__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./viewNode */ "./src/views/nodes/viewNode.ts");

var __defProp = Object.defineProperty;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};






const _PullRequestNode = class extends _viewNode__WEBPACK_IMPORTED_MODULE_5__.ViewNode {
  constructor(view, parent, pullRequest, branchOrCommit) {
    super(_git_gitUri__WEBPACK_IMPORTED_MODULE_3__.GitUri.fromRepoPath(branchOrCommit.repoPath), view, parent);
    this.pullRequest = pullRequest;
    this.branchOrCommit = branchOrCommit;
  }
  static getId(repoPath, id, ref) {
    return `${_repositoryNode__WEBPACK_IMPORTED_MODULE_4__.RepositoryNode.getId(repoPath)}${this.key}(${id}):${ref}`;
  }
  toClipboard() {
    return this.pullRequest.url;
  }
  get id() {
    return _PullRequestNode.getId(this.branchOrCommit.repoPath, this.pullRequest.id, this.branchOrCommit.ref);
  }
  getChildren() {
    return [];
  }
  getTreeItem() {
    const item = new vscode__WEBPACK_IMPORTED_MODULE_0__.TreeItem(`#${this.pullRequest.id}: ${this.pullRequest.title}`, vscode__WEBPACK_IMPORTED_MODULE_0__.TreeItemCollapsibleState.None);
    item.id = this.id;
    item.contextValue = _viewNode__WEBPACK_IMPORTED_MODULE_5__.ContextValues.PullRequest;
    item.description = `${this.pullRequest.state}, ${this.pullRequest.formatDateFromNow()}`;
    item.iconPath = new vscode__WEBPACK_IMPORTED_MODULE_0__.ThemeIcon("git-pull-request", new vscode__WEBPACK_IMPORTED_MODULE_0__.ThemeColor(this.pullRequest.state === _git_git__WEBPACK_IMPORTED_MODULE_2__.PullRequestState.Closed ? _constants__WEBPACK_IMPORTED_MODULE_1__.Colors.ClosedPullRequestIconColor : this.pullRequest.state === _git_git__WEBPACK_IMPORTED_MODULE_2__.PullRequestState.Merged ? _constants__WEBPACK_IMPORTED_MODULE_1__.Colors.MergedPullRequestIconColor : _constants__WEBPACK_IMPORTED_MODULE_1__.Colors.OpenPullRequestIconColor));
    item.tooltip = `${this.pullRequest.title}
#${this.pullRequest.id} by ${this.pullRequest.author.name} was ${this.pullRequest.state === _git_git__WEBPACK_IMPORTED_MODULE_2__.PullRequestState.Open ? "opened" : this.pullRequest.state.toLowerCase()} ${this.pullRequest.formatDateFromNow()}`;
    if (this.branchOrCommit instanceof _git_git__WEBPACK_IMPORTED_MODULE_2__.GitCommit) {
      item.tooltip = `Commit ${this.branchOrCommit.shortSha} was introduced by PR #${this.pullRequest.id}
${item.tooltip}`;
    }
    return item;
  }
};
let PullRequestNode = _PullRequestNode;
__publicField(PullRequestNode, "key", ":pullrequest");


/***/ }),

/***/ "./src/views/nodes/rebaseStatusNode.ts":
/*!*********************************************!*\
  !*** ./src/views/nodes/rebaseStatusNode.ts ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "RebaseStatusNode": () => (/* binding */ RebaseStatusNode),
/* harmony export */   "RebaseCommitNode": () => (/* binding */ RebaseCommitNode)
/* harmony export */ });
/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! path */ "./node_modules/path-browserify/index.js");
/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _commands__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../commands */ "./src/commands.ts");
/* harmony import */ var _configuration__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../configuration */ "./src/configuration.ts");
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../constants */ "./src/constants.ts");
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../container */ "./src/container.ts");
/* harmony import */ var _git_git__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../git/git */ "./src/git/git.ts");
/* harmony import */ var _git_gitUri__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../git/gitUri */ "./src/git/gitUri.ts");
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../system */ "./src/system.ts");
/* harmony import */ var _branchNode__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./branchNode */ "./src/views/nodes/branchNode.ts");
/* harmony import */ var _commitFileNode__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./commitFileNode */ "./src/views/nodes/commitFileNode.ts");
/* harmony import */ var _folderNode__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./folderNode */ "./src/views/nodes/folderNode.ts");
/* harmony import */ var _mergeConflictFileNode__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./mergeConflictFileNode */ "./src/views/nodes/mergeConflictFileNode.ts");
/* harmony import */ var _viewNode__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./viewNode */ "./src/views/nodes/viewNode.ts");

var __defProp = Object.defineProperty;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};














const _RebaseStatusNode = class extends _viewNode__WEBPACK_IMPORTED_MODULE_13__.ViewNode {
  constructor(view, parent, branch, rebaseStatus, status, root) {
    super(_git_gitUri__WEBPACK_IMPORTED_MODULE_7__.GitUri.fromRepoPath(rebaseStatus.repoPath), view, parent);
    this.branch = branch;
    this.rebaseStatus = rebaseStatus;
    this.status = status;
    this.root = root;
  }
  static getId(repoPath, name, root) {
    return `${_branchNode__WEBPACK_IMPORTED_MODULE_9__.BranchNode.getId(repoPath, name, root)}${this.key}`;
  }
  get id() {
    return _RebaseStatusNode.getId(this.rebaseStatus.repoPath, this.rebaseStatus.incoming.name, this.root);
  }
  get repoPath() {
    return this.uri.repoPath;
  }
  async getChildren() {
    var _a, _b;
    let children = (_b = (_a = this.status) == null ? void 0 : _a.conflicts.map((f) => new _mergeConflictFileNode__WEBPACK_IMPORTED_MODULE_12__.MergeConflictFileNode(this.view, this, this.rebaseStatus, f))) != null ? _b : [];
    if (this.view.config.files.layout !== _configuration__WEBPACK_IMPORTED_MODULE_3__.ViewFilesLayout.List) {
      const hierarchy = _system__WEBPACK_IMPORTED_MODULE_8__.Arrays.makeHierarchical(children, (n) => n.uri.relativePath.split("/"), (...parts) => _system__WEBPACK_IMPORTED_MODULE_8__.Strings.normalizePath(path__WEBPACK_IMPORTED_MODULE_0__.join(...parts)), this.view.config.files.compact);
      const root = new _folderNode__WEBPACK_IMPORTED_MODULE_11__.FolderNode(this.view, this, this.repoPath, "", hierarchy);
      children = root.getChildren();
    } else {
      children.sort((a, b) => a.label.localeCompare(b.label, void 0, { numeric: true, sensitivity: "base" }));
    }
    const commit = await _container__WEBPACK_IMPORTED_MODULE_5__.Container.git.getCommit(this.rebaseStatus.repoPath, this.rebaseStatus.steps.current.commit.ref);
    if (commit != null) {
      children.splice(0, 0, new RebaseCommitNode(this.view, this, commit));
    }
    return children;
  }
  getTreeItem() {
    var _a, _b, _c, _d;
    const item = new vscode__WEBPACK_IMPORTED_MODULE_1__.TreeItem(`${((_a = this.status) == null ? void 0 : _a.hasConflicts) ? "Resolve conflicts to continue rebasing" : "Rebasing"} ${this.rebaseStatus.incoming != null ? `${_git_git__WEBPACK_IMPORTED_MODULE_6__.GitReference.toString(this.rebaseStatus.incoming, { expand: false, icon: false })}` : ""} (${this.rebaseStatus.steps.current.number}/${this.rebaseStatus.steps.total})`, vscode__WEBPACK_IMPORTED_MODULE_1__.TreeItemCollapsibleState.Expanded);
    item.id = this.id;
    item.contextValue = _viewNode__WEBPACK_IMPORTED_MODULE_13__.ContextValues.Rebase;
    item.description = ((_b = this.status) == null ? void 0 : _b.hasConflicts) ? _system__WEBPACK_IMPORTED_MODULE_8__.Strings.pluralize("conflict", this.status.conflicts.length) : void 0;
    item.iconPath = ((_c = this.status) == null ? void 0 : _c.hasConflicts) ? new vscode__WEBPACK_IMPORTED_MODULE_1__.ThemeIcon("warning", new vscode__WEBPACK_IMPORTED_MODULE_1__.ThemeColor("list.warningForeground")) : new vscode__WEBPACK_IMPORTED_MODULE_1__.ThemeIcon("debug-pause", new vscode__WEBPACK_IMPORTED_MODULE_1__.ThemeColor("list.foreground"));
    item.tooltip = new vscode__WEBPACK_IMPORTED_MODULE_1__.MarkdownString(`${`Rebasing ${this.rebaseStatus.incoming != null ? _git_git__WEBPACK_IMPORTED_MODULE_6__.GitReference.toString(this.rebaseStatus.incoming) : ""}onto ${_git_git__WEBPACK_IMPORTED_MODULE_6__.GitReference.toString(this.rebaseStatus.current)}`}

Step ${this.rebaseStatus.steps.current.number} of ${this.rebaseStatus.steps.total}\\
Paused at ${_git_git__WEBPACK_IMPORTED_MODULE_6__.GitReference.toString(this.rebaseStatus.steps.current.commit, { icon: true })}${((_d = this.status) == null ? void 0 : _d.hasConflicts) ? `

${_system__WEBPACK_IMPORTED_MODULE_8__.Strings.pluralize("conflicted file", this.status.conflicts.length)}` : ""}`, true);
    return item;
  }
  async openEditor() {
    const rebaseTodoUri = vscode__WEBPACK_IMPORTED_MODULE_1__.Uri.joinPath(this.uri, ".git", "rebase-merge", "git-rebase-todo");
    await vscode__WEBPACK_IMPORTED_MODULE_1__.commands.executeCommand(_constants__WEBPACK_IMPORTED_MODULE_4__.BuiltInCommands.OpenWith, rebaseTodoUri, "gitlens.rebase", {
      preview: false
    });
  }
};
let RebaseStatusNode = _RebaseStatusNode;
__publicField(RebaseStatusNode, "key", ":rebase");
class RebaseCommitNode extends _viewNode__WEBPACK_IMPORTED_MODULE_13__.ViewRefNode {
  constructor(view, parent, commit) {
    super(commit.toGitUri(), view, parent);
    this.commit = commit;
  }
  toClipboard() {
    let message = this.commit.message;
    const index = message.indexOf("\n");
    if (index !== -1) {
      message = `${message.substring(0, index)}${_constants__WEBPACK_IMPORTED_MODULE_4__.GlyphChars.Space}${_constants__WEBPACK_IMPORTED_MODULE_4__.GlyphChars.Ellipsis}`;
    }
    return `${this.commit.shortSha}: ${message}`;
  }
  get ref() {
    return this.commit;
  }
  get tooltip() {
    return _git_git__WEBPACK_IMPORTED_MODULE_6__.CommitFormatter.fromTemplate(`\${author}\${ (email)} ${_constants__WEBPACK_IMPORTED_MODULE_4__.GlyphChars.Dash} \${id}\${ (tips)}
\${ago} (\${date})\${

message}${this.commit.getFormattedDiffStatus({
      expand: true,
      prefix: "\n\n",
      separator: "\n"
    })}\${

${_constants__WEBPACK_IMPORTED_MODULE_4__.GlyphChars.Dash.repeat(2)}
footnotes}`, this.commit, {
      dateFormat: _container__WEBPACK_IMPORTED_MODULE_5__.Container.config.defaultDateFormat,
      messageIndent: 4
    });
  }
  getChildren() {
    const commit = this.commit;
    let children = commit.files.map((s) => new _commitFileNode__WEBPACK_IMPORTED_MODULE_10__.CommitFileNode(this.view, this, s, commit.toFileCommit(s)));
    if (this.view.config.files.layout !== _configuration__WEBPACK_IMPORTED_MODULE_3__.ViewFilesLayout.List) {
      const hierarchy = _system__WEBPACK_IMPORTED_MODULE_8__.Arrays.makeHierarchical(children, (n) => n.uri.relativePath.split("/"), (...parts) => _system__WEBPACK_IMPORTED_MODULE_8__.Strings.normalizePath(path__WEBPACK_IMPORTED_MODULE_0__.join(...parts)), this.view.config.files.compact);
      const root = new _folderNode__WEBPACK_IMPORTED_MODULE_11__.FolderNode(this.view, this, this.repoPath, "", hierarchy);
      children = root.getChildren();
    } else {
      children.sort((a, b) => a.label.localeCompare(b.label, void 0, { numeric: true, sensitivity: "base" }));
    }
    return children;
  }
  getTreeItem() {
    const item = new vscode__WEBPACK_IMPORTED_MODULE_1__.TreeItem(`Paused at commit ${this.commit.shortSha}`, vscode__WEBPACK_IMPORTED_MODULE_1__.TreeItemCollapsibleState.Collapsed);
    item.description = _git_git__WEBPACK_IMPORTED_MODULE_6__.CommitFormatter.fromTemplate(`\${message}`, this.commit, {
      messageTruncateAtNewLine: true
    });
    item.iconPath = new vscode__WEBPACK_IMPORTED_MODULE_1__.ThemeIcon("git-commit");
    item.tooltip = this.tooltip;
    return item;
  }
  getCommand() {
    const commandArgs = {
      commit: this.commit,
      uri: this.uri,
      line: 0,
      showOptions: {
        preserveFocus: true,
        preview: true
      }
    };
    return {
      title: "Open Changes with Previous Revision",
      command: _commands__WEBPACK_IMPORTED_MODULE_2__.Commands.DiffWithPrevious,
      arguments: [void 0, commandArgs]
    };
  }
}


/***/ }),

/***/ "./src/views/nodes/reflogNode.ts":
/*!***************************************!*\
  !*** ./src/views/nodes/reflogNode.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ReflogNode": () => (/* binding */ ReflogNode)
/* harmony export */ });
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../container */ "./src/container.ts");
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../system */ "./src/system.ts");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./common */ "./src/views/nodes/common.ts");
/* harmony import */ var _reflogRecordNode__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./reflogRecordNode */ "./src/views/nodes/reflogRecordNode.ts");
/* harmony import */ var _repositoryNode__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./repositoryNode */ "./src/views/nodes/repositoryNode.ts");
/* harmony import */ var _viewNode__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./viewNode */ "./src/views/nodes/viewNode.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};







const _ReflogNode = class extends _viewNode__WEBPACK_IMPORTED_MODULE_6__.ViewNode {
  constructor(uri, view, parent, repo) {
    super(uri, view, parent);
    this.repo = repo;
    __publicField(this, "_children");
    __publicField(this, "_reflog");
    __publicField(this, "limit", this.view.getNodeLastKnownLimit(this));
  }
  static getId(repoPath) {
    return `${_repositoryNode__WEBPACK_IMPORTED_MODULE_5__.RepositoryNode.getId(repoPath)}${this.key}`;
  }
  get id() {
    return _ReflogNode.getId(this.repo.path);
  }
  async getChildren() {
    if (this._children === void 0) {
      const children = [];
      const reflog = await this.getReflog();
      if (reflog === void 0 || reflog.records.length === 0) {
        return [new _common__WEBPACK_IMPORTED_MODULE_3__.MessageNode(this.view, this, "No activity could be found.")];
      }
      children.push(...reflog.records.map((r) => new _reflogRecordNode__WEBPACK_IMPORTED_MODULE_4__.ReflogRecordNode(this.view, this, r)));
      if (reflog.hasMore) {
        children.push(new _common__WEBPACK_IMPORTED_MODULE_3__.LoadMoreNode(this.view, this, children[children.length - 1]));
      }
      this._children = children;
    }
    return this._children;
  }
  getTreeItem() {
    const item = new vscode__WEBPACK_IMPORTED_MODULE_0__.TreeItem("Incoming Activity", vscode__WEBPACK_IMPORTED_MODULE_0__.TreeItemCollapsibleState.Collapsed);
    item.id = this.id;
    item.contextValue = _viewNode__WEBPACK_IMPORTED_MODULE_6__.ContextValues.Reflog;
    item.description = "experimental";
    item.iconPath = {
      dark: _container__WEBPACK_IMPORTED_MODULE_1__.Container.context.asAbsolutePath("images/dark/icon-activity.svg"),
      light: _container__WEBPACK_IMPORTED_MODULE_1__.Container.context.asAbsolutePath("images/light/icon-activity.svg")
    };
    return item;
  }
  refresh(reset) {
    this._children = void 0;
    if (reset) {
      this._reflog = void 0;
    }
  }
  async getReflog() {
    var _a;
    if (this._reflog === void 0) {
      this._reflog = await _container__WEBPACK_IMPORTED_MODULE_1__.Container.git.getIncomingActivity(this.repo.path, {
        all: true,
        limit: (_a = this.limit) != null ? _a : this.view.config.defaultItemLimit
      });
    }
    return this._reflog;
  }
  get hasMore() {
    var _a, _b;
    return (_b = (_a = this._reflog) == null ? void 0 : _a.hasMore) != null ? _b : true;
  }
  async loadMore(limit) {
    var _a;
    let reflog = await this.getReflog();
    if (reflog === void 0 || !reflog.hasMore)
      return;
    reflog = await ((_a = reflog.more) == null ? void 0 : _a.call(reflog, limit != null ? limit : this.view.config.pageItemLimit));
    if (this._reflog === reflog)
      return;
    this._reflog = reflog;
    this.limit = reflog == null ? void 0 : reflog.count;
    void this.triggerChange(false);
  }
};
let ReflogNode = _ReflogNode;
__publicField(ReflogNode, "key", ":reflog");
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_2__.gate)(),
  (0,_system__WEBPACK_IMPORTED_MODULE_2__.debug)()
], ReflogNode.prototype, "refresh", 1);


/***/ }),

/***/ "./src/views/nodes/reflogRecordNode.ts":
/*!*********************************************!*\
  !*** ./src/views/nodes/reflogRecordNode.ts ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ReflogRecordNode": () => (/* binding */ ReflogRecordNode)
/* harmony export */ });
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../constants */ "./src/constants.ts");
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../container */ "./src/container.ts");
/* harmony import */ var _git_gitUri__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../git/gitUri */ "./src/git/gitUri.ts");
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../system */ "./src/system.ts");
/* harmony import */ var _commitNode__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./commitNode */ "./src/views/nodes/commitNode.ts");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./common */ "./src/views/nodes/common.ts");
/* harmony import */ var _repositoryNode__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./repositoryNode */ "./src/views/nodes/repositoryNode.ts");
/* harmony import */ var _viewNode__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./viewNode */ "./src/views/nodes/viewNode.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};









const _ReflogRecordNode = class extends _viewNode__WEBPACK_IMPORTED_MODULE_8__.ViewNode {
  constructor(view, parent, record) {
    super(_git_gitUri__WEBPACK_IMPORTED_MODULE_3__.GitUri.fromRepoPath(record.repoPath), view, parent);
    this.record = record;
    __publicField(this, "_log");
    __publicField(this, "limit", this.view.getNodeLastKnownLimit(this));
  }
  static getId(repoPath, sha, selector, command, commandArgs, date) {
    return `${_repositoryNode__WEBPACK_IMPORTED_MODULE_7__.RepositoryNode.getId(repoPath)}${this.key}(${sha}|${selector}|${command}|${commandArgs != null ? commandArgs : ""}|${date.getTime()})`;
  }
  get id() {
    return _ReflogRecordNode.getId(this.uri.repoPath, this.record.sha, this.record.selector, this.record.command, this.record.commandArgs, this.record.date);
  }
  async getChildren() {
    const log = await this.getLog();
    if (log === void 0)
      return [new _common__WEBPACK_IMPORTED_MODULE_6__.MessageNode(this.view, this, "No commits could be found.")];
    const children = [
      ..._system__WEBPACK_IMPORTED_MODULE_4__.Iterables.map(log.commits.values(), (c) => new _commitNode__WEBPACK_IMPORTED_MODULE_5__.CommitNode(this.view, this, c))
    ];
    if (log.hasMore) {
      children.push(new _common__WEBPACK_IMPORTED_MODULE_6__.LoadMoreNode(this.view, this, children[children.length - 1]));
    }
    return children;
  }
  getTreeItem() {
    const item = new vscode__WEBPACK_IMPORTED_MODULE_0__.TreeItem(`${this.record.command}${this.record.commandArgs ? ` ${this.record.commandArgs}` : ""}`, vscode__WEBPACK_IMPORTED_MODULE_0__.TreeItemCollapsibleState.Collapsed);
    item.id = this.id;
    item.description = `${this.record.HEAD.length === 0 ? "" : `${this.record.HEAD} ${_constants__WEBPACK_IMPORTED_MODULE_1__.GlyphChars.Space}${_constants__WEBPACK_IMPORTED_MODULE_1__.GlyphChars.Dot}${_constants__WEBPACK_IMPORTED_MODULE_1__.GlyphChars.Space} `}${this.record.formattedDate}`;
    item.contextValue = _viewNode__WEBPACK_IMPORTED_MODULE_8__.ContextValues.ReflogRecord;
    item.tooltip = `${this.record.HEAD.length === 0 ? "" : `${this.record.HEAD}
`}${this.record.command}${this.record.commandArgs ? ` ${this.record.commandArgs}` : ""}${this.record.details ? ` (${this.record.details})` : ""}
${this.record.formatDateFromNow()} (${this.record.formatDate()})
${this.record.previousShortSha} ${_constants__WEBPACK_IMPORTED_MODULE_1__.GlyphChars.Space}${_constants__WEBPACK_IMPORTED_MODULE_1__.GlyphChars.ArrowRight}${_constants__WEBPACK_IMPORTED_MODULE_1__.GlyphChars.Space} ${this.record.shortSha}`;
    return item;
  }
  refresh(reset) {
    if (reset) {
      this._log = void 0;
    }
  }
  async getLog() {
    var _a;
    if (this._log === void 0) {
      const range = `${this.record.previousSha}..${this.record.sha}`;
      this._log = await _container__WEBPACK_IMPORTED_MODULE_2__.Container.git.getLog(this.uri.repoPath, {
        limit: (_a = this.limit) != null ? _a : this.view.config.defaultItemLimit,
        ref: range
      });
    }
    return this._log;
  }
  get hasMore() {
    var _a, _b;
    return (_b = (_a = this._log) == null ? void 0 : _a.hasMore) != null ? _b : true;
  }
  async loadMore(limit) {
    var _a;
    let log = await vscode__WEBPACK_IMPORTED_MODULE_0__.window.withProgress({
      location: { viewId: this.view.id }
    }, () => this.getLog());
    if (log === void 0 || !log.hasMore)
      return;
    log = await ((_a = log.more) == null ? void 0 : _a.call(log, limit != null ? limit : this.view.config.pageItemLimit));
    if (this._log === log)
      return;
    this._log = log;
    this.limit = log == null ? void 0 : log.count;
    void this.triggerChange(false);
  }
};
let ReflogRecordNode = _ReflogRecordNode;
__publicField(ReflogRecordNode, "key", ":reflog-record");
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_4__.gate)(),
  (0,_system__WEBPACK_IMPORTED_MODULE_4__.debug)()
], ReflogRecordNode.prototype, "refresh", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_4__.gate)()
], ReflogRecordNode.prototype, "loadMore", 1);


/***/ }),

/***/ "./src/views/nodes/remoteNode.ts":
/*!***************************************!*\
  !*** ./src/views/nodes/remoteNode.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "RemoteNode": () => (/* binding */ RemoteNode)
/* harmony export */ });
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _configuration__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../configuration */ "./src/configuration.ts");
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../constants */ "./src/constants.ts");
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../container */ "./src/container.ts");
/* harmony import */ var _git_git__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../git/git */ "./src/git/git.ts");
/* harmony import */ var _git_gitUri__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../git/gitUri */ "./src/git/gitUri.ts");
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../system */ "./src/system.ts");
/* harmony import */ var _branchNode__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./branchNode */ "./src/views/nodes/branchNode.ts");
/* harmony import */ var _branchOrTagFolderNode__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./branchOrTagFolderNode */ "./src/views/nodes/branchOrTagFolderNode.ts");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./common */ "./src/views/nodes/common.ts");
/* harmony import */ var _repositoryNode__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./repositoryNode */ "./src/views/nodes/repositoryNode.ts");
/* harmony import */ var _viewNode__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./viewNode */ "./src/views/nodes/viewNode.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};












const _RemoteNode = class extends _viewNode__WEBPACK_IMPORTED_MODULE_11__.ViewNode {
  constructor(uri, view, parent, remote, repo) {
    super(uri, view, parent);
    this.remote = remote;
    this.repo = repo;
  }
  static getId(repoPath, name, id) {
    return `${_repositoryNode__WEBPACK_IMPORTED_MODULE_10__.RepositoryNode.getId(repoPath)}${this.key}(${name}|${id})`;
  }
  toClipboard() {
    return this.remote.name;
  }
  get id() {
    return _RemoteNode.getId(this.remote.repoPath, this.remote.name, this.remote.id);
  }
  async getChildren() {
    const branches = await this.repo.getBranches({
      filter: (b) => b.remote && b.name.startsWith(this.remote.name),
      sort: true
    });
    if (branches.length === 0)
      return [new _common__WEBPACK_IMPORTED_MODULE_9__.MessageNode(this.view, this, "No branches could be found.")];
    const branchNodes = branches.map((b) => new _branchNode__WEBPACK_IMPORTED_MODULE_7__.BranchNode(_git_gitUri__WEBPACK_IMPORTED_MODULE_5__.GitUri.fromRepoPath(this.uri.repoPath, b.ref), this.view, this, b, false, {
      showComparison: false,
      showTracking: false
    }));
    if (this.view.config.branches.layout === _configuration__WEBPACK_IMPORTED_MODULE_1__.ViewBranchesLayout.List)
      return branchNodes;
    const hierarchy = _system__WEBPACK_IMPORTED_MODULE_6__.Arrays.makeHierarchical(branchNodes, (n) => n.treeHierarchy, (...paths) => paths.join("/"), this.view.config.files.compact, (b) => {
      b.compacted = true;
      return true;
    });
    const root = new _branchOrTagFolderNode__WEBPACK_IMPORTED_MODULE_8__.BranchOrTagFolderNode(this.view, this, "remote-branch", this.repo.path, "", void 0, hierarchy, `remote(${this.remote.name})`);
    const children = root.getChildren();
    return children;
  }
  async getTreeItem() {
    var _a;
    let arrows;
    let left;
    let right;
    for (const { type } of this.remote.urls) {
      if (type === _git_git__WEBPACK_IMPORTED_MODULE_4__.GitRemoteType.Fetch) {
        left = true;
        if (right)
          break;
      } else if (type === _git_git__WEBPACK_IMPORTED_MODULE_4__.GitRemoteType.Push) {
        right = true;
        if (left)
          break;
      }
    }
    if (left && right) {
      arrows = _constants__WEBPACK_IMPORTED_MODULE_2__.GlyphChars.ArrowsRightLeft;
    } else if (right) {
      arrows = _constants__WEBPACK_IMPORTED_MODULE_2__.GlyphChars.ArrowRight;
    } else if (left) {
      arrows = _constants__WEBPACK_IMPORTED_MODULE_2__.GlyphChars.ArrowLeft;
    } else {
      arrows = _constants__WEBPACK_IMPORTED_MODULE_2__.GlyphChars.Dash;
    }
    const item = new vscode__WEBPACK_IMPORTED_MODULE_0__.TreeItem(this.remote.name, vscode__WEBPACK_IMPORTED_MODULE_0__.TreeItemCollapsibleState.Collapsed);
    item.id = this.id;
    if (this.remote.provider != null) {
      const { provider } = this.remote;
      item.description = `${arrows}${_constants__WEBPACK_IMPORTED_MODULE_2__.GlyphChars.Space} ${provider.name} ${_constants__WEBPACK_IMPORTED_MODULE_2__.GlyphChars.Space}${_constants__WEBPACK_IMPORTED_MODULE_2__.GlyphChars.Dot}${_constants__WEBPACK_IMPORTED_MODULE_2__.GlyphChars.Space} ${provider.displayPath}`;
      item.iconPath = provider.icon === "remote" ? new vscode__WEBPACK_IMPORTED_MODULE_0__.ThemeIcon("cloud") : {
        dark: _container__WEBPACK_IMPORTED_MODULE_3__.Container.context.asAbsolutePath(`images/dark/icon-${provider.icon}.svg`),
        light: _container__WEBPACK_IMPORTED_MODULE_3__.Container.context.asAbsolutePath(`images/light/icon-${provider.icon}.svg`)
      };
      if (provider.hasApi()) {
        const connected = (_a = provider.maybeConnected) != null ? _a : await provider.isConnected();
        item.contextValue = `${_viewNode__WEBPACK_IMPORTED_MODULE_11__.ContextValues.Remote}${connected ? "+connected" : "+disconnected"}`;
        item.tooltip = `${this.remote.name} (${provider.name} ${_constants__WEBPACK_IMPORTED_MODULE_2__.GlyphChars.Dash} ${connected ? "connected" : "not connected"})
${provider.displayPath}
`;
      } else {
        item.contextValue = _viewNode__WEBPACK_IMPORTED_MODULE_11__.ContextValues.Remote;
        item.tooltip = `${this.remote.name} (${provider.name})
${provider.displayPath}
`;
      }
    } else {
      item.description = `${arrows}${_constants__WEBPACK_IMPORTED_MODULE_2__.GlyphChars.Space} ${this.remote.domain ? `${this.remote.domain} ${_constants__WEBPACK_IMPORTED_MODULE_2__.GlyphChars.Space}${_constants__WEBPACK_IMPORTED_MODULE_2__.GlyphChars.Dot}${_constants__WEBPACK_IMPORTED_MODULE_2__.GlyphChars.Space} ` : ""}${this.remote.path}`;
      item.contextValue = _viewNode__WEBPACK_IMPORTED_MODULE_11__.ContextValues.Remote;
      item.iconPath = new vscode__WEBPACK_IMPORTED_MODULE_0__.ThemeIcon("cloud");
      item.tooltip = `${this.remote.name} (${this.remote.domain})
${this.remote.path}
`;
    }
    if (this.remote.default) {
      item.contextValue += "+default";
      item.resourceUri = vscode__WEBPACK_IMPORTED_MODULE_0__.Uri.parse("gitlens-view://remote/default");
    }
    for (const { type, url } of this.remote.urls) {
      item.tooltip += `
${url} (${type})`;
    }
    return item;
  }
  async setAsDefault(state = true) {
    void await this.remote.setAsDefault(state);
    void this.triggerChange();
  }
};
let RemoteNode = _RemoteNode;
__publicField(RemoteNode, "key", ":remote");
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_6__.log)()
], RemoteNode.prototype, "setAsDefault", 1);


/***/ }),

/***/ "./src/views/nodes/remotesNode.ts":
/*!****************************************!*\
  !*** ./src/views/nodes/remotesNode.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "RemotesNode": () => (/* binding */ RemotesNode)
/* harmony export */ });
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../system */ "./src/system.ts");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./common */ "./src/views/nodes/common.ts");
/* harmony import */ var _remoteNode__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./remoteNode */ "./src/views/nodes/remoteNode.ts");
/* harmony import */ var _repositoryNode__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./repositoryNode */ "./src/views/nodes/repositoryNode.ts");
/* harmony import */ var _viewNode__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./viewNode */ "./src/views/nodes/viewNode.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};






const _RemotesNode = class extends _viewNode__WEBPACK_IMPORTED_MODULE_5__.ViewNode {
  constructor(uri, view, parent, repo) {
    super(uri, view, parent);
    this.repo = repo;
    __publicField(this, "_children");
  }
  static getId(repoPath) {
    return `${_repositoryNode__WEBPACK_IMPORTED_MODULE_4__.RepositoryNode.getId(repoPath)}${this.key}`;
  }
  get id() {
    return _RemotesNode.getId(this.repo.path);
  }
  get repoPath() {
    return this.repo.path;
  }
  async getChildren() {
    if (this._children == null) {
      const remotes = await this.repo.getRemotes({ sort: true });
      if (remotes.length === 0) {
        return [new _common__WEBPACK_IMPORTED_MODULE_2__.MessageNode(this.view, this, "No remotes could be found")];
      }
      this._children = remotes.map((r) => new _remoteNode__WEBPACK_IMPORTED_MODULE_3__.RemoteNode(this.uri, this.view, this, r, this.repo));
    }
    return this._children;
  }
  getTreeItem() {
    const item = new vscode__WEBPACK_IMPORTED_MODULE_0__.TreeItem("Remotes", vscode__WEBPACK_IMPORTED_MODULE_0__.TreeItemCollapsibleState.Collapsed);
    item.id = this.id;
    item.contextValue = _viewNode__WEBPACK_IMPORTED_MODULE_5__.ContextValues.Remotes;
    item.iconPath = new vscode__WEBPACK_IMPORTED_MODULE_0__.ThemeIcon("cloud");
    return item;
  }
  refresh() {
    this._children = void 0;
  }
};
let RemotesNode = _RemotesNode;
__publicField(RemotesNode, "key", ":remotes");
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_1__.gate)(),
  (0,_system__WEBPACK_IMPORTED_MODULE_1__.debug)()
], RemotesNode.prototype, "refresh", 1);


/***/ }),

/***/ "./src/views/nodes/repositoriesNode.ts":
/*!*********************************************!*\
  !*** ./src/views/nodes/repositoriesNode.ts ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "RepositoriesNode": () => (/* binding */ RepositoriesNode)
/* harmony export */ });
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../container */ "./src/container.ts");
/* harmony import */ var _git_gitUri__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../git/gitUri */ "./src/git/gitUri.ts");
/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../logger */ "./src/logger.ts");
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../system */ "./src/system.ts");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./common */ "./src/views/nodes/common.ts");
/* harmony import */ var _repositoryNode__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./repositoryNode */ "./src/views/nodes/repositoryNode.ts");
/* harmony import */ var _viewNode__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./viewNode */ "./src/views/nodes/viewNode.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};








class RepositoriesNode extends _viewNode__WEBPACK_IMPORTED_MODULE_7__.SubscribeableViewNode {
  constructor(view) {
    super(_viewNode__WEBPACK_IMPORTED_MODULE_7__.unknownGitUri, view);
    __publicField(this, "_children");
  }
  dispose() {
    super.dispose();
    this.resetChildren();
  }
  resetChildren() {
    if (this._children === void 0)
      return;
    for (const child of this._children) {
      if (child instanceof _repositoryNode__WEBPACK_IMPORTED_MODULE_6__.RepositoryNode) {
        child.dispose();
      }
    }
    this._children = void 0;
  }
  async getChildren() {
    if (this._children === void 0) {
      const repositories = await _container__WEBPACK_IMPORTED_MODULE_1__.Container.git.getOrderedRepositories();
      if (repositories.length === 0)
        return [new _common__WEBPACK_IMPORTED_MODULE_5__.MessageNode(this.view, this, "No repositories could be found.")];
      this._children = repositories.map((r) => new _repositoryNode__WEBPACK_IMPORTED_MODULE_6__.RepositoryNode(_git_gitUri__WEBPACK_IMPORTED_MODULE_2__.GitUri.fromRepoPath(r.path), this.view, this, r));
    }
    return this._children;
  }
  getTreeItem() {
    const item = new vscode__WEBPACK_IMPORTED_MODULE_0__.TreeItem("Repositories", vscode__WEBPACK_IMPORTED_MODULE_0__.TreeItemCollapsibleState.Expanded);
    item.contextValue = _viewNode__WEBPACK_IMPORTED_MODULE_7__.ContextValues.Repositories;
    return item;
  }
  async refresh(reset = false) {
    if (this._children === void 0)
      return;
    if (reset) {
      this.resetChildren();
      await this.unsubscribe();
      void this.ensureSubscription();
      return;
    }
    const repositories = await _container__WEBPACK_IMPORTED_MODULE_1__.Container.git.getOrderedRepositories();
    if (repositories.length === 0 && (this._children === void 0 || this._children.length === 0))
      return;
    if (repositories.length === 0) {
      this._children = [new _common__WEBPACK_IMPORTED_MODULE_5__.MessageNode(this.view, this, "No repositories could be found.")];
      return;
    }
    const children = [];
    for (const repo of repositories) {
      const normalizedPath = repo.normalizedPath;
      const child = this._children.find((c) => c.repo.normalizedPath === normalizedPath);
      if (child !== void 0) {
        children.push(child);
        void child.refresh();
      } else {
        children.push(new _repositoryNode__WEBPACK_IMPORTED_MODULE_6__.RepositoryNode(_git_gitUri__WEBPACK_IMPORTED_MODULE_2__.GitUri.fromRepoPath(repo.path), this.view, this, repo));
      }
    }
    for (const child of this._children) {
      if (children.includes(child))
        continue;
      child.dispose();
    }
    this._children = children;
    void this.ensureSubscription();
  }
  subscribe() {
    const subscriptions = [_container__WEBPACK_IMPORTED_MODULE_1__.Container.git.onDidChangeRepositories(this.onRepositoriesChanged, this)];
    if (this.view.config.autoReveal) {
      subscriptions.push(vscode__WEBPACK_IMPORTED_MODULE_0__.window.onDidChangeActiveTextEditor(_system__WEBPACK_IMPORTED_MODULE_4__.Functions.debounce(this.onActiveEditorChanged, 500), this));
    }
    return vscode__WEBPACK_IMPORTED_MODULE_0__.Disposable.from(...subscriptions);
  }
  get requiresResetOnVisible() {
    return true;
  }
  onActiveEditorChanged(editor) {
    if (editor == null || this._children === void 0 || this._children.length === 1) {
      return;
    }
    try {
      const uri = editor.document.uri;
      const node = this._children.find((n) => n instanceof _repositoryNode__WEBPACK_IMPORTED_MODULE_6__.RepositoryNode && n.repo.containsUri(uri));
      if (node === void 0)
        return;
      let parent = this.view.selection.length === 0 ? void 0 : this.view.selection[0];
      while (parent !== void 0) {
        if (parent === node)
          return;
        parent = parent.getParent();
      }
      void this.view.reveal(node, { expand: true });
    } catch (ex) {
      _logger__WEBPACK_IMPORTED_MODULE_3__.Logger.error(ex);
    }
  }
  onRepositoriesChanged() {
    void this.triggerChange();
  }
}
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_4__.debug)()
], RepositoriesNode.prototype, "resetChildren", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_4__.gate)(),
  (0,_system__WEBPACK_IMPORTED_MODULE_4__.debug)()
], RepositoriesNode.prototype, "refresh", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_4__.debug)()
], RepositoriesNode.prototype, "subscribe", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_4__.debug)({ args: false })
], RepositoriesNode.prototype, "onActiveEditorChanged", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_4__.debug)()
], RepositoriesNode.prototype, "onRepositoriesChanged", 1);


/***/ }),

/***/ "./src/views/nodes/repositoryNode.ts":
/*!*******************************************!*\
  !*** ./src/views/nodes/repositoryNode.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "RepositoryNode": () => (/* binding */ RepositoryNode)
/* harmony export */ });
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../constants */ "./src/constants.ts");
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../container */ "./src/container.ts");
/* harmony import */ var _git_git__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../git/git */ "./src/git/git.ts");
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../system */ "./src/system.ts");
/* harmony import */ var _branchesNode__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./branchesNode */ "./src/views/nodes/branchesNode.ts");
/* harmony import */ var _branchNode__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./branchNode */ "./src/views/nodes/branchNode.ts");
/* harmony import */ var _branchTrackingStatusNode__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./branchTrackingStatusNode */ "./src/views/nodes/branchTrackingStatusNode.ts");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./common */ "./src/views/nodes/common.ts");
/* harmony import */ var _compareBranchNode__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./compareBranchNode */ "./src/views/nodes/compareBranchNode.ts");
/* harmony import */ var _contributorsNode__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./contributorsNode */ "./src/views/nodes/contributorsNode.ts");
/* harmony import */ var _mergeStatusNode__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./mergeStatusNode */ "./src/views/nodes/mergeStatusNode.ts");
/* harmony import */ var _rebaseStatusNode__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./rebaseStatusNode */ "./src/views/nodes/rebaseStatusNode.ts");
/* harmony import */ var _reflogNode__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./reflogNode */ "./src/views/nodes/reflogNode.ts");
/* harmony import */ var _remotesNode__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./remotesNode */ "./src/views/nodes/remotesNode.ts");
/* harmony import */ var _stashesNode__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./stashesNode */ "./src/views/nodes/stashesNode.ts");
/* harmony import */ var _statusFilesNode__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./statusFilesNode */ "./src/views/nodes/statusFilesNode.ts");
/* harmony import */ var _tagsNode__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./tagsNode */ "./src/views/nodes/tagsNode.ts");
/* harmony import */ var _viewNode__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./viewNode */ "./src/views/nodes/viewNode.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};



















const _RepositoryNode = class extends _viewNode__WEBPACK_IMPORTED_MODULE_18__.SubscribeableViewNode {
  constructor(uri, view, parent, repo) {
    super(uri, view, parent);
    this.repo = repo;
    __publicField(this, "_children");
    __publicField(this, "_status");
    __publicField(this, "_repoUpdatedAt", this.repo.updatedAt);
    this._status = this.repo.getStatus();
  }
  static getId(repoPath) {
    return `gitlens${this.key}(${repoPath})`;
  }
  toClipboard() {
    return this.repo.path;
  }
  get id() {
    return _RepositoryNode.getId(this.repo.path);
  }
  async getChildren() {
    if (this._children === void 0) {
      const children = [];
      const status = await this._status;
      if (status != null) {
        const branch = new _git_git__WEBPACK_IMPORTED_MODULE_3__.GitBranch(status.repoPath, status.branch, false, true, void 0, status.sha, status.upstream ? { name: status.upstream, missing: false } : void 0, status.state.ahead, status.state.behind, status.detached, status.rebasing);
        if (this.view.config.showBranchComparison !== false) {
          children.push(new _compareBranchNode__WEBPACK_IMPORTED_MODULE_9__.CompareBranchNode(this.uri, this.view, this, branch, this.view.config.showBranchComparison, true));
        }
        const [mergeStatus, rebaseStatus] = await Promise.all([
          _container__WEBPACK_IMPORTED_MODULE_2__.Container.git.getMergeStatus(status.repoPath),
          _container__WEBPACK_IMPORTED_MODULE_2__.Container.git.getRebaseStatus(status.repoPath)
        ]);
        if (mergeStatus != null) {
          children.push(new _mergeStatusNode__WEBPACK_IMPORTED_MODULE_11__.MergeStatusNode(this.view, this, branch, mergeStatus, status, true));
        } else if (rebaseStatus != null) {
          children.push(new _rebaseStatusNode__WEBPACK_IMPORTED_MODULE_12__.RebaseStatusNode(this.view, this, branch, rebaseStatus, status, true));
        } else if (this.view.config.showUpstreamStatus) {
          if (status.upstream) {
            if (!status.state.behind && !status.state.ahead) {
              children.push(new _branchTrackingStatusNode__WEBPACK_IMPORTED_MODULE_7__.BranchTrackingStatusNode(this.view, this, branch, status, "same", true));
            } else {
              if (status.state.behind) {
                children.push(new _branchTrackingStatusNode__WEBPACK_IMPORTED_MODULE_7__.BranchTrackingStatusNode(this.view, this, branch, status, "behind", true));
              }
              if (status.state.ahead) {
                children.push(new _branchTrackingStatusNode__WEBPACK_IMPORTED_MODULE_7__.BranchTrackingStatusNode(this.view, this, branch, status, "ahead", true, {
                  showAheadCommits: true
                }));
              }
            }
          } else {
            children.push(new _branchTrackingStatusNode__WEBPACK_IMPORTED_MODULE_7__.BranchTrackingStatusNode(this.view, this, branch, status, "none", true));
          }
        }
        if (this.view.config.includeWorkingTree && status.files.length !== 0) {
          const range = void 0;
          children.push(new _statusFilesNode__WEBPACK_IMPORTED_MODULE_16__.StatusFilesNode(this.view, this, status, range));
        }
        if (children.length !== 0 && !this.view.config.compact) {
          children.push(new _common__WEBPACK_IMPORTED_MODULE_8__.MessageNode(this.view, this, "", _constants__WEBPACK_IMPORTED_MODULE_1__.GlyphChars.Dash.repeat(2), ""));
        }
        if (this.view.config.showCommits) {
          children.push(new _branchNode__WEBPACK_IMPORTED_MODULE_6__.BranchNode(this.uri, this.view, this, branch, true, {
            showAsCommits: true,
            showComparison: false,
            showCurrent: false,
            showStatus: false,
            showTracking: false
          }));
        }
      }
      if (this.view.config.showBranches) {
        children.push(new _branchesNode__WEBPACK_IMPORTED_MODULE_5__.BranchesNode(this.uri, this.view, this, this.repo));
      }
      if (this.view.config.showRemotes) {
        children.push(new _remotesNode__WEBPACK_IMPORTED_MODULE_14__.RemotesNode(this.uri, this.view, this, this.repo));
      }
      if (this.view.config.showStashes) {
        children.push(new _stashesNode__WEBPACK_IMPORTED_MODULE_15__.StashesNode(this.uri, this.view, this, this.repo));
      }
      if (this.view.config.showTags) {
        children.push(new _tagsNode__WEBPACK_IMPORTED_MODULE_17__.TagsNode(this.uri, this.view, this, this.repo));
      }
      if (this.view.config.showContributors) {
        children.push(new _contributorsNode__WEBPACK_IMPORTED_MODULE_10__.ContributorsNode(this.uri, this.view, this, this.repo));
      }
      if (this.view.config.showIncomingActivity) {
        children.push(new _reflogNode__WEBPACK_IMPORTED_MODULE_13__.ReflogNode(this.uri, this.view, this, this.repo));
      }
      this._children = children;
    }
    return this._children;
  }
  async getTreeItem() {
    var _a, _b, _c, _d, _e, _f, _g;
    const label = (_b = (_a = this.repo.formattedName) != null ? _a : this.uri.repoPath) != null ? _b : "";
    const lastFetched = (_d = await ((_c = this.repo) == null ? void 0 : _c.getLastFetched())) != null ? _d : 0;
    let description;
    let tooltip = `${(_f = (_e = this.repo.formattedName) != null ? _e : this.uri.repoPath) != null ? _f : ""}${lastFetched ? `${_system__WEBPACK_IMPORTED_MODULE_4__.Strings.pad(_constants__WEBPACK_IMPORTED_MODULE_1__.GlyphChars.Dash, 2, 2)}Last fetched ${_git_git__WEBPACK_IMPORTED_MODULE_3__.Repository.formatLastFetched(lastFetched, false)}` : ""}${this.repo.formattedName ? `
${this.uri.repoPath}` : ""}`;
    let iconSuffix = "";
    let workingStatus = "";
    let contextValue = _viewNode__WEBPACK_IMPORTED_MODULE_18__.ContextValues.Repository;
    if (this.repo.starred) {
      contextValue += "+starred";
    }
    const status = await this._status;
    if (status != null) {
      tooltip += `

Current branch $(git-branch) ${status.branch}${status.rebasing ? " (Rebasing)" : ""}`;
      if (this.view.config.includeWorkingTree && status.files.length !== 0) {
        workingStatus = status.getFormattedDiffStatus({
          compact: true,
          prefix: _system__WEBPACK_IMPORTED_MODULE_4__.Strings.pad(_constants__WEBPACK_IMPORTED_MODULE_1__.GlyphChars.Dot, 1, 1)
        });
      }
      const upstreamStatus = status.getUpstreamStatus({
        suffix: _system__WEBPACK_IMPORTED_MODULE_4__.Strings.pad(_constants__WEBPACK_IMPORTED_MODULE_1__.GlyphChars.Dot, 1, 1)
      });
      description = `${upstreamStatus}${status.branch}${status.rebasing ? " (Rebasing)" : ""}${workingStatus}`;
      let providerName;
      if (status.upstream != null) {
        const providers = _git_git__WEBPACK_IMPORTED_MODULE_3__.GitRemote.getHighlanderProviders(await _container__WEBPACK_IMPORTED_MODULE_2__.Container.git.getRemotes(status.repoPath));
        providerName = (providers == null ? void 0 : providers.length) ? providers[0].name : void 0;
      } else {
        const remote = await status.getRemote();
        providerName = (_g = remote == null ? void 0 : remote.provider) == null ? void 0 : _g.name;
      }
      iconSuffix = workingStatus ? "-blue" : "";
      if (status.upstream != null) {
        tooltip += ` is ${status.getUpstreamStatus({
          empty: `up to date with $(git-branch) ${status.upstream}${providerName ? ` on ${providerName}` : ""}`,
          expand: true,
          icons: true,
          separator: ", ",
          suffix: ` $(git-branch) ${status.upstream}${providerName ? ` on ${providerName}` : ""}`
        })}`;
        if (status.state.behind) {
          contextValue += "+behind";
          iconSuffix = "-red";
        }
        if (status.state.ahead) {
          iconSuffix = status.state.behind ? "-yellow" : "-green";
          contextValue += "+ahead";
        }
      }
      if (workingStatus) {
        tooltip += `

Working tree has uncommitted changes${status.getFormattedDiffStatus({
          expand: true,
          prefix: "\n",
          separator: "\n"
        })}`;
      }
    }
    if (!this.repo.supportsChangeEvents) {
      description = `${_system__WEBPACK_IMPORTED_MODULE_4__.Strings.pad(_constants__WEBPACK_IMPORTED_MODULE_1__.GlyphChars.Warning, 1, 0)}${description ? _system__WEBPACK_IMPORTED_MODULE_4__.Strings.pad(description, 2, 0) : ""}`;
      tooltip += `

${_constants__WEBPACK_IMPORTED_MODULE_1__.GlyphChars.Warning} Unable to automatically detect repository changes`;
    }
    const item = new vscode__WEBPACK_IMPORTED_MODULE_0__.TreeItem(label, vscode__WEBPACK_IMPORTED_MODULE_0__.TreeItemCollapsibleState.Expanded);
    item.id = this.id;
    item.contextValue = contextValue;
    item.description = `${description != null ? description : ""}${lastFetched ? `${_system__WEBPACK_IMPORTED_MODULE_4__.Strings.pad(_constants__WEBPACK_IMPORTED_MODULE_1__.GlyphChars.Dot, 1, 1)}Last fetched ${_git_git__WEBPACK_IMPORTED_MODULE_3__.Repository.formatLastFetched(lastFetched)}` : ""}`;
    item.iconPath = {
      dark: _container__WEBPACK_IMPORTED_MODULE_2__.Container.context.asAbsolutePath(`images/dark/icon-repo${iconSuffix}.svg`),
      light: _container__WEBPACK_IMPORTED_MODULE_2__.Container.context.asAbsolutePath(`images/light/icon-repo${iconSuffix}.svg`)
    };
    item.tooltip = new vscode__WEBPACK_IMPORTED_MODULE_0__.MarkdownString(tooltip, true);
    return item;
  }
  fetch(options = {}) {
    return this.repo.fetch(options);
  }
  pull(options = {}) {
    return this.repo.pull(options);
  }
  push(options = {}) {
    return this.repo.push(options);
  }
  async refresh(reset = false) {
    if (reset) {
      this._status = this.repo.getStatus();
      this._children = void 0;
    }
    await this.ensureSubscription();
  }
  async star() {
    await this.repo.star();
    void this.parent.triggerChange();
  }
  async unstar() {
    await this.repo.unstar();
    void this.parent.triggerChange();
  }
  async subscribe() {
    var _a, _b;
    const lastFetched = (_b = await ((_a = this.repo) == null ? void 0 : _a.getLastFetched())) != null ? _b : 0;
    const disposables = [this.repo.onDidChange(this.onRepositoryChanged, this)];
    const interval = _git_git__WEBPACK_IMPORTED_MODULE_3__.Repository.getLastFetchedUpdateInterval(lastFetched);
    if (lastFetched !== 0 && interval > 0) {
      disposables.push(_system__WEBPACK_IMPORTED_MODULE_4__.Functions.interval(() => {
        var _a2;
        if (interval !== _git_git__WEBPACK_IMPORTED_MODULE_3__.Repository.getLastFetchedUpdateInterval(lastFetched)) {
          void this.resetSubscription();
        }
        if (this.splatted) {
          void this.view.triggerNodeChange((_a2 = this.parent) != null ? _a2 : this);
        } else {
          void this.view.triggerNodeChange(this);
        }
      }, interval));
    }
    if (this.view.config.includeWorkingTree) {
      disposables.push(this.repo.onDidChangeFileSystem(this.onFileSystemChanged, this), this.repo.startWatchingFileSystem());
    }
    return vscode__WEBPACK_IMPORTED_MODULE_0__.Disposable.from(...disposables);
  }
  get requiresResetOnVisible() {
    return this._repoUpdatedAt !== this.repo.updatedAt;
  }
  async onFileSystemChanged(_e) {
    this._repoUpdatedAt = this.repo.updatedAt;
    this._status = this.repo.getStatus();
    if (this._children !== void 0) {
      const status = await this._status;
      let index = this._children.findIndex((c) => c instanceof _statusFilesNode__WEBPACK_IMPORTED_MODULE_16__.StatusFilesNode);
      if (status !== void 0 && (status.state.ahead || status.files.length !== 0)) {
        let deleteCount = 1;
        if (index === -1) {
          index = _system__WEBPACK_IMPORTED_MODULE_4__.Arrays.findLastIndex(this._children, (c) => c instanceof _branchTrackingStatusNode__WEBPACK_IMPORTED_MODULE_7__.BranchTrackingStatusNode || c instanceof _branchNode__WEBPACK_IMPORTED_MODULE_6__.BranchNode);
          deleteCount = 0;
          index++;
        }
        const range = void 0;
        this._children.splice(index, deleteCount, new _statusFilesNode__WEBPACK_IMPORTED_MODULE_16__.StatusFilesNode(this.view, this, status, range));
      } else if (index !== -1) {
        this._children.splice(index, 1);
      }
    }
    void this.triggerChange(false);
  }
  onRepositoryChanged(e) {
    this._repoUpdatedAt = this.repo.updatedAt;
    if (e.changed(_git_git__WEBPACK_IMPORTED_MODULE_3__.RepositoryChange.Closed, _git_git__WEBPACK_IMPORTED_MODULE_3__.RepositoryChangeComparisonMode.Any)) {
      this.dispose();
      return;
    }
    if (this._children == null || e.changed(_git_git__WEBPACK_IMPORTED_MODULE_3__.RepositoryChange.Config, _git_git__WEBPACK_IMPORTED_MODULE_3__.RepositoryChange.Index, _git_git__WEBPACK_IMPORTED_MODULE_3__.RepositoryChange.Heads, _git_git__WEBPACK_IMPORTED_MODULE_3__.RepositoryChange.Status, _git_git__WEBPACK_IMPORTED_MODULE_3__.RepositoryChange.Unknown, _git_git__WEBPACK_IMPORTED_MODULE_3__.RepositoryChangeComparisonMode.Any)) {
      void this.triggerChange(true);
      return;
    }
    if (e.changed(_git_git__WEBPACK_IMPORTED_MODULE_3__.RepositoryChange.Remotes, _git_git__WEBPACK_IMPORTED_MODULE_3__.RepositoryChange.RemoteProviders, _git_git__WEBPACK_IMPORTED_MODULE_3__.RepositoryChangeComparisonMode.Any)) {
      const node = this._children.find((c) => c instanceof _remotesNode__WEBPACK_IMPORTED_MODULE_14__.RemotesNode);
      if (node != null) {
        void this.view.triggerNodeChange(node);
      }
    }
    if (e.changed(_git_git__WEBPACK_IMPORTED_MODULE_3__.RepositoryChange.Stash, _git_git__WEBPACK_IMPORTED_MODULE_3__.RepositoryChangeComparisonMode.Any)) {
      const node = this._children.find((c) => c instanceof _stashesNode__WEBPACK_IMPORTED_MODULE_15__.StashesNode);
      if (node != null) {
        void this.view.triggerNodeChange(node);
      }
    }
    if (e.changed(_git_git__WEBPACK_IMPORTED_MODULE_3__.RepositoryChange.Tags, _git_git__WEBPACK_IMPORTED_MODULE_3__.RepositoryChangeComparisonMode.Any)) {
      const node = this._children.find((c) => c instanceof _tagsNode__WEBPACK_IMPORTED_MODULE_17__.TagsNode);
      if (node != null) {
        void this.view.triggerNodeChange(node);
      }
    }
  }
};
let RepositoryNode = _RepositoryNode;
__publicField(RepositoryNode, "key", ":repository");
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_4__.log)()
], RepositoryNode.prototype, "fetch", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_4__.log)()
], RepositoryNode.prototype, "pull", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_4__.log)()
], RepositoryNode.prototype, "push", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_4__.gate)(),
  (0,_system__WEBPACK_IMPORTED_MODULE_4__.debug)()
], RepositoryNode.prototype, "refresh", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_4__.log)()
], RepositoryNode.prototype, "star", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_4__.log)()
], RepositoryNode.prototype, "unstar", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_4__.debug)()
], RepositoryNode.prototype, "subscribe", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_4__.debug)({
    args: {
      0: (e) => {
        var _a, _b;
        return `{ repository: ${(_b = (_a = e.repository) == null ? void 0 : _a.name) != null ? _b : ""}, uris(${e.uris.length}): [${e.uris.slice(0, 1).map((u) => u.fsPath).join(", ")}${e.uris.length > 1 ? ", ..." : ""}] }`;
      }
    }
  })
], RepositoryNode.prototype, "onFileSystemChanged", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_4__.debug)({
    args: {
      0: (e) => e.toString()
    }
  })
], RepositoryNode.prototype, "onRepositoryChanged", 1);


/***/ }),

/***/ "./src/views/nodes/resultsCommitsNode.ts":
/*!***********************************************!*\
  !*** ./src/views/nodes/resultsCommitsNode.ts ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ResultsCommitsNode": () => (/* binding */ ResultsCommitsNode)
/* harmony export */ });
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../container */ "./src/container.ts");
/* harmony import */ var _git_gitUri__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../git/gitUri */ "./src/git/gitUri.ts");
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../system */ "./src/system.ts");
/* harmony import */ var _commitNode__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./commitNode */ "./src/views/nodes/commitNode.ts");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./common */ "./src/views/nodes/common.ts");
/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./helpers */ "./src/views/nodes/helpers.ts");
/* harmony import */ var _resultsFilesNode__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./resultsFilesNode */ "./src/views/nodes/resultsFilesNode.ts");
/* harmony import */ var _viewNode__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./viewNode */ "./src/views/nodes/viewNode.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};









class ResultsCommitsNode extends _viewNode__WEBPACK_IMPORTED_MODULE_8__.ViewNode {
  constructor(view, parent, repoPath, _label, _results, _options = {}, splatted) {
    super(_git_gitUri__WEBPACK_IMPORTED_MODULE_2__.GitUri.fromRepoPath(repoPath), view, parent);
    this.repoPath = repoPath;
    this._label = _label;
    this._results = _results;
    this._options = _options;
    __publicField(this, "_commitsQueryResults");
    __publicField(this, "_hasMore", true);
    __publicField(this, "limit", this.view.getNodeLastKnownLimit(this));
    if (splatted != null) {
      this.splatted = splatted;
    }
    this._options = { expand: true, ..._options };
  }
  get ref1() {
    var _a;
    return (_a = this._results.comparison) == null ? void 0 : _a.ref1;
  }
  get ref2() {
    var _a;
    return (_a = this._results.comparison) == null ? void 0 : _a.ref2;
  }
  get id() {
    return `${this.parent.id}:results:commits${this._options.id ? `:${this._options.id}` : ""}`;
  }
  async getChildren() {
    const { log } = await this.getCommitsQueryResults();
    if (log == null)
      return [];
    const getBranchAndTagTips = await _container__WEBPACK_IMPORTED_MODULE_1__.Container.git.getBranchesAndTagsTipsFn(this.uri.repoPath);
    const children = [];
    const { files } = this._results;
    if (files != null) {
      children.push(new _resultsFilesNode__WEBPACK_IMPORTED_MODULE_7__.ResultsFilesNode(this.view, this, this.uri.repoPath, files.ref1, files.ref2, files.query, this._results.direction, {
        expand: false
      }));
    }
    const options = { expand: this._options.expand && log.count === 1 };
    children.push(...(0,_helpers__WEBPACK_IMPORTED_MODULE_6__.insertDateMarkers)(_system__WEBPACK_IMPORTED_MODULE_3__.Iterables.map(log.commits.values(), (c) => new _commitNode__WEBPACK_IMPORTED_MODULE_4__.CommitNode(this.view, this, c, void 0, void 0, getBranchAndTagTips, options)), this, void 0, { show: log.count > 1 }));
    if (log.hasMore) {
      children.push(new _common__WEBPACK_IMPORTED_MODULE_5__.LoadMoreNode(this.view, this, children[children.length - 1]));
    }
    return children;
  }
  async getTreeItem() {
    let label;
    let state;
    if (this._results.deferred) {
      label = this._label;
      state = vscode__WEBPACK_IMPORTED_MODULE_0__.TreeItemCollapsibleState.Collapsed;
    } else {
      try {
        let log;
        ({ label, log } = await _system__WEBPACK_IMPORTED_MODULE_3__.Promises.cancellable(this.getCommitsQueryResults(), 100));
        state = log == null || log.count === 0 ? vscode__WEBPACK_IMPORTED_MODULE_0__.TreeItemCollapsibleState.None : this._options.expand || log.count === 1 ? vscode__WEBPACK_IMPORTED_MODULE_0__.TreeItemCollapsibleState.Expanded : vscode__WEBPACK_IMPORTED_MODULE_0__.TreeItemCollapsibleState.Collapsed;
      } catch (ex) {
        if (ex instanceof _system__WEBPACK_IMPORTED_MODULE_3__.Promises.CancellationError) {
          ex.promise.then(() => this.triggerChange(false));
        }
        state = vscode__WEBPACK_IMPORTED_MODULE_0__.TreeItemCollapsibleState.Collapsed;
      }
    }
    const item = new vscode__WEBPACK_IMPORTED_MODULE_0__.TreeItem(label != null ? label : this._label, state);
    item.id = this.id;
    item.contextValue = this._results.comparison != null ? _viewNode__WEBPACK_IMPORTED_MODULE_8__.ContextValues.CompareResultsCommits : _viewNode__WEBPACK_IMPORTED_MODULE_8__.ContextValues.SearchResultsCommits;
    item.description = this._options.description;
    return item;
  }
  refresh(reset = false) {
    if (reset) {
      this._commitsQueryResults = void 0;
      void this.getCommitsQueryResults();
    }
  }
  async getCommitsQueryResults() {
    var _a;
    if (this._commitsQueryResults == null) {
      this._commitsQueryResults = this._results.query((_a = this.limit) != null ? _a : _container__WEBPACK_IMPORTED_MODULE_1__.Container.config.advanced.maxSearchItems);
      const results = await this._commitsQueryResults;
      this._hasMore = results.hasMore;
      if (this._results.deferred) {
        this._results.deferred = false;
        void this.triggerChange(false);
      }
    }
    return this._commitsQueryResults;
  }
  get hasMore() {
    return this._hasMore;
  }
  async loadMore(limit) {
    var _a, _b;
    const results = await this.getCommitsQueryResults();
    if (results == null || !results.hasMore)
      return;
    await ((_a = results.more) == null ? void 0 : _a.call(results, limit != null ? limit : this.view.config.pageItemLimit));
    this.limit = (_b = results.log) == null ? void 0 : _b.count;
    void this.triggerChange(false);
  }
}
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_3__.gate)(),
  (0,_system__WEBPACK_IMPORTED_MODULE_3__.debug)()
], ResultsCommitsNode.prototype, "refresh", 1);


/***/ }),

/***/ "./src/views/nodes/resultsFileNode.ts":
/*!********************************************!*\
  !*** ./src/views/nodes/resultsFileNode.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ResultsFileNode": () => (/* binding */ ResultsFileNode)
/* harmony export */ });
/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! path */ "./node_modules/path-browserify/index.js");
/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _commands__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../commands */ "./src/commands.ts");
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../container */ "./src/container.ts");
/* harmony import */ var _git_git__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../git/git */ "./src/git/git.ts");
/* harmony import */ var _git_gitUri__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../git/gitUri */ "./src/git/gitUri.ts");
/* harmony import */ var _viewNode__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./viewNode */ "./src/views/nodes/viewNode.ts");

var __defProp = Object.defineProperty;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};







class ResultsFileNode extends _viewNode__WEBPACK_IMPORTED_MODULE_6__.ViewRefFileNode {
  constructor(view, parent, repoPath, file, ref1, ref2, direction) {
    super(_git_gitUri__WEBPACK_IMPORTED_MODULE_5__.GitUri.fromFile(file, repoPath, ref1 || ref2), view, parent);
    this.file = file;
    this.ref1 = ref1;
    this.ref2 = ref2;
    this.direction = direction;
    __publicField(this, "_description");
    __publicField(this, "_folderName");
    __publicField(this, "_label");
    __publicField(this, "_relativePath");
  }
  toClipboard() {
    return this.fileName;
  }
  get fileName() {
    return this.file.fileName;
  }
  get ref() {
    return _git_git__WEBPACK_IMPORTED_MODULE_4__.GitReference.create(this.ref1 || this.ref2, this.uri.repoPath);
  }
  getChildren() {
    return [];
  }
  getTreeItem() {
    const item = new vscode__WEBPACK_IMPORTED_MODULE_1__.TreeItem(this.label, vscode__WEBPACK_IMPORTED_MODULE_1__.TreeItemCollapsibleState.None);
    item.contextValue = _viewNode__WEBPACK_IMPORTED_MODULE_6__.ContextValues.ResultsFile;
    item.description = this.description;
    item.tooltip = _git_git__WEBPACK_IMPORTED_MODULE_4__.StatusFileFormatter.fromTemplate(`\${file}
\${directory}/

\${status}\${ (originalPath)}`, this.file);
    const statusIcon = _git_git__WEBPACK_IMPORTED_MODULE_4__.GitFile.getStatusIcon(this.file.status);
    item.iconPath = {
      dark: _container__WEBPACK_IMPORTED_MODULE_3__.Container.context.asAbsolutePath(path__WEBPACK_IMPORTED_MODULE_0__.join("images", "dark", statusIcon)),
      light: _container__WEBPACK_IMPORTED_MODULE_3__.Container.context.asAbsolutePath(path__WEBPACK_IMPORTED_MODULE_0__.join("images", "light", statusIcon))
    };
    item.command = this.getCommand();
    return item;
  }
  get description() {
    if (this._description === void 0) {
      this._description = _git_git__WEBPACK_IMPORTED_MODULE_4__.StatusFileFormatter.fromTemplate(this.view.config.formats.files.description, this.file, {
        relativePath: this.relativePath
      });
    }
    return this._description;
  }
  get folderName() {
    if (this._folderName === void 0) {
      this._folderName = path__WEBPACK_IMPORTED_MODULE_0__.dirname(this.uri.relativePath);
    }
    return this._folderName;
  }
  get label() {
    if (this._label === void 0) {
      this._label = _git_git__WEBPACK_IMPORTED_MODULE_4__.StatusFileFormatter.fromTemplate(this.view.config.formats.files.label, this.file, {
        relativePath: this.relativePath
      });
    }
    return this._label;
  }
  get relativePath() {
    return this._relativePath;
  }
  set relativePath(value) {
    this._relativePath = value;
    this._label = void 0;
    this._description = void 0;
  }
  get priority() {
    return 0;
  }
  getCommand() {
    const commandArgs = {
      lhs: {
        sha: this.ref1,
        uri: (this.file.status === "R" || this.file.status === "C") && this.direction === "behind" ? _git_gitUri__WEBPACK_IMPORTED_MODULE_5__.GitUri.fromFile(this.file, this.uri.repoPath, this.ref2, true) : this.uri
      },
      rhs: {
        sha: this.ref2,
        uri: (this.file.status === "R" || this.file.status === "C") && this.direction !== "behind" ? _git_gitUri__WEBPACK_IMPORTED_MODULE_5__.GitUri.fromFile(this.file, this.uri.repoPath, this.ref2, true) : this.uri
      },
      repoPath: this.uri.repoPath,
      line: 0,
      showOptions: {
        preserveFocus: true,
        preview: true
      }
    };
    return {
      title: "Open Changes",
      command: _commands__WEBPACK_IMPORTED_MODULE_2__.Commands.DiffWith,
      arguments: [commandArgs]
    };
  }
}


/***/ }),

/***/ "./src/views/nodes/resultsFilesNode.ts":
/*!*********************************************!*\
  !*** ./src/views/nodes/resultsFilesNode.ts ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ResultsFilesNode": () => (/* binding */ ResultsFilesNode)
/* harmony export */ });
/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! path */ "./node_modules/path-browserify/index.js");
/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _configuration__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../configuration */ "./src/configuration.ts");
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../container */ "./src/container.ts");
/* harmony import */ var _git_gitUri__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../git/gitUri */ "./src/git/gitUri.ts");
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../system */ "./src/system.ts");
/* harmony import */ var _folderNode__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./folderNode */ "./src/views/nodes/folderNode.ts");
/* harmony import */ var _resultsFileNode__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./resultsFileNode */ "./src/views/nodes/resultsFileNode.ts");
/* harmony import */ var _viewNode__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./viewNode */ "./src/views/nodes/viewNode.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};









class ResultsFilesNode extends _viewNode__WEBPACK_IMPORTED_MODULE_8__.ViewNode {
  constructor(view, parent, repoPath, ref1, ref2, _filesQuery, direction, _options = {}) {
    super(_git_gitUri__WEBPACK_IMPORTED_MODULE_4__.GitUri.fromRepoPath(repoPath), view, parent);
    this.repoPath = repoPath;
    this.ref1 = ref1;
    this.ref2 = ref2;
    this._filesQuery = _filesQuery;
    this.direction = direction;
    this._options = _options;
    __publicField(this, "_filter", false);
    __publicField(this, "_filesQueryResults");
    __publicField(this, "_filterResults");
    this._options = { expand: true, ..._options };
  }
  get id() {
    return `${this.parent.id}:results:files`;
  }
  get filter() {
    return this._filter;
  }
  set filter(value) {
    if (this._filter === value)
      return;
    this._filter = value;
    this._filterResults = void 0;
    void this.triggerChange(false);
  }
  get filterable() {
    return this.filtered || this.ref1 !== this.ref2 && this.direction === void 0;
  }
  get filtered() {
    return Boolean(this.filter);
  }
  async getChildren() {
    var _a, _b;
    const results = await this.getFilesQueryResults();
    const files = (_b = this.filtered ? (_a = results.filtered) == null ? void 0 : _a.files : void 0) != null ? _b : results.files;
    if (files == null)
      return [];
    let children = [
      ..._system__WEBPACK_IMPORTED_MODULE_5__.Iterables.map(files, (s) => new _resultsFileNode__WEBPACK_IMPORTED_MODULE_7__.ResultsFileNode(this.view, this, this.repoPath, s, this.ref1, this.ref2, this.direction))
    ];
    if (this.view.config.files.layout !== _configuration__WEBPACK_IMPORTED_MODULE_2__.ViewFilesLayout.List) {
      const hierarchy = _system__WEBPACK_IMPORTED_MODULE_5__.Arrays.makeHierarchical(children, (n) => n.uri.relativePath.split("/"), (...parts) => _system__WEBPACK_IMPORTED_MODULE_5__.Strings.normalizePath(path__WEBPACK_IMPORTED_MODULE_0__.join(...parts)), this.view.config.files.compact);
      const root = new _folderNode__WEBPACK_IMPORTED_MODULE_6__.FolderNode(this.view, this, this.repoPath, "", hierarchy);
      children = root.getChildren();
    } else {
      children.sort((a, b) => a.priority - b.priority || a.label.localeCompare(b.label, void 0, { numeric: true, sensitivity: "base" }));
    }
    return children;
  }
  async getTreeItem() {
    var _a, _b;
    let label;
    let icon;
    let files;
    let state;
    try {
      const results = await _system__WEBPACK_IMPORTED_MODULE_5__.Promises.cancellable(this.getFilesQueryResults(), 100);
      label = results.label;
      files = (_b = this.filtered ? (_a = results.filtered) == null ? void 0 : _a.files : void 0) != null ? _b : results.files;
      if (this.filtered && results.filtered == null) {
        label = "files changed";
        icon = new vscode__WEBPACK_IMPORTED_MODULE_1__.ThemeIcon("ellipsis");
      }
      state = files == null || files.length === 0 ? vscode__WEBPACK_IMPORTED_MODULE_1__.TreeItemCollapsibleState.None : this._options.expand ? vscode__WEBPACK_IMPORTED_MODULE_1__.TreeItemCollapsibleState.Expanded : vscode__WEBPACK_IMPORTED_MODULE_1__.TreeItemCollapsibleState.Collapsed;
    } catch (ex) {
      if (ex instanceof _system__WEBPACK_IMPORTED_MODULE_5__.Promises.CancellationError) {
        ex.promise.then(() => setTimeout(() => this.triggerChange(false), 0));
      }
      label = "files changed";
      icon = new vscode__WEBPACK_IMPORTED_MODULE_1__.ThemeIcon("ellipsis");
      state = vscode__WEBPACK_IMPORTED_MODULE_1__.TreeItemCollapsibleState.Collapsed;
    }
    const item = new vscode__WEBPACK_IMPORTED_MODULE_1__.TreeItem(`${this.filtered && files != null ? `Showing ${files.length} of ` : ""}${label}`, state);
    item.id = this.id;
    item.iconPath = icon;
    item.contextValue = `${_viewNode__WEBPACK_IMPORTED_MODULE_8__.ContextValues.ResultsFiles}${this.filterable ? "+filterable" : ""}${this.filtered ? `+filtered~${this.filter}` : ""}`;
    return item;
  }
  refresh(reset = false) {
    if (!reset)
      return;
    this._filterResults = void 0;
    this._filesQueryResults = this._filesQuery();
  }
  async getFilesQueryResults() {
    var _a;
    if (this._filesQueryResults === void 0) {
      this._filesQueryResults = this._filesQuery();
    }
    const results = await this._filesQueryResults;
    if (results.files == null || !this.filterable || this.filter === false || ((_a = results.filtered) == null ? void 0 : _a.filter) === this.filter) {
      return results;
    }
    if (this._filterResults === void 0) {
      this._filterResults = this.filterResults(this.filter, results);
    }
    await this._filterResults;
    return results;
  }
  async filterResults(filter, results) {
    let filterTo;
    const ref = this.filter === "left" ? this.ref2 : this.ref1;
    const mergeBase = await _container__WEBPACK_IMPORTED_MODULE_3__.Container.git.getMergeBase(this.repoPath, this.ref1 || "HEAD", this.ref2 || "HEAD");
    if (mergeBase != null) {
      const files = await _container__WEBPACK_IMPORTED_MODULE_3__.Container.git.getDiffStatus(this.uri.repoPath, `${mergeBase}..${ref}`);
      if (files != null) {
        filterTo = new Set(files.map((f) => f.fileName));
      }
    } else {
      const commit = await _container__WEBPACK_IMPORTED_MODULE_3__.Container.git.getCommit(this.uri.repoPath, ref || "HEAD");
      if ((commit == null ? void 0 : commit.files) != null) {
        filterTo = new Set(commit.files.map((f) => f.fileName));
      }
    }
    if (filterTo == null)
      return;
    results.filtered = {
      filter,
      files: results.files.filter((f) => filterTo.has(f.fileName))
    };
  }
}
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.gate)(),
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.debug)()
], ResultsFilesNode.prototype, "refresh", 1);


/***/ }),

/***/ "./src/views/nodes/searchResultsNode.ts":
/*!**********************************************!*\
  !*** ./src/views/nodes/searchResultsNode.ts ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SearchResultsNode": () => (/* binding */ SearchResultsNode)
/* harmony export */ });
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _commands__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../commands */ "./src/commands.ts");
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../container */ "./src/container.ts");
/* harmony import */ var _git_git__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../git/git */ "./src/git/git.ts");
/* harmony import */ var _git_gitUri__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../git/gitUri */ "./src/git/gitUri.ts");
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../system */ "./src/system.ts");
/* harmony import */ var _repositoryNode__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./repositoryNode */ "./src/views/nodes/repositoryNode.ts");
/* harmony import */ var _resultsCommitsNode__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./resultsCommitsNode */ "./src/views/nodes/resultsCommitsNode.ts");
/* harmony import */ var _viewNode__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./viewNode */ "./src/views/nodes/viewNode.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};









let instanceId = 0;
const _SearchResultsNode = class extends _viewNode__WEBPACK_IMPORTED_MODULE_8__.ViewNode {
  constructor(view, parent, repoPath, search, _labels, _searchQueryOrLog, _pinned = 0) {
    super(_git_gitUri__WEBPACK_IMPORTED_MODULE_4__.GitUri.fromRepoPath(repoPath), view, parent);
    this.repoPath = repoPath;
    this._labels = _labels;
    this._searchQueryOrLog = _searchQueryOrLog;
    this._pinned = _pinned;
    __publicField(this, "_instanceId");
    __publicField(this, "_order", Date.now());
    __publicField(this, "_search");
    __publicField(this, "_resultsNode");
    this._search = search;
    this._instanceId = instanceId++;
    this._order = Date.now();
  }
  static getId(repoPath, search, instanceId2) {
    return `${_repositoryNode__WEBPACK_IMPORTED_MODULE_6__.RepositoryNode.getId(repoPath)}${this.key}(${search == null ? "?" : _git_git__WEBPACK_IMPORTED_MODULE_3__.SearchPattern.toKey(search)}):${instanceId2}`;
  }
  static getPinnableId(repoPath, search) {
    return _system__WEBPACK_IMPORTED_MODULE_5__.Strings.sha1(`${repoPath}|${_git_git__WEBPACK_IMPORTED_MODULE_3__.SearchPattern.toKey(search)}`);
  }
  static is(node) {
    return node instanceof _SearchResultsNode;
  }
  get id() {
    return _SearchResultsNode.getId(this.repoPath, this.search, this._instanceId);
  }
  get canDismiss() {
    return !this.pinned;
  }
  get order() {
    return this._pinned || this._order;
  }
  get pinned() {
    return this._pinned !== 0;
  }
  get search() {
    return this._search;
  }
  ensureResults() {
    if (this._resultsNode == null) {
      let deferred;
      if (this._searchQueryOrLog == null) {
        deferred = true;
        this._searchQueryOrLog = this.getSearchQuery({
          label: this._labels.queryLabel
        });
      } else if (typeof this._searchQueryOrLog !== "function") {
        this._searchQueryOrLog = this.getSearchQuery({
          label: this._labels.queryLabel
        }, this._searchQueryOrLog);
      }
      this._resultsNode = new _resultsCommitsNode__WEBPACK_IMPORTED_MODULE_7__.ResultsCommitsNode(this.view, this, this.repoPath, this._labels.label, {
        query: this._searchQueryOrLog,
        deferred
      }, {
        expand: !this.pinned
      }, true);
    }
    return this._resultsNode;
  }
  async getChildren() {
    return this.ensureResults().getChildren();
  }
  async getTreeItem() {
    var _a;
    const item = await this.ensureResults().getTreeItem();
    item.id = this.id;
    item.contextValue = `${_viewNode__WEBPACK_IMPORTED_MODULE_8__.ContextValues.SearchResults}${this._pinned ? "+pinned" : ""}`;
    if (await _container__WEBPACK_IMPORTED_MODULE_2__.Container.git.getRepositoryCount() > 1) {
      const repo = await _container__WEBPACK_IMPORTED_MODULE_2__.Container.git.getRepository(this.repoPath);
      item.description = (_a = repo == null ? void 0 : repo.formattedName) != null ? _a : this.repoPath;
    }
    if (this._pinned) {
      item.iconPath = new vscode__WEBPACK_IMPORTED_MODULE_0__.ThemeIcon("pinned");
    }
    return item;
  }
  get hasMore() {
    return this.ensureResults().hasMore;
  }
  async loadMore(limit) {
    return this.ensureResults().loadMore(limit);
  }
  async edit(search) {
    if (search == null) {
      void await (0,_commands__WEBPACK_IMPORTED_MODULE_1__.executeGitCommand)({
        command: "search",
        prefillOnly: true,
        state: {
          repo: this.repoPath,
          ...this.search,
          showResultsInSideBar: this
        }
      });
      return;
    }
    const currentId = this.getPinnableId();
    this._search = search.pattern;
    this._labels = search.labels;
    this._searchQueryOrLog = search.log;
    this._resultsNode = void 0;
    if (this.pinned) {
      await this.view.updatePinned(currentId);
      await this.updatePinned();
    }
    void this.triggerChange(false);
    setImmediate(() => this.view.reveal(this, { expand: true, focus: true, select: true }));
  }
  refresh(reset = false) {
    var _a;
    (_a = this._resultsNode) == null ? void 0 : _a.refresh(reset);
  }
  async pin() {
    if (this.pinned)
      return;
    this._pinned = Date.now();
    await this.updatePinned();
    setImmediate(() => this.view.reveal(this, { focus: true, select: true }));
  }
  async unpin() {
    if (!this.pinned)
      return;
    this._pinned = 0;
    await this.view.updatePinned(this.getPinnableId());
    setImmediate(() => this.view.reveal(this, { focus: true, select: true }));
  }
  getPinnableId() {
    return _SearchResultsNode.getPinnableId(this.repoPath, this.search);
  }
  getSearchLabel(label, log2) {
    var _a, _b;
    if (typeof label === "string")
      return label;
    const count = (_a = log2 == null ? void 0 : log2.count) != null ? _a : 0;
    const resultsType = label.resultsType === void 0 ? { singular: "result", plural: "results" } : label.resultsType;
    return `${_system__WEBPACK_IMPORTED_MODULE_5__.Strings.pluralize(resultsType.singular, count, {
      number: ((_b = log2 == null ? void 0 : log2.hasMore) != null ? _b : false) ? `${count}+` : void 0,
      plural: resultsType.plural,
      zero: "No"
    })} ${label.label}`;
  }
  getSearchQuery(options, log2) {
    let useCacheOnce = true;
    return async (limit) => {
      var _a;
      log2 = await (log2 != null ? log2 : _container__WEBPACK_IMPORTED_MODULE_2__.Container.git.getLogForSearch(this.repoPath, this.search));
      if (!useCacheOnce && log2 != null && log2.query != null) {
        log2 = await log2.query(limit);
      }
      useCacheOnce = false;
      const results = {
        label: this.getSearchLabel(options.label, log2),
        log: log2,
        hasMore: (_a = log2 == null ? void 0 : log2.hasMore) != null ? _a : false
      };
      if (results.hasMore) {
        results.more = async (limit2) => {
          var _a2, _b, _c, _d, _e;
          results.log = (_c = await ((_b = (_a2 = results.log) == null ? void 0 : _a2.more) == null ? void 0 : _b.call(_a2, limit2))) != null ? _c : results.log;
          results.label = this.getSearchLabel(options.label, results.log);
          results.hasMore = (_e = (_d = results.log) == null ? void 0 : _d.hasMore) != null ? _e : true;
        };
      }
      return results;
    };
  }
  updatePinned() {
    return this.view.updatePinned(this.getPinnableId(), {
      type: "search",
      timestamp: this._pinned,
      path: this.repoPath,
      labels: this._labels,
      search: this.search
    });
  }
};
let SearchResultsNode = _SearchResultsNode;
__publicField(SearchResultsNode, "key", ":search-results");
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.gate)(),
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.debug)()
], SearchResultsNode.prototype, "refresh", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.log)()
], SearchResultsNode.prototype, "pin", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.log)()
], SearchResultsNode.prototype, "unpin", 1);


/***/ }),

/***/ "./src/views/nodes/stashFileNode.ts":
/*!******************************************!*\
  !*** ./src/views/nodes/stashFileNode.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "StashFileNode": () => (/* binding */ StashFileNode)
/* harmony export */ });
/* harmony import */ var _commitFileNode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./commitFileNode */ "./src/views/nodes/commitFileNode.ts");
/* harmony import */ var _viewNode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./viewNode */ "./src/views/nodes/viewNode.ts");



class StashFileNode extends _commitFileNode__WEBPACK_IMPORTED_MODULE_0__.CommitFileNode {
  constructor(view, parent, file, commit) {
    super(view, parent, file, commit);
  }
  get contextValue() {
    return `${_viewNode__WEBPACK_IMPORTED_MODULE_1__.ContextValues.File}+stashed`;
  }
}


/***/ }),

/***/ "./src/views/nodes/stashNode.ts":
/*!**************************************!*\
  !*** ./src/views/nodes/stashNode.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "StashNode": () => (/* binding */ StashNode)
/* harmony export */ });
/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! path */ "./node_modules/path-browserify/index.js");
/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../config */ "./src/config.ts");
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../container */ "./src/container.ts");
/* harmony import */ var _git_git__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../git/git */ "./src/git/git.ts");
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../system */ "./src/system.ts");
/* harmony import */ var _nodes__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../nodes */ "./src/views/nodes.ts");

var __defProp = Object.defineProperty;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};







const _StashNode = class extends _nodes__WEBPACK_IMPORTED_MODULE_6__.ViewRefNode {
  constructor(view, parent, commit) {
    super(commit.toGitUri(), view, parent);
    this.commit = commit;
  }
  static getId(repoPath, ref) {
    return `${_nodes__WEBPACK_IMPORTED_MODULE_6__.RepositoryNode.getId(repoPath)}${this.key}(${ref})`;
  }
  toClipboard() {
    return this.commit.stashName;
  }
  get id() {
    return _StashNode.getId(this.commit.repoPath, this.commit.sha);
  }
  get ref() {
    return this.commit;
  }
  async getChildren() {
    await this.commit.checkForUntrackedFiles();
    let children = this.commit.files.map((s) => new _nodes__WEBPACK_IMPORTED_MODULE_6__.StashFileNode(this.view, this, s, this.commit.toFileCommit(s)));
    if (this.view.config.files.layout !== _config__WEBPACK_IMPORTED_MODULE_2__.ViewFilesLayout.List) {
      const hierarchy = _system__WEBPACK_IMPORTED_MODULE_5__.Arrays.makeHierarchical(children, (n) => n.uri.relativePath.split("/"), (...parts) => _system__WEBPACK_IMPORTED_MODULE_5__.Strings.normalizePath(path__WEBPACK_IMPORTED_MODULE_0__.join(...parts)), this.view.config.files.compact);
      const root = new _nodes__WEBPACK_IMPORTED_MODULE_6__.FolderNode(this.view, this, this.repoPath, "", hierarchy);
      children = root.getChildren();
    } else {
      children.sort((a, b) => a.label.localeCompare(b.label, void 0, { numeric: true, sensitivity: "base" }));
    }
    return children;
  }
  getTreeItem() {
    const item = new vscode__WEBPACK_IMPORTED_MODULE_1__.TreeItem(_git_git__WEBPACK_IMPORTED_MODULE_4__.CommitFormatter.fromTemplate(this.view.config.formats.stashes.label, this.commit, {
      messageTruncateAtNewLine: true,
      dateFormat: _container__WEBPACK_IMPORTED_MODULE_3__.Container.config.defaultDateFormat
    }), vscode__WEBPACK_IMPORTED_MODULE_1__.TreeItemCollapsibleState.Collapsed);
    item.id = this.id;
    item.description = _git_git__WEBPACK_IMPORTED_MODULE_4__.CommitFormatter.fromTemplate(this.view.config.formats.stashes.description, this.commit, {
      messageTruncateAtNewLine: true,
      dateFormat: _container__WEBPACK_IMPORTED_MODULE_3__.Container.config.defaultDateFormat
    });
    item.contextValue = _nodes__WEBPACK_IMPORTED_MODULE_6__.ContextValues.Stash;
    item.tooltip = _git_git__WEBPACK_IMPORTED_MODULE_4__.CommitFormatter.fromTemplate(`\${ago} (\${date})

\${message}`, this.commit, {
      dateFormat: _container__WEBPACK_IMPORTED_MODULE_3__.Container.config.defaultDateFormat
    });
    return item;
  }
};
let StashNode = _StashNode;
__publicField(StashNode, "key", ":stash");


/***/ }),

/***/ "./src/views/nodes/stashesNode.ts":
/*!****************************************!*\
  !*** ./src/views/nodes/stashesNode.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "StashesNode": () => (/* binding */ StashesNode)
/* harmony export */ });
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../container */ "./src/container.ts");
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../system */ "./src/system.ts");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./common */ "./src/views/nodes/common.ts");
/* harmony import */ var _repositoryNode__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./repositoryNode */ "./src/views/nodes/repositoryNode.ts");
/* harmony import */ var _stashNode__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./stashNode */ "./src/views/nodes/stashNode.ts");
/* harmony import */ var _viewNode__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./viewNode */ "./src/views/nodes/viewNode.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};







const _StashesNode = class extends _viewNode__WEBPACK_IMPORTED_MODULE_6__.ViewNode {
  constructor(uri, view, parent, repo) {
    super(uri, view, parent);
    this.repo = repo;
    __publicField(this, "_children");
  }
  static getId(repoPath) {
    return `${_repositoryNode__WEBPACK_IMPORTED_MODULE_4__.RepositoryNode.getId(repoPath)}${this.key}`;
  }
  get id() {
    return _StashesNode.getId(this.repo.path);
  }
  async getChildren() {
    if (this._children == null) {
      const stash = await this.repo.getStash();
      if (stash == null)
        return [new _common__WEBPACK_IMPORTED_MODULE_3__.MessageNode(this.view, this, "No stashes could be found.")];
      this._children = [..._system__WEBPACK_IMPORTED_MODULE_2__.Iterables.map(stash.commits.values(), (c) => new _stashNode__WEBPACK_IMPORTED_MODULE_5__.StashNode(this.view, this, c))];
    }
    return this._children;
  }
  getTreeItem() {
    const item = new vscode__WEBPACK_IMPORTED_MODULE_0__.TreeItem("Stashes", vscode__WEBPACK_IMPORTED_MODULE_0__.TreeItemCollapsibleState.Collapsed);
    item.id = this.id;
    item.contextValue = _viewNode__WEBPACK_IMPORTED_MODULE_6__.ContextValues.Stashes;
    item.iconPath = {
      dark: _container__WEBPACK_IMPORTED_MODULE_1__.Container.context.asAbsolutePath("images/dark/icon-stash.svg"),
      light: _container__WEBPACK_IMPORTED_MODULE_1__.Container.context.asAbsolutePath("images/light/icon-stash.svg")
    };
    return item;
  }
  refresh() {
    this._children = void 0;
  }
};
let StashesNode = _StashesNode;
__publicField(StashesNode, "key", ":stashes");
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_2__.gate)(),
  (0,_system__WEBPACK_IMPORTED_MODULE_2__.debug)()
], StashesNode.prototype, "refresh", 1);


/***/ }),

/***/ "./src/views/nodes/statusFileNode.ts":
/*!*******************************************!*\
  !*** ./src/views/nodes/statusFileNode.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "StatusFileNode": () => (/* binding */ StatusFileNode)
/* harmony export */ });
/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! path */ "./node_modules/path-browserify/index.js");
/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _commands__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../commands */ "./src/commands.ts");
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../container */ "./src/container.ts");
/* harmony import */ var _git_git__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../git/git */ "./src/git/git.ts");
/* harmony import */ var _git_gitUri__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../git/gitUri */ "./src/git/gitUri.ts");
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../system */ "./src/system.ts");
/* harmony import */ var _fileRevisionAsCommitNode__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./fileRevisionAsCommitNode */ "./src/views/nodes/fileRevisionAsCommitNode.ts");
/* harmony import */ var _viewNode__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./viewNode */ "./src/views/nodes/viewNode.ts");

var __defProp = Object.defineProperty;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};









class StatusFileNode extends _viewNode__WEBPACK_IMPORTED_MODULE_8__.ViewNode {
  constructor(view, parent, repoPath, file, commits) {
    let hasStagedChanges = false;
    let hasUnstagedChanges = false;
    let ref = void 0;
    for (const c of commits) {
      if (c.isUncommitted) {
        if (c.isUncommittedStaged) {
          hasStagedChanges = true;
          if (!hasUnstagedChanges) {
            ref = c.sha;
          }
          break;
        } else {
          ref = void 0;
          hasUnstagedChanges = true;
        }
      } else if (hasUnstagedChanges) {
        break;
      } else {
        ref = c.sha;
        break;
      }
    }
    super(_git_gitUri__WEBPACK_IMPORTED_MODULE_5__.GitUri.fromFile(file, repoPath, ref), view, parent);
    __publicField(this, "commits");
    __publicField(this, "file");
    __publicField(this, "repoPath");
    __publicField(this, "_hasStagedChanges");
    __publicField(this, "_hasUnstagedChanges");
    __publicField(this, "_description");
    __publicField(this, "_folderName");
    __publicField(this, "_label");
    __publicField(this, "_relativePath");
    this.repoPath = repoPath;
    this.file = file;
    this.commits = commits;
    this._hasStagedChanges = hasStagedChanges;
    this._hasUnstagedChanges = hasUnstagedChanges;
  }
  toClipboard() {
    return this.fileName;
  }
  get fileName() {
    return this.file.fileName;
  }
  getChildren() {
    return this.commits.map((c) => new _fileRevisionAsCommitNode__WEBPACK_IMPORTED_MODULE_7__.FileRevisionAsCommitNode(this.view, this, this.file, c));
  }
  getTreeItem() {
    const item = new vscode__WEBPACK_IMPORTED_MODULE_1__.TreeItem(this.label, vscode__WEBPACK_IMPORTED_MODULE_1__.TreeItemCollapsibleState.None);
    item.description = this.description;
    if ((this._hasStagedChanges || this._hasUnstagedChanges) && this.commits.length === 1) {
      item.contextValue = _viewNode__WEBPACK_IMPORTED_MODULE_8__.ContextValues.File;
      if (this._hasStagedChanges) {
        item.contextValue += "+staged";
        item.tooltip = _git_git__WEBPACK_IMPORTED_MODULE_4__.StatusFileFormatter.fromTemplate(`\${file}
\${directory}/

\${status}\${ (originalPath)} in Index (staged)`, this.file);
      } else {
        item.contextValue += "+unstaged";
        item.tooltip = _git_git__WEBPACK_IMPORTED_MODULE_4__.StatusFileFormatter.fromTemplate(`\${file}
\${directory}/

\${status}\${ (originalPath)} in Working Tree`, this.file);
      }
      item.resourceUri = _git_gitUri__WEBPACK_IMPORTED_MODULE_5__.GitUri.resolveToUri(this.file.fileName, this.repoPath);
      item.iconPath = vscode__WEBPACK_IMPORTED_MODULE_1__.ThemeIcon.File;
      item.command = this.getCommand();
    } else {
      item.collapsibleState = vscode__WEBPACK_IMPORTED_MODULE_1__.TreeItemCollapsibleState.Collapsed;
      if (this._hasStagedChanges || this._hasUnstagedChanges) {
        item.contextValue = _viewNode__WEBPACK_IMPORTED_MODULE_8__.ContextValues.File;
        if (this._hasStagedChanges && this._hasUnstagedChanges) {
          item.contextValue += "+staged+unstaged";
        } else if (this._hasStagedChanges) {
          item.contextValue += "+staged";
        } else {
          item.contextValue += "+unstaged";
        }
        item.resourceUri = _git_gitUri__WEBPACK_IMPORTED_MODULE_5__.GitUri.resolveToUri(this.file.fileName, this.repoPath);
        item.iconPath = vscode__WEBPACK_IMPORTED_MODULE_1__.ThemeIcon.File;
      } else {
        item.contextValue = _viewNode__WEBPACK_IMPORTED_MODULE_8__.ContextValues.StatusFileCommits;
        const icon = _git_git__WEBPACK_IMPORTED_MODULE_4__.GitFile.getStatusIcon(this.file.status);
        item.iconPath = {
          dark: _container__WEBPACK_IMPORTED_MODULE_3__.Container.context.asAbsolutePath(path__WEBPACK_IMPORTED_MODULE_0__.join("images", "dark", icon)),
          light: _container__WEBPACK_IMPORTED_MODULE_3__.Container.context.asAbsolutePath(path__WEBPACK_IMPORTED_MODULE_0__.join("images", "light", icon))
        };
      }
      item.tooltip = _git_git__WEBPACK_IMPORTED_MODULE_4__.StatusFileFormatter.fromTemplate(`\${file}
\${directory}/

\${status}\${ (originalPath)} in ${this.getChangedIn()}`, this.file);
      item.command = this.getCommand();
    }
    this._label = void 0;
    this._description = void 0;
    return item;
  }
  get description() {
    if (this._description == null) {
      this._description = _git_git__WEBPACK_IMPORTED_MODULE_4__.StatusFileFormatter.fromTemplate(this.view.config.formats.files.description, {
        ...this.file,
        commit: this.commit
      }, {
        relativePath: this.relativePath
      });
    }
    return this._description;
  }
  get folderName() {
    if (this._folderName == null) {
      this._folderName = path__WEBPACK_IMPORTED_MODULE_0__.dirname(this.uri.relativePath);
    }
    return this._folderName;
  }
  get label() {
    if (this._label == null) {
      this._label = _git_git__WEBPACK_IMPORTED_MODULE_4__.StatusFileFormatter.fromTemplate(this.view.config.formats.files.label, {
        ...this.file,
        commit: this.commit
      }, {
        relativePath: this.relativePath
      });
    }
    return this._label;
  }
  get commit() {
    return this.commits[0];
  }
  get priority() {
    if (this._hasStagedChanges && !this._hasUnstagedChanges)
      return -3;
    if (this._hasStagedChanges)
      return -2;
    if (this._hasUnstagedChanges)
      return -1;
    return 0;
  }
  get relativePath() {
    return this._relativePath;
  }
  set relativePath(value) {
    this._relativePath = value;
    this._label = void 0;
    this._description = void 0;
  }
  getChangedIn() {
    const changedIn = [];
    let commits = 0;
    if (this._hasUnstagedChanges) {
      commits++;
      changedIn.push("Working Tree");
    }
    if (this._hasStagedChanges) {
      commits++;
      changedIn.push("Index (staged)");
    }
    if (this.commits.length > commits) {
      commits = this.commits.length - commits;
    }
    if (commits > 0) {
      changedIn.push(_system__WEBPACK_IMPORTED_MODULE_6__.Strings.pluralize("commit", commits));
    }
    if (changedIn.length > 2) {
      changedIn[changedIn.length - 1] = `and ${changedIn[changedIn.length - 1]}`;
    }
    return changedIn.join(changedIn.length > 2 ? ", " : " and ");
  }
  getCommand() {
    if ((this._hasStagedChanges || this._hasUnstagedChanges) && this.commits.length === 1) {
      const commandArgs2 = {
        commit: this.commit,
        uri: _git_gitUri__WEBPACK_IMPORTED_MODULE_5__.GitUri.fromFile(this.file, this.repoPath),
        line: 0,
        showOptions: {
          preserveFocus: true,
          preview: true
        }
      };
      return {
        title: "Open Changes with Previous Revision",
        command: _commands__WEBPACK_IMPORTED_MODULE_2__.Commands.DiffWithPrevious,
        arguments: [void 0, commandArgs2]
      };
    }
    const commit = this.commits[this.commits.length - 1];
    const file = commit.findFile(this.file.fileName);
    const commandArgs = {
      lhs: {
        sha: `${commit.sha}^`,
        uri: _git_gitUri__WEBPACK_IMPORTED_MODULE_5__.GitUri.fromFile(file, this.repoPath, void 0, true)
      },
      rhs: {
        sha: "",
        uri: _git_gitUri__WEBPACK_IMPORTED_MODULE_5__.GitUri.fromFile(this.file, this.repoPath)
      },
      repoPath: this.repoPath,
      line: 0,
      showOptions: {
        preserveFocus: true,
        preview: true
      }
    };
    return {
      title: "Open Changes",
      command: _commands__WEBPACK_IMPORTED_MODULE_2__.Commands.DiffWith,
      arguments: [commandArgs]
    };
  }
}


/***/ }),

/***/ "./src/views/nodes/statusFilesNode.ts":
/*!********************************************!*\
  !*** ./src/views/nodes/statusFilesNode.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "StatusFilesNode": () => (/* binding */ StatusFilesNode)
/* harmony export */ });
/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! path */ "./node_modules/path-browserify/index.js");
/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _configuration__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../configuration */ "./src/configuration.ts");
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../container */ "./src/container.ts");
/* harmony import */ var _git_git__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../git/git */ "./src/git/git.ts");
/* harmony import */ var _git_gitUri__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../git/gitUri */ "./src/git/gitUri.ts");
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../system */ "./src/system.ts");
/* harmony import */ var _folderNode__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./folderNode */ "./src/views/nodes/folderNode.ts");
/* harmony import */ var _repositoryNode__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./repositoryNode */ "./src/views/nodes/repositoryNode.ts");
/* harmony import */ var _statusFileNode__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./statusFileNode */ "./src/views/nodes/statusFileNode.ts");
/* harmony import */ var _viewNode__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./viewNode */ "./src/views/nodes/viewNode.ts");

var __defProp = Object.defineProperty;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};











const _StatusFilesNode = class extends _viewNode__WEBPACK_IMPORTED_MODULE_10__.ViewNode {
  constructor(view, parent, status, range) {
    super(_git_gitUri__WEBPACK_IMPORTED_MODULE_5__.GitUri.fromRepoPath(status.repoPath), view, parent);
    this.status = status;
    this.range = range;
    __publicField(this, "repoPath");
    this.repoPath = status.repoPath;
  }
  static getId(repoPath) {
    return `${_repositoryNode__WEBPACK_IMPORTED_MODULE_8__.RepositoryNode.getId(repoPath)}${this.key}`;
  }
  get id() {
    return _StatusFilesNode.getId(this.repoPath);
  }
  async getChildren() {
    let files = [];
    const repoPath = this.repoPath;
    let log;
    if (this.range != null) {
      log = await _container__WEBPACK_IMPORTED_MODULE_3__.Container.git.getLog(repoPath, { limit: 0, ref: this.range });
      if (log != null) {
        files = [
          ..._system__WEBPACK_IMPORTED_MODULE_6__.Iterables.flatMap(log.commits.values(), (c) => c.files.map((s) => {
            const file = { ...s, commit: c };
            return file;
          }))
        ];
      }
    }
    if (this.view.config.includeWorkingTree && this.status.files.length !== 0) {
      files.splice(0, 0, ..._system__WEBPACK_IMPORTED_MODULE_6__.Iterables.flatMap(this.status.files, (s) => {
        if (s.workingTreeStatus != null && s.indexStatus != null) {
          const older = new Date();
          older.setMilliseconds(older.getMilliseconds() - 1);
          return [
            this.toStatusFile(s, _git_git__WEBPACK_IMPORTED_MODULE_4__.GitRevision.uncommitted, _git_git__WEBPACK_IMPORTED_MODULE_4__.GitRevision.uncommittedStaged),
            this.toStatusFile(s, _git_git__WEBPACK_IMPORTED_MODULE_4__.GitRevision.uncommittedStaged, "HEAD", older)
          ];
        } else if (s.indexStatus != null) {
          return [this.toStatusFile(s, _git_git__WEBPACK_IMPORTED_MODULE_4__.GitRevision.uncommittedStaged, "HEAD")];
        }
        return [this.toStatusFile(s, _git_git__WEBPACK_IMPORTED_MODULE_4__.GitRevision.uncommitted, "HEAD")];
      }));
    }
    files.sort((a, b) => b.commit.date.getTime() - a.commit.date.getTime());
    const groups = _system__WEBPACK_IMPORTED_MODULE_6__.Arrays.groupBy(files, (s) => s.fileName);
    let children = Object.values(groups).map((files2) => new _statusFileNode__WEBPACK_IMPORTED_MODULE_9__.StatusFileNode(this.view, this, repoPath, files2[files2.length - 1], files2.map((s) => s.commit)));
    if (this.view.config.files.layout !== _configuration__WEBPACK_IMPORTED_MODULE_2__.ViewFilesLayout.List) {
      const hierarchy = _system__WEBPACK_IMPORTED_MODULE_6__.Arrays.makeHierarchical(children, (n) => n.uri.relativePath.split("/"), (...parts) => _system__WEBPACK_IMPORTED_MODULE_6__.Strings.normalizePath(path__WEBPACK_IMPORTED_MODULE_0__.join(...parts)), this.view.config.files.compact);
      const root = new _folderNode__WEBPACK_IMPORTED_MODULE_7__.FolderNode(this.view, this, repoPath, "", hierarchy, true);
      children = root.getChildren();
    } else {
      children.sort((a, b) => a.priority - b.priority || a.label.localeCompare(b.label, void 0, { numeric: true, sensitivity: "base" }));
    }
    return children;
  }
  async getTreeItem() {
    let files = this.view.config.includeWorkingTree ? this.status.files.length : 0;
    if (this.range != null) {
      if (this.status.upstream != null && this.status.state.ahead > 0) {
        if (files > 0) {
          const aheadFiles = await _container__WEBPACK_IMPORTED_MODULE_3__.Container.git.getDiffStatus(this.repoPath, `${this.status.upstream}...`);
          if (aheadFiles != null) {
            const uniques = new Set();
            for (const f of this.status.files) {
              uniques.add(f.fileName);
            }
            for (const f of aheadFiles) {
              uniques.add(f.fileName);
            }
            files = uniques.size;
          }
        } else {
          const stats = await _container__WEBPACK_IMPORTED_MODULE_3__.Container.git.getChangedFilesCount(this.repoPath, `${this.status.upstream}...`);
          if (stats != null) {
            files += stats.files;
          } else {
            files = -1;
          }
        }
      }
    }
    const label = files === -1 ? "?? files changed" : `${_system__WEBPACK_IMPORTED_MODULE_6__.Strings.pluralize("file", files)} changed`;
    const item = new vscode__WEBPACK_IMPORTED_MODULE_1__.TreeItem(label, vscode__WEBPACK_IMPORTED_MODULE_1__.TreeItemCollapsibleState.Collapsed);
    item.id = this.id;
    item.contextValue = _viewNode__WEBPACK_IMPORTED_MODULE_10__.ContextValues.StatusFiles;
    item.iconPath = {
      dark: _container__WEBPACK_IMPORTED_MODULE_3__.Container.context.asAbsolutePath("images/dark/icon-diff.svg"),
      light: _container__WEBPACK_IMPORTED_MODULE_3__.Container.context.asAbsolutePath("images/light/icon-diff.svg")
    };
    return item;
  }
  toStatusFile(file, ref, previousRef, date) {
    return {
      status: file.status,
      repoPath: file.repoPath,
      indexStatus: file.indexStatus,
      workingTreeStatus: file.workingTreeStatus,
      fileName: file.fileName,
      originalFileName: file.originalFileName,
      commit: new _git_git__WEBPACK_IMPORTED_MODULE_4__.GitLogCommit(_git_git__WEBPACK_IMPORTED_MODULE_4__.GitCommitType.LogFile, file.repoPath, ref, "You", void 0, date != null ? date : new Date(), date != null ? date : new Date(), "", file.fileName, [file], file.status, file.originalFileName, previousRef, file.fileName)
    };
  }
};
let StatusFilesNode = _StatusFilesNode;
__publicField(StatusFilesNode, "key", ":status-files");


/***/ }),

/***/ "./src/views/nodes/tagNode.ts":
/*!************************************!*\
  !*** ./src/views/nodes/tagNode.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TagNode": () => (/* binding */ TagNode)
/* harmony export */ });
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _configuration__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../configuration */ "./src/configuration.ts");
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../constants */ "./src/constants.ts");
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../container */ "./src/container.ts");
/* harmony import */ var _emojis__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../emojis */ "./src/emojis.ts");
/* harmony import */ var _git_git__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../git/git */ "./src/git/git.ts");
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../system */ "./src/system.ts");
/* harmony import */ var _commitNode__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./commitNode */ "./src/views/nodes/commitNode.ts");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./common */ "./src/views/nodes/common.ts");
/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./helpers */ "./src/views/nodes/helpers.ts");
/* harmony import */ var _repositoryNode__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./repositoryNode */ "./src/views/nodes/repositoryNode.ts");
/* harmony import */ var _viewNode__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./viewNode */ "./src/views/nodes/viewNode.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};












const _TagNode = class extends _viewNode__WEBPACK_IMPORTED_MODULE_11__.ViewRefNode {
  constructor(uri, view, parent, tag) {
    super(uri, view, parent);
    this.tag = tag;
    __publicField(this, "_log");
    __publicField(this, "limit", this.view.getNodeLastKnownLimit(this));
  }
  static getId(repoPath, name) {
    return `${_repositoryNode__WEBPACK_IMPORTED_MODULE_10__.RepositoryNode.getId(repoPath)}${this.key}(${name})`;
  }
  toClipboard() {
    return this.tag.name;
  }
  get id() {
    return _TagNode.getId(this.tag.repoPath, this.tag.name);
  }
  get label() {
    return this.view.config.branches.layout === _configuration__WEBPACK_IMPORTED_MODULE_1__.ViewBranchesLayout.Tree ? this.tag.getBasename() : this.tag.name;
  }
  get ref() {
    return this.tag;
  }
  async getChildren() {
    const log = await this.getLog();
    if (log == null)
      return [new _common__WEBPACK_IMPORTED_MODULE_8__.MessageNode(this.view, this, "No commits could be found.")];
    const getBranchAndTagTips = await _container__WEBPACK_IMPORTED_MODULE_3__.Container.git.getBranchesAndTagsTipsFn(this.uri.repoPath, this.tag.name);
    const children = [
      ...(0,_helpers__WEBPACK_IMPORTED_MODULE_9__.insertDateMarkers)(_system__WEBPACK_IMPORTED_MODULE_6__.Iterables.map(log.commits.values(), (c) => new _commitNode__WEBPACK_IMPORTED_MODULE_7__.CommitNode(this.view, this, c, void 0, void 0, getBranchAndTagTips)), this)
    ];
    if (log.hasMore) {
      children.push(new _common__WEBPACK_IMPORTED_MODULE_8__.LoadMoreNode(this.view, this, children[children.length - 1], void 0, () => _container__WEBPACK_IMPORTED_MODULE_3__.Container.git.getCommitCount(this.tag.repoPath, this.tag.name)));
    }
    return children;
  }
  getTreeItem() {
    const item = new vscode__WEBPACK_IMPORTED_MODULE_0__.TreeItem(this.label, vscode__WEBPACK_IMPORTED_MODULE_0__.TreeItemCollapsibleState.Collapsed);
    item.id = this.id;
    item.contextValue = _viewNode__WEBPACK_IMPORTED_MODULE_11__.ContextValues.Tag;
    item.description = (0,_emojis__WEBPACK_IMPORTED_MODULE_4__.emojify)(this.tag.message);
    item.tooltip = `${this.tag.name}${_system__WEBPACK_IMPORTED_MODULE_6__.Strings.pad(_constants__WEBPACK_IMPORTED_MODULE_2__.GlyphChars.Dash, 2, 2)}${_git_git__WEBPACK_IMPORTED_MODULE_5__.GitRevision.shorten(this.tag.sha, {
      force: true
    })}
${this.tag.formatDateFromNow()} (${this.tag.formatDate(_git_git__WEBPACK_IMPORTED_MODULE_5__.TagDateFormatting.dateFormat)})

${(0,_emojis__WEBPACK_IMPORTED_MODULE_4__.emojify)(this.tag.message)}${this.tag.commitDate != null && this.tag.date !== this.tag.commitDate ? `
${this.tag.formatCommitDateFromNow()} (${this.tag.formatCommitDate(_git_git__WEBPACK_IMPORTED_MODULE_5__.TagDateFormatting.dateFormat)})` : ""}`;
    return item;
  }
  refresh(reset) {
    if (reset) {
      this._log = void 0;
    }
  }
  async getLog() {
    var _a;
    if (this._log == null) {
      this._log = await _container__WEBPACK_IMPORTED_MODULE_3__.Container.git.getLog(this.uri.repoPath, {
        limit: (_a = this.limit) != null ? _a : this.view.config.defaultItemLimit,
        ref: this.tag.name
      });
    }
    return this._log;
  }
  get hasMore() {
    var _a, _b;
    return (_b = (_a = this._log) == null ? void 0 : _a.hasMore) != null ? _b : true;
  }
  async loadMore(limit) {
    var _a;
    let log = await vscode__WEBPACK_IMPORTED_MODULE_0__.window.withProgress({
      location: { viewId: this.view.id }
    }, () => this.getLog());
    if (log == null || !log.hasMore)
      return;
    log = await ((_a = log.more) == null ? void 0 : _a.call(log, limit != null ? limit : this.view.config.pageItemLimit));
    if (this._log === log)
      return;
    this._log = log;
    this.limit = log == null ? void 0 : log.count;
    void this.triggerChange(false);
  }
};
let TagNode = _TagNode;
__publicField(TagNode, "key", ":tag");
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_6__.gate)(),
  (0,_system__WEBPACK_IMPORTED_MODULE_6__.debug)()
], TagNode.prototype, "refresh", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_6__.gate)()
], TagNode.prototype, "loadMore", 1);


/***/ }),

/***/ "./src/views/nodes/tagsNode.ts":
/*!*************************************!*\
  !*** ./src/views/nodes/tagsNode.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TagsNode": () => (/* binding */ TagsNode)
/* harmony export */ });
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _configuration__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../configuration */ "./src/configuration.ts");
/* harmony import */ var _git_gitUri__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../git/gitUri */ "./src/git/gitUri.ts");
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../system */ "./src/system.ts");
/* harmony import */ var _branchOrTagFolderNode__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./branchOrTagFolderNode */ "./src/views/nodes/branchOrTagFolderNode.ts");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./common */ "./src/views/nodes/common.ts");
/* harmony import */ var _repositoryNode__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./repositoryNode */ "./src/views/nodes/repositoryNode.ts");
/* harmony import */ var _tagNode__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./tagNode */ "./src/views/nodes/tagNode.ts");
/* harmony import */ var _viewNode__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./viewNode */ "./src/views/nodes/viewNode.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};









const _TagsNode = class extends _viewNode__WEBPACK_IMPORTED_MODULE_8__.ViewNode {
  constructor(uri, view, parent, repo) {
    super(uri, view, parent);
    this.repo = repo;
    __publicField(this, "_children");
  }
  static getId(repoPath) {
    return `${_repositoryNode__WEBPACK_IMPORTED_MODULE_6__.RepositoryNode.getId(repoPath)}${this.key}`;
  }
  get id() {
    return _TagsNode.getId(this.repo.path);
  }
  get repoPath() {
    return this.repo.path;
  }
  async getChildren() {
    if (this._children == null) {
      const tags = await this.repo.getTags({ sort: true });
      if (tags.length === 0)
        return [new _common__WEBPACK_IMPORTED_MODULE_5__.MessageNode(this.view, this, "No tags could be found.")];
      const tagNodes = tags.map((t) => new _tagNode__WEBPACK_IMPORTED_MODULE_7__.TagNode(_git_gitUri__WEBPACK_IMPORTED_MODULE_2__.GitUri.fromRepoPath(this.uri.repoPath, t.ref), this.view, this, t));
      if (this.view.config.branches.layout === _configuration__WEBPACK_IMPORTED_MODULE_1__.ViewBranchesLayout.List)
        return tagNodes;
      const hierarchy = _system__WEBPACK_IMPORTED_MODULE_3__.Arrays.makeHierarchical(tagNodes, (n) => n.tag.name.split("/"), (...paths) => paths.join("/"), this.view.config.files.compact);
      const root = new _branchOrTagFolderNode__WEBPACK_IMPORTED_MODULE_4__.BranchOrTagFolderNode(this.view, this, "tag", this.repo.path, "", void 0, hierarchy, "tags");
      this._children = root.getChildren();
    }
    return this._children;
  }
  getTreeItem() {
    const item = new vscode__WEBPACK_IMPORTED_MODULE_0__.TreeItem("Tags", vscode__WEBPACK_IMPORTED_MODULE_0__.TreeItemCollapsibleState.Collapsed);
    item.id = this.id;
    item.contextValue = _viewNode__WEBPACK_IMPORTED_MODULE_8__.ContextValues.Tags;
    item.iconPath = new vscode__WEBPACK_IMPORTED_MODULE_0__.ThemeIcon("tag");
    return item;
  }
  refresh() {
    this._children = void 0;
  }
};
let TagsNode = _TagsNode;
__publicField(TagsNode, "key", ":tags");
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_3__.gate)(),
  (0,_system__WEBPACK_IMPORTED_MODULE_3__.debug)()
], TagsNode.prototype, "refresh", 1);


/***/ }),

/***/ "./src/views/nodes/viewNode.ts":
/*!*************************************!*\
  !*** ./src/views/nodes/viewNode.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ContextValues": () => (/* binding */ ContextValues),
/* harmony export */   "unknownGitUri": () => (/* binding */ unknownGitUri),
/* harmony export */   "ViewNode": () => (/* binding */ ViewNode),
/* harmony export */   "ViewRefNode": () => (/* binding */ ViewRefNode),
/* harmony export */   "ViewRefFileNode": () => (/* binding */ ViewRefFileNode),
/* harmony export */   "PageableViewNode": () => (/* binding */ PageableViewNode),
/* harmony export */   "SubscribeableViewNode": () => (/* binding */ SubscribeableViewNode),
/* harmony export */   "RepositoryFolderNode": () => (/* binding */ RepositoryFolderNode),
/* harmony export */   "canAutoRefreshView": () => (/* binding */ canAutoRefreshView),
/* harmony export */   "canClearNode": () => (/* binding */ canClearNode),
/* harmony export */   "canEditNode": () => (/* binding */ canEditNode),
/* harmony export */   "canViewDismissNode": () => (/* binding */ canViewDismissNode)
/* harmony export */ });
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../constants */ "./src/constants.ts");
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../container */ "./src/container.ts");
/* harmony import */ var _git_git__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../git/git */ "./src/git/git.ts");
/* harmony import */ var _git_gitUri__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../git/gitUri */ "./src/git/gitUri.ts");
/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../logger */ "./src/logger.ts");
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../system */ "./src/system.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};







var ContextValues;
(function(ContextValues2) {
  ContextValues2["ActiveFileHistory"] = "gitlens:history:active:file";
  ContextValues2["ActiveLineHistory"] = "gitlens:history:active:line";
  ContextValues2["Branch"] = "gitlens:branch";
  ContextValues2["Branches"] = "gitlens:branches";
  ContextValues2["BranchStatusAheadOfUpstream"] = "gitlens:status-branch:upstream:ahead";
  ContextValues2["BranchStatusBehindUpstream"] = "gitlens:status-branch:upstream:behind";
  ContextValues2["BranchStatusNoUpstream"] = "gitlens:status-branch:upstream:none";
  ContextValues2["BranchStatusSameAsUpstream"] = "gitlens:status-branch:upstream:same";
  ContextValues2["BranchStatusFiles"] = "gitlens:status-branch:files";
  ContextValues2["Commit"] = "gitlens:commit";
  ContextValues2["Commits"] = "gitlens:commits";
  ContextValues2["Compare"] = "gitlens:compare";
  ContextValues2["CompareBranch"] = "gitlens:compare:branch";
  ContextValues2["ComparePicker"] = "gitlens:compare:picker";
  ContextValues2["ComparePickerWithRef"] = "gitlens:compare:picker:ref";
  ContextValues2["CompareResults"] = "gitlens:compare:results";
  ContextValues2["CompareResultsCommits"] = "gitlens:compare:results:commits";
  ContextValues2["Contributor"] = "gitlens:contributor";
  ContextValues2["Contributors"] = "gitlens:contributors";
  ContextValues2["DateMarker"] = "gitlens:date-marker";
  ContextValues2["File"] = "gitlens:file";
  ContextValues2["FileHistory"] = "gitlens:history:file";
  ContextValues2["Folder"] = "gitlens:folder";
  ContextValues2["LineHistory"] = "gitlens:history:line";
  ContextValues2["Merge"] = "gitlens:merge";
  ContextValues2["MergeConflictCurrentChanges"] = "gitlens:merge-conflict:current";
  ContextValues2["MergeConflictIncomingChanges"] = "gitlens:merge-conflict:incoming";
  ContextValues2["Message"] = "gitlens:message";
  ContextValues2["Pager"] = "gitlens:pager";
  ContextValues2["PullRequest"] = "gitlens:pullrequest";
  ContextValues2["Rebase"] = "gitlens:rebase";
  ContextValues2["Reflog"] = "gitlens:reflog";
  ContextValues2["ReflogRecord"] = "gitlens:reflog-record";
  ContextValues2["Remote"] = "gitlens:remote";
  ContextValues2["Remotes"] = "gitlens:remotes";
  ContextValues2["Repositories"] = "gitlens:repositories";
  ContextValues2["Repository"] = "gitlens:repository";
  ContextValues2["RepositoryFolder"] = "gitlens:repo-folder";
  ContextValues2["ResultsFile"] = "gitlens:file:results";
  ContextValues2["ResultsFiles"] = "gitlens:results:files";
  ContextValues2["SearchAndCompare"] = "gitlens:searchAndCompare";
  ContextValues2["SearchResults"] = "gitlens:search:results";
  ContextValues2["SearchResultsCommits"] = "gitlens:search:results:commits";
  ContextValues2["Stash"] = "gitlens:stash";
  ContextValues2["Stashes"] = "gitlens:stashes";
  ContextValues2["StatusFileCommits"] = "gitlens:status:file:commits";
  ContextValues2["StatusFiles"] = "gitlens:status:files";
  ContextValues2["StatusAheadOfUpstream"] = "gitlens:status:upstream:ahead";
  ContextValues2["StatusBehindUpstream"] = "gitlens:status:upstream:behind";
  ContextValues2["StatusNoUpstream"] = "gitlens:status:upstream:none";
  ContextValues2["StatusSameAsUpstream"] = "gitlens:status:upstream:same";
  ContextValues2["Tag"] = "gitlens:tag";
  ContextValues2["Tags"] = "gitlens:tags";
})(ContextValues || (ContextValues = {}));
const unknownGitUri = new _git_gitUri__WEBPACK_IMPORTED_MODULE_4__.GitUri();
let ViewNode = class {
  constructor(uri, view, parent) {
    this.view = view;
    this.parent = parent;
    __publicField(this, "splatted", false);
    __publicField(this, "_uri");
    this._uri = uri;
  }
  static is(node) {
    return node instanceof ViewNode;
  }
  toString() {
    return `${_logger__WEBPACK_IMPORTED_MODULE_5__.Logger.toLoggableName(this)}${this.id != null ? `(${this.id})` : ""}`;
  }
  get uri() {
    return this._uri;
  }
  getParent() {
    var _a, _b;
    return ((_a = this.parent) == null ? void 0 : _a.splatted) ? (_b = this.parent) == null ? void 0 : _b.getParent() : this.parent;
  }
  resolveTreeItem(item) {
    return item;
  }
  getCommand() {
    return void 0;
  }
  triggerChange(reset = false, force = false, avoidSelf) {
    if (this.splatted && this.parent != null && this.parent !== avoidSelf) {
      return this.parent.triggerChange(reset, force);
    }
    return this.view.refreshNode(this, reset, force);
  }
};
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_6__.gate)((reset = false, force = false, avoidSelf) => JSON.stringify([reset, force, avoidSelf == null ? void 0 : avoidSelf.toString()])),
  (0,_system__WEBPACK_IMPORTED_MODULE_6__.debug)()
], ViewNode.prototype, "triggerChange", 1);
ViewNode = __decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_6__.logName)((c, name) => `${name}${c.id != null ? `(${c.id})` : ""}`)
], ViewNode);
class ViewRefNode extends ViewNode {
  get repoPath() {
    return this.uri.repoPath;
  }
  toString() {
    return `${super.toString()}:${_git_git__WEBPACK_IMPORTED_MODULE_3__.GitReference.toString(this.ref, false)}`;
  }
}
class ViewRefFileNode extends ViewRefNode {
  toString() {
    return `${super.toString()}:${this.fileName}`;
  }
}
var PageableViewNode;
(function(PageableViewNode2) {
  function is(node) {
    return _system__WEBPACK_IMPORTED_MODULE_6__.Functions.is(node, "loadMore");
  }
  PageableViewNode2.is = is;
})(PageableViewNode || (PageableViewNode = {}));
class SubscribeableViewNode extends ViewNode {
  constructor(uri, view, parent) {
    super(uri, view, parent);
    __publicField(this, "disposable");
    __publicField(this, "subscription");
    __publicField(this, "loaded", false);
    __publicField(this, "_canSubscribe", true);
    __publicField(this, "collapsibleState");
    const disposables = [
      this.view.onDidChangeVisibility(this.onVisibilityChanged, this),
      this.view.onDidChangeNodeCollapsibleState(this.onNodeCollapsibleStateChanged, this)
    ];
    if (canAutoRefreshView(this.view)) {
      disposables.push(this.view.onDidChangeAutoRefresh(this.onAutoRefreshChanged, this));
    }
    const getTreeItem = this.getTreeItem;
    this.getTreeItem = function() {
      this.loaded = true;
      void this.ensureSubscription();
      return getTreeItem.apply(this);
    };
    const getChildren = this.getChildren;
    this.getChildren = function() {
      this.loaded = true;
      void this.ensureSubscription();
      return getChildren.apply(this);
    };
    this.disposable = vscode__WEBPACK_IMPORTED_MODULE_0__.Disposable.from(...disposables);
  }
  dispose() {
    var _a;
    void this.unsubscribe();
    (_a = this.disposable) == null ? void 0 : _a.dispose();
  }
  async triggerChange(reset = false, force = false) {
    if (!this.loaded)
      return;
    await super.triggerChange(reset, force);
  }
  get canSubscribe() {
    return this._canSubscribe;
  }
  set canSubscribe(value) {
    if (this._canSubscribe === value)
      return;
    this._canSubscribe = value;
    void this.ensureSubscription();
    if (value) {
      void this.triggerChange();
    }
  }
  get requiresResetOnVisible() {
    return false;
  }
  async unsubscribe() {
    var _a;
    if (this.subscription != null) {
      const subscriptionPromise = this.subscription;
      this.subscription = void 0;
      (_a = await subscriptionPromise) == null ? void 0 : _a.dispose();
    }
  }
  onAutoRefreshChanged() {
    this.onVisibilityChanged({ visible: this.view.visible });
  }
  onNodeCollapsibleStateChanged(e) {
    if (e.element === this) {
      this.collapsibleState = e.state;
      if (this.onCollapsibleStateChanged !== void 0) {
        this.onCollapsibleStateChanged(e.state);
      }
    } else if (e.element === this.parent) {
      if (this.onParentCollapsibleStateChanged !== void 0) {
        this.onParentCollapsibleStateChanged(e.state);
      }
    }
  }
  onVisibilityChanged(e) {
    void this.ensureSubscription();
    if (e.visible) {
      void this.triggerChange(this.requiresResetOnVisible);
    }
  }
  async ensureSubscription() {
    if (!this.canSubscribe || !this.view.visible || canAutoRefreshView(this.view) && !this.view.autoRefresh) {
      await this.unsubscribe();
      return;
    }
    if (this.subscription != null)
      return;
    this.subscription = Promise.resolve(this.subscribe());
    await this.subscription;
  }
  async resetSubscription() {
    await this.unsubscribe();
    await this.ensureSubscription();
  }
}
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_6__.debug)()
], SubscribeableViewNode.prototype, "dispose", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_6__.gate)(),
  (0,_system__WEBPACK_IMPORTED_MODULE_6__.debug)()
], SubscribeableViewNode.prototype, "triggerChange", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_6__.debug)()
], SubscribeableViewNode.prototype, "unsubscribe", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_6__.debug)()
], SubscribeableViewNode.prototype, "onAutoRefreshChanged", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_6__.debug)()
], SubscribeableViewNode.prototype, "onVisibilityChanged", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_6__.gate)(),
  (0,_system__WEBPACK_IMPORTED_MODULE_6__.debug)()
], SubscribeableViewNode.prototype, "ensureSubscription", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_6__.gate)(),
  (0,_system__WEBPACK_IMPORTED_MODULE_6__.debug)()
], SubscribeableViewNode.prototype, "resetSubscription", 1);
const _RepositoryFolderNode = class extends SubscribeableViewNode {
  constructor(uri, view, parent, repo, splatted, options) {
    super(uri, view, parent);
    this.repo = repo;
    this.options = options;
    __publicField(this, "splatted", true);
    __publicField(this, "child");
    __publicField(this, "_repoUpdatedAt", this.repo.updatedAt);
    this.splatted = splatted;
  }
  static getId(repoPath) {
    return `gitlens${this.key}(${repoPath})`;
  }
  toClipboard() {
    return this.repo.path;
  }
  get id() {
    return _RepositoryFolderNode.getId(this.repo.path);
  }
  async getTreeItem() {
    var _a, _b, _c, _d, _e, _f, _g, _h, _i, _j;
    this.splatted = false;
    let expand = this.repo.starred;
    const [active, branch] = await Promise.all([
      expand ? void 0 : _container__WEBPACK_IMPORTED_MODULE_2__.Container.git.isActiveRepoPath(this.uri.repoPath),
      this.repo.getBranch()
    ]);
    const ahead = ((_a = branch == null ? void 0 : branch.state.ahead) != null ? _a : 0) > 0;
    const behind = ((_b = branch == null ? void 0 : branch.state.behind) != null ? _b : 0) > 0;
    if (!expand && (active || ahead || behind)) {
      expand = true;
    }
    const item = new vscode__WEBPACK_IMPORTED_MODULE_0__.TreeItem((_d = (_c = this.repo.formattedName) != null ? _c : this.uri.repoPath) != null ? _d : "", expand ? vscode__WEBPACK_IMPORTED_MODULE_0__.TreeItemCollapsibleState.Expanded : vscode__WEBPACK_IMPORTED_MODULE_0__.TreeItemCollapsibleState.Collapsed);
    item.contextValue = `${ContextValues.RepositoryFolder}${this.repo.starred ? "+starred" : ""}`;
    if (ahead) {
      item.contextValue += "+ahead";
    }
    if (behind) {
      item.contextValue += "+behind";
    }
    if (branch != null && ((_e = this.options) == null ? void 0 : _e.showBranchAndLastFetched)) {
      const lastFetched = (_f = await this.repo.getLastFetched()) != null ? _f : 0;
      const status = branch.getTrackingStatus();
      item.description = `${this.repo.supportsChangeEvents ? "" : _system__WEBPACK_IMPORTED_MODULE_6__.Strings.pad(_constants__WEBPACK_IMPORTED_MODULE_1__.GlyphChars.Warning, 1, 2)}${status ? `${status}${_system__WEBPACK_IMPORTED_MODULE_6__.Strings.pad(_constants__WEBPACK_IMPORTED_MODULE_1__.GlyphChars.Dot, 1, 1)}` : ""}${branch.name}${lastFetched ? `${_system__WEBPACK_IMPORTED_MODULE_6__.Strings.pad(_constants__WEBPACK_IMPORTED_MODULE_1__.GlyphChars.Dot, 1, 1)}Last fetched ${_git_git__WEBPACK_IMPORTED_MODULE_3__.Repository.formatLastFetched(lastFetched)}` : ""}`;
      let providerName;
      if (branch.upstream != null) {
        const providers = _git_git__WEBPACK_IMPORTED_MODULE_3__.GitRemote.getHighlanderProviders(await _container__WEBPACK_IMPORTED_MODULE_2__.Container.git.getRemotes(branch.repoPath));
        providerName = (providers == null ? void 0 : providers.length) ? providers[0].name : void 0;
      } else {
        const remote = await branch.getRemote();
        providerName = (_g = remote == null ? void 0 : remote.provider) == null ? void 0 : _g.name;
      }
      item.tooltip = new vscode__WEBPACK_IMPORTED_MODULE_0__.MarkdownString(`${(_i = (_h = this.repo.formattedName) != null ? _h : this.uri.repoPath) != null ? _i : ""}${lastFetched ? `${_system__WEBPACK_IMPORTED_MODULE_6__.Strings.pad(_constants__WEBPACK_IMPORTED_MODULE_1__.GlyphChars.Dash, 2, 2)}Last fetched ${_git_git__WEBPACK_IMPORTED_MODULE_3__.Repository.formatLastFetched(lastFetched, false)}` : ""}${this.repo.formattedName ? `
${this.uri.repoPath}` : ""}

Current branch $(git-branch) ${branch.name}${branch.upstream != null ? ` is ${branch.getTrackingStatus({
        empty: branch.upstream.missing ? `missing upstream $(git-branch) ${branch.upstream.name}` : `up to date with $(git-branch) ${branch.upstream.name}${providerName ? ` on ${providerName}` : ""}`,
        expand: true,
        icons: true,
        separator: ", ",
        suffix: ` $(git-branch) ${branch.upstream.name}${providerName ? ` on ${providerName}` : ""}`
      })}` : `hasn't been published to ${providerName != null ? providerName : "a remote"}`}${this.repo.supportsChangeEvents ? "" : `

${_constants__WEBPACK_IMPORTED_MODULE_1__.GlyphChars.Warning} Unable to automatically detect repository changes`}`, true);
    } else {
      item.description = this.repo.supportsChangeEvents ? void 0 : _system__WEBPACK_IMPORTED_MODULE_6__.Strings.pad(_constants__WEBPACK_IMPORTED_MODULE_1__.GlyphChars.Warning, 1, 0);
      item.tooltip = `${this.repo.formattedName ? `${this.repo.formattedName}
${this.uri.repoPath}` : (_j = this.uri.repoPath) != null ? _j : ""}${this.repo.supportsChangeEvents ? "" : `

${_constants__WEBPACK_IMPORTED_MODULE_1__.GlyphChars.Warning} Unable to automatically detect repository changes`}`;
    }
    return item;
  }
  async getSplattedChild() {
    if (this.child == null) {
      await this.getChildren();
    }
    return this.child;
  }
  async refresh(reset = false) {
    var _a;
    await ((_a = this.child) == null ? void 0 : _a.triggerChange(reset, false, this));
    await this.ensureSubscription();
  }
  async star() {
    await this.repo.star();
  }
  async unstar() {
    await this.repo.unstar();
  }
  subscribe() {
    return this.repo.onDidChange(this.onRepositoryChanged, this);
  }
  get requiresResetOnVisible() {
    return this._repoUpdatedAt !== this.repo.updatedAt;
  }
  onRepositoryChanged(e) {
    var _a, _b, _c;
    this._repoUpdatedAt = this.repo.updatedAt;
    if (e.changed(_git_git__WEBPACK_IMPORTED_MODULE_3__.RepositoryChange.Closed, _git_git__WEBPACK_IMPORTED_MODULE_3__.RepositoryChangeComparisonMode.Any)) {
      this.dispose();
      void ((_a = this.parent) == null ? void 0 : _a.triggerChange(true));
      return;
    }
    if (e.changed(_git_git__WEBPACK_IMPORTED_MODULE_3__.RepositoryChange.Starred, _git_git__WEBPACK_IMPORTED_MODULE_3__.RepositoryChangeComparisonMode.Any)) {
      void ((_b = this.parent) == null ? void 0 : _b.triggerChange(true));
      return;
    }
    if (this.changed(e)) {
      void (this.loaded ? this : (_c = this.parent) != null ? _c : this).triggerChange(true);
    }
  }
};
let RepositoryFolderNode = _RepositoryFolderNode;
__publicField(RepositoryFolderNode, "key", ":repository");
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_6__.gate)(),
  (0,_system__WEBPACK_IMPORTED_MODULE_6__.debug)()
], RepositoryFolderNode.prototype, "refresh", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_6__.log)()
], RepositoryFolderNode.prototype, "star", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_6__.log)()
], RepositoryFolderNode.prototype, "unstar", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_6__.debug)()
], RepositoryFolderNode.prototype, "subscribe", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_6__.debug)({
    args: {
      0: (e) => e.toString()
    }
  })
], RepositoryFolderNode.prototype, "onRepositoryChanged", 1);
function canAutoRefreshView(view) {
  return _system__WEBPACK_IMPORTED_MODULE_6__.Functions.is(view, "onDidChangeAutoRefresh");
}
function canClearNode(node) {
  return typeof node.clear === "function";
}
function canEditNode(node) {
  return typeof node.edit === "function";
}
function canViewDismissNode(view) {
  return typeof view.dismissNode === "function";
}


/***/ }),

/***/ "./src/views/remotesView.ts":
/*!**********************************!*\
  !*** ./src/views/remotesView.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "RemotesRepositoryNode": () => (/* binding */ RemotesRepositoryNode),
/* harmony export */   "RemotesViewNode": () => (/* binding */ RemotesViewNode),
/* harmony export */   "RemotesView": () => (/* binding */ RemotesView)
/* harmony export */ });
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _configuration__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../configuration */ "./src/configuration.ts");
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../constants */ "./src/constants.ts");
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../container */ "./src/container.ts");
/* harmony import */ var _git_git__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../git/git */ "./src/git/git.ts");
/* harmony import */ var _git_gitUri__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../git/gitUri */ "./src/git/gitUri.ts");
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../system */ "./src/system.ts");
/* harmony import */ var _nodes__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./nodes */ "./src/views/nodes.ts");
/* harmony import */ var _viewBase__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./viewBase */ "./src/views/viewBase.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};









class RemotesRepositoryNode extends _nodes__WEBPACK_IMPORTED_MODULE_7__.RepositoryFolderNode {
  async getChildren() {
    if (this.child == null) {
      this.child = new _nodes__WEBPACK_IMPORTED_MODULE_7__.RemotesNode(this.uri, this.view, this, this.repo);
    }
    return this.child.getChildren();
  }
  changed(e) {
    return e.changed(_git_git__WEBPACK_IMPORTED_MODULE_4__.RepositoryChange.Config, _git_git__WEBPACK_IMPORTED_MODULE_4__.RepositoryChange.Remotes, _git_git__WEBPACK_IMPORTED_MODULE_4__.RepositoryChange.RemoteProviders, _git_git__WEBPACK_IMPORTED_MODULE_4__.RepositoryChange.Unknown, _git_git__WEBPACK_IMPORTED_MODULE_4__.RepositoryChangeComparisonMode.Any);
  }
}
class RemotesViewNode extends _nodes__WEBPACK_IMPORTED_MODULE_7__.ViewNode {
  constructor(view) {
    super(_nodes__WEBPACK_IMPORTED_MODULE_7__.unknownGitUri, view);
    __publicField(this, "splatted", true);
    __publicField(this, "children");
  }
  async getChildren() {
    if (this.children == null) {
      const repositories = await _container__WEBPACK_IMPORTED_MODULE_3__.Container.git.getOrderedRepositories();
      if (repositories.length === 0) {
        this.view.message = "No remotes could be found.";
        return [];
      }
      this.view.message = void 0;
      const splat = repositories.length === 1;
      this.children = repositories.map((r) => new RemotesRepositoryNode(_git_gitUri__WEBPACK_IMPORTED_MODULE_5__.GitUri.fromRepoPath(r.path), this.view, this, r, splat));
    }
    if (this.children.length === 1) {
      const [child] = this.children;
      if (!child.repo.supportsChangeEvents) {
        this.view.description = `${_system__WEBPACK_IMPORTED_MODULE_6__.Strings.pad(_constants__WEBPACK_IMPORTED_MODULE_2__.GlyphChars.Warning, 0, 2)}Auto-refresh unavailable`;
      }
      const remotes = await child.repo.getRemotes();
      if (remotes.length === 0) {
        this.view.message = "No remotes could be found.";
        this.view.title = "Remotes";
        void child.ensureSubscription();
        return [];
      }
      this.view.message = void 0;
      this.view.title = `Remotes (${remotes.length})`;
      return child.getChildren();
    }
    return this.children;
  }
  getTreeItem() {
    const item = new vscode__WEBPACK_IMPORTED_MODULE_0__.TreeItem("Remotes", vscode__WEBPACK_IMPORTED_MODULE_0__.TreeItemCollapsibleState.Expanded);
    return item;
  }
  async getSplattedChild() {
    var _a;
    if (this.children == null) {
      await this.getChildren();
    }
    return ((_a = this.children) == null ? void 0 : _a.length) === 1 ? this.children[0] : void 0;
  }
  refresh(reset = false) {
    if (reset && this.children != null) {
      for (const child of this.children) {
        child.dispose();
      }
      this.children = void 0;
    }
  }
}
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_6__.gate)(),
  (0,_system__WEBPACK_IMPORTED_MODULE_6__.debug)()
], RemotesViewNode.prototype, "refresh", 1);
class RemotesView extends _viewBase__WEBPACK_IMPORTED_MODULE_8__.ViewBase {
  constructor() {
    super("gitlens.views.remotes", "Remotes");
    __publicField(this, "configKey", "remotes");
  }
  getRoot() {
    return new RemotesViewNode(this);
  }
  registerCommands() {
    void _container__WEBPACK_IMPORTED_MODULE_3__.Container.viewCommands;
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("copy"), () => vscode__WEBPACK_IMPORTED_MODULE_0__.commands.executeCommand("gitlens.views.copy", this.selection), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("refresh"), async () => {
      await _container__WEBPACK_IMPORTED_MODULE_3__.Container.git.resetCaches("branches", "remotes");
      return this.refresh(true);
    }, this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("setLayoutToList"), () => this.setLayout(_configuration__WEBPACK_IMPORTED_MODULE_1__.ViewBranchesLayout.List), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("setLayoutToTree"), () => this.setLayout(_configuration__WEBPACK_IMPORTED_MODULE_1__.ViewBranchesLayout.Tree), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("setFilesLayoutToAuto"), () => this.setFilesLayout(_configuration__WEBPACK_IMPORTED_MODULE_1__.ViewFilesLayout.Auto), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("setFilesLayoutToList"), () => this.setFilesLayout(_configuration__WEBPACK_IMPORTED_MODULE_1__.ViewFilesLayout.List), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("setFilesLayoutToTree"), () => this.setFilesLayout(_configuration__WEBPACK_IMPORTED_MODULE_1__.ViewFilesLayout.Tree), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("setShowAvatarsOn"), () => this.setShowAvatars(true), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("setShowAvatarsOff"), () => this.setShowAvatars(false), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("setShowBranchPullRequestOn"), () => this.setShowBranchPullRequest(true), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("setShowBranchPullRequestOff"), () => this.setShowBranchPullRequest(false), this);
  }
  filterConfigurationChanged(e) {
    const changed = super.filterConfigurationChanged(e);
    if (!changed && !_configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.changed(e, "defaultDateFormat") && !_configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.changed(e, "defaultDateShortFormat") && !_configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.changed(e, "defaultDateSource") && !_configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.changed(e, "defaultDateStyle") && !_configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.changed(e, "defaultGravatarsStyle") && !_configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.changed(e, "defaultTimeFormat") && !_configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.changed(e, "integrations.enabled") && !_configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.changed(e, "sortBranchesBy")) {
      return false;
    }
    return true;
  }
  findBranch(branch, token) {
    if (!branch.remote)
      return void 0;
    const repoNodeId = _nodes__WEBPACK_IMPORTED_MODULE_7__.RepositoryNode.getId(branch.repoPath);
    return this.findNode((n) => {
      var _a;
      return ((_a = n.branch) == null ? void 0 : _a.ref) === branch.ref;
    }, {
      allowPaging: true,
      maxDepth: 5,
      canTraverse: (n) => {
        if (n instanceof RemotesViewNode)
          return true;
        if (n instanceof RemotesRepositoryNode || n instanceof _nodes__WEBPACK_IMPORTED_MODULE_7__.BranchOrTagFolderNode) {
          return n.id.startsWith(repoNodeId);
        }
        if (n instanceof _nodes__WEBPACK_IMPORTED_MODULE_7__.RemoteNode) {
          if (!n.id.startsWith(repoNodeId))
            return false;
          return n.remote.name === _git_git__WEBPACK_IMPORTED_MODULE_4__.GitBranch.getRemote(branch.name);
        }
        return false;
      },
      token
    });
  }
  async findCommit(commit, token) {
    const repoNodeId = _nodes__WEBPACK_IMPORTED_MODULE_7__.RepositoryNode.getId(commit.repoPath);
    const branches = await _container__WEBPACK_IMPORTED_MODULE_3__.Container.git.getCommitBranches(commit.repoPath, commit.ref, { remotes: true });
    if (branches.length === 0)
      return void 0;
    const remotes = branches.map((b) => b.split("/", 1)[0]);
    return this.findNode((n) => n.commit !== void 0 && n.commit.ref === commit.ref, {
      allowPaging: true,
      maxDepth: 6,
      canTraverse: (n) => {
        if (n instanceof RemotesViewNode)
          return true;
        if (n instanceof RemotesRepositoryNode || n instanceof _nodes__WEBPACK_IMPORTED_MODULE_7__.BranchOrTagFolderNode) {
          return n.id.startsWith(repoNodeId);
        }
        if (n instanceof _nodes__WEBPACK_IMPORTED_MODULE_7__.RemoteNode) {
          return n.id.startsWith(repoNodeId) && remotes.includes(n.remote.name);
        }
        if (n instanceof _nodes__WEBPACK_IMPORTED_MODULE_7__.BranchNode) {
          return n.id.startsWith(repoNodeId) && branches.includes(n.branch.name);
        }
        if (n instanceof _nodes__WEBPACK_IMPORTED_MODULE_7__.RepositoryNode || n instanceof _nodes__WEBPACK_IMPORTED_MODULE_7__.RemotesNode || n instanceof _nodes__WEBPACK_IMPORTED_MODULE_7__.BranchOrTagFolderNode) {
          return n.id.startsWith(repoNodeId);
        }
        return false;
      },
      token
    });
  }
  findRemote(remote, token) {
    const repoNodeId = _nodes__WEBPACK_IMPORTED_MODULE_7__.RepositoryNode.getId(remote.repoPath);
    return this.findNode((n) => {
      var _a;
      return ((_a = n.remote) == null ? void 0 : _a.name) === remote.name;
    }, {
      allowPaging: true,
      maxDepth: 2,
      canTraverse: (n) => {
        if (n instanceof RemotesViewNode)
          return true;
        if (n instanceof RemotesRepositoryNode) {
          return n.id.startsWith(repoNodeId);
        }
        return false;
      },
      token
    });
  }
  revealBranch(branch, options) {
    return vscode__WEBPACK_IMPORTED_MODULE_0__.window.withProgress({
      location: vscode__WEBPACK_IMPORTED_MODULE_0__.ProgressLocation.Notification,
      title: `Revealing ${_git_git__WEBPACK_IMPORTED_MODULE_4__.GitReference.toString(branch, { icon: false })} in the side bar...`,
      cancellable: true
    }, async (progress, token) => {
      const node = await this.findBranch(branch, token);
      if (node == null)
        return void 0;
      await this.ensureRevealNode(node, options);
      return node;
    });
  }
  async revealCommit(commit, options) {
    return vscode__WEBPACK_IMPORTED_MODULE_0__.window.withProgress({
      location: vscode__WEBPACK_IMPORTED_MODULE_0__.ProgressLocation.Notification,
      title: `Revealing ${_git_git__WEBPACK_IMPORTED_MODULE_4__.GitReference.toString(commit, { icon: false })} in the side bar...`,
      cancellable: true
    }, async (progress, token) => {
      const node = await this.findCommit(commit, token);
      if (node == null)
        return void 0;
      await this.ensureRevealNode(node, options);
      return node;
    });
  }
  revealRemote(remote, options) {
    return vscode__WEBPACK_IMPORTED_MODULE_0__.window.withProgress({
      location: vscode__WEBPACK_IMPORTED_MODULE_0__.ProgressLocation.Notification,
      title: `Revealing remote ${remote.name} in the side bar...`,
      cancellable: true
    }, async (progress, token) => {
      const node = await this.findRemote(remote, token);
      if (node == null)
        return void 0;
      await this.ensureRevealNode(node, options);
      return node;
    });
  }
  setLayout(layout) {
    return _configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.updateEffective(`views.${this.configKey}.branches.layout`, layout);
  }
  setFilesLayout(layout) {
    return _configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.updateEffective(`views.${this.configKey}.files.layout`, layout);
  }
  setShowAvatars(enabled) {
    return _configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.updateEffective(`views.${this.configKey}.avatars`, enabled);
  }
  async setShowBranchPullRequest(enabled) {
    await _configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.updateEffective(`views.${this.configKey}.pullRequests.showForBranches`, enabled);
    await _configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.updateEffective(`views.${this.configKey}.pullRequests.enabled`, enabled);
  }
}
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_6__.gate)(() => "")
], RemotesView.prototype, "revealBranch", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_6__.gate)(() => "")
], RemotesView.prototype, "revealCommit", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_6__.gate)(() => "")
], RemotesView.prototype, "revealRemote", 1);


/***/ }),

/***/ "./src/views/repositoriesView.ts":
/*!***************************************!*\
  !*** ./src/views/repositoriesView.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "RepositoriesView": () => (/* binding */ RepositoriesView)
/* harmony export */ });
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _configuration__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../configuration */ "./src/configuration.ts");
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../constants */ "./src/constants.ts");
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../container */ "./src/container.ts");
/* harmony import */ var _git_git__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../git/git */ "./src/git/git.ts");
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../system */ "./src/system.ts");
/* harmony import */ var _nodes__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./nodes */ "./src/views/nodes.ts");
/* harmony import */ var _viewBase__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./viewBase */ "./src/views/viewBase.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};








class RepositoriesView extends _viewBase__WEBPACK_IMPORTED_MODULE_7__.ViewBase {
  constructor() {
    super("gitlens.views.repositories", "Repositories");
    __publicField(this, "configKey", "repositories");
    __publicField(this, "_onDidChangeAutoRefresh", new vscode__WEBPACK_IMPORTED_MODULE_0__.EventEmitter());
  }
  get onDidChangeAutoRefresh() {
    return this._onDidChangeAutoRefresh.event;
  }
  getRoot() {
    return new _nodes__WEBPACK_IMPORTED_MODULE_6__.RepositoriesNode(this);
  }
  registerCommands() {
    void _container__WEBPACK_IMPORTED_MODULE_3__.Container.viewCommands;
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("copy"), () => vscode__WEBPACK_IMPORTED_MODULE_0__.commands.executeCommand("gitlens.views.copy", this.selection), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("refresh"), async () => {
      await _container__WEBPACK_IMPORTED_MODULE_3__.Container.git.resetCaches("branches", "contributors", "remotes", "stashes", "status", "tags");
      return this.refresh(true);
    }, this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("setBranchesLayoutToList"), () => this.setBranchesLayout(_configuration__WEBPACK_IMPORTED_MODULE_1__.ViewBranchesLayout.List), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("setBranchesLayoutToTree"), () => this.setBranchesLayout(_configuration__WEBPACK_IMPORTED_MODULE_1__.ViewBranchesLayout.Tree), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("setFilesLayoutToAuto"), () => this.setFilesLayout(_configuration__WEBPACK_IMPORTED_MODULE_1__.ViewFilesLayout.Auto), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("setFilesLayoutToList"), () => this.setFilesLayout(_configuration__WEBPACK_IMPORTED_MODULE_1__.ViewFilesLayout.List), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("setFilesLayoutToTree"), () => this.setFilesLayout(_configuration__WEBPACK_IMPORTED_MODULE_1__.ViewFilesLayout.Tree), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("setAutoRefreshToOn"), () => this.setAutoRefresh(_container__WEBPACK_IMPORTED_MODULE_3__.Container.config.views.repositories.autoRefresh, true), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("setAutoRefreshToOff"), () => this.setAutoRefresh(_container__WEBPACK_IMPORTED_MODULE_3__.Container.config.views.repositories.autoRefresh, false), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("setShowAvatarsOn"), () => this.setShowAvatars(true), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("setShowAvatarsOff"), () => this.setShowAvatars(false), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("setShowBranchComparisonOn"), () => this.setShowBranchComparison(true), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("setShowBranchComparisonOff"), () => this.setShowBranchComparison(false), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("setBranchesShowBranchComparisonOn"), () => this.setBranchShowBranchComparison(true), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("setBranchesShowBranchComparisonOff"), () => this.setBranchShowBranchComparison(false), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("setShowBranchesOn"), () => this.toggleSection("showBranches", true), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("setShowBranchesOff"), () => this.toggleSection("showBranches", false), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("setShowCommitsOn"), () => this.toggleSection("showCommits", true), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("setShowCommitsOff"), () => this.toggleSection("showCommits", false), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("setShowContributorsOn"), () => this.toggleSection("showContributors", true), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("setShowContributorsOff"), () => this.toggleSection("showContributors", false), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("setShowRemotesOn"), () => this.toggleSection("showRemotes", true), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("setShowRemotesOff"), () => this.toggleSection("showRemotes", false), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("setShowStashesOn"), () => this.toggleSection("showStashes", true), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("setShowStashesOff"), () => this.toggleSection("showStashes", false), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("setShowTagsOn"), () => this.toggleSection("showTags", true), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("setShowTagsOff"), () => this.toggleSection("showTags", false), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("setShowUpstreamStatusOn"), () => this.toggleSection("showUpstreamStatus", true), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("setShowUpstreamStatusOff"), () => this.toggleSection("showUpstreamStatus", false), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("setShowSectionOff"), (node) => this.toggleSectionByNode(node, false), this);
  }
  filterConfigurationChanged(e) {
    const changed = super.filterConfigurationChanged(e);
    if (!changed && !_configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.changed(e, "defaultDateFormat") && !_configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.changed(e, "defaultDateShortFormat") && !_configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.changed(e, "defaultDateSource") && !_configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.changed(e, "defaultDateStyle") && !_configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.changed(e, "defaultGravatarsStyle") && !_configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.changed(e, "defaultTimeFormat") && !_configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.changed(e, "sortBranchesBy") && !_configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.changed(e, "sortContributorsBy") && !_configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.changed(e, "sortTagsBy")) {
      return false;
    }
    return true;
  }
  onConfigurationChanged(e) {
    if (_configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.changed(e, `views.${this.configKey}.autoRefresh`)) {
      void this.setAutoRefresh(_container__WEBPACK_IMPORTED_MODULE_3__.Container.config.views.repositories.autoRefresh);
    }
    super.onConfigurationChanged(e);
  }
  get autoRefresh() {
    return this.config.autoRefresh && _container__WEBPACK_IMPORTED_MODULE_3__.Container.context.workspaceState.get(_constants__WEBPACK_IMPORTED_MODULE_2__.WorkspaceState.ViewsRepositoriesAutoRefresh, true);
  }
  findBranch(branch, token) {
    const repoNodeId = _nodes__WEBPACK_IMPORTED_MODULE_6__.RepositoryNode.getId(branch.repoPath);
    if (branch.remote) {
      return this.findNode((n) => n.branch !== void 0 && n.branch.ref === branch.ref, {
        allowPaging: true,
        maxDepth: 6,
        canTraverse: (n) => {
          if (n instanceof _nodes__WEBPACK_IMPORTED_MODULE_6__.RepositoriesNode)
            return true;
          if (n instanceof _nodes__WEBPACK_IMPORTED_MODULE_6__.RemoteNode) {
            if (!n.id.startsWith(repoNodeId))
              return false;
            return branch.remote && n.remote.name === _git_git__WEBPACK_IMPORTED_MODULE_4__.GitBranch.getRemote(branch.name);
          }
          if (n instanceof _nodes__WEBPACK_IMPORTED_MODULE_6__.RepositoryNode || n instanceof _nodes__WEBPACK_IMPORTED_MODULE_6__.BranchesNode || n instanceof _nodes__WEBPACK_IMPORTED_MODULE_6__.RemotesNode || n instanceof _nodes__WEBPACK_IMPORTED_MODULE_6__.BranchOrTagFolderNode) {
            return n.id.startsWith(repoNodeId);
          }
          return false;
        },
        token
      });
    }
    return this.findNode((n) => n.branch !== void 0 && n.branch.ref === branch.ref, {
      allowPaging: true,
      maxDepth: 5,
      canTraverse: (n) => {
        if (n instanceof _nodes__WEBPACK_IMPORTED_MODULE_6__.RepositoriesNode)
          return true;
        if (n instanceof _nodes__WEBPACK_IMPORTED_MODULE_6__.RepositoryNode || n instanceof _nodes__WEBPACK_IMPORTED_MODULE_6__.BranchesNode || n instanceof _nodes__WEBPACK_IMPORTED_MODULE_6__.BranchOrTagFolderNode) {
          return n.id.startsWith(repoNodeId);
        }
        return false;
      },
      token
    });
  }
  async findCommit(commit, token) {
    const repoNodeId = _nodes__WEBPACK_IMPORTED_MODULE_6__.RepositoryNode.getId(commit.repoPath);
    let branches = await _container__WEBPACK_IMPORTED_MODULE_3__.Container.git.getCommitBranches(commit.repoPath, commit.ref);
    if (branches.length !== 0) {
      return this.findNode((n) => n.commit !== void 0 && n.commit.ref === commit.ref, {
        allowPaging: true,
        maxDepth: 6,
        canTraverse: async (n) => {
          if (n instanceof _nodes__WEBPACK_IMPORTED_MODULE_6__.RepositoriesNode)
            return true;
          if (n instanceof _nodes__WEBPACK_IMPORTED_MODULE_6__.BranchNode) {
            if (n.id.startsWith(repoNodeId) && branches.includes(n.branch.name)) {
              await n.loadMore({ until: commit.ref });
              return true;
            }
          }
          if (n instanceof _nodes__WEBPACK_IMPORTED_MODULE_6__.RepositoryNode || n instanceof _nodes__WEBPACK_IMPORTED_MODULE_6__.BranchesNode || n instanceof _nodes__WEBPACK_IMPORTED_MODULE_6__.BranchOrTagFolderNode) {
            return n.id.startsWith(repoNodeId);
          }
          return false;
        },
        token
      });
    }
    branches = await _container__WEBPACK_IMPORTED_MODULE_3__.Container.git.getCommitBranches(commit.repoPath, commit.ref, { remotes: true });
    if (branches.length === 0)
      return void 0;
    const remotes = branches.map((b) => b.split("/", 1)[0]);
    return this.findNode((n) => n.commit !== void 0 && n.commit.ref === commit.ref, {
      allowPaging: true,
      maxDepth: 8,
      canTraverse: (n) => {
        if (n instanceof _nodes__WEBPACK_IMPORTED_MODULE_6__.RepositoriesNode)
          return true;
        if (n instanceof _nodes__WEBPACK_IMPORTED_MODULE_6__.RemoteNode) {
          return n.id.startsWith(repoNodeId) && remotes.includes(n.remote.name);
        }
        if (n instanceof _nodes__WEBPACK_IMPORTED_MODULE_6__.BranchNode) {
          return n.id.startsWith(repoNodeId) && branches.includes(n.branch.name);
        }
        if (n instanceof _nodes__WEBPACK_IMPORTED_MODULE_6__.RepositoryNode || n instanceof _nodes__WEBPACK_IMPORTED_MODULE_6__.RemotesNode || n instanceof _nodes__WEBPACK_IMPORTED_MODULE_6__.BranchOrTagFolderNode) {
          return n.id.startsWith(repoNodeId);
        }
        return false;
      },
      token
    });
  }
  findStash(stash, token) {
    const repoNodeId = _nodes__WEBPACK_IMPORTED_MODULE_6__.RepositoryNode.getId(stash.repoPath);
    return this.findNode(_nodes__WEBPACK_IMPORTED_MODULE_6__.StashNode.getId(stash.repoPath, stash.ref), {
      maxDepth: 3,
      canTraverse: (n) => {
        if (n instanceof _nodes__WEBPACK_IMPORTED_MODULE_6__.RepositoriesNode)
          return true;
        if (n instanceof _nodes__WEBPACK_IMPORTED_MODULE_6__.RepositoryNode || n instanceof _nodes__WEBPACK_IMPORTED_MODULE_6__.StashesNode) {
          return n.id.startsWith(repoNodeId);
        }
        return false;
      },
      token
    });
  }
  findTag(tag, token) {
    const repoNodeId = _nodes__WEBPACK_IMPORTED_MODULE_6__.RepositoryNode.getId(tag.repoPath);
    return this.findNode((n) => n.tag !== void 0 && n.tag.ref === tag.ref, {
      allowPaging: true,
      maxDepth: 5,
      canTraverse: (n) => {
        if (n instanceof _nodes__WEBPACK_IMPORTED_MODULE_6__.RepositoriesNode)
          return true;
        if (n instanceof _nodes__WEBPACK_IMPORTED_MODULE_6__.RepositoryNode || n instanceof _nodes__WEBPACK_IMPORTED_MODULE_6__.TagsNode || n instanceof _nodes__WEBPACK_IMPORTED_MODULE_6__.BranchOrTagFolderNode) {
          return n.id.startsWith(repoNodeId);
        }
        return false;
      },
      token
    });
  }
  revealBranch(branch, options) {
    return vscode__WEBPACK_IMPORTED_MODULE_0__.window.withProgress({
      location: vscode__WEBPACK_IMPORTED_MODULE_0__.ProgressLocation.Notification,
      title: `Revealing ${_git_git__WEBPACK_IMPORTED_MODULE_4__.GitReference.toString(branch, { icon: false })} in the Repositories view...`,
      cancellable: true
    }, async (progress, token) => {
      const node = await this.findBranch(branch, token);
      if (node == null)
        return void 0;
      await this.ensureRevealNode(node, options);
      return node;
    });
  }
  async revealBranches(repoPath, options) {
    const repoNodeId = _nodes__WEBPACK_IMPORTED_MODULE_6__.RepositoryNode.getId(repoPath);
    const node = await this.findNode(_nodes__WEBPACK_IMPORTED_MODULE_6__.BranchesNode.getId(repoPath), {
      maxDepth: 2,
      canTraverse: (n) => {
        if (n instanceof _nodes__WEBPACK_IMPORTED_MODULE_6__.RepositoriesNode)
          return true;
        if (n instanceof _nodes__WEBPACK_IMPORTED_MODULE_6__.RepositoryNode) {
          return n.id.startsWith(repoNodeId);
        }
        return false;
      }
    });
    if (node !== void 0) {
      await this.reveal(node, options);
    }
    return node;
  }
  async revealCommit(commit, options) {
    return vscode__WEBPACK_IMPORTED_MODULE_0__.window.withProgress({
      location: vscode__WEBPACK_IMPORTED_MODULE_0__.ProgressLocation.Notification,
      title: `Revealing ${_git_git__WEBPACK_IMPORTED_MODULE_4__.GitReference.toString(commit, { icon: false })} in the Repositories view...`,
      cancellable: true
    }, async (progress, token) => {
      const node = await this.findCommit(commit, token);
      if (node == null)
        return void 0;
      await this.ensureRevealNode(node, options);
      return node;
    });
  }
  async revealRepository(repoPath, options) {
    const repoNodeId = _nodes__WEBPACK_IMPORTED_MODULE_6__.RepositoryNode.getId(repoPath);
    const node = await this.findNode(repoNodeId, {
      maxDepth: 1,
      canTraverse: (n) => {
        if (n instanceof _nodes__WEBPACK_IMPORTED_MODULE_6__.RepositoriesNode)
          return true;
        return false;
      }
    });
    if (node !== void 0) {
      await this.reveal(node, options);
    }
    return node;
  }
  async revealStash(stash, options) {
    return vscode__WEBPACK_IMPORTED_MODULE_0__.window.withProgress({
      location: vscode__WEBPACK_IMPORTED_MODULE_0__.ProgressLocation.Notification,
      title: `Revealing ${_git_git__WEBPACK_IMPORTED_MODULE_4__.GitReference.toString(stash, { icon: false })} in the Repositories view...`,
      cancellable: true
    }, async (progress, token) => {
      const node = await this.findStash(stash, token);
      if (node !== void 0) {
        await this.reveal(node, options);
      }
      return node;
    });
  }
  async revealStashes(repoPath, options) {
    const repoNodeId = _nodes__WEBPACK_IMPORTED_MODULE_6__.RepositoryNode.getId(repoPath);
    const node = await this.findNode(_nodes__WEBPACK_IMPORTED_MODULE_6__.StashesNode.getId(repoPath), {
      maxDepth: 2,
      canTraverse: (n) => {
        if (n instanceof _nodes__WEBPACK_IMPORTED_MODULE_6__.RepositoriesNode)
          return true;
        if (n instanceof _nodes__WEBPACK_IMPORTED_MODULE_6__.RepositoryNode) {
          return n.id.startsWith(repoNodeId);
        }
        return false;
      }
    });
    if (node !== void 0) {
      await this.reveal(node, options);
    }
    return node;
  }
  revealTag(tag, options) {
    return vscode__WEBPACK_IMPORTED_MODULE_0__.window.withProgress({
      location: vscode__WEBPACK_IMPORTED_MODULE_0__.ProgressLocation.Notification,
      title: `Revealing ${_git_git__WEBPACK_IMPORTED_MODULE_4__.GitReference.toString(tag, { icon: false })} in the Repositories view...`,
      cancellable: true
    }, async (progress, token) => {
      const node = await this.findTag(tag, token);
      if (node == null)
        return void 0;
      await this.ensureRevealNode(node, options);
      return node;
    });
  }
  async revealTags(repoPath, options) {
    const repoNodeId = _nodes__WEBPACK_IMPORTED_MODULE_6__.RepositoryNode.getId(repoPath);
    const node = await this.findNode(_nodes__WEBPACK_IMPORTED_MODULE_6__.TagsNode.getId(repoPath), {
      maxDepth: 2,
      canTraverse: (n) => {
        if (n instanceof _nodes__WEBPACK_IMPORTED_MODULE_6__.RepositoriesNode)
          return true;
        if (n instanceof _nodes__WEBPACK_IMPORTED_MODULE_6__.RepositoryNode) {
          return n.id.startsWith(repoNodeId);
        }
        return false;
      }
    });
    if (node !== void 0) {
      await this.reveal(node, options);
    }
    return node;
  }
  async setAutoRefresh(enabled, workspaceEnabled) {
    if (enabled) {
      if (workspaceEnabled === void 0) {
        workspaceEnabled = _container__WEBPACK_IMPORTED_MODULE_3__.Container.context.workspaceState.get(_constants__WEBPACK_IMPORTED_MODULE_2__.WorkspaceState.ViewsRepositoriesAutoRefresh, true);
      } else {
        await _container__WEBPACK_IMPORTED_MODULE_3__.Container.context.workspaceState.update(_constants__WEBPACK_IMPORTED_MODULE_2__.WorkspaceState.ViewsRepositoriesAutoRefresh, workspaceEnabled);
      }
    }
    void (0,_constants__WEBPACK_IMPORTED_MODULE_2__.setContext)(_constants__WEBPACK_IMPORTED_MODULE_2__.ContextKeys.ViewsRepositoriesAutoRefresh, enabled && workspaceEnabled);
    this._onDidChangeAutoRefresh.fire();
  }
  setBranchesLayout(layout) {
    return _configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.updateEffective(`views.${this.configKey}.branches.layout`, layout);
  }
  setFilesLayout(layout) {
    return _configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.updateEffective(`views.${this.configKey}.files.layout`, layout);
  }
  setShowAvatars(enabled) {
    return _configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.updateEffective(`views.${this.configKey}.avatars`, enabled);
  }
  setShowBranchComparison(enabled) {
    return _configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.updateEffective(`views.${this.configKey}.showBranchComparison`, enabled ? _configuration__WEBPACK_IMPORTED_MODULE_1__.ViewShowBranchComparison.Working : false);
  }
  setBranchShowBranchComparison(enabled) {
    return _configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.updateEffective(`views.${this.configKey}.branches.showBranchComparison`, enabled ? _configuration__WEBPACK_IMPORTED_MODULE_1__.ViewShowBranchComparison.Branch : false);
  }
  toggleSection(key, enabled) {
    return _configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.updateEffective(`views.${this.configKey}.${key}`, enabled);
  }
  toggleSectionByNode(node, enabled) {
    if (node instanceof _nodes__WEBPACK_IMPORTED_MODULE_6__.BranchesNode) {
      return _configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.updateEffective(`views.${this.configKey}.showBranches`, enabled);
    }
    if (node instanceof _nodes__WEBPACK_IMPORTED_MODULE_6__.BranchNode) {
      return _configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.updateEffective(`views.${this.configKey}.showCommits`, enabled);
    }
    if (node instanceof _nodes__WEBPACK_IMPORTED_MODULE_6__.BranchTrackingStatusNode) {
      return _configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.updateEffective(`views.${this.configKey}.showUpstreamStatus`, enabled);
    }
    if (node instanceof _nodes__WEBPACK_IMPORTED_MODULE_6__.CompareBranchNode) {
      return this.setShowBranchComparison(enabled);
    }
    if (node instanceof _nodes__WEBPACK_IMPORTED_MODULE_6__.ContributorsNode) {
      return _configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.updateEffective(`views.${this.configKey}.showContributors`, enabled);
    }
    if (node instanceof _nodes__WEBPACK_IMPORTED_MODULE_6__.ReflogNode) {
      return _configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.updateEffective(`views.${this.configKey}.showIncomingActivity`, enabled);
    }
    if (node instanceof _nodes__WEBPACK_IMPORTED_MODULE_6__.RemotesNode) {
      return _configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.updateEffective(`views.${this.configKey}.showRemotes`, enabled);
    }
    if (node instanceof _nodes__WEBPACK_IMPORTED_MODULE_6__.StashesNode) {
      return _configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.updateEffective(`views.${this.configKey}.showStashes`, enabled);
    }
    if (node instanceof _nodes__WEBPACK_IMPORTED_MODULE_6__.TagsNode) {
      return _configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.updateEffective(`views.${this.configKey}.showTags`, enabled);
    }
    return Promise.resolve();
  }
}
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.gate)(() => "")
], RepositoriesView.prototype, "revealBranch", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.gate)(() => "")
], RepositoriesView.prototype, "revealBranches", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.gate)(() => "")
], RepositoriesView.prototype, "revealCommit", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.gate)(() => "")
], RepositoriesView.prototype, "revealRepository", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.gate)(() => "")
], RepositoriesView.prototype, "revealStash", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.gate)(() => "")
], RepositoriesView.prototype, "revealStashes", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.gate)(() => "")
], RepositoriesView.prototype, "revealTag", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.gate)(() => "")
], RepositoriesView.prototype, "revealTags", 1);


/***/ }),

/***/ "./src/views/searchAndCompareView.ts":
/*!*******************************************!*\
  !*** ./src/views/searchAndCompareView.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SearchAndCompareViewNode": () => (/* binding */ SearchAndCompareViewNode),
/* harmony export */   "SearchAndCompareView": () => (/* binding */ SearchAndCompareView)
/* harmony export */ });
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _commands__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../commands */ "./src/commands.ts");
/* harmony import */ var _configuration__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../configuration */ "./src/configuration.ts");
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../constants */ "./src/constants.ts");
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../container */ "./src/container.ts");
/* harmony import */ var _git_git__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../git/git */ "./src/git/git.ts");
/* harmony import */ var _quickpicks__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../quickpicks */ "./src/quickpicks.ts");
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../system */ "./src/system.ts");
/* harmony import */ var _nodes__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./nodes */ "./src/views/nodes.ts");
/* harmony import */ var _nodes_comparePickerNode__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./nodes/comparePickerNode */ "./src/views/nodes/comparePickerNode.ts");
/* harmony import */ var _viewBase__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./viewBase */ "./src/views/viewBase.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};











class SearchAndCompareViewNode extends _nodes__WEBPACK_IMPORTED_MODULE_8__.ViewNode {
  constructor(view) {
    super(_nodes__WEBPACK_IMPORTED_MODULE_8__.unknownGitUri, view);
    __publicField(this, "splatted", true);
    __publicField(this, "comparePicker");
    __publicField(this, "_children");
  }
  get children() {
    if (this._children == null) {
      this._children = [];
      const pinned = this.view.getPinned();
      if (pinned.length !== 0) {
        this._children.push(...pinned);
      }
    }
    return this._children;
  }
  getChildren() {
    if (this.children.length === 0)
      return [];
    this.view.message = void 0;
    return this.children.sort((a, b) => (a.pinned ? -1 : 1) - (b.pinned ? -1 : 1) || b.order - a.order);
  }
  getTreeItem() {
    this.splatted = false;
    const item = new vscode__WEBPACK_IMPORTED_MODULE_0__.TreeItem("SearchAndCompare", vscode__WEBPACK_IMPORTED_MODULE_0__.TreeItemCollapsibleState.Expanded);
    item.contextValue = _nodes__WEBPACK_IMPORTED_MODULE_8__.ContextValues.SearchAndCompare;
    return item;
  }
  addOrReplace(results, replace) {
    if (this.children.includes(results))
      return;
    if (replace) {
      this.clear();
    }
    this.children.push(results);
    this.view.triggerNodeChange();
  }
  clear(silent = false) {
    if (this.children.length === 0)
      return;
    this.removeComparePicker(true);
    const index = this._children.findIndex((c) => !c.pinned);
    if (index !== -1) {
      this._children.splice(index, this._children.length);
    }
    if (!silent) {
      this.view.triggerNodeChange();
    }
  }
  dismiss(node) {
    if (node === this.comparePicker) {
      this.removeComparePicker();
      return;
    }
    if (this.children.length === 0)
      return;
    const index = this.children.indexOf(node);
    if (index === -1)
      return;
    this.children.splice(index, 1);
    this.view.triggerNodeChange();
  }
  async refresh() {
    if (this.children.length === 0)
      return;
    const promises = [
      ..._system__WEBPACK_IMPORTED_MODULE_7__.Iterables.filterMap(this.children, (c) => {
        const result = c.refresh === void 0 ? false : c.refresh();
        return _system__WEBPACK_IMPORTED_MODULE_7__.Promises.is(result) ? result : void 0;
      })
    ];
    await Promise.all(promises);
  }
  async compareWithSelected(repoPath, ref) {
    var _a;
    const selectedRef = (_a = this.comparePicker) == null ? void 0 : _a.selectedRef;
    if (selectedRef == null)
      return;
    if (repoPath == null) {
      repoPath = selectedRef.repoPath;
    } else if (repoPath !== selectedRef.repoPath) {
      void this.selectForCompare(repoPath, ref);
      return;
    }
    if (ref == null) {
      const pick = await _quickpicks__WEBPACK_IMPORTED_MODULE_6__.ReferencePicker.show(repoPath, `Compare ${this.getRefName(selectedRef.ref)} with`, "Choose a reference to compare with", {
        allowEnteringRefs: true,
        picked: typeof selectedRef.ref === "string" ? selectedRef.ref : selectedRef.ref.ref,
        include: _quickpicks__WEBPACK_IMPORTED_MODULE_6__.ReferencesQuickPickIncludes.BranchesAndTags | _quickpicks__WEBPACK_IMPORTED_MODULE_6__.ReferencesQuickPickIncludes.HEAD | _quickpicks__WEBPACK_IMPORTED_MODULE_6__.ReferencesQuickPickIncludes.WorkingTree,
        sort: { branches: { current: true } }
      });
      if (pick == null) {
        if (this.comparePicker != null) {
          await this.view.show();
          await this.view.reveal(this.comparePicker, { focus: true, select: true });
        }
        return;
      }
      ref = pick.ref;
    }
    this.removeComparePicker();
    void await this.view.compare(repoPath, selectedRef.ref, ref);
  }
  async selectForCompare(repoPath, ref, options) {
    var _a;
    if (repoPath == null) {
      repoPath = await (0,_commands__WEBPACK_IMPORTED_MODULE_1__.getRepoPathOrPrompt)("Compare");
    }
    if (repoPath == null)
      return;
    this.removeComparePicker(true);
    let prompt = (_a = options == null ? void 0 : options.prompt) != null ? _a : false;
    let ref2;
    if (ref == null) {
      const pick = await _quickpicks__WEBPACK_IMPORTED_MODULE_6__.ReferencePicker.show(repoPath, "Compare", "Choose a reference to compare", {
        allowEnteringRefs: { ranges: true },
        include: _quickpicks__WEBPACK_IMPORTED_MODULE_6__.ReferencesQuickPickIncludes.BranchesAndTags | _quickpicks__WEBPACK_IMPORTED_MODULE_6__.ReferencesQuickPickIncludes.HEAD | _quickpicks__WEBPACK_IMPORTED_MODULE_6__.ReferencesQuickPickIncludes.WorkingTree,
        sort: { branches: { current: true }, tags: {} }
      });
      if (pick == null) {
        await this.triggerChange();
        return;
      }
      ref = pick.ref;
      if (_git_git__WEBPACK_IMPORTED_MODULE_5__.GitRevision.isRange(ref)) {
        const range = _git_git__WEBPACK_IMPORTED_MODULE_5__.GitRevision.splitRange(ref);
        if (range != null) {
          ref = range.ref1 || "HEAD";
          ref2 = range.ref2 || "HEAD";
        }
      }
      prompt = true;
    }
    this.comparePicker = new _nodes_comparePickerNode__WEBPACK_IMPORTED_MODULE_9__.ComparePickerNode(this.view, this, {
      label: this.getRefName(ref),
      repoPath,
      ref
    });
    this.children.splice(0, 0, this.comparePicker);
    void (0,_constants__WEBPACK_IMPORTED_MODULE_3__.setContext)(_constants__WEBPACK_IMPORTED_MODULE_3__.ContextKeys.ViewsCanCompare, true);
    await this.triggerChange();
    await this.view.reveal(this.comparePicker, { focus: false, select: true });
    if (prompt) {
      await this.compareWithSelected(repoPath, ref2);
    }
  }
  getRefName(ref) {
    var _a;
    return typeof ref === "string" ? _git_git__WEBPACK_IMPORTED_MODULE_5__.GitRevision.shorten(ref, { strings: { working: "Working Tree" } }) : (_a = ref.label) != null ? _a : _git_git__WEBPACK_IMPORTED_MODULE_5__.GitRevision.shorten(ref.ref);
  }
  removeComparePicker(silent = false) {
    void (0,_constants__WEBPACK_IMPORTED_MODULE_3__.setContext)(_constants__WEBPACK_IMPORTED_MODULE_3__.ContextKeys.ViewsCanCompare, false);
    if (this.comparePicker != null) {
      const index = this.children.indexOf(this.comparePicker);
      if (index !== -1) {
        this.children.splice(index, 1);
        if (!silent) {
          void this.triggerChange();
        }
      }
      this.comparePicker = void 0;
    }
  }
}
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_7__.log)()
], SearchAndCompareViewNode.prototype, "clear", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_7__.log)({
    args: { 0: (n) => n.toString() }
  })
], SearchAndCompareViewNode.prototype, "dismiss", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_7__.gate)(),
  (0,_system__WEBPACK_IMPORTED_MODULE_7__.debug)()
], SearchAndCompareViewNode.prototype, "refresh", 1);
class SearchAndCompareView extends _viewBase__WEBPACK_IMPORTED_MODULE_10__.ViewBase {
  constructor() {
    super("gitlens.views.searchAndCompare", "Search & Compare");
    __publicField(this, "configKey", "searchAndCompare");
    void (0,_constants__WEBPACK_IMPORTED_MODULE_3__.setContext)(_constants__WEBPACK_IMPORTED_MODULE_3__.ContextKeys.ViewsSearchAndCompareKeepResults, this.keepResults);
  }
  getRoot() {
    return new SearchAndCompareViewNode(this);
  }
  registerCommands() {
    void _container__WEBPACK_IMPORTED_MODULE_4__.Container.viewCommands;
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("clear"), () => this.clear(), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("copy"), () => vscode__WEBPACK_IMPORTED_MODULE_0__.commands.executeCommand("gitlens.views.copy", this.selection), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("refresh"), () => this.refresh(true), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("setFilesLayoutToAuto"), () => this.setFilesLayout(_configuration__WEBPACK_IMPORTED_MODULE_2__.ViewFilesLayout.Auto), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("setFilesLayoutToList"), () => this.setFilesLayout(_configuration__WEBPACK_IMPORTED_MODULE_2__.ViewFilesLayout.List), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("setFilesLayoutToTree"), () => this.setFilesLayout(_configuration__WEBPACK_IMPORTED_MODULE_2__.ViewFilesLayout.Tree), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("setKeepResultsToOn"), () => this.setKeepResults(true), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("setKeepResultsToOff"), () => this.setKeepResults(false), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("setShowAvatarsOn"), () => this.setShowAvatars(true), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("setShowAvatarsOff"), () => this.setShowAvatars(false), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("pin"), this.pin, this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("unpin"), this.unpin, this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("swapComparison"), this.swapComparison, this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("selectForCompare"), this.selectForCompare, this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("compareWithSelected"), this.compareWithSelected, this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("setFilesFilterOnLeft"), (n) => this.setFilesFilter(n, "left"), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("setFilesFilterOnRight"), (n) => this.setFilesFilter(n, "right"), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("setFilesFilterOff"), (n) => this.setFilesFilter(n, false), this);
  }
  filterConfigurationChanged(e) {
    const changed = super.filterConfigurationChanged(e);
    if (!changed && !_configuration__WEBPACK_IMPORTED_MODULE_2__.configuration.changed(e, "defaultDateFormat") && !_configuration__WEBPACK_IMPORTED_MODULE_2__.configuration.changed(e, "defaultDateShortFormat") && !_configuration__WEBPACK_IMPORTED_MODULE_2__.configuration.changed(e, "defaultDateSource") && !_configuration__WEBPACK_IMPORTED_MODULE_2__.configuration.changed(e, "defaultDateStyle") && !_configuration__WEBPACK_IMPORTED_MODULE_2__.configuration.changed(e, "defaultGravatarsStyle") && !_configuration__WEBPACK_IMPORTED_MODULE_2__.configuration.changed(e, "defaultTimeFormat")) {
      return false;
    }
    return true;
  }
  get keepResults() {
    return _container__WEBPACK_IMPORTED_MODULE_4__.Container.context.workspaceState.get(_constants__WEBPACK_IMPORTED_MODULE_3__.WorkspaceState.ViewsSearchAndCompareKeepResults, true);
  }
  clear() {
    var _a;
    (_a = this.root) == null ? void 0 : _a.clear();
  }
  dismissNode(node) {
    if (this.root == null || !(node instanceof _nodes_comparePickerNode__WEBPACK_IMPORTED_MODULE_9__.ComparePickerNode) && !(node instanceof _nodes__WEBPACK_IMPORTED_MODULE_8__.CompareResultsNode) && !(node instanceof _nodes__WEBPACK_IMPORTED_MODULE_8__.SearchResultsNode) || !node.canDismiss) {
      return;
    }
    this.root.dismiss(node);
  }
  compare(repoPath, ref1, ref2) {
    return this.addResults(new _nodes__WEBPACK_IMPORTED_MODULE_8__.CompareResultsNode(this, this.ensureRoot(), repoPath, typeof ref1 === "string" ? { ref: ref1 } : ref1, typeof ref2 === "string" ? { ref: ref2 } : ref2));
  }
  compareWithSelected(repoPath, ref) {
    void this.ensureRoot().compareWithSelected(repoPath, ref);
  }
  selectForCompare(repoPath, ref, options) {
    void this.ensureRoot().selectForCompare(repoPath, ref, options);
  }
  async search(repoPath, search, {
    label,
    reveal
  }, results, updateNode) {
    if (!this.visible) {
      await this.show();
    }
    const labels = { label: `Results ${typeof label === "string" ? label : label.label}`, queryLabel: label };
    if (updateNode != null) {
      await updateNode.edit({ pattern: search, labels, log: results });
      return;
    }
    await this.addResults(new _nodes__WEBPACK_IMPORTED_MODULE_8__.SearchResultsNode(this, this.root, repoPath, search, labels, results), reveal);
  }
  getPinned() {
    let savedPins = _container__WEBPACK_IMPORTED_MODULE_4__.Container.context.workspaceState.get(_constants__WEBPACK_IMPORTED_MODULE_3__.WorkspaceState.ViewsSearchAndComparePinnedItems);
    if (savedPins == null) {
      const deprecatedPins = _container__WEBPACK_IMPORTED_MODULE_4__.Container.context.workspaceState.get(_constants__WEBPACK_IMPORTED_MODULE_3__.WorkspaceState.Deprecated_PinnedComparisons);
      if (deprecatedPins == null)
        return [];
      savedPins = Object.create(null);
      for (const p of Object.values(deprecatedPins)) {
        savedPins[_nodes__WEBPACK_IMPORTED_MODULE_8__.CompareResultsNode.getPinnableId(p.path, p.ref1.ref, p.ref2.ref)] = {
          type: "comparison",
          timestamp: Date.now(),
          path: p.path,
          ref1: p.ref1,
          ref2: p.ref2
        };
      }
      void _container__WEBPACK_IMPORTED_MODULE_4__.Container.context.workspaceState.update(_constants__WEBPACK_IMPORTED_MODULE_3__.WorkspaceState.ViewsSearchAndComparePinnedItems, savedPins);
      void _container__WEBPACK_IMPORTED_MODULE_4__.Container.context.workspaceState.update(_constants__WEBPACK_IMPORTED_MODULE_3__.WorkspaceState.Deprecated_PinnedComparisons, void 0);
    }
    const root = this.ensureRoot();
    return Object.values(savedPins).sort((a, b) => {
      var _a, _b;
      return ((_a = b.timestamp) != null ? _a : 0) - ((_b = a.timestamp) != null ? _b : 0);
    }).map((p) => {
      var _a, _b, _c, _d;
      return p.type === "comparison" ? new _nodes__WEBPACK_IMPORTED_MODULE_8__.CompareResultsNode(this, root, p.path, { label: p.ref1.label, ref: (_b = (_a = p.ref1.ref) != null ? _a : p.ref1.name) != null ? _b : p.ref1.sha }, { label: p.ref2.label, ref: (_d = (_c = p.ref2.ref) != null ? _c : p.ref2.name) != null ? _d : p.ref2.sha }, p.timestamp) : new _nodes__WEBPACK_IMPORTED_MODULE_8__.SearchResultsNode(this, root, p.path, p.search, p.labels, void 0, p.timestamp);
    });
  }
  async updatePinned(id, pin) {
    let pinned = _container__WEBPACK_IMPORTED_MODULE_4__.Container.context.workspaceState.get(_constants__WEBPACK_IMPORTED_MODULE_3__.WorkspaceState.ViewsSearchAndComparePinnedItems);
    if (pinned == null) {
      pinned = Object.create(null);
    }
    if (pin != null) {
      pinned[id] = { ...pin };
    } else {
      const { [id]: _, ...rest } = pinned;
      pinned = rest;
    }
    await _container__WEBPACK_IMPORTED_MODULE_4__.Container.context.workspaceState.update(_constants__WEBPACK_IMPORTED_MODULE_3__.WorkspaceState.ViewsSearchAndComparePinnedItems, pinned);
    this.triggerNodeChange(this.ensureRoot());
  }
  async addResults(results, options = { expand: true, focus: true, select: true }) {
    if (!this.visible) {
      await this.show();
    }
    const root = this.ensureRoot();
    root.addOrReplace(results, !this.keepResults);
    setImmediate(() => this.reveal(results, options));
  }
  setFilesLayout(layout) {
    return _configuration__WEBPACK_IMPORTED_MODULE_2__.configuration.updateEffective(`views.${this.configKey}.files.layout`, layout);
  }
  setKeepResults(enabled) {
    void _container__WEBPACK_IMPORTED_MODULE_4__.Container.context.workspaceState.update(_constants__WEBPACK_IMPORTED_MODULE_3__.WorkspaceState.ViewsSearchAndCompareKeepResults, enabled);
    void (0,_constants__WEBPACK_IMPORTED_MODULE_3__.setContext)(_constants__WEBPACK_IMPORTED_MODULE_3__.ContextKeys.ViewsSearchAndCompareKeepResults, enabled);
  }
  setShowAvatars(enabled) {
    return _configuration__WEBPACK_IMPORTED_MODULE_2__.configuration.updateEffective(`views.${this.configKey}.avatars`, enabled);
  }
  pin(node) {
    if (!(node instanceof _nodes__WEBPACK_IMPORTED_MODULE_8__.CompareResultsNode) && !(node instanceof _nodes__WEBPACK_IMPORTED_MODULE_8__.SearchResultsNode))
      return void 0;
    return node.pin();
  }
  setFilesFilter(node, filter) {
    if (!(node instanceof _nodes__WEBPACK_IMPORTED_MODULE_8__.ResultsFilesNode))
      return;
    node.filter = filter;
  }
  swapComparison(node) {
    if (!(node instanceof _nodes__WEBPACK_IMPORTED_MODULE_8__.CompareResultsNode))
      return void 0;
    return node.swap();
  }
  unpin(node) {
    if (!(node instanceof _nodes__WEBPACK_IMPORTED_MODULE_8__.CompareResultsNode) && !(node instanceof _nodes__WEBPACK_IMPORTED_MODULE_8__.SearchResultsNode))
      return void 0;
    return node.unpin();
  }
}


/***/ }),

/***/ "./src/views/stashesView.ts":
/*!**********************************!*\
  !*** ./src/views/stashesView.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "StashesRepositoryNode": () => (/* binding */ StashesRepositoryNode),
/* harmony export */   "StashesViewNode": () => (/* binding */ StashesViewNode),
/* harmony export */   "StashesView": () => (/* binding */ StashesView)
/* harmony export */ });
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _configuration__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../configuration */ "./src/configuration.ts");
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../constants */ "./src/constants.ts");
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../container */ "./src/container.ts");
/* harmony import */ var _git_git__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../git/git */ "./src/git/git.ts");
/* harmony import */ var _git_gitUri__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../git/gitUri */ "./src/git/gitUri.ts");
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../system */ "./src/system.ts");
/* harmony import */ var _nodes__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./nodes */ "./src/views/nodes.ts");
/* harmony import */ var _viewBase__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./viewBase */ "./src/views/viewBase.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};









class StashesRepositoryNode extends _nodes__WEBPACK_IMPORTED_MODULE_7__.RepositoryFolderNode {
  async getChildren() {
    if (this.child == null) {
      this.child = new _nodes__WEBPACK_IMPORTED_MODULE_7__.StashesNode(this.uri, this.view, this, this.repo);
    }
    return this.child.getChildren();
  }
  changed(e) {
    return e.changed(_git_git__WEBPACK_IMPORTED_MODULE_4__.RepositoryChange.Stash, _git_git__WEBPACK_IMPORTED_MODULE_4__.RepositoryChange.Unknown, _git_git__WEBPACK_IMPORTED_MODULE_4__.RepositoryChangeComparisonMode.Any);
  }
}
class StashesViewNode extends _nodes__WEBPACK_IMPORTED_MODULE_7__.ViewNode {
  constructor(view) {
    super(_nodes__WEBPACK_IMPORTED_MODULE_7__.unknownGitUri, view);
    __publicField(this, "splatted", true);
    __publicField(this, "children");
  }
  async getChildren() {
    var _a;
    if (this.children == null) {
      const repositories = await _container__WEBPACK_IMPORTED_MODULE_3__.Container.git.getOrderedRepositories();
      if (repositories.length === 0) {
        this.view.message = "No stashes could be found.";
        return [];
      }
      this.view.message = void 0;
      const splat = repositories.length === 1;
      this.children = repositories.map((r) => new StashesRepositoryNode(_git_gitUri__WEBPACK_IMPORTED_MODULE_5__.GitUri.fromRepoPath(r.path), this.view, this, r, splat));
    }
    if (this.children.length === 1) {
      const [child] = this.children;
      if (!child.repo.supportsChangeEvents) {
        this.view.description = `${_system__WEBPACK_IMPORTED_MODULE_6__.Strings.pad(_constants__WEBPACK_IMPORTED_MODULE_2__.GlyphChars.Warning, 0, 2)}Auto-refresh unavailable`;
      }
      const stash = await child.repo.getStash();
      if (stash == null) {
        this.view.message = "No stashes could be found.";
        this.view.title = "Stashes";
        void child.ensureSubscription();
        return [];
      }
      this.view.message = void 0;
      this.view.title = `Stashes (${(_a = stash == null ? void 0 : stash.commits.size) != null ? _a : 0})`;
      return child.getChildren();
    }
    return this.children;
  }
  getTreeItem() {
    const item = new vscode__WEBPACK_IMPORTED_MODULE_0__.TreeItem("Stashes", vscode__WEBPACK_IMPORTED_MODULE_0__.TreeItemCollapsibleState.Expanded);
    return item;
  }
  async getSplattedChild() {
    var _a;
    if (this.children == null) {
      await this.getChildren();
    }
    return ((_a = this.children) == null ? void 0 : _a.length) === 1 ? this.children[0] : void 0;
  }
  refresh(reset = false) {
    if (reset && this.children != null) {
      for (const child of this.children) {
        child.dispose();
      }
      this.children = void 0;
    }
  }
}
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_6__.gate)(),
  (0,_system__WEBPACK_IMPORTED_MODULE_6__.debug)()
], StashesViewNode.prototype, "refresh", 1);
class StashesView extends _viewBase__WEBPACK_IMPORTED_MODULE_8__.ViewBase {
  constructor() {
    super("gitlens.views.stashes", "Stashes");
    __publicField(this, "configKey", "stashes");
  }
  getRoot() {
    return new StashesViewNode(this);
  }
  registerCommands() {
    void _container__WEBPACK_IMPORTED_MODULE_3__.Container.viewCommands;
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("copy"), () => vscode__WEBPACK_IMPORTED_MODULE_0__.commands.executeCommand("gitlens.views.copy", this.selection), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("refresh"), async () => {
      await _container__WEBPACK_IMPORTED_MODULE_3__.Container.git.resetCaches("stashes");
      return this.refresh(true);
    }, this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("setFilesLayoutToAuto"), () => this.setFilesLayout(_configuration__WEBPACK_IMPORTED_MODULE_1__.ViewFilesLayout.Auto), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("setFilesLayoutToList"), () => this.setFilesLayout(_configuration__WEBPACK_IMPORTED_MODULE_1__.ViewFilesLayout.List), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("setFilesLayoutToTree"), () => this.setFilesLayout(_configuration__WEBPACK_IMPORTED_MODULE_1__.ViewFilesLayout.Tree), this);
  }
  filterConfigurationChanged(e) {
    const changed = super.filterConfigurationChanged(e);
    if (!changed && !_configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.changed(e, "defaultDateFormat") && !_configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.changed(e, "defaultDateShortFormat") && !_configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.changed(e, "defaultDateSource") && !_configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.changed(e, "defaultDateStyle") && !_configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.changed(e, "defaultGravatarsStyle") && !_configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.changed(e, "defaultTimeFormat")) {
      return false;
    }
    return true;
  }
  findStash(stash, token) {
    const repoNodeId = _nodes__WEBPACK_IMPORTED_MODULE_7__.RepositoryNode.getId(stash.repoPath);
    return this.findNode(_nodes__WEBPACK_IMPORTED_MODULE_7__.StashNode.getId(stash.repoPath, stash.ref), {
      maxDepth: 2,
      canTraverse: (n) => {
        if (n instanceof StashesViewNode)
          return true;
        if (n instanceof StashesRepositoryNode) {
          return n.id.startsWith(repoNodeId);
        }
        return false;
      },
      token
    });
  }
  async revealStash(stash, options) {
    return vscode__WEBPACK_IMPORTED_MODULE_0__.window.withProgress({
      location: vscode__WEBPACK_IMPORTED_MODULE_0__.ProgressLocation.Notification,
      title: `Revealing ${_git_git__WEBPACK_IMPORTED_MODULE_4__.GitReference.toString(stash, { icon: false })} in the side bar...`,
      cancellable: true
    }, async (progress, token) => {
      const node = await this.findStash(stash, token);
      if (node == null)
        return void 0;
      await this.ensureRevealNode(node, options);
      return node;
    });
  }
  setFilesLayout(layout) {
    return _configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.updateEffective(`views.${this.configKey}.files.layout`, layout);
  }
}
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_6__.gate)(() => "")
], StashesView.prototype, "revealStash", 1);


/***/ }),

/***/ "./src/views/tagsView.ts":
/*!*******************************!*\
  !*** ./src/views/tagsView.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TagsRepositoryNode": () => (/* binding */ TagsRepositoryNode),
/* harmony export */   "TagsViewNode": () => (/* binding */ TagsViewNode),
/* harmony export */   "TagsView": () => (/* binding */ TagsView)
/* harmony export */ });
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _configuration__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../configuration */ "./src/configuration.ts");
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../constants */ "./src/constants.ts");
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../container */ "./src/container.ts");
/* harmony import */ var _git_git__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../git/git */ "./src/git/git.ts");
/* harmony import */ var _git_gitUri__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../git/gitUri */ "./src/git/gitUri.ts");
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../system */ "./src/system.ts");
/* harmony import */ var _nodes__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./nodes */ "./src/views/nodes.ts");
/* harmony import */ var _viewBase__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./viewBase */ "./src/views/viewBase.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};









class TagsRepositoryNode extends _nodes__WEBPACK_IMPORTED_MODULE_7__.RepositoryFolderNode {
  async getChildren() {
    if (this.child == null) {
      this.child = new _nodes__WEBPACK_IMPORTED_MODULE_7__.TagsNode(this.uri, this.view, this, this.repo);
    }
    return this.child.getChildren();
  }
  changed(e) {
    return e.changed(_git_git__WEBPACK_IMPORTED_MODULE_4__.RepositoryChange.Tags, _git_git__WEBPACK_IMPORTED_MODULE_4__.RepositoryChange.Unknown, _git_git__WEBPACK_IMPORTED_MODULE_4__.RepositoryChangeComparisonMode.Any);
  }
}
class TagsViewNode extends _nodes__WEBPACK_IMPORTED_MODULE_7__.ViewNode {
  constructor(view) {
    super(_nodes__WEBPACK_IMPORTED_MODULE_7__.unknownGitUri, view);
    __publicField(this, "splatted", true);
    __publicField(this, "children");
  }
  async getChildren() {
    if (this.children == null) {
      const repositories = await _container__WEBPACK_IMPORTED_MODULE_3__.Container.git.getOrderedRepositories();
      if (repositories.length === 0) {
        this.view.message = "No tags could be found.";
        return [];
      }
      this.view.message = void 0;
      const splat = repositories.length === 1;
      this.children = repositories.map((r) => new TagsRepositoryNode(_git_gitUri__WEBPACK_IMPORTED_MODULE_5__.GitUri.fromRepoPath(r.path), this.view, this, r, splat));
    }
    if (this.children.length === 1) {
      const [child] = this.children;
      if (!child.repo.supportsChangeEvents) {
        this.view.description = `${_system__WEBPACK_IMPORTED_MODULE_6__.Strings.pad(_constants__WEBPACK_IMPORTED_MODULE_2__.GlyphChars.Warning, 0, 2)}Auto-refresh unavailable`;
      }
      const tags = await child.repo.getTags();
      if (tags.length === 0) {
        this.view.message = "No tags could be found.";
        this.view.title = "Tags";
        void child.ensureSubscription();
        return [];
      }
      this.view.message = void 0;
      this.view.title = `Tags (${tags.length})`;
      return child.getChildren();
    }
    return this.children;
  }
  getTreeItem() {
    const item = new vscode__WEBPACK_IMPORTED_MODULE_0__.TreeItem("Tags", vscode__WEBPACK_IMPORTED_MODULE_0__.TreeItemCollapsibleState.Expanded);
    return item;
  }
  async getSplattedChild() {
    var _a;
    if (this.children == null) {
      await this.getChildren();
    }
    return ((_a = this.children) == null ? void 0 : _a.length) === 1 ? this.children[0] : void 0;
  }
  refresh(reset = false) {
    if (reset && this.children != null) {
      for (const child of this.children) {
        child.dispose();
      }
      this.children = void 0;
    }
  }
}
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_6__.gate)(),
  (0,_system__WEBPACK_IMPORTED_MODULE_6__.debug)()
], TagsViewNode.prototype, "refresh", 1);
class TagsView extends _viewBase__WEBPACK_IMPORTED_MODULE_8__.ViewBase {
  constructor() {
    super("gitlens.views.tags", "Tags");
    __publicField(this, "configKey", "tags");
  }
  getRoot() {
    return new TagsViewNode(this);
  }
  registerCommands() {
    void _container__WEBPACK_IMPORTED_MODULE_3__.Container.viewCommands;
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("copy"), () => vscode__WEBPACK_IMPORTED_MODULE_0__.commands.executeCommand("gitlens.views.copy", this.selection), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("refresh"), async () => {
      await _container__WEBPACK_IMPORTED_MODULE_3__.Container.git.resetCaches("tags");
      return this.refresh(true);
    }, this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("setLayoutToList"), () => this.setLayout(_configuration__WEBPACK_IMPORTED_MODULE_1__.ViewBranchesLayout.List), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("setLayoutToTree"), () => this.setLayout(_configuration__WEBPACK_IMPORTED_MODULE_1__.ViewBranchesLayout.Tree), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("setFilesLayoutToAuto"), () => this.setFilesLayout(_configuration__WEBPACK_IMPORTED_MODULE_1__.ViewFilesLayout.Auto), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("setFilesLayoutToList"), () => this.setFilesLayout(_configuration__WEBPACK_IMPORTED_MODULE_1__.ViewFilesLayout.List), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("setFilesLayoutToTree"), () => this.setFilesLayout(_configuration__WEBPACK_IMPORTED_MODULE_1__.ViewFilesLayout.Tree), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("setShowAvatarsOn"), () => this.setShowAvatars(true), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(this.getQualifiedCommand("setShowAvatarsOff"), () => this.setShowAvatars(false), this);
  }
  filterConfigurationChanged(e) {
    const changed = super.filterConfigurationChanged(e);
    if (!changed && !_configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.changed(e, "defaultDateFormat") && !_configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.changed(e, "defaultDateShortFormat") && !_configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.changed(e, "defaultDateSource") && !_configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.changed(e, "defaultDateStyle") && !_configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.changed(e, "defaultGravatarsStyle") && !_configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.changed(e, "defaultTimeFormat") && !_configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.changed(e, "sortTagsBy")) {
      return false;
    }
    return true;
  }
  findTag(tag, token) {
    const repoNodeId = _nodes__WEBPACK_IMPORTED_MODULE_7__.RepositoryNode.getId(tag.repoPath);
    return this.findNode((n) => {
      var _a;
      return ((_a = n.tag) == null ? void 0 : _a.ref) === tag.ref;
    }, {
      allowPaging: true,
      maxDepth: 2,
      canTraverse: (n) => {
        if (n instanceof TagsViewNode)
          return true;
        if (n instanceof TagsRepositoryNode || n instanceof _nodes__WEBPACK_IMPORTED_MODULE_7__.BranchOrTagFolderNode) {
          return n.id.startsWith(repoNodeId);
        }
        return false;
      },
      token
    });
  }
  revealTag(tag, options) {
    return vscode__WEBPACK_IMPORTED_MODULE_0__.window.withProgress({
      location: vscode__WEBPACK_IMPORTED_MODULE_0__.ProgressLocation.Notification,
      title: `Revealing ${_git_git__WEBPACK_IMPORTED_MODULE_4__.GitReference.toString(tag, { icon: false })} in the side bar...`,
      cancellable: true
    }, async (progress, token) => {
      const node = await this.findTag(tag, token);
      if (node == null)
        return void 0;
      await this.ensureRevealNode(node, options);
      return node;
    });
  }
  setLayout(layout) {
    return _configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.updateEffective(`views.${this.configKey}.branches.layout`, layout);
  }
  setFilesLayout(layout) {
    return _configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.updateEffective(`views.${this.configKey}.files.layout`, layout);
  }
  setShowAvatars(enabled) {
    return _configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.updateEffective(`views.${this.configKey}.avatars`, enabled);
  }
}
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_6__.gate)(() => "")
], TagsView.prototype, "revealTag", 1);


/***/ }),

/***/ "./src/views/viewBase.ts":
/*!*******************************!*\
  !*** ./src/views/viewBase.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ViewBase": () => (/* binding */ ViewBase)
/* harmony export */ });
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _configuration__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../configuration */ "./src/configuration.ts");
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../container */ "./src/container.ts");
/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../logger */ "./src/logger.ts");
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../system */ "./src/system.ts");
/* harmony import */ var _nodes__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./nodes */ "./src/views/nodes.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};






class ViewBase {
  constructor(id, name) {
    this.id = id;
    this.name = name;
    __publicField(this, "_onDidChangeTreeData", new vscode__WEBPACK_IMPORTED_MODULE_0__.EventEmitter());
    __publicField(this, "_onDidChangeVisibility", new vscode__WEBPACK_IMPORTED_MODULE_0__.EventEmitter());
    __publicField(this, "_onDidChangeNodeCollapsibleState", new vscode__WEBPACK_IMPORTED_MODULE_0__.EventEmitter());
    __publicField(this, "disposable");
    __publicField(this, "root");
    __publicField(this, "tree");
    __publicField(this, "_lastKnownLimits", new Map());
    __publicField(this, "_title");
    __publicField(this, "_description");
    __publicField(this, "_message");
    __publicField(this, "configKey");
    __publicField(this, "_config");
    if (_logger__WEBPACK_IMPORTED_MODULE_3__.Logger.isDebugging || _container__WEBPACK_IMPORTED_MODULE_2__.Container.config.debug) {
      let addDebuggingInfo = function(item, node, parent) {
        var _a;
        if (item.tooltip == null) {
          item.tooltip = new vscode__WEBPACK_IMPORTED_MODULE_0__.MarkdownString(item.label != null && typeof item.label !== "string" ? item.label.label : (_a = item.label) != null ? _a : "");
        }
        if (typeof item.tooltip === "string") {
          item.tooltip = `${item.tooltip}

---
context: ${item.contextValue}
node: ${node.toString()}${parent != null ? `
parent: ${parent.toString()}` : ""}`;
        } else {
          item.tooltip.appendMarkdown(`

---

context: \`${item.contextValue}\`\\
node: \`${node.toString()}\`${parent != null ? `\\
parent: \`${parent.toString()}\`` : ""}`);
        }
      };
      const getTreeItem = this.getTreeItem;
      this.getTreeItem = async function(node) {
        const item = await getTreeItem.apply(this, [node]);
        const parent = node.getParent();
        if (node.resolveTreeItem != null) {
          const resolveTreeItem = node.resolveTreeItem;
          node.resolveTreeItem = async function(item2) {
            const resolvedItem = await resolveTreeItem.apply(this, [item2]);
            addDebuggingInfo(resolvedItem, node, parent);
            return resolvedItem;
          };
          return item;
        }
        addDebuggingInfo(item, node, parent);
        return item;
      };
    }
    this.registerCommands();
    _container__WEBPACK_IMPORTED_MODULE_2__.Container.context.subscriptions.push(_configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.onDidChange((e) => {
      if (!this.filterConfigurationChanged(e))
        return;
      this._config = void 0;
      this.onConfigurationChanged(e);
    }, this));
    this.initialize({ showCollapseAll: this.showCollapseAll });
    setImmediate(() => this.onConfigurationChanged());
  }
  get onDidChangeTreeData() {
    return this._onDidChangeTreeData.event;
  }
  get onDidChangeVisibility() {
    return this._onDidChangeVisibility.event;
  }
  get onDidChangeNodeCollapsibleState() {
    return this._onDidChangeNodeCollapsibleState.event;
  }
  get showCollapseAll() {
    return true;
  }
  filterConfigurationChanged(e) {
    if (!_configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.changed(e, "views"))
      return false;
    if (_configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.changed(e, `views.${this.configKey}`))
      return true;
    for (const key of _configuration__WEBPACK_IMPORTED_MODULE_1__.viewsCommonConfigKeys) {
      if (_configuration__WEBPACK_IMPORTED_MODULE_1__.configuration.changed(e, `views.${key}`))
        return true;
    }
    return false;
  }
  dispose() {
    var _a;
    (_a = this.disposable) == null ? void 0 : _a.dispose();
  }
  get title() {
    return this._title;
  }
  set title(value) {
    this._title = value;
    if (this.tree != null) {
      this.tree.title = value;
    }
  }
  get description() {
    return this._description;
  }
  set description(value) {
    this._description = value;
    if (this.tree != null) {
      this.tree.description = value;
    }
  }
  get message() {
    return this._message;
  }
  set message(value) {
    this._message = value;
    if (this.tree != null) {
      this.tree.message = value;
    }
  }
  getQualifiedCommand(command) {
    return `${this.id}.${command}`;
  }
  onConfigurationChanged(e) {
    if (e != null && this.root != null) {
      void this.refresh(true);
    }
  }
  initialize(options = {}) {
    if (this.disposable != null) {
      this.disposable.dispose();
      this._onDidChangeTreeData = new vscode__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
    }
    this.tree = vscode__WEBPACK_IMPORTED_MODULE_0__.window.createTreeView(this.id, {
      ...options,
      treeDataProvider: this
    });
    this.disposable = vscode__WEBPACK_IMPORTED_MODULE_0__.Disposable.from(this.tree, this.tree.onDidChangeVisibility(_system__WEBPACK_IMPORTED_MODULE_4__.Functions.debounce(this.onVisibilityChanged, 250), this), this.tree.onDidCollapseElement(this.onElementCollapsed, this), this.tree.onDidExpandElement(this.onElementExpanded, this));
    this._title = this.tree.title;
  }
  ensureRoot(force = false) {
    if (this.root == null || force) {
      this.root = this.getRoot();
    }
    return this.root;
  }
  getChildren(node) {
    if (node != null)
      return node.getChildren();
    const root = this.ensureRoot();
    return root.getChildren();
  }
  getParent(node) {
    return node.getParent();
  }
  getTreeItem(node) {
    return node.getTreeItem();
  }
  resolveTreeItem(item, node) {
    return node.resolveTreeItem(item);
  }
  onElementCollapsed(e) {
    this._onDidChangeNodeCollapsibleState.fire({ ...e, state: vscode__WEBPACK_IMPORTED_MODULE_0__.TreeItemCollapsibleState.Collapsed });
  }
  onElementExpanded(e) {
    this._onDidChangeNodeCollapsibleState.fire({ ...e, state: vscode__WEBPACK_IMPORTED_MODULE_0__.TreeItemCollapsibleState.Expanded });
  }
  onVisibilityChanged(e) {
    this._onDidChangeVisibility.fire(e);
  }
  get selection() {
    if (this.tree == null || this.root == null)
      return [];
    return this.tree.selection;
  }
  get visible() {
    return this.tree != null ? this.tree.visible : false;
  }
  async findNode(predicate, {
    allowPaging = false,
    canTraverse,
    maxDepth = 2,
    token
  } = {}) {
    const cc = _logger__WEBPACK_IMPORTED_MODULE_3__.Logger.getCorrelationContext();
    if (this.root == null) {
      await this.show();
    }
    try {
      const node = await this.findNodeCoreBFS(typeof predicate === "string" ? (n) => n.id === predicate : predicate, this.ensureRoot(), allowPaging, canTraverse, maxDepth, token);
      return node;
    } catch (ex) {
      _logger__WEBPACK_IMPORTED_MODULE_3__.Logger.error(ex, cc);
      return void 0;
    }
  }
  async findNodeCoreBFS(predicate, root, allowPaging, canTraverse, maxDepth, token) {
    var _a;
    const queue = [root, void 0];
    const defaultPageSize = _container__WEBPACK_IMPORTED_MODULE_2__.Container.config.advanced.maxListItems;
    let depth = 0;
    let node;
    let children;
    let pagedChildren;
    while (queue.length > 1) {
      if (token == null ? void 0 : token.isCancellationRequested)
        return void 0;
      node = queue.shift();
      if (node == null) {
        depth++;
        queue.push(void 0);
        if (depth > maxDepth)
          break;
        continue;
      }
      if (predicate(node))
        return node;
      if (canTraverse != null) {
        const traversable = canTraverse(node);
        if (_system__WEBPACK_IMPORTED_MODULE_4__.Promises.is(traversable)) {
          if (!await traversable)
            continue;
        } else if (!traversable) {
          continue;
        }
      }
      children = await node.getChildren();
      if (children.length === 0)
        continue;
      while (node != null && !_nodes__WEBPACK_IMPORTED_MODULE_5__.PageableViewNode.is(node)) {
        node = await ((_a = node.getSplattedChild) == null ? void 0 : _a.call(node));
      }
      if (node != null && _nodes__WEBPACK_IMPORTED_MODULE_5__.PageableViewNode.is(node)) {
        let child = children.find(predicate);
        if (child != null)
          return child;
        if (allowPaging && node.hasMore) {
          while (true) {
            if (token == null ? void 0 : token.isCancellationRequested)
              return void 0;
            await this.loadMoreNodeChildren(node, defaultPageSize);
            pagedChildren = await _system__WEBPACK_IMPORTED_MODULE_4__.Promises.cancellable(Promise.resolve(node.getChildren()), token != null ? token : 6e4, {
              onDidCancel: (resolve) => resolve([])
            });
            child = pagedChildren.find(predicate);
            if (child != null)
              return child;
            if (!node.hasMore)
              break;
          }
        }
        continue;
      }
      queue.push(...children);
    }
    return void 0;
  }
  async ensureRevealNode(node, options) {
    const nodes = [];
    let parent = node;
    while (parent != null) {
      nodes.push(parent);
      parent = parent.getParent();
    }
    if (nodes.length > 1) {
      nodes.pop();
    }
    for (const n of nodes.reverse()) {
      try {
        await this.reveal(n, options);
      } catch {
      }
    }
  }
  async refresh(reset = false) {
    var _a, _b;
    await ((_b = (_a = this.root) == null ? void 0 : _a.refresh) == null ? void 0 : _b.call(_a, reset));
    this.triggerNodeChange();
  }
  async refreshNode(node, reset = false, force = false) {
    var _a;
    const cancel = await ((_a = node.refresh) == null ? void 0 : _a.call(node, reset));
    if (!force && cancel === true)
      return;
    this.triggerNodeChange(node);
  }
  async reveal(node, options) {
    if (this.tree == null)
      return;
    try {
      await this.tree.reveal(node, options);
    } catch (ex) {
      _logger__WEBPACK_IMPORTED_MODULE_3__.Logger.error(ex);
    }
  }
  async show() {
    try {
      void await vscode__WEBPACK_IMPORTED_MODULE_0__.commands.executeCommand(`${this.id}.focus`);
    } catch (ex) {
      _logger__WEBPACK_IMPORTED_MODULE_3__.Logger.error(ex);
    }
  }
  getNodeLastKnownLimit(node) {
    return this._lastKnownLimits.get(node.id);
  }
  async loadMoreNodeChildren(node, limit, previousNode) {
    if (previousNode != null) {
      void await this.reveal(previousNode, { select: true });
    }
    await node.loadMore(limit);
    this._lastKnownLimits.set(node.id, node.limit);
  }
  resetNodeLastKnownLimit(node) {
    this._lastKnownLimits.delete(node.id);
  }
  triggerNodeChange(node) {
    this._onDidChangeTreeData.fire(node != null && node !== this.root ? node : void 0);
  }
  get config() {
    if (this._config == null) {
      const cfg = { ..._container__WEBPACK_IMPORTED_MODULE_2__.Container.config.views };
      for (const view of _configuration__WEBPACK_IMPORTED_MODULE_1__.viewsConfigKeys) {
        delete cfg[view];
      }
      this._config = { ...cfg, ..._container__WEBPACK_IMPORTED_MODULE_2__.Container.config.views[this.configKey] };
    }
    return this._config;
  }
}
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_4__.log)({
    args: {
      0: (predicate) => typeof predicate === "string" ? predicate : "function",
      1: (opts) => `options=${JSON.stringify({ ...opts, canTraverse: void 0, token: void 0 })}`
    }
  })
], ViewBase.prototype, "findNode", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_4__.debug)()
], ViewBase.prototype, "refresh", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_4__.debug)({
    args: { 0: (n) => n.toString() }
  })
], ViewBase.prototype, "refreshNode", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_4__.log)({
    args: { 0: (n) => n.toString() }
  })
], ViewBase.prototype, "reveal", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_4__.log)()
], ViewBase.prototype, "show", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_4__.debug)({
    args: {
      0: (n) => n.toString(),
      3: (n) => n == null ? "" : n.toString()
    }
  })
], ViewBase.prototype, "loadMoreNodeChildren", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_4__.debug)({ args: { 0: (n) => n.toString() }, singleLine: true })
], ViewBase.prototype, "resetNodeLastKnownLimit", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_4__.debug)({
    args: { 0: (n) => n != null ? n.toString() : "" }
  })
], ViewBase.prototype, "triggerNodeChange", 1);


/***/ }),

/***/ "./src/views/viewCommands.ts":
/*!***********************************!*\
  !*** ./src/views/viewCommands.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ViewCommands": () => (/* binding */ ViewCommands)
/* harmony export */ });
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _commands__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../commands */ "./src/commands.ts");
/* harmony import */ var _configuration__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../configuration */ "./src/configuration.ts");
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../constants */ "./src/constants.ts");
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../container */ "./src/container.ts");
/* harmony import */ var _git_git__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../git/git */ "./src/git/git.ts");
/* harmony import */ var _git_gitService__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../git/gitService */ "./src/git/gitService.ts");
/* harmony import */ var _git_gitUri__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../git/gitUri */ "./src/git/gitUri.ts");
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../system */ "./src/system.ts");
/* harmony import */ var _terminal__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../terminal */ "./src/terminal.ts");
/* harmony import */ var _nodes__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./nodes */ "./src/views/nodes.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};











class ViewCommands {
  constructor() {
    __publicField(this, "_selectedFile");
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand("gitlens.views.clearNode", (n) => (0,_nodes__WEBPACK_IMPORTED_MODULE_10__.canClearNode)(n) && n.clear(), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand("gitlens.views.copy", async (selection) => {
      selection = Array.isArray(selection) ? selection : [selection];
      if (selection.length === 0)
        return;
      const data = selection.map((n) => {
        var _a;
        return (_a = n.toClipboard) == null ? void 0 : _a.call(n);
      }).filter((s) => s != null && s.length > 0).join(",");
      await vscode__WEBPACK_IMPORTED_MODULE_0__.env.clipboard.writeText(data);
    }, this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand("gitlens.views.dismissNode", (n) => (0,_nodes__WEBPACK_IMPORTED_MODULE_10__.canViewDismissNode)(n.view) && n.view.dismissNode(n), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand("gitlens.views.editNode", (n) => (0,_nodes__WEBPACK_IMPORTED_MODULE_10__.canEditNode)(n) && n.edit(), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand("gitlens.views.expandNode", (n) => n.view.reveal(n, { select: false, focus: false, expand: 3 }), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand("gitlens.views.loadMoreChildren", (n) => n.loadMore(), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand("gitlens.views.loadAllChildren", (n) => n.loadAll(), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand("gitlens.views.refreshNode", (n, reset) => {
      if (reset == null && _nodes__WEBPACK_IMPORTED_MODULE_10__.PageableViewNode.is(n)) {
        n.limit = void 0;
        n.view.resetNodeLastKnownLimit(n);
      }
      return n.view.refreshNode(n, reset == null ? true : reset);
    }, this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand("gitlens.views.setShowRelativeDateMarkersOn", () => this.setShowRelativeDateMarkers(true), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand("gitlens.views.setShowRelativeDateMarkersOff", () => this.setShowRelativeDateMarkers(false), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand("gitlens.views.fetch", this.fetch, this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand("gitlens.views.publishBranch", this.publishBranch, this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand("gitlens.views.publishRepository", this.publishRepository, this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand("gitlens.views.pull", this.pull, this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand("gitlens.views.push", this.push, this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand("gitlens.views.pushWithForce", (n) => this.push(n, true), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand("gitlens.views.closeRepository", this.closeRepository, this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand("gitlens.views.setAsDefault", this.setAsDefault, this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand("gitlens.views.unsetAsDefault", this.unsetAsDefault, this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand("gitlens.views.openInTerminal", this.openInTerminal, this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand("gitlens.views.star", this.star, this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand("gitlens.views.unstar", this.unstar, this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand("gitlens.views.browseRepoAtRevision", this.browseRepoAtRevision, this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand("gitlens.views.browseRepoAtRevisionInNewWindow", (n) => this.browseRepoAtRevision(n, { openInNewWindow: true }), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand("gitlens.views.browseRepoBeforeRevision", (n) => this.browseRepoAtRevision(n, { before: true }), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand("gitlens.views.browseRepoBeforeRevisionInNewWindow", (n) => this.browseRepoAtRevision(n, { before: true, openInNewWindow: true }), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand("gitlens.views.addAuthors", this.addAuthors, this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand("gitlens.views.addAuthor", this.addAuthors, this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand("gitlens.views.openChanges", this.openChanges, this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand("gitlens.views.openChangesWithWorking", this.openChangesWithWorking, this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand("gitlens.views.openPreviousChangesWithWorking", this.openPreviousChangesWithWorking, this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand("gitlens.views.openFile", this.openFile, this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand("gitlens.views.openFileRevision", this.openRevision, this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand("gitlens.views.openChangedFiles", this.openFiles, this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand("gitlens.views.openChangedFileDiffs", this.openAllChanges, this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand("gitlens.views.openChangedFileDiffsWithWorking", this.openAllChangesWithWorking, this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand("gitlens.views.openChangedFileRevisions", this.openRevisions, this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand("gitlens.views.applyChanges", this.applyChanges, this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand("gitlens.views.highlightChanges", this.highlightChanges, this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand("gitlens.views.highlightRevisionChanges", this.highlightRevisionChanges, this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand("gitlens.views.restore", this.restore, this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand("gitlens.views.switchToBranch", this.switch, this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand("gitlens.views.switchToAnotherBranch", this.switch, this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand("gitlens.views.switchToCommit", this.switch, this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand("gitlens.views.switchToTag", this.switch, this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand("gitlens.views.addRemote", this.addRemote, this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand("gitlens.views.pruneRemote", this.pruneRemote, this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand("gitlens.views.stageDirectory", this.stageDirectory, this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand("gitlens.views.stageFile", this.stageFile, this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand("gitlens.views.unstageDirectory", this.unstageDirectory, this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand("gitlens.views.unstageFile", this.unstageFile, this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand("gitlens.views.compareAncestryWithWorking", this.compareAncestryWithWorking, this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand("gitlens.views.compareWithHead", this.compareHeadWith, this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand("gitlens.views.compareWithUpstream", this.compareWithUpstream, this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand("gitlens.views.compareWithSelected", this.compareWithSelected, this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand("gitlens.views.selectForCompare", this.selectForCompare, this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand("gitlens.views.compareFileWithSelected", this.compareFileWithSelected, this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand("gitlens.views.selectFileForCompare", this.selectFileForCompare, this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand("gitlens.views.compareWithWorking", this.compareWorkingWith, this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand("gitlens.views.setBranchComparisonToWorking", (n) => this.setBranchComparison(n, _configuration__WEBPACK_IMPORTED_MODULE_2__.ViewShowBranchComparison.Working), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand("gitlens.views.setBranchComparisonToBranch", (n) => this.setBranchComparison(n, _configuration__WEBPACK_IMPORTED_MODULE_2__.ViewShowBranchComparison.Branch), this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand("gitlens.views.cherryPick", this.cherryPick, this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand("gitlens.views.createBranch", this.createBranch, this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand("gitlens.views.deleteBranch", this.deleteBranch, this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand("gitlens.views.renameBranch", this.renameBranch, this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand("gitlens.views.deleteStash", this.deleteStash, this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand("gitlens.views.createTag", this.createTag, this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand("gitlens.views.deleteTag", this.deleteTag, this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand("gitlens.views.mergeBranchInto", this.merge, this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand("gitlens.views.pushToCommit", this.pushToCommit, this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand("gitlens.views.rebaseOntoBranch", this.rebase, this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand("gitlens.views.rebaseOntoUpstream", this.rebaseToRemote, this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand("gitlens.views.rebaseOntoCommit", this.rebase, this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand("gitlens.views.resetCommit", this.resetCommit, this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand("gitlens.views.resetToCommit", this.resetToCommit, this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand("gitlens.views.revert", this.revert, this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand("gitlens.views.undoCommit", this.undoCommit, this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand("gitlens.views.terminalRemoveRemote", this.terminalRemoveRemote, this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand("gitlens.views.createPullRequest", this.createPullRequest, this);
    vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand("gitlens.views.openPullRequest", this.openPullRequest, this);
  }
  addAuthors(node) {
    if (node != null && !(node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.ContributorNode) && !(node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.ContributorsNode)) {
      return Promise.resolve();
    }
    return _commands__WEBPACK_IMPORTED_MODULE_1__.GitActions.Contributor.addAuthors(node == null ? void 0 : node.uri.repoPath, node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.ContributorNode ? node.contributor : void 0);
  }
  addRemote(node) {
    return _commands__WEBPACK_IMPORTED_MODULE_1__.GitActions.Remote.add(node == null ? void 0 : node.repoPath);
  }
  applyChanges(node) {
    if (!(node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.ViewRefFileNode))
      return Promise.resolve();
    if (node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.ResultsFileNode) {
      return _commands__WEBPACK_IMPORTED_MODULE_1__.GitActions.Commit.applyChanges(node.file, _git_git__WEBPACK_IMPORTED_MODULE_5__.GitReference.create(node.ref1, node.repoPath), _git_git__WEBPACK_IMPORTED_MODULE_5__.GitReference.create(node.ref2, node.repoPath));
    }
    if (node.ref == null || node.ref.ref === "HEAD")
      return Promise.resolve();
    return _commands__WEBPACK_IMPORTED_MODULE_1__.GitActions.Commit.applyChanges(node.file, node.ref);
  }
  browseRepoAtRevision(node, options) {
    if (!(node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.ViewRefNode))
      return Promise.resolve();
    return _commands__WEBPACK_IMPORTED_MODULE_1__.GitActions.browseAtRevision(node.uri, {
      before: options == null ? void 0 : options.before,
      openInNewWindow: options == null ? void 0 : options.openInNewWindow
    });
  }
  cherryPick(node) {
    if (!(node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.CommitNode))
      return Promise.resolve();
    return _commands__WEBPACK_IMPORTED_MODULE_1__.GitActions.cherryPick(node.repoPath, node.ref);
  }
  closeRepository(node) {
    if (!(node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.RepositoryNode) && !(node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.RepositoryFolderNode))
      return;
    node.repo.closed = true;
  }
  async createBranch(node) {
    var _a;
    let from = node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.ViewRefNode ? node == null ? void 0 : node.ref : node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.BranchTrackingStatusNode ? node.branch : void 0;
    if (from == null) {
      const branch = await _container__WEBPACK_IMPORTED_MODULE_4__.Container.git.getBranch((_a = node == null ? void 0 : node.repoPath) != null ? _a : await _container__WEBPACK_IMPORTED_MODULE_4__.Container.git.getActiveRepoPath());
      from = branch;
    }
    return _commands__WEBPACK_IMPORTED_MODULE_1__.GitActions.Branch.create(node == null ? void 0 : node.repoPath, from);
  }
  async createPullRequest(node) {
    var _a;
    if (!(node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.BranchNode) && !(node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.BranchTrackingStatusNode)) {
      return Promise.resolve();
    }
    const remote = await node.branch.getRemote();
    return (0,_commands__WEBPACK_IMPORTED_MODULE_1__.executeActionCommand)("createPullRequest", {
      repoPath: node.repoPath,
      remote: remote != null ? {
        name: remote.name,
        provider: remote.provider != null ? {
          id: remote.provider.id,
          name: remote.provider.name,
          domain: remote.provider.domain
        } : void 0,
        url: remote.url
      } : void 0,
      branch: {
        name: node.branch.name,
        upstream: (_a = node.branch.upstream) == null ? void 0 : _a.name,
        isRemote: node.branch.remote
      }
    });
  }
  async createTag(node) {
    var _a;
    let from = node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.ViewRefNode ? node == null ? void 0 : node.ref : node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.BranchTrackingStatusNode ? node.branch : void 0;
    if (from == null) {
      const branch = await _container__WEBPACK_IMPORTED_MODULE_4__.Container.git.getBranch((_a = node == null ? void 0 : node.repoPath) != null ? _a : await _container__WEBPACK_IMPORTED_MODULE_4__.Container.git.getActiveRepoPath());
      from = branch;
    }
    return _commands__WEBPACK_IMPORTED_MODULE_1__.GitActions.Tag.create(node == null ? void 0 : node.repoPath, from);
  }
  deleteBranch(node) {
    if (!(node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.BranchNode))
      return Promise.resolve();
    return _commands__WEBPACK_IMPORTED_MODULE_1__.GitActions.Branch.remove(node.repoPath, node.branch);
  }
  deleteStash(node) {
    if (!(node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.StashNode))
      return Promise.resolve();
    return _commands__WEBPACK_IMPORTED_MODULE_1__.GitActions.Stash.drop(node.repoPath, node.commit);
  }
  deleteTag(node) {
    if (!(node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.TagNode))
      return Promise.resolve();
    return _commands__WEBPACK_IMPORTED_MODULE_1__.GitActions.Tag.remove(node.repoPath, node.tag);
  }
  fetch(node) {
    if (node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.RepositoryNode || node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.RepositoryFolderNode)
      return _commands__WEBPACK_IMPORTED_MODULE_1__.GitActions.fetch(node.repo);
    if (node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.RemoteNode)
      return _commands__WEBPACK_IMPORTED_MODULE_1__.GitActions.Remote.fetch(node.remote.repoPath, node.remote.name);
    if (node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.BranchNode || node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.BranchTrackingStatusNode) {
      return _commands__WEBPACK_IMPORTED_MODULE_1__.GitActions.fetch(node.repoPath, node.root ? void 0 : node.branch);
    }
    return Promise.resolve();
  }
  async highlightChanges(node) {
    if (!(node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.CommitFileNode) && !(node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.StashFileNode) && !(node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.FileRevisionAsCommitNode) && !(node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.ResultsFileNode)) {
      return;
    }
    void await this.openFile(node, { preserveFocus: true, preview: true });
    void await _container__WEBPACK_IMPORTED_MODULE_4__.Container.fileAnnotations.toggle(vscode__WEBPACK_IMPORTED_MODULE_0__.window.activeTextEditor, _configuration__WEBPACK_IMPORTED_MODULE_2__.FileAnnotationType.Changes, { sha: node.ref.ref }, true);
  }
  async highlightRevisionChanges(node) {
    if (!(node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.CommitFileNode) && !(node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.StashFileNode) && !(node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.FileRevisionAsCommitNode) && !(node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.ResultsFileNode)) {
      return;
    }
    void await this.openFile(node, { preserveFocus: true, preview: true });
    void await _container__WEBPACK_IMPORTED_MODULE_4__.Container.fileAnnotations.toggle(vscode__WEBPACK_IMPORTED_MODULE_0__.window.activeTextEditor, _configuration__WEBPACK_IMPORTED_MODULE_2__.FileAnnotationType.Changes, { sha: node.ref.ref, only: true }, true);
  }
  merge(node) {
    if (!(node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.BranchNode) && !(node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.TagNode))
      return Promise.resolve();
    return _commands__WEBPACK_IMPORTED_MODULE_1__.GitActions.merge(node.repoPath, node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.BranchNode ? node.branch : node.tag);
  }
  pushToCommit(node) {
    if (!(node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.CommitNode) && !(node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.FileRevisionAsCommitNode))
      return Promise.resolve();
    return _commands__WEBPACK_IMPORTED_MODULE_1__.GitActions.push(node.repoPath, false, node.commit);
  }
  openPullRequest(node) {
    if (!(node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.PullRequestNode))
      return Promise.resolve();
    return (0,_commands__WEBPACK_IMPORTED_MODULE_1__.executeActionCommand)("openPullRequest", {
      repoPath: node.uri.repoPath,
      provider: {
        id: node.pullRequest.provider.id,
        name: node.pullRequest.provider.name,
        domain: node.pullRequest.provider.domain
      },
      pullRequest: {
        id: node.pullRequest.id,
        url: node.pullRequest.url
      }
    });
  }
  openInTerminal(node) {
    if (!(node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.RepositoryNode) && !(node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.RepositoryFolderNode))
      return Promise.resolve();
    return vscode__WEBPACK_IMPORTED_MODULE_0__.commands.executeCommand(_constants__WEBPACK_IMPORTED_MODULE_3__.BuiltInCommands.OpenInTerminal, vscode__WEBPACK_IMPORTED_MODULE_0__.Uri.file(node.repo.path));
  }
  async pruneRemote(node) {
    if (!(node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.RemoteNode))
      return Promise.resolve();
    return _commands__WEBPACK_IMPORTED_MODULE_1__.GitActions.Remote.prune(node.repo, node.remote.name);
  }
  publishBranch(node) {
    if (node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.BranchNode || node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.BranchTrackingStatusNode) {
      return _commands__WEBPACK_IMPORTED_MODULE_1__.GitActions.push(node.repoPath, void 0, node.branch);
    }
    return Promise.resolve();
  }
  publishRepository(node) {
    if (node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.BranchNode || node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.BranchTrackingStatusNode) {
      return vscode__WEBPACK_IMPORTED_MODULE_0__.commands.executeCommand(_constants__WEBPACK_IMPORTED_MODULE_3__.BuiltInGitCommands.Publish, vscode__WEBPACK_IMPORTED_MODULE_0__.Uri.file(node.repoPath));
    }
    return Promise.resolve();
  }
  pull(node) {
    if (node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.RepositoryNode || node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.RepositoryFolderNode)
      return _commands__WEBPACK_IMPORTED_MODULE_1__.GitActions.pull(node.repo);
    if (node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.BranchNode || node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.BranchTrackingStatusNode) {
      return _commands__WEBPACK_IMPORTED_MODULE_1__.GitActions.pull(node.repoPath, node.root ? void 0 : node.branch);
    }
    return Promise.resolve();
  }
  push(node, force) {
    if (node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.RepositoryNode || node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.RepositoryFolderNode) {
      return _commands__WEBPACK_IMPORTED_MODULE_1__.GitActions.push(node.repo, force);
    }
    if (node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.BranchNode || node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.BranchTrackingStatusNode) {
      return _commands__WEBPACK_IMPORTED_MODULE_1__.GitActions.push(node.repoPath, void 0, node.root ? void 0 : node.branch);
    }
    if (node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.CommitNode || node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.FileRevisionAsCommitNode) {
      if (node.isTip) {
        return _commands__WEBPACK_IMPORTED_MODULE_1__.GitActions.push(node.repoPath, force);
      }
      return this.pushToCommit(node);
    }
    return Promise.resolve();
  }
  rebase(node) {
    if (!(node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.BranchNode) && !(node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.CommitNode) && !(node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.FileRevisionAsCommitNode) && !(node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.TagNode)) {
      return Promise.resolve();
    }
    return _commands__WEBPACK_IMPORTED_MODULE_1__.GitActions.rebase(node.repoPath, node.ref);
  }
  rebaseToRemote(node) {
    var _a;
    if (!(node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.BranchNode) && !(node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.BranchTrackingStatusNode))
      return Promise.resolve();
    const upstream = node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.BranchNode ? (_a = node.branch.upstream) == null ? void 0 : _a.name : node.status.upstream;
    if (upstream == null)
      return Promise.resolve();
    return _commands__WEBPACK_IMPORTED_MODULE_1__.GitActions.rebase(node.repoPath, _git_git__WEBPACK_IMPORTED_MODULE_5__.GitReference.create(upstream, node.repoPath, {
      refType: "branch",
      name: upstream,
      remote: true
    }));
  }
  renameBranch(node) {
    if (!(node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.BranchNode))
      return Promise.resolve();
    return _commands__WEBPACK_IMPORTED_MODULE_1__.GitActions.Branch.rename(node.repoPath, node.branch);
  }
  resetCommit(node) {
    if (!(node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.CommitNode) && !(node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.FileRevisionAsCommitNode))
      return Promise.resolve();
    return _commands__WEBPACK_IMPORTED_MODULE_1__.GitActions.reset(node.repoPath, _git_git__WEBPACK_IMPORTED_MODULE_5__.GitReference.create(`${node.ref.ref}^`, node.ref.repoPath, {
      refType: "revision",
      name: `${node.ref.name}^`,
      message: node.ref.message
    }));
  }
  resetToCommit(node) {
    if (!(node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.CommitNode) && !(node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.FileRevisionAsCommitNode))
      return Promise.resolve();
    return _commands__WEBPACK_IMPORTED_MODULE_1__.GitActions.reset(node.repoPath, node.ref);
  }
  restore(node) {
    if (!(node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.ViewRefFileNode))
      return Promise.resolve();
    return _commands__WEBPACK_IMPORTED_MODULE_1__.GitActions.Commit.restoreFile(node.fileName, node.ref);
  }
  revert(node) {
    if (!(node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.CommitNode) && !(node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.FileRevisionAsCommitNode))
      return Promise.resolve();
    return _commands__WEBPACK_IMPORTED_MODULE_1__.GitActions.revert(node.repoPath, node.ref);
  }
  setAsDefault(node) {
    if (!(node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.RemoteNode))
      return Promise.resolve();
    return node.setAsDefault();
  }
  setBranchComparison(node, comparisonType) {
    if (!(node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.CompareBranchNode))
      return void 0;
    return node.setComparisonType(comparisonType);
  }
  setShowRelativeDateMarkers(enabled) {
    return _configuration__WEBPACK_IMPORTED_MODULE_2__.configuration.updateEffective("views.showRelativeDateMarkers", enabled);
  }
  async stageFile(node) {
    if (!(node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.CommitFileNode) && !(node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.FileRevisionAsCommitNode) && !(node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.StatusFileNode)) {
      return;
    }
    void await _container__WEBPACK_IMPORTED_MODULE_4__.Container.git.stageFile(node.repoPath, node.file.fileName);
    void node.triggerChange();
  }
  async stageDirectory(node) {
    if (!(node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.FolderNode) || !node.relativePath)
      return;
    void await _container__WEBPACK_IMPORTED_MODULE_4__.Container.git.stageDirectory(node.repoPath, node.relativePath);
    void node.triggerChange();
  }
  star(node) {
    if (!(node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.BranchNode) && !(node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.RepositoryNode) && !(node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.RepositoryFolderNode)) {
      return Promise.resolve();
    }
    return node.star();
  }
  switch(node) {
    if (node == null) {
      return _commands__WEBPACK_IMPORTED_MODULE_1__.GitActions.switchTo(_container__WEBPACK_IMPORTED_MODULE_4__.Container.git.getHighlanderRepoPath());
    }
    if (!(node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.ViewRefNode) && !(node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.BranchesNode))
      return Promise.resolve();
    return _commands__WEBPACK_IMPORTED_MODULE_1__.GitActions.switchTo(node.repoPath, node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.BranchesNode || node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.BranchNode && node.branch.current ? void 0 : node.ref);
  }
  async undoCommit(node) {
    if (!(node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.CommitNode) && !(node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.FileRevisionAsCommitNode))
      return;
    const repo = await _git_gitService__WEBPACK_IMPORTED_MODULE_6__.GitService.getOrOpenBuiltInGitRepository(node.repoPath);
    const commit = await (repo == null ? void 0 : repo.getCommit("HEAD"));
    if ((commit == null ? void 0 : commit.hash) !== node.ref.ref) {
      void vscode__WEBPACK_IMPORTED_MODULE_0__.window.showWarningMessage(`Commit ${_git_git__WEBPACK_IMPORTED_MODULE_5__.GitReference.toString(node.ref, {
        capitalize: true,
        icon: false
      })} cannot be undone, because it is no longer the most recent commit.`);
      return;
    }
    await vscode__WEBPACK_IMPORTED_MODULE_0__.commands.executeCommand(_constants__WEBPACK_IMPORTED_MODULE_3__.BuiltInGitCommands.UndoCommit, node.repoPath);
  }
  unsetAsDefault(node) {
    if (!(node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.RemoteNode))
      return Promise.resolve();
    return node.setAsDefault(false);
  }
  async unstageFile(node) {
    if (!(node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.CommitFileNode) && !(node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.FileRevisionAsCommitNode) && !(node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.StatusFileNode)) {
      return;
    }
    void await _container__WEBPACK_IMPORTED_MODULE_4__.Container.git.unStageFile(node.repoPath, node.file.fileName);
    void node.triggerChange();
  }
  async unstageDirectory(node) {
    if (!(node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.FolderNode) || !node.relativePath)
      return;
    void await _container__WEBPACK_IMPORTED_MODULE_4__.Container.git.unStageDirectory(node.repoPath, node.relativePath);
    void node.triggerChange();
  }
  unstar(node) {
    if (!(node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.BranchNode) && !(node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.RepositoryNode) && !(node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.RepositoryFolderNode)) {
      return Promise.resolve();
    }
    return node.unstar();
  }
  compareHeadWith(node) {
    if (!(node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.ViewRefNode))
      return Promise.resolve();
    return _container__WEBPACK_IMPORTED_MODULE_4__.Container.searchAndCompareView.compare(node.repoPath, "HEAD", node.ref);
  }
  compareWithUpstream(node) {
    if (!(node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.BranchNode))
      return Promise.resolve();
    if (node.branch.upstream == null)
      return Promise.resolve();
    return _container__WEBPACK_IMPORTED_MODULE_4__.Container.searchAndCompareView.compare(node.repoPath, node.ref, node.branch.upstream.name);
  }
  compareWorkingWith(node) {
    if (!(node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.ViewRefNode))
      return Promise.resolve();
    return _container__WEBPACK_IMPORTED_MODULE_4__.Container.searchAndCompareView.compare(node.repoPath, "", node.ref);
  }
  async compareAncestryWithWorking(node) {
    if (!(node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.BranchNode))
      return void 0;
    const branch = await _container__WEBPACK_IMPORTED_MODULE_4__.Container.git.getBranch(node.repoPath);
    if (branch == null)
      return void 0;
    const commonAncestor = await _container__WEBPACK_IMPORTED_MODULE_4__.Container.git.getMergeBase(node.repoPath, branch.ref, node.ref.ref);
    if (commonAncestor == null)
      return void 0;
    return _container__WEBPACK_IMPORTED_MODULE_4__.Container.searchAndCompareView.compare(node.repoPath, { ref: commonAncestor, label: `ancestry with ${node.ref.ref} (${_git_git__WEBPACK_IMPORTED_MODULE_5__.GitRevision.shorten(commonAncestor)})` }, "");
  }
  compareWithSelected(node) {
    if (!(node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.ViewRefNode))
      return;
    _container__WEBPACK_IMPORTED_MODULE_4__.Container.searchAndCompareView.compareWithSelected(node.repoPath, node.ref);
  }
  selectForCompare(node) {
    if (!(node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.ViewRefNode))
      return;
    _container__WEBPACK_IMPORTED_MODULE_4__.Container.searchAndCompareView.selectForCompare(node.repoPath, node.ref);
  }
  compareFileWithSelected(node) {
    if (this._selectedFile == null || !(node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.ViewRefFileNode) || node.ref == null) {
      return Promise.resolve();
    }
    if (this._selectedFile.repoPath !== node.repoPath) {
      this.selectFileForCompare(node);
      return Promise.resolve();
    }
    const selected = this._selectedFile;
    this._selectedFile = void 0;
    void (0,_constants__WEBPACK_IMPORTED_MODULE_3__.setContext)(_constants__WEBPACK_IMPORTED_MODULE_3__.ContextKeys.ViewsCanCompareFile, false);
    return (0,_commands__WEBPACK_IMPORTED_MODULE_1__.executeCommand)(_commands__WEBPACK_IMPORTED_MODULE_1__.Commands.DiffWith, {
      repoPath: selected.repoPath,
      lhs: {
        sha: selected.ref,
        uri: selected.uri
      },
      rhs: {
        sha: node.ref.ref,
        uri: node.uri
      }
    });
  }
  selectFileForCompare(node) {
    if (!(node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.ViewRefFileNode) || node.ref == null)
      return;
    this._selectedFile = {
      ref: node.ref.ref,
      repoPath: node.repoPath,
      uri: node.uri
    };
    void (0,_constants__WEBPACK_IMPORTED_MODULE_3__.setContext)(_constants__WEBPACK_IMPORTED_MODULE_3__.ContextKeys.ViewsCanCompareFile, true);
  }
  async openAllChanges(node, options) {
    if (!(node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.CommitNode) && !(node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.StashNode) && !(node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.ResultsFilesNode)) {
      return void 0;
    }
    if (node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.ResultsFilesNode) {
      const { files: diff } = await node.getFilesQueryResults();
      if (diff == null || diff.length === 0)
        return void 0;
      return _commands__WEBPACK_IMPORTED_MODULE_1__.GitActions.Commit.openAllChanges(diff, {
        repoPath: node.repoPath,
        ref1: node.ref1,
        ref2: node.ref2
      }, options);
    }
    return _commands__WEBPACK_IMPORTED_MODULE_1__.GitActions.Commit.openAllChanges(node.commit, options);
  }
  openChanges(node) {
    if (!(node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.ViewRefFileNode) && !(node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.MergeConflictFileNode) && !(node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.StatusFileNode)) {
      return;
    }
    if (node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.MergeConflictFileNode) {
      void (0,_commands__WEBPACK_IMPORTED_MODULE_1__.executeCommand)(_commands__WEBPACK_IMPORTED_MODULE_1__.Commands.DiffWith, {
        lhs: {
          sha: node.status.HEAD.ref,
          uri: _git_gitUri__WEBPACK_IMPORTED_MODULE_7__.GitUri.fromFile(node.file, node.repoPath, void 0, true)
        },
        rhs: {
          sha: "HEAD",
          uri: _git_gitUri__WEBPACK_IMPORTED_MODULE_7__.GitUri.fromFile(node.file, node.repoPath)
        },
        repoPath: node.repoPath,
        line: 0,
        showOptions: {
          preserveFocus: false,
          preview: false
        }
      });
      return;
    }
    const command = node.getCommand();
    if ((command == null ? void 0 : command.arguments) == null)
      return;
    switch (command.command) {
      case _commands__WEBPACK_IMPORTED_MODULE_1__.Commands.DiffWith: {
        const [args] = command.arguments;
        args.showOptions.preview = false;
        void (0,_commands__WEBPACK_IMPORTED_MODULE_1__.executeCommand)(command.command, args);
        break;
      }
      case _commands__WEBPACK_IMPORTED_MODULE_1__.Commands.DiffWithPrevious: {
        const [, args] = command.arguments;
        args.showOptions.preview = false;
        void (0,_commands__WEBPACK_IMPORTED_MODULE_1__.executeEditorCommand)(command.command, void 0, args);
        break;
      }
      default:
        throw new Error(`Unexpected command: ${command.command}`);
    }
  }
  async openAllChangesWithWorking(node, options) {
    if (!(node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.CommitNode) && !(node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.StashNode) && !(node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.ResultsFilesNode)) {
      return void 0;
    }
    if (node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.ResultsFilesNode) {
      const { files: diff } = await node.getFilesQueryResults();
      if (diff == null || diff.length === 0)
        return void 0;
      return _commands__WEBPACK_IMPORTED_MODULE_1__.GitActions.Commit.openAllChangesWithWorking(diff, {
        repoPath: node.repoPath,
        ref: node.ref1 || node.ref2
      }, options);
    }
    return _commands__WEBPACK_IMPORTED_MODULE_1__.GitActions.Commit.openAllChangesWithWorking(node.commit, options);
  }
  async openChangesWithWorking(node) {
    if (!(node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.ViewRefFileNode) && !(node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.MergeConflictFileNode) && !(node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.StatusFileNode)) {
      return Promise.resolve();
    }
    if (node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.StatusFileNode) {
      return (0,_commands__WEBPACK_IMPORTED_MODULE_1__.executeEditorCommand)(_commands__WEBPACK_IMPORTED_MODULE_1__.Commands.DiffWithWorking, void 0, {
        uri: node.uri,
        showOptions: {
          preserveFocus: true,
          preview: true
        }
      });
    } else if (node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.MergeConflictFileNode) {
      return (0,_commands__WEBPACK_IMPORTED_MODULE_1__.executeEditorCommand)(_commands__WEBPACK_IMPORTED_MODULE_1__.Commands.DiffWithWorking, void 0, {
        uri: node.baseUri,
        showOptions: {
          preserveFocus: true,
          preview: true
        }
      });
    } else if (node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.FileRevisionAsCommitNode && node.commit.hasConflicts) {
      const baseUri = await node.getConflictBaseUri();
      if (baseUri != null) {
        return (0,_commands__WEBPACK_IMPORTED_MODULE_1__.executeEditorCommand)(_commands__WEBPACK_IMPORTED_MODULE_1__.Commands.DiffWithWorking, void 0, {
          uri: baseUri,
          showOptions: {
            preserveFocus: true,
            preview: true
          }
        });
      }
    }
    return _commands__WEBPACK_IMPORTED_MODULE_1__.GitActions.Commit.openChangesWithWorking(node.file, { repoPath: node.repoPath, ref: node.ref.ref });
  }
  async openPreviousChangesWithWorking(node) {
    if (!(node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.ViewRefFileNode))
      return Promise.resolve();
    return _commands__WEBPACK_IMPORTED_MODULE_1__.GitActions.Commit.openChangesWithWorking(node.file, {
      repoPath: node.repoPath,
      ref: `${node.ref.ref}^`
    });
  }
  openFile(node, options) {
    if (!(node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.ViewRefFileNode) && !(node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.MergeConflictFileNode) && !(node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.StatusFileNode) && !(node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.FileHistoryNode) && !(node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.LineHistoryNode)) {
      return Promise.resolve();
    }
    return _commands__WEBPACK_IMPORTED_MODULE_1__.GitActions.Commit.openFile(node.uri, {
      preserveFocus: true,
      preview: false,
      ...options
    });
  }
  async openFiles(node) {
    if (!(node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.CommitNode) && !(node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.StashNode) && !(node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.ResultsFilesNode)) {
      return void 0;
    }
    if (node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.ResultsFilesNode) {
      const { files: diff } = await node.getFilesQueryResults();
      if (diff == null || diff.length === 0)
        return void 0;
      return _commands__WEBPACK_IMPORTED_MODULE_1__.GitActions.Commit.openFiles(diff, node.repoPath, node.ref1 || node.ref2);
    }
    return _commands__WEBPACK_IMPORTED_MODULE_1__.GitActions.Commit.openFiles(node.commit);
  }
  openRevision(node, options) {
    var _a;
    if (!(node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.CommitFileNode) && !(node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.FileRevisionAsCommitNode) && !(node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.ResultsFileNode) && !(node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.StashFileNode) && !(node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.MergeConflictFileNode) && !(node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.StatusFileNode)) {
      return Promise.resolve();
    }
    options = { showOptions: { preserveFocus: true, preview: false }, ...options };
    let uri = options.revisionUri;
    if (uri == null) {
      if (node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.ResultsFileNode || node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.MergeConflictFileNode) {
        uri = _git_gitUri__WEBPACK_IMPORTED_MODULE_7__.GitUri.toRevisionUri(node.uri);
      } else {
        uri = node.commit.status === "D" ? _git_gitUri__WEBPACK_IMPORTED_MODULE_7__.GitUri.toRevisionUri(node.commit.previousSha, node.commit.previousUri.fsPath, node.commit.repoPath) : _git_gitUri__WEBPACK_IMPORTED_MODULE_7__.GitUri.toRevisionUri(node.uri);
      }
    }
    return _commands__WEBPACK_IMPORTED_MODULE_1__.GitActions.Commit.openFileAtRevision(uri, (_a = options.showOptions) != null ? _a : { preserveFocus: true, preview: false });
  }
  async openRevisions(node, _options) {
    if (!(node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.CommitNode) && !(node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.StashNode) && !(node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.ResultsFilesNode)) {
      return void 0;
    }
    if (node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.ResultsFilesNode) {
      const { files: diff } = await node.getFilesQueryResults();
      if (diff == null || diff.length === 0)
        return void 0;
      return _commands__WEBPACK_IMPORTED_MODULE_1__.GitActions.Commit.openFilesAtRevision(diff, node.repoPath, node.ref1, node.ref2);
    }
    return _commands__WEBPACK_IMPORTED_MODULE_1__.GitActions.Commit.openFilesAtRevision(node.commit);
  }
  terminalRemoveRemote(node) {
    if (!(node instanceof _nodes__WEBPACK_IMPORTED_MODULE_10__.RemoteNode))
      return;
    (0,_terminal__WEBPACK_IMPORTED_MODULE_9__.runGitCommandInTerminal)("remote", `remove ${node.remote.name}`, node.remote.repoPath);
  }
}
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_8__.debug)()
], ViewCommands.prototype, "addAuthors", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_8__.debug)()
], ViewCommands.prototype, "addRemote", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_8__.debug)()
], ViewCommands.prototype, "applyChanges", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_8__.debug)()
], ViewCommands.prototype, "browseRepoAtRevision", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_8__.debug)()
], ViewCommands.prototype, "cherryPick", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_8__.debug)()
], ViewCommands.prototype, "closeRepository", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_8__.debug)()
], ViewCommands.prototype, "createBranch", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_8__.debug)()
], ViewCommands.prototype, "createPullRequest", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_8__.debug)()
], ViewCommands.prototype, "createTag", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_8__.debug)()
], ViewCommands.prototype, "deleteBranch", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_8__.debug)()
], ViewCommands.prototype, "deleteStash", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_8__.debug)()
], ViewCommands.prototype, "deleteTag", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_8__.debug)()
], ViewCommands.prototype, "fetch", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_8__.debug)()
], ViewCommands.prototype, "highlightChanges", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_8__.debug)()
], ViewCommands.prototype, "highlightRevisionChanges", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_8__.debug)()
], ViewCommands.prototype, "merge", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_8__.debug)()
], ViewCommands.prototype, "pushToCommit", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_8__.debug)()
], ViewCommands.prototype, "openPullRequest", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_8__.debug)()
], ViewCommands.prototype, "openInTerminal", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_8__.debug)()
], ViewCommands.prototype, "pruneRemote", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_8__.debug)()
], ViewCommands.prototype, "publishBranch", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_8__.debug)()
], ViewCommands.prototype, "publishRepository", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_8__.debug)()
], ViewCommands.prototype, "pull", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_8__.debug)()
], ViewCommands.prototype, "push", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_8__.debug)()
], ViewCommands.prototype, "rebase", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_8__.debug)()
], ViewCommands.prototype, "rebaseToRemote", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_8__.debug)()
], ViewCommands.prototype, "renameBranch", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_8__.debug)()
], ViewCommands.prototype, "resetCommit", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_8__.debug)()
], ViewCommands.prototype, "resetToCommit", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_8__.debug)()
], ViewCommands.prototype, "restore", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_8__.debug)()
], ViewCommands.prototype, "revert", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_8__.debug)()
], ViewCommands.prototype, "setAsDefault", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_8__.debug)()
], ViewCommands.prototype, "setBranchComparison", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_8__.debug)()
], ViewCommands.prototype, "setShowRelativeDateMarkers", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_8__.debug)()
], ViewCommands.prototype, "stageFile", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_8__.debug)()
], ViewCommands.prototype, "stageDirectory", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_8__.debug)()
], ViewCommands.prototype, "star", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_8__.debug)()
], ViewCommands.prototype, "switch", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_8__.debug)()
], ViewCommands.prototype, "undoCommit", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_8__.debug)()
], ViewCommands.prototype, "unsetAsDefault", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_8__.debug)()
], ViewCommands.prototype, "unstageFile", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_8__.debug)()
], ViewCommands.prototype, "unstageDirectory", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_8__.debug)()
], ViewCommands.prototype, "unstar", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_8__.debug)()
], ViewCommands.prototype, "compareHeadWith", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_8__.debug)()
], ViewCommands.prototype, "compareWithUpstream", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_8__.debug)()
], ViewCommands.prototype, "compareWorkingWith", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_8__.debug)()
], ViewCommands.prototype, "compareAncestryWithWorking", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_8__.debug)()
], ViewCommands.prototype, "compareWithSelected", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_8__.debug)()
], ViewCommands.prototype, "selectForCompare", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_8__.debug)()
], ViewCommands.prototype, "compareFileWithSelected", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_8__.debug)()
], ViewCommands.prototype, "selectFileForCompare", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_8__.debug)()
], ViewCommands.prototype, "openAllChanges", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_8__.debug)()
], ViewCommands.prototype, "openChanges", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_8__.debug)()
], ViewCommands.prototype, "openAllChangesWithWorking", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_8__.debug)()
], ViewCommands.prototype, "openChangesWithWorking", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_8__.debug)()
], ViewCommands.prototype, "openPreviousChangesWithWorking", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_8__.debug)()
], ViewCommands.prototype, "openFile", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_8__.debug)()
], ViewCommands.prototype, "openFiles", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_8__.debug)()
], ViewCommands.prototype, "openRevision", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_8__.debug)()
], ViewCommands.prototype, "openRevisions", 1);


/***/ }),

/***/ "./src/views/viewDecorationProvider.ts":
/*!*********************************************!*\
  !*** ./src/views/viewDecorationProvider.ts ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ViewFileDecorationProvider": () => (/* binding */ ViewFileDecorationProvider)
/* harmony export */ });
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../constants */ "./src/constants.ts");
/* harmony import */ var _git_git__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../git/git */ "./src/git/git.ts");

var __defProp = Object.defineProperty;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};



class ViewFileDecorationProvider {
  constructor() {
    __publicField(this, "_onDidChange", new vscode__WEBPACK_IMPORTED_MODULE_0__.EventEmitter());
    __publicField(this, "disposable");
    this.disposable = vscode__WEBPACK_IMPORTED_MODULE_0__.Disposable.from(vscode__WEBPACK_IMPORTED_MODULE_0__.window.registerFileDecorationProvider({
      provideFileDecoration: (uri, token) => {
        if (uri.scheme !== "gitlens-view")
          return void 0;
        if (uri.authority === "branch") {
          return this.provideBranchCurrentDecoration(uri, token);
        }
        if (uri.authority === "remote") {
          return this.provideRemoteDefaultDecoration(uri, token);
        }
        return void 0;
      }
    }), vscode__WEBPACK_IMPORTED_MODULE_0__.window.registerFileDecorationProvider(this));
  }
  get onDidChange() {
    return this._onDidChange.event;
  }
  dispose() {
    this.disposable.dispose();
  }
  provideFileDecoration(uri, token) {
    if (uri.scheme !== "gitlens-view")
      return void 0;
    switch (uri.authority) {
      case "branch":
        return this.provideBranchStatusDecoration(uri, token);
      case "commit-file":
        return this.provideCommitFileStatusDecoration(uri, token);
    }
    return void 0;
  }
  provideCommitFileStatusDecoration(uri, _token) {
    const [, , status] = uri.path.split("/");
    switch (status) {
      case "!":
        return {
          badge: "I",
          color: new vscode__WEBPACK_IMPORTED_MODULE_0__.ThemeColor("gitlens.decorations.ignoredForegroundColor"),
          tooltip: "Ignored"
        };
      case "?":
        return {
          badge: "U",
          color: new vscode__WEBPACK_IMPORTED_MODULE_0__.ThemeColor("gitlens.decorations.untrackedForegroundColor"),
          tooltip: "Untracked"
        };
      case "A":
        return {
          badge: "A",
          color: new vscode__WEBPACK_IMPORTED_MODULE_0__.ThemeColor("gitlens.decorations.addedForegroundColor"),
          tooltip: "Added"
        };
      case "C":
        return {
          badge: "C",
          color: new vscode__WEBPACK_IMPORTED_MODULE_0__.ThemeColor("gitlens.decorations.copiedForegroundColor"),
          tooltip: "Copied"
        };
      case "D":
        return {
          badge: "D",
          color: new vscode__WEBPACK_IMPORTED_MODULE_0__.ThemeColor("gitlens.decorations.deletedForegroundColor"),
          tooltip: "Deleted"
        };
      case "M":
        return {
          badge: "M",
          tooltip: "Modified"
        };
      case "R":
        return {
          badge: "R",
          color: new vscode__WEBPACK_IMPORTED_MODULE_0__.ThemeColor("gitlens.decorations.renamedForegroundColor"),
          tooltip: "Renamed"
        };
      default:
        return void 0;
    }
  }
  provideBranchStatusDecoration(uri, _token) {
    const [, , status] = uri.path.split("/");
    switch (status) {
      case _git_git__WEBPACK_IMPORTED_MODULE_2__.GitBranchStatus.Ahead:
        return {
          badge: "\u25B2",
          color: new vscode__WEBPACK_IMPORTED_MODULE_0__.ThemeColor("gitlens.decorations.branchAheadForegroundColor"),
          tooltip: "Ahead"
        };
      case _git_git__WEBPACK_IMPORTED_MODULE_2__.GitBranchStatus.Behind:
        return {
          badge: "\u25BC",
          color: new vscode__WEBPACK_IMPORTED_MODULE_0__.ThemeColor("gitlens.decorations.branchBehindForegroundColor"),
          tooltip: "Behind"
        };
      case _git_git__WEBPACK_IMPORTED_MODULE_2__.GitBranchStatus.Diverged:
        return {
          badge: "\u25BC\u25B2",
          color: new vscode__WEBPACK_IMPORTED_MODULE_0__.ThemeColor("gitlens.decorations.branchDivergedForegroundColor"),
          tooltip: "Diverged"
        };
      case _git_git__WEBPACK_IMPORTED_MODULE_2__.GitBranchStatus.MissingUpstream:
        return {
          badge: "!",
          color: new vscode__WEBPACK_IMPORTED_MODULE_0__.ThemeColor("gitlens.decorations.branchMissingUpstreamForegroundColor"),
          tooltip: "Missing Upstream"
        };
      case _git_git__WEBPACK_IMPORTED_MODULE_2__.GitBranchStatus.UpToDate:
        return {
          badge: "",
          color: new vscode__WEBPACK_IMPORTED_MODULE_0__.ThemeColor("gitlens.decorations.branchUpToDateForegroundColor"),
          tooltip: "Up to Date"
        };
      case _git_git__WEBPACK_IMPORTED_MODULE_2__.GitBranchStatus.Unpublished:
        return {
          badge: "\u25B2+",
          color: new vscode__WEBPACK_IMPORTED_MODULE_0__.ThemeColor("gitlens.decorations.branchUnpublishedForegroundColor"),
          tooltip: "Unpublished"
        };
      default:
        return void 0;
    }
  }
  provideBranchCurrentDecoration(uri, _token) {
    const [, , status, current] = uri.path.split("/");
    if (!current)
      return void 0;
    let color;
    switch (status) {
      case _git_git__WEBPACK_IMPORTED_MODULE_2__.GitBranchStatus.Ahead:
        color = new vscode__WEBPACK_IMPORTED_MODULE_0__.ThemeColor("gitlens.decorations.branchAheadForegroundColor");
        break;
      case _git_git__WEBPACK_IMPORTED_MODULE_2__.GitBranchStatus.Behind:
        color = new vscode__WEBPACK_IMPORTED_MODULE_0__.ThemeColor("gitlens.decorations.branchBehindForegroundColor");
        break;
      case _git_git__WEBPACK_IMPORTED_MODULE_2__.GitBranchStatus.Diverged:
        color = new vscode__WEBPACK_IMPORTED_MODULE_0__.ThemeColor("gitlens.decorations.branchDivergedForegroundColor");
        break;
      case _git_git__WEBPACK_IMPORTED_MODULE_2__.GitBranchStatus.UpToDate:
        color = new vscode__WEBPACK_IMPORTED_MODULE_0__.ThemeColor("gitlens.decorations.branchUpToDateForegroundColor");
        break;
      case _git_git__WEBPACK_IMPORTED_MODULE_2__.GitBranchStatus.Unpublished:
        color = new vscode__WEBPACK_IMPORTED_MODULE_0__.ThemeColor("gitlens.decorations.branchUnpublishedForegroundColor");
        break;
    }
    return {
      badge: _constants__WEBPACK_IMPORTED_MODULE_1__.GlyphChars.Check,
      color,
      tooltip: "Current Branch"
    };
  }
  provideRemoteDefaultDecoration(uri, _token) {
    const [, isDefault] = uri.path.split("/");
    if (!isDefault)
      return void 0;
    return {
      badge: _constants__WEBPACK_IMPORTED_MODULE_1__.GlyphChars.Check,
      tooltip: "Default Remote"
    };
  }
}


/***/ }),

/***/ "./src/vsls/guest.ts":
/*!***************************!*\
  !*** ./src/vsls/guest.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "VslsGuestService": () => (/* binding */ VslsGuestService)
/* harmony export */ });
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _extension__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../extension */ "./src/extension.ts");
/* harmony import */ var _git_git__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../git/git */ "./src/git/git.ts");
/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../logger */ "./src/logger.ts");
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../system */ "./src/system.ts");
/* harmony import */ var _host__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./host */ "./src/vsls/host.ts");
/* harmony import */ var _protocol__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./protocol */ "./src/vsls/protocol.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};







const _VslsGuestService = class {
  constructor(_api, _service) {
    this._api = _api;
    this._service = _service;
    _service.onDidChangeIsServiceAvailable(this.onAvailabilityChanged.bind(this));
    this.onAvailabilityChanged(_service.isServiceAvailable);
  }
  static async connect(api) {
    const cc = _logger__WEBPACK_IMPORTED_MODULE_3__.Logger.getCorrelationContext();
    try {
      const service = await api.getSharedService(_host__WEBPACK_IMPORTED_MODULE_5__.VslsHostService.ServiceId);
      if (service == null) {
        throw new Error("Failed to connect to host service");
      }
      return new _VslsGuestService(api, service);
    } catch (ex) {
      _logger__WEBPACK_IMPORTED_MODULE_3__.Logger.error(ex, cc);
      return void 0;
    }
  }
  dispose() {
  }
  onAvailabilityChanged(available) {
    if (available) {
      void (0,_extension__WEBPACK_IMPORTED_MODULE_1__.setEnabled)(true);
      return;
    }
    void (0,_extension__WEBPACK_IMPORTED_MODULE_1__.setEnabled)(false);
    void vscode__WEBPACK_IMPORTED_MODULE_0__.window.showWarningMessage("GitLens features will be unavailable. Unable to connect to the host GitLens service. The host may have disabled GitLens guest access or may not have GitLens installed.");
  }
  async git(options, ...args) {
    const response = await this.sendRequest(_protocol__WEBPACK_IMPORTED_MODULE_6__.GitCommandRequestType, { options, args });
    if (response.isBuffer) {
      return Buffer.from(response.data, "binary");
    }
    return response.data;
  }
  async getRepositoriesInFolder(folder, onAnyRepositoryChanged) {
    const response = await this.sendRequest(_protocol__WEBPACK_IMPORTED_MODULE_6__.RepositoriesInFolderRequestType, {
      folderUri: folder.uri.toString(true)
    });
    return response.repositories.map((r) => new _git_git__WEBPACK_IMPORTED_MODULE_2__.Repository(folder, r.path, r.root, onAnyRepositoryChanged, !vscode__WEBPACK_IMPORTED_MODULE_0__.window.state.focused, r.closed));
  }
  sendRequest(requestType, request, _cancellation) {
    return this._service.request(requestType.name, [request]);
  }
};
let VslsGuestService = _VslsGuestService;
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_4__.log)()
], VslsGuestService.prototype, "onAvailabilityChanged", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_4__.log)()
], VslsGuestService.prototype, "git", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_4__.log)()
], VslsGuestService.prototype, "getRepositoriesInFolder", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_4__.debug)()
], VslsGuestService.prototype, "sendRequest", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_4__.log)()
], VslsGuestService, "connect", 1);


/***/ }),

/***/ "./src/vsls/host.ts":
/*!**************************!*\
  !*** ./src/vsls/host.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "VslsHostService": () => (/* binding */ VslsHostService)
/* harmony export */ });
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../container */ "./src/container.ts");
/* harmony import */ var _git_git__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../git/git */ "./src/git/git.ts");
/* harmony import */ var _git_gitUri__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../git/gitUri */ "./src/git/gitUri.ts");
/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../logger */ "./src/logger.ts");
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../system */ "./src/system.ts");
/* harmony import */ var _protocol__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./protocol */ "./src/vsls/protocol.ts");
/* harmony import */ var _vsls__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./vsls */ "./src/vsls/vsls.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};








const defaultWhitelistFn = () => true;
const gitWhitelist = new Map([
  ["blame", defaultWhitelistFn],
  ["branch", (args) => args[1] === "--contains"],
  ["cat-file", defaultWhitelistFn],
  ["check-mailmap", defaultWhitelistFn],
  ["check-ref-format", defaultWhitelistFn],
  ["config", (args) => args[1] === "--get" || args[1] === "--get-regex"],
  ["diff", defaultWhitelistFn],
  ["difftool", defaultWhitelistFn],
  ["for-each-ref", defaultWhitelistFn],
  ["log", defaultWhitelistFn],
  ["ls-files", defaultWhitelistFn],
  ["ls-tree", defaultWhitelistFn],
  ["merge-base", defaultWhitelistFn],
  ["remote", (args) => args[1] === "-v" || args[1] === "get-url"],
  ["rev-list", defaultWhitelistFn],
  ["rev-parse", defaultWhitelistFn],
  ["shortlog", defaultWhitelistFn],
  ["show", defaultWhitelistFn],
  ["show-ref", defaultWhitelistFn],
  ["stash", (args) => args[1] === "list"],
  ["status", defaultWhitelistFn],
  ["symbolic-ref", defaultWhitelistFn],
  ["tag", (args) => args[1] === "-l"]
]);
const leadingSlashRegex = /^[/|\\]/;
const _VslsHostService = class {
  constructor(_api, _service) {
    this._api = _api;
    this._service = _service;
    __publicField(this, "_disposable");
    __publicField(this, "_localPathsRegex");
    __publicField(this, "_localToSharedPaths", new Map());
    __publicField(this, "_sharedPathsRegex");
    __publicField(this, "_sharedToLocalPaths", new Map());
    _service.onDidChangeIsServiceAvailable(this.onAvailabilityChanged.bind(this));
    this._disposable = vscode__WEBPACK_IMPORTED_MODULE_0__.Disposable.from(vscode__WEBPACK_IMPORTED_MODULE_0__.workspace.onDidChangeWorkspaceFolders(this.onWorkspaceFoldersChanged, this));
    this.onRequest(_protocol__WEBPACK_IMPORTED_MODULE_6__.GitCommandRequestType, this.onGitCommandRequest.bind(this));
    this.onRequest(_protocol__WEBPACK_IMPORTED_MODULE_6__.RepositoriesInFolderRequestType, this.onRepositoriesInFolderRequest.bind(this));
    void this.onWorkspaceFoldersChanged();
  }
  static async share(api) {
    const service = await api.shareService(this.ServiceId);
    if (service == null) {
      throw new Error("Failed to share host service");
    }
    return new _VslsHostService(api, service);
  }
  dispose() {
    this._disposable.dispose();
    void this._api.unshareService(_VslsHostService.ServiceId);
  }
  onRequest(requestType, handler) {
    this._service.onRequest(requestType.name, (args, cancellation) => handler(args[0], cancellation));
  }
  onAvailabilityChanged(_available) {
  }
  onWorkspaceFoldersChanged(_e) {
    if (vscode__WEBPACK_IMPORTED_MODULE_0__.workspace.workspaceFolders === void 0 || vscode__WEBPACK_IMPORTED_MODULE_0__.workspace.workspaceFolders.length === 0)
      return;
    const cc = _logger__WEBPACK_IMPORTED_MODULE_4__.Logger.getCorrelationContext();
    this._localToSharedPaths.clear();
    this._sharedToLocalPaths.clear();
    let localPath;
    let sharedPath;
    for (const f of vscode__WEBPACK_IMPORTED_MODULE_0__.workspace.workspaceFolders) {
      localPath = _system__WEBPACK_IMPORTED_MODULE_5__.Strings.normalizePath(f.uri.fsPath);
      sharedPath = _system__WEBPACK_IMPORTED_MODULE_5__.Strings.normalizePath(this.convertLocalUriToShared(f.uri).fsPath);
      _logger__WEBPACK_IMPORTED_MODULE_4__.Logger.debug(cc, `shared='${sharedPath}' \u2194 local='${localPath}'`);
      this._localToSharedPaths.set(localPath, sharedPath);
      this._sharedToLocalPaths.set(sharedPath, localPath);
    }
    let localPaths = _system__WEBPACK_IMPORTED_MODULE_5__.Iterables.join(this._sharedToLocalPaths.values(), "|");
    localPaths = localPaths.replace(/(\/|\\)/g, "[\\\\/|\\\\]");
    this._localPathsRegex = new RegExp(`(${localPaths})`, "gi");
    let sharedPaths = _system__WEBPACK_IMPORTED_MODULE_5__.Iterables.join(this._localToSharedPaths.values(), "|");
    sharedPaths = sharedPaths.replace(/(\/|\\)/g, "[\\\\/|\\\\]");
    this._sharedPathsRegex = new RegExp(`^(${sharedPaths})`, "i");
  }
  async onGitCommandRequest(request, _cancellation) {
    var _a, _b;
    const { options, args } = request;
    const fn = gitWhitelist.get(request.args[0]);
    if (fn === void 0 || !fn(request.args))
      throw new Error(`Git ${request.args[0]} command is not allowed`);
    let isRootWorkspace = false;
    if (options.cwd !== void 0 && options.cwd.length > 0 && this._sharedToLocalPaths !== void 0) {
      if ((_a = this._sharedPathsRegex) == null ? void 0 : _a.test(options.cwd)) {
        options.cwd = _system__WEBPACK_IMPORTED_MODULE_5__.Strings.normalizePath(options.cwd).replace(this._sharedPathsRegex, (match, shared) => {
          if (!isRootWorkspace) {
            isRootWorkspace = shared === "/~0";
          }
          const local = this._sharedToLocalPaths.get(shared);
          return local != null ? local : shared;
        });
      } else if (leadingSlashRegex.test(options.cwd)) {
        const localCwd = this._sharedToLocalPaths.get("/~0");
        if (localCwd !== void 0) {
          isRootWorkspace = true;
          options.cwd = _git_gitUri__WEBPACK_IMPORTED_MODULE_3__.GitUri.resolve(options.cwd, localCwd);
        }
      }
    }
    let files = false;
    let i = -1;
    for (const arg of args) {
      i++;
      if (arg === "--") {
        files = true;
        continue;
      }
      if (!files)
        continue;
      if (typeof arg === "string") {
        if (isRootWorkspace && leadingSlashRegex.test(arg[0])) {
          args.splice(i, 1, arg.substr(1));
        }
        if ((_b = this._sharedPathsRegex) == null ? void 0 : _b.test(arg)) {
          args.splice(i, 1, _system__WEBPACK_IMPORTED_MODULE_5__.Strings.normalizePath(arg).replace(this._sharedPathsRegex, (match, shared) => {
            const local = this._sharedToLocalPaths.get(shared);
            return local != null ? local : shared;
          }));
        }
      }
    }
    let data = await (0,_git_git__WEBPACK_IMPORTED_MODULE_2__.git)(options, ...args);
    if (typeof data === "string") {
      if (this._localPathsRegex !== void 0 && data.length > 0) {
        data = data.replace(this._localPathsRegex, (match, local) => {
          const shared = this._localToSharedPaths.get(local);
          return shared != null ? shared : local;
        });
      }
      return { data };
    }
    return { data: data.toString("binary"), isBuffer: true };
  }
  async onRepositoriesInFolderRequest(request, _cancellation) {
    const uri = this.convertSharedUriToLocal(vscode__WEBPACK_IMPORTED_MODULE_0__.Uri.parse(request.folderUri));
    const normalized = _system__WEBPACK_IMPORTED_MODULE_5__.Strings.normalizePath(uri.fsPath, { stripTrailingSlash: true }).toLowerCase();
    const repos = [
      ..._system__WEBPACK_IMPORTED_MODULE_5__.Iterables.filterMap(await _container__WEBPACK_IMPORTED_MODULE_1__.Container.git.getRepositories(), (r) => {
        if (!r.normalizedPath.startsWith(normalized))
          return void 0;
        const vslsUri = this.convertLocalUriToShared(r.folder.uri);
        return {
          folderUri: vslsUri.toString(true),
          path: vslsUri.path,
          root: r.root,
          closed: r.closed
        };
      })
    ];
    return {
      repositories: repos
    };
  }
  convertLocalUriToShared(localUri) {
    const cc = _logger__WEBPACK_IMPORTED_MODULE_4__.Logger.getCorrelationContext();
    let sharedUri = this._api.convertLocalUriToShared(localUri);
    _logger__WEBPACK_IMPORTED_MODULE_4__.Logger.debug(cc, `LiveShare.convertLocalUriToShared(${localUri.toString(true)}) returned ${sharedUri.toString(true)}`);
    const localPath = localUri.path;
    let sharedPath = sharedUri.path;
    if (sharedUri.authority.length > 0) {
      sharedPath = `/${sharedUri.authority}${sharedPath}`;
    }
    if (new RegExp(`${localPath}$`, "i").test(sharedPath)) {
      if (sharedPath.length === localPath.length) {
        const folder = vscode__WEBPACK_IMPORTED_MODULE_0__.workspace.getWorkspaceFolder(localUri);
        sharedUri = sharedUri.with({ path: `/~${folder.index}` });
      } else {
        sharedUri = sharedUri.with({ path: sharedPath.substr(0, sharedPath.length - localPath.length) });
      }
    } else if (!sharedPath.startsWith("/~")) {
      const folder = vscode__WEBPACK_IMPORTED_MODULE_0__.workspace.getWorkspaceFolder(localUri);
      sharedUri = sharedUri.with({ path: `/~${folder.index}${sharedPath}` });
    }
    return sharedUri;
  }
  convertSharedUriToLocal(sharedUri) {
    if (_vsls__WEBPACK_IMPORTED_MODULE_7__.vslsUriRootRegex.test(sharedUri.path)) {
      sharedUri = sharedUri.with({ path: `${sharedUri.path}/` });
    }
    const localUri = this._api.convertSharedUriToLocal(sharedUri);
    const localPath = localUri.path;
    const sharedPath = sharedUri.path;
    if (localPath.endsWith(sharedPath)) {
      return localUri.with({ path: localPath.substr(0, localPath.length - sharedPath.length) });
    }
    return localUri;
  }
};
let VslsHostService = _VslsHostService;
__publicField(VslsHostService, "ServiceId", "proxy");
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.log)()
], VslsHostService.prototype, "onAvailabilityChanged", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.debug)()
], VslsHostService.prototype, "onWorkspaceFoldersChanged", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.log)()
], VslsHostService.prototype, "onGitCommandRequest", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.log)()
], VslsHostService.prototype, "onRepositoriesInFolderRequest", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.debug)({
    exit: (result) => `returned ${result.toString(true)}`
  })
], VslsHostService.prototype, "convertLocalUriToShared", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_5__.log)()
], VslsHostService, "share", 1);


/***/ }),

/***/ "./src/vsls/protocol.ts":
/*!******************************!*\
  !*** ./src/vsls/protocol.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "RequestType": () => (/* binding */ RequestType),
/* harmony export */   "GitCommandRequestType": () => (/* binding */ GitCommandRequestType),
/* harmony export */   "RepositoriesInFolderRequestType": () => (/* binding */ RepositoriesInFolderRequestType)
/* harmony export */ });

class RequestType {
  constructor(name) {
    this.name = name;
  }
}
const GitCommandRequestType = new RequestType("git");
const RepositoriesInFolderRequestType = new RequestType("repositories/inFolder");


/***/ }),

/***/ "./src/vsls/vsls.ts":
/*!**************************!*\
  !*** ./src/vsls/vsls.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "vslsUriPrefixRegex": () => (/* binding */ vslsUriPrefixRegex),
/* harmony export */   "vslsUriRootRegex": () => (/* binding */ vslsUriRootRegex),
/* harmony export */   "VslsController": () => (/* binding */ VslsController)
/* harmony export */ });
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../constants */ "./src/constants.ts");
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../container */ "./src/container.ts");
/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../logger */ "./src/logger.ts");
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../system */ "./src/system.ts");
/* harmony import */ var _guest__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./guest */ "./src/vsls/guest.ts");
/* harmony import */ var _host__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./host */ "./src/vsls/host.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};







const vslsUriPrefixRegex = /^[/|\\]~(?:\d+?|external)(?:[/|\\]|$)/;
const vslsUriRootRegex = /^[/|\\]~(?:\d+?|external)$/;
function contactStatusToPresence(status) {
  switch (status) {
    case "available":
      return { status: "online", statusText: "Available" };
    case "away":
      return { status: "away", statusText: "Away" };
    case "busy":
      return { status: "busy", statusText: "Busy" };
    case "doNotDisturb":
      return { status: "dnd", statusText: "DND" };
    default:
      return { status: "offline", statusText: "Offline" };
  }
}
class VslsController {
  constructor() {
    __publicField(this, "_disposable");
    __publicField(this, "_guest");
    __publicField(this, "_host");
    __publicField(this, "_onReady");
    __publicField(this, "_waitForReady");
    __publicField(this, "_api");
    __publicField(this, "_readonly", false);
    void this.initialize();
  }
  dispose() {
    var _a, _b, _c;
    (_a = this._disposable) == null ? void 0 : _a.dispose();
    (_b = this._host) == null ? void 0 : _b.dispose();
    (_c = this._guest) == null ? void 0 : _c.dispose();
  }
  async initialize() {
    var _a;
    try {
      if ((_a = vscode__WEBPACK_IMPORTED_MODULE_0__.workspace.workspaceFolders) == null ? void 0 : _a.some((f) => f.uri.scheme === _constants__WEBPACK_IMPORTED_MODULE_1__.DocumentSchemes.Vsls)) {
        this.setReadonly(true);
        this._waitForReady = new Promise((resolve) => this._onReady = resolve);
      }
      this._api = this.getLiveShareApi();
      const api = await this._api;
      if (api == null) {
        void (0,_constants__WEBPACK_IMPORTED_MODULE_1__.setContext)(_constants__WEBPACK_IMPORTED_MODULE_1__.ContextKeys.Vsls, false);
        if (this._onReady !== void 0) {
          this._onReady();
          this._waitForReady = void 0;
        }
        return;
      }
      void (0,_constants__WEBPACK_IMPORTED_MODULE_1__.setContext)(_constants__WEBPACK_IMPORTED_MODULE_1__.ContextKeys.Vsls, true);
      this._disposable = vscode__WEBPACK_IMPORTED_MODULE_0__.Disposable.from(api.onDidChangeSession((e) => this.onLiveShareSessionChanged(api, e), this));
    } catch (ex) {
      _logger__WEBPACK_IMPORTED_MODULE_3__.Logger.error(ex);
    }
  }
  async getLiveShareApi() {
    var _a;
    try {
      const extension = vscode__WEBPACK_IMPORTED_MODULE_0__.extensions.getExtension("ms-vsliveshare.vsliveshare");
      if (extension != null) {
        const liveshareExtension = extension.isActive ? extension.exports : await extension.activate();
        return (_a = await liveshareExtension.getApi("1.0.3015")) != null ? _a : void 0;
      }
    } catch {
    }
    return void 0;
  }
  get isMaybeGuest() {
    return this._guest !== void 0 || this._waitForReady !== void 0;
  }
  get readonly() {
    return this._readonly;
  }
  setReadonly(value) {
    this._readonly = value;
    void (0,_constants__WEBPACK_IMPORTED_MODULE_1__.setContext)(_constants__WEBPACK_IMPORTED_MODULE_1__.ContextKeys.Readonly, value ? true : void 0);
  }
  async getContact(email) {
    if (email === void 0)
      return void 0;
    const api = await this._api;
    if (api == null)
      return void 0;
    const contacts = await api.getContacts([email]);
    return contacts.contacts[email];
  }
  async getContacts(emails) {
    const api = await this._api;
    if (api == null)
      return void 0;
    const contacts = await api.getContacts(emails);
    return Object.values(contacts.contacts);
  }
  async getContactPresence(email) {
    const contact = await this.getContact(email);
    if (contact == null)
      return void 0;
    return contactStatusToPresence(contact.status);
  }
  async getContactsPresence(emails) {
    const contacts = await this.getContacts(emails);
    if (contacts == null)
      return void 0;
    return new Map(Object.values(contacts).map((c) => [c.email, contactStatusToPresence(c.status)]));
  }
  maybeGetPresence(email) {
    return _container__WEBPACK_IMPORTED_MODULE_2__.Container.vsls.getContactPresence(email);
  }
  async invite(email) {
    if (email == null)
      return void 0;
    const contact = await this.getContact(email);
    if (contact == null)
      return void 0;
    return contact.invite();
  }
  async startSession() {
    const api = await this._api;
    if (api == null)
      return void 0;
    return api.share();
  }
  async guest() {
    if (this._waitForReady !== void 0) {
      await this._waitForReady;
      this._waitForReady = void 0;
    }
    return this._guest;
  }
  host() {
    return this._host;
  }
  async onLiveShareSessionChanged(api, e) {
    var _a, _b;
    (_a = this._host) == null ? void 0 : _a.dispose();
    (_b = this._guest) == null ? void 0 : _b.dispose();
    switch (e.session.role) {
      case 1:
        this.setReadonly(false);
        void (0,_constants__WEBPACK_IMPORTED_MODULE_1__.setContext)(_constants__WEBPACK_IMPORTED_MODULE_1__.ContextKeys.Vsls, "host");
        if (_container__WEBPACK_IMPORTED_MODULE_2__.Container.config.liveshare.allowGuestAccess) {
          this._host = await _host__WEBPACK_IMPORTED_MODULE_6__.VslsHostService.share(api);
        }
        break;
      case 2:
        this.setReadonly(true);
        void (0,_constants__WEBPACK_IMPORTED_MODULE_1__.setContext)(_constants__WEBPACK_IMPORTED_MODULE_1__.ContextKeys.Vsls, "guest");
        this._guest = await _guest__WEBPACK_IMPORTED_MODULE_5__.VslsGuestService.connect(api);
        break;
      default:
        this.setReadonly(false);
        void (0,_constants__WEBPACK_IMPORTED_MODULE_1__.setContext)(_constants__WEBPACK_IMPORTED_MODULE_1__.ContextKeys.Vsls, true);
        break;
    }
    if (this._onReady !== void 0) {
      this._onReady();
      this._onReady = void 0;
    }
  }
}
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_4__.debug)()
], VslsController.prototype, "getContact", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_4__.debug)({
    args: {
      0: (emails) => `length=${emails.length}`
    }
  })
], VslsController.prototype, "getContacts", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_4__.debug)()
], VslsController.prototype, "getContactPresence", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_4__.debug)({
    args: {
      0: (emails) => `length=${emails.length}`
    }
  })
], VslsController.prototype, "getContactsPresence", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_4__.debug)(),
  (0,_system__WEBPACK_IMPORTED_MODULE_4__.timeout)(250)
], VslsController.prototype, "maybeGetPresence", 1);


/***/ }),

/***/ "./src/webviews/apps/shared/colors.ts":
/*!********************************************!*\
  !*** ./src/webviews/apps/shared/colors.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "darken": () => (/* binding */ darken),
/* harmony export */   "lighten": () => (/* binding */ lighten),
/* harmony export */   "opacity": () => (/* binding */ opacity),
/* harmony export */   "toRgba": () => (/* binding */ toRgba)
/* harmony export */ });

const cssColorRegex = /^(?:(#?)([0-9a-f]{3}|[0-9a-f]{6})|((?:rgb|hsl)a?)\((-?\d+%?)[,\s]+(-?\d+%?)[,\s]+(-?\d+%?)[,\s]*(-?[\d.]+%?)?\))$/i;
function adjustLight(color, amount) {
  const cc = color + amount;
  const c = amount < 0 ? cc < 0 ? 0 : cc : cc > 255 ? 255 : cc;
  return Math.round(c);
}
function darken(color, percentage) {
  return lighten(color, -percentage);
}
function lighten(color, percentage) {
  const rgba = toRgba(color);
  if (rgba == null)
    return color;
  const [r, g, b, a] = rgba;
  const amount = 255 * percentage / 100;
  return `rgba(${adjustLight(r, amount)}, ${adjustLight(g, amount)}, ${adjustLight(b, amount)}, ${a})`;
}
function opacity(color, percentage) {
  const rgba = toRgba(color);
  if (rgba == null)
    return color;
  const [r, g, b, a] = rgba;
  return `rgba(${r}, ${g}, ${b}, ${a * (percentage / 100)})`;
}
function toRgba(color) {
  color = color.trim();
  const result = cssColorRegex.exec(color);
  if (result == null)
    return null;
  if (result[1] === "#") {
    const hex = result[2];
    switch (hex.length) {
      case 3:
        return [parseInt(hex[0] + hex[0], 16), parseInt(hex[1] + hex[1], 16), parseInt(hex[2] + hex[2], 16), 1];
      case 6:
        return [
          parseInt(hex.substring(0, 2), 16),
          parseInt(hex.substring(2, 4), 16),
          parseInt(hex.substring(4, 6), 16),
          1
        ];
    }
    return null;
  }
  switch (result[3]) {
    case "rgb":
      return [parseInt(result[4], 10), parseInt(result[5], 10), parseInt(result[6], 10), 1];
    case "rgba":
      return [parseInt(result[4], 10), parseInt(result[5], 10), parseInt(result[6], 10), parseFloat(result[7])];
    default:
      return null;
  }
}


/***/ }),

/***/ "./src/webviews/protocol.ts":
/*!**********************************!*\
  !*** ./src/webviews/protocol.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "IpcNotificationType": () => (/* binding */ IpcNotificationType),
/* harmony export */   "IpcCommandType": () => (/* binding */ IpcCommandType),
/* harmony export */   "onIpcCommand": () => (/* binding */ onIpcCommand),
/* harmony export */   "onIpcNotification": () => (/* binding */ onIpcNotification),
/* harmony export */   "DidChangeConfigurationNotificationType": () => (/* binding */ DidChangeConfigurationNotificationType),
/* harmony export */   "ReadyCommandType": () => (/* binding */ ReadyCommandType),
/* harmony export */   "UpdateConfigurationCommandType": () => (/* binding */ UpdateConfigurationCommandType),
/* harmony export */   "PreviewConfigurationCommandType": () => (/* binding */ PreviewConfigurationCommandType),
/* harmony export */   "DidPreviewConfigurationNotificationType": () => (/* binding */ DidPreviewConfigurationNotificationType),
/* harmony export */   "SettingsDidRequestJumpToNotificationType": () => (/* binding */ SettingsDidRequestJumpToNotificationType),
/* harmony export */   "RebaseDidChangeNotificationType": () => (/* binding */ RebaseDidChangeNotificationType),
/* harmony export */   "RebaseDidAbortCommandType": () => (/* binding */ RebaseDidAbortCommandType),
/* harmony export */   "RebaseDidDisableCommandType": () => (/* binding */ RebaseDidDisableCommandType),
/* harmony export */   "RebaseDidStartCommandType": () => (/* binding */ RebaseDidStartCommandType),
/* harmony export */   "RebaseDidSwitchCommandType": () => (/* binding */ RebaseDidSwitchCommandType),
/* harmony export */   "RebaseDidChangeEntryCommandType": () => (/* binding */ RebaseDidChangeEntryCommandType),
/* harmony export */   "RebaseDidMoveEntryCommandType": () => (/* binding */ RebaseDidMoveEntryCommandType)
/* harmony export */ });

class IpcNotificationType {
  constructor(method) {
    this.method = method;
  }
}
class IpcCommandType {
  constructor(method) {
    this.method = method;
  }
}
function onIpcCommand(type, command, fn) {
  fn(command.params);
}
function onIpcNotification(type, notification, fn) {
  fn(notification.params);
}
const DidChangeConfigurationNotificationType = new IpcNotificationType("configuration/didChange");
const ReadyCommandType = new IpcCommandType("webview/ready");
const UpdateConfigurationCommandType = new IpcCommandType("configuration/update");
const PreviewConfigurationCommandType = new IpcCommandType("configuration/preview");
const DidPreviewConfigurationNotificationType = new IpcNotificationType("configuration/didPreview");
const SettingsDidRequestJumpToNotificationType = new IpcNotificationType("settings/jumpTo");
const RebaseDidChangeNotificationType = new IpcNotificationType("rebase/change");
const RebaseDidAbortCommandType = new IpcCommandType("rebase/abort");
const RebaseDidDisableCommandType = new IpcCommandType("rebase/disable");
const RebaseDidStartCommandType = new IpcCommandType("rebase/start");
const RebaseDidSwitchCommandType = new IpcCommandType("rebase/switch");
const RebaseDidChangeEntryCommandType = new IpcCommandType("rebase/change/entry");
const RebaseDidMoveEntryCommandType = new IpcCommandType("rebase/move/entry");


/***/ }),

/***/ "./src/webviews/rebaseEditor.ts":
/*!**************************************!*\
  !*** ./src/webviews/rebaseEditor.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "RebaseEditorProvider": () => (/* binding */ RebaseEditorProvider)
/* harmony export */ });
/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! crypto */ "./node_modules/crypto-browserify/index.js");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _commands__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../commands */ "./src/commands.ts");
/* harmony import */ var _configuration__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../configuration */ "./src/configuration.ts");
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../constants */ "./src/constants.ts");
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../container */ "./src/container.ts");
/* harmony import */ var _git_git__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../git/git */ "./src/git/git.ts");
/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../logger */ "./src/logger.ts");
/* harmony import */ var _messages__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../messages */ "./src/messages.ts");
/* harmony import */ var _system__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../system */ "./src/system.ts");
/* harmony import */ var _protocol__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./protocol */ "./src/webviews/protocol.ts");

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};











let ipcSequence = 0;
function nextIpcId() {
  if (ipcSequence === Number.MAX_SAFE_INTEGER) {
    ipcSequence = 1;
  } else {
    ipcSequence++;
  }
  return `host:${ipcSequence}`;
}
let webviewId = 0;
function nextWebviewId() {
  if (webviewId === Number.MAX_SAFE_INTEGER) {
    webviewId = 1;
  } else {
    webviewId++;
  }
  return webviewId;
}
const rebaseRegex = /^\s?#\s?Rebase\s([0-9a-f]+)(?:..([0-9a-f]+))?\sonto\s([0-9a-f]+)\s.*$/im;
const rebaseCommandsRegex = /^\s?(p|pick|r|reword|e|edit|s|squash|f|fixup|d|drop)\s([0-9a-f]+?)\s(.*)$/gm;
const rebaseActionsMap = new Map([
  ["p", "pick"],
  ["pick", "pick"],
  ["r", "reword"],
  ["reword", "reword"],
  ["e", "edit"],
  ["edit", "edit"],
  ["s", "squash"],
  ["squash", "squash"],
  ["f", "fixup"],
  ["fixup", "fixup"],
  ["d", "drop"],
  ["drop", "drop"]
]);
class RebaseEditorProvider {
  constructor() {
    __publicField(this, "_disposable");
    __publicField(this, "_disableAfterNextUse", false);
    this._disposable = vscode__WEBPACK_IMPORTED_MODULE_1__.Disposable.from(vscode__WEBPACK_IMPORTED_MODULE_1__.window.registerCustomEditorProvider("gitlens.rebase", this, {
      supportsMultipleEditorsPerDocument: false,
      webviewOptions: {
        retainContextWhenHidden: true
      }
    }));
  }
  dispose() {
    this._disposable.dispose();
  }
  get enabled() {
    var _a;
    const associations = (_a = _configuration__WEBPACK_IMPORTED_MODULE_3__.configuration.inspectAny("workbench.editorAssociations")) == null ? void 0 : _a.globalValue;
    if (associations == null || associations.length === 0)
      return true;
    if (Array.isArray(associations)) {
      const association2 = associations.find((a) => a.filenamePattern === "git-rebase-todo");
      return association2 != null ? association2.viewType === "gitlens.rebase" : true;
    }
    const association = associations["git-rebase-todo"];
    return association != null ? association === "gitlens.rebase" : true;
  }
  async enableForNextUse() {
    if (!this.enabled) {
      await this.setEnabled(true);
      this._disableAfterNextUse = true;
    }
  }
  async setEnabled(enabled) {
    this._disableAfterNextUse = false;
    const inspection = _configuration__WEBPACK_IMPORTED_MODULE_3__.configuration.inspectAny("workbench.editorAssociations");
    let associations = inspection == null ? void 0 : inspection.globalValue;
    if (Array.isArray(associations)) {
      associations = associations.reduce((accumulator, current) => {
        accumulator[current.filenamePattern] = current.viewType;
        return accumulator;
      }, Object.create(null));
    }
    if (associations == null) {
      if (enabled)
        return;
      associations = {
        "git-rebase-todo": "default"
      };
    } else {
      associations["git-rebase-todo"] = enabled ? "gitlens.rebase" : "default";
    }
    await _configuration__WEBPACK_IMPORTED_MODULE_3__.configuration.updateAny("workbench.editorAssociations", associations, vscode__WEBPACK_IMPORTED_MODULE_1__.ConfigurationTarget.Global);
  }
  async resolveCustomTextEditor(document, panel, _token) {
    var _a;
    const repoPath = _system__WEBPACK_IMPORTED_MODULE_9__.Strings.normalizePath(vscode__WEBPACK_IMPORTED_MODULE_1__.Uri.joinPath(document.uri, "..", "..", "..").fsPath);
    const repo = await _container__WEBPACK_IMPORTED_MODULE_5__.Container.git.getRepository(repoPath);
    const subscriptions = [];
    const context = {
      dispose: () => vscode__WEBPACK_IMPORTED_MODULE_1__.Disposable.from(...subscriptions).dispose(),
      id: nextWebviewId(),
      subscriptions,
      document,
      panel,
      repoPath: (_a = repo == null ? void 0 : repo.path) != null ? _a : repoPath,
      abortOnClose: true
    };
    subscriptions.push(panel.onDidDispose(() => {
      if (context.abortOnClose) {
        void this.abort(context);
      }
      vscode__WEBPACK_IMPORTED_MODULE_1__.Disposable.from(...subscriptions).dispose();
    }), panel.onDidChangeViewState(() => {
      if (!context.pendingChange)
        return;
      void this.getStateAndNotify(context);
    }), panel.webview.onDidReceiveMessage((e) => this.onMessageReceived(context, e)), vscode__WEBPACK_IMPORTED_MODULE_1__.workspace.onDidChangeTextDocument((e) => {
      if (e.contentChanges.length === 0 || e.document.uri.toString() !== document.uri.toString())
        return;
      void this.getStateAndNotify(context);
    }), vscode__WEBPACK_IMPORTED_MODULE_1__.workspace.onDidSaveTextDocument((e) => {
      if (e.uri.toString() !== document.uri.toString())
        return;
      void this.getStateAndNotify(context);
    }));
    if (repo != null) {
      subscriptions.push(repo.onDidChange((e) => {
        if (!e.changed(_git_git__WEBPACK_IMPORTED_MODULE_6__.RepositoryChange.Rebase, _git_git__WEBPACK_IMPORTED_MODULE_6__.RepositoryChangeComparisonMode.Any))
          return;
        void this.getStateAndNotify(context);
      }));
    }
    panel.webview.options = { enableCommandUris: true, enableScripts: true };
    panel.webview.html = await this.getHtml(context);
    if (this._disableAfterNextUse) {
      this._disableAfterNextUse = false;
      void this.setEnabled(false);
    }
  }
  async getStateAndNotify(context) {
    if (!context.panel.visible) {
      context.pendingChange = true;
      return;
    }
    const state = await this.parseState(context);
    void this.postMessage(context, {
      id: nextIpcId(),
      method: _protocol__WEBPACK_IMPORTED_MODULE_10__.RebaseDidChangeNotificationType.method,
      params: { state }
    });
  }
  async parseState(context) {
    const branch = await _container__WEBPACK_IMPORTED_MODULE_5__.Container.git.getBranch(context.repoPath);
    const state = await parseRebaseTodo(context.document.getText(), context.repoPath, branch == null ? void 0 : branch.name);
    return state;
  }
  async postMessage(context, message) {
    try {
      const success = await context.panel.webview.postMessage(message);
      context.pendingChange = !success;
      return success;
    } catch (ex) {
      _logger__WEBPACK_IMPORTED_MODULE_7__.Logger.error(ex);
      context.pendingChange = true;
      return false;
    }
  }
  onMessageReceived(context, e) {
    switch (e.method) {
      case _protocol__WEBPACK_IMPORTED_MODULE_10__.RebaseDidAbortCommandType.method:
        (0,_protocol__WEBPACK_IMPORTED_MODULE_10__.onIpcCommand)(_protocol__WEBPACK_IMPORTED_MODULE_10__.RebaseDidAbortCommandType, e, () => this.abort(context));
        break;
      case _protocol__WEBPACK_IMPORTED_MODULE_10__.RebaseDidDisableCommandType.method:
        (0,_protocol__WEBPACK_IMPORTED_MODULE_10__.onIpcCommand)(_protocol__WEBPACK_IMPORTED_MODULE_10__.RebaseDidDisableCommandType, e, () => this.disable(context));
        break;
      case _protocol__WEBPACK_IMPORTED_MODULE_10__.RebaseDidStartCommandType.method:
        (0,_protocol__WEBPACK_IMPORTED_MODULE_10__.onIpcCommand)(_protocol__WEBPACK_IMPORTED_MODULE_10__.RebaseDidStartCommandType, e, () => this.rebase(context));
        break;
      case _protocol__WEBPACK_IMPORTED_MODULE_10__.RebaseDidSwitchCommandType.method:
        (0,_protocol__WEBPACK_IMPORTED_MODULE_10__.onIpcCommand)(_protocol__WEBPACK_IMPORTED_MODULE_10__.RebaseDidSwitchCommandType, e, () => this.switch(context));
        break;
      case _protocol__WEBPACK_IMPORTED_MODULE_10__.RebaseDidChangeEntryCommandType.method:
        (0,_protocol__WEBPACK_IMPORTED_MODULE_10__.onIpcCommand)(_protocol__WEBPACK_IMPORTED_MODULE_10__.RebaseDidChangeEntryCommandType, e, async (params) => {
          const entries = parseRebaseTodoEntries(context.document);
          const entry = entries.find((e2) => e2.ref === params.ref);
          if (entry == null)
            return;
          const start = context.document.positionAt(entry.index);
          const range = context.document.validateRange(new vscode__WEBPACK_IMPORTED_MODULE_1__.Range(new vscode__WEBPACK_IMPORTED_MODULE_1__.Position(start.line, 0), new vscode__WEBPACK_IMPORTED_MODULE_1__.Position(start.line, Number.MAX_SAFE_INTEGER)));
          let action = params.action;
          const edit = new vscode__WEBPACK_IMPORTED_MODULE_1__.WorkspaceEdit();
          const newEntries = [...entries];
          newEntries.splice(entries.indexOf(entry), 1, {
            ...entry,
            action: params.action
          });
          let squashing = false;
          for (const entry2 of newEntries) {
            if (entry2.action === "squash" || entry2.action === "fixup") {
              squashing = true;
            } else if (squashing) {
              if (entry2.action !== "drop") {
                squashing = false;
              }
            }
          }
          if (squashing) {
            const lastEntry = newEntries[newEntries.length - 1];
            if (entry.ref === lastEntry.ref) {
              action = "pick";
            } else {
              const start2 = context.document.positionAt(lastEntry.index);
              const range2 = context.document.validateRange(new vscode__WEBPACK_IMPORTED_MODULE_1__.Range(new vscode__WEBPACK_IMPORTED_MODULE_1__.Position(start2.line, 0), new vscode__WEBPACK_IMPORTED_MODULE_1__.Position(start2.line, Number.MAX_SAFE_INTEGER)));
              edit.replace(context.document.uri, range2, `pick ${lastEntry.ref} ${lastEntry.message}`);
            }
          }
          edit.replace(context.document.uri, range, `${action} ${entry.ref} ${entry.message}`);
          await vscode__WEBPACK_IMPORTED_MODULE_1__.workspace.applyEdit(edit);
        });
        break;
      case _protocol__WEBPACK_IMPORTED_MODULE_10__.RebaseDidMoveEntryCommandType.method:
        (0,_protocol__WEBPACK_IMPORTED_MODULE_10__.onIpcCommand)(_protocol__WEBPACK_IMPORTED_MODULE_10__.RebaseDidMoveEntryCommandType, e, async (params) => {
          const entries = parseRebaseTodoEntries(context.document);
          const entry = entries.find((e2) => e2.ref === params.ref);
          if (entry == null)
            return;
          const index = entries.findIndex((e2) => e2.ref === params.ref);
          let newIndex;
          if (params.relative) {
            if (params.to === -1 && index === 0 || params.to === 1 && index === entries.length - 1) {
              return;
            }
            newIndex = index + params.to;
          } else {
            if (index === params.to)
              return;
            newIndex = params.to;
          }
          const newEntry = entries[newIndex];
          let newLine = context.document.positionAt(newEntry.index).line;
          if (newIndex < index) {
            newLine++;
          }
          const start = context.document.positionAt(entry.index);
          const range = context.document.validateRange(new vscode__WEBPACK_IMPORTED_MODULE_1__.Range(new vscode__WEBPACK_IMPORTED_MODULE_1__.Position(start.line, 0), new vscode__WEBPACK_IMPORTED_MODULE_1__.Position(start.line + 1, 0)));
          const newEntries = [...entries];
          newEntries.splice(index, 1);
          newEntries.splice(newIndex, 0, entry);
          let squashing = false;
          for (const entry2 of newEntries) {
            if (entry2.action === "squash" || entry2.action === "fixup") {
              squashing = true;
            } else if (squashing) {
              if (entry2.action !== "drop") {
                squashing = false;
              }
            }
          }
          const edit = new vscode__WEBPACK_IMPORTED_MODULE_1__.WorkspaceEdit();
          let action = entry.action;
          if (squashing) {
            const lastEntry = newEntries[newEntries.length - 1];
            if (entry.ref === lastEntry.ref) {
              action = "pick";
            } else {
              const start2 = context.document.positionAt(lastEntry.index);
              const range2 = context.document.validateRange(new vscode__WEBPACK_IMPORTED_MODULE_1__.Range(new vscode__WEBPACK_IMPORTED_MODULE_1__.Position(start2.line, 0), new vscode__WEBPACK_IMPORTED_MODULE_1__.Position(start2.line, Number.MAX_SAFE_INTEGER)));
              edit.replace(context.document.uri, range2, `pick ${lastEntry.ref} ${lastEntry.message}`);
            }
          }
          edit.delete(context.document.uri, range);
          edit.insert(context.document.uri, new vscode__WEBPACK_IMPORTED_MODULE_1__.Position(newLine, 0), `${action} ${entry.ref} ${entry.message}
`);
          await vscode__WEBPACK_IMPORTED_MODULE_1__.workspace.applyEdit(edit);
        });
        break;
    }
  }
  async abort(context) {
    context.abortOnClose = false;
    context.dispose();
    const edit = new vscode__WEBPACK_IMPORTED_MODULE_1__.WorkspaceEdit();
    edit.replace(context.document.uri, new vscode__WEBPACK_IMPORTED_MODULE_1__.Range(0, 0, context.document.lineCount, 0), "");
    await vscode__WEBPACK_IMPORTED_MODULE_1__.workspace.applyEdit(edit);
    await context.document.save();
    context.panel.dispose();
  }
  async disable(context) {
    await this.abort(context);
    await this.setEnabled(false);
  }
  async rebase(context) {
    context.abortOnClose = false;
    context.dispose();
    await context.document.save();
    context.panel.dispose();
  }
  switch(context) {
    context.abortOnClose = false;
    void _messages__WEBPACK_IMPORTED_MODULE_8__.Messages.showRebaseSwitchToTextWarningMessage();
    void vscode__WEBPACK_IMPORTED_MODULE_1__.commands.executeCommand(_constants__WEBPACK_IMPORTED_MODULE_4__.BuiltInCommands.Open, context.document.uri, {
      override: false,
      preview: false
    });
  }
  async getHtml(context) {
    const uri = vscode__WEBPACK_IMPORTED_MODULE_1__.Uri.joinPath(_container__WEBPACK_IMPORTED_MODULE_5__.Container.context.extensionUri, "dist", "webviews", "rebase.html");
    const content = new TextDecoder("utf8").decode(await vscode__WEBPACK_IMPORTED_MODULE_1__.workspace.fs.readFile(uri));
    const bootstrap = await this.parseState(context);
    const cspSource = context.panel.webview.cspSource;
    const cspNonce = (0,crypto__WEBPACK_IMPORTED_MODULE_0__.randomBytes)(16).toString("base64");
    const root = context.panel.webview.asWebviewUri(_container__WEBPACK_IMPORTED_MODULE_5__.Container.context.extensionUri).toString();
    const html = content.replace(/#{(head|body|endOfBody)}/i, (_substring, token) => {
      switch (token) {
        case "endOfBody":
          return `<script type="text/javascript" nonce="#{cspNonce}">window.bootstrap = ${JSON.stringify(bootstrap)};<\/script>`;
        default:
          return "";
      }
    }).replace(/#{(cspSource|cspNonce|root)}/g, (substring, token) => {
      switch (token) {
        case "cspSource":
          return cspSource;
        case "cspNonce":
          return cspNonce;
        case "root":
          return root;
        default:
          return "";
      }
    });
    return html;
  }
}
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_9__.debug)({ args: false })
], RebaseEditorProvider.prototype, "resolveCustomTextEditor", 1);
__decorateClass([
  (0,_system__WEBPACK_IMPORTED_MODULE_9__.gate)((context) => `${context.id}`)
], RebaseEditorProvider.prototype, "getStateAndNotify", 1);
async function parseRebaseTodo(contents, repoPath, branch) {
  var _a;
  let onto;
  let entries;
  if (typeof contents === "string") {
    entries = parseRebaseTodoEntries(contents);
    [, , , onto] = (_a = rebaseRegex.exec(contents)) != null ? _a : ["", "", ""];
  } else {
    ({ entries, onto } = contents);
  }
  const authors = new Map();
  const commits = [];
  const log = await _container__WEBPACK_IMPORTED_MODULE_5__.Container.git.getLogForSearch(repoPath, {
    pattern: `${onto ? `#:${onto} ` : ""}${_system__WEBPACK_IMPORTED_MODULE_9__.Iterables.join(_system__WEBPACK_IMPORTED_MODULE_9__.Iterables.map(entries, (e) => `#:${e.ref}`), " ")}`
  });
  const foundCommits = log != null ? [...log.commits.values()] : [];
  const ontoCommit = onto ? foundCommits.find((c) => c.ref.startsWith(onto)) : void 0;
  if (ontoCommit != null) {
    if (!authors.has(ontoCommit.author)) {
      authors.set(ontoCommit.author, {
        author: ontoCommit.author,
        avatarUrl: (await ontoCommit.getAvatarUri({ defaultStyle: _container__WEBPACK_IMPORTED_MODULE_5__.Container.config.defaultGravatarsStyle })).toString(true),
        email: ontoCommit.email
      });
    }
    commits.push({
      ref: ontoCommit.ref,
      author: ontoCommit.author,
      date: ontoCommit.formatDate(_container__WEBPACK_IMPORTED_MODULE_5__.Container.config.defaultDateFormat),
      dateFromNow: ontoCommit.formatDateFromNow(),
      message: ontoCommit.message || "root"
    });
  }
  for (const entry of entries) {
    const commit = foundCommits.find((c) => c.ref.startsWith(entry.ref));
    if (commit == null)
      continue;
    if (commit.ref === (ontoCommit == null ? void 0 : ontoCommit.ref)) {
      commits.splice(0, 1);
      onto = "";
    }
    if (!authors.has(commit.author)) {
      authors.set(commit.author, {
        author: commit.author,
        avatarUrl: (await commit.getAvatarUri({ defaultStyle: _container__WEBPACK_IMPORTED_MODULE_5__.Container.config.defaultGravatarsStyle })).toString(true),
        email: commit.email
      });
    }
    commits.push({
      ref: commit.ref,
      author: commit.author,
      date: commit.formatDate(_container__WEBPACK_IMPORTED_MODULE_5__.Container.config.defaultDateFormat),
      dateFromNow: commit.formatDateFromNow(),
      message: commit.message
    });
  }
  return {
    branch: branch != null ? branch : "",
    onto,
    entries,
    authors: [...authors.values()],
    commits,
    commands: {
      commit: _commands__WEBPACK_IMPORTED_MODULE_2__.ShowQuickCommitCommand.getMarkdownCommandArgs(`\${commit}`, repoPath)
    }
  };
}
function parseRebaseTodoEntries(contentsOrDocument) {
  var _a;
  const contents = typeof contentsOrDocument === "string" ? contentsOrDocument : contentsOrDocument.getText();
  const entries = [];
  let match;
  let action;
  let ref;
  let message;
  do {
    match = rebaseCommandsRegex.exec(contents);
    if (match == null)
      break;
    [, action, ref, message] = match;
    entries.push({
      index: match.index,
      action: (_a = rebaseActionsMap.get(action)) != null ? _a : "pick",
      ref: ` ${ref}`.substr(1),
      message: message == null || message.length === 0 ? "" : ` ${message}`.substr(1)
    });
  } while (true);
  return entries.reverse();
}


/***/ }),

/***/ "./src/webviews/settingsWebview.ts":
/*!*****************************************!*\
  !*** ./src/webviews/settingsWebview.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SettingsWebview": () => (/* binding */ SettingsWebview)
/* harmony export */ });
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _commands__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../commands */ "./src/commands.ts");
/* harmony import */ var _configuration__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../configuration */ "./src/configuration.ts");
/* harmony import */ var _protocol__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./protocol */ "./src/webviews/protocol.ts");
/* harmony import */ var _webviewBase__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./webviewBase */ "./src/webviews/webviewBase.ts");

var __defProp = Object.defineProperty;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};





const anchorRegex = /.*?#(.*)/;
class SettingsWebview extends _webviewBase__WEBPACK_IMPORTED_MODULE_4__.WebviewBase {
  constructor() {
    super(_commands__WEBPACK_IMPORTED_MODULE_1__.Commands.ShowSettingsPage);
    __publicField(this, "_pendingJumpToAnchor");
    this.disposable = vscode__WEBPACK_IMPORTED_MODULE_0__.Disposable.from(this.disposable, ...[
      _commands__WEBPACK_IMPORTED_MODULE_1__.Commands.ShowSettingsPageAndJumpToBranchesView,
      _commands__WEBPACK_IMPORTED_MODULE_1__.Commands.ShowSettingsPageAndJumpToCommitsView,
      _commands__WEBPACK_IMPORTED_MODULE_1__.Commands.ShowSettingsPageAndJumpToContributorsView,
      _commands__WEBPACK_IMPORTED_MODULE_1__.Commands.ShowSettingsPageAndJumpToFileHistoryView,
      _commands__WEBPACK_IMPORTED_MODULE_1__.Commands.ShowSettingsPageAndJumpToLineHistoryView,
      _commands__WEBPACK_IMPORTED_MODULE_1__.Commands.ShowSettingsPageAndJumpToRemotesView,
      _commands__WEBPACK_IMPORTED_MODULE_1__.Commands.ShowSettingsPageAndJumpToRepositoriesView,
      _commands__WEBPACK_IMPORTED_MODULE_1__.Commands.ShowSettingsPageAndJumpToSearchAndCompareView,
      _commands__WEBPACK_IMPORTED_MODULE_1__.Commands.ShowSettingsPageAndJumpToStashesView,
      _commands__WEBPACK_IMPORTED_MODULE_1__.Commands.ShowSettingsPageAndJumpToTagsView,
      _commands__WEBPACK_IMPORTED_MODULE_1__.Commands.ShowSettingsPageAndJumpToViews
    ].map((c) => {
      let anchor;
      const match = anchorRegex.exec(c);
      if (match != null) {
        [, anchor] = match;
      }
      return vscode__WEBPACK_IMPORTED_MODULE_0__.commands.registerCommand(c, () => this.onShowCommand(anchor), this);
    }));
  }
  onShowCommand(anchor) {
    if (anchor) {
      this._pendingJumpToAnchor = anchor;
    }
    super.onShowCommand();
  }
  onMessageReceived(e) {
    switch (e.method) {
      case _protocol__WEBPACK_IMPORTED_MODULE_3__.ReadyCommandType.method:
        (0,_protocol__WEBPACK_IMPORTED_MODULE_3__.onIpcCommand)(_protocol__WEBPACK_IMPORTED_MODULE_3__.ReadyCommandType, e, (_params) => {
          if (this._pendingJumpToAnchor !== void 0) {
            void this.notify(_protocol__WEBPACK_IMPORTED_MODULE_3__.SettingsDidRequestJumpToNotificationType, {
              anchor: this._pendingJumpToAnchor
            });
            this._pendingJumpToAnchor = void 0;
          }
        });
        break;
      default:
        super.onMessageReceived(e);
        break;
    }
  }
  get filename() {
    return "settings.html";
  }
  get id() {
    return "gitlens.settings";
  }
  get title() {
    return "GitLens Settings";
  }
  renderEndOfBody() {
    var _a;
    const scopes = [["user", "User"]];
    if ((_a = vscode__WEBPACK_IMPORTED_MODULE_0__.workspace.workspaceFolders) == null ? void 0 : _a.length) {
      scopes.push(["workspace", "Workspace"]);
    }
    const bootstrap = {
      config: _configuration__WEBPACK_IMPORTED_MODULE_2__.configuration.get(),
      customSettings: this.getCustomSettings(),
      scope: "user",
      scopes
    };
    return `<script type="text/javascript" nonce="#{cspNonce}">window.bootstrap = ${JSON.stringify(bootstrap)};<\/script>`;
  }
}


/***/ }),

/***/ "./src/webviews/webviewBase.ts":
/*!*************************************!*\
  !*** ./src/webviews/webviewBase.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "WebviewBase": () => (/* binding */ WebviewBase)
/* harmony export */ });
/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! crypto */ "./node_modules/crypto-browserify/index.js");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vscode */ "vscode");
/* harmony import */ var vscode__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(vscode__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _configuration__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../configuration */ "./src/configuration.ts");
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../container */ "./src/container.ts");
/* harmony import */ var _git_git__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../git/git */ "./src/git/git.ts");
/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../logger */ "./src/logger.ts");
/* harmony import */ var _protocol__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./protocol */ "./src/webviews/protocol.ts");

var __defProp = Object.defineProperty;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};







let ipcSequence = 0;
function nextIpcId() {
  if (ipcSequence === Number.MAX_SAFE_INTEGER) {
    ipcSequence = 1;
  } else {
    ipcSequence++;
  }
  return `host:${ipcSequence}`;
}
const emptyCommands = [
  {
    dispose: function() {
    }
  }
];
class WebviewBase {
  constructor(showCommand, _column) {
    this._column = _column;
    __publicField(this, "disposable");
    __publicField(this, "_disposablePanel");
    __publicField(this, "_panel");
    __publicField(this, "_customSettings");
    this.disposable = vscode__WEBPACK_IMPORTED_MODULE_1__.Disposable.from(_configuration__WEBPACK_IMPORTED_MODULE_2__.configuration.onDidChange(this.onConfigurationChanged, this), _configuration__WEBPACK_IMPORTED_MODULE_2__.configuration.onDidChangeAny(this.onAnyConfigurationChanged, this), vscode__WEBPACK_IMPORTED_MODULE_1__.commands.registerCommand(showCommand, this.onShowCommand, this));
  }
  registerCommands() {
    return emptyCommands;
  }
  dispose() {
    var _a;
    this.disposable.dispose();
    (_a = this._disposablePanel) == null ? void 0 : _a.dispose();
  }
  get customSettings() {
    if (this._customSettings == null) {
      this._customSettings = new Map([
        [
          "rebaseEditor.enabled",
          {
            name: "workbench.editorAssociations",
            enabled: () => _container__WEBPACK_IMPORTED_MODULE_3__.Container.rebaseEditor.enabled,
            update: _container__WEBPACK_IMPORTED_MODULE_3__.Container.rebaseEditor.setEnabled
          }
        ]
      ]);
    }
    return this._customSettings;
  }
  onShowCommand() {
    void this.show(this._column);
  }
  onAnyConfigurationChanged(e) {
    let notify = false;
    for (const setting of this.customSettings.values()) {
      if (e.affectsConfiguration(setting.name)) {
        notify = true;
        break;
      }
    }
    if (!notify)
      return;
    void this.notifyDidChangeConfiguration();
  }
  onConfigurationChanged(_e) {
    void this.notifyDidChangeConfiguration();
  }
  onPanelDisposed() {
    var _a;
    (_a = this._disposablePanel) == null ? void 0 : _a.dispose();
    this._panel = void 0;
  }
  onViewStateChanged(e) {
    _logger__WEBPACK_IMPORTED_MODULE_5__.Logger.log(`Webview(${this.id}).onViewStateChanged`, `active=${e.webviewPanel.active}, visible=${e.webviewPanel.visible}`);
    if (e.webviewPanel.active) {
      void this.notifyDidChangeConfiguration();
    }
  }
  onMessageReceived(e) {
    switch (e.method) {
      case _protocol__WEBPACK_IMPORTED_MODULE_6__.UpdateConfigurationCommandType.method:
        (0,_protocol__WEBPACK_IMPORTED_MODULE_6__.onIpcCommand)(_protocol__WEBPACK_IMPORTED_MODULE_6__.UpdateConfigurationCommandType, e, async (params) => {
          const target = params.scope === "workspace" ? vscode__WEBPACK_IMPORTED_MODULE_1__.ConfigurationTarget.Workspace : vscode__WEBPACK_IMPORTED_MODULE_1__.ConfigurationTarget.Global;
          for (const key in params.changes) {
            let value = params.changes[key];
            const customSetting = this.customSettings.get(key);
            if (customSetting != null) {
              await customSetting.update(value);
              continue;
            }
            const inspect = _configuration__WEBPACK_IMPORTED_MODULE_2__.configuration.inspect(key);
            if (value != null) {
              if (params.scope === "workspace") {
                if (value === inspect.workspaceValue)
                  continue;
              } else {
                if (value === inspect.globalValue && value !== inspect.defaultValue)
                  continue;
                if (value === inspect.defaultValue) {
                  value = void 0;
                }
              }
            }
            void await _configuration__WEBPACK_IMPORTED_MODULE_2__.configuration.update(key, value, target);
          }
          for (const key of params.removes) {
            void await _configuration__WEBPACK_IMPORTED_MODULE_2__.configuration.update(key, void 0, target);
          }
        });
        break;
      case _protocol__WEBPACK_IMPORTED_MODULE_6__.PreviewConfigurationCommandType.method:
        (0,_protocol__WEBPACK_IMPORTED_MODULE_6__.onIpcCommand)(_protocol__WEBPACK_IMPORTED_MODULE_6__.PreviewConfigurationCommandType, e, async (params) => {
          switch (params.type) {
            case "commit": {
              const commit = new _git_git__WEBPACK_IMPORTED_MODULE_4__.GitBlameCommit("~/code/eamodio/vscode-gitlens-demo", "fe26af408293cba5b4bfd77306e1ac9ff7ccaef8", "You", "eamodio@gmail.com", new Date("2016-11-12T20:41:00.000Z"), new Date("2020-11-01T06:57:21.000Z"), "Supercharged", "code.ts", void 0, "3ac1d3f51d7cf5f438cc69f25f6740536ad80fef", "code.ts", []);
              let includePullRequest = false;
              switch (params.key) {
                case _configuration__WEBPACK_IMPORTED_MODULE_2__.configuration.name("currentLine.format"):
                  includePullRequest = _container__WEBPACK_IMPORTED_MODULE_3__.Container.config.currentLine.pullRequests.enabled;
                  break;
                case _configuration__WEBPACK_IMPORTED_MODULE_2__.configuration.name("statusBar.format"):
                  includePullRequest = _container__WEBPACK_IMPORTED_MODULE_3__.Container.config.statusBar.pullRequests.enabled;
                  break;
              }
              let pr;
              if (includePullRequest) {
                pr = new _git_git__WEBPACK_IMPORTED_MODULE_4__.PullRequest({ id: "github", name: "GitHub", domain: "github.com" }, {
                  name: "Eric Amodio",
                  avatarUrl: "https://avatars1.githubusercontent.com/u/641685?s=32&v=4",
                  url: "https://github.com/eamodio"
                }, "1", "Supercharged", "https://github.com/eamodio/vscode-gitlens/pulls/1", _git_git__WEBPACK_IMPORTED_MODULE_4__.PullRequestState.Merged, new Date("Sat, 12 Nov 2016 19:41:00 GMT"), void 0, new Date("Sat, 12 Nov 2016 20:41:00 GMT"));
              }
              let preview;
              try {
                preview = _git_git__WEBPACK_IMPORTED_MODULE_4__.CommitFormatter.fromTemplate(params.format, commit, {
                  dateFormat: _container__WEBPACK_IMPORTED_MODULE_3__.Container.config.defaultDateFormat,
                  pullRequestOrRemote: pr,
                  messageTruncateAtNewLine: true
                });
              } catch {
                preview = "Invalid format";
              }
              await this.notify(_protocol__WEBPACK_IMPORTED_MODULE_6__.DidPreviewConfigurationNotificationType, {
                id: params.id,
                preview
              });
            }
          }
        });
        break;
      default:
        break;
    }
  }
  onMessageReceivedCore(e) {
    if (e == null)
      return;
    _logger__WEBPACK_IMPORTED_MODULE_5__.Logger.log(`Webview(${this.id}).onMessageReceived: method=${e.method}, data=${JSON.stringify(e)}`);
    this.onMessageReceived(e);
  }
  get visible() {
    var _a, _b;
    return (_b = (_a = this._panel) == null ? void 0 : _a.visible) != null ? _b : false;
  }
  hide() {
    var _a;
    (_a = this._panel) == null ? void 0 : _a.dispose();
  }
  setTitle(title) {
    if (this._panel == null)
      return;
    this._panel.title = title;
  }
  async show(column = vscode__WEBPACK_IMPORTED_MODULE_1__.ViewColumn.Beside) {
    var _a;
    if (this._panel == null) {
      this._panel = vscode__WEBPACK_IMPORTED_MODULE_1__.window.createWebviewPanel(this.id, this.title, { viewColumn: column, preserveFocus: false }, {
        retainContextWhenHidden: true,
        enableFindWidget: true,
        enableCommandUris: true,
        enableScripts: true
      });
      this._panel.iconPath = vscode__WEBPACK_IMPORTED_MODULE_1__.Uri.file(_container__WEBPACK_IMPORTED_MODULE_3__.Container.context.asAbsolutePath("images/gitlens-icon.png"));
      this._disposablePanel = vscode__WEBPACK_IMPORTED_MODULE_1__.Disposable.from(this._panel, this._panel.onDidDispose(this.onPanelDisposed, this), this._panel.onDidChangeViewState(this.onViewStateChanged, this), this._panel.webview.onDidReceiveMessage(this.onMessageReceivedCore, this), ...this.registerCommands());
      this._panel.webview.html = await this.getHtml(this._panel.webview);
    } else {
      const html = await this.getHtml(this._panel.webview);
      this._panel.webview.html = "";
      this._panel.webview.html = html;
      this._panel.reveal((_a = this._panel.viewColumn) != null ? _a : vscode__WEBPACK_IMPORTED_MODULE_1__.ViewColumn.Active, false);
    }
  }
  async getHtml(webview) {
    var _a, _b, _c;
    const uri = vscode__WEBPACK_IMPORTED_MODULE_1__.Uri.joinPath(_container__WEBPACK_IMPORTED_MODULE_3__.Container.context.extensionUri, "dist", "webviews", this.filename);
    const content = new TextDecoder("utf8").decode(await vscode__WEBPACK_IMPORTED_MODULE_1__.workspace.fs.readFile(uri));
    const [head, body, endOfBody] = await Promise.all([
      (_a = this.renderHead) == null ? void 0 : _a.call(this),
      (_b = this.renderBody) == null ? void 0 : _b.call(this),
      (_c = this.renderEndOfBody) == null ? void 0 : _c.call(this)
    ]);
    const cspSource = webview.cspSource;
    const cspNonce = (0,crypto__WEBPACK_IMPORTED_MODULE_0__.randomBytes)(16).toString("base64");
    const root = webview.asWebviewUri(_container__WEBPACK_IMPORTED_MODULE_3__.Container.context.extensionUri).toString();
    const html = content.replace(/#{(head|body|endOfBody)}/i, (_substring, token) => {
      switch (token) {
        case "head":
          return head != null ? head : "";
        case "body":
          return body != null ? body : "";
        case "endOfBody":
          return endOfBody != null ? endOfBody : "";
        default:
          return "";
      }
    }).replace(/#{(cspSource|cspNonce|root)}/g, (substring, token) => {
      switch (token) {
        case "cspSource":
          return cspSource;
        case "cspNonce":
          return cspNonce;
        case "root":
          return root;
        default:
          return "";
      }
    });
    return html;
  }
  notify(type, params) {
    return this.postMessage({ id: nextIpcId(), method: type.method, params });
  }
  getCustomSettings() {
    const customSettings = Object.create(null);
    for (const [key, setting] of this.customSettings) {
      customSettings[key] = setting.enabled();
    }
    return customSettings;
  }
  notifyDidChangeConfiguration() {
    return this.notify(_protocol__WEBPACK_IMPORTED_MODULE_6__.DidChangeConfigurationNotificationType, {
      config: _configuration__WEBPACK_IMPORTED_MODULE_2__.configuration.get(),
      customSettings: this.getCustomSettings()
    });
  }
  postMessage(message) {
    if (this._panel == null)
      return Promise.resolve(false);
    return this._panel.webview.postMessage(message);
  }
}


/***/ }),

/***/ "./src/webviews/welcomeWebview.ts":
/*!****************************************!*\
  !*** ./src/webviews/welcomeWebview.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "WelcomeWebview": () => (/* binding */ WelcomeWebview)
/* harmony export */ });
/* harmony import */ var _commands__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../commands */ "./src/commands.ts");
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../container */ "./src/container.ts");
/* harmony import */ var _webviewBase__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./webviewBase */ "./src/webviews/webviewBase.ts");




class WelcomeWebview extends _webviewBase__WEBPACK_IMPORTED_MODULE_2__.WebviewBase {
  constructor() {
    super(_commands__WEBPACK_IMPORTED_MODULE_0__.Commands.ShowWelcomePage);
  }
  get filename() {
    return "welcome.html";
  }
  get id() {
    return "gitlens.welcome";
  }
  get title() {
    return "Welcome to GitLens";
  }
  renderEndOfBody() {
    const bootstrap = {
      config: _container__WEBPACK_IMPORTED_MODULE_1__.Container.config
    };
    return `<script type="text/javascript" nonce="#{cspNonce}">window.bootstrap = ${JSON.stringify(bootstrap)};<\/script>`;
  }
}


/***/ }),

/***/ "./node_modules/events/events.js":
/*!***************************************!*\
  !*** ./node_modules/events/events.js ***!
  \***************************************/
/***/ ((module) => {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.



var R = typeof Reflect === 'object' ? Reflect : null
var ReflectApply = R && typeof R.apply === 'function'
  ? R.apply
  : function ReflectApply(target, receiver, args) {
    return Function.prototype.apply.call(target, receiver, args);
  }

var ReflectOwnKeys
if (R && typeof R.ownKeys === 'function') {
  ReflectOwnKeys = R.ownKeys
} else if (Object.getOwnPropertySymbols) {
  ReflectOwnKeys = function ReflectOwnKeys(target) {
    return Object.getOwnPropertyNames(target)
      .concat(Object.getOwnPropertySymbols(target));
  };
} else {
  ReflectOwnKeys = function ReflectOwnKeys(target) {
    return Object.getOwnPropertyNames(target);
  };
}

function ProcessEmitWarning(warning) {
  if (console && console.warn) console.warn(warning);
}

var NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {
  return value !== value;
}

function EventEmitter() {
  EventEmitter.init.call(this);
}
module.exports = EventEmitter;
module.exports.once = once;

// Backwards-compat with node 0.10.x
EventEmitter.EventEmitter = EventEmitter;

EventEmitter.prototype._events = undefined;
EventEmitter.prototype._eventsCount = 0;
EventEmitter.prototype._maxListeners = undefined;

// By default EventEmitters will print a warning if more than 10 listeners are
// added to it. This is a useful default which helps finding memory leaks.
var defaultMaxListeners = 10;

function checkListener(listener) {
  if (typeof listener !== 'function') {
    throw new TypeError('The "listener" argument must be of type Function. Received type ' + typeof listener);
  }
}

Object.defineProperty(EventEmitter, 'defaultMaxListeners', {
  enumerable: true,
  get: function() {
    return defaultMaxListeners;
  },
  set: function(arg) {
    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {
      throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' + arg + '.');
    }
    defaultMaxListeners = arg;
  }
});

EventEmitter.init = function() {

  if (this._events === undefined ||
      this._events === Object.getPrototypeOf(this)._events) {
    this._events = Object.create(null);
    this._eventsCount = 0;
  }

  this._maxListeners = this._maxListeners || undefined;
};

// Obviously not all Emitters should be limited to 10. This function allows
// that to be increased. Set to zero for unlimited.
EventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {
  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {
    throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received ' + n + '.');
  }
  this._maxListeners = n;
  return this;
};

function _getMaxListeners(that) {
  if (that._maxListeners === undefined)
    return EventEmitter.defaultMaxListeners;
  return that._maxListeners;
}

EventEmitter.prototype.getMaxListeners = function getMaxListeners() {
  return _getMaxListeners(this);
};

EventEmitter.prototype.emit = function emit(type) {
  var args = [];
  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);
  var doError = (type === 'error');

  var events = this._events;
  if (events !== undefined)
    doError = (doError && events.error === undefined);
  else if (!doError)
    return false;

  // If there is no 'error' event listener then throw.
  if (doError) {
    var er;
    if (args.length > 0)
      er = args[0];
    if (er instanceof Error) {
      // Note: The comments on the `throw` lines are intentional, they show
      // up in Node's output if this results in an unhandled exception.
      throw er; // Unhandled 'error' event
    }
    // At least give some kind of context to the user
    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));
    err.context = er;
    throw err; // Unhandled 'error' event
  }

  var handler = events[type];

  if (handler === undefined)
    return false;

  if (typeof handler === 'function') {
    ReflectApply(handler, this, args);
  } else {
    var len = handler.length;
    var listeners = arrayClone(handler, len);
    for (var i = 0; i < len; ++i)
      ReflectApply(listeners[i], this, args);
  }

  return true;
};

function _addListener(target, type, listener, prepend) {
  var m;
  var events;
  var existing;

  checkListener(listener);

  events = target._events;
  if (events === undefined) {
    events = target._events = Object.create(null);
    target._eventsCount = 0;
  } else {
    // To avoid recursion in the case that type === "newListener"! Before
    // adding it to the listeners, first emit "newListener".
    if (events.newListener !== undefined) {
      target.emit('newListener', type,
                  listener.listener ? listener.listener : listener);

      // Re-assign `events` because a newListener handler could have caused the
      // this._events to be assigned to a new object
      events = target._events;
    }
    existing = events[type];
  }

  if (existing === undefined) {
    // Optimize the case of one listener. Don't need the extra array object.
    existing = events[type] = listener;
    ++target._eventsCount;
  } else {
    if (typeof existing === 'function') {
      // Adding the second element, need to change to array.
      existing = events[type] =
        prepend ? [listener, existing] : [existing, listener];
      // If we've already got an array, just append.
    } else if (prepend) {
      existing.unshift(listener);
    } else {
      existing.push(listener);
    }

    // Check for listener leak
    m = _getMaxListeners(target);
    if (m > 0 && existing.length > m && !existing.warned) {
      existing.warned = true;
      // No error code for this since it is a Warning
      // eslint-disable-next-line no-restricted-syntax
      var w = new Error('Possible EventEmitter memory leak detected. ' +
                          existing.length + ' ' + String(type) + ' listeners ' +
                          'added. Use emitter.setMaxListeners() to ' +
                          'increase limit');
      w.name = 'MaxListenersExceededWarning';
      w.emitter = target;
      w.type = type;
      w.count = existing.length;
      ProcessEmitWarning(w);
    }
  }

  return target;
}

EventEmitter.prototype.addListener = function addListener(type, listener) {
  return _addListener(this, type, listener, false);
};

EventEmitter.prototype.on = EventEmitter.prototype.addListener;

EventEmitter.prototype.prependListener =
    function prependListener(type, listener) {
      return _addListener(this, type, listener, true);
    };

function onceWrapper() {
  if (!this.fired) {
    this.target.removeListener(this.type, this.wrapFn);
    this.fired = true;
    if (arguments.length === 0)
      return this.listener.call(this.target);
    return this.listener.apply(this.target, arguments);
  }
}

function _onceWrap(target, type, listener) {
  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };
  var wrapped = onceWrapper.bind(state);
  wrapped.listener = listener;
  state.wrapFn = wrapped;
  return wrapped;
}

EventEmitter.prototype.once = function once(type, listener) {
  checkListener(listener);
  this.on(type, _onceWrap(this, type, listener));
  return this;
};

EventEmitter.prototype.prependOnceListener =
    function prependOnceListener(type, listener) {
      checkListener(listener);
      this.prependListener(type, _onceWrap(this, type, listener));
      return this;
    };

// Emits a 'removeListener' event if and only if the listener was removed.
EventEmitter.prototype.removeListener =
    function removeListener(type, listener) {
      var list, events, position, i, originalListener;

      checkListener(listener);

      events = this._events;
      if (events === undefined)
        return this;

      list = events[type];
      if (list === undefined)
        return this;

      if (list === listener || list.listener === listener) {
        if (--this._eventsCount === 0)
          this._events = Object.create(null);
        else {
          delete events[type];
          if (events.removeListener)
            this.emit('removeListener', type, list.listener || listener);
        }
      } else if (typeof list !== 'function') {
        position = -1;

        for (i = list.length - 1; i >= 0; i--) {
          if (list[i] === listener || list[i].listener === listener) {
            originalListener = list[i].listener;
            position = i;
            break;
          }
        }

        if (position < 0)
          return this;

        if (position === 0)
          list.shift();
        else {
          spliceOne(list, position);
        }

        if (list.length === 1)
          events[type] = list[0];

        if (events.removeListener !== undefined)
          this.emit('removeListener', type, originalListener || listener);
      }

      return this;
    };

EventEmitter.prototype.off = EventEmitter.prototype.removeListener;

EventEmitter.prototype.removeAllListeners =
    function removeAllListeners(type) {
      var listeners, events, i;

      events = this._events;
      if (events === undefined)
        return this;

      // not listening for removeListener, no need to emit
      if (events.removeListener === undefined) {
        if (arguments.length === 0) {
          this._events = Object.create(null);
          this._eventsCount = 0;
        } else if (events[type] !== undefined) {
          if (--this._eventsCount === 0)
            this._events = Object.create(null);
          else
            delete events[type];
        }
        return this;
      }

      // emit removeListener for all listeners on all events
      if (arguments.length === 0) {
        var keys = Object.keys(events);
        var key;
        for (i = 0; i < keys.length; ++i) {
          key = keys[i];
          if (key === 'removeListener') continue;
          this.removeAllListeners(key);
        }
        this.removeAllListeners('removeListener');
        this._events = Object.create(null);
        this._eventsCount = 0;
        return this;
      }

      listeners = events[type];

      if (typeof listeners === 'function') {
        this.removeListener(type, listeners);
      } else if (listeners !== undefined) {
        // LIFO order
        for (i = listeners.length - 1; i >= 0; i--) {
          this.removeListener(type, listeners[i]);
        }
      }

      return this;
    };

function _listeners(target, type, unwrap) {
  var events = target._events;

  if (events === undefined)
    return [];

  var evlistener = events[type];
  if (evlistener === undefined)
    return [];

  if (typeof evlistener === 'function')
    return unwrap ? [evlistener.listener || evlistener] : [evlistener];

  return unwrap ?
    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);
}

EventEmitter.prototype.listeners = function listeners(type) {
  return _listeners(this, type, true);
};

EventEmitter.prototype.rawListeners = function rawListeners(type) {
  return _listeners(this, type, false);
};

EventEmitter.listenerCount = function(emitter, type) {
  if (typeof emitter.listenerCount === 'function') {
    return emitter.listenerCount(type);
  } else {
    return listenerCount.call(emitter, type);
  }
};

EventEmitter.prototype.listenerCount = listenerCount;
function listenerCount(type) {
  var events = this._events;

  if (events !== undefined) {
    var evlistener = events[type];

    if (typeof evlistener === 'function') {
      return 1;
    } else if (evlistener !== undefined) {
      return evlistener.length;
    }
  }

  return 0;
}

EventEmitter.prototype.eventNames = function eventNames() {
  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];
};

function arrayClone(arr, n) {
  var copy = new Array(n);
  for (var i = 0; i < n; ++i)
    copy[i] = arr[i];
  return copy;
}

function spliceOne(list, index) {
  for (; index + 1 < list.length; index++)
    list[index] = list[index + 1];
  list.pop();
}

function unwrapListeners(arr) {
  var ret = new Array(arr.length);
  for (var i = 0; i < ret.length; ++i) {
    ret[i] = arr[i].listener || arr[i];
  }
  return ret;
}

function once(emitter, name) {
  return new Promise(function (resolve, reject) {
    function errorListener(err) {
      emitter.removeListener(name, resolver);
      reject(err);
    }

    function resolver() {
      if (typeof emitter.removeListener === 'function') {
        emitter.removeListener('error', errorListener);
      }
      resolve([].slice.call(arguments));
    };

    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });
    if (name !== 'error') {
      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });
    }
  });
}

function addErrorHandlerIfEventEmitter(emitter, handler, flags) {
  if (typeof emitter.on === 'function') {
    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);
  }
}

function eventTargetAgnosticAddListener(emitter, name, listener, flags) {
  if (typeof emitter.on === 'function') {
    if (flags.once) {
      emitter.once(name, listener);
    } else {
      emitter.on(name, listener);
    }
  } else if (typeof emitter.addEventListener === 'function') {
    // EventTarget does not have `error` event semantics like Node
    // EventEmitters, we do not listen for `error` events here.
    emitter.addEventListener(name, function wrapListener(arg) {
      // IE does not have builtin `{ once: true }` support so we
      // have to do it manually.
      if (flags.once) {
        emitter.removeEventListener(name, wrapListener);
      }
      listener(arg);
    });
  } else {
    throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type ' + typeof emitter);
  }
}


/***/ }),

/***/ "./node_modules/evp_bytestokey/index.js":
/*!**********************************************!*\
  !*** ./node_modules/evp_bytestokey/index.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer
var MD5 = __webpack_require__(/*! md5.js */ "./node_modules/md5.js/index.js")

/* eslint-disable camelcase */
function EVP_BytesToKey (password, salt, keyBits, ivLen) {
  if (!Buffer.isBuffer(password)) password = Buffer.from(password, 'binary')
  if (salt) {
    if (!Buffer.isBuffer(salt)) salt = Buffer.from(salt, 'binary')
    if (salt.length !== 8) throw new RangeError('salt should be Buffer with 8 byte length')
  }

  var keyLen = keyBits / 8
  var key = Buffer.alloc(keyLen)
  var iv = Buffer.alloc(ivLen || 0)
  var tmp = Buffer.alloc(0)

  while (keyLen > 0 || ivLen > 0) {
    var hash = new MD5()
    hash.update(tmp)
    hash.update(password)
    if (salt) hash.update(salt)
    tmp = hash.digest()

    var used = 0

    if (keyLen > 0) {
      var keyStart = key.length - keyLen
      used = Math.min(keyLen, tmp.length)
      tmp.copy(key, keyStart, 0, used)
      keyLen -= used
    }

    if (used < tmp.length && ivLen > 0) {
      var ivStart = iv.length - ivLen
      var length = Math.min(ivLen, tmp.length - used)
      tmp.copy(iv, ivStart, used, used + length)
      ivLen -= length
    }
  }

  tmp.fill(0)
  return { key: key, iv: iv }
}

module.exports = EVP_BytesToKey


/***/ }),

/***/ "./node_modules/hash-base/index.js":
/*!*****************************************!*\
  !*** ./node_modules/hash-base/index.js ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer
var Transform = __webpack_require__(/*! readable-stream */ "./node_modules/hash-base/node_modules/readable-stream/readable-browser.js").Transform
var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")

function throwIfNotStringOrBuffer (val, prefix) {
  if (!Buffer.isBuffer(val) && typeof val !== 'string') {
    throw new TypeError(prefix + ' must be a string or a buffer')
  }
}

function HashBase (blockSize) {
  Transform.call(this)

  this._block = Buffer.allocUnsafe(blockSize)
  this._blockSize = blockSize
  this._blockOffset = 0
  this._length = [0, 0, 0, 0]

  this._finalized = false
}

inherits(HashBase, Transform)

HashBase.prototype._transform = function (chunk, encoding, callback) {
  var error = null
  try {
    this.update(chunk, encoding)
  } catch (err) {
    error = err
  }

  callback(error)
}

HashBase.prototype._flush = function (callback) {
  var error = null
  try {
    this.push(this.digest())
  } catch (err) {
    error = err
  }

  callback(error)
}

HashBase.prototype.update = function (data, encoding) {
  throwIfNotStringOrBuffer(data, 'Data')
  if (this._finalized) throw new Error('Digest already called')
  if (!Buffer.isBuffer(data)) data = Buffer.from(data, encoding)

  // consume data
  var block = this._block
  var offset = 0
  while (this._blockOffset + data.length - offset >= this._blockSize) {
    for (var i = this._blockOffset; i < this._blockSize;) block[i++] = data[offset++]
    this._update()
    this._blockOffset = 0
  }
  while (offset < data.length) block[this._blockOffset++] = data[offset++]

  // update length
  for (var j = 0, carry = data.length * 8; carry > 0; ++j) {
    this._length[j] += carry
    carry = (this._length[j] / 0x0100000000) | 0
    if (carry > 0) this._length[j] -= 0x0100000000 * carry
  }

  return this
}

HashBase.prototype._update = function () {
  throw new Error('_update is not implemented')
}

HashBase.prototype.digest = function (encoding) {
  if (this._finalized) throw new Error('Digest already called')
  this._finalized = true

  var digest = this._digest()
  if (encoding !== undefined) digest = digest.toString(encoding)

  // reset state
  this._block.fill(0)
  this._blockOffset = 0
  for (var i = 0; i < 4; ++i) this._length[i] = 0

  return digest
}

HashBase.prototype._digest = function () {
  throw new Error('_digest is not implemented')
}

module.exports = HashBase


/***/ }),

/***/ "./node_modules/hash-base/node_modules/readable-stream/errors-browser.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/hash-base/node_modules/readable-stream/errors-browser.js ***!
  \*******************************************************************************/
/***/ ((module) => {

"use strict";


function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

var codes = {};

function createErrorType(code, message, Base) {
  if (!Base) {
    Base = Error;
  }

  function getMessage(arg1, arg2, arg3) {
    if (typeof message === 'string') {
      return message;
    } else {
      return message(arg1, arg2, arg3);
    }
  }

  var NodeError =
  /*#__PURE__*/
  function (_Base) {
    _inheritsLoose(NodeError, _Base);

    function NodeError(arg1, arg2, arg3) {
      return _Base.call(this, getMessage(arg1, arg2, arg3)) || this;
    }

    return NodeError;
  }(Base);

  NodeError.prototype.name = Base.name;
  NodeError.prototype.code = code;
  codes[code] = NodeError;
} // https://github.com/nodejs/node/blob/v10.8.0/lib/internal/errors.js


function oneOf(expected, thing) {
  if (Array.isArray(expected)) {
    var len = expected.length;
    expected = expected.map(function (i) {
      return String(i);
    });

    if (len > 2) {
      return "one of ".concat(thing, " ").concat(expected.slice(0, len - 1).join(', '), ", or ") + expected[len - 1];
    } else if (len === 2) {
      return "one of ".concat(thing, " ").concat(expected[0], " or ").concat(expected[1]);
    } else {
      return "of ".concat(thing, " ").concat(expected[0]);
    }
  } else {
    return "of ".concat(thing, " ").concat(String(expected));
  }
} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith


function startsWith(str, search, pos) {
  return str.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search;
} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith


function endsWith(str, search, this_len) {
  if (this_len === undefined || this_len > str.length) {
    this_len = str.length;
  }

  return str.substring(this_len - search.length, this_len) === search;
} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes


function includes(str, search, start) {
  if (typeof start !== 'number') {
    start = 0;
  }

  if (start + search.length > str.length) {
    return false;
  } else {
    return str.indexOf(search, start) !== -1;
  }
}

createErrorType('ERR_INVALID_OPT_VALUE', function (name, value) {
  return 'The value "' + value + '" is invalid for option "' + name + '"';
}, TypeError);
createErrorType('ERR_INVALID_ARG_TYPE', function (name, expected, actual) {
  // determiner: 'must be' or 'must not be'
  var determiner;

  if (typeof expected === 'string' && startsWith(expected, 'not ')) {
    determiner = 'must not be';
    expected = expected.replace(/^not /, '');
  } else {
    determiner = 'must be';
  }

  var msg;

  if (endsWith(name, ' argument')) {
    // For cases like 'first argument'
    msg = "The ".concat(name, " ").concat(determiner, " ").concat(oneOf(expected, 'type'));
  } else {
    var type = includes(name, '.') ? 'property' : 'argument';
    msg = "The \"".concat(name, "\" ").concat(type, " ").concat(determiner, " ").concat(oneOf(expected, 'type'));
  }

  msg += ". Received type ".concat(typeof actual);
  return msg;
}, TypeError);
createErrorType('ERR_STREAM_PUSH_AFTER_EOF', 'stream.push() after EOF');
createErrorType('ERR_METHOD_NOT_IMPLEMENTED', function (name) {
  return 'The ' + name + ' method is not implemented';
});
createErrorType('ERR_STREAM_PREMATURE_CLOSE', 'Premature close');
createErrorType('ERR_STREAM_DESTROYED', function (name) {
  return 'Cannot call ' + name + ' after a stream was destroyed';
});
createErrorType('ERR_MULTIPLE_CALLBACK', 'Callback called multiple times');
createErrorType('ERR_STREAM_CANNOT_PIPE', 'Cannot pipe, not readable');
createErrorType('ERR_STREAM_WRITE_AFTER_END', 'write after end');
createErrorType('ERR_STREAM_NULL_VALUES', 'May not write null values to stream', TypeError);
createErrorType('ERR_UNKNOWN_ENCODING', function (arg) {
  return 'Unknown encoding: ' + arg;
}, TypeError);
createErrorType('ERR_STREAM_UNSHIFT_AFTER_END_EVENT', 'stream.unshift() after end event');
module.exports.codes = codes;


/***/ }),

/***/ "./node_modules/hash-base/node_modules/readable-stream/lib/_stream_duplex.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/hash-base/node_modules/readable-stream/lib/_stream_duplex.js ***!
  \***********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
// a duplex stream is just a stream that is both readable and writable.
// Since JS doesn't have multiple prototypal inheritance, this class
// prototypally inherits from Readable, and then parasitically from
// Writable.

/*<replacement>*/

var objectKeys = Object.keys || function (obj) {
  var keys = [];

  for (var key in obj) {
    keys.push(key);
  }

  return keys;
};
/*</replacement>*/


module.exports = Duplex;

var Readable = __webpack_require__(/*! ./_stream_readable */ "./node_modules/hash-base/node_modules/readable-stream/lib/_stream_readable.js");

var Writable = __webpack_require__(/*! ./_stream_writable */ "./node_modules/hash-base/node_modules/readable-stream/lib/_stream_writable.js");

__webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")(Duplex, Readable);

{
  // Allow the keys array to be GC'ed.
  var keys = objectKeys(Writable.prototype);

  for (var v = 0; v < keys.length; v++) {
    var method = keys[v];
    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];
  }
}

function Duplex(options) {
  if (!(this instanceof Duplex)) return new Duplex(options);
  Readable.call(this, options);
  Writable.call(this, options);
  this.allowHalfOpen = true;

  if (options) {
    if (options.readable === false) this.readable = false;
    if (options.writable === false) this.writable = false;

    if (options.allowHalfOpen === false) {
      this.allowHalfOpen = false;
      this.once('end', onend);
    }
  }
}

Object.defineProperty(Duplex.prototype, 'writableHighWaterMark', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._writableState.highWaterMark;
  }
});
Object.defineProperty(Duplex.prototype, 'writableBuffer', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._writableState && this._writableState.getBuffer();
  }
});
Object.defineProperty(Duplex.prototype, 'writableLength', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._writableState.length;
  }
}); // the no-half-open enforcer

function onend() {
  // If the writable side ended, then we're ok.
  if (this._writableState.ended) return; // no more data can be written.
  // But allow more writes to happen in this tick.

  process.nextTick(onEndNT, this);
}

function onEndNT(self) {
  self.end();
}

Object.defineProperty(Duplex.prototype, 'destroyed', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    if (this._readableState === undefined || this._writableState === undefined) {
      return false;
    }

    return this._readableState.destroyed && this._writableState.destroyed;
  },
  set: function set(value) {
    // we ignore the value if the stream
    // has not been initialized yet
    if (this._readableState === undefined || this._writableState === undefined) {
      return;
    } // backward compatibility, the user is explicitly
    // managing destroyed


    this._readableState.destroyed = value;
    this._writableState.destroyed = value;
  }
});

/***/ }),

/***/ "./node_modules/hash-base/node_modules/readable-stream/lib/_stream_passthrough.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/hash-base/node_modules/readable-stream/lib/_stream_passthrough.js ***!
  \****************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
// a passthrough stream.
// basically just the most minimal sort of Transform stream.
// Every written chunk gets output as-is.


module.exports = PassThrough;

var Transform = __webpack_require__(/*! ./_stream_transform */ "./node_modules/hash-base/node_modules/readable-stream/lib/_stream_transform.js");

__webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")(PassThrough, Transform);

function PassThrough(options) {
  if (!(this instanceof PassThrough)) return new PassThrough(options);
  Transform.call(this, options);
}

PassThrough.prototype._transform = function (chunk, encoding, cb) {
  cb(null, chunk);
};

/***/ }),

/***/ "./node_modules/hash-base/node_modules/readable-stream/lib/_stream_readable.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/hash-base/node_modules/readable-stream/lib/_stream_readable.js ***!
  \*************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.


module.exports = Readable;
/*<replacement>*/

var Duplex;
/*</replacement>*/

Readable.ReadableState = ReadableState;
/*<replacement>*/

var EE = __webpack_require__(/*! events */ "./node_modules/events/events.js").EventEmitter;

var EElistenerCount = function EElistenerCount(emitter, type) {
  return emitter.listeners(type).length;
};
/*</replacement>*/

/*<replacement>*/


var Stream = __webpack_require__(/*! ./internal/streams/stream */ "./node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/stream-browser.js");
/*</replacement>*/


var Buffer = __webpack_require__(/*! buffer */ "./node_modules/buffer/index.js").Buffer;

var OurUint8Array = __webpack_require__.g.Uint8Array || function () {};

function _uint8ArrayToBuffer(chunk) {
  return Buffer.from(chunk);
}

function _isUint8Array(obj) {
  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;
}
/*<replacement>*/


var debugUtil = __webpack_require__(/*! util */ "?1e44");

var debug;

if (debugUtil && debugUtil.debuglog) {
  debug = debugUtil.debuglog('stream');
} else {
  debug = function debug() {};
}
/*</replacement>*/


var BufferList = __webpack_require__(/*! ./internal/streams/buffer_list */ "./node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/buffer_list.js");

var destroyImpl = __webpack_require__(/*! ./internal/streams/destroy */ "./node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/destroy.js");

var _require = __webpack_require__(/*! ./internal/streams/state */ "./node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/state.js"),
    getHighWaterMark = _require.getHighWaterMark;

var _require$codes = __webpack_require__(/*! ../errors */ "./node_modules/hash-base/node_modules/readable-stream/errors-browser.js").codes,
    ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,
    ERR_STREAM_PUSH_AFTER_EOF = _require$codes.ERR_STREAM_PUSH_AFTER_EOF,
    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,
    ERR_STREAM_UNSHIFT_AFTER_END_EVENT = _require$codes.ERR_STREAM_UNSHIFT_AFTER_END_EVENT; // Lazy loaded to improve the startup performance.


var StringDecoder;
var createReadableStreamAsyncIterator;
var from;

__webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")(Readable, Stream);

var errorOrDestroy = destroyImpl.errorOrDestroy;
var kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];

function prependListener(emitter, event, fn) {
  // Sadly this is not cacheable as some libraries bundle their own
  // event emitter implementation with them.
  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn); // This is a hack to make sure that our error handler is attached before any
  // userland ones.  NEVER DO THIS. This is here only because this code needs
  // to continue to work with older versions of Node.js that do not include
  // the prependListener() method. The goal is to eventually remove this hack.

  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (Array.isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];
}

function ReadableState(options, stream, isDuplex) {
  Duplex = Duplex || __webpack_require__(/*! ./_stream_duplex */ "./node_modules/hash-base/node_modules/readable-stream/lib/_stream_duplex.js");
  options = options || {}; // Duplex streams are both readable and writable, but share
  // the same options object.
  // However, some cases require setting options to different
  // values for the readable and the writable sides of the duplex stream.
  // These options can be provided separately as readableXXX and writableXXX.

  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex; // object stream flag. Used to make read(n) ignore n and to
  // make all the buffer merging and length checks go away

  this.objectMode = !!options.objectMode;
  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode; // the point at which it stops calling _read() to fill the buffer
  // Note: 0 is a valid value, means "don't call _read preemptively ever"

  this.highWaterMark = getHighWaterMark(this, options, 'readableHighWaterMark', isDuplex); // A linked list is used to store data chunks instead of an array because the
  // linked list can remove elements from the beginning faster than
  // array.shift()

  this.buffer = new BufferList();
  this.length = 0;
  this.pipes = null;
  this.pipesCount = 0;
  this.flowing = null;
  this.ended = false;
  this.endEmitted = false;
  this.reading = false; // a flag to be able to tell if the event 'readable'/'data' is emitted
  // immediately, or on a later tick.  We set this to true at first, because
  // any actions that shouldn't happen until "later" should generally also
  // not happen before the first read call.

  this.sync = true; // whenever we return null, then we set a flag to say
  // that we're awaiting a 'readable' event emission.

  this.needReadable = false;
  this.emittedReadable = false;
  this.readableListening = false;
  this.resumeScheduled = false;
  this.paused = true; // Should close be emitted on destroy. Defaults to true.

  this.emitClose = options.emitClose !== false; // Should .destroy() be called after 'end' (and potentially 'finish')

  this.autoDestroy = !!options.autoDestroy; // has it been destroyed

  this.destroyed = false; // Crypto is kind of old and crusty.  Historically, its default string
  // encoding is 'binary' so we have to make this configurable.
  // Everything else in the universe uses 'utf8', though.

  this.defaultEncoding = options.defaultEncoding || 'utf8'; // the number of writers that are awaiting a drain event in .pipe()s

  this.awaitDrain = 0; // if true, a maybeReadMore has been scheduled

  this.readingMore = false;
  this.decoder = null;
  this.encoding = null;

  if (options.encoding) {
    if (!StringDecoder) StringDecoder = __webpack_require__(/*! string_decoder/ */ "./node_modules/hash-base/node_modules/string_decoder/lib/string_decoder.js").StringDecoder;
    this.decoder = new StringDecoder(options.encoding);
    this.encoding = options.encoding;
  }
}

function Readable(options) {
  Duplex = Duplex || __webpack_require__(/*! ./_stream_duplex */ "./node_modules/hash-base/node_modules/readable-stream/lib/_stream_duplex.js");
  if (!(this instanceof Readable)) return new Readable(options); // Checking for a Stream.Duplex instance is faster here instead of inside
  // the ReadableState constructor, at least with V8 6.5

  var isDuplex = this instanceof Duplex;
  this._readableState = new ReadableState(options, this, isDuplex); // legacy

  this.readable = true;

  if (options) {
    if (typeof options.read === 'function') this._read = options.read;
    if (typeof options.destroy === 'function') this._destroy = options.destroy;
  }

  Stream.call(this);
}

Object.defineProperty(Readable.prototype, 'destroyed', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    if (this._readableState === undefined) {
      return false;
    }

    return this._readableState.destroyed;
  },
  set: function set(value) {
    // we ignore the value if the stream
    // has not been initialized yet
    if (!this._readableState) {
      return;
    } // backward compatibility, the user is explicitly
    // managing destroyed


    this._readableState.destroyed = value;
  }
});
Readable.prototype.destroy = destroyImpl.destroy;
Readable.prototype._undestroy = destroyImpl.undestroy;

Readable.prototype._destroy = function (err, cb) {
  cb(err);
}; // Manually shove something into the read() buffer.
// This returns true if the highWaterMark has not been hit yet,
// similar to how Writable.write() returns true if you should
// write() some more.


Readable.prototype.push = function (chunk, encoding) {
  var state = this._readableState;
  var skipChunkCheck;

  if (!state.objectMode) {
    if (typeof chunk === 'string') {
      encoding = encoding || state.defaultEncoding;

      if (encoding !== state.encoding) {
        chunk = Buffer.from(chunk, encoding);
        encoding = '';
      }

      skipChunkCheck = true;
    }
  } else {
    skipChunkCheck = true;
  }

  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);
}; // Unshift should *always* be something directly out of read()


Readable.prototype.unshift = function (chunk) {
  return readableAddChunk(this, chunk, null, true, false);
};

function readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {
  debug('readableAddChunk', chunk);
  var state = stream._readableState;

  if (chunk === null) {
    state.reading = false;
    onEofChunk(stream, state);
  } else {
    var er;
    if (!skipChunkCheck) er = chunkInvalid(state, chunk);

    if (er) {
      errorOrDestroy(stream, er);
    } else if (state.objectMode || chunk && chunk.length > 0) {
      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {
        chunk = _uint8ArrayToBuffer(chunk);
      }

      if (addToFront) {
        if (state.endEmitted) errorOrDestroy(stream, new ERR_STREAM_UNSHIFT_AFTER_END_EVENT());else addChunk(stream, state, chunk, true);
      } else if (state.ended) {
        errorOrDestroy(stream, new ERR_STREAM_PUSH_AFTER_EOF());
      } else if (state.destroyed) {
        return false;
      } else {
        state.reading = false;

        if (state.decoder && !encoding) {
          chunk = state.decoder.write(chunk);
          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);
        } else {
          addChunk(stream, state, chunk, false);
        }
      }
    } else if (!addToFront) {
      state.reading = false;
      maybeReadMore(stream, state);
    }
  } // We can push more data if we are below the highWaterMark.
  // Also, if we have no data yet, we can stand some more bytes.
  // This is to work around cases where hwm=0, such as the repl.


  return !state.ended && (state.length < state.highWaterMark || state.length === 0);
}

function addChunk(stream, state, chunk, addToFront) {
  if (state.flowing && state.length === 0 && !state.sync) {
    state.awaitDrain = 0;
    stream.emit('data', chunk);
  } else {
    // update the buffer info.
    state.length += state.objectMode ? 1 : chunk.length;
    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);
    if (state.needReadable) emitReadable(stream);
  }

  maybeReadMore(stream, state);
}

function chunkInvalid(state, chunk) {
  var er;

  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {
    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer', 'Uint8Array'], chunk);
  }

  return er;
}

Readable.prototype.isPaused = function () {
  return this._readableState.flowing === false;
}; // backwards compatibility.


Readable.prototype.setEncoding = function (enc) {
  if (!StringDecoder) StringDecoder = __webpack_require__(/*! string_decoder/ */ "./node_modules/hash-base/node_modules/string_decoder/lib/string_decoder.js").StringDecoder;
  var decoder = new StringDecoder(enc);
  this._readableState.decoder = decoder; // If setEncoding(null), decoder.encoding equals utf8

  this._readableState.encoding = this._readableState.decoder.encoding; // Iterate over current buffer to convert already stored Buffers:

  var p = this._readableState.buffer.head;
  var content = '';

  while (p !== null) {
    content += decoder.write(p.data);
    p = p.next;
  }

  this._readableState.buffer.clear();

  if (content !== '') this._readableState.buffer.push(content);
  this._readableState.length = content.length;
  return this;
}; // Don't raise the hwm > 1GB


var MAX_HWM = 0x40000000;

function computeNewHighWaterMark(n) {
  if (n >= MAX_HWM) {
    // TODO(ronag): Throw ERR_VALUE_OUT_OF_RANGE.
    n = MAX_HWM;
  } else {
    // Get the next highest power of 2 to prevent increasing hwm excessively in
    // tiny amounts
    n--;
    n |= n >>> 1;
    n |= n >>> 2;
    n |= n >>> 4;
    n |= n >>> 8;
    n |= n >>> 16;
    n++;
  }

  return n;
} // This function is designed to be inlinable, so please take care when making
// changes to the function body.


function howMuchToRead(n, state) {
  if (n <= 0 || state.length === 0 && state.ended) return 0;
  if (state.objectMode) return 1;

  if (n !== n) {
    // Only flow one buffer at a time
    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;
  } // If we're asking for more than the current hwm, then raise the hwm.


  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);
  if (n <= state.length) return n; // Don't have enough

  if (!state.ended) {
    state.needReadable = true;
    return 0;
  }

  return state.length;
} // you can override either this method, or the async _read(n) below.


Readable.prototype.read = function (n) {
  debug('read', n);
  n = parseInt(n, 10);
  var state = this._readableState;
  var nOrig = n;
  if (n !== 0) state.emittedReadable = false; // if we're doing read(0) to trigger a readable event, but we
  // already have a bunch of data in the buffer, then just trigger
  // the 'readable' event and move on.

  if (n === 0 && state.needReadable && ((state.highWaterMark !== 0 ? state.length >= state.highWaterMark : state.length > 0) || state.ended)) {
    debug('read: emitReadable', state.length, state.ended);
    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);
    return null;
  }

  n = howMuchToRead(n, state); // if we've ended, and we're now clear, then finish it up.

  if (n === 0 && state.ended) {
    if (state.length === 0) endReadable(this);
    return null;
  } // All the actual chunk generation logic needs to be
  // *below* the call to _read.  The reason is that in certain
  // synthetic stream cases, such as passthrough streams, _read
  // may be a completely synchronous operation which may change
  // the state of the read buffer, providing enough data when
  // before there was *not* enough.
  //
  // So, the steps are:
  // 1. Figure out what the state of things will be after we do
  // a read from the buffer.
  //
  // 2. If that resulting state will trigger a _read, then call _read.
  // Note that this may be asynchronous, or synchronous.  Yes, it is
  // deeply ugly to write APIs this way, but that still doesn't mean
  // that the Readable class should behave improperly, as streams are
  // designed to be sync/async agnostic.
  // Take note if the _read call is sync or async (ie, if the read call
  // has returned yet), so that we know whether or not it's safe to emit
  // 'readable' etc.
  //
  // 3. Actually pull the requested chunks out of the buffer and return.
  // if we need a readable event, then we need to do some reading.


  var doRead = state.needReadable;
  debug('need readable', doRead); // if we currently have less than the highWaterMark, then also read some

  if (state.length === 0 || state.length - n < state.highWaterMark) {
    doRead = true;
    debug('length less than watermark', doRead);
  } // however, if we've ended, then there's no point, and if we're already
  // reading, then it's unnecessary.


  if (state.ended || state.reading) {
    doRead = false;
    debug('reading or ended', doRead);
  } else if (doRead) {
    debug('do read');
    state.reading = true;
    state.sync = true; // if the length is currently zero, then we *need* a readable event.

    if (state.length === 0) state.needReadable = true; // call internal read method

    this._read(state.highWaterMark);

    state.sync = false; // If _read pushed data synchronously, then `reading` will be false,
    // and we need to re-evaluate how much data we can return to the user.

    if (!state.reading) n = howMuchToRead(nOrig, state);
  }

  var ret;
  if (n > 0) ret = fromList(n, state);else ret = null;

  if (ret === null) {
    state.needReadable = state.length <= state.highWaterMark;
    n = 0;
  } else {
    state.length -= n;
    state.awaitDrain = 0;
  }

  if (state.length === 0) {
    // If we have nothing in the buffer, then we want to know
    // as soon as we *do* get something into the buffer.
    if (!state.ended) state.needReadable = true; // If we tried to read() past the EOF, then emit end on the next tick.

    if (nOrig !== n && state.ended) endReadable(this);
  }

  if (ret !== null) this.emit('data', ret);
  return ret;
};

function onEofChunk(stream, state) {
  debug('onEofChunk');
  if (state.ended) return;

  if (state.decoder) {
    var chunk = state.decoder.end();

    if (chunk && chunk.length) {
      state.buffer.push(chunk);
      state.length += state.objectMode ? 1 : chunk.length;
    }
  }

  state.ended = true;

  if (state.sync) {
    // if we are sync, wait until next tick to emit the data.
    // Otherwise we risk emitting data in the flow()
    // the readable code triggers during a read() call
    emitReadable(stream);
  } else {
    // emit 'readable' now to make sure it gets picked up.
    state.needReadable = false;

    if (!state.emittedReadable) {
      state.emittedReadable = true;
      emitReadable_(stream);
    }
  }
} // Don't emit readable right away in sync mode, because this can trigger
// another read() call => stack overflow.  This way, it might trigger
// a nextTick recursion warning, but that's not so bad.


function emitReadable(stream) {
  var state = stream._readableState;
  debug('emitReadable', state.needReadable, state.emittedReadable);
  state.needReadable = false;

  if (!state.emittedReadable) {
    debug('emitReadable', state.flowing);
    state.emittedReadable = true;
    process.nextTick(emitReadable_, stream);
  }
}

function emitReadable_(stream) {
  var state = stream._readableState;
  debug('emitReadable_', state.destroyed, state.length, state.ended);

  if (!state.destroyed && (state.length || state.ended)) {
    stream.emit('readable');
    state.emittedReadable = false;
  } // The stream needs another readable event if
  // 1. It is not flowing, as the flow mechanism will take
  //    care of it.
  // 2. It is not ended.
  // 3. It is below the highWaterMark, so we can schedule
  //    another readable later.


  state.needReadable = !state.flowing && !state.ended && state.length <= state.highWaterMark;
  flow(stream);
} // at this point, the user has presumably seen the 'readable' event,
// and called read() to consume some data.  that may have triggered
// in turn another _read(n) call, in which case reading = true if
// it's in progress.
// However, if we're not ended, or reading, and the length < hwm,
// then go ahead and try to read some more preemptively.


function maybeReadMore(stream, state) {
  if (!state.readingMore) {
    state.readingMore = true;
    process.nextTick(maybeReadMore_, stream, state);
  }
}

function maybeReadMore_(stream, state) {
  // Attempt to read more data if we should.
  //
  // The conditions for reading more data are (one of):
  // - Not enough data buffered (state.length < state.highWaterMark). The loop
  //   is responsible for filling the buffer with enough data if such data
  //   is available. If highWaterMark is 0 and we are not in the flowing mode
  //   we should _not_ attempt to buffer any extra data. We'll get more data
  //   when the stream consumer calls read() instead.
  // - No data in the buffer, and the stream is in flowing mode. In this mode
  //   the loop below is responsible for ensuring read() is called. Failing to
  //   call read here would abort the flow and there's no other mechanism for
  //   continuing the flow if the stream consumer has just subscribed to the
  //   'data' event.
  //
  // In addition to the above conditions to keep reading data, the following
  // conditions prevent the data from being read:
  // - The stream has ended (state.ended).
  // - There is already a pending 'read' operation (state.reading). This is a
  //   case where the the stream has called the implementation defined _read()
  //   method, but they are processing the call asynchronously and have _not_
  //   called push() with new data. In this case we skip performing more
  //   read()s. The execution ends in this method again after the _read() ends
  //   up calling push() with more data.
  while (!state.reading && !state.ended && (state.length < state.highWaterMark || state.flowing && state.length === 0)) {
    var len = state.length;
    debug('maybeReadMore read 0');
    stream.read(0);
    if (len === state.length) // didn't get any data, stop spinning.
      break;
  }

  state.readingMore = false;
} // abstract method.  to be overridden in specific implementation classes.
// call cb(er, data) where data is <= n in length.
// for virtual (non-string, non-buffer) streams, "length" is somewhat
// arbitrary, and perhaps not very meaningful.


Readable.prototype._read = function (n) {
  errorOrDestroy(this, new ERR_METHOD_NOT_IMPLEMENTED('_read()'));
};

Readable.prototype.pipe = function (dest, pipeOpts) {
  var src = this;
  var state = this._readableState;

  switch (state.pipesCount) {
    case 0:
      state.pipes = dest;
      break;

    case 1:
      state.pipes = [state.pipes, dest];
      break;

    default:
      state.pipes.push(dest);
      break;
  }

  state.pipesCount += 1;
  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);
  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;
  var endFn = doEnd ? onend : unpipe;
  if (state.endEmitted) process.nextTick(endFn);else src.once('end', endFn);
  dest.on('unpipe', onunpipe);

  function onunpipe(readable, unpipeInfo) {
    debug('onunpipe');

    if (readable === src) {
      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {
        unpipeInfo.hasUnpiped = true;
        cleanup();
      }
    }
  }

  function onend() {
    debug('onend');
    dest.end();
  } // when the dest drains, it reduces the awaitDrain counter
  // on the source.  This would be more elegant with a .once()
  // handler in flow(), but adding and removing repeatedly is
  // too slow.


  var ondrain = pipeOnDrain(src);
  dest.on('drain', ondrain);
  var cleanedUp = false;

  function cleanup() {
    debug('cleanup'); // cleanup event handlers once the pipe is broken

    dest.removeListener('close', onclose);
    dest.removeListener('finish', onfinish);
    dest.removeListener('drain', ondrain);
    dest.removeListener('error', onerror);
    dest.removeListener('unpipe', onunpipe);
    src.removeListener('end', onend);
    src.removeListener('end', unpipe);
    src.removeListener('data', ondata);
    cleanedUp = true; // if the reader is waiting for a drain event from this
    // specific writer, then it would cause it to never start
    // flowing again.
    // So, if this is awaiting a drain, then we just call it now.
    // If we don't know, then assume that we are waiting for one.

    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();
  }

  src.on('data', ondata);

  function ondata(chunk) {
    debug('ondata');
    var ret = dest.write(chunk);
    debug('dest.write', ret);

    if (ret === false) {
      // If the user unpiped during `dest.write()`, it is possible
      // to get stuck in a permanently paused state if that write
      // also returned false.
      // => Check whether `dest` is still a piping destination.
      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {
        debug('false write response, pause', state.awaitDrain);
        state.awaitDrain++;
      }

      src.pause();
    }
  } // if the dest has an error, then stop piping into it.
  // however, don't suppress the throwing behavior for this.


  function onerror(er) {
    debug('onerror', er);
    unpipe();
    dest.removeListener('error', onerror);
    if (EElistenerCount(dest, 'error') === 0) errorOrDestroy(dest, er);
  } // Make sure our error handler is attached before userland ones.


  prependListener(dest, 'error', onerror); // Both close and finish should trigger unpipe, but only once.

  function onclose() {
    dest.removeListener('finish', onfinish);
    unpipe();
  }

  dest.once('close', onclose);

  function onfinish() {
    debug('onfinish');
    dest.removeListener('close', onclose);
    unpipe();
  }

  dest.once('finish', onfinish);

  function unpipe() {
    debug('unpipe');
    src.unpipe(dest);
  } // tell the dest that it's being piped to


  dest.emit('pipe', src); // start the flow if it hasn't been started already.

  if (!state.flowing) {
    debug('pipe resume');
    src.resume();
  }

  return dest;
};

function pipeOnDrain(src) {
  return function pipeOnDrainFunctionResult() {
    var state = src._readableState;
    debug('pipeOnDrain', state.awaitDrain);
    if (state.awaitDrain) state.awaitDrain--;

    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {
      state.flowing = true;
      flow(src);
    }
  };
}

Readable.prototype.unpipe = function (dest) {
  var state = this._readableState;
  var unpipeInfo = {
    hasUnpiped: false
  }; // if we're not piping anywhere, then do nothing.

  if (state.pipesCount === 0) return this; // just one destination.  most common case.

  if (state.pipesCount === 1) {
    // passed in one, but it's not the right one.
    if (dest && dest !== state.pipes) return this;
    if (!dest) dest = state.pipes; // got a match.

    state.pipes = null;
    state.pipesCount = 0;
    state.flowing = false;
    if (dest) dest.emit('unpipe', this, unpipeInfo);
    return this;
  } // slow case. multiple pipe destinations.


  if (!dest) {
    // remove all.
    var dests = state.pipes;
    var len = state.pipesCount;
    state.pipes = null;
    state.pipesCount = 0;
    state.flowing = false;

    for (var i = 0; i < len; i++) {
      dests[i].emit('unpipe', this, {
        hasUnpiped: false
      });
    }

    return this;
  } // try to find the right one.


  var index = indexOf(state.pipes, dest);
  if (index === -1) return this;
  state.pipes.splice(index, 1);
  state.pipesCount -= 1;
  if (state.pipesCount === 1) state.pipes = state.pipes[0];
  dest.emit('unpipe', this, unpipeInfo);
  return this;
}; // set up data events if they are asked for
// Ensure readable listeners eventually get something


Readable.prototype.on = function (ev, fn) {
  var res = Stream.prototype.on.call(this, ev, fn);
  var state = this._readableState;

  if (ev === 'data') {
    // update readableListening so that resume() may be a no-op
    // a few lines down. This is needed to support once('readable').
    state.readableListening = this.listenerCount('readable') > 0; // Try start flowing on next tick if stream isn't explicitly paused

    if (state.flowing !== false) this.resume();
  } else if (ev === 'readable') {
    if (!state.endEmitted && !state.readableListening) {
      state.readableListening = state.needReadable = true;
      state.flowing = false;
      state.emittedReadable = false;
      debug('on readable', state.length, state.reading);

      if (state.length) {
        emitReadable(this);
      } else if (!state.reading) {
        process.nextTick(nReadingNextTick, this);
      }
    }
  }

  return res;
};

Readable.prototype.addListener = Readable.prototype.on;

Readable.prototype.removeListener = function (ev, fn) {
  var res = Stream.prototype.removeListener.call(this, ev, fn);

  if (ev === 'readable') {
    // We need to check if there is someone still listening to
    // readable and reset the state. However this needs to happen
    // after readable has been emitted but before I/O (nextTick) to
    // support once('readable', fn) cycles. This means that calling
    // resume within the same tick will have no
    // effect.
    process.nextTick(updateReadableListening, this);
  }

  return res;
};

Readable.prototype.removeAllListeners = function (ev) {
  var res = Stream.prototype.removeAllListeners.apply(this, arguments);

  if (ev === 'readable' || ev === undefined) {
    // We need to check if there is someone still listening to
    // readable and reset the state. However this needs to happen
    // after readable has been emitted but before I/O (nextTick) to
    // support once('readable', fn) cycles. This means that calling
    // resume within the same tick will have no
    // effect.
    process.nextTick(updateReadableListening, this);
  }

  return res;
};

function updateReadableListening(self) {
  var state = self._readableState;
  state.readableListening = self.listenerCount('readable') > 0;

  if (state.resumeScheduled && !state.paused) {
    // flowing needs to be set to true now, otherwise
    // the upcoming resume will not flow.
    state.flowing = true; // crude way to check if we should resume
  } else if (self.listenerCount('data') > 0) {
    self.resume();
  }
}

function nReadingNextTick(self) {
  debug('readable nexttick read 0');
  self.read(0);
} // pause() and resume() are remnants of the legacy readable stream API
// If the user uses them, then switch into old mode.


Readable.prototype.resume = function () {
  var state = this._readableState;

  if (!state.flowing) {
    debug('resume'); // we flow only if there is no one listening
    // for readable, but we still have to call
    // resume()

    state.flowing = !state.readableListening;
    resume(this, state);
  }

  state.paused = false;
  return this;
};

function resume(stream, state) {
  if (!state.resumeScheduled) {
    state.resumeScheduled = true;
    process.nextTick(resume_, stream, state);
  }
}

function resume_(stream, state) {
  debug('resume', state.reading);

  if (!state.reading) {
    stream.read(0);
  }

  state.resumeScheduled = false;
  stream.emit('resume');
  flow(stream);
  if (state.flowing && !state.reading) stream.read(0);
}

Readable.prototype.pause = function () {
  debug('call pause flowing=%j', this._readableState.flowing);

  if (this._readableState.flowing !== false) {
    debug('pause');
    this._readableState.flowing = false;
    this.emit('pause');
  }

  this._readableState.paused = true;
  return this;
};

function flow(stream) {
  var state = stream._readableState;
  debug('flow', state.flowing);

  while (state.flowing && stream.read() !== null) {
    ;
  }
} // wrap an old-style stream as the async data source.
// This is *not* part of the readable stream interface.
// It is an ugly unfortunate mess of history.


Readable.prototype.wrap = function (stream) {
  var _this = this;

  var state = this._readableState;
  var paused = false;
  stream.on('end', function () {
    debug('wrapped end');

    if (state.decoder && !state.ended) {
      var chunk = state.decoder.end();
      if (chunk && chunk.length) _this.push(chunk);
    }

    _this.push(null);
  });
  stream.on('data', function (chunk) {
    debug('wrapped data');
    if (state.decoder) chunk = state.decoder.write(chunk); // don't skip over falsy values in objectMode

    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;

    var ret = _this.push(chunk);

    if (!ret) {
      paused = true;
      stream.pause();
    }
  }); // proxy all the other methods.
  // important when wrapping filters and duplexes.

  for (var i in stream) {
    if (this[i] === undefined && typeof stream[i] === 'function') {
      this[i] = function methodWrap(method) {
        return function methodWrapReturnFunction() {
          return stream[method].apply(stream, arguments);
        };
      }(i);
    }
  } // proxy certain important events.


  for (var n = 0; n < kProxyEvents.length; n++) {
    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));
  } // when we try to consume some more bytes, simply unpause the
  // underlying stream.


  this._read = function (n) {
    debug('wrapped _read', n);

    if (paused) {
      paused = false;
      stream.resume();
    }
  };

  return this;
};

if (typeof Symbol === 'function') {
  Readable.prototype[Symbol.asyncIterator] = function () {
    if (createReadableStreamAsyncIterator === undefined) {
      createReadableStreamAsyncIterator = __webpack_require__(/*! ./internal/streams/async_iterator */ "./node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/async_iterator.js");
    }

    return createReadableStreamAsyncIterator(this);
  };
}

Object.defineProperty(Readable.prototype, 'readableHighWaterMark', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._readableState.highWaterMark;
  }
});
Object.defineProperty(Readable.prototype, 'readableBuffer', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._readableState && this._readableState.buffer;
  }
});
Object.defineProperty(Readable.prototype, 'readableFlowing', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._readableState.flowing;
  },
  set: function set(state) {
    if (this._readableState) {
      this._readableState.flowing = state;
    }
  }
}); // exposed for testing purposes only.

Readable._fromList = fromList;
Object.defineProperty(Readable.prototype, 'readableLength', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._readableState.length;
  }
}); // Pluck off n bytes from an array of buffers.
// Length is the combined lengths of all the buffers in the list.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.

function fromList(n, state) {
  // nothing buffered
  if (state.length === 0) return null;
  var ret;
  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {
    // read it all, truncate the list
    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.first();else ret = state.buffer.concat(state.length);
    state.buffer.clear();
  } else {
    // read part of list
    ret = state.buffer.consume(n, state.decoder);
  }
  return ret;
}

function endReadable(stream) {
  var state = stream._readableState;
  debug('endReadable', state.endEmitted);

  if (!state.endEmitted) {
    state.ended = true;
    process.nextTick(endReadableNT, state, stream);
  }
}

function endReadableNT(state, stream) {
  debug('endReadableNT', state.endEmitted, state.length); // Check that we didn't get one last unshift.

  if (!state.endEmitted && state.length === 0) {
    state.endEmitted = true;
    stream.readable = false;
    stream.emit('end');

    if (state.autoDestroy) {
      // In case of duplex streams we need a way to detect
      // if the writable side is ready for autoDestroy as well
      var wState = stream._writableState;

      if (!wState || wState.autoDestroy && wState.finished) {
        stream.destroy();
      }
    }
  }
}

if (typeof Symbol === 'function') {
  Readable.from = function (iterable, opts) {
    if (from === undefined) {
      from = __webpack_require__(/*! ./internal/streams/from */ "./node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/from-browser.js");
    }

    return from(Readable, iterable, opts);
  };
}

function indexOf(xs, x) {
  for (var i = 0, l = xs.length; i < l; i++) {
    if (xs[i] === x) return i;
  }

  return -1;
}

/***/ }),

/***/ "./node_modules/hash-base/node_modules/readable-stream/lib/_stream_transform.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/hash-base/node_modules/readable-stream/lib/_stream_transform.js ***!
  \**************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
// a transform stream is a readable/writable stream where you do
// something with the data.  Sometimes it's called a "filter",
// but that's not a great name for it, since that implies a thing where
// some bits pass through, and others are simply ignored.  (That would
// be a valid example of a transform, of course.)
//
// While the output is causally related to the input, it's not a
// necessarily symmetric or synchronous transformation.  For example,
// a zlib stream might take multiple plain-text writes(), and then
// emit a single compressed chunk some time in the future.
//
// Here's how this works:
//
// The Transform stream has all the aspects of the readable and writable
// stream classes.  When you write(chunk), that calls _write(chunk,cb)
// internally, and returns false if there's a lot of pending writes
// buffered up.  When you call read(), that calls _read(n) until
// there's enough pending readable data buffered up.
//
// In a transform stream, the written data is placed in a buffer.  When
// _read(n) is called, it transforms the queued up data, calling the
// buffered _write cb's as it consumes chunks.  If consuming a single
// written chunk would result in multiple output chunks, then the first
// outputted bit calls the readcb, and subsequent chunks just go into
// the read buffer, and will cause it to emit 'readable' if necessary.
//
// This way, back-pressure is actually determined by the reading side,
// since _read has to be called to start processing a new chunk.  However,
// a pathological inflate type of transform can cause excessive buffering
// here.  For example, imagine a stream where every byte of input is
// interpreted as an integer from 0-255, and then results in that many
// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in
// 1kb of data being output.  In this case, you could write a very small
// amount of input, and end up with a very large amount of output.  In
// such a pathological inflating mechanism, there'd be no way to tell
// the system to stop doing the transform.  A single 4MB write could
// cause the system to run out of memory.
//
// However, even in such a pathological case, only a single written chunk
// would be consumed, and then the rest would wait (un-transformed) until
// the results of the previous transformed chunk were consumed.


module.exports = Transform;

var _require$codes = __webpack_require__(/*! ../errors */ "./node_modules/hash-base/node_modules/readable-stream/errors-browser.js").codes,
    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,
    ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,
    ERR_TRANSFORM_ALREADY_TRANSFORMING = _require$codes.ERR_TRANSFORM_ALREADY_TRANSFORMING,
    ERR_TRANSFORM_WITH_LENGTH_0 = _require$codes.ERR_TRANSFORM_WITH_LENGTH_0;

var Duplex = __webpack_require__(/*! ./_stream_duplex */ "./node_modules/hash-base/node_modules/readable-stream/lib/_stream_duplex.js");

__webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")(Transform, Duplex);

function afterTransform(er, data) {
  var ts = this._transformState;
  ts.transforming = false;
  var cb = ts.writecb;

  if (cb === null) {
    return this.emit('error', new ERR_MULTIPLE_CALLBACK());
  }

  ts.writechunk = null;
  ts.writecb = null;
  if (data != null) // single equals check for both `null` and `undefined`
    this.push(data);
  cb(er);
  var rs = this._readableState;
  rs.reading = false;

  if (rs.needReadable || rs.length < rs.highWaterMark) {
    this._read(rs.highWaterMark);
  }
}

function Transform(options) {
  if (!(this instanceof Transform)) return new Transform(options);
  Duplex.call(this, options);
  this._transformState = {
    afterTransform: afterTransform.bind(this),
    needTransform: false,
    transforming: false,
    writecb: null,
    writechunk: null,
    writeencoding: null
  }; // start out asking for a readable event once data is transformed.

  this._readableState.needReadable = true; // we have implemented the _read method, and done the other things
  // that Readable wants before the first _read call, so unset the
  // sync guard flag.

  this._readableState.sync = false;

  if (options) {
    if (typeof options.transform === 'function') this._transform = options.transform;
    if (typeof options.flush === 'function') this._flush = options.flush;
  } // When the writable side finishes, then flush out anything remaining.


  this.on('prefinish', prefinish);
}

function prefinish() {
  var _this = this;

  if (typeof this._flush === 'function' && !this._readableState.destroyed) {
    this._flush(function (er, data) {
      done(_this, er, data);
    });
  } else {
    done(this, null, null);
  }
}

Transform.prototype.push = function (chunk, encoding) {
  this._transformState.needTransform = false;
  return Duplex.prototype.push.call(this, chunk, encoding);
}; // This is the part where you do stuff!
// override this function in implementation classes.
// 'chunk' is an input chunk.
//
// Call `push(newChunk)` to pass along transformed output
// to the readable side.  You may call 'push' zero or more times.
//
// Call `cb(err)` when you are done with this chunk.  If you pass
// an error, then that'll put the hurt on the whole operation.  If you
// never call cb(), then you'll never get another chunk.


Transform.prototype._transform = function (chunk, encoding, cb) {
  cb(new ERR_METHOD_NOT_IMPLEMENTED('_transform()'));
};

Transform.prototype._write = function (chunk, encoding, cb) {
  var ts = this._transformState;
  ts.writecb = cb;
  ts.writechunk = chunk;
  ts.writeencoding = encoding;

  if (!ts.transforming) {
    var rs = this._readableState;
    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);
  }
}; // Doesn't matter what the args are here.
// _transform does all the work.
// That we got here means that the readable side wants more data.


Transform.prototype._read = function (n) {
  var ts = this._transformState;

  if (ts.writechunk !== null && !ts.transforming) {
    ts.transforming = true;

    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);
  } else {
    // mark that we need a transform, so that any data that comes in
    // will get processed, now that we've asked for it.
    ts.needTransform = true;
  }
};

Transform.prototype._destroy = function (err, cb) {
  Duplex.prototype._destroy.call(this, err, function (err2) {
    cb(err2);
  });
};

function done(stream, er, data) {
  if (er) return stream.emit('error', er);
  if (data != null) // single equals check for both `null` and `undefined`
    stream.push(data); // TODO(BridgeAR): Write a test for these two error cases
  // if there's nothing in the write buffer, then that means
  // that nothing more will ever be provided

  if (stream._writableState.length) throw new ERR_TRANSFORM_WITH_LENGTH_0();
  if (stream._transformState.transforming) throw new ERR_TRANSFORM_ALREADY_TRANSFORMING();
  return stream.push(null);
}

/***/ }),

/***/ "./node_modules/hash-base/node_modules/readable-stream/lib/_stream_writable.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/hash-base/node_modules/readable-stream/lib/_stream_writable.js ***!
  \*************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
// A bit simpler than readable streams.
// Implement an async ._write(chunk, encoding, cb), and it'll handle all
// the drain event emission and buffering.


module.exports = Writable;
/* <replacement> */

function WriteReq(chunk, encoding, cb) {
  this.chunk = chunk;
  this.encoding = encoding;
  this.callback = cb;
  this.next = null;
} // It seems a linked list but it is not
// there will be only 2 of these for each stream


function CorkedRequest(state) {
  var _this = this;

  this.next = null;
  this.entry = null;

  this.finish = function () {
    onCorkedFinish(_this, state);
  };
}
/* </replacement> */

/*<replacement>*/


var Duplex;
/*</replacement>*/

Writable.WritableState = WritableState;
/*<replacement>*/

var internalUtil = {
  deprecate: __webpack_require__(/*! util-deprecate */ "./node_modules/util-deprecate/browser.js")
};
/*</replacement>*/

/*<replacement>*/

var Stream = __webpack_require__(/*! ./internal/streams/stream */ "./node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/stream-browser.js");
/*</replacement>*/


var Buffer = __webpack_require__(/*! buffer */ "./node_modules/buffer/index.js").Buffer;

var OurUint8Array = __webpack_require__.g.Uint8Array || function () {};

function _uint8ArrayToBuffer(chunk) {
  return Buffer.from(chunk);
}

function _isUint8Array(obj) {
  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;
}

var destroyImpl = __webpack_require__(/*! ./internal/streams/destroy */ "./node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/destroy.js");

var _require = __webpack_require__(/*! ./internal/streams/state */ "./node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/state.js"),
    getHighWaterMark = _require.getHighWaterMark;

var _require$codes = __webpack_require__(/*! ../errors */ "./node_modules/hash-base/node_modules/readable-stream/errors-browser.js").codes,
    ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,
    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,
    ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,
    ERR_STREAM_CANNOT_PIPE = _require$codes.ERR_STREAM_CANNOT_PIPE,
    ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED,
    ERR_STREAM_NULL_VALUES = _require$codes.ERR_STREAM_NULL_VALUES,
    ERR_STREAM_WRITE_AFTER_END = _require$codes.ERR_STREAM_WRITE_AFTER_END,
    ERR_UNKNOWN_ENCODING = _require$codes.ERR_UNKNOWN_ENCODING;

var errorOrDestroy = destroyImpl.errorOrDestroy;

__webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")(Writable, Stream);

function nop() {}

function WritableState(options, stream, isDuplex) {
  Duplex = Duplex || __webpack_require__(/*! ./_stream_duplex */ "./node_modules/hash-base/node_modules/readable-stream/lib/_stream_duplex.js");
  options = options || {}; // Duplex streams are both readable and writable, but share
  // the same options object.
  // However, some cases require setting options to different
  // values for the readable and the writable sides of the duplex stream,
  // e.g. options.readableObjectMode vs. options.writableObjectMode, etc.

  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex; // object stream flag to indicate whether or not this stream
  // contains buffers or objects.

  this.objectMode = !!options.objectMode;
  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode; // the point at which write() starts returning false
  // Note: 0 is a valid value, means that we always return false if
  // the entire buffer is not flushed immediately on write()

  this.highWaterMark = getHighWaterMark(this, options, 'writableHighWaterMark', isDuplex); // if _final has been called

  this.finalCalled = false; // drain event flag.

  this.needDrain = false; // at the start of calling end()

  this.ending = false; // when end() has been called, and returned

  this.ended = false; // when 'finish' is emitted

  this.finished = false; // has it been destroyed

  this.destroyed = false; // should we decode strings into buffers before passing to _write?
  // this is here so that some node-core streams can optimize string
  // handling at a lower level.

  var noDecode = options.decodeStrings === false;
  this.decodeStrings = !noDecode; // Crypto is kind of old and crusty.  Historically, its default string
  // encoding is 'binary' so we have to make this configurable.
  // Everything else in the universe uses 'utf8', though.

  this.defaultEncoding = options.defaultEncoding || 'utf8'; // not an actual buffer we keep track of, but a measurement
  // of how much we're waiting to get pushed to some underlying
  // socket or file.

  this.length = 0; // a flag to see when we're in the middle of a write.

  this.writing = false; // when true all writes will be buffered until .uncork() call

  this.corked = 0; // a flag to be able to tell if the onwrite cb is called immediately,
  // or on a later tick.  We set this to true at first, because any
  // actions that shouldn't happen until "later" should generally also
  // not happen before the first write call.

  this.sync = true; // a flag to know if we're processing previously buffered items, which
  // may call the _write() callback in the same tick, so that we don't
  // end up in an overlapped onwrite situation.

  this.bufferProcessing = false; // the callback that's passed to _write(chunk,cb)

  this.onwrite = function (er) {
    onwrite(stream, er);
  }; // the callback that the user supplies to write(chunk,encoding,cb)


  this.writecb = null; // the amount that is being written when _write is called.

  this.writelen = 0;
  this.bufferedRequest = null;
  this.lastBufferedRequest = null; // number of pending user-supplied write callbacks
  // this must be 0 before 'finish' can be emitted

  this.pendingcb = 0; // emit prefinish if the only thing we're waiting for is _write cbs
  // This is relevant for synchronous Transform streams

  this.prefinished = false; // True if the error was already emitted and should not be thrown again

  this.errorEmitted = false; // Should close be emitted on destroy. Defaults to true.

  this.emitClose = options.emitClose !== false; // Should .destroy() be called after 'finish' (and potentially 'end')

  this.autoDestroy = !!options.autoDestroy; // count buffered requests

  this.bufferedRequestCount = 0; // allocate the first CorkedRequest, there is always
  // one allocated and free to use, and we maintain at most two

  this.corkedRequestsFree = new CorkedRequest(this);
}

WritableState.prototype.getBuffer = function getBuffer() {
  var current = this.bufferedRequest;
  var out = [];

  while (current) {
    out.push(current);
    current = current.next;
  }

  return out;
};

(function () {
  try {
    Object.defineProperty(WritableState.prototype, 'buffer', {
      get: internalUtil.deprecate(function writableStateBufferGetter() {
        return this.getBuffer();
      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')
    });
  } catch (_) {}
})(); // Test _writableState for inheritance to account for Duplex streams,
// whose prototype chain only points to Readable.


var realHasInstance;

if (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {
  realHasInstance = Function.prototype[Symbol.hasInstance];
  Object.defineProperty(Writable, Symbol.hasInstance, {
    value: function value(object) {
      if (realHasInstance.call(this, object)) return true;
      if (this !== Writable) return false;
      return object && object._writableState instanceof WritableState;
    }
  });
} else {
  realHasInstance = function realHasInstance(object) {
    return object instanceof this;
  };
}

function Writable(options) {
  Duplex = Duplex || __webpack_require__(/*! ./_stream_duplex */ "./node_modules/hash-base/node_modules/readable-stream/lib/_stream_duplex.js"); // Writable ctor is applied to Duplexes, too.
  // `realHasInstance` is necessary because using plain `instanceof`
  // would return false, as no `_writableState` property is attached.
  // Trying to use the custom `instanceof` for Writable here will also break the
  // Node.js LazyTransform implementation, which has a non-trivial getter for
  // `_writableState` that would lead to infinite recursion.
  // Checking for a Stream.Duplex instance is faster here instead of inside
  // the WritableState constructor, at least with V8 6.5

  var isDuplex = this instanceof Duplex;
  if (!isDuplex && !realHasInstance.call(Writable, this)) return new Writable(options);
  this._writableState = new WritableState(options, this, isDuplex); // legacy.

  this.writable = true;

  if (options) {
    if (typeof options.write === 'function') this._write = options.write;
    if (typeof options.writev === 'function') this._writev = options.writev;
    if (typeof options.destroy === 'function') this._destroy = options.destroy;
    if (typeof options.final === 'function') this._final = options.final;
  }

  Stream.call(this);
} // Otherwise people can pipe Writable streams, which is just wrong.


Writable.prototype.pipe = function () {
  errorOrDestroy(this, new ERR_STREAM_CANNOT_PIPE());
};

function writeAfterEnd(stream, cb) {
  var er = new ERR_STREAM_WRITE_AFTER_END(); // TODO: defer error events consistently everywhere, not just the cb

  errorOrDestroy(stream, er);
  process.nextTick(cb, er);
} // Checks that a user-supplied chunk is valid, especially for the particular
// mode the stream is in. Currently this means that `null` is never accepted
// and undefined/non-string values are only allowed in object mode.


function validChunk(stream, state, chunk, cb) {
  var er;

  if (chunk === null) {
    er = new ERR_STREAM_NULL_VALUES();
  } else if (typeof chunk !== 'string' && !state.objectMode) {
    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer'], chunk);
  }

  if (er) {
    errorOrDestroy(stream, er);
    process.nextTick(cb, er);
    return false;
  }

  return true;
}

Writable.prototype.write = function (chunk, encoding, cb) {
  var state = this._writableState;
  var ret = false;

  var isBuf = !state.objectMode && _isUint8Array(chunk);

  if (isBuf && !Buffer.isBuffer(chunk)) {
    chunk = _uint8ArrayToBuffer(chunk);
  }

  if (typeof encoding === 'function') {
    cb = encoding;
    encoding = null;
  }

  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;
  if (typeof cb !== 'function') cb = nop;
  if (state.ending) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {
    state.pendingcb++;
    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);
  }
  return ret;
};

Writable.prototype.cork = function () {
  this._writableState.corked++;
};

Writable.prototype.uncork = function () {
  var state = this._writableState;

  if (state.corked) {
    state.corked--;
    if (!state.writing && !state.corked && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);
  }
};

Writable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {
  // node::ParseEncoding() requires lower case.
  if (typeof encoding === 'string') encoding = encoding.toLowerCase();
  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new ERR_UNKNOWN_ENCODING(encoding);
  this._writableState.defaultEncoding = encoding;
  return this;
};

Object.defineProperty(Writable.prototype, 'writableBuffer', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._writableState && this._writableState.getBuffer();
  }
});

function decodeChunk(state, chunk, encoding) {
  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {
    chunk = Buffer.from(chunk, encoding);
  }

  return chunk;
}

Object.defineProperty(Writable.prototype, 'writableHighWaterMark', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._writableState.highWaterMark;
  }
}); // if we're already writing something, then just put this
// in the queue, and wait our turn.  Otherwise, call _write
// If we return false, then we need a drain event, so set that flag.

function writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {
  if (!isBuf) {
    var newChunk = decodeChunk(state, chunk, encoding);

    if (chunk !== newChunk) {
      isBuf = true;
      encoding = 'buffer';
      chunk = newChunk;
    }
  }

  var len = state.objectMode ? 1 : chunk.length;
  state.length += len;
  var ret = state.length < state.highWaterMark; // we must ensure that previous needDrain will not be reset to false.

  if (!ret) state.needDrain = true;

  if (state.writing || state.corked) {
    var last = state.lastBufferedRequest;
    state.lastBufferedRequest = {
      chunk: chunk,
      encoding: encoding,
      isBuf: isBuf,
      callback: cb,
      next: null
    };

    if (last) {
      last.next = state.lastBufferedRequest;
    } else {
      state.bufferedRequest = state.lastBufferedRequest;
    }

    state.bufferedRequestCount += 1;
  } else {
    doWrite(stream, state, false, len, chunk, encoding, cb);
  }

  return ret;
}

function doWrite(stream, state, writev, len, chunk, encoding, cb) {
  state.writelen = len;
  state.writecb = cb;
  state.writing = true;
  state.sync = true;
  if (state.destroyed) state.onwrite(new ERR_STREAM_DESTROYED('write'));else if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);
  state.sync = false;
}

function onwriteError(stream, state, sync, er, cb) {
  --state.pendingcb;

  if (sync) {
    // defer the callback if we are being called synchronously
    // to avoid piling up things on the stack
    process.nextTick(cb, er); // this can emit finish, and it will always happen
    // after error

    process.nextTick(finishMaybe, stream, state);
    stream._writableState.errorEmitted = true;
    errorOrDestroy(stream, er);
  } else {
    // the caller expect this to happen before if
    // it is async
    cb(er);
    stream._writableState.errorEmitted = true;
    errorOrDestroy(stream, er); // this can emit finish, but finish must
    // always follow error

    finishMaybe(stream, state);
  }
}

function onwriteStateUpdate(state) {
  state.writing = false;
  state.writecb = null;
  state.length -= state.writelen;
  state.writelen = 0;
}

function onwrite(stream, er) {
  var state = stream._writableState;
  var sync = state.sync;
  var cb = state.writecb;
  if (typeof cb !== 'function') throw new ERR_MULTIPLE_CALLBACK();
  onwriteStateUpdate(state);
  if (er) onwriteError(stream, state, sync, er, cb);else {
    // Check if we're actually ready to finish, but don't emit yet
    var finished = needFinish(state) || stream.destroyed;

    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {
      clearBuffer(stream, state);
    }

    if (sync) {
      process.nextTick(afterWrite, stream, state, finished, cb);
    } else {
      afterWrite(stream, state, finished, cb);
    }
  }
}

function afterWrite(stream, state, finished, cb) {
  if (!finished) onwriteDrain(stream, state);
  state.pendingcb--;
  cb();
  finishMaybe(stream, state);
} // Must force callback to be called on nextTick, so that we don't
// emit 'drain' before the write() consumer gets the 'false' return
// value, and has a chance to attach a 'drain' listener.


function onwriteDrain(stream, state) {
  if (state.length === 0 && state.needDrain) {
    state.needDrain = false;
    stream.emit('drain');
  }
} // if there's something in the buffer waiting, then process it


function clearBuffer(stream, state) {
  state.bufferProcessing = true;
  var entry = state.bufferedRequest;

  if (stream._writev && entry && entry.next) {
    // Fast case, write everything using _writev()
    var l = state.bufferedRequestCount;
    var buffer = new Array(l);
    var holder = state.corkedRequestsFree;
    holder.entry = entry;
    var count = 0;
    var allBuffers = true;

    while (entry) {
      buffer[count] = entry;
      if (!entry.isBuf) allBuffers = false;
      entry = entry.next;
      count += 1;
    }

    buffer.allBuffers = allBuffers;
    doWrite(stream, state, true, state.length, buffer, '', holder.finish); // doWrite is almost always async, defer these to save a bit of time
    // as the hot path ends with doWrite

    state.pendingcb++;
    state.lastBufferedRequest = null;

    if (holder.next) {
      state.corkedRequestsFree = holder.next;
      holder.next = null;
    } else {
      state.corkedRequestsFree = new CorkedRequest(state);
    }

    state.bufferedRequestCount = 0;
  } else {
    // Slow case, write chunks one-by-one
    while (entry) {
      var chunk = entry.chunk;
      var encoding = entry.encoding;
      var cb = entry.callback;
      var len = state.objectMode ? 1 : chunk.length;
      doWrite(stream, state, false, len, chunk, encoding, cb);
      entry = entry.next;
      state.bufferedRequestCount--; // if we didn't call the onwrite immediately, then
      // it means that we need to wait until it does.
      // also, that means that the chunk and cb are currently
      // being processed, so move the buffer counter past them.

      if (state.writing) {
        break;
      }
    }

    if (entry === null) state.lastBufferedRequest = null;
  }

  state.bufferedRequest = entry;
  state.bufferProcessing = false;
}

Writable.prototype._write = function (chunk, encoding, cb) {
  cb(new ERR_METHOD_NOT_IMPLEMENTED('_write()'));
};

Writable.prototype._writev = null;

Writable.prototype.end = function (chunk, encoding, cb) {
  var state = this._writableState;

  if (typeof chunk === 'function') {
    cb = chunk;
    chunk = null;
    encoding = null;
  } else if (typeof encoding === 'function') {
    cb = encoding;
    encoding = null;
  }

  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding); // .end() fully uncorks

  if (state.corked) {
    state.corked = 1;
    this.uncork();
  } // ignore unnecessary end() calls.


  if (!state.ending) endWritable(this, state, cb);
  return this;
};

Object.defineProperty(Writable.prototype, 'writableLength', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._writableState.length;
  }
});

function needFinish(state) {
  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;
}

function callFinal(stream, state) {
  stream._final(function (err) {
    state.pendingcb--;

    if (err) {
      errorOrDestroy(stream, err);
    }

    state.prefinished = true;
    stream.emit('prefinish');
    finishMaybe(stream, state);
  });
}

function prefinish(stream, state) {
  if (!state.prefinished && !state.finalCalled) {
    if (typeof stream._final === 'function' && !state.destroyed) {
      state.pendingcb++;
      state.finalCalled = true;
      process.nextTick(callFinal, stream, state);
    } else {
      state.prefinished = true;
      stream.emit('prefinish');
    }
  }
}

function finishMaybe(stream, state) {
  var need = needFinish(state);

  if (need) {
    prefinish(stream, state);

    if (state.pendingcb === 0) {
      state.finished = true;
      stream.emit('finish');

      if (state.autoDestroy) {
        // In case of duplex streams we need a way to detect
        // if the readable side is ready for autoDestroy as well
        var rState = stream._readableState;

        if (!rState || rState.autoDestroy && rState.endEmitted) {
          stream.destroy();
        }
      }
    }
  }

  return need;
}

function endWritable(stream, state, cb) {
  state.ending = true;
  finishMaybe(stream, state);

  if (cb) {
    if (state.finished) process.nextTick(cb);else stream.once('finish', cb);
  }

  state.ended = true;
  stream.writable = false;
}

function onCorkedFinish(corkReq, state, err) {
  var entry = corkReq.entry;
  corkReq.entry = null;

  while (entry) {
    var cb = entry.callback;
    state.pendingcb--;
    cb(err);
    entry = entry.next;
  } // reuse the free corkReq.


  state.corkedRequestsFree.next = corkReq;
}

Object.defineProperty(Writable.prototype, 'destroyed', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    if (this._writableState === undefined) {
      return false;
    }

    return this._writableState.destroyed;
  },
  set: function set(value) {
    // we ignore the value if the stream
    // has not been initialized yet
    if (!this._writableState) {
      return;
    } // backward compatibility, the user is explicitly
    // managing destroyed


    this._writableState.destroyed = value;
  }
});
Writable.prototype.destroy = destroyImpl.destroy;
Writable.prototype._undestroy = destroyImpl.undestroy;

Writable.prototype._destroy = function (err, cb) {
  cb(err);
};

/***/ }),

/***/ "./node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/async_iterator.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/async_iterator.js ***!
  \****************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var _Object$setPrototypeO;

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var finished = __webpack_require__(/*! ./end-of-stream */ "./node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/end-of-stream.js");

var kLastResolve = Symbol('lastResolve');
var kLastReject = Symbol('lastReject');
var kError = Symbol('error');
var kEnded = Symbol('ended');
var kLastPromise = Symbol('lastPromise');
var kHandlePromise = Symbol('handlePromise');
var kStream = Symbol('stream');

function createIterResult(value, done) {
  return {
    value: value,
    done: done
  };
}

function readAndResolve(iter) {
  var resolve = iter[kLastResolve];

  if (resolve !== null) {
    var data = iter[kStream].read(); // we defer if data is null
    // we can be expecting either 'end' or
    // 'error'

    if (data !== null) {
      iter[kLastPromise] = null;
      iter[kLastResolve] = null;
      iter[kLastReject] = null;
      resolve(createIterResult(data, false));
    }
  }
}

function onReadable(iter) {
  // we wait for the next tick, because it might
  // emit an error with process.nextTick
  process.nextTick(readAndResolve, iter);
}

function wrapForNext(lastPromise, iter) {
  return function (resolve, reject) {
    lastPromise.then(function () {
      if (iter[kEnded]) {
        resolve(createIterResult(undefined, true));
        return;
      }

      iter[kHandlePromise](resolve, reject);
    }, reject);
  };
}

var AsyncIteratorPrototype = Object.getPrototypeOf(function () {});
var ReadableStreamAsyncIteratorPrototype = Object.setPrototypeOf((_Object$setPrototypeO = {
  get stream() {
    return this[kStream];
  },

  next: function next() {
    var _this = this;

    // if we have detected an error in the meanwhile
    // reject straight away
    var error = this[kError];

    if (error !== null) {
      return Promise.reject(error);
    }

    if (this[kEnded]) {
      return Promise.resolve(createIterResult(undefined, true));
    }

    if (this[kStream].destroyed) {
      // We need to defer via nextTick because if .destroy(err) is
      // called, the error will be emitted via nextTick, and
      // we cannot guarantee that there is no error lingering around
      // waiting to be emitted.
      return new Promise(function (resolve, reject) {
        process.nextTick(function () {
          if (_this[kError]) {
            reject(_this[kError]);
          } else {
            resolve(createIterResult(undefined, true));
          }
        });
      });
    } // if we have multiple next() calls
    // we will wait for the previous Promise to finish
    // this logic is optimized to support for await loops,
    // where next() is only called once at a time


    var lastPromise = this[kLastPromise];
    var promise;

    if (lastPromise) {
      promise = new Promise(wrapForNext(lastPromise, this));
    } else {
      // fast path needed to support multiple this.push()
      // without triggering the next() queue
      var data = this[kStream].read();

      if (data !== null) {
        return Promise.resolve(createIterResult(data, false));
      }

      promise = new Promise(this[kHandlePromise]);
    }

    this[kLastPromise] = promise;
    return promise;
  }
}, _defineProperty(_Object$setPrototypeO, Symbol.asyncIterator, function () {
  return this;
}), _defineProperty(_Object$setPrototypeO, "return", function _return() {
  var _this2 = this;

  // destroy(err, cb) is a private API
  // we can guarantee we have that here, because we control the
  // Readable class this is attached to
  return new Promise(function (resolve, reject) {
    _this2[kStream].destroy(null, function (err) {
      if (err) {
        reject(err);
        return;
      }

      resolve(createIterResult(undefined, true));
    });
  });
}), _Object$setPrototypeO), AsyncIteratorPrototype);

var createReadableStreamAsyncIterator = function createReadableStreamAsyncIterator(stream) {
  var _Object$create;

  var iterator = Object.create(ReadableStreamAsyncIteratorPrototype, (_Object$create = {}, _defineProperty(_Object$create, kStream, {
    value: stream,
    writable: true
  }), _defineProperty(_Object$create, kLastResolve, {
    value: null,
    writable: true
  }), _defineProperty(_Object$create, kLastReject, {
    value: null,
    writable: true
  }), _defineProperty(_Object$create, kError, {
    value: null,
    writable: true
  }), _defineProperty(_Object$create, kEnded, {
    value: stream._readableState.endEmitted,
    writable: true
  }), _defineProperty(_Object$create, kHandlePromise, {
    value: function value(resolve, reject) {
      var data = iterator[kStream].read();

      if (data) {
        iterator[kLastPromise] = null;
        iterator[kLastResolve] = null;
        iterator[kLastReject] = null;
        resolve(createIterResult(data, false));
      } else {
        iterator[kLastResolve] = resolve;
        iterator[kLastReject] = reject;
      }
    },
    writable: true
  }), _Object$create));
  iterator[kLastPromise] = null;
  finished(stream, function (err) {
    if (err && err.code !== 'ERR_STREAM_PREMATURE_CLOSE') {
      var reject = iterator[kLastReject]; // reject if we are waiting for data in the Promise
      // returned by next() and store the error

      if (reject !== null) {
        iterator[kLastPromise] = null;
        iterator[kLastResolve] = null;
        iterator[kLastReject] = null;
        reject(err);
      }

      iterator[kError] = err;
      return;
    }

    var resolve = iterator[kLastResolve];

    if (resolve !== null) {
      iterator[kLastPromise] = null;
      iterator[kLastResolve] = null;
      iterator[kLastReject] = null;
      resolve(createIterResult(undefined, true));
    }

    iterator[kEnded] = true;
  });
  stream.on('readable', onReadable.bind(null, iterator));
  return iterator;
};

module.exports = createReadableStreamAsyncIterator;

/***/ }),

/***/ "./node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/buffer_list.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/buffer_list.js ***!
  \*************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var _require = __webpack_require__(/*! buffer */ "./node_modules/buffer/index.js"),
    Buffer = _require.Buffer;

var _require2 = __webpack_require__(/*! util */ "?802b"),
    inspect = _require2.inspect;

var custom = inspect && inspect.custom || 'inspect';

function copyBuffer(src, target, offset) {
  Buffer.prototype.copy.call(src, target, offset);
}

module.exports =
/*#__PURE__*/
function () {
  function BufferList() {
    _classCallCheck(this, BufferList);

    this.head = null;
    this.tail = null;
    this.length = 0;
  }

  _createClass(BufferList, [{
    key: "push",
    value: function push(v) {
      var entry = {
        data: v,
        next: null
      };
      if (this.length > 0) this.tail.next = entry;else this.head = entry;
      this.tail = entry;
      ++this.length;
    }
  }, {
    key: "unshift",
    value: function unshift(v) {
      var entry = {
        data: v,
        next: this.head
      };
      if (this.length === 0) this.tail = entry;
      this.head = entry;
      ++this.length;
    }
  }, {
    key: "shift",
    value: function shift() {
      if (this.length === 0) return;
      var ret = this.head.data;
      if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;
      --this.length;
      return ret;
    }
  }, {
    key: "clear",
    value: function clear() {
      this.head = this.tail = null;
      this.length = 0;
    }
  }, {
    key: "join",
    value: function join(s) {
      if (this.length === 0) return '';
      var p = this.head;
      var ret = '' + p.data;

      while (p = p.next) {
        ret += s + p.data;
      }

      return ret;
    }
  }, {
    key: "concat",
    value: function concat(n) {
      if (this.length === 0) return Buffer.alloc(0);
      var ret = Buffer.allocUnsafe(n >>> 0);
      var p = this.head;
      var i = 0;

      while (p) {
        copyBuffer(p.data, ret, i);
        i += p.data.length;
        p = p.next;
      }

      return ret;
    } // Consumes a specified amount of bytes or characters from the buffered data.

  }, {
    key: "consume",
    value: function consume(n, hasStrings) {
      var ret;

      if (n < this.head.data.length) {
        // `slice` is the same for buffers and strings.
        ret = this.head.data.slice(0, n);
        this.head.data = this.head.data.slice(n);
      } else if (n === this.head.data.length) {
        // First chunk is a perfect match.
        ret = this.shift();
      } else {
        // Result spans more than one buffer.
        ret = hasStrings ? this._getString(n) : this._getBuffer(n);
      }

      return ret;
    }
  }, {
    key: "first",
    value: function first() {
      return this.head.data;
    } // Consumes a specified amount of characters from the buffered data.

  }, {
    key: "_getString",
    value: function _getString(n) {
      var p = this.head;
      var c = 1;
      var ret = p.data;
      n -= ret.length;

      while (p = p.next) {
        var str = p.data;
        var nb = n > str.length ? str.length : n;
        if (nb === str.length) ret += str;else ret += str.slice(0, n);
        n -= nb;

        if (n === 0) {
          if (nb === str.length) {
            ++c;
            if (p.next) this.head = p.next;else this.head = this.tail = null;
          } else {
            this.head = p;
            p.data = str.slice(nb);
          }

          break;
        }

        ++c;
      }

      this.length -= c;
      return ret;
    } // Consumes a specified amount of bytes from the buffered data.

  }, {
    key: "_getBuffer",
    value: function _getBuffer(n) {
      var ret = Buffer.allocUnsafe(n);
      var p = this.head;
      var c = 1;
      p.data.copy(ret);
      n -= p.data.length;

      while (p = p.next) {
        var buf = p.data;
        var nb = n > buf.length ? buf.length : n;
        buf.copy(ret, ret.length - n, 0, nb);
        n -= nb;

        if (n === 0) {
          if (nb === buf.length) {
            ++c;
            if (p.next) this.head = p.next;else this.head = this.tail = null;
          } else {
            this.head = p;
            p.data = buf.slice(nb);
          }

          break;
        }

        ++c;
      }

      this.length -= c;
      return ret;
    } // Make sure the linked list only shows the minimal necessary information.

  }, {
    key: custom,
    value: function value(_, options) {
      return inspect(this, _objectSpread({}, options, {
        // Only inspect one level.
        depth: 0,
        // It should not recurse.
        customInspect: false
      }));
    }
  }]);

  return BufferList;
}();

/***/ }),

/***/ "./node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/destroy.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/destroy.js ***!
  \*********************************************************************************************/
/***/ ((module) => {

"use strict";
 // undocumented cb() API, needed for core, not for public API

function destroy(err, cb) {
  var _this = this;

  var readableDestroyed = this._readableState && this._readableState.destroyed;
  var writableDestroyed = this._writableState && this._writableState.destroyed;

  if (readableDestroyed || writableDestroyed) {
    if (cb) {
      cb(err);
    } else if (err) {
      if (!this._writableState) {
        process.nextTick(emitErrorNT, this, err);
      } else if (!this._writableState.errorEmitted) {
        this._writableState.errorEmitted = true;
        process.nextTick(emitErrorNT, this, err);
      }
    }

    return this;
  } // we set destroyed to true before firing error callbacks in order
  // to make it re-entrance safe in case destroy() is called within callbacks


  if (this._readableState) {
    this._readableState.destroyed = true;
  } // if this is a duplex stream mark the writable part as destroyed as well


  if (this._writableState) {
    this._writableState.destroyed = true;
  }

  this._destroy(err || null, function (err) {
    if (!cb && err) {
      if (!_this._writableState) {
        process.nextTick(emitErrorAndCloseNT, _this, err);
      } else if (!_this._writableState.errorEmitted) {
        _this._writableState.errorEmitted = true;
        process.nextTick(emitErrorAndCloseNT, _this, err);
      } else {
        process.nextTick(emitCloseNT, _this);
      }
    } else if (cb) {
      process.nextTick(emitCloseNT, _this);
      cb(err);
    } else {
      process.nextTick(emitCloseNT, _this);
    }
  });

  return this;
}

function emitErrorAndCloseNT(self, err) {
  emitErrorNT(self, err);
  emitCloseNT(self);
}

function emitCloseNT(self) {
  if (self._writableState && !self._writableState.emitClose) return;
  if (self._readableState && !self._readableState.emitClose) return;
  self.emit('close');
}

function undestroy() {
  if (this._readableState) {
    this._readableState.destroyed = false;
    this._readableState.reading = false;
    this._readableState.ended = false;
    this._readableState.endEmitted = false;
  }

  if (this._writableState) {
    this._writableState.destroyed = false;
    this._writableState.ended = false;
    this._writableState.ending = false;
    this._writableState.finalCalled = false;
    this._writableState.prefinished = false;
    this._writableState.finished = false;
    this._writableState.errorEmitted = false;
  }
}

function emitErrorNT(self, err) {
  self.emit('error', err);
}

function errorOrDestroy(stream, err) {
  // We have tests that rely on errors being emitted
  // in the same tick, so changing this is semver major.
  // For now when you opt-in to autoDestroy we allow
  // the error to be emitted nextTick. In a future
  // semver major update we should change the default to this.
  var rState = stream._readableState;
  var wState = stream._writableState;
  if (rState && rState.autoDestroy || wState && wState.autoDestroy) stream.destroy(err);else stream.emit('error', err);
}

module.exports = {
  destroy: destroy,
  undestroy: undestroy,
  errorOrDestroy: errorOrDestroy
};

/***/ }),

/***/ "./node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/end-of-stream.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/end-of-stream.js ***!
  \***************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
// Ported from https://github.com/mafintosh/end-of-stream with
// permission from the author, Mathias Buus (@mafintosh).


var ERR_STREAM_PREMATURE_CLOSE = __webpack_require__(/*! ../../../errors */ "./node_modules/hash-base/node_modules/readable-stream/errors-browser.js").codes.ERR_STREAM_PREMATURE_CLOSE;

function once(callback) {
  var called = false;
  return function () {
    if (called) return;
    called = true;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    callback.apply(this, args);
  };
}

function noop() {}

function isRequest(stream) {
  return stream.setHeader && typeof stream.abort === 'function';
}

function eos(stream, opts, callback) {
  if (typeof opts === 'function') return eos(stream, null, opts);
  if (!opts) opts = {};
  callback = once(callback || noop);
  var readable = opts.readable || opts.readable !== false && stream.readable;
  var writable = opts.writable || opts.writable !== false && stream.writable;

  var onlegacyfinish = function onlegacyfinish() {
    if (!stream.writable) onfinish();
  };

  var writableEnded = stream._writableState && stream._writableState.finished;

  var onfinish = function onfinish() {
    writable = false;
    writableEnded = true;
    if (!readable) callback.call(stream);
  };

  var readableEnded = stream._readableState && stream._readableState.endEmitted;

  var onend = function onend() {
    readable = false;
    readableEnded = true;
    if (!writable) callback.call(stream);
  };

  var onerror = function onerror(err) {
    callback.call(stream, err);
  };

  var onclose = function onclose() {
    var err;

    if (readable && !readableEnded) {
      if (!stream._readableState || !stream._readableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();
      return callback.call(stream, err);
    }

    if (writable && !writableEnded) {
      if (!stream._writableState || !stream._writableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();
      return callback.call(stream, err);
    }
  };

  var onrequest = function onrequest() {
    stream.req.on('finish', onfinish);
  };

  if (isRequest(stream)) {
    stream.on('complete', onfinish);
    stream.on('abort', onclose);
    if (stream.req) onrequest();else stream.on('request', onrequest);
  } else if (writable && !stream._writableState) {
    // legacy streams
    stream.on('end', onlegacyfinish);
    stream.on('close', onlegacyfinish);
  }

  stream.on('end', onend);
  stream.on('finish', onfinish);
  if (opts.error !== false) stream.on('error', onerror);
  stream.on('close', onclose);
  return function () {
    stream.removeListener('complete', onfinish);
    stream.removeListener('abort', onclose);
    stream.removeListener('request', onrequest);
    if (stream.req) stream.req.removeListener('finish', onfinish);
    stream.removeListener('end', onlegacyfinish);
    stream.removeListener('close', onlegacyfinish);
    stream.removeListener('finish', onfinish);
    stream.removeListener('end', onend);
    stream.removeListener('error', onerror);
    stream.removeListener('close', onclose);
  };
}

module.exports = eos;

/***/ }),

/***/ "./node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/from-browser.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/from-browser.js ***!
  \**************************************************************************************************/
/***/ ((module) => {

module.exports = function () {
  throw new Error('Readable.from is not available in the browser')
};


/***/ }),

/***/ "./node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/pipeline.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/pipeline.js ***!
  \**********************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
// Ported from https://github.com/mafintosh/pump with
// permission from the author, Mathias Buus (@mafintosh).


var eos;

function once(callback) {
  var called = false;
  return function () {
    if (called) return;
    called = true;
    callback.apply(void 0, arguments);
  };
}

var _require$codes = __webpack_require__(/*! ../../../errors */ "./node_modules/hash-base/node_modules/readable-stream/errors-browser.js").codes,
    ERR_MISSING_ARGS = _require$codes.ERR_MISSING_ARGS,
    ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED;

function noop(err) {
  // Rethrow the error if it exists to avoid swallowing it
  if (err) throw err;
}

function isRequest(stream) {
  return stream.setHeader && typeof stream.abort === 'function';
}

function destroyer(stream, reading, writing, callback) {
  callback = once(callback);
  var closed = false;
  stream.on('close', function () {
    closed = true;
  });
  if (eos === undefined) eos = __webpack_require__(/*! ./end-of-stream */ "./node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/end-of-stream.js");
  eos(stream, {
    readable: reading,
    writable: writing
  }, function (err) {
    if (err) return callback(err);
    closed = true;
    callback();
  });
  var destroyed = false;
  return function (err) {
    if (closed) return;
    if (destroyed) return;
    destroyed = true; // request.destroy just do .end - .abort is what we want

    if (isRequest(stream)) return stream.abort();
    if (typeof stream.destroy === 'function') return stream.destroy();
    callback(err || new ERR_STREAM_DESTROYED('pipe'));
  };
}

function call(fn) {
  fn();
}

function pipe(from, to) {
  return from.pipe(to);
}

function popCallback(streams) {
  if (!streams.length) return noop;
  if (typeof streams[streams.length - 1] !== 'function') return noop;
  return streams.pop();
}

function pipeline() {
  for (var _len = arguments.length, streams = new Array(_len), _key = 0; _key < _len; _key++) {
    streams[_key] = arguments[_key];
  }

  var callback = popCallback(streams);
  if (Array.isArray(streams[0])) streams = streams[0];

  if (streams.length < 2) {
    throw new ERR_MISSING_ARGS('streams');
  }

  var error;
  var destroys = streams.map(function (stream, i) {
    var reading = i < streams.length - 1;
    var writing = i > 0;
    return destroyer(stream, reading, writing, function (err) {
      if (!error) error = err;
      if (err) destroys.forEach(call);
      if (reading) return;
      destroys.forEach(call);
      callback(error);
    });
  });
  return streams.reduce(pipe);
}

module.exports = pipeline;

/***/ }),

/***/ "./node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/state.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/state.js ***!
  \*******************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var ERR_INVALID_OPT_VALUE = __webpack_require__(/*! ../../../errors */ "./node_modules/hash-base/node_modules/readable-stream/errors-browser.js").codes.ERR_INVALID_OPT_VALUE;

function highWaterMarkFrom(options, isDuplex, duplexKey) {
  return options.highWaterMark != null ? options.highWaterMark : isDuplex ? options[duplexKey] : null;
}

function getHighWaterMark(state, options, duplexKey, isDuplex) {
  var hwm = highWaterMarkFrom(options, isDuplex, duplexKey);

  if (hwm != null) {
    if (!(isFinite(hwm) && Math.floor(hwm) === hwm) || hwm < 0) {
      var name = isDuplex ? duplexKey : 'highWaterMark';
      throw new ERR_INVALID_OPT_VALUE(name, hwm);
    }

    return Math.floor(hwm);
  } // Default value


  return state.objectMode ? 16 : 16 * 1024;
}

module.exports = {
  getHighWaterMark: getHighWaterMark
};

/***/ }),

/***/ "./node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/stream-browser.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/stream-browser.js ***!
  \****************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports = __webpack_require__(/*! events */ "./node_modules/events/events.js").EventEmitter;


/***/ }),

/***/ "./node_modules/hash-base/node_modules/readable-stream/readable-browser.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/hash-base/node_modules/readable-stream/readable-browser.js ***!
  \*********************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

exports = module.exports = __webpack_require__(/*! ./lib/_stream_readable.js */ "./node_modules/hash-base/node_modules/readable-stream/lib/_stream_readable.js");
exports.Stream = exports;
exports.Readable = exports;
exports.Writable = __webpack_require__(/*! ./lib/_stream_writable.js */ "./node_modules/hash-base/node_modules/readable-stream/lib/_stream_writable.js");
exports.Duplex = __webpack_require__(/*! ./lib/_stream_duplex.js */ "./node_modules/hash-base/node_modules/readable-stream/lib/_stream_duplex.js");
exports.Transform = __webpack_require__(/*! ./lib/_stream_transform.js */ "./node_modules/hash-base/node_modules/readable-stream/lib/_stream_transform.js");
exports.PassThrough = __webpack_require__(/*! ./lib/_stream_passthrough.js */ "./node_modules/hash-base/node_modules/readable-stream/lib/_stream_passthrough.js");
exports.finished = __webpack_require__(/*! ./lib/internal/streams/end-of-stream.js */ "./node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/end-of-stream.js");
exports.pipeline = __webpack_require__(/*! ./lib/internal/streams/pipeline.js */ "./node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/pipeline.js");


/***/ }),

/***/ "./node_modules/hash-base/node_modules/string_decoder/lib/string_decoder.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/hash-base/node_modules/string_decoder/lib/string_decoder.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.



/*<replacement>*/

var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer;
/*</replacement>*/

var isEncoding = Buffer.isEncoding || function (encoding) {
  encoding = '' + encoding;
  switch (encoding && encoding.toLowerCase()) {
    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':
      return true;
    default:
      return false;
  }
};

function _normalizeEncoding(enc) {
  if (!enc) return 'utf8';
  var retried;
  while (true) {
    switch (enc) {
      case 'utf8':
      case 'utf-8':
        return 'utf8';
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return 'utf16le';
      case 'latin1':
      case 'binary':
        return 'latin1';
      case 'base64':
      case 'ascii':
      case 'hex':
        return enc;
      default:
        if (retried) return; // undefined
        enc = ('' + enc).toLowerCase();
        retried = true;
    }
  }
};

// Do not cache `Buffer.isEncoding` when checking encoding names as some
// modules monkey-patch it to support additional encodings
function normalizeEncoding(enc) {
  var nenc = _normalizeEncoding(enc);
  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);
  return nenc || enc;
}

// StringDecoder provides an interface for efficiently splitting a series of
// buffers into a series of JS strings without breaking apart multi-byte
// characters.
exports.StringDecoder = StringDecoder;
function StringDecoder(encoding) {
  this.encoding = normalizeEncoding(encoding);
  var nb;
  switch (this.encoding) {
    case 'utf16le':
      this.text = utf16Text;
      this.end = utf16End;
      nb = 4;
      break;
    case 'utf8':
      this.fillLast = utf8FillLast;
      nb = 4;
      break;
    case 'base64':
      this.text = base64Text;
      this.end = base64End;
      nb = 3;
      break;
    default:
      this.write = simpleWrite;
      this.end = simpleEnd;
      return;
  }
  this.lastNeed = 0;
  this.lastTotal = 0;
  this.lastChar = Buffer.allocUnsafe(nb);
}

StringDecoder.prototype.write = function (buf) {
  if (buf.length === 0) return '';
  var r;
  var i;
  if (this.lastNeed) {
    r = this.fillLast(buf);
    if (r === undefined) return '';
    i = this.lastNeed;
    this.lastNeed = 0;
  } else {
    i = 0;
  }
  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);
  return r || '';
};

StringDecoder.prototype.end = utf8End;

// Returns only complete characters in a Buffer
StringDecoder.prototype.text = utf8Text;

// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer
StringDecoder.prototype.fillLast = function (buf) {
  if (this.lastNeed <= buf.length) {
    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);
    return this.lastChar.toString(this.encoding, 0, this.lastTotal);
  }
  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);
  this.lastNeed -= buf.length;
};

// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a
// continuation byte. If an invalid byte is detected, -2 is returned.
function utf8CheckByte(byte) {
  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;
  return byte >> 6 === 0x02 ? -1 : -2;
}

// Checks at most 3 bytes at the end of a Buffer in order to detect an
// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)
// needed to complete the UTF-8 character (if applicable) are returned.
function utf8CheckIncomplete(self, buf, i) {
  var j = buf.length - 1;
  if (j < i) return 0;
  var nb = utf8CheckByte(buf[j]);
  if (nb >= 0) {
    if (nb > 0) self.lastNeed = nb - 1;
    return nb;
  }
  if (--j < i || nb === -2) return 0;
  nb = utf8CheckByte(buf[j]);
  if (nb >= 0) {
    if (nb > 0) self.lastNeed = nb - 2;
    return nb;
  }
  if (--j < i || nb === -2) return 0;
  nb = utf8CheckByte(buf[j]);
  if (nb >= 0) {
    if (nb > 0) {
      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;
    }
    return nb;
  }
  return 0;
}

// Validates as many continuation bytes for a multi-byte UTF-8 character as
// needed or are available. If we see a non-continuation byte where we expect
// one, we "replace" the validated continuation bytes we've seen so far with
// a single UTF-8 replacement character ('\ufffd'), to match v8's UTF-8 decoding
// behavior. The continuation byte check is included three times in the case
// where all of the continuation bytes for a character exist in the same buffer.
// It is also done this way as a slight performance increase instead of using a
// loop.
function utf8CheckExtraBytes(self, buf, p) {
  if ((buf[0] & 0xC0) !== 0x80) {
    self.lastNeed = 0;
    return '\ufffd';
  }
  if (self.lastNeed > 1 && buf.length > 1) {
    if ((buf[1] & 0xC0) !== 0x80) {
      self.lastNeed = 1;
      return '\ufffd';
    }
    if (self.lastNeed > 2 && buf.length > 2) {
      if ((buf[2] & 0xC0) !== 0x80) {
        self.lastNeed = 2;
        return '\ufffd';
      }
    }
  }
}

// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.
function utf8FillLast(buf) {
  var p = this.lastTotal - this.lastNeed;
  var r = utf8CheckExtraBytes(this, buf, p);
  if (r !== undefined) return r;
  if (this.lastNeed <= buf.length) {
    buf.copy(this.lastChar, p, 0, this.lastNeed);
    return this.lastChar.toString(this.encoding, 0, this.lastTotal);
  }
  buf.copy(this.lastChar, p, 0, buf.length);
  this.lastNeed -= buf.length;
}

// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a
// partial character, the character's bytes are buffered until the required
// number of bytes are available.
function utf8Text(buf, i) {
  var total = utf8CheckIncomplete(this, buf, i);
  if (!this.lastNeed) return buf.toString('utf8', i);
  this.lastTotal = total;
  var end = buf.length - (total - this.lastNeed);
  buf.copy(this.lastChar, 0, end);
  return buf.toString('utf8', i, end);
}

// For UTF-8, a replacement character is added when ending on a partial
// character.
function utf8End(buf) {
  var r = buf && buf.length ? this.write(buf) : '';
  if (this.lastNeed) return r + '\ufffd';
  return r;
}

// UTF-16LE typically needs two bytes per character, but even if we have an even
// number of bytes available, we need to check if we end on a leading/high
// surrogate. In that case, we need to wait for the next two bytes in order to
// decode the last character properly.
function utf16Text(buf, i) {
  if ((buf.length - i) % 2 === 0) {
    var r = buf.toString('utf16le', i);
    if (r) {
      var c = r.charCodeAt(r.length - 1);
      if (c >= 0xD800 && c <= 0xDBFF) {
        this.lastNeed = 2;
        this.lastTotal = 4;
        this.lastChar[0] = buf[buf.length - 2];
        this.lastChar[1] = buf[buf.length - 1];
        return r.slice(0, -1);
      }
    }
    return r;
  }
  this.lastNeed = 1;
  this.lastTotal = 2;
  this.lastChar[0] = buf[buf.length - 1];
  return buf.toString('utf16le', i, buf.length - 1);
}

// For UTF-16LE we do not explicitly append special replacement characters if we
// end on a partial character, we simply let v8 handle that.
function utf16End(buf) {
  var r = buf && buf.length ? this.write(buf) : '';
  if (this.lastNeed) {
    var end = this.lastTotal - this.lastNeed;
    return r + this.lastChar.toString('utf16le', 0, end);
  }
  return r;
}

function base64Text(buf, i) {
  var n = (buf.length - i) % 3;
  if (n === 0) return buf.toString('base64', i);
  this.lastNeed = 3 - n;
  this.lastTotal = 3;
  if (n === 1) {
    this.lastChar[0] = buf[buf.length - 1];
  } else {
    this.lastChar[0] = buf[buf.length - 2];
    this.lastChar[1] = buf[buf.length - 1];
  }
  return buf.toString('base64', i, buf.length - n);
}

function base64End(buf) {
  var r = buf && buf.length ? this.write(buf) : '';
  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);
  return r;
}

// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)
function simpleWrite(buf) {
  return buf.toString(this.encoding);
}

function simpleEnd(buf) {
  return buf && buf.length ? this.write(buf) : '';
}

/***/ }),

/***/ "./node_modules/hash.js/lib/hash.js":
/*!******************************************!*\
  !*** ./node_modules/hash.js/lib/hash.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

var hash = exports;

hash.utils = __webpack_require__(/*! ./hash/utils */ "./node_modules/hash.js/lib/hash/utils.js");
hash.common = __webpack_require__(/*! ./hash/common */ "./node_modules/hash.js/lib/hash/common.js");
hash.sha = __webpack_require__(/*! ./hash/sha */ "./node_modules/hash.js/lib/hash/sha.js");
hash.ripemd = __webpack_require__(/*! ./hash/ripemd */ "./node_modules/hash.js/lib/hash/ripemd.js");
hash.hmac = __webpack_require__(/*! ./hash/hmac */ "./node_modules/hash.js/lib/hash/hmac.js");

// Proxy hash functions to the main object
hash.sha1 = hash.sha.sha1;
hash.sha256 = hash.sha.sha256;
hash.sha224 = hash.sha.sha224;
hash.sha384 = hash.sha.sha384;
hash.sha512 = hash.sha.sha512;
hash.ripemd160 = hash.ripemd.ripemd160;


/***/ }),

/***/ "./node_modules/hash.js/lib/hash/common.js":
/*!*************************************************!*\
  !*** ./node_modules/hash.js/lib/hash/common.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(/*! ./utils */ "./node_modules/hash.js/lib/hash/utils.js");
var assert = __webpack_require__(/*! minimalistic-assert */ "./node_modules/minimalistic-assert/index.js");

function BlockHash() {
  this.pending = null;
  this.pendingTotal = 0;
  this.blockSize = this.constructor.blockSize;
  this.outSize = this.constructor.outSize;
  this.hmacStrength = this.constructor.hmacStrength;
  this.padLength = this.constructor.padLength / 8;
  this.endian = 'big';

  this._delta8 = this.blockSize / 8;
  this._delta32 = this.blockSize / 32;
}
exports.BlockHash = BlockHash;

BlockHash.prototype.update = function update(msg, enc) {
  // Convert message to array, pad it, and join into 32bit blocks
  msg = utils.toArray(msg, enc);
  if (!this.pending)
    this.pending = msg;
  else
    this.pending = this.pending.concat(msg);
  this.pendingTotal += msg.length;

  // Enough data, try updating
  if (this.pending.length >= this._delta8) {
    msg = this.pending;

    // Process pending data in blocks
    var r = msg.length % this._delta8;
    this.pending = msg.slice(msg.length - r, msg.length);
    if (this.pending.length === 0)
      this.pending = null;

    msg = utils.join32(msg, 0, msg.length - r, this.endian);
    for (var i = 0; i < msg.length; i += this._delta32)
      this._update(msg, i, i + this._delta32);
  }

  return this;
};

BlockHash.prototype.digest = function digest(enc) {
  this.update(this._pad());
  assert(this.pending === null);

  return this._digest(enc);
};

BlockHash.prototype._pad = function pad() {
  var len = this.pendingTotal;
  var bytes = this._delta8;
  var k = bytes - ((len + this.padLength) % bytes);
  var res = new Array(k + this.padLength);
  res[0] = 0x80;
  for (var i = 1; i < k; i++)
    res[i] = 0;

  // Append length
  len <<= 3;
  if (this.endian === 'big') {
    for (var t = 8; t < this.padLength; t++)
      res[i++] = 0;

    res[i++] = 0;
    res[i++] = 0;
    res[i++] = 0;
    res[i++] = 0;
    res[i++] = (len >>> 24) & 0xff;
    res[i++] = (len >>> 16) & 0xff;
    res[i++] = (len >>> 8) & 0xff;
    res[i++] = len & 0xff;
  } else {
    res[i++] = len & 0xff;
    res[i++] = (len >>> 8) & 0xff;
    res[i++] = (len >>> 16) & 0xff;
    res[i++] = (len >>> 24) & 0xff;
    res[i++] = 0;
    res[i++] = 0;
    res[i++] = 0;
    res[i++] = 0;

    for (t = 8; t < this.padLength; t++)
      res[i++] = 0;
  }

  return res;
};


/***/ }),

/***/ "./node_modules/hash.js/lib/hash/hmac.js":
/*!***********************************************!*\
  !*** ./node_modules/hash.js/lib/hash/hmac.js ***!
  \***********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(/*! ./utils */ "./node_modules/hash.js/lib/hash/utils.js");
var assert = __webpack_require__(/*! minimalistic-assert */ "./node_modules/minimalistic-assert/index.js");

function Hmac(hash, key, enc) {
  if (!(this instanceof Hmac))
    return new Hmac(hash, key, enc);
  this.Hash = hash;
  this.blockSize = hash.blockSize / 8;
  this.outSize = hash.outSize / 8;
  this.inner = null;
  this.outer = null;

  this._init(utils.toArray(key, enc));
}
module.exports = Hmac;

Hmac.prototype._init = function init(key) {
  // Shorten key, if needed
  if (key.length > this.blockSize)
    key = new this.Hash().update(key).digest();
  assert(key.length <= this.blockSize);

  // Add padding to key
  for (var i = key.length; i < this.blockSize; i++)
    key.push(0);

  for (i = 0; i < key.length; i++)
    key[i] ^= 0x36;
  this.inner = new this.Hash().update(key);

  // 0x36 ^ 0x5c = 0x6a
  for (i = 0; i < key.length; i++)
    key[i] ^= 0x6a;
  this.outer = new this.Hash().update(key);
};

Hmac.prototype.update = function update(msg, enc) {
  this.inner.update(msg, enc);
  return this;
};

Hmac.prototype.digest = function digest(enc) {
  this.outer.update(this.inner.digest());
  return this.outer.digest(enc);
};


/***/ }),

/***/ "./node_modules/hash.js/lib/hash/ripemd.js":
/*!*************************************************!*\
  !*** ./node_modules/hash.js/lib/hash/ripemd.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(/*! ./utils */ "./node_modules/hash.js/lib/hash/utils.js");
var common = __webpack_require__(/*! ./common */ "./node_modules/hash.js/lib/hash/common.js");

var rotl32 = utils.rotl32;
var sum32 = utils.sum32;
var sum32_3 = utils.sum32_3;
var sum32_4 = utils.sum32_4;
var BlockHash = common.BlockHash;

function RIPEMD160() {
  if (!(this instanceof RIPEMD160))
    return new RIPEMD160();

  BlockHash.call(this);

  this.h = [ 0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0 ];
  this.endian = 'little';
}
utils.inherits(RIPEMD160, BlockHash);
exports.ripemd160 = RIPEMD160;

RIPEMD160.blockSize = 512;
RIPEMD160.outSize = 160;
RIPEMD160.hmacStrength = 192;
RIPEMD160.padLength = 64;

RIPEMD160.prototype._update = function update(msg, start) {
  var A = this.h[0];
  var B = this.h[1];
  var C = this.h[2];
  var D = this.h[3];
  var E = this.h[4];
  var Ah = A;
  var Bh = B;
  var Ch = C;
  var Dh = D;
  var Eh = E;
  for (var j = 0; j < 80; j++) {
    var T = sum32(
      rotl32(
        sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)),
        s[j]),
      E);
    A = E;
    E = D;
    D = rotl32(C, 10);
    C = B;
    B = T;
    T = sum32(
      rotl32(
        sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)),
        sh[j]),
      Eh);
    Ah = Eh;
    Eh = Dh;
    Dh = rotl32(Ch, 10);
    Ch = Bh;
    Bh = T;
  }
  T = sum32_3(this.h[1], C, Dh);
  this.h[1] = sum32_3(this.h[2], D, Eh);
  this.h[2] = sum32_3(this.h[3], E, Ah);
  this.h[3] = sum32_3(this.h[4], A, Bh);
  this.h[4] = sum32_3(this.h[0], B, Ch);
  this.h[0] = T;
};

RIPEMD160.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h, 'little');
  else
    return utils.split32(this.h, 'little');
};

function f(j, x, y, z) {
  if (j <= 15)
    return x ^ y ^ z;
  else if (j <= 31)
    return (x & y) | ((~x) & z);
  else if (j <= 47)
    return (x | (~y)) ^ z;
  else if (j <= 63)
    return (x & z) | (y & (~z));
  else
    return x ^ (y | (~z));
}

function K(j) {
  if (j <= 15)
    return 0x00000000;
  else if (j <= 31)
    return 0x5a827999;
  else if (j <= 47)
    return 0x6ed9eba1;
  else if (j <= 63)
    return 0x8f1bbcdc;
  else
    return 0xa953fd4e;
}

function Kh(j) {
  if (j <= 15)
    return 0x50a28be6;
  else if (j <= 31)
    return 0x5c4dd124;
  else if (j <= 47)
    return 0x6d703ef3;
  else if (j <= 63)
    return 0x7a6d76e9;
  else
    return 0x00000000;
}

var r = [
  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,
  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,
  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,
  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,
  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13
];

var rh = [
  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,
  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,
  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,
  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,
  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11
];

var s = [
  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,
  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,
  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,
  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,
  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6
];

var sh = [
  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,
  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,
  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,
  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,
  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11
];


/***/ }),

/***/ "./node_modules/hash.js/lib/hash/sha.js":
/*!**********************************************!*\
  !*** ./node_modules/hash.js/lib/hash/sha.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


exports.sha1 = __webpack_require__(/*! ./sha/1 */ "./node_modules/hash.js/lib/hash/sha/1.js");
exports.sha224 = __webpack_require__(/*! ./sha/224 */ "./node_modules/hash.js/lib/hash/sha/224.js");
exports.sha256 = __webpack_require__(/*! ./sha/256 */ "./node_modules/hash.js/lib/hash/sha/256.js");
exports.sha384 = __webpack_require__(/*! ./sha/384 */ "./node_modules/hash.js/lib/hash/sha/384.js");
exports.sha512 = __webpack_require__(/*! ./sha/512 */ "./node_modules/hash.js/lib/hash/sha/512.js");


/***/ }),

/***/ "./node_modules/hash.js/lib/hash/sha/1.js":
/*!************************************************!*\
  !*** ./node_modules/hash.js/lib/hash/sha/1.js ***!
  \************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(/*! ../utils */ "./node_modules/hash.js/lib/hash/utils.js");
var common = __webpack_require__(/*! ../common */ "./node_modules/hash.js/lib/hash/common.js");
var shaCommon = __webpack_require__(/*! ./common */ "./node_modules/hash.js/lib/hash/sha/common.js");

var rotl32 = utils.rotl32;
var sum32 = utils.sum32;
var sum32_5 = utils.sum32_5;
var ft_1 = shaCommon.ft_1;
var BlockHash = common.BlockHash;

var sha1_K = [
  0x5A827999, 0x6ED9EBA1,
  0x8F1BBCDC, 0xCA62C1D6
];

function SHA1() {
  if (!(this instanceof SHA1))
    return new SHA1();

  BlockHash.call(this);
  this.h = [
    0x67452301, 0xefcdab89, 0x98badcfe,
    0x10325476, 0xc3d2e1f0 ];
  this.W = new Array(80);
}

utils.inherits(SHA1, BlockHash);
module.exports = SHA1;

SHA1.blockSize = 512;
SHA1.outSize = 160;
SHA1.hmacStrength = 80;
SHA1.padLength = 64;

SHA1.prototype._update = function _update(msg, start) {
  var W = this.W;

  for (var i = 0; i < 16; i++)
    W[i] = msg[start + i];

  for(; i < W.length; i++)
    W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);

  var a = this.h[0];
  var b = this.h[1];
  var c = this.h[2];
  var d = this.h[3];
  var e = this.h[4];

  for (i = 0; i < W.length; i++) {
    var s = ~~(i / 20);
    var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);
    e = d;
    d = c;
    c = rotl32(b, 30);
    b = a;
    a = t;
  }

  this.h[0] = sum32(this.h[0], a);
  this.h[1] = sum32(this.h[1], b);
  this.h[2] = sum32(this.h[2], c);
  this.h[3] = sum32(this.h[3], d);
  this.h[4] = sum32(this.h[4], e);
};

SHA1.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h, 'big');
  else
    return utils.split32(this.h, 'big');
};


/***/ }),

/***/ "./node_modules/hash.js/lib/hash/sha/224.js":
/*!**************************************************!*\
  !*** ./node_modules/hash.js/lib/hash/sha/224.js ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(/*! ../utils */ "./node_modules/hash.js/lib/hash/utils.js");
var SHA256 = __webpack_require__(/*! ./256 */ "./node_modules/hash.js/lib/hash/sha/256.js");

function SHA224() {
  if (!(this instanceof SHA224))
    return new SHA224();

  SHA256.call(this);
  this.h = [
    0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,
    0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4 ];
}
utils.inherits(SHA224, SHA256);
module.exports = SHA224;

SHA224.blockSize = 512;
SHA224.outSize = 224;
SHA224.hmacStrength = 192;
SHA224.padLength = 64;

SHA224.prototype._digest = function digest(enc) {
  // Just truncate output
  if (enc === 'hex')
    return utils.toHex32(this.h.slice(0, 7), 'big');
  else
    return utils.split32(this.h.slice(0, 7), 'big');
};



/***/ }),

/***/ "./node_modules/hash.js/lib/hash/sha/256.js":
/*!**************************************************!*\
  !*** ./node_modules/hash.js/lib/hash/sha/256.js ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(/*! ../utils */ "./node_modules/hash.js/lib/hash/utils.js");
var common = __webpack_require__(/*! ../common */ "./node_modules/hash.js/lib/hash/common.js");
var shaCommon = __webpack_require__(/*! ./common */ "./node_modules/hash.js/lib/hash/sha/common.js");
var assert = __webpack_require__(/*! minimalistic-assert */ "./node_modules/minimalistic-assert/index.js");

var sum32 = utils.sum32;
var sum32_4 = utils.sum32_4;
var sum32_5 = utils.sum32_5;
var ch32 = shaCommon.ch32;
var maj32 = shaCommon.maj32;
var s0_256 = shaCommon.s0_256;
var s1_256 = shaCommon.s1_256;
var g0_256 = shaCommon.g0_256;
var g1_256 = shaCommon.g1_256;

var BlockHash = common.BlockHash;

var sha256_K = [
  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,
  0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,
  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,
  0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,
  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,
  0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,
  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,
  0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,
  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,
  0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,
  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,
  0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,
  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,
  0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,
  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,
  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2
];

function SHA256() {
  if (!(this instanceof SHA256))
    return new SHA256();

  BlockHash.call(this);
  this.h = [
    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,
    0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19
  ];
  this.k = sha256_K;
  this.W = new Array(64);
}
utils.inherits(SHA256, BlockHash);
module.exports = SHA256;

SHA256.blockSize = 512;
SHA256.outSize = 256;
SHA256.hmacStrength = 192;
SHA256.padLength = 64;

SHA256.prototype._update = function _update(msg, start) {
  var W = this.W;

  for (var i = 0; i < 16; i++)
    W[i] = msg[start + i];
  for (; i < W.length; i++)
    W[i] = sum32_4(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);

  var a = this.h[0];
  var b = this.h[1];
  var c = this.h[2];
  var d = this.h[3];
  var e = this.h[4];
  var f = this.h[5];
  var g = this.h[6];
  var h = this.h[7];

  assert(this.k.length === W.length);
  for (i = 0; i < W.length; i++) {
    var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);
    var T2 = sum32(s0_256(a), maj32(a, b, c));
    h = g;
    g = f;
    f = e;
    e = sum32(d, T1);
    d = c;
    c = b;
    b = a;
    a = sum32(T1, T2);
  }

  this.h[0] = sum32(this.h[0], a);
  this.h[1] = sum32(this.h[1], b);
  this.h[2] = sum32(this.h[2], c);
  this.h[3] = sum32(this.h[3], d);
  this.h[4] = sum32(this.h[4], e);
  this.h[5] = sum32(this.h[5], f);
  this.h[6] = sum32(this.h[6], g);
  this.h[7] = sum32(this.h[7], h);
};

SHA256.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h, 'big');
  else
    return utils.split32(this.h, 'big');
};


/***/ }),

/***/ "./node_modules/hash.js/lib/hash/sha/384.js":
/*!**************************************************!*\
  !*** ./node_modules/hash.js/lib/hash/sha/384.js ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(/*! ../utils */ "./node_modules/hash.js/lib/hash/utils.js");

var SHA512 = __webpack_require__(/*! ./512 */ "./node_modules/hash.js/lib/hash/sha/512.js");

function SHA384() {
  if (!(this instanceof SHA384))
    return new SHA384();

  SHA512.call(this);
  this.h = [
    0xcbbb9d5d, 0xc1059ed8,
    0x629a292a, 0x367cd507,
    0x9159015a, 0x3070dd17,
    0x152fecd8, 0xf70e5939,
    0x67332667, 0xffc00b31,
    0x8eb44a87, 0x68581511,
    0xdb0c2e0d, 0x64f98fa7,
    0x47b5481d, 0xbefa4fa4 ];
}
utils.inherits(SHA384, SHA512);
module.exports = SHA384;

SHA384.blockSize = 1024;
SHA384.outSize = 384;
SHA384.hmacStrength = 192;
SHA384.padLength = 128;

SHA384.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h.slice(0, 12), 'big');
  else
    return utils.split32(this.h.slice(0, 12), 'big');
};


/***/ }),

/***/ "./node_modules/hash.js/lib/hash/sha/512.js":
/*!**************************************************!*\
  !*** ./node_modules/hash.js/lib/hash/sha/512.js ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(/*! ../utils */ "./node_modules/hash.js/lib/hash/utils.js");
var common = __webpack_require__(/*! ../common */ "./node_modules/hash.js/lib/hash/common.js");
var assert = __webpack_require__(/*! minimalistic-assert */ "./node_modules/minimalistic-assert/index.js");

var rotr64_hi = utils.rotr64_hi;
var rotr64_lo = utils.rotr64_lo;
var shr64_hi = utils.shr64_hi;
var shr64_lo = utils.shr64_lo;
var sum64 = utils.sum64;
var sum64_hi = utils.sum64_hi;
var sum64_lo = utils.sum64_lo;
var sum64_4_hi = utils.sum64_4_hi;
var sum64_4_lo = utils.sum64_4_lo;
var sum64_5_hi = utils.sum64_5_hi;
var sum64_5_lo = utils.sum64_5_lo;

var BlockHash = common.BlockHash;

var sha512_K = [
  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,
  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,
  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,
  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,
  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,
  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,
  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,
  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,
  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,
  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,
  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,
  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,
  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,
  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,
  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,
  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,
  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,
  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,
  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,
  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,
  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,
  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,
  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,
  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,
  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,
  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,
  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,
  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,
  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,
  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,
  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,
  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,
  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,
  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,
  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,
  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,
  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,
  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,
  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,
  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817
];

function SHA512() {
  if (!(this instanceof SHA512))
    return new SHA512();

  BlockHash.call(this);
  this.h = [
    0x6a09e667, 0xf3bcc908,
    0xbb67ae85, 0x84caa73b,
    0x3c6ef372, 0xfe94f82b,
    0xa54ff53a, 0x5f1d36f1,
    0x510e527f, 0xade682d1,
    0x9b05688c, 0x2b3e6c1f,
    0x1f83d9ab, 0xfb41bd6b,
    0x5be0cd19, 0x137e2179 ];
  this.k = sha512_K;
  this.W = new Array(160);
}
utils.inherits(SHA512, BlockHash);
module.exports = SHA512;

SHA512.blockSize = 1024;
SHA512.outSize = 512;
SHA512.hmacStrength = 192;
SHA512.padLength = 128;

SHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {
  var W = this.W;

  // 32 x 32bit words
  for (var i = 0; i < 32; i++)
    W[i] = msg[start + i];
  for (; i < W.length; i += 2) {
    var c0_hi = g1_512_hi(W[i - 4], W[i - 3]);  // i - 2
    var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);
    var c1_hi = W[i - 14];  // i - 7
    var c1_lo = W[i - 13];
    var c2_hi = g0_512_hi(W[i - 30], W[i - 29]);  // i - 15
    var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);
    var c3_hi = W[i - 32];  // i - 16
    var c3_lo = W[i - 31];

    W[i] = sum64_4_hi(
      c0_hi, c0_lo,
      c1_hi, c1_lo,
      c2_hi, c2_lo,
      c3_hi, c3_lo);
    W[i + 1] = sum64_4_lo(
      c0_hi, c0_lo,
      c1_hi, c1_lo,
      c2_hi, c2_lo,
      c3_hi, c3_lo);
  }
};

SHA512.prototype._update = function _update(msg, start) {
  this._prepareBlock(msg, start);

  var W = this.W;

  var ah = this.h[0];
  var al = this.h[1];
  var bh = this.h[2];
  var bl = this.h[3];
  var ch = this.h[4];
  var cl = this.h[5];
  var dh = this.h[6];
  var dl = this.h[7];
  var eh = this.h[8];
  var el = this.h[9];
  var fh = this.h[10];
  var fl = this.h[11];
  var gh = this.h[12];
  var gl = this.h[13];
  var hh = this.h[14];
  var hl = this.h[15];

  assert(this.k.length === W.length);
  for (var i = 0; i < W.length; i += 2) {
    var c0_hi = hh;
    var c0_lo = hl;
    var c1_hi = s1_512_hi(eh, el);
    var c1_lo = s1_512_lo(eh, el);
    var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);
    var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);
    var c3_hi = this.k[i];
    var c3_lo = this.k[i + 1];
    var c4_hi = W[i];
    var c4_lo = W[i + 1];

    var T1_hi = sum64_5_hi(
      c0_hi, c0_lo,
      c1_hi, c1_lo,
      c2_hi, c2_lo,
      c3_hi, c3_lo,
      c4_hi, c4_lo);
    var T1_lo = sum64_5_lo(
      c0_hi, c0_lo,
      c1_hi, c1_lo,
      c2_hi, c2_lo,
      c3_hi, c3_lo,
      c4_hi, c4_lo);

    c0_hi = s0_512_hi(ah, al);
    c0_lo = s0_512_lo(ah, al);
    c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);
    c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);

    var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);
    var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);

    hh = gh;
    hl = gl;

    gh = fh;
    gl = fl;

    fh = eh;
    fl = el;

    eh = sum64_hi(dh, dl, T1_hi, T1_lo);
    el = sum64_lo(dl, dl, T1_hi, T1_lo);

    dh = ch;
    dl = cl;

    ch = bh;
    cl = bl;

    bh = ah;
    bl = al;

    ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);
    al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);
  }

  sum64(this.h, 0, ah, al);
  sum64(this.h, 2, bh, bl);
  sum64(this.h, 4, ch, cl);
  sum64(this.h, 6, dh, dl);
  sum64(this.h, 8, eh, el);
  sum64(this.h, 10, fh, fl);
  sum64(this.h, 12, gh, gl);
  sum64(this.h, 14, hh, hl);
};

SHA512.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h, 'big');
  else
    return utils.split32(this.h, 'big');
};

function ch64_hi(xh, xl, yh, yl, zh) {
  var r = (xh & yh) ^ ((~xh) & zh);
  if (r < 0)
    r += 0x100000000;
  return r;
}

function ch64_lo(xh, xl, yh, yl, zh, zl) {
  var r = (xl & yl) ^ ((~xl) & zl);
  if (r < 0)
    r += 0x100000000;
  return r;
}

function maj64_hi(xh, xl, yh, yl, zh) {
  var r = (xh & yh) ^ (xh & zh) ^ (yh & zh);
  if (r < 0)
    r += 0x100000000;
  return r;
}

function maj64_lo(xh, xl, yh, yl, zh, zl) {
  var r = (xl & yl) ^ (xl & zl) ^ (yl & zl);
  if (r < 0)
    r += 0x100000000;
  return r;
}

function s0_512_hi(xh, xl) {
  var c0_hi = rotr64_hi(xh, xl, 28);
  var c1_hi = rotr64_hi(xl, xh, 2);  // 34
  var c2_hi = rotr64_hi(xl, xh, 7);  // 39

  var r = c0_hi ^ c1_hi ^ c2_hi;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function s0_512_lo(xh, xl) {
  var c0_lo = rotr64_lo(xh, xl, 28);
  var c1_lo = rotr64_lo(xl, xh, 2);  // 34
  var c2_lo = rotr64_lo(xl, xh, 7);  // 39

  var r = c0_lo ^ c1_lo ^ c2_lo;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function s1_512_hi(xh, xl) {
  var c0_hi = rotr64_hi(xh, xl, 14);
  var c1_hi = rotr64_hi(xh, xl, 18);
  var c2_hi = rotr64_hi(xl, xh, 9);  // 41

  var r = c0_hi ^ c1_hi ^ c2_hi;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function s1_512_lo(xh, xl) {
  var c0_lo = rotr64_lo(xh, xl, 14);
  var c1_lo = rotr64_lo(xh, xl, 18);
  var c2_lo = rotr64_lo(xl, xh, 9);  // 41

  var r = c0_lo ^ c1_lo ^ c2_lo;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function g0_512_hi(xh, xl) {
  var c0_hi = rotr64_hi(xh, xl, 1);
  var c1_hi = rotr64_hi(xh, xl, 8);
  var c2_hi = shr64_hi(xh, xl, 7);

  var r = c0_hi ^ c1_hi ^ c2_hi;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function g0_512_lo(xh, xl) {
  var c0_lo = rotr64_lo(xh, xl, 1);
  var c1_lo = rotr64_lo(xh, xl, 8);
  var c2_lo = shr64_lo(xh, xl, 7);

  var r = c0_lo ^ c1_lo ^ c2_lo;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function g1_512_hi(xh, xl) {
  var c0_hi = rotr64_hi(xh, xl, 19);
  var c1_hi = rotr64_hi(xl, xh, 29);  // 61
  var c2_hi = shr64_hi(xh, xl, 6);

  var r = c0_hi ^ c1_hi ^ c2_hi;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function g1_512_lo(xh, xl) {
  var c0_lo = rotr64_lo(xh, xl, 19);
  var c1_lo = rotr64_lo(xl, xh, 29);  // 61
  var c2_lo = shr64_lo(xh, xl, 6);

  var r = c0_lo ^ c1_lo ^ c2_lo;
  if (r < 0)
    r += 0x100000000;
  return r;
}


/***/ }),

/***/ "./node_modules/hash.js/lib/hash/sha/common.js":
/*!*****************************************************!*\
  !*** ./node_modules/hash.js/lib/hash/sha/common.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(/*! ../utils */ "./node_modules/hash.js/lib/hash/utils.js");
var rotr32 = utils.rotr32;

function ft_1(s, x, y, z) {
  if (s === 0)
    return ch32(x, y, z);
  if (s === 1 || s === 3)
    return p32(x, y, z);
  if (s === 2)
    return maj32(x, y, z);
}
exports.ft_1 = ft_1;

function ch32(x, y, z) {
  return (x & y) ^ ((~x) & z);
}
exports.ch32 = ch32;

function maj32(x, y, z) {
  return (x & y) ^ (x & z) ^ (y & z);
}
exports.maj32 = maj32;

function p32(x, y, z) {
  return x ^ y ^ z;
}
exports.p32 = p32;

function s0_256(x) {
  return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);
}
exports.s0_256 = s0_256;

function s1_256(x) {
  return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);
}
exports.s1_256 = s1_256;

function g0_256(x) {
  return rotr32(x, 7) ^ rotr32(x, 18) ^ (x >>> 3);
}
exports.g0_256 = g0_256;

function g1_256(x) {
  return rotr32(x, 17) ^ rotr32(x, 19) ^ (x >>> 10);
}
exports.g1_256 = g1_256;


/***/ }),

/***/ "./node_modules/hash.js/lib/hash/utils.js":
/*!************************************************!*\
  !*** ./node_modules/hash.js/lib/hash/utils.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


var assert = __webpack_require__(/*! minimalistic-assert */ "./node_modules/minimalistic-assert/index.js");
var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js");

exports.inherits = inherits;

function isSurrogatePair(msg, i) {
  if ((msg.charCodeAt(i) & 0xFC00) !== 0xD800) {
    return false;
  }
  if (i < 0 || i + 1 >= msg.length) {
    return false;
  }
  return (msg.charCodeAt(i + 1) & 0xFC00) === 0xDC00;
}

function toArray(msg, enc) {
  if (Array.isArray(msg))
    return msg.slice();
  if (!msg)
    return [];
  var res = [];
  if (typeof msg === 'string') {
    if (!enc) {
      // Inspired by stringToUtf8ByteArray() in closure-library by Google
      // https://github.com/google/closure-library/blob/8598d87242af59aac233270742c8984e2b2bdbe0/closure/goog/crypt/crypt.js#L117-L143
      // Apache License 2.0
      // https://github.com/google/closure-library/blob/master/LICENSE
      var p = 0;
      for (var i = 0; i < msg.length; i++) {
        var c = msg.charCodeAt(i);
        if (c < 128) {
          res[p++] = c;
        } else if (c < 2048) {
          res[p++] = (c >> 6) | 192;
          res[p++] = (c & 63) | 128;
        } else if (isSurrogatePair(msg, i)) {
          c = 0x10000 + ((c & 0x03FF) << 10) + (msg.charCodeAt(++i) & 0x03FF);
          res[p++] = (c >> 18) | 240;
          res[p++] = ((c >> 12) & 63) | 128;
          res[p++] = ((c >> 6) & 63) | 128;
          res[p++] = (c & 63) | 128;
        } else {
          res[p++] = (c >> 12) | 224;
          res[p++] = ((c >> 6) & 63) | 128;
          res[p++] = (c & 63) | 128;
        }
      }
    } else if (enc === 'hex') {
      msg = msg.replace(/[^a-z0-9]+/ig, '');
      if (msg.length % 2 !== 0)
        msg = '0' + msg;
      for (i = 0; i < msg.length; i += 2)
        res.push(parseInt(msg[i] + msg[i + 1], 16));
    }
  } else {
    for (i = 0; i < msg.length; i++)
      res[i] = msg[i] | 0;
  }
  return res;
}
exports.toArray = toArray;

function toHex(msg) {
  var res = '';
  for (var i = 0; i < msg.length; i++)
    res += zero2(msg[i].toString(16));
  return res;
}
exports.toHex = toHex;

function htonl(w) {
  var res = (w >>> 24) |
            ((w >>> 8) & 0xff00) |
            ((w << 8) & 0xff0000) |
            ((w & 0xff) << 24);
  return res >>> 0;
}
exports.htonl = htonl;

function toHex32(msg, endian) {
  var res = '';
  for (var i = 0; i < msg.length; i++) {
    var w = msg[i];
    if (endian === 'little')
      w = htonl(w);
    res += zero8(w.toString(16));
  }
  return res;
}
exports.toHex32 = toHex32;

function zero2(word) {
  if (word.length === 1)
    return '0' + word;
  else
    return word;
}
exports.zero2 = zero2;

function zero8(word) {
  if (word.length === 7)
    return '0' + word;
  else if (word.length === 6)
    return '00' + word;
  else if (word.length === 5)
    return '000' + word;
  else if (word.length === 4)
    return '0000' + word;
  else if (word.length === 3)
    return '00000' + word;
  else if (word.length === 2)
    return '000000' + word;
  else if (word.length === 1)
    return '0000000' + word;
  else
    return word;
}
exports.zero8 = zero8;

function join32(msg, start, end, endian) {
  var len = end - start;
  assert(len % 4 === 0);
  var res = new Array(len / 4);
  for (var i = 0, k = start; i < res.length; i++, k += 4) {
    var w;
    if (endian === 'big')
      w = (msg[k] << 24) | (msg[k + 1] << 16) | (msg[k + 2] << 8) | msg[k + 3];
    else
      w = (msg[k + 3] << 24) | (msg[k + 2] << 16) | (msg[k + 1] << 8) | msg[k];
    res[i] = w >>> 0;
  }
  return res;
}
exports.join32 = join32;

function split32(msg, endian) {
  var res = new Array(msg.length * 4);
  for (var i = 0, k = 0; i < msg.length; i++, k += 4) {
    var m = msg[i];
    if (endian === 'big') {
      res[k] = m >>> 24;
      res[k + 1] = (m >>> 16) & 0xff;
      res[k + 2] = (m >>> 8) & 0xff;
      res[k + 3] = m & 0xff;
    } else {
      res[k + 3] = m >>> 24;
      res[k + 2] = (m >>> 16) & 0xff;
      res[k + 1] = (m >>> 8) & 0xff;
      res[k] = m & 0xff;
    }
  }
  return res;
}
exports.split32 = split32;

function rotr32(w, b) {
  return (w >>> b) | (w << (32 - b));
}
exports.rotr32 = rotr32;

function rotl32(w, b) {
  return (w << b) | (w >>> (32 - b));
}
exports.rotl32 = rotl32;

function sum32(a, b) {
  return (a + b) >>> 0;
}
exports.sum32 = sum32;

function sum32_3(a, b, c) {
  return (a + b + c) >>> 0;
}
exports.sum32_3 = sum32_3;

function sum32_4(a, b, c, d) {
  return (a + b + c + d) >>> 0;
}
exports.sum32_4 = sum32_4;

function sum32_5(a, b, c, d, e) {
  return (a + b + c + d + e) >>> 0;
}
exports.sum32_5 = sum32_5;

function sum64(buf, pos, ah, al) {
  var bh = buf[pos];
  var bl = buf[pos + 1];

  var lo = (al + bl) >>> 0;
  var hi = (lo < al ? 1 : 0) + ah + bh;
  buf[pos] = hi >>> 0;
  buf[pos + 1] = lo;
}
exports.sum64 = sum64;

function sum64_hi(ah, al, bh, bl) {
  var lo = (al + bl) >>> 0;
  var hi = (lo < al ? 1 : 0) + ah + bh;
  return hi >>> 0;
}
exports.sum64_hi = sum64_hi;

function sum64_lo(ah, al, bh, bl) {
  var lo = al + bl;
  return lo >>> 0;
}
exports.sum64_lo = sum64_lo;

function sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {
  var carry = 0;
  var lo = al;
  lo = (lo + bl) >>> 0;
  carry += lo < al ? 1 : 0;
  lo = (lo + cl) >>> 0;
  carry += lo < cl ? 1 : 0;
  lo = (lo + dl) >>> 0;
  carry += lo < dl ? 1 : 0;

  var hi = ah + bh + ch + dh + carry;
  return hi >>> 0;
}
exports.sum64_4_hi = sum64_4_hi;

function sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {
  var lo = al + bl + cl + dl;
  return lo >>> 0;
}
exports.sum64_4_lo = sum64_4_lo;

function sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {
  var carry = 0;
  var lo = al;
  lo = (lo + bl) >>> 0;
  carry += lo < al ? 1 : 0;
  lo = (lo + cl) >>> 0;
  carry += lo < cl ? 1 : 0;
  lo = (lo + dl) >>> 0;
  carry += lo < dl ? 1 : 0;
  lo = (lo + el) >>> 0;
  carry += lo < el ? 1 : 0;

  var hi = ah + bh + ch + dh + eh + carry;
  return hi >>> 0;
}
exports.sum64_5_hi = sum64_5_hi;

function sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {
  var lo = al + bl + cl + dl + el;

  return lo >>> 0;
}
exports.sum64_5_lo = sum64_5_lo;

function rotr64_hi(ah, al, num) {
  var r = (al << (32 - num)) | (ah >>> num);
  return r >>> 0;
}
exports.rotr64_hi = rotr64_hi;

function rotr64_lo(ah, al, num) {
  var r = (ah << (32 - num)) | (al >>> num);
  return r >>> 0;
}
exports.rotr64_lo = rotr64_lo;

function shr64_hi(ah, al, num) {
  return ah >>> num;
}
exports.shr64_hi = shr64_hi;

function shr64_lo(ah, al, num) {
  var r = (ah << (32 - num)) | (al >>> num);
  return r >>> 0;
}
exports.shr64_lo = shr64_lo;


/***/ }),

/***/ "./node_modules/hmac-drbg/lib/hmac-drbg.js":
/*!*************************************************!*\
  !*** ./node_modules/hmac-drbg/lib/hmac-drbg.js ***!
  \*************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var hash = __webpack_require__(/*! hash.js */ "./node_modules/hash.js/lib/hash.js");
var utils = __webpack_require__(/*! minimalistic-crypto-utils */ "./node_modules/minimalistic-crypto-utils/lib/utils.js");
var assert = __webpack_require__(/*! minimalistic-assert */ "./node_modules/minimalistic-assert/index.js");

function HmacDRBG(options) {
  if (!(this instanceof HmacDRBG))
    return new HmacDRBG(options);
  this.hash = options.hash;
  this.predResist = !!options.predResist;

  this.outLen = this.hash.outSize;
  this.minEntropy = options.minEntropy || this.hash.hmacStrength;

  this._reseed = null;
  this.reseedInterval = null;
  this.K = null;
  this.V = null;

  var entropy = utils.toArray(options.entropy, options.entropyEnc || 'hex');
  var nonce = utils.toArray(options.nonce, options.nonceEnc || 'hex');
  var pers = utils.toArray(options.pers, options.persEnc || 'hex');
  assert(entropy.length >= (this.minEntropy / 8),
         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');
  this._init(entropy, nonce, pers);
}
module.exports = HmacDRBG;

HmacDRBG.prototype._init = function init(entropy, nonce, pers) {
  var seed = entropy.concat(nonce).concat(pers);

  this.K = new Array(this.outLen / 8);
  this.V = new Array(this.outLen / 8);
  for (var i = 0; i < this.V.length; i++) {
    this.K[i] = 0x00;
    this.V[i] = 0x01;
  }

  this._update(seed);
  this._reseed = 1;
  this.reseedInterval = 0x1000000000000;  // 2^48
};

HmacDRBG.prototype._hmac = function hmac() {
  return new hash.hmac(this.hash, this.K);
};

HmacDRBG.prototype._update = function update(seed) {
  var kmac = this._hmac()
                 .update(this.V)
                 .update([ 0x00 ]);
  if (seed)
    kmac = kmac.update(seed);
  this.K = kmac.digest();
  this.V = this._hmac().update(this.V).digest();
  if (!seed)
    return;

  this.K = this._hmac()
               .update(this.V)
               .update([ 0x01 ])
               .update(seed)
               .digest();
  this.V = this._hmac().update(this.V).digest();
};

HmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {
  // Optional entropy enc
  if (typeof entropyEnc !== 'string') {
    addEnc = add;
    add = entropyEnc;
    entropyEnc = null;
  }

  entropy = utils.toArray(entropy, entropyEnc);
  add = utils.toArray(add, addEnc);

  assert(entropy.length >= (this.minEntropy / 8),
         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');

  this._update(entropy.concat(add || []));
  this._reseed = 1;
};

HmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {
  if (this._reseed > this.reseedInterval)
    throw new Error('Reseed is required');

  // Optional encoding
  if (typeof enc !== 'string') {
    addEnc = add;
    add = enc;
    enc = null;
  }

  // Optional additional data
  if (add) {
    add = utils.toArray(add, addEnc || 'hex');
    this._update(add);
  }

  var temp = [];
  while (temp.length < len) {
    this.V = this._hmac().update(this.V).digest();
    temp = temp.concat(this.V);
  }

  var res = temp.slice(0, len);
  this._update(add);
  this._reseed++;
  return utils.encode(res, enc);
};


/***/ }),

/***/ "./node_modules/iconv-lite/encodings/dbcs-codec.js":
/*!*********************************************************!*\
  !*** ./node_modules/iconv-lite/encodings/dbcs-codec.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

var Buffer = __webpack_require__(/*! safer-buffer */ "./node_modules/safer-buffer/safer.js").Buffer;

// Multibyte codec. In this scheme, a character is represented by 1 or more bytes.
// Our codec supports UTF-16 surrogates, extensions for GB18030 and unicode sequences.
// To save memory and loading time, we read table files only when requested.

exports._dbcs = DBCSCodec;

var UNASSIGNED = -1,
    GB18030_CODE = -2,
    SEQ_START  = -10,
    NODE_START = -1000,
    UNASSIGNED_NODE = new Array(0x100),
    DEF_CHAR = -1;

for (var i = 0; i < 0x100; i++)
    UNASSIGNED_NODE[i] = UNASSIGNED;


// Class DBCSCodec reads and initializes mapping tables.
function DBCSCodec(codecOptions, iconv) {
    this.encodingName = codecOptions.encodingName;
    if (!codecOptions)
        throw new Error("DBCS codec is called without the data.")
    if (!codecOptions.table)
        throw new Error("Encoding '" + this.encodingName + "' has no data.");

    // Load tables.
    var mappingTable = codecOptions.table();


    // Decode tables: MBCS -> Unicode.

    // decodeTables is a trie, encoded as an array of arrays of integers. Internal arrays are trie nodes and all have len = 256.
    // Trie root is decodeTables[0].
    // Values: >=  0 -> unicode character code. can be > 0xFFFF
    //         == UNASSIGNED -> unknown/unassigned sequence.
    //         == GB18030_CODE -> this is the end of a GB18030 4-byte sequence.
    //         <= NODE_START -> index of the next node in our trie to process next byte.
    //         <= SEQ_START  -> index of the start of a character code sequence, in decodeTableSeq.
    this.decodeTables = [];
    this.decodeTables[0] = UNASSIGNED_NODE.slice(0); // Create root node.

    // Sometimes a MBCS char corresponds to a sequence of unicode chars. We store them as arrays of integers here. 
    this.decodeTableSeq = [];

    // Actual mapping tables consist of chunks. Use them to fill up decode tables.
    for (var i = 0; i < mappingTable.length; i++)
        this._addDecodeChunk(mappingTable[i]);

    // Load & create GB18030 tables when needed.
    if (typeof codecOptions.gb18030 === 'function') {
        this.gb18030 = codecOptions.gb18030(); // Load GB18030 ranges.

        // Add GB18030 common decode nodes.
        var commonThirdByteNodeIdx = this.decodeTables.length;
        this.decodeTables.push(UNASSIGNED_NODE.slice(0));

        var commonFourthByteNodeIdx = this.decodeTables.length;
        this.decodeTables.push(UNASSIGNED_NODE.slice(0));

        // Fill out the tree
        var firstByteNode = this.decodeTables[0];
        for (var i = 0x81; i <= 0xFE; i++) {
            var secondByteNode = this.decodeTables[NODE_START - firstByteNode[i]];
            for (var j = 0x30; j <= 0x39; j++) {
                if (secondByteNode[j] === UNASSIGNED) {
                    secondByteNode[j] = NODE_START - commonThirdByteNodeIdx;
                } else if (secondByteNode[j] > NODE_START) {
                    throw new Error("gb18030 decode tables conflict at byte 2");
                }

                var thirdByteNode = this.decodeTables[NODE_START - secondByteNode[j]];
                for (var k = 0x81; k <= 0xFE; k++) {
                    if (thirdByteNode[k] === UNASSIGNED) {
                        thirdByteNode[k] = NODE_START - commonFourthByteNodeIdx;
                    } else if (thirdByteNode[k] === NODE_START - commonFourthByteNodeIdx) {
                        continue;
                    } else if (thirdByteNode[k] > NODE_START) {
                        throw new Error("gb18030 decode tables conflict at byte 3");
                    }

                    var fourthByteNode = this.decodeTables[NODE_START - thirdByteNode[k]];
                    for (var l = 0x30; l <= 0x39; l++) {
                        if (fourthByteNode[l] === UNASSIGNED)
                            fourthByteNode[l] = GB18030_CODE;
                    }
                }
            }
        }
    }

    this.defaultCharUnicode = iconv.defaultCharUnicode;

    
    // Encode tables: Unicode -> DBCS.

    // `encodeTable` is array mapping from unicode char to encoded char. All its values are integers for performance.
    // Because it can be sparse, it is represented as array of buckets by 256 chars each. Bucket can be null.
    // Values: >=  0 -> it is a normal char. Write the value (if <=256 then 1 byte, if <=65536 then 2 bytes, etc.).
    //         == UNASSIGNED -> no conversion found. Output a default char.
    //         <= SEQ_START  -> it's an index in encodeTableSeq, see below. The character starts a sequence.
    this.encodeTable = [];
    
    // `encodeTableSeq` is used when a sequence of unicode characters is encoded as a single code. We use a tree of
    // objects where keys correspond to characters in sequence and leafs are the encoded dbcs values. A special DEF_CHAR key
    // means end of sequence (needed when one sequence is a strict subsequence of another).
    // Objects are kept separately from encodeTable to increase performance.
    this.encodeTableSeq = [];

    // Some chars can be decoded, but need not be encoded.
    var skipEncodeChars = {};
    if (codecOptions.encodeSkipVals)
        for (var i = 0; i < codecOptions.encodeSkipVals.length; i++) {
            var val = codecOptions.encodeSkipVals[i];
            if (typeof val === 'number')
                skipEncodeChars[val] = true;
            else
                for (var j = val.from; j <= val.to; j++)
                    skipEncodeChars[j] = true;
        }
        
    // Use decode trie to recursively fill out encode tables.
    this._fillEncodeTable(0, 0, skipEncodeChars);

    // Add more encoding pairs when needed.
    if (codecOptions.encodeAdd) {
        for (var uChar in codecOptions.encodeAdd)
            if (Object.prototype.hasOwnProperty.call(codecOptions.encodeAdd, uChar))
                this._setEncodeChar(uChar.charCodeAt(0), codecOptions.encodeAdd[uChar]);
    }

    this.defCharSB  = this.encodeTable[0][iconv.defaultCharSingleByte.charCodeAt(0)];
    if (this.defCharSB === UNASSIGNED) this.defCharSB = this.encodeTable[0]['?'];
    if (this.defCharSB === UNASSIGNED) this.defCharSB = "?".charCodeAt(0);
}

DBCSCodec.prototype.encoder = DBCSEncoder;
DBCSCodec.prototype.decoder = DBCSDecoder;

// Decoder helpers
DBCSCodec.prototype._getDecodeTrieNode = function(addr) {
    var bytes = [];
    for (; addr > 0; addr >>>= 8)
        bytes.push(addr & 0xFF);
    if (bytes.length == 0)
        bytes.push(0);

    var node = this.decodeTables[0];
    for (var i = bytes.length-1; i > 0; i--) { // Traverse nodes deeper into the trie.
        var val = node[bytes[i]];

        if (val == UNASSIGNED) { // Create new node.
            node[bytes[i]] = NODE_START - this.decodeTables.length;
            this.decodeTables.push(node = UNASSIGNED_NODE.slice(0));
        }
        else if (val <= NODE_START) { // Existing node.
            node = this.decodeTables[NODE_START - val];
        }
        else
            throw new Error("Overwrite byte in " + this.encodingName + ", addr: " + addr.toString(16));
    }
    return node;
}


DBCSCodec.prototype._addDecodeChunk = function(chunk) {
    // First element of chunk is the hex mbcs code where we start.
    var curAddr = parseInt(chunk[0], 16);

    // Choose the decoding node where we'll write our chars.
    var writeTable = this._getDecodeTrieNode(curAddr);
    curAddr = curAddr & 0xFF;

    // Write all other elements of the chunk to the table.
    for (var k = 1; k < chunk.length; k++) {
        var part = chunk[k];
        if (typeof part === "string") { // String, write as-is.
            for (var l = 0; l < part.length;) {
                var code = part.charCodeAt(l++);
                if (0xD800 <= code && code < 0xDC00) { // Decode surrogate
                    var codeTrail = part.charCodeAt(l++);
                    if (0xDC00 <= codeTrail && codeTrail < 0xE000)
                        writeTable[curAddr++] = 0x10000 + (code - 0xD800) * 0x400 + (codeTrail - 0xDC00);
                    else
                        throw new Error("Incorrect surrogate pair in "  + this.encodingName + " at chunk " + chunk[0]);
                }
                else if (0x0FF0 < code && code <= 0x0FFF) { // Character sequence (our own encoding used)
                    var len = 0xFFF - code + 2;
                    var seq = [];
                    for (var m = 0; m < len; m++)
                        seq.push(part.charCodeAt(l++)); // Simple variation: don't support surrogates or subsequences in seq.

                    writeTable[curAddr++] = SEQ_START - this.decodeTableSeq.length;
                    this.decodeTableSeq.push(seq);
                }
                else
                    writeTable[curAddr++] = code; // Basic char
            }
        } 
        else if (typeof part === "number") { // Integer, meaning increasing sequence starting with prev character.
            var charCode = writeTable[curAddr - 1] + 1;
            for (var l = 0; l < part; l++)
                writeTable[curAddr++] = charCode++;
        }
        else
            throw new Error("Incorrect type '" + typeof part + "' given in "  + this.encodingName + " at chunk " + chunk[0]);
    }
    if (curAddr > 0xFF)
        throw new Error("Incorrect chunk in "  + this.encodingName + " at addr " + chunk[0] + ": too long" + curAddr);
}

// Encoder helpers
DBCSCodec.prototype._getEncodeBucket = function(uCode) {
    var high = uCode >> 8; // This could be > 0xFF because of astral characters.
    if (this.encodeTable[high] === undefined)
        this.encodeTable[high] = UNASSIGNED_NODE.slice(0); // Create bucket on demand.
    return this.encodeTable[high];
}

DBCSCodec.prototype._setEncodeChar = function(uCode, dbcsCode) {
    var bucket = this._getEncodeBucket(uCode);
    var low = uCode & 0xFF;
    if (bucket[low] <= SEQ_START)
        this.encodeTableSeq[SEQ_START-bucket[low]][DEF_CHAR] = dbcsCode; // There's already a sequence, set a single-char subsequence of it.
    else if (bucket[low] == UNASSIGNED)
        bucket[low] = dbcsCode;
}

DBCSCodec.prototype._setEncodeSequence = function(seq, dbcsCode) {
    
    // Get the root of character tree according to first character of the sequence.
    var uCode = seq[0];
    var bucket = this._getEncodeBucket(uCode);
    var low = uCode & 0xFF;

    var node;
    if (bucket[low] <= SEQ_START) {
        // There's already a sequence with  - use it.
        node = this.encodeTableSeq[SEQ_START-bucket[low]];
    }
    else {
        // There was no sequence object - allocate a new one.
        node = {};
        if (bucket[low] !== UNASSIGNED) node[DEF_CHAR] = bucket[low]; // If a char was set before - make it a single-char subsequence.
        bucket[low] = SEQ_START - this.encodeTableSeq.length;
        this.encodeTableSeq.push(node);
    }

    // Traverse the character tree, allocating new nodes as needed.
    for (var j = 1; j < seq.length-1; j++) {
        var oldVal = node[uCode];
        if (typeof oldVal === 'object')
            node = oldVal;
        else {
            node = node[uCode] = {}
            if (oldVal !== undefined)
                node[DEF_CHAR] = oldVal
        }
    }

    // Set the leaf to given dbcsCode.
    uCode = seq[seq.length-1];
    node[uCode] = dbcsCode;
}

DBCSCodec.prototype._fillEncodeTable = function(nodeIdx, prefix, skipEncodeChars) {
    var node = this.decodeTables[nodeIdx];
    var hasValues = false;
    var subNodeEmpty = {};
    for (var i = 0; i < 0x100; i++) {
        var uCode = node[i];
        var mbCode = prefix + i;
        if (skipEncodeChars[mbCode])
            continue;

        if (uCode >= 0) {
            this._setEncodeChar(uCode, mbCode);
            hasValues = true;
        } else if (uCode <= NODE_START) {
            var subNodeIdx = NODE_START - uCode;
            if (!subNodeEmpty[subNodeIdx]) {  // Skip empty subtrees (they are too large in gb18030).
                var newPrefix = (mbCode << 8) >>> 0;  // NOTE: '>>> 0' keeps 32-bit num positive.
                if (this._fillEncodeTable(subNodeIdx, newPrefix, skipEncodeChars))
                    hasValues = true;
                else
                    subNodeEmpty[subNodeIdx] = true;
            }
        } else if (uCode <= SEQ_START) {
            this._setEncodeSequence(this.decodeTableSeq[SEQ_START - uCode], mbCode);
            hasValues = true;
        }
    }
    return hasValues;
}



// == Encoder ==================================================================

function DBCSEncoder(options, codec) {
    // Encoder state
    this.leadSurrogate = -1;
    this.seqObj = undefined;
    
    // Static data
    this.encodeTable = codec.encodeTable;
    this.encodeTableSeq = codec.encodeTableSeq;
    this.defaultCharSingleByte = codec.defCharSB;
    this.gb18030 = codec.gb18030;
}

DBCSEncoder.prototype.write = function(str) {
    var newBuf = Buffer.alloc(str.length * (this.gb18030 ? 4 : 3)),
        leadSurrogate = this.leadSurrogate,
        seqObj = this.seqObj, nextChar = -1,
        i = 0, j = 0;

    while (true) {
        // 0. Get next character.
        if (nextChar === -1) {
            if (i == str.length) break;
            var uCode = str.charCodeAt(i++);
        }
        else {
            var uCode = nextChar;
            nextChar = -1;    
        }

        // 1. Handle surrogates.
        if (0xD800 <= uCode && uCode < 0xE000) { // Char is one of surrogates.
            if (uCode < 0xDC00) { // We've got lead surrogate.
                if (leadSurrogate === -1) {
                    leadSurrogate = uCode;
                    continue;
                } else {
                    leadSurrogate = uCode;
                    // Double lead surrogate found.
                    uCode = UNASSIGNED;
                }
            } else { // We've got trail surrogate.
                if (leadSurrogate !== -1) {
                    uCode = 0x10000 + (leadSurrogate - 0xD800) * 0x400 + (uCode - 0xDC00);
                    leadSurrogate = -1;
                } else {
                    // Incomplete surrogate pair - only trail surrogate found.
                    uCode = UNASSIGNED;
                }
                
            }
        }
        else if (leadSurrogate !== -1) {
            // Incomplete surrogate pair - only lead surrogate found.
            nextChar = uCode; uCode = UNASSIGNED; // Write an error, then current char.
            leadSurrogate = -1;
        }

        // 2. Convert uCode character.
        var dbcsCode = UNASSIGNED;
        if (seqObj !== undefined && uCode != UNASSIGNED) { // We are in the middle of the sequence
            var resCode = seqObj[uCode];
            if (typeof resCode === 'object') { // Sequence continues.
                seqObj = resCode;
                continue;

            } else if (typeof resCode == 'number') { // Sequence finished. Write it.
                dbcsCode = resCode;

            } else if (resCode == undefined) { // Current character is not part of the sequence.

                // Try default character for this sequence
                resCode = seqObj[DEF_CHAR];
                if (resCode !== undefined) {
                    dbcsCode = resCode; // Found. Write it.
                    nextChar = uCode; // Current character will be written too in the next iteration.

                } else {
                    // TODO: What if we have no default? (resCode == undefined)
                    // Then, we should write first char of the sequence as-is and try the rest recursively.
                    // Didn't do it for now because no encoding has this situation yet.
                    // Currently, just skip the sequence and write current char.
                }
            }
            seqObj = undefined;
        }
        else if (uCode >= 0) {  // Regular character
            var subtable = this.encodeTable[uCode >> 8];
            if (subtable !== undefined)
                dbcsCode = subtable[uCode & 0xFF];
            
            if (dbcsCode <= SEQ_START) { // Sequence start
                seqObj = this.encodeTableSeq[SEQ_START-dbcsCode];
                continue;
            }

            if (dbcsCode == UNASSIGNED && this.gb18030) {
                // Use GB18030 algorithm to find character(s) to write.
                var idx = findIdx(this.gb18030.uChars, uCode);
                if (idx != -1) {
                    var dbcsCode = this.gb18030.gbChars[idx] + (uCode - this.gb18030.uChars[idx]);
                    newBuf[j++] = 0x81 + Math.floor(dbcsCode / 12600); dbcsCode = dbcsCode % 12600;
                    newBuf[j++] = 0x30 + Math.floor(dbcsCode / 1260); dbcsCode = dbcsCode % 1260;
                    newBuf[j++] = 0x81 + Math.floor(dbcsCode / 10); dbcsCode = dbcsCode % 10;
                    newBuf[j++] = 0x30 + dbcsCode;
                    continue;
                }
            }
        }

        // 3. Write dbcsCode character.
        if (dbcsCode === UNASSIGNED)
            dbcsCode = this.defaultCharSingleByte;
        
        if (dbcsCode < 0x100) {
            newBuf[j++] = dbcsCode;
        }
        else if (dbcsCode < 0x10000) {
            newBuf[j++] = dbcsCode >> 8;   // high byte
            newBuf[j++] = dbcsCode & 0xFF; // low byte
        }
        else if (dbcsCode < 0x1000000) {
            newBuf[j++] = dbcsCode >> 16;
            newBuf[j++] = (dbcsCode >> 8) & 0xFF;
            newBuf[j++] = dbcsCode & 0xFF;
        } else {
            newBuf[j++] = dbcsCode >>> 24;
            newBuf[j++] = (dbcsCode >>> 16) & 0xFF;
            newBuf[j++] = (dbcsCode >>> 8) & 0xFF;
            newBuf[j++] = dbcsCode & 0xFF;
        }
    }

    this.seqObj = seqObj;
    this.leadSurrogate = leadSurrogate;
    return newBuf.slice(0, j);
}

DBCSEncoder.prototype.end = function() {
    if (this.leadSurrogate === -1 && this.seqObj === undefined)
        return; // All clean. Most often case.

    var newBuf = Buffer.alloc(10), j = 0;

    if (this.seqObj) { // We're in the sequence.
        var dbcsCode = this.seqObj[DEF_CHAR];
        if (dbcsCode !== undefined) { // Write beginning of the sequence.
            if (dbcsCode < 0x100) {
                newBuf[j++] = dbcsCode;
            }
            else {
                newBuf[j++] = dbcsCode >> 8;   // high byte
                newBuf[j++] = dbcsCode & 0xFF; // low byte
            }
        } else {
            // See todo above.
        }
        this.seqObj = undefined;
    }

    if (this.leadSurrogate !== -1) {
        // Incomplete surrogate pair - only lead surrogate found.
        newBuf[j++] = this.defaultCharSingleByte;
        this.leadSurrogate = -1;
    }
    
    return newBuf.slice(0, j);
}

// Export for testing
DBCSEncoder.prototype.findIdx = findIdx;


// == Decoder ==================================================================

function DBCSDecoder(options, codec) {
    // Decoder state
    this.nodeIdx = 0;
    this.prevBytes = [];

    // Static data
    this.decodeTables = codec.decodeTables;
    this.decodeTableSeq = codec.decodeTableSeq;
    this.defaultCharUnicode = codec.defaultCharUnicode;
    this.gb18030 = codec.gb18030;
}

DBCSDecoder.prototype.write = function(buf) {
    var newBuf = Buffer.alloc(buf.length*2),
        nodeIdx = this.nodeIdx, 
        prevBytes = this.prevBytes, prevOffset = this.prevBytes.length,
        seqStart = -this.prevBytes.length, // idx of the start of current parsed sequence.
        uCode;

    for (var i = 0, j = 0; i < buf.length; i++) {
        var curByte = (i >= 0) ? buf[i] : prevBytes[i + prevOffset];

        // Lookup in current trie node.
        var uCode = this.decodeTables[nodeIdx][curByte];

        if (uCode >= 0) { 
            // Normal character, just use it.
        }
        else if (uCode === UNASSIGNED) { // Unknown char.
            // TODO: Callback with seq.
            uCode = this.defaultCharUnicode.charCodeAt(0);
            i = seqStart; // Skip one byte ('i' will be incremented by the for loop) and try to parse again.
        }
        else if (uCode === GB18030_CODE) {
            if (i >= 3) {
                var ptr = (buf[i-3]-0x81)*12600 + (buf[i-2]-0x30)*1260 + (buf[i-1]-0x81)*10 + (curByte-0x30);
            } else {
                var ptr = (prevBytes[i-3+prevOffset]-0x81)*12600 + 
                          (((i-2 >= 0) ? buf[i-2] : prevBytes[i-2+prevOffset])-0x30)*1260 + 
                          (((i-1 >= 0) ? buf[i-1] : prevBytes[i-1+prevOffset])-0x81)*10 + 
                          (curByte-0x30);
            }
            var idx = findIdx(this.gb18030.gbChars, ptr);
            uCode = this.gb18030.uChars[idx] + ptr - this.gb18030.gbChars[idx];
        }
        else if (uCode <= NODE_START) { // Go to next trie node.
            nodeIdx = NODE_START - uCode;
            continue;
        }
        else if (uCode <= SEQ_START) { // Output a sequence of chars.
            var seq = this.decodeTableSeq[SEQ_START - uCode];
            for (var k = 0; k < seq.length - 1; k++) {
                uCode = seq[k];
                newBuf[j++] = uCode & 0xFF;
                newBuf[j++] = uCode >> 8;
            }
            uCode = seq[seq.length-1];
        }
        else
            throw new Error("iconv-lite internal error: invalid decoding table value " + uCode + " at " + nodeIdx + "/" + curByte);

        // Write the character to buffer, handling higher planes using surrogate pair.
        if (uCode >= 0x10000) { 
            uCode -= 0x10000;
            var uCodeLead = 0xD800 | (uCode >> 10);
            newBuf[j++] = uCodeLead & 0xFF;
            newBuf[j++] = uCodeLead >> 8;

            uCode = 0xDC00 | (uCode & 0x3FF);
        }
        newBuf[j++] = uCode & 0xFF;
        newBuf[j++] = uCode >> 8;

        // Reset trie node.
        nodeIdx = 0; seqStart = i+1;
    }

    this.nodeIdx = nodeIdx;
    this.prevBytes = (seqStart >= 0)
        ? Array.prototype.slice.call(buf, seqStart)
        : prevBytes.slice(seqStart + prevOffset).concat(Array.prototype.slice.call(buf));

    return newBuf.slice(0, j).toString('ucs2');
}

DBCSDecoder.prototype.end = function() {
    var ret = '';

    // Try to parse all remaining chars.
    while (this.prevBytes.length > 0) {
        // Skip 1 character in the buffer.
        ret += this.defaultCharUnicode;
        var bytesArr = this.prevBytes.slice(1);

        // Parse remaining as usual.
        this.prevBytes = [];
        this.nodeIdx = 0;
        if (bytesArr.length > 0)
            ret += this.write(bytesArr);
    }

    this.prevBytes = [];
    this.nodeIdx = 0;
    return ret;
}

// Binary search for GB18030. Returns largest i such that table[i] <= val.
function findIdx(table, val) {
    if (table[0] > val)
        return -1;

    var l = 0, r = table.length;
    while (l < r-1) { // always table[l] <= val < table[r]
        var mid = l + ((r-l+1) >> 1);
        if (table[mid] <= val)
            l = mid;
        else
            r = mid;
    }
    return l;
}



/***/ }),

/***/ "./node_modules/iconv-lite/encodings/dbcs-data.js":
/*!********************************************************!*\
  !*** ./node_modules/iconv-lite/encodings/dbcs-data.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


// Description of supported double byte encodings and aliases.
// Tables are not require()-d until they are needed to speed up library load.
// require()-s are direct to support Browserify.

module.exports = {
    
    // == Japanese/ShiftJIS ====================================================
    // All japanese encodings are based on JIS X set of standards:
    // JIS X 0201 - Single-byte encoding of ASCII + ¥ + Kana chars at 0xA1-0xDF.
    // JIS X 0208 - Main set of 6879 characters, placed in 94x94 plane, to be encoded by 2 bytes. 
    //              Has several variations in 1978, 1983, 1990 and 1997.
    // JIS X 0212 - Supplementary plane of 6067 chars in 94x94 plane. 1990. Effectively dead.
    // JIS X 0213 - Extension and modern replacement of 0208 and 0212. Total chars: 11233.
    //              2 planes, first is superset of 0208, second - revised 0212.
    //              Introduced in 2000, revised 2004. Some characters are in Unicode Plane 2 (0x2xxxx)

    // Byte encodings are:
    //  * Shift_JIS: Compatible with 0201, uses not defined chars in top half as lead bytes for double-byte
    //               encoding of 0208. Lead byte ranges: 0x81-0x9F, 0xE0-0xEF; Trail byte ranges: 0x40-0x7E, 0x80-0x9E, 0x9F-0xFC.
    //               Windows CP932 is a superset of Shift_JIS. Some companies added more chars, notably KDDI.
    //  * EUC-JP:    Up to 3 bytes per character. Used mostly on *nixes.
    //               0x00-0x7F       - lower part of 0201
    //               0x8E, 0xA1-0xDF - upper part of 0201
    //               (0xA1-0xFE)x2   - 0208 plane (94x94).
    //               0x8F, (0xA1-0xFE)x2 - 0212 plane (94x94).
    //  * JIS X 208: 7-bit, direct encoding of 0208. Byte ranges: 0x21-0x7E (94 values). Uncommon.
    //               Used as-is in ISO2022 family.
    //  * ISO2022-JP: Stateful encoding, with escape sequences to switch between ASCII, 
    //                0201-1976 Roman, 0208-1978, 0208-1983.
    //  * ISO2022-JP-1: Adds esc seq for 0212-1990.
    //  * ISO2022-JP-2: Adds esc seq for GB2313-1980, KSX1001-1992, ISO8859-1, ISO8859-7.
    //  * ISO2022-JP-3: Adds esc seq for 0201-1976 Kana set, 0213-2000 Planes 1, 2.
    //  * ISO2022-JP-2004: Adds 0213-2004 Plane 1.
    //
    // After JIS X 0213 appeared, Shift_JIS-2004, EUC-JISX0213 and ISO2022-JP-2004 followed, with just changing the planes.
    //
    // Overall, it seems that it's a mess :( http://www8.plala.or.jp/tkubota1/unicode-symbols-map2.html

    'shiftjis': {
        type: '_dbcs',
        table: function() { return __webpack_require__(/*! ./tables/shiftjis.json */ "./node_modules/iconv-lite/encodings/tables/shiftjis.json") },
        encodeAdd: {'\u00a5': 0x5C, '\u203E': 0x7E},
        encodeSkipVals: [{from: 0xED40, to: 0xF940}],
    },
    'csshiftjis': 'shiftjis',
    'mskanji': 'shiftjis',
    'sjis': 'shiftjis',
    'windows31j': 'shiftjis',
    'ms31j': 'shiftjis',
    'xsjis': 'shiftjis',
    'windows932': 'shiftjis',
    'ms932': 'shiftjis',
    '932': 'shiftjis',
    'cp932': 'shiftjis',

    'eucjp': {
        type: '_dbcs',
        table: function() { return __webpack_require__(/*! ./tables/eucjp.json */ "./node_modules/iconv-lite/encodings/tables/eucjp.json") },
        encodeAdd: {'\u00a5': 0x5C, '\u203E': 0x7E},
    },

    // TODO: KDDI extension to Shift_JIS
    // TODO: IBM CCSID 942 = CP932, but F0-F9 custom chars and other char changes.
    // TODO: IBM CCSID 943 = Shift_JIS = CP932 with original Shift_JIS lower 128 chars.


    // == Chinese/GBK ==========================================================
    // http://en.wikipedia.org/wiki/GBK
    // We mostly implement W3C recommendation: https://www.w3.org/TR/encoding/#gbk-encoder

    // Oldest GB2312 (1981, ~7600 chars) is a subset of CP936
    'gb2312': 'cp936',
    'gb231280': 'cp936',
    'gb23121980': 'cp936',
    'csgb2312': 'cp936',
    'csiso58gb231280': 'cp936',
    'euccn': 'cp936',

    // Microsoft's CP936 is a subset and approximation of GBK.
    'windows936': 'cp936',
    'ms936': 'cp936',
    '936': 'cp936',
    'cp936': {
        type: '_dbcs',
        table: function() { return __webpack_require__(/*! ./tables/cp936.json */ "./node_modules/iconv-lite/encodings/tables/cp936.json") },
    },

    // GBK (~22000 chars) is an extension of CP936 that added user-mapped chars and some other.
    'gbk': {
        type: '_dbcs',
        table: function() { return __webpack_require__(/*! ./tables/cp936.json */ "./node_modules/iconv-lite/encodings/tables/cp936.json").concat(__webpack_require__(/*! ./tables/gbk-added.json */ "./node_modules/iconv-lite/encodings/tables/gbk-added.json")) },
    },
    'xgbk': 'gbk',
    'isoir58': 'gbk',

    // GB18030 is an algorithmic extension of GBK.
    // Main source: https://www.w3.org/TR/encoding/#gbk-encoder
    // http://icu-project.org/docs/papers/gb18030.html
    // http://source.icu-project.org/repos/icu/data/trunk/charset/data/xml/gb-18030-2000.xml
    // http://www.khngai.com/chinese/charmap/tblgbk.php?page=0
    'gb18030': {
        type: '_dbcs',
        table: function() { return __webpack_require__(/*! ./tables/cp936.json */ "./node_modules/iconv-lite/encodings/tables/cp936.json").concat(__webpack_require__(/*! ./tables/gbk-added.json */ "./node_modules/iconv-lite/encodings/tables/gbk-added.json")) },
        gb18030: function() { return __webpack_require__(/*! ./tables/gb18030-ranges.json */ "./node_modules/iconv-lite/encodings/tables/gb18030-ranges.json") },
        encodeSkipVals: [0x80],
        encodeAdd: {'€': 0xA2E3},
    },

    'chinese': 'gb18030',


    // == Korean ===============================================================
    // EUC-KR, KS_C_5601 and KS X 1001 are exactly the same.
    'windows949': 'cp949',
    'ms949': 'cp949',
    '949': 'cp949',
    'cp949': {
        type: '_dbcs',
        table: function() { return __webpack_require__(/*! ./tables/cp949.json */ "./node_modules/iconv-lite/encodings/tables/cp949.json") },
    },

    'cseuckr': 'cp949',
    'csksc56011987': 'cp949',
    'euckr': 'cp949',
    'isoir149': 'cp949',
    'korean': 'cp949',
    'ksc56011987': 'cp949',
    'ksc56011989': 'cp949',
    'ksc5601': 'cp949',


    // == Big5/Taiwan/Hong Kong ================================================
    // There are lots of tables for Big5 and cp950. Please see the following links for history:
    // http://moztw.org/docs/big5/  http://www.haible.de/bruno/charsets/conversion-tables/Big5.html
    // Variations, in roughly number of defined chars:
    //  * Windows CP 950: Microsoft variant of Big5. Canonical: http://www.unicode.org/Public/MAPPINGS/VENDORS/MICSFT/WINDOWS/CP950.TXT
    //  * Windows CP 951: Microsoft variant of Big5-HKSCS-2001. Seems to be never public. http://me.abelcheung.org/articles/research/what-is-cp951/
    //  * Big5-2003 (Taiwan standard) almost superset of cp950.
    //  * Unicode-at-on (UAO) / Mozilla 1.8. Falling out of use on the Web. Not supported by other browsers.
    //  * Big5-HKSCS (-2001, -2004, -2008). Hong Kong standard. 
    //    many unicode code points moved from PUA to Supplementary plane (U+2XXXX) over the years.
    //    Plus, it has 4 combining sequences.
    //    Seems that Mozilla refused to support it for 10 yrs. https://bugzilla.mozilla.org/show_bug.cgi?id=162431 https://bugzilla.mozilla.org/show_bug.cgi?id=310299
    //    because big5-hkscs is the only encoding to include astral characters in non-algorithmic way.
    //    Implementations are not consistent within browsers; sometimes labeled as just big5.
    //    MS Internet Explorer switches from big5 to big5-hkscs when a patch applied.
    //    Great discussion & recap of what's going on https://bugzilla.mozilla.org/show_bug.cgi?id=912470#c31
    //    In the encoder, it might make sense to support encoding old PUA mappings to Big5 bytes seq-s.
    //    Official spec: http://www.ogcio.gov.hk/en/business/tech_promotion/ccli/terms/doc/2003cmp_2008.txt
    //                   http://www.ogcio.gov.hk/tc/business/tech_promotion/ccli/terms/doc/hkscs-2008-big5-iso.txt
    // 
    // Current understanding of how to deal with Big5(-HKSCS) is in the Encoding Standard, http://encoding.spec.whatwg.org/#big5-encoder
    // Unicode mapping (http://www.unicode.org/Public/MAPPINGS/OBSOLETE/EASTASIA/OTHER/BIG5.TXT) is said to be wrong.

    'windows950': 'cp950',
    'ms950': 'cp950',
    '950': 'cp950',
    'cp950': {
        type: '_dbcs',
        table: function() { return __webpack_require__(/*! ./tables/cp950.json */ "./node_modules/iconv-lite/encodings/tables/cp950.json") },
    },

    // Big5 has many variations and is an extension of cp950. We use Encoding Standard's as a consensus.
    'big5': 'big5hkscs',
    'big5hkscs': {
        type: '_dbcs',
        table: function() { return __webpack_require__(/*! ./tables/cp950.json */ "./node_modules/iconv-lite/encodings/tables/cp950.json").concat(__webpack_require__(/*! ./tables/big5-added.json */ "./node_modules/iconv-lite/encodings/tables/big5-added.json")) },
        encodeSkipVals: [
            // Although Encoding Standard says we should avoid encoding to HKSCS area (See Step 1 of
            // https://encoding.spec.whatwg.org/#index-big5-pointer), we still do it to increase compatibility with ICU.
            // But if a single unicode point can be encoded both as HKSCS and regular Big5, we prefer the latter.
            0x8e69, 0x8e6f, 0x8e7e, 0x8eab, 0x8eb4, 0x8ecd, 0x8ed0, 0x8f57, 0x8f69, 0x8f6e, 0x8fcb, 0x8ffe,
            0x906d, 0x907a, 0x90c4, 0x90dc, 0x90f1, 0x91bf, 0x92af, 0x92b0, 0x92b1, 0x92b2, 0x92d1, 0x9447, 0x94ca,
            0x95d9, 0x96fc, 0x9975, 0x9b76, 0x9b78, 0x9b7b, 0x9bc6, 0x9bde, 0x9bec, 0x9bf6, 0x9c42, 0x9c53, 0x9c62,
            0x9c68, 0x9c6b, 0x9c77, 0x9cbc, 0x9cbd, 0x9cd0, 0x9d57, 0x9d5a, 0x9dc4, 0x9def, 0x9dfb, 0x9ea9, 0x9eef,
            0x9efd, 0x9f60, 0x9fcb, 0xa077, 0xa0dc, 0xa0df, 0x8fcc, 0x92c8, 0x9644, 0x96ed,

            // Step 2 of https://encoding.spec.whatwg.org/#index-big5-pointer: Use last pointer for U+2550, U+255E, U+2561, U+256A, U+5341, or U+5345
            0xa2a4, 0xa2a5, 0xa2a7, 0xa2a6, 0xa2cc, 0xa2ce,
        ],
    },

    'cnbig5': 'big5hkscs',
    'csbig5': 'big5hkscs',
    'xxbig5': 'big5hkscs',
};


/***/ }),

/***/ "./node_modules/iconv-lite/encodings/index.js":
/*!****************************************************!*\
  !*** ./node_modules/iconv-lite/encodings/index.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


// Update this array if you add/rename/remove files in this directory.
// We support Browserify by skipping automatic module discovery and requiring modules directly.
var modules = [
    __webpack_require__(/*! ./internal */ "./node_modules/iconv-lite/encodings/internal.js"),
    __webpack_require__(/*! ./utf32 */ "./node_modules/iconv-lite/encodings/utf32.js"),
    __webpack_require__(/*! ./utf16 */ "./node_modules/iconv-lite/encodings/utf16.js"),
    __webpack_require__(/*! ./utf7 */ "./node_modules/iconv-lite/encodings/utf7.js"),
    __webpack_require__(/*! ./sbcs-codec */ "./node_modules/iconv-lite/encodings/sbcs-codec.js"),
    __webpack_require__(/*! ./sbcs-data */ "./node_modules/iconv-lite/encodings/sbcs-data.js"),
    __webpack_require__(/*! ./sbcs-data-generated */ "./node_modules/iconv-lite/encodings/sbcs-data-generated.js"),
    __webpack_require__(/*! ./dbcs-codec */ "./node_modules/iconv-lite/encodings/dbcs-codec.js"),
    __webpack_require__(/*! ./dbcs-data */ "./node_modules/iconv-lite/encodings/dbcs-data.js"),
];

// Put all encoding/alias/codec definitions to single object and export it.
for (var i = 0; i < modules.length; i++) {
    var module = modules[i];
    for (var enc in module)
        if (Object.prototype.hasOwnProperty.call(module, enc))
            exports[enc] = module[enc];
}


/***/ }),

/***/ "./node_modules/iconv-lite/encodings/internal.js":
/*!*******************************************************!*\
  !*** ./node_modules/iconv-lite/encodings/internal.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var Buffer = __webpack_require__(/*! safer-buffer */ "./node_modules/safer-buffer/safer.js").Buffer;

// Export Node.js internal encodings.

module.exports = {
    // Encodings
    utf8:   { type: "_internal", bomAware: true},
    cesu8:  { type: "_internal", bomAware: true},
    unicode11utf8: "utf8",

    ucs2:   { type: "_internal", bomAware: true},
    utf16le: "ucs2",

    binary: { type: "_internal" },
    base64: { type: "_internal" },
    hex:    { type: "_internal" },

    // Codec.
    _internal: InternalCodec,
};

//------------------------------------------------------------------------------

function InternalCodec(codecOptions, iconv) {
    this.enc = codecOptions.encodingName;
    this.bomAware = codecOptions.bomAware;

    if (this.enc === "base64")
        this.encoder = InternalEncoderBase64;
    else if (this.enc === "cesu8") {
        this.enc = "utf8"; // Use utf8 for decoding.
        this.encoder = InternalEncoderCesu8;

        // Add decoder for versions of Node not supporting CESU-8
        if (Buffer.from('eda0bdedb2a9', 'hex').toString() !== '💩') {
            this.decoder = InternalDecoderCesu8;
            this.defaultCharUnicode = iconv.defaultCharUnicode;
        }
    }
}

InternalCodec.prototype.encoder = InternalEncoder;
InternalCodec.prototype.decoder = InternalDecoder;

//------------------------------------------------------------------------------

// We use node.js internal decoder. Its signature is the same as ours.
var StringDecoder = __webpack_require__(/*! string_decoder */ "./node_modules/string_decoder/lib/string_decoder.js").StringDecoder;

if (!StringDecoder.prototype.end) // Node v0.8 doesn't have this method.
    StringDecoder.prototype.end = function() {};


function InternalDecoder(options, codec) {
    this.decoder = new StringDecoder(codec.enc);
}

InternalDecoder.prototype.write = function(buf) {
    if (!Buffer.isBuffer(buf)) {
        buf = Buffer.from(buf);
    }

    return this.decoder.write(buf);
}

InternalDecoder.prototype.end = function() {
    return this.decoder.end();
}


//------------------------------------------------------------------------------
// Encoder is mostly trivial

function InternalEncoder(options, codec) {
    this.enc = codec.enc;
}

InternalEncoder.prototype.write = function(str) {
    return Buffer.from(str, this.enc);
}

InternalEncoder.prototype.end = function() {
}


//------------------------------------------------------------------------------
// Except base64 encoder, which must keep its state.

function InternalEncoderBase64(options, codec) {
    this.prevStr = '';
}

InternalEncoderBase64.prototype.write = function(str) {
    str = this.prevStr + str;
    var completeQuads = str.length - (str.length % 4);
    this.prevStr = str.slice(completeQuads);
    str = str.slice(0, completeQuads);

    return Buffer.from(str, "base64");
}

InternalEncoderBase64.prototype.end = function() {
    return Buffer.from(this.prevStr, "base64");
}


//------------------------------------------------------------------------------
// CESU-8 encoder is also special.

function InternalEncoderCesu8(options, codec) {
}

InternalEncoderCesu8.prototype.write = function(str) {
    var buf = Buffer.alloc(str.length * 3), bufIdx = 0;
    for (var i = 0; i < str.length; i++) {
        var charCode = str.charCodeAt(i);
        // Naive implementation, but it works because CESU-8 is especially easy
        // to convert from UTF-16 (which all JS strings are encoded in).
        if (charCode < 0x80)
            buf[bufIdx++] = charCode;
        else if (charCode < 0x800) {
            buf[bufIdx++] = 0xC0 + (charCode >>> 6);
            buf[bufIdx++] = 0x80 + (charCode & 0x3f);
        }
        else { // charCode will always be < 0x10000 in javascript.
            buf[bufIdx++] = 0xE0 + (charCode >>> 12);
            buf[bufIdx++] = 0x80 + ((charCode >>> 6) & 0x3f);
            buf[bufIdx++] = 0x80 + (charCode & 0x3f);
        }
    }
    return buf.slice(0, bufIdx);
}

InternalEncoderCesu8.prototype.end = function() {
}

//------------------------------------------------------------------------------
// CESU-8 decoder is not implemented in Node v4.0+

function InternalDecoderCesu8(options, codec) {
    this.acc = 0;
    this.contBytes = 0;
    this.accBytes = 0;
    this.defaultCharUnicode = codec.defaultCharUnicode;
}

InternalDecoderCesu8.prototype.write = function(buf) {
    var acc = this.acc, contBytes = this.contBytes, accBytes = this.accBytes, 
        res = '';
    for (var i = 0; i < buf.length; i++) {
        var curByte = buf[i];
        if ((curByte & 0xC0) !== 0x80) { // Leading byte
            if (contBytes > 0) { // Previous code is invalid
                res += this.defaultCharUnicode;
                contBytes = 0;
            }

            if (curByte < 0x80) { // Single-byte code
                res += String.fromCharCode(curByte);
            } else if (curByte < 0xE0) { // Two-byte code
                acc = curByte & 0x1F;
                contBytes = 1; accBytes = 1;
            } else if (curByte < 0xF0) { // Three-byte code
                acc = curByte & 0x0F;
                contBytes = 2; accBytes = 1;
            } else { // Four or more are not supported for CESU-8.
                res += this.defaultCharUnicode;
            }
        } else { // Continuation byte
            if (contBytes > 0) { // We're waiting for it.
                acc = (acc << 6) | (curByte & 0x3f);
                contBytes--; accBytes++;
                if (contBytes === 0) {
                    // Check for overlong encoding, but support Modified UTF-8 (encoding NULL as C0 80)
                    if (accBytes === 2 && acc < 0x80 && acc > 0)
                        res += this.defaultCharUnicode;
                    else if (accBytes === 3 && acc < 0x800)
                        res += this.defaultCharUnicode;
                    else
                        // Actually add character.
                        res += String.fromCharCode(acc);
                }
            } else { // Unexpected continuation byte
                res += this.defaultCharUnicode;
            }
        }
    }
    this.acc = acc; this.contBytes = contBytes; this.accBytes = accBytes;
    return res;
}

InternalDecoderCesu8.prototype.end = function() {
    var res = 0;
    if (this.contBytes > 0)
        res += this.defaultCharUnicode;
    return res;
}


/***/ }),

/***/ "./node_modules/iconv-lite/encodings/sbcs-codec.js":
/*!*********************************************************!*\
  !*** ./node_modules/iconv-lite/encodings/sbcs-codec.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

var Buffer = __webpack_require__(/*! safer-buffer */ "./node_modules/safer-buffer/safer.js").Buffer;

// Single-byte codec. Needs a 'chars' string parameter that contains 256 or 128 chars that
// correspond to encoded bytes (if 128 - then lower half is ASCII). 

exports._sbcs = SBCSCodec;
function SBCSCodec(codecOptions, iconv) {
    if (!codecOptions)
        throw new Error("SBCS codec is called without the data.")
    
    // Prepare char buffer for decoding.
    if (!codecOptions.chars || (codecOptions.chars.length !== 128 && codecOptions.chars.length !== 256))
        throw new Error("Encoding '"+codecOptions.type+"' has incorrect 'chars' (must be of len 128 or 256)");
    
    if (codecOptions.chars.length === 128) {
        var asciiString = "";
        for (var i = 0; i < 128; i++)
            asciiString += String.fromCharCode(i);
        codecOptions.chars = asciiString + codecOptions.chars;
    }

    this.decodeBuf = Buffer.from(codecOptions.chars, 'ucs2');
    
    // Encoding buffer.
    var encodeBuf = Buffer.alloc(65536, iconv.defaultCharSingleByte.charCodeAt(0));

    for (var i = 0; i < codecOptions.chars.length; i++)
        encodeBuf[codecOptions.chars.charCodeAt(i)] = i;

    this.encodeBuf = encodeBuf;
}

SBCSCodec.prototype.encoder = SBCSEncoder;
SBCSCodec.prototype.decoder = SBCSDecoder;


function SBCSEncoder(options, codec) {
    this.encodeBuf = codec.encodeBuf;
}

SBCSEncoder.prototype.write = function(str) {
    var buf = Buffer.alloc(str.length);
    for (var i = 0; i < str.length; i++)
        buf[i] = this.encodeBuf[str.charCodeAt(i)];
    
    return buf;
}

SBCSEncoder.prototype.end = function() {
}


function SBCSDecoder(options, codec) {
    this.decodeBuf = codec.decodeBuf;
}

SBCSDecoder.prototype.write = function(buf) {
    // Strings are immutable in JS -> we use ucs2 buffer to speed up computations.
    var decodeBuf = this.decodeBuf;
    var newBuf = Buffer.alloc(buf.length*2);
    var idx1 = 0, idx2 = 0;
    for (var i = 0; i < buf.length; i++) {
        idx1 = buf[i]*2; idx2 = i*2;
        newBuf[idx2] = decodeBuf[idx1];
        newBuf[idx2+1] = decodeBuf[idx1+1];
    }
    return newBuf.toString('ucs2');
}

SBCSDecoder.prototype.end = function() {
}


/***/ }),

/***/ "./node_modules/iconv-lite/encodings/sbcs-data-generated.js":
/*!******************************************************************!*\
  !*** ./node_modules/iconv-lite/encodings/sbcs-data-generated.js ***!
  \******************************************************************/
/***/ ((module) => {

"use strict";


// Generated data for sbcs codec. Don't edit manually. Regenerate using generation/gen-sbcs.js script.
module.exports = {
  "437": "cp437",
  "737": "cp737",
  "775": "cp775",
  "850": "cp850",
  "852": "cp852",
  "855": "cp855",
  "856": "cp856",
  "857": "cp857",
  "858": "cp858",
  "860": "cp860",
  "861": "cp861",
  "862": "cp862",
  "863": "cp863",
  "864": "cp864",
  "865": "cp865",
  "866": "cp866",
  "869": "cp869",
  "874": "windows874",
  "922": "cp922",
  "1046": "cp1046",
  "1124": "cp1124",
  "1125": "cp1125",
  "1129": "cp1129",
  "1133": "cp1133",
  "1161": "cp1161",
  "1162": "cp1162",
  "1163": "cp1163",
  "1250": "windows1250",
  "1251": "windows1251",
  "1252": "windows1252",
  "1253": "windows1253",
  "1254": "windows1254",
  "1255": "windows1255",
  "1256": "windows1256",
  "1257": "windows1257",
  "1258": "windows1258",
  "28591": "iso88591",
  "28592": "iso88592",
  "28593": "iso88593",
  "28594": "iso88594",
  "28595": "iso88595",
  "28596": "iso88596",
  "28597": "iso88597",
  "28598": "iso88598",
  "28599": "iso88599",
  "28600": "iso885910",
  "28601": "iso885911",
  "28603": "iso885913",
  "28604": "iso885914",
  "28605": "iso885915",
  "28606": "iso885916",
  "windows874": {
    "type": "_sbcs",
    "chars": "€����…�����������‘’“”•–—�������� กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����"
  },
  "win874": "windows874",
  "cp874": "windows874",
  "windows1250": {
    "type": "_sbcs",
    "chars": "€�‚�„…†‡�‰Š‹ŚŤŽŹ�‘’“”•–—�™š›śťžź ˇ˘Ł¤Ą¦§¨©Ş«¬­®Ż°±˛ł´µ¶·¸ąş»Ľ˝ľżŔÁÂĂÄĹĆÇČÉĘËĚÍÎĎĐŃŇÓÔŐÖ×ŘŮÚŰÜÝŢßŕáâăäĺćçčéęëěíîďđńňóôőö÷řůúűüýţ˙"
  },
  "win1250": "windows1250",
  "cp1250": "windows1250",
  "windows1251": {
    "type": "_sbcs",
    "chars": "ЂЃ‚ѓ„…†‡€‰Љ‹ЊЌЋЏђ‘’“”•–—�™љ›њќћџ ЎўЈ¤Ґ¦§Ё©Є«¬­®Ї°±Ііґµ¶·ё№є»јЅѕїАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя"
  },
  "win1251": "windows1251",
  "cp1251": "windows1251",
  "windows1252": {
    "type": "_sbcs",
    "chars": "€�‚ƒ„…†‡ˆ‰Š‹Œ�Ž��‘’“”•–—˜™š›œ�žŸ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ"
  },
  "win1252": "windows1252",
  "cp1252": "windows1252",
  "windows1253": {
    "type": "_sbcs",
    "chars": "€�‚ƒ„…†‡�‰�‹�����‘’“”•–—�™�›���� ΅Ά£¤¥¦§¨©�«¬­®―°±²³΄µ¶·ΈΉΊ»Ό½ΎΏΐΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡ�ΣΤΥΦΧΨΩΪΫάέήίΰαβγδεζηθικλμνξοπρςστυφχψωϊϋόύώ�"
  },
  "win1253": "windows1253",
  "cp1253": "windows1253",
  "windows1254": {
    "type": "_sbcs",
    "chars": "€�‚ƒ„…†‡ˆ‰Š‹Œ����‘’“”•–—˜™š›œ��Ÿ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏĞÑÒÓÔÕÖ×ØÙÚÛÜİŞßàáâãäåæçèéêëìíîïğñòóôõö÷øùúûüışÿ"
  },
  "win1254": "windows1254",
  "cp1254": "windows1254",
  "windows1255": {
    "type": "_sbcs",
    "chars": "€�‚ƒ„…†‡ˆ‰�‹�����‘’“”•–—˜™�›���� ¡¢£₪¥¦§¨©×«¬­®¯°±²³´µ¶·¸¹÷»¼½¾¿ְֱֲֳִֵֶַָֹֺֻּֽ־ֿ׀ׁׂ׃װױײ׳״�������אבגדהוזחטיךכלםמןנסעףפץצקרשת��‎‏�"
  },
  "win1255": "windows1255",
  "cp1255": "windows1255",
  "windows1256": {
    "type": "_sbcs",
    "chars": "€پ‚ƒ„…†‡ˆ‰ٹ‹Œچژڈگ‘’“”•–—ک™ڑ›œ‌‍ں ،¢£¤¥¦§¨©ھ«¬­®¯°±²³´µ¶·¸¹؛»¼½¾؟ہءآأؤإئابةتثجحخدذرزسشصض×طظعغـفقكàلâمنهوçèéêëىيîïًٌٍَôُِ÷ّùْûü‎‏ے"
  },
  "win1256": "windows1256",
  "cp1256": "windows1256",
  "windows1257": {
    "type": "_sbcs",
    "chars": "€�‚�„…†‡�‰�‹�¨ˇ¸�‘’“”•–—�™�›�¯˛� �¢£¤�¦§Ø©Ŗ«¬­®Æ°±²³´µ¶·ø¹ŗ»¼½¾æĄĮĀĆÄÅĘĒČÉŹĖĢĶĪĻŠŃŅÓŌÕÖ×ŲŁŚŪÜŻŽßąįāćäåęēčéźėģķīļšńņóōõö÷ųłśūüżž˙"
  },
  "win1257": "windows1257",
  "cp1257": "windows1257",
  "windows1258": {
    "type": "_sbcs",
    "chars": "€�‚ƒ„…†‡ˆ‰�‹Œ����‘’“”•–—˜™�›œ��Ÿ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂĂÄÅÆÇÈÉÊË̀ÍÎÏĐÑ̉ÓÔƠÖ×ØÙÚÛÜỮßàáâăäåæçèéêë́íîïđṇ̃óôơö÷øùúûüư₫ÿ"
  },
  "win1258": "windows1258",
  "cp1258": "windows1258",
  "iso88591": {
    "type": "_sbcs",
    "chars": " ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ"
  },
  "cp28591": "iso88591",
  "iso88592": {
    "type": "_sbcs",
    "chars": " Ą˘Ł¤ĽŚ§¨ŠŞŤŹ­ŽŻ°ą˛ł´ľśˇ¸šşťź˝žżŔÁÂĂÄĹĆÇČÉĘËĚÍÎĎĐŃŇÓÔŐÖ×ŘŮÚŰÜÝŢßŕáâăäĺćçčéęëěíîďđńňóôőö÷řůúűüýţ˙"
  },
  "cp28592": "iso88592",
  "iso88593": {
    "type": "_sbcs",
    "chars": " Ħ˘£¤�Ĥ§¨İŞĞĴ­�Ż°ħ²³´µĥ·¸ışğĵ½�żÀÁÂ�ÄĊĈÇÈÉÊËÌÍÎÏ�ÑÒÓÔĠÖ×ĜÙÚÛÜŬŜßàáâ�äċĉçèéêëìíîï�ñòóôġö÷ĝùúûüŭŝ˙"
  },
  "cp28593": "iso88593",
  "iso88594": {
    "type": "_sbcs",
    "chars": " ĄĸŖ¤ĨĻ§¨ŠĒĢŦ­Ž¯°ą˛ŗ´ĩļˇ¸šēģŧŊžŋĀÁÂÃÄÅÆĮČÉĘËĖÍÎĪĐŅŌĶÔÕÖ×ØŲÚÛÜŨŪßāáâãäåæįčéęëėíîīđņōķôõö÷øųúûüũū˙"
  },
  "cp28594": "iso88594",
  "iso88595": {
    "type": "_sbcs",
    "chars": " ЁЂЃЄЅІЇЈЉЊЋЌ­ЎЏАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя№ёђѓєѕіїјљњћќ§ўџ"
  },
  "cp28595": "iso88595",
  "iso88596": {
    "type": "_sbcs",
    "chars": " ���¤�������،­�������������؛���؟�ءآأؤإئابةتثجحخدذرزسشصضطظعغ�����ـفقكلمنهوىيًٌٍَُِّْ�������������"
  },
  "cp28596": "iso88596",
  "iso88597": {
    "type": "_sbcs",
    "chars": " ‘’£€₯¦§¨©ͺ«¬­�―°±²³΄΅Ά·ΈΉΊ»Ό½ΎΏΐΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡ�ΣΤΥΦΧΨΩΪΫάέήίΰαβγδεζηθικλμνξοπρςστυφχψωϊϋόύώ�"
  },
  "cp28597": "iso88597",
  "iso88598": {
    "type": "_sbcs",
    "chars": " �¢£¤¥¦§¨©×«¬­®¯°±²³´µ¶·¸¹÷»¼½¾��������������������������������‗אבגדהוזחטיךכלםמןנסעףפץצקרשת��‎‏�"
  },
  "cp28598": "iso88598",
  "iso88599": {
    "type": "_sbcs",
    "chars": " ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏĞÑÒÓÔÕÖ×ØÙÚÛÜİŞßàáâãäåæçèéêëìíîïğñòóôõö÷øùúûüışÿ"
  },
  "cp28599": "iso88599",
  "iso885910": {
    "type": "_sbcs",
    "chars": " ĄĒĢĪĨĶ§ĻĐŠŦŽ­ŪŊ°ąēģīĩķ·ļđšŧž―ūŋĀÁÂÃÄÅÆĮČÉĘËĖÍÎÏÐŅŌÓÔÕÖŨØŲÚÛÜÝÞßāáâãäåæįčéęëėíîïðņōóôõöũøųúûüýþĸ"
  },
  "cp28600": "iso885910",
  "iso885911": {
    "type": "_sbcs",
    "chars": " กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����"
  },
  "cp28601": "iso885911",
  "iso885913": {
    "type": "_sbcs",
    "chars": " ”¢£¤„¦§Ø©Ŗ«¬­®Æ°±²³“µ¶·ø¹ŗ»¼½¾æĄĮĀĆÄÅĘĒČÉŹĖĢĶĪĻŠŃŅÓŌÕÖ×ŲŁŚŪÜŻŽßąįāćäåęēčéźėģķīļšńņóōõö÷ųłśūüżž’"
  },
  "cp28603": "iso885913",
  "iso885914": {
    "type": "_sbcs",
    "chars": " Ḃḃ£ĊċḊ§Ẁ©ẂḋỲ­®ŸḞḟĠġṀṁ¶ṖẁṗẃṠỳẄẅṡÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏŴÑÒÓÔÕÖṪØÙÚÛÜÝŶßàáâãäåæçèéêëìíîïŵñòóôõöṫøùúûüýŷÿ"
  },
  "cp28604": "iso885914",
  "iso885915": {
    "type": "_sbcs",
    "chars": " ¡¢£€¥Š§š©ª«¬­®¯°±²³Žµ¶·ž¹º»ŒœŸ¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ"
  },
  "cp28605": "iso885915",
  "iso885916": {
    "type": "_sbcs",
    "chars": " ĄąŁ€„Š§š©Ș«Ź­źŻ°±ČłŽ”¶·žčș»ŒœŸżÀÁÂĂÄĆÆÇÈÉÊËÌÍÎÏĐŃÒÓÔŐÖŚŰÙÚÛÜĘȚßàáâăäćæçèéêëìíîïđńòóôőöśűùúûüęțÿ"
  },
  "cp28606": "iso885916",
  "cp437": {
    "type": "_sbcs",
    "chars": "ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜ¢£¥₧ƒáíóúñÑªº¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ "
  },
  "ibm437": "cp437",
  "csibm437": "cp437",
  "cp737": {
    "type": "_sbcs",
    "chars": "ΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΤΥΦΧΨΩαβγδεζηθικλμνξοπρσςτυφχψ░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀ωάέήϊίόύϋώΆΈΉΊΌΎΏ±≥≤ΪΫ÷≈°∙·√ⁿ²■ "
  },
  "ibm737": "cp737",
  "csibm737": "cp737",
  "cp775": {
    "type": "_sbcs",
    "chars": "ĆüéāäģåćłēŖŗīŹÄÅÉæÆōöĢ¢ŚśÖÜø£Ø×¤ĀĪóŻżź”¦©®¬½¼Ł«»░▒▓│┤ĄČĘĖ╣║╗╝ĮŠ┐└┴┬├─┼ŲŪ╚╔╩╦╠═╬Žąčęėįšųūž┘┌█▄▌▐▀ÓßŌŃõÕµńĶķĻļņĒŅ’­±“¾¶§÷„°∙·¹³²■ "
  },
  "ibm775": "cp775",
  "csibm775": "cp775",
  "cp850": {
    "type": "_sbcs",
    "chars": "ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜø£Ø×ƒáíóúñÑªº¿®¬½¼¡«»░▒▓│┤ÁÂÀ©╣║╗╝¢¥┐└┴┬├─┼ãÃ╚╔╩╦╠═╬¤ðÐÊËÈıÍÎÏ┘┌█▄¦Ì▀ÓßÔÒõÕµþÞÚÛÙýÝ¯´­±‗¾¶§÷¸°¨·¹³²■ "
  },
  "ibm850": "cp850",
  "csibm850": "cp850",
  "cp852": {
    "type": "_sbcs",
    "chars": "ÇüéâäůćçłëŐőîŹÄĆÉĹĺôöĽľŚśÖÜŤťŁ×čáíóúĄąŽžĘę¬źČş«»░▒▓│┤ÁÂĚŞ╣║╗╝Żż┐└┴┬├─┼Ăă╚╔╩╦╠═╬¤đĐĎËďŇÍÎě┘┌█▄ŢŮ▀ÓßÔŃńňŠšŔÚŕŰýÝţ´­˝˛ˇ˘§÷¸°¨˙űŘř■ "
  },
  "ibm852": "cp852",
  "csibm852": "cp852",
  "cp855": {
    "type": "_sbcs",
    "chars": "ђЂѓЃёЁєЄѕЅіІїЇјЈљЉњЊћЋќЌўЎџЏюЮъЪаАбБцЦдДеЕфФгГ«»░▒▓│┤хХиИ╣║╗╝йЙ┐└┴┬├─┼кК╚╔╩╦╠═╬¤лЛмМнНоОп┘┌█▄Пя▀ЯрРсСтТуУжЖвВьЬ№­ыЫзЗшШэЭщЩчЧ§■ "
  },
  "ibm855": "cp855",
  "csibm855": "cp855",
  "cp856": {
    "type": "_sbcs",
    "chars": "אבגדהוזחטיךכלםמןנסעףפץצקרשת�£�×����������®¬½¼�«»░▒▓│┤���©╣║╗╝¢¥┐└┴┬├─┼��╚╔╩╦╠═╬¤���������┘┌█▄¦�▀������µ�������¯´­±‗¾¶§÷¸°¨·¹³²■ "
  },
  "ibm856": "cp856",
  "csibm856": "cp856",
  "cp857": {
    "type": "_sbcs",
    "chars": "ÇüéâäàåçêëèïîıÄÅÉæÆôöòûùİÖÜø£ØŞşáíóúñÑĞğ¿®¬½¼¡«»░▒▓│┤ÁÂÀ©╣║╗╝¢¥┐└┴┬├─┼ãÃ╚╔╩╦╠═╬¤ºªÊËÈ�ÍÎÏ┘┌█▄¦Ì▀ÓßÔÒõÕµ�×ÚÛÙìÿ¯´­±�¾¶§÷¸°¨·¹³²■ "
  },
  "ibm857": "cp857",
  "csibm857": "cp857",
  "cp858": {
    "type": "_sbcs",
    "chars": "ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜø£Ø×ƒáíóúñÑªº¿®¬½¼¡«»░▒▓│┤ÁÂÀ©╣║╗╝¢¥┐└┴┬├─┼ãÃ╚╔╩╦╠═╬¤ðÐÊËÈ€ÍÎÏ┘┌█▄¦Ì▀ÓßÔÒõÕµþÞÚÛÙýÝ¯´­±‗¾¶§÷¸°¨·¹³²■ "
  },
  "ibm858": "cp858",
  "csibm858": "cp858",
  "cp860": {
    "type": "_sbcs",
    "chars": "ÇüéâãàÁçêÊèÍÔìÃÂÉÀÈôõòÚùÌÕÜ¢£Ù₧ÓáíóúñÑªº¿Ò¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ "
  },
  "ibm860": "cp860",
  "csibm860": "cp860",
  "cp861": {
    "type": "_sbcs",
    "chars": "ÇüéâäàåçêëèÐðÞÄÅÉæÆôöþûÝýÖÜø£Ø₧ƒáíóúÁÍÓÚ¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ "
  },
  "ibm861": "cp861",
  "csibm861": "cp861",
  "cp862": {
    "type": "_sbcs",
    "chars": "אבגדהוזחטיךכלםמןנסעףפץצקרשת¢£¥₧ƒáíóúñÑªº¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ "
  },
  "ibm862": "cp862",
  "csibm862": "cp862",
  "cp863": {
    "type": "_sbcs",
    "chars": "ÇüéâÂà¶çêëèïî‗À§ÉÈÊôËÏûù¤ÔÜ¢£ÙÛƒ¦´óú¨¸³¯Î⌐¬½¼¾«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ "
  },
  "ibm863": "cp863",
  "csibm863": "cp863",
  "cp864": {
    "type": "_sbcs",
    "chars": "\u0000\u0001\u0002\u0003\u0004\u0005\u0006\u0007\b\t\n\u000b\f\r\u000e\u000f\u0010\u0011\u0012\u0013\u0014\u0015\u0016\u0017\u0018\u0019\u001a\u001b\u001c\u001d\u001e\u001f !\"#$٪&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~°·∙√▒─│┼┤┬├┴┐┌└┘β∞φ±½¼≈«»ﻷﻸ��ﻻﻼ� ­ﺂ£¤ﺄ��ﺎﺏﺕﺙ،ﺝﺡﺥ٠١٢٣٤٥٦٧٨٩ﻑ؛ﺱﺵﺹ؟¢ﺀﺁﺃﺅﻊﺋﺍﺑﺓﺗﺛﺟﺣﺧﺩﺫﺭﺯﺳﺷﺻﺿﻁﻅﻋﻏ¦¬÷×ﻉـﻓﻗﻛﻟﻣﻧﻫﻭﻯﻳﺽﻌﻎﻍﻡﹽّﻥﻩﻬﻰﻲﻐﻕﻵﻶﻝﻙﻱ■�"
  },
  "ibm864": "cp864",
  "csibm864": "cp864",
  "cp865": {
    "type": "_sbcs",
    "chars": "ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜø£Ø₧ƒáíóúñÑªº¿⌐¬½¼¡«¤░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ "
  },
  "ibm865": "cp865",
  "csibm865": "cp865",
  "cp866": {
    "type": "_sbcs",
    "chars": "АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюяЁёЄєЇїЎў°∙·√№¤■ "
  },
  "ibm866": "cp866",
  "csibm866": "cp866",
  "cp869": {
    "type": "_sbcs",
    "chars": "������Ά�·¬¦‘’Έ―ΉΊΪΌ��ΎΫ©Ώ²³ά£έήίϊΐόύΑΒΓΔΕΖΗ½ΘΙ«»░▒▓│┤ΚΛΜΝ╣║╗╝ΞΟ┐└┴┬├─┼ΠΡ╚╔╩╦╠═╬ΣΤΥΦΧΨΩαβγ┘┌█▄δε▀ζηθικλμνξοπρσςτ΄­±υφχ§ψ΅°¨ωϋΰώ■ "
  },
  "ibm869": "cp869",
  "csibm869": "cp869",
  "cp922": {
    "type": "_sbcs",
    "chars": " ¡¢£¤¥¦§¨©ª«¬­®‾°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏŠÑÒÓÔÕÖ×ØÙÚÛÜÝŽßàáâãäåæçèéêëìíîïšñòóôõö÷øùúûüýžÿ"
  },
  "ibm922": "cp922",
  "csibm922": "cp922",
  "cp1046": {
    "type": "_sbcs",
    "chars": "ﺈ×÷ﹱ■│─┐┌└┘ﹹﹻﹽﹿﹷﺊﻰﻳﻲﻎﻏﻐﻶﻸﻺﻼ ¤ﺋﺑﺗﺛﺟﺣ،­ﺧﺳ٠١٢٣٤٥٦٧٨٩ﺷ؛ﺻﺿﻊ؟ﻋءآأؤإئابةتثجحخدذرزسشصضطﻇعغﻌﺂﺄﺎﻓـفقكلمنهوىيًٌٍَُِّْﻗﻛﻟﻵﻷﻹﻻﻣﻧﻬﻩ�"
  },
  "ibm1046": "cp1046",
  "csibm1046": "cp1046",
  "cp1124": {
    "type": "_sbcs",
    "chars": " ЁЂҐЄЅІЇЈЉЊЋЌ­ЎЏАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя№ёђґєѕіїјљњћќ§ўџ"
  },
  "ibm1124": "cp1124",
  "csibm1124": "cp1124",
  "cp1125": {
    "type": "_sbcs",
    "chars": "АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюяЁёҐґЄєІіЇї·√№¤■ "
  },
  "ibm1125": "cp1125",
  "csibm1125": "cp1125",
  "cp1129": {
    "type": "_sbcs",
    "chars": " ¡¢£¤¥¦§œ©ª«¬­®¯°±²³Ÿµ¶·Œ¹º»¼½¾¿ÀÁÂĂÄÅÆÇÈÉÊË̀ÍÎÏĐÑ̉ÓÔƠÖ×ØÙÚÛÜỮßàáâăäåæçèéêë́íîïđṇ̃óôơö÷øùúûüư₫ÿ"
  },
  "ibm1129": "cp1129",
  "csibm1129": "cp1129",
  "cp1133": {
    "type": "_sbcs",
    "chars": " ກຂຄງຈສຊຍດຕຖທນບປຜຝພຟມຢຣລວຫອຮ���ຯະາຳິີຶືຸູຼັົຽ���ເແໂໃໄ່້໊໋໌ໍໆ�ໜໝ₭����������������໐໑໒໓໔໕໖໗໘໙��¢¬¦�"
  },
  "ibm1133": "cp1133",
  "csibm1133": "cp1133",
  "cp1161": {
    "type": "_sbcs",
    "chars": "��������������������������������่กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู้๊๋€฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛¢¬¦ "
  },
  "ibm1161": "cp1161",
  "csibm1161": "cp1161",
  "cp1162": {
    "type": "_sbcs",
    "chars": "€…‘’“”•–— กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����"
  },
  "ibm1162": "cp1162",
  "csibm1162": "cp1162",
  "cp1163": {
    "type": "_sbcs",
    "chars": " ¡¢£€¥¦§œ©ª«¬­®¯°±²³Ÿµ¶·Œ¹º»¼½¾¿ÀÁÂĂÄÅÆÇÈÉÊË̀ÍÎÏĐÑ̉ÓÔƠÖ×ØÙÚÛÜỮßàáâăäåæçèéêë́íîïđṇ̃óôơö÷øùúûüư₫ÿ"
  },
  "ibm1163": "cp1163",
  "csibm1163": "cp1163",
  "maccroatian": {
    "type": "_sbcs",
    "chars": "ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®Š™´¨≠ŽØ∞±≤≥∆µ∂∑∏š∫ªºΩžø¿¡¬√ƒ≈Ć«Č… ÀÃÕŒœĐ—“”‘’÷◊�©⁄¤‹›Æ»–·‚„‰ÂćÁčÈÍÎÏÌÓÔđÒÚÛÙıˆ˜¯πË˚¸Êæˇ"
  },
  "maccyrillic": {
    "type": "_sbcs",
    "chars": "АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ†°¢£§•¶І®©™Ђђ≠Ѓѓ∞±≤≥іµ∂ЈЄєЇїЉљЊњјЅ¬√ƒ≈∆«»… ЋћЌќѕ–—“”‘’÷„ЎўЏџ№Ёёяабвгдежзийклмнопрстуфхцчшщъыьэю¤"
  },
  "macgreek": {
    "type": "_sbcs",
    "chars": "Ä¹²É³ÖÜ΅àâä΄¨çéèêë£™îï•½‰ôö¦­ùûü†ΓΔΘΛΞΠß®©ΣΪ§≠°·Α±≤≥¥ΒΕΖΗΙΚΜΦΫΨΩάΝ¬ΟΡ≈Τ«»… ΥΧΆΈœ–―“”‘’÷ΉΊΌΎέήίόΏύαβψδεφγηιξκλμνοπώρστθωςχυζϊϋΐΰ�"
  },
  "maciceland": {
    "type": "_sbcs",
    "chars": "ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûüÝ°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤ÐðÞþý·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ"
  },
  "macroman": {
    "type": "_sbcs",
    "chars": "ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤‹›ﬁﬂ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ"
  },
  "macromania": {
    "type": "_sbcs",
    "chars": "ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ĂŞ∞±≤≥¥µ∂∑∏π∫ªºΩăş¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤‹›Ţţ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ"
  },
  "macthai": {
    "type": "_sbcs",
    "chars": "«»…“”�•‘’� กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู﻿​–—฿เแโใไๅๆ็่้๊๋์ํ™๏๐๑๒๓๔๕๖๗๘๙®©����"
  },
  "macturkish": {
    "type": "_sbcs",
    "chars": "ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸĞğİıŞş‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙ�ˆ˜¯˘˙˚¸˝˛ˇ"
  },
  "macukraine": {
    "type": "_sbcs",
    "chars": "АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ†°Ґ£§•¶І®©™Ђђ≠Ѓѓ∞±≤≥іµґЈЄєЇїЉљЊњјЅ¬√ƒ≈∆«»… ЋћЌќѕ–—“”‘’÷„ЎўЏџ№Ёёяабвгдежзийклмнопрстуфхцчшщъыьэю¤"
  },
  "koi8r": {
    "type": "_sbcs",
    "chars": "─│┌┐└┘├┤┬┴┼▀▄█▌▐░▒▓⌠■∙√≈≤≥ ⌡°²·÷═║╒ё╓╔╕╖╗╘╙╚╛╜╝╞╟╠╡Ё╢╣╤╥╦╧╨╩╪╫╬©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ"
  },
  "koi8u": {
    "type": "_sbcs",
    "chars": "─│┌┐└┘├┤┬┴┼▀▄█▌▐░▒▓⌠■∙√≈≤≥ ⌡°²·÷═║╒ёє╔ії╗╘╙╚╛ґ╝╞╟╠╡ЁЄ╣ІЇ╦╧╨╩╪Ґ╬©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ"
  },
  "koi8ru": {
    "type": "_sbcs",
    "chars": "─│┌┐└┘├┤┬┴┼▀▄█▌▐░▒▓⌠■∙√≈≤≥ ⌡°²·÷═║╒ёє╔ії╗╘╙╚╛ґў╞╟╠╡ЁЄ╣ІЇ╦╧╨╩╪ҐЎ©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ"
  },
  "koi8t": {
    "type": "_sbcs",
    "chars": "қғ‚Ғ„…†‡�‰ҳ‹ҲҷҶ�Қ‘’“”•–—�™�›�����ӯӮё¤ӣ¦§���«¬­®�°±²Ё�Ӣ¶·�№�»���©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ"
  },
  "armscii8": {
    "type": "_sbcs",
    "chars": " �և։)(»«—.՝,-֊…՜՛՞ԱաԲբԳգԴդԵեԶզԷէԸըԹթԺժԻիԼլԽխԾծԿկՀհՁձՂղՃճՄմՅյՆնՇշՈոՉչՊպՋջՌռՍսՎվՏտՐրՑցՒւՓփՔքՕօՖֆ՚�"
  },
  "rk1048": {
    "type": "_sbcs",
    "chars": "ЂЃ‚ѓ„…†‡€‰Љ‹ЊҚҺЏђ‘’“”•–—�™љ›њқһџ ҰұӘ¤Ө¦§Ё©Ғ«¬­®Ү°±Ііөµ¶·ё№ғ»әҢңүАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя"
  },
  "tcvn": {
    "type": "_sbcs",
    "chars": "\u0000ÚỤ\u0003ỪỬỮ\u0007\b\t\n\u000b\f\r\u000e\u000f\u0010ỨỰỲỶỸÝỴ\u0018\u0019\u001a\u001b\u001c\u001d\u001e\u001f !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~ÀẢÃÁẠẶẬÈẺẼÉẸỆÌỈĨÍỊÒỎÕÓỌỘỜỞỠỚỢÙỦŨ ĂÂÊÔƠƯĐăâêôơưđẶ̀̀̉̃́àảãáạẲằẳẵắẴẮẦẨẪẤỀặầẩẫấậèỂẻẽéẹềểễếệìỉỄẾỒĩíịòỔỏõóọồổỗốộờởỡớợùỖủũúụừửữứựỳỷỹýỵỐ"
  },
  "georgianacademy": {
    "type": "_sbcs",
    "chars": "‚ƒ„…†‡ˆ‰Š‹Œ‘’“”•–—˜™š›œŸ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿აბგდევზთიკლმნოპჟრსტუფქღყშჩცძწჭხჯჰჱჲჳჴჵჶçèéêëìíîïðñòóôõö÷øùúûüýþÿ"
  },
  "georgianps": {
    "type": "_sbcs",
    "chars": "‚ƒ„…†‡ˆ‰Š‹Œ‘’“”•–—˜™š›œŸ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿აბგდევზჱთიკლმნჲოპჟრსტჳუფქღყშჩცძწჭხჴჯჰჵæçèéêëìíîïðñòóôõö÷øùúûüýþÿ"
  },
  "pt154": {
    "type": "_sbcs",
    "chars": "ҖҒӮғ„…ҶҮҲүҠӢҢҚҺҸҗ‘’“”•–—ҳҷҡӣңқһҹ ЎўЈӨҘҰ§Ё©Ә«¬ӯ®Ҝ°ұІіҙө¶·ё№ә»јҪҫҝАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя"
  },
  "viscii": {
    "type": "_sbcs",
    "chars": "\u0000\u0001Ẳ\u0003\u0004ẴẪ\u0007\b\t\n\u000b\f\r\u000e\u000f\u0010\u0011\u0012\u0013Ỷ\u0015\u0016\u0017\u0018Ỹ\u001a\u001b\u001c\u001dỴ\u001f !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~ẠẮẰẶẤẦẨẬẼẸẾỀỂỄỆỐỒỔỖỘỢỚỜỞỊỎỌỈỦŨỤỲÕắằặấầẩậẽẹếềểễệốồổỗỠƠộờởịỰỨỪỬơớƯÀÁÂÃẢĂẳẵÈÉÊẺÌÍĨỳĐứÒÓÔạỷừửÙÚỹỵÝỡưàáâãảăữẫèéêẻìíĩỉđựòóôõỏọụùúũủýợỮ"
  },
  "iso646cn": {
    "type": "_sbcs",
    "chars": "\u0000\u0001\u0002\u0003\u0004\u0005\u0006\u0007\b\t\n\u000b\f\r\u000e\u000f\u0010\u0011\u0012\u0013\u0014\u0015\u0016\u0017\u0018\u0019\u001a\u001b\u001c\u001d\u001e\u001f !\"#¥%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}‾��������������������������������������������������������������������������������������������������������������������������������"
  },
  "iso646jp": {
    "type": "_sbcs",
    "chars": "\u0000\u0001\u0002\u0003\u0004\u0005\u0006\u0007\b\t\n\u000b\f\r\u000e\u000f\u0010\u0011\u0012\u0013\u0014\u0015\u0016\u0017\u0018\u0019\u001a\u001b\u001c\u001d\u001e\u001f !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[¥]^_`abcdefghijklmnopqrstuvwxyz{|}‾��������������������������������������������������������������������������������������������������������������������������������"
  },
  "hproman8": {
    "type": "_sbcs",
    "chars": " ÀÂÈÊËÎÏ´ˋˆ¨˜ÙÛ₤¯Ýý°ÇçÑñ¡¿¤£¥§ƒ¢âêôûáéóúàèòùäëöüÅîØÆåíøæÄìÖÜÉïßÔÁÃãÐðÍÌÓÒÕõŠšÚŸÿÞþ·µ¶¾—¼½ªº«■»±�"
  },
  "macintosh": {
    "type": "_sbcs",
    "chars": "ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤‹›ﬁﬂ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ"
  },
  "ascii": {
    "type": "_sbcs",
    "chars": "��������������������������������������������������������������������������������������������������������������������������������"
  },
  "tis620": {
    "type": "_sbcs",
    "chars": "���������������������������������กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����"
  }
}

/***/ }),

/***/ "./node_modules/iconv-lite/encodings/sbcs-data.js":
/*!********************************************************!*\
  !*** ./node_modules/iconv-lite/encodings/sbcs-data.js ***!
  \********************************************************/
/***/ ((module) => {

"use strict";


// Manually added data to be used by sbcs codec in addition to generated one.

module.exports = {
    // Not supported by iconv, not sure why.
    "10029": "maccenteuro",
    "maccenteuro": {
        "type": "_sbcs",
        "chars": "ÄĀāÉĄÖÜáąČäčĆćéŹźĎíďĒēĖóėôöõúĚěü†°Ę£§•¶ß®©™ę¨≠ģĮįĪ≤≥īĶ∂∑łĻļĽľĹĺŅņŃ¬√ńŇ∆«»… ňŐÕőŌ–—“”‘’÷◊ōŔŕŘ‹›řŖŗŠ‚„šŚśÁŤťÍŽžŪÓÔūŮÚůŰűŲųÝýķŻŁżĢˇ"
    },

    "808": "cp808",
    "ibm808": "cp808",
    "cp808": {
        "type": "_sbcs",
        "chars": "АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюяЁёЄєЇїЎў°∙·√№€■ "
    },

    "mik": {
        "type": "_sbcs",
        "chars": "АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя└┴┬├─┼╣║╚╔╩╦╠═╬┐░▒▓│┤№§╗╝┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ "
    },

    "cp720": {
        "type": "_sbcs",
        "chars": "\x80\x81éâ\x84à\x86çêëèïî\x8d\x8e\x8f\x90\u0651\u0652ô¤ـûùءآأؤ£إئابةتثجحخدذرزسشص«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀ضطظعغفµقكلمنهوىي≡\u064b\u064c\u064d\u064e\u064f\u0650≈°∙·√ⁿ²■\u00a0"
    },

    // Aliases of generated encodings.
    "ascii8bit": "ascii",
    "usascii": "ascii",
    "ansix34": "ascii",
    "ansix341968": "ascii",
    "ansix341986": "ascii",
    "csascii": "ascii",
    "cp367": "ascii",
    "ibm367": "ascii",
    "isoir6": "ascii",
    "iso646us": "ascii",
    "iso646irv": "ascii",
    "us": "ascii",

    "latin1": "iso88591",
    "latin2": "iso88592",
    "latin3": "iso88593",
    "latin4": "iso88594",
    "latin5": "iso88599",
    "latin6": "iso885910",
    "latin7": "iso885913",
    "latin8": "iso885914",
    "latin9": "iso885915",
    "latin10": "iso885916",

    "csisolatin1": "iso88591",
    "csisolatin2": "iso88592",
    "csisolatin3": "iso88593",
    "csisolatin4": "iso88594",
    "csisolatincyrillic": "iso88595",
    "csisolatinarabic": "iso88596",
    "csisolatingreek" : "iso88597",
    "csisolatinhebrew": "iso88598",
    "csisolatin5": "iso88599",
    "csisolatin6": "iso885910",

    "l1": "iso88591",
    "l2": "iso88592",
    "l3": "iso88593",
    "l4": "iso88594",
    "l5": "iso88599",
    "l6": "iso885910",
    "l7": "iso885913",
    "l8": "iso885914",
    "l9": "iso885915",
    "l10": "iso885916",

    "isoir14": "iso646jp",
    "isoir57": "iso646cn",
    "isoir100": "iso88591",
    "isoir101": "iso88592",
    "isoir109": "iso88593",
    "isoir110": "iso88594",
    "isoir144": "iso88595",
    "isoir127": "iso88596",
    "isoir126": "iso88597",
    "isoir138": "iso88598",
    "isoir148": "iso88599",
    "isoir157": "iso885910",
    "isoir166": "tis620",
    "isoir179": "iso885913",
    "isoir199": "iso885914",
    "isoir203": "iso885915",
    "isoir226": "iso885916",

    "cp819": "iso88591",
    "ibm819": "iso88591",

    "cyrillic": "iso88595",

    "arabic": "iso88596",
    "arabic8": "iso88596",
    "ecma114": "iso88596",
    "asmo708": "iso88596",

    "greek" : "iso88597",
    "greek8" : "iso88597",
    "ecma118" : "iso88597",
    "elot928" : "iso88597",

    "hebrew": "iso88598",
    "hebrew8": "iso88598",

    "turkish": "iso88599",
    "turkish8": "iso88599",

    "thai": "iso885911",
    "thai8": "iso885911",

    "celtic": "iso885914",
    "celtic8": "iso885914",
    "isoceltic": "iso885914",

    "tis6200": "tis620",
    "tis62025291": "tis620",
    "tis62025330": "tis620",

    "10000": "macroman",
    "10006": "macgreek",
    "10007": "maccyrillic",
    "10079": "maciceland",
    "10081": "macturkish",

    "cspc8codepage437": "cp437",
    "cspc775baltic": "cp775",
    "cspc850multilingual": "cp850",
    "cspcp852": "cp852",
    "cspc862latinhebrew": "cp862",
    "cpgr": "cp869",

    "msee": "cp1250",
    "mscyrl": "cp1251",
    "msansi": "cp1252",
    "msgreek": "cp1253",
    "msturk": "cp1254",
    "mshebr": "cp1255",
    "msarab": "cp1256",
    "winbaltrim": "cp1257",

    "cp20866": "koi8r",
    "20866": "koi8r",
    "ibm878": "koi8r",
    "cskoi8r": "koi8r",

    "cp21866": "koi8u",
    "21866": "koi8u",
    "ibm1168": "koi8u",

    "strk10482002": "rk1048",

    "tcvn5712": "tcvn",
    "tcvn57121": "tcvn",

    "gb198880": "iso646cn",
    "cn": "iso646cn",

    "csiso14jisc6220ro": "iso646jp",
    "jisc62201969ro": "iso646jp",
    "jp": "iso646jp",

    "cshproman8": "hproman8",
    "r8": "hproman8",
    "roman8": "hproman8",
    "xroman8": "hproman8",
    "ibm1051": "hproman8",

    "mac": "macintosh",
    "csmacintosh": "macintosh",
};



/***/ }),

/***/ "./node_modules/iconv-lite/encodings/utf16.js":
/*!****************************************************!*\
  !*** ./node_modules/iconv-lite/encodings/utf16.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

var Buffer = __webpack_require__(/*! safer-buffer */ "./node_modules/safer-buffer/safer.js").Buffer;

// Note: UTF16-LE (or UCS2) codec is Node.js native. See encodings/internal.js

// == UTF16-BE codec. ==========================================================

exports.utf16be = Utf16BECodec;
function Utf16BECodec() {
}

Utf16BECodec.prototype.encoder = Utf16BEEncoder;
Utf16BECodec.prototype.decoder = Utf16BEDecoder;
Utf16BECodec.prototype.bomAware = true;


// -- Encoding

function Utf16BEEncoder() {
}

Utf16BEEncoder.prototype.write = function(str) {
    var buf = Buffer.from(str, 'ucs2');
    for (var i = 0; i < buf.length; i += 2) {
        var tmp = buf[i]; buf[i] = buf[i+1]; buf[i+1] = tmp;
    }
    return buf;
}

Utf16BEEncoder.prototype.end = function() {
}


// -- Decoding

function Utf16BEDecoder() {
    this.overflowByte = -1;
}

Utf16BEDecoder.prototype.write = function(buf) {
    if (buf.length == 0)
        return '';

    var buf2 = Buffer.alloc(buf.length + 1),
        i = 0, j = 0;

    if (this.overflowByte !== -1) {
        buf2[0] = buf[0];
        buf2[1] = this.overflowByte;
        i = 1; j = 2;
    }

    for (; i < buf.length-1; i += 2, j+= 2) {
        buf2[j] = buf[i+1];
        buf2[j+1] = buf[i];
    }

    this.overflowByte = (i == buf.length-1) ? buf[buf.length-1] : -1;

    return buf2.slice(0, j).toString('ucs2');
}

Utf16BEDecoder.prototype.end = function() {
    this.overflowByte = -1;
}


// == UTF-16 codec =============================================================
// Decoder chooses automatically from UTF-16LE and UTF-16BE using BOM and space-based heuristic.
// Defaults to UTF-16LE, as it's prevalent and default in Node.
// http://en.wikipedia.org/wiki/UTF-16 and http://encoding.spec.whatwg.org/#utf-16le
// Decoder default can be changed: iconv.decode(buf, 'utf16', {defaultEncoding: 'utf-16be'});

// Encoder uses UTF-16LE and prepends BOM (which can be overridden with addBOM: false).

exports.utf16 = Utf16Codec;
function Utf16Codec(codecOptions, iconv) {
    this.iconv = iconv;
}

Utf16Codec.prototype.encoder = Utf16Encoder;
Utf16Codec.prototype.decoder = Utf16Decoder;


// -- Encoding (pass-through)

function Utf16Encoder(options, codec) {
    options = options || {};
    if (options.addBOM === undefined)
        options.addBOM = true;
    this.encoder = codec.iconv.getEncoder('utf-16le', options);
}

Utf16Encoder.prototype.write = function(str) {
    return this.encoder.write(str);
}

Utf16Encoder.prototype.end = function() {
    return this.encoder.end();
}


// -- Decoding

function Utf16Decoder(options, codec) {
    this.decoder = null;
    this.initialBufs = [];
    this.initialBufsLen = 0;

    this.options = options || {};
    this.iconv = codec.iconv;
}

Utf16Decoder.prototype.write = function(buf) {
    if (!this.decoder) {
        // Codec is not chosen yet. Accumulate initial bytes.
        this.initialBufs.push(buf);
        this.initialBufsLen += buf.length;
        
        if (this.initialBufsLen < 16) // We need more bytes to use space heuristic (see below)
            return '';

        // We have enough bytes -> detect endianness.
        var encoding = detectEncoding(this.initialBufs, this.options.defaultEncoding);
        this.decoder = this.iconv.getDecoder(encoding, this.options);

        var resStr = '';
        for (var i = 0; i < this.initialBufs.length; i++)
            resStr += this.decoder.write(this.initialBufs[i]);

        this.initialBufs.length = this.initialBufsLen = 0;
        return resStr;
    }

    return this.decoder.write(buf);
}

Utf16Decoder.prototype.end = function() {
    if (!this.decoder) {
        var encoding = detectEncoding(this.initialBufs, this.options.defaultEncoding);
        this.decoder = this.iconv.getDecoder(encoding, this.options);

        var resStr = '';
        for (var i = 0; i < this.initialBufs.length; i++)
            resStr += this.decoder.write(this.initialBufs[i]);

        var trail = this.decoder.end();
        if (trail)
            resStr += trail;

        this.initialBufs.length = this.initialBufsLen = 0;
        return resStr;
    }
    return this.decoder.end();
}

function detectEncoding(bufs, defaultEncoding) {
    var b = [];
    var charsProcessed = 0;
    var asciiCharsLE = 0, asciiCharsBE = 0; // Number of ASCII chars when decoded as LE or BE.

    outer_loop:
    for (var i = 0; i < bufs.length; i++) {
        var buf = bufs[i];
        for (var j = 0; j < buf.length; j++) {
            b.push(buf[j]);
            if (b.length === 2) {
                if (charsProcessed === 0) {
                    // Check BOM first.
                    if (b[0] === 0xFF && b[1] === 0xFE) return 'utf-16le';
                    if (b[0] === 0xFE && b[1] === 0xFF) return 'utf-16be';
                }

                if (b[0] === 0 && b[1] !== 0) asciiCharsBE++;
                if (b[0] !== 0 && b[1] === 0) asciiCharsLE++;

                b.length = 0;
                charsProcessed++;

                if (charsProcessed >= 100) {
                    break outer_loop;
                }
            }
        }
    }

    // Make decisions.
    // Most of the time, the content has ASCII chars (U+00**), but the opposite (U+**00) is uncommon.
    // So, we count ASCII as if it was LE or BE, and decide from that.
    if (asciiCharsBE > asciiCharsLE) return 'utf-16be';
    if (asciiCharsBE < asciiCharsLE) return 'utf-16le';

    // Couldn't decide (likely all zeros or not enough data).
    return defaultEncoding || 'utf-16le';
}




/***/ }),

/***/ "./node_modules/iconv-lite/encodings/utf32.js":
/*!****************************************************!*\
  !*** ./node_modules/iconv-lite/encodings/utf32.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


var Buffer = __webpack_require__(/*! safer-buffer */ "./node_modules/safer-buffer/safer.js").Buffer;

// == UTF32-LE/BE codec. ==========================================================

exports._utf32 = Utf32Codec;

function Utf32Codec(codecOptions, iconv) {
    this.iconv = iconv;
    this.bomAware = true;
    this.isLE = codecOptions.isLE;
}

exports.utf32le = { type: '_utf32', isLE: true };
exports.utf32be = { type: '_utf32', isLE: false };

// Aliases
exports.ucs4le = 'utf32le';
exports.ucs4be = 'utf32be';

Utf32Codec.prototype.encoder = Utf32Encoder;
Utf32Codec.prototype.decoder = Utf32Decoder;

// -- Encoding

function Utf32Encoder(options, codec) {
    this.isLE = codec.isLE;
    this.highSurrogate = 0;
}

Utf32Encoder.prototype.write = function(str) {
    var src = Buffer.from(str, 'ucs2');
    var dst = Buffer.alloc(src.length * 2);
    var write32 = this.isLE ? dst.writeUInt32LE : dst.writeUInt32BE;
    var offset = 0;

    for (var i = 0; i < src.length; i += 2) {
        var code = src.readUInt16LE(i);
        var isHighSurrogate = (0xD800 <= code && code < 0xDC00);
        var isLowSurrogate = (0xDC00 <= code && code < 0xE000);

        if (this.highSurrogate) {
            if (isHighSurrogate || !isLowSurrogate) {
                // There shouldn't be two high surrogates in a row, nor a high surrogate which isn't followed by a low
                // surrogate. If this happens, keep the pending high surrogate as a stand-alone semi-invalid character
                // (technically wrong, but expected by some applications, like Windows file names).
                write32.call(dst, this.highSurrogate, offset);
                offset += 4;
            }
            else {
                // Create 32-bit value from high and low surrogates;
                var codepoint = (((this.highSurrogate - 0xD800) << 10) | (code - 0xDC00)) + 0x10000;

                write32.call(dst, codepoint, offset);
                offset += 4;
                this.highSurrogate = 0;

                continue;
            }
        }

        if (isHighSurrogate)
            this.highSurrogate = code;
        else {
            // Even if the current character is a low surrogate, with no previous high surrogate, we'll
            // encode it as a semi-invalid stand-alone character for the same reasons expressed above for
            // unpaired high surrogates.
            write32.call(dst, code, offset);
            offset += 4;
            this.highSurrogate = 0;
        }
    }

    if (offset < dst.length)
        dst = dst.slice(0, offset);

    return dst;
};

Utf32Encoder.prototype.end = function() {
    // Treat any leftover high surrogate as a semi-valid independent character.
    if (!this.highSurrogate)
        return;

    var buf = Buffer.alloc(4);

    if (this.isLE)
        buf.writeUInt32LE(this.highSurrogate, 0);
    else
        buf.writeUInt32BE(this.highSurrogate, 0);

    this.highSurrogate = 0;

    return buf;
};

// -- Decoding

function Utf32Decoder(options, codec) {
    this.isLE = codec.isLE;
    this.badChar = codec.iconv.defaultCharUnicode.charCodeAt(0);
    this.overflow = [];
}

Utf32Decoder.prototype.write = function(src) {
    if (src.length === 0)
        return '';

    var i = 0;
    var codepoint = 0;
    var dst = Buffer.alloc(src.length + 4);
    var offset = 0;
    var isLE = this.isLE;
    var overflow = this.overflow;
    var badChar = this.badChar;

    if (overflow.length > 0) {
        for (; i < src.length && overflow.length < 4; i++)
            overflow.push(src[i]);
        
        if (overflow.length === 4) {
            // NOTE: codepoint is a signed int32 and can be negative.
            // NOTE: We copied this block from below to help V8 optimize it (it works with array, not buffer).
            if (isLE) {
                codepoint = overflow[i] | (overflow[i+1] << 8) | (overflow[i+2] << 16) | (overflow[i+3] << 24);
            } else {
                codepoint = overflow[i+3] | (overflow[i+2] << 8) | (overflow[i+1] << 16) | (overflow[i] << 24);
            }
            overflow.length = 0;

            offset = _writeCodepoint(dst, offset, codepoint, badChar);
        }
    }

    // Main loop. Should be as optimized as possible.
    for (; i < src.length - 3; i += 4) {
        // NOTE: codepoint is a signed int32 and can be negative.
        if (isLE) {
            codepoint = src[i] | (src[i+1] << 8) | (src[i+2] << 16) | (src[i+3] << 24);
        } else {
            codepoint = src[i+3] | (src[i+2] << 8) | (src[i+1] << 16) | (src[i] << 24);
        }
        offset = _writeCodepoint(dst, offset, codepoint, badChar);
    }

    // Keep overflowing bytes.
    for (; i < src.length; i++) {
        overflow.push(src[i]);
    }

    return dst.slice(0, offset).toString('ucs2');
};

function _writeCodepoint(dst, offset, codepoint, badChar) {
    // NOTE: codepoint is signed int32 and can be negative. We keep it that way to help V8 with optimizations.
    if (codepoint < 0 || codepoint > 0x10FFFF) {
        // Not a valid Unicode codepoint
        codepoint = badChar;
    } 

    // Ephemeral Planes: Write high surrogate.
    if (codepoint >= 0x10000) {
        codepoint -= 0x10000;

        var high = 0xD800 | (codepoint >> 10);
        dst[offset++] = high & 0xff;
        dst[offset++] = high >> 8;

        // Low surrogate is written below.
        var codepoint = 0xDC00 | (codepoint & 0x3FF);
    }

    // Write BMP char or low surrogate.
    dst[offset++] = codepoint & 0xff;
    dst[offset++] = codepoint >> 8;

    return offset;
};

Utf32Decoder.prototype.end = function() {
    this.overflow.length = 0;
};

// == UTF-32 Auto codec =============================================================
// Decoder chooses automatically from UTF-32LE and UTF-32BE using BOM and space-based heuristic.
// Defaults to UTF-32LE. http://en.wikipedia.org/wiki/UTF-32
// Encoder/decoder default can be changed: iconv.decode(buf, 'utf32', {defaultEncoding: 'utf-32be'});

// Encoder prepends BOM (which can be overridden with (addBOM: false}).

exports.utf32 = Utf32AutoCodec;
exports.ucs4 = 'utf32';

function Utf32AutoCodec(options, iconv) {
    this.iconv = iconv;
}

Utf32AutoCodec.prototype.encoder = Utf32AutoEncoder;
Utf32AutoCodec.prototype.decoder = Utf32AutoDecoder;

// -- Encoding

function Utf32AutoEncoder(options, codec) {
    options = options || {};

    if (options.addBOM === undefined)
        options.addBOM = true;

    this.encoder = codec.iconv.getEncoder(options.defaultEncoding || 'utf-32le', options);
}

Utf32AutoEncoder.prototype.write = function(str) {
    return this.encoder.write(str);
};

Utf32AutoEncoder.prototype.end = function() {
    return this.encoder.end();
};

// -- Decoding

function Utf32AutoDecoder(options, codec) {
    this.decoder = null;
    this.initialBufs = [];
    this.initialBufsLen = 0;
    this.options = options || {};
    this.iconv = codec.iconv;
}

Utf32AutoDecoder.prototype.write = function(buf) {
    if (!this.decoder) { 
        // Codec is not chosen yet. Accumulate initial bytes.
        this.initialBufs.push(buf);
        this.initialBufsLen += buf.length;

        if (this.initialBufsLen < 32) // We need more bytes to use space heuristic (see below)
            return '';

        // We have enough bytes -> detect endianness.
        var encoding = detectEncoding(this.initialBufs, this.options.defaultEncoding);
        this.decoder = this.iconv.getDecoder(encoding, this.options);

        var resStr = '';
        for (var i = 0; i < this.initialBufs.length; i++)
            resStr += this.decoder.write(this.initialBufs[i]);

        this.initialBufs.length = this.initialBufsLen = 0;
        return resStr;
    }

    return this.decoder.write(buf);
};

Utf32AutoDecoder.prototype.end = function() {
    if (!this.decoder) {
        var encoding = detectEncoding(this.initialBufs, this.options.defaultEncoding);
        this.decoder = this.iconv.getDecoder(encoding, this.options);

        var resStr = '';
        for (var i = 0; i < this.initialBufs.length; i++)
            resStr += this.decoder.write(this.initialBufs[i]);

        var trail = this.decoder.end();
        if (trail)
            resStr += trail;

        this.initialBufs.length = this.initialBufsLen = 0;
        return resStr;
    }

    return this.decoder.end();
};

function detectEncoding(bufs, defaultEncoding) {
    var b = [];
    var charsProcessed = 0;
    var invalidLE = 0, invalidBE = 0;   // Number of invalid chars when decoded as LE or BE.
    var bmpCharsLE = 0, bmpCharsBE = 0; // Number of BMP chars when decoded as LE or BE.

    outer_loop:
    for (var i = 0; i < bufs.length; i++) {
        var buf = bufs[i];
        for (var j = 0; j < buf.length; j++) {
            b.push(buf[j]);
            if (b.length === 4) {
                if (charsProcessed === 0) {
                    // Check BOM first.
                    if (b[0] === 0xFF && b[1] === 0xFE && b[2] === 0 && b[3] === 0) {
                        return 'utf-32le';
                    }
                    if (b[0] === 0 && b[1] === 0 && b[2] === 0xFE && b[3] === 0xFF) {
                        return 'utf-32be';
                    }
                }

                if (b[0] !== 0 || b[1] > 0x10) invalidBE++;
                if (b[3] !== 0 || b[2] > 0x10) invalidLE++;

                if (b[0] === 0 && b[1] === 0 && (b[2] !== 0 || b[3] !== 0)) bmpCharsBE++;
                if ((b[0] !== 0 || b[1] !== 0) && b[2] === 0 && b[3] === 0) bmpCharsLE++;

                b.length = 0;
                charsProcessed++;

                if (charsProcessed >= 100) {
                    break outer_loop;
                }
            }
        }
    }

    // Make decisions.
    if (bmpCharsBE - invalidBE > bmpCharsLE - invalidLE)  return 'utf-32be';
    if (bmpCharsBE - invalidBE < bmpCharsLE - invalidLE)  return 'utf-32le';

    // Couldn't decide (likely all zeros or not enough data).
    return defaultEncoding || 'utf-32le';
}


/***/ }),

/***/ "./node_modules/iconv-lite/encodings/utf7.js":
/*!***************************************************!*\
  !*** ./node_modules/iconv-lite/encodings/utf7.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

var Buffer = __webpack_require__(/*! safer-buffer */ "./node_modules/safer-buffer/safer.js").Buffer;

// UTF-7 codec, according to https://tools.ietf.org/html/rfc2152
// See also below a UTF-7-IMAP codec, according to http://tools.ietf.org/html/rfc3501#section-5.1.3

exports.utf7 = Utf7Codec;
exports.unicode11utf7 = 'utf7'; // Alias UNICODE-1-1-UTF-7
function Utf7Codec(codecOptions, iconv) {
    this.iconv = iconv;
};

Utf7Codec.prototype.encoder = Utf7Encoder;
Utf7Codec.prototype.decoder = Utf7Decoder;
Utf7Codec.prototype.bomAware = true;


// -- Encoding

var nonDirectChars = /[^A-Za-z0-9'\(\),-\.\/:\? \n\r\t]+/g;

function Utf7Encoder(options, codec) {
    this.iconv = codec.iconv;
}

Utf7Encoder.prototype.write = function(str) {
    // Naive implementation.
    // Non-direct chars are encoded as "+<base64>-"; single "+" char is encoded as "+-".
    return Buffer.from(str.replace(nonDirectChars, function(chunk) {
        return "+" + (chunk === '+' ? '' : 
            this.iconv.encode(chunk, 'utf16-be').toString('base64').replace(/=+$/, '')) 
            + "-";
    }.bind(this)));
}

Utf7Encoder.prototype.end = function() {
}


// -- Decoding

function Utf7Decoder(options, codec) {
    this.iconv = codec.iconv;
    this.inBase64 = false;
    this.base64Accum = '';
}

var base64Regex = /[A-Za-z0-9\/+]/;
var base64Chars = [];
for (var i = 0; i < 256; i++)
    base64Chars[i] = base64Regex.test(String.fromCharCode(i));

var plusChar = '+'.charCodeAt(0), 
    minusChar = '-'.charCodeAt(0),
    andChar = '&'.charCodeAt(0);

Utf7Decoder.prototype.write = function(buf) {
    var res = "", lastI = 0,
        inBase64 = this.inBase64,
        base64Accum = this.base64Accum;

    // The decoder is more involved as we must handle chunks in stream.

    for (var i = 0; i < buf.length; i++) {
        if (!inBase64) { // We're in direct mode.
            // Write direct chars until '+'
            if (buf[i] == plusChar) {
                res += this.iconv.decode(buf.slice(lastI, i), "ascii"); // Write direct chars.
                lastI = i+1;
                inBase64 = true;
            }
        } else { // We decode base64.
            if (!base64Chars[buf[i]]) { // Base64 ended.
                if (i == lastI && buf[i] == minusChar) {// "+-" -> "+"
                    res += "+";
                } else {
                    var b64str = base64Accum + this.iconv.decode(buf.slice(lastI, i), "ascii");
                    res += this.iconv.decode(Buffer.from(b64str, 'base64'), "utf16-be");
                }

                if (buf[i] != minusChar) // Minus is absorbed after base64.
                    i--;

                lastI = i+1;
                inBase64 = false;
                base64Accum = '';
            }
        }
    }

    if (!inBase64) {
        res += this.iconv.decode(buf.slice(lastI), "ascii"); // Write direct chars.
    } else {
        var b64str = base64Accum + this.iconv.decode(buf.slice(lastI), "ascii");

        var canBeDecoded = b64str.length - (b64str.length % 8); // Minimal chunk: 2 quads -> 2x3 bytes -> 3 chars.
        base64Accum = b64str.slice(canBeDecoded); // The rest will be decoded in future.
        b64str = b64str.slice(0, canBeDecoded);

        res += this.iconv.decode(Buffer.from(b64str, 'base64'), "utf16-be");
    }

    this.inBase64 = inBase64;
    this.base64Accum = base64Accum;

    return res;
}

Utf7Decoder.prototype.end = function() {
    var res = "";
    if (this.inBase64 && this.base64Accum.length > 0)
        res = this.iconv.decode(Buffer.from(this.base64Accum, 'base64'), "utf16-be");

    this.inBase64 = false;
    this.base64Accum = '';
    return res;
}


// UTF-7-IMAP codec.
// RFC3501 Sec. 5.1.3 Modified UTF-7 (http://tools.ietf.org/html/rfc3501#section-5.1.3)
// Differences:
//  * Base64 part is started by "&" instead of "+"
//  * Direct characters are 0x20-0x7E, except "&" (0x26)
//  * In Base64, "," is used instead of "/"
//  * Base64 must not be used to represent direct characters.
//  * No implicit shift back from Base64 (should always end with '-')
//  * String must end in non-shifted position.
//  * "-&" while in base64 is not allowed.


exports.utf7imap = Utf7IMAPCodec;
function Utf7IMAPCodec(codecOptions, iconv) {
    this.iconv = iconv;
};

Utf7IMAPCodec.prototype.encoder = Utf7IMAPEncoder;
Utf7IMAPCodec.prototype.decoder = Utf7IMAPDecoder;
Utf7IMAPCodec.prototype.bomAware = true;


// -- Encoding

function Utf7IMAPEncoder(options, codec) {
    this.iconv = codec.iconv;
    this.inBase64 = false;
    this.base64Accum = Buffer.alloc(6);
    this.base64AccumIdx = 0;
}

Utf7IMAPEncoder.prototype.write = function(str) {
    var inBase64 = this.inBase64,
        base64Accum = this.base64Accum,
        base64AccumIdx = this.base64AccumIdx,
        buf = Buffer.alloc(str.length*5 + 10), bufIdx = 0;

    for (var i = 0; i < str.length; i++) {
        var uChar = str.charCodeAt(i);
        if (0x20 <= uChar && uChar <= 0x7E) { // Direct character or '&'.
            if (inBase64) {
                if (base64AccumIdx > 0) {
                    bufIdx += buf.write(base64Accum.slice(0, base64AccumIdx).toString('base64').replace(/\//g, ',').replace(/=+$/, ''), bufIdx);
                    base64AccumIdx = 0;
                }

                buf[bufIdx++] = minusChar; // Write '-', then go to direct mode.
                inBase64 = false;
            }

            if (!inBase64) {
                buf[bufIdx++] = uChar; // Write direct character

                if (uChar === andChar)  // Ampersand -> '&-'
                    buf[bufIdx++] = minusChar;
            }

        } else { // Non-direct character
            if (!inBase64) {
                buf[bufIdx++] = andChar; // Write '&', then go to base64 mode.
                inBase64 = true;
            }
            if (inBase64) {
                base64Accum[base64AccumIdx++] = uChar >> 8;
                base64Accum[base64AccumIdx++] = uChar & 0xFF;

                if (base64AccumIdx == base64Accum.length) {
                    bufIdx += buf.write(base64Accum.toString('base64').replace(/\//g, ','), bufIdx);
                    base64AccumIdx = 0;
                }
            }
        }
    }

    this.inBase64 = inBase64;
    this.base64AccumIdx = base64AccumIdx;

    return buf.slice(0, bufIdx);
}

Utf7IMAPEncoder.prototype.end = function() {
    var buf = Buffer.alloc(10), bufIdx = 0;
    if (this.inBase64) {
        if (this.base64AccumIdx > 0) {
            bufIdx += buf.write(this.base64Accum.slice(0, this.base64AccumIdx).toString('base64').replace(/\//g, ',').replace(/=+$/, ''), bufIdx);
            this.base64AccumIdx = 0;
        }

        buf[bufIdx++] = minusChar; // Write '-', then go to direct mode.
        this.inBase64 = false;
    }

    return buf.slice(0, bufIdx);
}


// -- Decoding

function Utf7IMAPDecoder(options, codec) {
    this.iconv = codec.iconv;
    this.inBase64 = false;
    this.base64Accum = '';
}

var base64IMAPChars = base64Chars.slice();
base64IMAPChars[','.charCodeAt(0)] = true;

Utf7IMAPDecoder.prototype.write = function(buf) {
    var res = "", lastI = 0,
        inBase64 = this.inBase64,
        base64Accum = this.base64Accum;

    // The decoder is more involved as we must handle chunks in stream.
    // It is forgiving, closer to standard UTF-7 (for example, '-' is optional at the end).

    for (var i = 0; i < buf.length; i++) {
        if (!inBase64) { // We're in direct mode.
            // Write direct chars until '&'
            if (buf[i] == andChar) {
                res += this.iconv.decode(buf.slice(lastI, i), "ascii"); // Write direct chars.
                lastI = i+1;
                inBase64 = true;
            }
        } else { // We decode base64.
            if (!base64IMAPChars[buf[i]]) { // Base64 ended.
                if (i == lastI && buf[i] == minusChar) { // "&-" -> "&"
                    res += "&";
                } else {
                    var b64str = base64Accum + this.iconv.decode(buf.slice(lastI, i), "ascii").replace(/,/g, '/');
                    res += this.iconv.decode(Buffer.from(b64str, 'base64'), "utf16-be");
                }

                if (buf[i] != minusChar) // Minus may be absorbed after base64.
                    i--;

                lastI = i+1;
                inBase64 = false;
                base64Accum = '';
            }
        }
    }

    if (!inBase64) {
        res += this.iconv.decode(buf.slice(lastI), "ascii"); // Write direct chars.
    } else {
        var b64str = base64Accum + this.iconv.decode(buf.slice(lastI), "ascii").replace(/,/g, '/');

        var canBeDecoded = b64str.length - (b64str.length % 8); // Minimal chunk: 2 quads -> 2x3 bytes -> 3 chars.
        base64Accum = b64str.slice(canBeDecoded); // The rest will be decoded in future.
        b64str = b64str.slice(0, canBeDecoded);

        res += this.iconv.decode(Buffer.from(b64str, 'base64'), "utf16-be");
    }

    this.inBase64 = inBase64;
    this.base64Accum = base64Accum;

    return res;
}

Utf7IMAPDecoder.prototype.end = function() {
    var res = "";
    if (this.inBase64 && this.base64Accum.length > 0)
        res = this.iconv.decode(Buffer.from(this.base64Accum, 'base64'), "utf16-be");

    this.inBase64 = false;
    this.base64Accum = '';
    return res;
}




/***/ }),

/***/ "./node_modules/iconv-lite/lib/bom-handling.js":
/*!*****************************************************!*\
  !*** ./node_modules/iconv-lite/lib/bom-handling.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";


var BOMChar = '\uFEFF';

exports.PrependBOM = PrependBOMWrapper
function PrependBOMWrapper(encoder, options) {
    this.encoder = encoder;
    this.addBOM = true;
}

PrependBOMWrapper.prototype.write = function(str) {
    if (this.addBOM) {
        str = BOMChar + str;
        this.addBOM = false;
    }

    return this.encoder.write(str);
}

PrependBOMWrapper.prototype.end = function() {
    return this.encoder.end();
}


//------------------------------------------------------------------------------

exports.StripBOM = StripBOMWrapper;
function StripBOMWrapper(decoder, options) {
    this.decoder = decoder;
    this.pass = false;
    this.options = options || {};
}

StripBOMWrapper.prototype.write = function(buf) {
    var res = this.decoder.write(buf);
    if (this.pass || !res)
        return res;

    if (res[0] === BOMChar) {
        res = res.slice(1);
        if (typeof this.options.stripBOM === 'function')
            this.options.stripBOM();
    }

    this.pass = true;
    return res;
}

StripBOMWrapper.prototype.end = function() {
    return this.decoder.end();
}



/***/ }),

/***/ "./node_modules/iconv-lite/lib/index.js":
/*!**********************************************!*\
  !*** ./node_modules/iconv-lite/lib/index.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var Buffer = __webpack_require__(/*! safer-buffer */ "./node_modules/safer-buffer/safer.js").Buffer;

var bomHandling = __webpack_require__(/*! ./bom-handling */ "./node_modules/iconv-lite/lib/bom-handling.js"),
    iconv = module.exports;

// All codecs and aliases are kept here, keyed by encoding name/alias.
// They are lazy loaded in `iconv.getCodec` from `encodings/index.js`.
iconv.encodings = null;

// Characters emitted in case of error.
iconv.defaultCharUnicode = '�';
iconv.defaultCharSingleByte = '?';

// Public API.
iconv.encode = function encode(str, encoding, options) {
    str = "" + (str || ""); // Ensure string.

    var encoder = iconv.getEncoder(encoding, options);

    var res = encoder.write(str);
    var trail = encoder.end();
    
    return (trail && trail.length > 0) ? Buffer.concat([res, trail]) : res;
}

iconv.decode = function decode(buf, encoding, options) {
    if (typeof buf === 'string') {
        if (!iconv.skipDecodeWarning) {
            console.error('Iconv-lite warning: decode()-ing strings is deprecated. Refer to https://github.com/ashtuchkin/iconv-lite/wiki/Use-Buffers-when-decoding');
            iconv.skipDecodeWarning = true;
        }

        buf = Buffer.from("" + (buf || ""), "binary"); // Ensure buffer.
    }

    var decoder = iconv.getDecoder(encoding, options);

    var res = decoder.write(buf);
    var trail = decoder.end();

    return trail ? (res + trail) : res;
}

iconv.encodingExists = function encodingExists(enc) {
    try {
        iconv.getCodec(enc);
        return true;
    } catch (e) {
        return false;
    }
}

// Legacy aliases to convert functions
iconv.toEncoding = iconv.encode;
iconv.fromEncoding = iconv.decode;

// Search for a codec in iconv.encodings. Cache codec data in iconv._codecDataCache.
iconv._codecDataCache = {};
iconv.getCodec = function getCodec(encoding) {
    if (!iconv.encodings)
        iconv.encodings = __webpack_require__(/*! ../encodings */ "./node_modules/iconv-lite/encodings/index.js"); // Lazy load all encoding definitions.
    
    // Canonicalize encoding name: strip all non-alphanumeric chars and appended year.
    var enc = iconv._canonicalizeEncoding(encoding);

    // Traverse iconv.encodings to find actual codec.
    var codecOptions = {};
    while (true) {
        var codec = iconv._codecDataCache[enc];
        if (codec)
            return codec;

        var codecDef = iconv.encodings[enc];

        switch (typeof codecDef) {
            case "string": // Direct alias to other encoding.
                enc = codecDef;
                break;

            case "object": // Alias with options. Can be layered.
                for (var key in codecDef)
                    codecOptions[key] = codecDef[key];

                if (!codecOptions.encodingName)
                    codecOptions.encodingName = enc;
                
                enc = codecDef.type;
                break;

            case "function": // Codec itself.
                if (!codecOptions.encodingName)
                    codecOptions.encodingName = enc;

                // The codec function must load all tables and return object with .encoder and .decoder methods.
                // It'll be called only once (for each different options object).
                codec = new codecDef(codecOptions, iconv);

                iconv._codecDataCache[codecOptions.encodingName] = codec; // Save it to be reused later.
                return codec;

            default:
                throw new Error("Encoding not recognized: '" + encoding + "' (searched as: '"+enc+"')");
        }
    }
}

iconv._canonicalizeEncoding = function(encoding) {
    // Canonicalize encoding name: strip all non-alphanumeric chars and appended year.
    return (''+encoding).toLowerCase().replace(/:\d{4}$|[^0-9a-z]/g, "");
}

iconv.getEncoder = function getEncoder(encoding, options) {
    var codec = iconv.getCodec(encoding),
        encoder = new codec.encoder(options, codec);

    if (codec.bomAware && options && options.addBOM)
        encoder = new bomHandling.PrependBOM(encoder, options);

    return encoder;
}

iconv.getDecoder = function getDecoder(encoding, options) {
    var codec = iconv.getCodec(encoding),
        decoder = new codec.decoder(options, codec);

    if (codec.bomAware && !(options && options.stripBOM === false))
        decoder = new bomHandling.StripBOM(decoder, options);

    return decoder;
}

// Streaming API
// NOTE: Streaming API naturally depends on 'stream' module from Node.js. Unfortunately in browser environments this module can add
// up to 100Kb to the output bundle. To avoid unnecessary code bloat, we don't enable Streaming API in browser by default.
// If you would like to enable it explicitly, please add the following code to your app:
// > iconv.enableStreamingAPI(require('stream'));
iconv.enableStreamingAPI = function enableStreamingAPI(stream_module) {
    if (iconv.supportsStreams)
        return;

    // Dependency-inject stream module to create IconvLite stream classes.
    var streams = __webpack_require__(/*! ./streams */ "./node_modules/iconv-lite/lib/streams.js")(stream_module);

    // Not public API yet, but expose the stream classes.
    iconv.IconvLiteEncoderStream = streams.IconvLiteEncoderStream;
    iconv.IconvLiteDecoderStream = streams.IconvLiteDecoderStream;

    // Streaming API.
    iconv.encodeStream = function encodeStream(encoding, options) {
        return new iconv.IconvLiteEncoderStream(iconv.getEncoder(encoding, options), options);
    }

    iconv.decodeStream = function decodeStream(encoding, options) {
        return new iconv.IconvLiteDecoderStream(iconv.getDecoder(encoding, options), options);
    }

    iconv.supportsStreams = true;
}

// Enable Streaming API automatically if 'stream' module is available and non-empty (the majority of environments).
var stream_module;
try {
    stream_module = __webpack_require__(/*! stream */ "?943a");
} catch (e) {}

if (stream_module && stream_module.Transform) {
    iconv.enableStreamingAPI(stream_module);

} else {
    // In rare cases where 'stream' module is not available by default, throw a helpful exception.
    iconv.encodeStream = iconv.decodeStream = function() {
        throw new Error("iconv-lite Streaming API is not enabled. Use iconv.enableStreamingAPI(require('stream')); to enable it.");
    };
}

if (false) {}


/***/ }),

/***/ "./node_modules/iconv-lite/lib/streams.js":
/*!************************************************!*\
  !*** ./node_modules/iconv-lite/lib/streams.js ***!
  \************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var Buffer = __webpack_require__(/*! safer-buffer */ "./node_modules/safer-buffer/safer.js").Buffer;

// NOTE: Due to 'stream' module being pretty large (~100Kb, significant in browser environments), 
// we opt to dependency-inject it instead of creating a hard dependency.
module.exports = function(stream_module) {
    var Transform = stream_module.Transform;

    // == Encoder stream =======================================================

    function IconvLiteEncoderStream(conv, options) {
        this.conv = conv;
        options = options || {};
        options.decodeStrings = false; // We accept only strings, so we don't need to decode them.
        Transform.call(this, options);
    }

    IconvLiteEncoderStream.prototype = Object.create(Transform.prototype, {
        constructor: { value: IconvLiteEncoderStream }
    });

    IconvLiteEncoderStream.prototype._transform = function(chunk, encoding, done) {
        if (typeof chunk != 'string')
            return done(new Error("Iconv encoding stream needs strings as its input."));
        try {
            var res = this.conv.write(chunk);
            if (res && res.length) this.push(res);
            done();
        }
        catch (e) {
            done(e);
        }
    }

    IconvLiteEncoderStream.prototype._flush = function(done) {
        try {
            var res = this.conv.end();
            if (res && res.length) this.push(res);
            done();
        }
        catch (e) {
            done(e);
        }
    }

    IconvLiteEncoderStream.prototype.collect = function(cb) {
        var chunks = [];
        this.on('error', cb);
        this.on('data', function(chunk) { chunks.push(chunk); });
        this.on('end', function() {
            cb(null, Buffer.concat(chunks));
        });
        return this;
    }


    // == Decoder stream =======================================================

    function IconvLiteDecoderStream(conv, options) {
        this.conv = conv;
        options = options || {};
        options.encoding = this.encoding = 'utf8'; // We output strings.
        Transform.call(this, options);
    }

    IconvLiteDecoderStream.prototype = Object.create(Transform.prototype, {
        constructor: { value: IconvLiteDecoderStream }
    });

    IconvLiteDecoderStream.prototype._transform = function(chunk, encoding, done) {
        if (!Buffer.isBuffer(chunk) && !(chunk instanceof Uint8Array))
            return done(new Error("Iconv decoding stream needs buffers as its input."));
        try {
            var res = this.conv.write(chunk);
            if (res && res.length) this.push(res, this.encoding);
            done();
        }
        catch (e) {
            done(e);
        }
    }

    IconvLiteDecoderStream.prototype._flush = function(done) {
        try {
            var res = this.conv.end();
            if (res && res.length) this.push(res, this.encoding);                
            done();
        }
        catch (e) {
            done(e);
        }
    }

    IconvLiteDecoderStream.prototype.collect = function(cb) {
        var res = '';
        this.on('error', cb);
        this.on('data', function(chunk) { res += chunk; });
        this.on('end', function() {
            cb(null, res);
        });
        return this;
    }

    return {
        IconvLiteEncoderStream: IconvLiteEncoderStream,
        IconvLiteDecoderStream: IconvLiteDecoderStream,
    };
};


/***/ }),

/***/ "./node_modules/ieee754/index.js":
/*!***************************************!*\
  !*** ./node_modules/ieee754/index.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, exports) => {

/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */
exports.read = function (buffer, offset, isLE, mLen, nBytes) {
  var e, m
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var nBits = -7
  var i = isLE ? (nBytes - 1) : 0
  var d = isLE ? -1 : 1
  var s = buffer[offset + i]

  i += d

  e = s & ((1 << (-nBits)) - 1)
  s >>= (-nBits)
  nBits += eLen
  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  m = e & ((1 << (-nBits)) - 1)
  e >>= (-nBits)
  nBits += mLen
  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  if (e === 0) {
    e = 1 - eBias
  } else if (e === eMax) {
    return m ? NaN : ((s ? -1 : 1) * Infinity)
  } else {
    m = m + Math.pow(2, mLen)
    e = e - eBias
  }
  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)
}

exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
  var e, m, c
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)
  var i = isLE ? 0 : (nBytes - 1)
  var d = isLE ? 1 : -1
  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0

  value = Math.abs(value)

  if (isNaN(value) || value === Infinity) {
    m = isNaN(value) ? 1 : 0
    e = eMax
  } else {
    e = Math.floor(Math.log(value) / Math.LN2)
    if (value * (c = Math.pow(2, -e)) < 1) {
      e--
      c *= 2
    }
    if (e + eBias >= 1) {
      value += rt / c
    } else {
      value += rt * Math.pow(2, 1 - eBias)
    }
    if (value * c >= 2) {
      e++
      c /= 2
    }

    if (e + eBias >= eMax) {
      m = 0
      e = eMax
    } else if (e + eBias >= 1) {
      m = ((value * c) - 1) * Math.pow(2, mLen)
      e = e + eBias
    } else {
      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)
      e = 0
    }
  }

  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

  e = (e << mLen) | m
  eLen += mLen
  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

  buffer[offset + i - d] |= s * 128
}


/***/ }),

/***/ "./node_modules/inherits/inherits_browser.js":
/*!***************************************************!*\
  !*** ./node_modules/inherits/inherits_browser.js ***!
  \***************************************************/
/***/ ((module) => {

if (typeof Object.create === 'function') {
  // implementation from standard node.js 'util' module
  module.exports = function inherits(ctor, superCtor) {
    if (superCtor) {
      ctor.super_ = superCtor
      ctor.prototype = Object.create(superCtor.prototype, {
        constructor: {
          value: ctor,
          enumerable: false,
          writable: true,
          configurable: true
        }
      })
    }
  };
} else {
  // old school shim for old browsers
  module.exports = function inherits(ctor, superCtor) {
    if (superCtor) {
      ctor.super_ = superCtor
      var TempCtor = function () {}
      TempCtor.prototype = superCtor.prototype
      ctor.prototype = new TempCtor()
      ctor.prototype.constructor = ctor
    }
  }
}


/***/ }),

/***/ "./node_modules/md5.js/index.js":
/*!**************************************!*\
  !*** ./node_modules/md5.js/index.js ***!
  \**************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")
var HashBase = __webpack_require__(/*! hash-base */ "./node_modules/hash-base/index.js")
var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer

var ARRAY16 = new Array(16)

function MD5 () {
  HashBase.call(this, 64)

  // state
  this._a = 0x67452301
  this._b = 0xefcdab89
  this._c = 0x98badcfe
  this._d = 0x10325476
}

inherits(MD5, HashBase)

MD5.prototype._update = function () {
  var M = ARRAY16
  for (var i = 0; i < 16; ++i) M[i] = this._block.readInt32LE(i * 4)

  var a = this._a
  var b = this._b
  var c = this._c
  var d = this._d

  a = fnF(a, b, c, d, M[0], 0xd76aa478, 7)
  d = fnF(d, a, b, c, M[1], 0xe8c7b756, 12)
  c = fnF(c, d, a, b, M[2], 0x242070db, 17)
  b = fnF(b, c, d, a, M[3], 0xc1bdceee, 22)
  a = fnF(a, b, c, d, M[4], 0xf57c0faf, 7)
  d = fnF(d, a, b, c, M[5], 0x4787c62a, 12)
  c = fnF(c, d, a, b, M[6], 0xa8304613, 17)
  b = fnF(b, c, d, a, M[7], 0xfd469501, 22)
  a = fnF(a, b, c, d, M[8], 0x698098d8, 7)
  d = fnF(d, a, b, c, M[9], 0x8b44f7af, 12)
  c = fnF(c, d, a, b, M[10], 0xffff5bb1, 17)
  b = fnF(b, c, d, a, M[11], 0x895cd7be, 22)
  a = fnF(a, b, c, d, M[12], 0x6b901122, 7)
  d = fnF(d, a, b, c, M[13], 0xfd987193, 12)
  c = fnF(c, d, a, b, M[14], 0xa679438e, 17)
  b = fnF(b, c, d, a, M[15], 0x49b40821, 22)

  a = fnG(a, b, c, d, M[1], 0xf61e2562, 5)
  d = fnG(d, a, b, c, M[6], 0xc040b340, 9)
  c = fnG(c, d, a, b, M[11], 0x265e5a51, 14)
  b = fnG(b, c, d, a, M[0], 0xe9b6c7aa, 20)
  a = fnG(a, b, c, d, M[5], 0xd62f105d, 5)
  d = fnG(d, a, b, c, M[10], 0x02441453, 9)
  c = fnG(c, d, a, b, M[15], 0xd8a1e681, 14)
  b = fnG(b, c, d, a, M[4], 0xe7d3fbc8, 20)
  a = fnG(a, b, c, d, M[9], 0x21e1cde6, 5)
  d = fnG(d, a, b, c, M[14], 0xc33707d6, 9)
  c = fnG(c, d, a, b, M[3], 0xf4d50d87, 14)
  b = fnG(b, c, d, a, M[8], 0x455a14ed, 20)
  a = fnG(a, b, c, d, M[13], 0xa9e3e905, 5)
  d = fnG(d, a, b, c, M[2], 0xfcefa3f8, 9)
  c = fnG(c, d, a, b, M[7], 0x676f02d9, 14)
  b = fnG(b, c, d, a, M[12], 0x8d2a4c8a, 20)

  a = fnH(a, b, c, d, M[5], 0xfffa3942, 4)
  d = fnH(d, a, b, c, M[8], 0x8771f681, 11)
  c = fnH(c, d, a, b, M[11], 0x6d9d6122, 16)
  b = fnH(b, c, d, a, M[14], 0xfde5380c, 23)
  a = fnH(a, b, c, d, M[1], 0xa4beea44, 4)
  d = fnH(d, a, b, c, M[4], 0x4bdecfa9, 11)
  c = fnH(c, d, a, b, M[7], 0xf6bb4b60, 16)
  b = fnH(b, c, d, a, M[10], 0xbebfbc70, 23)
  a = fnH(a, b, c, d, M[13], 0x289b7ec6, 4)
  d = fnH(d, a, b, c, M[0], 0xeaa127fa, 11)
  c = fnH(c, d, a, b, M[3], 0xd4ef3085, 16)
  b = fnH(b, c, d, a, M[6], 0x04881d05, 23)
  a = fnH(a, b, c, d, M[9], 0xd9d4d039, 4)
  d = fnH(d, a, b, c, M[12], 0xe6db99e5, 11)
  c = fnH(c, d, a, b, M[15], 0x1fa27cf8, 16)
  b = fnH(b, c, d, a, M[2], 0xc4ac5665, 23)

  a = fnI(a, b, c, d, M[0], 0xf4292244, 6)
  d = fnI(d, a, b, c, M[7], 0x432aff97, 10)
  c = fnI(c, d, a, b, M[14], 0xab9423a7, 15)
  b = fnI(b, c, d, a, M[5], 0xfc93a039, 21)
  a = fnI(a, b, c, d, M[12], 0x655b59c3, 6)
  d = fnI(d, a, b, c, M[3], 0x8f0ccc92, 10)
  c = fnI(c, d, a, b, M[10], 0xffeff47d, 15)
  b = fnI(b, c, d, a, M[1], 0x85845dd1, 21)
  a = fnI(a, b, c, d, M[8], 0x6fa87e4f, 6)
  d = fnI(d, a, b, c, M[15], 0xfe2ce6e0, 10)
  c = fnI(c, d, a, b, M[6], 0xa3014314, 15)
  b = fnI(b, c, d, a, M[13], 0x4e0811a1, 21)
  a = fnI(a, b, c, d, M[4], 0xf7537e82, 6)
  d = fnI(d, a, b, c, M[11], 0xbd3af235, 10)
  c = fnI(c, d, a, b, M[2], 0x2ad7d2bb, 15)
  b = fnI(b, c, d, a, M[9], 0xeb86d391, 21)

  this._a = (this._a + a) | 0
  this._b = (this._b + b) | 0
  this._c = (this._c + c) | 0
  this._d = (this._d + d) | 0
}

MD5.prototype._digest = function () {
  // create padding and handle blocks
  this._block[this._blockOffset++] = 0x80
  if (this._blockOffset > 56) {
    this._block.fill(0, this._blockOffset, 64)
    this._update()
    this._blockOffset = 0
  }

  this._block.fill(0, this._blockOffset, 56)
  this._block.writeUInt32LE(this._length[0], 56)
  this._block.writeUInt32LE(this._length[1], 60)
  this._update()

  // produce result
  var buffer = Buffer.allocUnsafe(16)
  buffer.writeInt32LE(this._a, 0)
  buffer.writeInt32LE(this._b, 4)
  buffer.writeInt32LE(this._c, 8)
  buffer.writeInt32LE(this._d, 12)
  return buffer
}

function rotl (x, n) {
  return (x << n) | (x >>> (32 - n))
}

function fnF (a, b, c, d, m, k, s) {
  return (rotl((a + ((b & c) | ((~b) & d)) + m + k) | 0, s) + b) | 0
}

function fnG (a, b, c, d, m, k, s) {
  return (rotl((a + ((b & d) | (c & (~d))) + m + k) | 0, s) + b) | 0
}

function fnH (a, b, c, d, m, k, s) {
  return (rotl((a + (b ^ c ^ d) + m + k) | 0, s) + b) | 0
}

function fnI (a, b, c, d, m, k, s) {
  return (rotl((a + ((c ^ (b | (~d)))) + m + k) | 0, s) + b) | 0
}

module.exports = MD5


/***/ }),

/***/ "./node_modules/miller-rabin/lib/mr.js":
/*!*********************************************!*\
  !*** ./node_modules/miller-rabin/lib/mr.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var bn = __webpack_require__(/*! bn.js */ "./node_modules/bn.js/lib/bn.js");
var brorand = __webpack_require__(/*! brorand */ "./node_modules/brorand/index.js");

function MillerRabin(rand) {
  this.rand = rand || new brorand.Rand();
}
module.exports = MillerRabin;

MillerRabin.create = function create(rand) {
  return new MillerRabin(rand);
};

MillerRabin.prototype._randbelow = function _randbelow(n) {
  var len = n.bitLength();
  var min_bytes = Math.ceil(len / 8);

  // Generage random bytes until a number less than n is found.
  // This ensures that 0..n-1 have an equal probability of being selected.
  do
    var a = new bn(this.rand.generate(min_bytes));
  while (a.cmp(n) >= 0);

  return a;
};

MillerRabin.prototype._randrange = function _randrange(start, stop) {
  // Generate a random number greater than or equal to start and less than stop.
  var size = stop.sub(start);
  return start.add(this._randbelow(size));
};

MillerRabin.prototype.test = function test(n, k, cb) {
  var len = n.bitLength();
  var red = bn.mont(n);
  var rone = new bn(1).toRed(red);

  if (!k)
    k = Math.max(1, (len / 48) | 0);

  // Find d and s, (n - 1) = (2 ^ s) * d;
  var n1 = n.subn(1);
  for (var s = 0; !n1.testn(s); s++) {}
  var d = n.shrn(s);

  var rn1 = n1.toRed(red);

  var prime = true;
  for (; k > 0; k--) {
    var a = this._randrange(new bn(2), n1);
    if (cb)
      cb(a);

    var x = a.toRed(red).redPow(d);
    if (x.cmp(rone) === 0 || x.cmp(rn1) === 0)
      continue;

    for (var i = 1; i < s; i++) {
      x = x.redSqr();

      if (x.cmp(rone) === 0)
        return false;
      if (x.cmp(rn1) === 0)
        break;
    }

    if (i === s)
      return false;
  }

  return prime;
};

MillerRabin.prototype.getDivisor = function getDivisor(n, k) {
  var len = n.bitLength();
  var red = bn.mont(n);
  var rone = new bn(1).toRed(red);

  if (!k)
    k = Math.max(1, (len / 48) | 0);

  // Find d and s, (n - 1) = (2 ^ s) * d;
  var n1 = n.subn(1);
  for (var s = 0; !n1.testn(s); s++) {}
  var d = n.shrn(s);

  var rn1 = n1.toRed(red);

  for (; k > 0; k--) {
    var a = this._randrange(new bn(2), n1);

    var g = n.gcd(a);
    if (g.cmpn(1) !== 0)
      return g;

    var x = a.toRed(red).redPow(d);
    if (x.cmp(rone) === 0 || x.cmp(rn1) === 0)
      continue;

    for (var i = 1; i < s; i++) {
      x = x.redSqr();

      if (x.cmp(rone) === 0)
        return x.fromRed().subn(1).gcd(n);
      if (x.cmp(rn1) === 0)
        break;
    }

    if (i === s) {
      x = x.redSqr();
      return x.fromRed().subn(1).gcd(n);
    }
  }

  return false;
};


/***/ }),

/***/ "./node_modules/minimalistic-assert/index.js":
/*!***************************************************!*\
  !*** ./node_modules/minimalistic-assert/index.js ***!
  \***************************************************/
/***/ ((module) => {

module.exports = assert;

function assert(val, msg) {
  if (!val)
    throw new Error(msg || 'Assertion failed');
}

assert.equal = function assertEqual(l, r, msg) {
  if (l != r)
    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));
};


/***/ }),

/***/ "./node_modules/minimalistic-crypto-utils/lib/utils.js":
/*!*************************************************************!*\
  !*** ./node_modules/minimalistic-crypto-utils/lib/utils.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";


var utils = exports;

function toArray(msg, enc) {
  if (Array.isArray(msg))
    return msg.slice();
  if (!msg)
    return [];
  var res = [];
  if (typeof msg !== 'string') {
    for (var i = 0; i < msg.length; i++)
      res[i] = msg[i] | 0;
    return res;
  }
  if (enc === 'hex') {
    msg = msg.replace(/[^a-z0-9]+/ig, '');
    if (msg.length % 2 !== 0)
      msg = '0' + msg;
    for (var i = 0; i < msg.length; i += 2)
      res.push(parseInt(msg[i] + msg[i + 1], 16));
  } else {
    for (var i = 0; i < msg.length; i++) {
      var c = msg.charCodeAt(i);
      var hi = c >> 8;
      var lo = c & 0xff;
      if (hi)
        res.push(hi, lo);
      else
        res.push(lo);
    }
  }
  return res;
}
utils.toArray = toArray;

function zero2(word) {
  if (word.length === 1)
    return '0' + word;
  else
    return word;
}
utils.zero2 = zero2;

function toHex(msg) {
  var res = '';
  for (var i = 0; i < msg.length; i++)
    res += zero2(msg[i].toString(16));
  return res;
}
utils.toHex = toHex;

utils.encode = function encode(arr, enc) {
  if (enc === 'hex')
    return toHex(arr);
  else
    return arr;
};


/***/ }),

/***/ "./node_modules/once/once.js":
/*!***********************************!*\
  !*** ./node_modules/once/once.js ***!
  \***********************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var wrappy = __webpack_require__(/*! wrappy */ "./node_modules/wrappy/wrappy.js")
module.exports = wrappy(once)
module.exports.strict = wrappy(onceStrict)

once.proto = once(function () {
  Object.defineProperty(Function.prototype, 'once', {
    value: function () {
      return once(this)
    },
    configurable: true
  })

  Object.defineProperty(Function.prototype, 'onceStrict', {
    value: function () {
      return onceStrict(this)
    },
    configurable: true
  })
})

function once (fn) {
  var f = function () {
    if (f.called) return f.value
    f.called = true
    return f.value = fn.apply(this, arguments)
  }
  f.called = false
  return f
}

function onceStrict (fn) {
  var f = function () {
    if (f.called)
      throw new Error(f.onceError)
    f.called = true
    return f.value = fn.apply(this, arguments)
  }
  var name = fn.name || 'Function wrapped with `once`'
  f.onceError = name + " shouldn't be called more than once"
  f.called = false
  return f
}


/***/ }),

/***/ "./node_modules/parse-asn1/asn1.js":
/*!*****************************************!*\
  !*** ./node_modules/parse-asn1/asn1.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
// from https://github.com/indutny/self-signed/blob/gh-pages/lib/asn1.js
// Fedor, you are amazing.


var asn1 = __webpack_require__(/*! asn1.js */ "./node_modules/asn1.js/lib/asn1.js")

exports.certificate = __webpack_require__(/*! ./certificate */ "./node_modules/parse-asn1/certificate.js")

var RSAPrivateKey = asn1.define('RSAPrivateKey', function () {
  this.seq().obj(
    this.key('version').int(),
    this.key('modulus').int(),
    this.key('publicExponent').int(),
    this.key('privateExponent').int(),
    this.key('prime1').int(),
    this.key('prime2').int(),
    this.key('exponent1').int(),
    this.key('exponent2').int(),
    this.key('coefficient').int()
  )
})
exports.RSAPrivateKey = RSAPrivateKey

var RSAPublicKey = asn1.define('RSAPublicKey', function () {
  this.seq().obj(
    this.key('modulus').int(),
    this.key('publicExponent').int()
  )
})
exports.RSAPublicKey = RSAPublicKey

var PublicKey = asn1.define('SubjectPublicKeyInfo', function () {
  this.seq().obj(
    this.key('algorithm').use(AlgorithmIdentifier),
    this.key('subjectPublicKey').bitstr()
  )
})
exports.PublicKey = PublicKey

var AlgorithmIdentifier = asn1.define('AlgorithmIdentifier', function () {
  this.seq().obj(
    this.key('algorithm').objid(),
    this.key('none').null_().optional(),
    this.key('curve').objid().optional(),
    this.key('params').seq().obj(
      this.key('p').int(),
      this.key('q').int(),
      this.key('g').int()
    ).optional()
  )
})

var PrivateKeyInfo = asn1.define('PrivateKeyInfo', function () {
  this.seq().obj(
    this.key('version').int(),
    this.key('algorithm').use(AlgorithmIdentifier),
    this.key('subjectPrivateKey').octstr()
  )
})
exports.PrivateKey = PrivateKeyInfo
var EncryptedPrivateKeyInfo = asn1.define('EncryptedPrivateKeyInfo', function () {
  this.seq().obj(
    this.key('algorithm').seq().obj(
      this.key('id').objid(),
      this.key('decrypt').seq().obj(
        this.key('kde').seq().obj(
          this.key('id').objid(),
          this.key('kdeparams').seq().obj(
            this.key('salt').octstr(),
            this.key('iters').int()
          )
        ),
        this.key('cipher').seq().obj(
          this.key('algo').objid(),
          this.key('iv').octstr()
        )
      )
    ),
    this.key('subjectPrivateKey').octstr()
  )
})

exports.EncryptedPrivateKey = EncryptedPrivateKeyInfo

var DSAPrivateKey = asn1.define('DSAPrivateKey', function () {
  this.seq().obj(
    this.key('version').int(),
    this.key('p').int(),
    this.key('q').int(),
    this.key('g').int(),
    this.key('pub_key').int(),
    this.key('priv_key').int()
  )
})
exports.DSAPrivateKey = DSAPrivateKey

exports.DSAparam = asn1.define('DSAparam', function () {
  this.int()
})

var ECPrivateKey = asn1.define('ECPrivateKey', function () {
  this.seq().obj(
    this.key('version').int(),
    this.key('privateKey').octstr(),
    this.key('parameters').optional().explicit(0).use(ECParameters),
    this.key('publicKey').optional().explicit(1).bitstr()
  )
})
exports.ECPrivateKey = ECPrivateKey

var ECParameters = asn1.define('ECParameters', function () {
  this.choice({
    namedCurve: this.objid()
  })
})

exports.signature = asn1.define('signature', function () {
  this.seq().obj(
    this.key('r').int(),
    this.key('s').int()
  )
})


/***/ }),

/***/ "./node_modules/parse-asn1/certificate.js":
/*!************************************************!*\
  !*** ./node_modules/parse-asn1/certificate.js ***!
  \************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
// from https://github.com/Rantanen/node-dtls/blob/25a7dc861bda38cfeac93a723500eea4f0ac2e86/Certificate.js
// thanks to @Rantanen



var asn = __webpack_require__(/*! asn1.js */ "./node_modules/asn1.js/lib/asn1.js")

var Time = asn.define('Time', function () {
  this.choice({
    utcTime: this.utctime(),
    generalTime: this.gentime()
  })
})

var AttributeTypeValue = asn.define('AttributeTypeValue', function () {
  this.seq().obj(
    this.key('type').objid(),
    this.key('value').any()
  )
})

var AlgorithmIdentifier = asn.define('AlgorithmIdentifier', function () {
  this.seq().obj(
    this.key('algorithm').objid(),
    this.key('parameters').optional(),
    this.key('curve').objid().optional()
  )
})

var SubjectPublicKeyInfo = asn.define('SubjectPublicKeyInfo', function () {
  this.seq().obj(
    this.key('algorithm').use(AlgorithmIdentifier),
    this.key('subjectPublicKey').bitstr()
  )
})

var RelativeDistinguishedName = asn.define('RelativeDistinguishedName', function () {
  this.setof(AttributeTypeValue)
})

var RDNSequence = asn.define('RDNSequence', function () {
  this.seqof(RelativeDistinguishedName)
})

var Name = asn.define('Name', function () {
  this.choice({
    rdnSequence: this.use(RDNSequence)
  })
})

var Validity = asn.define('Validity', function () {
  this.seq().obj(
    this.key('notBefore').use(Time),
    this.key('notAfter').use(Time)
  )
})

var Extension = asn.define('Extension', function () {
  this.seq().obj(
    this.key('extnID').objid(),
    this.key('critical').bool().def(false),
    this.key('extnValue').octstr()
  )
})

var TBSCertificate = asn.define('TBSCertificate', function () {
  this.seq().obj(
    this.key('version').explicit(0).int().optional(),
    this.key('serialNumber').int(),
    this.key('signature').use(AlgorithmIdentifier),
    this.key('issuer').use(Name),
    this.key('validity').use(Validity),
    this.key('subject').use(Name),
    this.key('subjectPublicKeyInfo').use(SubjectPublicKeyInfo),
    this.key('issuerUniqueID').implicit(1).bitstr().optional(),
    this.key('subjectUniqueID').implicit(2).bitstr().optional(),
    this.key('extensions').explicit(3).seqof(Extension).optional()
  )
})

var X509Certificate = asn.define('X509Certificate', function () {
  this.seq().obj(
    this.key('tbsCertificate').use(TBSCertificate),
    this.key('signatureAlgorithm').use(AlgorithmIdentifier),
    this.key('signatureValue').bitstr()
  )
})

module.exports = X509Certificate


/***/ }),

/***/ "./node_modules/parse-asn1/fixProc.js":
/*!********************************************!*\
  !*** ./node_modules/parse-asn1/fixProc.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// adapted from https://github.com/apatil/pemstrip
var findProc = /Proc-Type: 4,ENCRYPTED[\n\r]+DEK-Info: AES-((?:128)|(?:192)|(?:256))-CBC,([0-9A-H]+)[\n\r]+([0-9A-z\n\r+/=]+)[\n\r]+/m
var startRegex = /^-----BEGIN ((?:.*? KEY)|CERTIFICATE)-----/m
var fullRegex = /^-----BEGIN ((?:.*? KEY)|CERTIFICATE)-----([0-9A-z\n\r+/=]+)-----END \1-----$/m
var evp = __webpack_require__(/*! evp_bytestokey */ "./node_modules/evp_bytestokey/index.js")
var ciphers = __webpack_require__(/*! browserify-aes */ "./node_modules/browserify-aes/browser.js")
var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer
module.exports = function (okey, password) {
  var key = okey.toString()
  var match = key.match(findProc)
  var decrypted
  if (!match) {
    var match2 = key.match(fullRegex)
    decrypted = Buffer.from(match2[2].replace(/[\r\n]/g, ''), 'base64')
  } else {
    var suite = 'aes' + match[1]
    var iv = Buffer.from(match[2], 'hex')
    var cipherText = Buffer.from(match[3].replace(/[\r\n]/g, ''), 'base64')
    var cipherKey = evp(password, iv.slice(0, 8), parseInt(match[1], 10)).key
    var out = []
    var cipher = ciphers.createDecipheriv(suite, cipherKey, iv)
    out.push(cipher.update(cipherText))
    out.push(cipher.final())
    decrypted = Buffer.concat(out)
  }
  var tag = key.match(startRegex)[1]
  return {
    tag: tag,
    data: decrypted
  }
}


/***/ }),

/***/ "./node_modules/parse-asn1/index.js":
/*!******************************************!*\
  !*** ./node_modules/parse-asn1/index.js ***!
  \******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var asn1 = __webpack_require__(/*! ./asn1 */ "./node_modules/parse-asn1/asn1.js")
var aesid = __webpack_require__(/*! ./aesid.json */ "./node_modules/parse-asn1/aesid.json")
var fixProc = __webpack_require__(/*! ./fixProc */ "./node_modules/parse-asn1/fixProc.js")
var ciphers = __webpack_require__(/*! browserify-aes */ "./node_modules/browserify-aes/browser.js")
var compat = __webpack_require__(/*! pbkdf2 */ "./node_modules/pbkdf2/browser.js")
var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer
module.exports = parseKeys

function parseKeys (buffer) {
  var password
  if (typeof buffer === 'object' && !Buffer.isBuffer(buffer)) {
    password = buffer.passphrase
    buffer = buffer.key
  }
  if (typeof buffer === 'string') {
    buffer = Buffer.from(buffer)
  }

  var stripped = fixProc(buffer, password)

  var type = stripped.tag
  var data = stripped.data
  var subtype, ndata
  switch (type) {
    case 'CERTIFICATE':
      ndata = asn1.certificate.decode(data, 'der').tbsCertificate.subjectPublicKeyInfo
      // falls through
    case 'PUBLIC KEY':
      if (!ndata) {
        ndata = asn1.PublicKey.decode(data, 'der')
      }
      subtype = ndata.algorithm.algorithm.join('.')
      switch (subtype) {
        case '1.2.840.113549.1.1.1':
          return asn1.RSAPublicKey.decode(ndata.subjectPublicKey.data, 'der')
        case '1.2.840.10045.2.1':
          ndata.subjectPrivateKey = ndata.subjectPublicKey
          return {
            type: 'ec',
            data: ndata
          }
        case '1.2.840.10040.4.1':
          ndata.algorithm.params.pub_key = asn1.DSAparam.decode(ndata.subjectPublicKey.data, 'der')
          return {
            type: 'dsa',
            data: ndata.algorithm.params
          }
        default: throw new Error('unknown key id ' + subtype)
      }
      // throw new Error('unknown key type ' + type)
    case 'ENCRYPTED PRIVATE KEY':
      data = asn1.EncryptedPrivateKey.decode(data, 'der')
      data = decrypt(data, password)
      // falls through
    case 'PRIVATE KEY':
      ndata = asn1.PrivateKey.decode(data, 'der')
      subtype = ndata.algorithm.algorithm.join('.')
      switch (subtype) {
        case '1.2.840.113549.1.1.1':
          return asn1.RSAPrivateKey.decode(ndata.subjectPrivateKey, 'der')
        case '1.2.840.10045.2.1':
          return {
            curve: ndata.algorithm.curve,
            privateKey: asn1.ECPrivateKey.decode(ndata.subjectPrivateKey, 'der').privateKey
          }
        case '1.2.840.10040.4.1':
          ndata.algorithm.params.priv_key = asn1.DSAparam.decode(ndata.subjectPrivateKey, 'der')
          return {
            type: 'dsa',
            params: ndata.algorithm.params
          }
        default: throw new Error('unknown key id ' + subtype)
      }
      // throw new Error('unknown key type ' + type)
    case 'RSA PUBLIC KEY':
      return asn1.RSAPublicKey.decode(data, 'der')
    case 'RSA PRIVATE KEY':
      return asn1.RSAPrivateKey.decode(data, 'der')
    case 'DSA PRIVATE KEY':
      return {
        type: 'dsa',
        params: asn1.DSAPrivateKey.decode(data, 'der')
      }
    case 'EC PRIVATE KEY':
      data = asn1.ECPrivateKey.decode(data, 'der')
      return {
        curve: data.parameters.value,
        privateKey: data.privateKey
      }
    default: throw new Error('unknown key type ' + type)
  }
}
parseKeys.signature = asn1.signature
function decrypt (data, password) {
  var salt = data.algorithm.decrypt.kde.kdeparams.salt
  var iters = parseInt(data.algorithm.decrypt.kde.kdeparams.iters.toString(), 10)
  var algo = aesid[data.algorithm.decrypt.cipher.algo.join('.')]
  var iv = data.algorithm.decrypt.cipher.iv
  var cipherText = data.subjectPrivateKey
  var keylen = parseInt(algo.split('-')[1], 10) / 8
  var key = compat.pbkdf2Sync(password, salt, iters, keylen, 'sha1')
  var cipher = ciphers.createDecipheriv(algo, key, iv)
  var out = []
  out.push(cipher.update(cipherText))
  out.push(cipher.final())
  return Buffer.concat(out)
}


/***/ }),

/***/ "./node_modules/path-browserify/index.js":
/*!***********************************************!*\
  !*** ./node_modules/path-browserify/index.js ***!
  \***********************************************/
/***/ ((module) => {

"use strict";
// 'path' module extracted from Node.js v8.11.1 (only the posix part)
// transplited with Babel

// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.



function assertPath(path) {
  if (typeof path !== 'string') {
    throw new TypeError('Path must be a string. Received ' + JSON.stringify(path));
  }
}

// Resolves . and .. elements in a path with directory names
function normalizeStringPosix(path, allowAboveRoot) {
  var res = '';
  var lastSegmentLength = 0;
  var lastSlash = -1;
  var dots = 0;
  var code;
  for (var i = 0; i <= path.length; ++i) {
    if (i < path.length)
      code = path.charCodeAt(i);
    else if (code === 47 /*/*/)
      break;
    else
      code = 47 /*/*/;
    if (code === 47 /*/*/) {
      if (lastSlash === i - 1 || dots === 1) {
        // NOOP
      } else if (lastSlash !== i - 1 && dots === 2) {
        if (res.length < 2 || lastSegmentLength !== 2 || res.charCodeAt(res.length - 1) !== 46 /*.*/ || res.charCodeAt(res.length - 2) !== 46 /*.*/) {
          if (res.length > 2) {
            var lastSlashIndex = res.lastIndexOf('/');
            if (lastSlashIndex !== res.length - 1) {
              if (lastSlashIndex === -1) {
                res = '';
                lastSegmentLength = 0;
              } else {
                res = res.slice(0, lastSlashIndex);
                lastSegmentLength = res.length - 1 - res.lastIndexOf('/');
              }
              lastSlash = i;
              dots = 0;
              continue;
            }
          } else if (res.length === 2 || res.length === 1) {
            res = '';
            lastSegmentLength = 0;
            lastSlash = i;
            dots = 0;
            continue;
          }
        }
        if (allowAboveRoot) {
          if (res.length > 0)
            res += '/..';
          else
            res = '..';
          lastSegmentLength = 2;
        }
      } else {
        if (res.length > 0)
          res += '/' + path.slice(lastSlash + 1, i);
        else
          res = path.slice(lastSlash + 1, i);
        lastSegmentLength = i - lastSlash - 1;
      }
      lastSlash = i;
      dots = 0;
    } else if (code === 46 /*.*/ && dots !== -1) {
      ++dots;
    } else {
      dots = -1;
    }
  }
  return res;
}

function _format(sep, pathObject) {
  var dir = pathObject.dir || pathObject.root;
  var base = pathObject.base || (pathObject.name || '') + (pathObject.ext || '');
  if (!dir) {
    return base;
  }
  if (dir === pathObject.root) {
    return dir + base;
  }
  return dir + sep + base;
}

var posix = {
  // path.resolve([from ...], to)
  resolve: function resolve() {
    var resolvedPath = '';
    var resolvedAbsolute = false;
    var cwd;

    for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
      var path;
      if (i >= 0)
        path = arguments[i];
      else {
        if (cwd === undefined)
          cwd = process.cwd();
        path = cwd;
      }

      assertPath(path);

      // Skip empty entries
      if (path.length === 0) {
        continue;
      }

      resolvedPath = path + '/' + resolvedPath;
      resolvedAbsolute = path.charCodeAt(0) === 47 /*/*/;
    }

    // At this point the path should be resolved to a full absolute path, but
    // handle relative paths to be safe (might happen when process.cwd() fails)

    // Normalize the path
    resolvedPath = normalizeStringPosix(resolvedPath, !resolvedAbsolute);

    if (resolvedAbsolute) {
      if (resolvedPath.length > 0)
        return '/' + resolvedPath;
      else
        return '/';
    } else if (resolvedPath.length > 0) {
      return resolvedPath;
    } else {
      return '.';
    }
  },

  normalize: function normalize(path) {
    assertPath(path);

    if (path.length === 0) return '.';

    var isAbsolute = path.charCodeAt(0) === 47 /*/*/;
    var trailingSeparator = path.charCodeAt(path.length - 1) === 47 /*/*/;

    // Normalize the path
    path = normalizeStringPosix(path, !isAbsolute);

    if (path.length === 0 && !isAbsolute) path = '.';
    if (path.length > 0 && trailingSeparator) path += '/';

    if (isAbsolute) return '/' + path;
    return path;
  },

  isAbsolute: function isAbsolute(path) {
    assertPath(path);
    return path.length > 0 && path.charCodeAt(0) === 47 /*/*/;
  },

  join: function join() {
    if (arguments.length === 0)
      return '.';
    var joined;
    for (var i = 0; i < arguments.length; ++i) {
      var arg = arguments[i];
      assertPath(arg);
      if (arg.length > 0) {
        if (joined === undefined)
          joined = arg;
        else
          joined += '/' + arg;
      }
    }
    if (joined === undefined)
      return '.';
    return posix.normalize(joined);
  },

  relative: function relative(from, to) {
    assertPath(from);
    assertPath(to);

    if (from === to) return '';

    from = posix.resolve(from);
    to = posix.resolve(to);

    if (from === to) return '';

    // Trim any leading backslashes
    var fromStart = 1;
    for (; fromStart < from.length; ++fromStart) {
      if (from.charCodeAt(fromStart) !== 47 /*/*/)
        break;
    }
    var fromEnd = from.length;
    var fromLen = fromEnd - fromStart;

    // Trim any leading backslashes
    var toStart = 1;
    for (; toStart < to.length; ++toStart) {
      if (to.charCodeAt(toStart) !== 47 /*/*/)
        break;
    }
    var toEnd = to.length;
    var toLen = toEnd - toStart;

    // Compare paths to find the longest common path from root
    var length = fromLen < toLen ? fromLen : toLen;
    var lastCommonSep = -1;
    var i = 0;
    for (; i <= length; ++i) {
      if (i === length) {
        if (toLen > length) {
          if (to.charCodeAt(toStart + i) === 47 /*/*/) {
            // We get here if `from` is the exact base path for `to`.
            // For example: from='/foo/bar'; to='/foo/bar/baz'
            return to.slice(toStart + i + 1);
          } else if (i === 0) {
            // We get here if `from` is the root
            // For example: from='/'; to='/foo'
            return to.slice(toStart + i);
          }
        } else if (fromLen > length) {
          if (from.charCodeAt(fromStart + i) === 47 /*/*/) {
            // We get here if `to` is the exact base path for `from`.
            // For example: from='/foo/bar/baz'; to='/foo/bar'
            lastCommonSep = i;
          } else if (i === 0) {
            // We get here if `to` is the root.
            // For example: from='/foo'; to='/'
            lastCommonSep = 0;
          }
        }
        break;
      }
      var fromCode = from.charCodeAt(fromStart + i);
      var toCode = to.charCodeAt(toStart + i);
      if (fromCode !== toCode)
        break;
      else if (fromCode === 47 /*/*/)
        lastCommonSep = i;
    }

    var out = '';
    // Generate the relative path based on the path difference between `to`
    // and `from`
    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {
      if (i === fromEnd || from.charCodeAt(i) === 47 /*/*/) {
        if (out.length === 0)
          out += '..';
        else
          out += '/..';
      }
    }

    // Lastly, append the rest of the destination (`to`) path that comes after
    // the common path parts
    if (out.length > 0)
      return out + to.slice(toStart + lastCommonSep);
    else {
      toStart += lastCommonSep;
      if (to.charCodeAt(toStart) === 47 /*/*/)
        ++toStart;
      return to.slice(toStart);
    }
  },

  _makeLong: function _makeLong(path) {
    return path;
  },

  dirname: function dirname(path) {
    assertPath(path);
    if (path.length === 0) return '.';
    var code = path.charCodeAt(0);
    var hasRoot = code === 47 /*/*/;
    var end = -1;
    var matchedSlash = true;
    for (var i = path.length - 1; i >= 1; --i) {
      code = path.charCodeAt(i);
      if (code === 47 /*/*/) {
          if (!matchedSlash) {
            end = i;
            break;
          }
        } else {
        // We saw the first non-path separator
        matchedSlash = false;
      }
    }

    if (end === -1) return hasRoot ? '/' : '.';
    if (hasRoot && end === 1) return '//';
    return path.slice(0, end);
  },

  basename: function basename(path, ext) {
    if (ext !== undefined && typeof ext !== 'string') throw new TypeError('"ext" argument must be a string');
    assertPath(path);

    var start = 0;
    var end = -1;
    var matchedSlash = true;
    var i;

    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {
      if (ext.length === path.length && ext === path) return '';
      var extIdx = ext.length - 1;
      var firstNonSlashEnd = -1;
      for (i = path.length - 1; i >= 0; --i) {
        var code = path.charCodeAt(i);
        if (code === 47 /*/*/) {
            // If we reached a path separator that was not part of a set of path
            // separators at the end of the string, stop now
            if (!matchedSlash) {
              start = i + 1;
              break;
            }
          } else {
          if (firstNonSlashEnd === -1) {
            // We saw the first non-path separator, remember this index in case
            // we need it if the extension ends up not matching
            matchedSlash = false;
            firstNonSlashEnd = i + 1;
          }
          if (extIdx >= 0) {
            // Try to match the explicit extension
            if (code === ext.charCodeAt(extIdx)) {
              if (--extIdx === -1) {
                // We matched the extension, so mark this as the end of our path
                // component
                end = i;
              }
            } else {
              // Extension does not match, so our result is the entire path
              // component
              extIdx = -1;
              end = firstNonSlashEnd;
            }
          }
        }
      }

      if (start === end) end = firstNonSlashEnd;else if (end === -1) end = path.length;
      return path.slice(start, end);
    } else {
      for (i = path.length - 1; i >= 0; --i) {
        if (path.charCodeAt(i) === 47 /*/*/) {
            // If we reached a path separator that was not part of a set of path
            // separators at the end of the string, stop now
            if (!matchedSlash) {
              start = i + 1;
              break;
            }
          } else if (end === -1) {
          // We saw the first non-path separator, mark this as the end of our
          // path component
          matchedSlash = false;
          end = i + 1;
        }
      }

      if (end === -1) return '';
      return path.slice(start, end);
    }
  },

  extname: function extname(path) {
    assertPath(path);
    var startDot = -1;
    var startPart = 0;
    var end = -1;
    var matchedSlash = true;
    // Track the state of characters (if any) we see before our first dot and
    // after any path separator we find
    var preDotState = 0;
    for (var i = path.length - 1; i >= 0; --i) {
      var code = path.charCodeAt(i);
      if (code === 47 /*/*/) {
          // If we reached a path separator that was not part of a set of path
          // separators at the end of the string, stop now
          if (!matchedSlash) {
            startPart = i + 1;
            break;
          }
          continue;
        }
      if (end === -1) {
        // We saw the first non-path separator, mark this as the end of our
        // extension
        matchedSlash = false;
        end = i + 1;
      }
      if (code === 46 /*.*/) {
          // If this is our first dot, mark it as the start of our extension
          if (startDot === -1)
            startDot = i;
          else if (preDotState !== 1)
            preDotState = 1;
      } else if (startDot !== -1) {
        // We saw a non-dot and non-path separator before our dot, so we should
        // have a good chance at having a non-empty extension
        preDotState = -1;
      }
    }

    if (startDot === -1 || end === -1 ||
        // We saw a non-dot character immediately before the dot
        preDotState === 0 ||
        // The (right-most) trimmed path component is exactly '..'
        preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {
      return '';
    }
    return path.slice(startDot, end);
  },

  format: function format(pathObject) {
    if (pathObject === null || typeof pathObject !== 'object') {
      throw new TypeError('The "pathObject" argument must be of type Object. Received type ' + typeof pathObject);
    }
    return _format('/', pathObject);
  },

  parse: function parse(path) {
    assertPath(path);

    var ret = { root: '', dir: '', base: '', ext: '', name: '' };
    if (path.length === 0) return ret;
    var code = path.charCodeAt(0);
    var isAbsolute = code === 47 /*/*/;
    var start;
    if (isAbsolute) {
      ret.root = '/';
      start = 1;
    } else {
      start = 0;
    }
    var startDot = -1;
    var startPart = 0;
    var end = -1;
    var matchedSlash = true;
    var i = path.length - 1;

    // Track the state of characters (if any) we see before our first dot and
    // after any path separator we find
    var preDotState = 0;

    // Get non-dir info
    for (; i >= start; --i) {
      code = path.charCodeAt(i);
      if (code === 47 /*/*/) {
          // If we reached a path separator that was not part of a set of path
          // separators at the end of the string, stop now
          if (!matchedSlash) {
            startPart = i + 1;
            break;
          }
          continue;
        }
      if (end === -1) {
        // We saw the first non-path separator, mark this as the end of our
        // extension
        matchedSlash = false;
        end = i + 1;
      }
      if (code === 46 /*.*/) {
          // If this is our first dot, mark it as the start of our extension
          if (startDot === -1) startDot = i;else if (preDotState !== 1) preDotState = 1;
        } else if (startDot !== -1) {
        // We saw a non-dot and non-path separator before our dot, so we should
        // have a good chance at having a non-empty extension
        preDotState = -1;
      }
    }

    if (startDot === -1 || end === -1 ||
    // We saw a non-dot character immediately before the dot
    preDotState === 0 ||
    // The (right-most) trimmed path component is exactly '..'
    preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {
      if (end !== -1) {
        if (startPart === 0 && isAbsolute) ret.base = ret.name = path.slice(1, end);else ret.base = ret.name = path.slice(startPart, end);
      }
    } else {
      if (startPart === 0 && isAbsolute) {
        ret.name = path.slice(1, startDot);
        ret.base = path.slice(1, end);
      } else {
        ret.name = path.slice(startPart, startDot);
        ret.base = path.slice(startPart, end);
      }
      ret.ext = path.slice(startDot, end);
    }

    if (startPart > 0) ret.dir = path.slice(0, startPart - 1);else if (isAbsolute) ret.dir = '/';

    return ret;
  },

  sep: '/',
  delimiter: ':',
  win32: null,
  posix: null
};

posix.posix = posix;

module.exports = posix;


/***/ }),

/***/ "./node_modules/pbkdf2/browser.js":
/*!****************************************!*\
  !*** ./node_modules/pbkdf2/browser.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

exports.pbkdf2 = __webpack_require__(/*! ./lib/async */ "./node_modules/pbkdf2/lib/async.js")
exports.pbkdf2Sync = __webpack_require__(/*! ./lib/sync */ "./node_modules/pbkdf2/lib/sync-browser.js")


/***/ }),

/***/ "./node_modules/pbkdf2/lib/async.js":
/*!******************************************!*\
  !*** ./node_modules/pbkdf2/lib/async.js ***!
  \******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer

var checkParameters = __webpack_require__(/*! ./precondition */ "./node_modules/pbkdf2/lib/precondition.js")
var defaultEncoding = __webpack_require__(/*! ./default-encoding */ "./node_modules/pbkdf2/lib/default-encoding.js")
var sync = __webpack_require__(/*! ./sync */ "./node_modules/pbkdf2/lib/sync-browser.js")
var toBuffer = __webpack_require__(/*! ./to-buffer */ "./node_modules/pbkdf2/lib/to-buffer.js")

var ZERO_BUF
var subtle = __webpack_require__.g.crypto && __webpack_require__.g.crypto.subtle
var toBrowser = {
  sha: 'SHA-1',
  'sha-1': 'SHA-1',
  sha1: 'SHA-1',
  sha256: 'SHA-256',
  'sha-256': 'SHA-256',
  sha384: 'SHA-384',
  'sha-384': 'SHA-384',
  'sha-512': 'SHA-512',
  sha512: 'SHA-512'
}
var checks = []
function checkNative (algo) {
  if (__webpack_require__.g.process && !__webpack_require__.g.process.browser) {
    return Promise.resolve(false)
  }
  if (!subtle || !subtle.importKey || !subtle.deriveBits) {
    return Promise.resolve(false)
  }
  if (checks[algo] !== undefined) {
    return checks[algo]
  }
  ZERO_BUF = ZERO_BUF || Buffer.alloc(8)
  var prom = browserPbkdf2(ZERO_BUF, ZERO_BUF, 10, 128, algo)
    .then(function () {
      return true
    }).catch(function () {
      return false
    })
  checks[algo] = prom
  return prom
}
var nextTick
function getNextTick () {
  if (nextTick) {
    return nextTick
  }
  if (__webpack_require__.g.process && __webpack_require__.g.process.nextTick) {
    nextTick = __webpack_require__.g.process.nextTick
  } else if (__webpack_require__.g.queueMicrotask) {
    nextTick = __webpack_require__.g.queueMicrotask
  } else if (__webpack_require__.g.setImmediate) {
    nextTick = __webpack_require__.g.setImmediate
  } else {
    nextTick = __webpack_require__.g.setTimeout
  }
  return nextTick
}
function browserPbkdf2 (password, salt, iterations, length, algo) {
  return subtle.importKey(
    'raw', password, { name: 'PBKDF2' }, false, ['deriveBits']
  ).then(function (key) {
    return subtle.deriveBits({
      name: 'PBKDF2',
      salt: salt,
      iterations: iterations,
      hash: {
        name: algo
      }
    }, key, length << 3)
  }).then(function (res) {
    return Buffer.from(res)
  })
}

function resolvePromise (promise, callback) {
  promise.then(function (out) {
    getNextTick()(function () {
      callback(null, out)
    })
  }, function (e) {
    getNextTick()(function () {
      callback(e)
    })
  })
}
module.exports = function (password, salt, iterations, keylen, digest, callback) {
  if (typeof digest === 'function') {
    callback = digest
    digest = undefined
  }

  digest = digest || 'sha1'
  var algo = toBrowser[digest.toLowerCase()]

  if (!algo || typeof __webpack_require__.g.Promise !== 'function') {
    getNextTick()(function () {
      var out
      try {
        out = sync(password, salt, iterations, keylen, digest)
      } catch (e) {
        return callback(e)
      }
      callback(null, out)
    })
    return
  }

  checkParameters(iterations, keylen)
  password = toBuffer(password, defaultEncoding, 'Password')
  salt = toBuffer(salt, defaultEncoding, 'Salt')
  if (typeof callback !== 'function') throw new Error('No callback provided to pbkdf2')

  resolvePromise(checkNative(algo).then(function (resp) {
    if (resp) return browserPbkdf2(password, salt, iterations, keylen, algo)

    return sync(password, salt, iterations, keylen, digest)
  }), callback)
}


/***/ }),

/***/ "./node_modules/pbkdf2/lib/default-encoding.js":
/*!*****************************************************!*\
  !*** ./node_modules/pbkdf2/lib/default-encoding.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var defaultEncoding
/* istanbul ignore next */
if (__webpack_require__.g.process && __webpack_require__.g.process.browser) {
  defaultEncoding = 'utf-8'
} else if (__webpack_require__.g.process && __webpack_require__.g.process.version) {
  var pVersionMajor = parseInt(process.version.split('.')[0].slice(1), 10)

  defaultEncoding = pVersionMajor >= 6 ? 'utf-8' : 'binary'
} else {
  defaultEncoding = 'utf-8'
}
module.exports = defaultEncoding


/***/ }),

/***/ "./node_modules/pbkdf2/lib/precondition.js":
/*!*************************************************!*\
  !*** ./node_modules/pbkdf2/lib/precondition.js ***!
  \*************************************************/
/***/ ((module) => {

var MAX_ALLOC = Math.pow(2, 30) - 1 // default in iojs

module.exports = function (iterations, keylen) {
  if (typeof iterations !== 'number') {
    throw new TypeError('Iterations not a number')
  }

  if (iterations < 0) {
    throw new TypeError('Bad iterations')
  }

  if (typeof keylen !== 'number') {
    throw new TypeError('Key length not a number')
  }

  if (keylen < 0 || keylen > MAX_ALLOC || keylen !== keylen) { /* eslint no-self-compare: 0 */
    throw new TypeError('Bad key length')
  }
}


/***/ }),

/***/ "./node_modules/pbkdf2/lib/sync-browser.js":
/*!*************************************************!*\
  !*** ./node_modules/pbkdf2/lib/sync-browser.js ***!
  \*************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var md5 = __webpack_require__(/*! create-hash/md5 */ "./node_modules/create-hash/md5.js")
var RIPEMD160 = __webpack_require__(/*! ripemd160 */ "./node_modules/ripemd160/index.js")
var sha = __webpack_require__(/*! sha.js */ "./node_modules/sha.js/index.js")
var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer

var checkParameters = __webpack_require__(/*! ./precondition */ "./node_modules/pbkdf2/lib/precondition.js")
var defaultEncoding = __webpack_require__(/*! ./default-encoding */ "./node_modules/pbkdf2/lib/default-encoding.js")
var toBuffer = __webpack_require__(/*! ./to-buffer */ "./node_modules/pbkdf2/lib/to-buffer.js")

var ZEROS = Buffer.alloc(128)
var sizes = {
  md5: 16,
  sha1: 20,
  sha224: 28,
  sha256: 32,
  sha384: 48,
  sha512: 64,
  rmd160: 20,
  ripemd160: 20
}

function Hmac (alg, key, saltLen) {
  var hash = getDigest(alg)
  var blocksize = (alg === 'sha512' || alg === 'sha384') ? 128 : 64

  if (key.length > blocksize) {
    key = hash(key)
  } else if (key.length < blocksize) {
    key = Buffer.concat([key, ZEROS], blocksize)
  }

  var ipad = Buffer.allocUnsafe(blocksize + sizes[alg])
  var opad = Buffer.allocUnsafe(blocksize + sizes[alg])
  for (var i = 0; i < blocksize; i++) {
    ipad[i] = key[i] ^ 0x36
    opad[i] = key[i] ^ 0x5C
  }

  var ipad1 = Buffer.allocUnsafe(blocksize + saltLen + 4)
  ipad.copy(ipad1, 0, 0, blocksize)
  this.ipad1 = ipad1
  this.ipad2 = ipad
  this.opad = opad
  this.alg = alg
  this.blocksize = blocksize
  this.hash = hash
  this.size = sizes[alg]
}

Hmac.prototype.run = function (data, ipad) {
  data.copy(ipad, this.blocksize)
  var h = this.hash(ipad)
  h.copy(this.opad, this.blocksize)
  return this.hash(this.opad)
}

function getDigest (alg) {
  function shaFunc (data) {
    return sha(alg).update(data).digest()
  }
  function rmd160Func (data) {
    return new RIPEMD160().update(data).digest()
  }

  if (alg === 'rmd160' || alg === 'ripemd160') return rmd160Func
  if (alg === 'md5') return md5
  return shaFunc
}

function pbkdf2 (password, salt, iterations, keylen, digest) {
  checkParameters(iterations, keylen)
  password = toBuffer(password, defaultEncoding, 'Password')
  salt = toBuffer(salt, defaultEncoding, 'Salt')

  digest = digest || 'sha1'

  var hmac = new Hmac(digest, password, salt.length)

  var DK = Buffer.allocUnsafe(keylen)
  var block1 = Buffer.allocUnsafe(salt.length + 4)
  salt.copy(block1, 0, 0, salt.length)

  var destPos = 0
  var hLen = sizes[digest]
  var l = Math.ceil(keylen / hLen)

  for (var i = 1; i <= l; i++) {
    block1.writeUInt32BE(i, salt.length)

    var T = hmac.run(block1, hmac.ipad1)
    var U = T

    for (var j = 1; j < iterations; j++) {
      U = hmac.run(U, hmac.ipad2)
      for (var k = 0; k < hLen; k++) T[k] ^= U[k]
    }

    T.copy(DK, destPos)
    destPos += hLen
  }

  return DK
}

module.exports = pbkdf2


/***/ }),

/***/ "./node_modules/pbkdf2/lib/to-buffer.js":
/*!**********************************************!*\
  !*** ./node_modules/pbkdf2/lib/to-buffer.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer

module.exports = function (thing, encoding, name) {
  if (Buffer.isBuffer(thing)) {
    return thing
  } else if (typeof thing === 'string') {
    return Buffer.from(thing, encoding)
  } else if (ArrayBuffer.isView(thing)) {
    return Buffer.from(thing.buffer)
  } else {
    throw new TypeError(name + ' must be a string, a Buffer, a typed array or a DataView')
  }
}


/***/ }),

/***/ "./node_modules/public-encrypt/browser.js":
/*!************************************************!*\
  !*** ./node_modules/public-encrypt/browser.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

exports.publicEncrypt = __webpack_require__(/*! ./publicEncrypt */ "./node_modules/public-encrypt/publicEncrypt.js")
exports.privateDecrypt = __webpack_require__(/*! ./privateDecrypt */ "./node_modules/public-encrypt/privateDecrypt.js")

exports.privateEncrypt = function privateEncrypt (key, buf) {
  return exports.publicEncrypt(key, buf, true)
}

exports.publicDecrypt = function publicDecrypt (key, buf) {
  return exports.privateDecrypt(key, buf, true)
}


/***/ }),

/***/ "./node_modules/public-encrypt/mgf.js":
/*!********************************************!*\
  !*** ./node_modules/public-encrypt/mgf.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var createHash = __webpack_require__(/*! create-hash */ "./node_modules/create-hash/browser.js")
var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer

module.exports = function (seed, len) {
  var t = Buffer.alloc(0)
  var i = 0
  var c
  while (t.length < len) {
    c = i2ops(i++)
    t = Buffer.concat([t, createHash('sha1').update(seed).update(c).digest()])
  }
  return t.slice(0, len)
}

function i2ops (c) {
  var out = Buffer.allocUnsafe(4)
  out.writeUInt32BE(c, 0)
  return out
}


/***/ }),

/***/ "./node_modules/public-encrypt/privateDecrypt.js":
/*!*******************************************************!*\
  !*** ./node_modules/public-encrypt/privateDecrypt.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var parseKeys = __webpack_require__(/*! parse-asn1 */ "./node_modules/parse-asn1/index.js")
var mgf = __webpack_require__(/*! ./mgf */ "./node_modules/public-encrypt/mgf.js")
var xor = __webpack_require__(/*! ./xor */ "./node_modules/public-encrypt/xor.js")
var BN = __webpack_require__(/*! bn.js */ "./node_modules/bn.js/lib/bn.js")
var crt = __webpack_require__(/*! browserify-rsa */ "./node_modules/browserify-rsa/index.js")
var createHash = __webpack_require__(/*! create-hash */ "./node_modules/create-hash/browser.js")
var withPublic = __webpack_require__(/*! ./withPublic */ "./node_modules/public-encrypt/withPublic.js")
var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer

module.exports = function privateDecrypt (privateKey, enc, reverse) {
  var padding
  if (privateKey.padding) {
    padding = privateKey.padding
  } else if (reverse) {
    padding = 1
  } else {
    padding = 4
  }

  var key = parseKeys(privateKey)
  var k = key.modulus.byteLength()
  if (enc.length > k || new BN(enc).cmp(key.modulus) >= 0) {
    throw new Error('decryption error')
  }
  var msg
  if (reverse) {
    msg = withPublic(new BN(enc), key)
  } else {
    msg = crt(enc, key)
  }
  var zBuffer = Buffer.alloc(k - msg.length)
  msg = Buffer.concat([zBuffer, msg], k)
  if (padding === 4) {
    return oaep(key, msg)
  } else if (padding === 1) {
    return pkcs1(key, msg, reverse)
  } else if (padding === 3) {
    return msg
  } else {
    throw new Error('unknown padding')
  }
}

function oaep (key, msg) {
  var k = key.modulus.byteLength()
  var iHash = createHash('sha1').update(Buffer.alloc(0)).digest()
  var hLen = iHash.length
  if (msg[0] !== 0) {
    throw new Error('decryption error')
  }
  var maskedSeed = msg.slice(1, hLen + 1)
  var maskedDb = msg.slice(hLen + 1)
  var seed = xor(maskedSeed, mgf(maskedDb, hLen))
  var db = xor(maskedDb, mgf(seed, k - hLen - 1))
  if (compare(iHash, db.slice(0, hLen))) {
    throw new Error('decryption error')
  }
  var i = hLen
  while (db[i] === 0) {
    i++
  }
  if (db[i++] !== 1) {
    throw new Error('decryption error')
  }
  return db.slice(i)
}

function pkcs1 (key, msg, reverse) {
  var p1 = msg.slice(0, 2)
  var i = 2
  var status = 0
  while (msg[i++] !== 0) {
    if (i >= msg.length) {
      status++
      break
    }
  }
  var ps = msg.slice(2, i - 1)

  if ((p1.toString('hex') !== '0002' && !reverse) || (p1.toString('hex') !== '0001' && reverse)) {
    status++
  }
  if (ps.length < 8) {
    status++
  }
  if (status) {
    throw new Error('decryption error')
  }
  return msg.slice(i)
}
function compare (a, b) {
  a = Buffer.from(a)
  b = Buffer.from(b)
  var dif = 0
  var len = a.length
  if (a.length !== b.length) {
    dif++
    len = Math.min(a.length, b.length)
  }
  var i = -1
  while (++i < len) {
    dif += (a[i] ^ b[i])
  }
  return dif
}


/***/ }),

/***/ "./node_modules/public-encrypt/publicEncrypt.js":
/*!******************************************************!*\
  !*** ./node_modules/public-encrypt/publicEncrypt.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var parseKeys = __webpack_require__(/*! parse-asn1 */ "./node_modules/parse-asn1/index.js")
var randomBytes = __webpack_require__(/*! randombytes */ "./node_modules/randombytes/browser.js")
var createHash = __webpack_require__(/*! create-hash */ "./node_modules/create-hash/browser.js")
var mgf = __webpack_require__(/*! ./mgf */ "./node_modules/public-encrypt/mgf.js")
var xor = __webpack_require__(/*! ./xor */ "./node_modules/public-encrypt/xor.js")
var BN = __webpack_require__(/*! bn.js */ "./node_modules/bn.js/lib/bn.js")
var withPublic = __webpack_require__(/*! ./withPublic */ "./node_modules/public-encrypt/withPublic.js")
var crt = __webpack_require__(/*! browserify-rsa */ "./node_modules/browserify-rsa/index.js")
var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer

module.exports = function publicEncrypt (publicKey, msg, reverse) {
  var padding
  if (publicKey.padding) {
    padding = publicKey.padding
  } else if (reverse) {
    padding = 1
  } else {
    padding = 4
  }
  var key = parseKeys(publicKey)
  var paddedMsg
  if (padding === 4) {
    paddedMsg = oaep(key, msg)
  } else if (padding === 1) {
    paddedMsg = pkcs1(key, msg, reverse)
  } else if (padding === 3) {
    paddedMsg = new BN(msg)
    if (paddedMsg.cmp(key.modulus) >= 0) {
      throw new Error('data too long for modulus')
    }
  } else {
    throw new Error('unknown padding')
  }
  if (reverse) {
    return crt(paddedMsg, key)
  } else {
    return withPublic(paddedMsg, key)
  }
}

function oaep (key, msg) {
  var k = key.modulus.byteLength()
  var mLen = msg.length
  var iHash = createHash('sha1').update(Buffer.alloc(0)).digest()
  var hLen = iHash.length
  var hLen2 = 2 * hLen
  if (mLen > k - hLen2 - 2) {
    throw new Error('message too long')
  }
  var ps = Buffer.alloc(k - mLen - hLen2 - 2)
  var dblen = k - hLen - 1
  var seed = randomBytes(hLen)
  var maskedDb = xor(Buffer.concat([iHash, ps, Buffer.alloc(1, 1), msg], dblen), mgf(seed, dblen))
  var maskedSeed = xor(seed, mgf(maskedDb, hLen))
  return new BN(Buffer.concat([Buffer.alloc(1), maskedSeed, maskedDb], k))
}
function pkcs1 (key, msg, reverse) {
  var mLen = msg.length
  var k = key.modulus.byteLength()
  if (mLen > k - 11) {
    throw new Error('message too long')
  }
  var ps
  if (reverse) {
    ps = Buffer.alloc(k - mLen - 3, 0xff)
  } else {
    ps = nonZero(k - mLen - 3)
  }
  return new BN(Buffer.concat([Buffer.from([0, reverse ? 1 : 2]), ps, Buffer.alloc(1), msg], k))
}
function nonZero (len) {
  var out = Buffer.allocUnsafe(len)
  var i = 0
  var cache = randomBytes(len * 2)
  var cur = 0
  var num
  while (i < len) {
    if (cur === cache.length) {
      cache = randomBytes(len * 2)
      cur = 0
    }
    num = cache[cur++]
    if (num) {
      out[i++] = num
    }
  }
  return out
}


/***/ }),

/***/ "./node_modules/public-encrypt/withPublic.js":
/*!***************************************************!*\
  !*** ./node_modules/public-encrypt/withPublic.js ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var BN = __webpack_require__(/*! bn.js */ "./node_modules/bn.js/lib/bn.js")
var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer

function withPublic (paddedMsg, key) {
  return Buffer.from(paddedMsg
    .toRed(BN.mont(key.modulus))
    .redPow(new BN(key.publicExponent))
    .fromRed()
    .toArray())
}

module.exports = withPublic


/***/ }),

/***/ "./node_modules/public-encrypt/xor.js":
/*!********************************************!*\
  !*** ./node_modules/public-encrypt/xor.js ***!
  \********************************************/
/***/ ((module) => {

module.exports = function xor (a, b) {
  var len = a.length
  var i = -1
  while (++i < len) {
    a[i] ^= b[i]
  }
  return a
}


/***/ }),

/***/ "./node_modules/randombytes/browser.js":
/*!*********************************************!*\
  !*** ./node_modules/randombytes/browser.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


// limit of Crypto.getRandomValues()
// https://developer.mozilla.org/en-US/docs/Web/API/Crypto/getRandomValues
var MAX_BYTES = 65536

// Node supports requesting up to this number of bytes
// https://github.com/nodejs/node/blob/master/lib/internal/crypto/random.js#L48
var MAX_UINT32 = 4294967295

function oldBrowser () {
  throw new Error('Secure random number generation is not supported by this browser.\nUse Chrome, Firefox or Internet Explorer 11')
}

var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer
var crypto = __webpack_require__.g.crypto || __webpack_require__.g.msCrypto

if (crypto && crypto.getRandomValues) {
  module.exports = randomBytes
} else {
  module.exports = oldBrowser
}

function randomBytes (size, cb) {
  // phantomjs needs to throw
  if (size > MAX_UINT32) throw new RangeError('requested too many random bytes')

  var bytes = Buffer.allocUnsafe(size)

  if (size > 0) {  // getRandomValues fails on IE if size == 0
    if (size > MAX_BYTES) { // this is the max bytes crypto.getRandomValues
      // can do at once see https://developer.mozilla.org/en-US/docs/Web/API/window.crypto.getRandomValues
      for (var generated = 0; generated < size; generated += MAX_BYTES) {
        // buffer.slice automatically checks if the end is past the end of
        // the buffer so we don't have to here
        crypto.getRandomValues(bytes.slice(generated, generated + MAX_BYTES))
      }
    } else {
      crypto.getRandomValues(bytes)
    }
  }

  if (typeof cb === 'function') {
    return process.nextTick(function () {
      cb(null, bytes)
    })
  }

  return bytes
}


/***/ }),

/***/ "./node_modules/randomfill/browser.js":
/*!********************************************!*\
  !*** ./node_modules/randomfill/browser.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


function oldBrowser () {
  throw new Error('secure random number generation not supported by this browser\nuse chrome, FireFox or Internet Explorer 11')
}
var safeBuffer = __webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js")
var randombytes = __webpack_require__(/*! randombytes */ "./node_modules/randombytes/browser.js")
var Buffer = safeBuffer.Buffer
var kBufferMaxLength = safeBuffer.kMaxLength
var crypto = __webpack_require__.g.crypto || __webpack_require__.g.msCrypto
var kMaxUint32 = Math.pow(2, 32) - 1
function assertOffset (offset, length) {
  if (typeof offset !== 'number' || offset !== offset) { // eslint-disable-line no-self-compare
    throw new TypeError('offset must be a number')
  }

  if (offset > kMaxUint32 || offset < 0) {
    throw new TypeError('offset must be a uint32')
  }

  if (offset > kBufferMaxLength || offset > length) {
    throw new RangeError('offset out of range')
  }
}

function assertSize (size, offset, length) {
  if (typeof size !== 'number' || size !== size) { // eslint-disable-line no-self-compare
    throw new TypeError('size must be a number')
  }

  if (size > kMaxUint32 || size < 0) {
    throw new TypeError('size must be a uint32')
  }

  if (size + offset > length || size > kBufferMaxLength) {
    throw new RangeError('buffer too small')
  }
}
if ((crypto && crypto.getRandomValues) || !process.browser) {
  exports.randomFill = randomFill
  exports.randomFillSync = randomFillSync
} else {
  exports.randomFill = oldBrowser
  exports.randomFillSync = oldBrowser
}
function randomFill (buf, offset, size, cb) {
  if (!Buffer.isBuffer(buf) && !(buf instanceof __webpack_require__.g.Uint8Array)) {
    throw new TypeError('"buf" argument must be a Buffer or Uint8Array')
  }

  if (typeof offset === 'function') {
    cb = offset
    offset = 0
    size = buf.length
  } else if (typeof size === 'function') {
    cb = size
    size = buf.length - offset
  } else if (typeof cb !== 'function') {
    throw new TypeError('"cb" argument must be a function')
  }
  assertOffset(offset, buf.length)
  assertSize(size, offset, buf.length)
  return actualFill(buf, offset, size, cb)
}

function actualFill (buf, offset, size, cb) {
  if (process.browser) {
    var ourBuf = buf.buffer
    var uint = new Uint8Array(ourBuf, offset, size)
    crypto.getRandomValues(uint)
    if (cb) {
      process.nextTick(function () {
        cb(null, buf)
      })
      return
    }
    return buf
  }
  if (cb) {
    randombytes(size, function (err, bytes) {
      if (err) {
        return cb(err)
      }
      bytes.copy(buf, offset)
      cb(null, buf)
    })
    return
  }
  var bytes = randombytes(size)
  bytes.copy(buf, offset)
  return buf
}
function randomFillSync (buf, offset, size) {
  if (typeof offset === 'undefined') {
    offset = 0
  }
  if (!Buffer.isBuffer(buf) && !(buf instanceof __webpack_require__.g.Uint8Array)) {
    throw new TypeError('"buf" argument must be a Buffer or Uint8Array')
  }

  assertOffset(offset, buf.length)

  if (size === undefined) size = buf.length - offset

  assertSize(size, offset, buf.length)

  return actualFill(buf, offset, size)
}


/***/ }),

/***/ "./node_modules/ripemd160/index.js":
/*!*****************************************!*\
  !*** ./node_modules/ripemd160/index.js ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var Buffer = __webpack_require__(/*! buffer */ "./node_modules/buffer/index.js").Buffer
var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")
var HashBase = __webpack_require__(/*! hash-base */ "./node_modules/hash-base/index.js")

var ARRAY16 = new Array(16)

var zl = [
  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,
  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,
  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,
  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,
  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13
]

var zr = [
  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,
  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,
  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,
  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,
  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11
]

var sl = [
  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,
  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,
  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,
  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,
  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6
]

var sr = [
  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,
  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,
  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,
  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,
  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11
]

var hl = [0x00000000, 0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xa953fd4e]
var hr = [0x50a28be6, 0x5c4dd124, 0x6d703ef3, 0x7a6d76e9, 0x00000000]

function RIPEMD160 () {
  HashBase.call(this, 64)

  // state
  this._a = 0x67452301
  this._b = 0xefcdab89
  this._c = 0x98badcfe
  this._d = 0x10325476
  this._e = 0xc3d2e1f0
}

inherits(RIPEMD160, HashBase)

RIPEMD160.prototype._update = function () {
  var words = ARRAY16
  for (var j = 0; j < 16; ++j) words[j] = this._block.readInt32LE(j * 4)

  var al = this._a | 0
  var bl = this._b | 0
  var cl = this._c | 0
  var dl = this._d | 0
  var el = this._e | 0

  var ar = this._a | 0
  var br = this._b | 0
  var cr = this._c | 0
  var dr = this._d | 0
  var er = this._e | 0

  // computation
  for (var i = 0; i < 80; i += 1) {
    var tl
    var tr
    if (i < 16) {
      tl = fn1(al, bl, cl, dl, el, words[zl[i]], hl[0], sl[i])
      tr = fn5(ar, br, cr, dr, er, words[zr[i]], hr[0], sr[i])
    } else if (i < 32) {
      tl = fn2(al, bl, cl, dl, el, words[zl[i]], hl[1], sl[i])
      tr = fn4(ar, br, cr, dr, er, words[zr[i]], hr[1], sr[i])
    } else if (i < 48) {
      tl = fn3(al, bl, cl, dl, el, words[zl[i]], hl[2], sl[i])
      tr = fn3(ar, br, cr, dr, er, words[zr[i]], hr[2], sr[i])
    } else if (i < 64) {
      tl = fn4(al, bl, cl, dl, el, words[zl[i]], hl[3], sl[i])
      tr = fn2(ar, br, cr, dr, er, words[zr[i]], hr[3], sr[i])
    } else { // if (i<80) {
      tl = fn5(al, bl, cl, dl, el, words[zl[i]], hl[4], sl[i])
      tr = fn1(ar, br, cr, dr, er, words[zr[i]], hr[4], sr[i])
    }

    al = el
    el = dl
    dl = rotl(cl, 10)
    cl = bl
    bl = tl

    ar = er
    er = dr
    dr = rotl(cr, 10)
    cr = br
    br = tr
  }

  // update state
  var t = (this._b + cl + dr) | 0
  this._b = (this._c + dl + er) | 0
  this._c = (this._d + el + ar) | 0
  this._d = (this._e + al + br) | 0
  this._e = (this._a + bl + cr) | 0
  this._a = t
}

RIPEMD160.prototype._digest = function () {
  // create padding and handle blocks
  this._block[this._blockOffset++] = 0x80
  if (this._blockOffset > 56) {
    this._block.fill(0, this._blockOffset, 64)
    this._update()
    this._blockOffset = 0
  }

  this._block.fill(0, this._blockOffset, 56)
  this._block.writeUInt32LE(this._length[0], 56)
  this._block.writeUInt32LE(this._length[1], 60)
  this._update()

  // produce result
  var buffer = Buffer.alloc ? Buffer.alloc(20) : new Buffer(20)
  buffer.writeInt32LE(this._a, 0)
  buffer.writeInt32LE(this._b, 4)
  buffer.writeInt32LE(this._c, 8)
  buffer.writeInt32LE(this._d, 12)
  buffer.writeInt32LE(this._e, 16)
  return buffer
}

function rotl (x, n) {
  return (x << n) | (x >>> (32 - n))
}

function fn1 (a, b, c, d, e, m, k, s) {
  return (rotl((a + (b ^ c ^ d) + m + k) | 0, s) + e) | 0
}

function fn2 (a, b, c, d, e, m, k, s) {
  return (rotl((a + ((b & c) | ((~b) & d)) + m + k) | 0, s) + e) | 0
}

function fn3 (a, b, c, d, e, m, k, s) {
  return (rotl((a + ((b | (~c)) ^ d) + m + k) | 0, s) + e) | 0
}

function fn4 (a, b, c, d, e, m, k, s) {
  return (rotl((a + ((b & d) | (c & (~d))) + m + k) | 0, s) + e) | 0
}

function fn5 (a, b, c, d, e, m, k, s) {
  return (rotl((a + (b ^ (c | (~d))) + m + k) | 0, s) + e) | 0
}

module.exports = RIPEMD160


/***/ }),

/***/ "./node_modules/safe-buffer/index.js":
/*!*******************************************!*\
  !*** ./node_modules/safe-buffer/index.js ***!
  \*******************************************/
/***/ ((module, exports, __webpack_require__) => {

/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */
/* eslint-disable node/no-deprecated-api */
var buffer = __webpack_require__(/*! buffer */ "./node_modules/buffer/index.js")
var Buffer = buffer.Buffer

// alternative to using Object.keys for old browsers
function copyProps (src, dst) {
  for (var key in src) {
    dst[key] = src[key]
  }
}
if (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {
  module.exports = buffer
} else {
  // Copy properties from require('buffer')
  copyProps(buffer, exports)
  exports.Buffer = SafeBuffer
}

function SafeBuffer (arg, encodingOrOffset, length) {
  return Buffer(arg, encodingOrOffset, length)
}

SafeBuffer.prototype = Object.create(Buffer.prototype)

// Copy static methods from Buffer
copyProps(Buffer, SafeBuffer)

SafeBuffer.from = function (arg, encodingOrOffset, length) {
  if (typeof arg === 'number') {
    throw new TypeError('Argument must not be a number')
  }
  return Buffer(arg, encodingOrOffset, length)
}

SafeBuffer.alloc = function (size, fill, encoding) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  var buf = Buffer(size)
  if (fill !== undefined) {
    if (typeof encoding === 'string') {
      buf.fill(fill, encoding)
    } else {
      buf.fill(fill)
    }
  } else {
    buf.fill(0)
  }
  return buf
}

SafeBuffer.allocUnsafe = function (size) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  return Buffer(size)
}

SafeBuffer.allocUnsafeSlow = function (size) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  return buffer.SlowBuffer(size)
}


/***/ }),

/***/ "./node_modules/safer-buffer/safer.js":
/*!********************************************!*\
  !*** ./node_modules/safer-buffer/safer.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
/* eslint-disable node/no-deprecated-api */



var buffer = __webpack_require__(/*! buffer */ "./node_modules/buffer/index.js")
var Buffer = buffer.Buffer

var safer = {}

var key

for (key in buffer) {
  if (!buffer.hasOwnProperty(key)) continue
  if (key === 'SlowBuffer' || key === 'Buffer') continue
  safer[key] = buffer[key]
}

var Safer = safer.Buffer = {}
for (key in Buffer) {
  if (!Buffer.hasOwnProperty(key)) continue
  if (key === 'allocUnsafe' || key === 'allocUnsafeSlow') continue
  Safer[key] = Buffer[key]
}

safer.Buffer.prototype = Buffer.prototype

if (!Safer.from || Safer.from === Uint8Array.from) {
  Safer.from = function (value, encodingOrOffset, length) {
    if (typeof value === 'number') {
      throw new TypeError('The "value" argument must not be of type number. Received type ' + typeof value)
    }
    if (value && typeof value.length === 'undefined') {
      throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type ' + typeof value)
    }
    return Buffer(value, encodingOrOffset, length)
  }
}

if (!Safer.alloc) {
  Safer.alloc = function (size, fill, encoding) {
    if (typeof size !== 'number') {
      throw new TypeError('The "size" argument must be of type number. Received type ' + typeof size)
    }
    if (size < 0 || size >= 2 * (1 << 30)) {
      throw new RangeError('The value "' + size + '" is invalid for option "size"')
    }
    var buf = Buffer(size)
    if (!fill || fill.length === 0) {
      buf.fill(0)
    } else if (typeof encoding === 'string') {
      buf.fill(fill, encoding)
    } else {
      buf.fill(fill)
    }
    return buf
  }
}

if (!safer.kStringMaxLength) {
  try {
    safer.kStringMaxLength = process.binding('buffer').kStringMaxLength
  } catch (e) {
    // we can't determine kStringMaxLength in environments where process.binding
    // is unsupported, so let's not set it
  }
}

if (!safer.constants) {
  safer.constants = {
    MAX_LENGTH: safer.kMaxLength
  }
  if (safer.kStringMaxLength) {
    safer.constants.MAX_STRING_LENGTH = safer.kStringMaxLength
  }
}

module.exports = safer


/***/ }),

/***/ "./node_modules/sha.js/hash.js":
/*!*************************************!*\
  !*** ./node_modules/sha.js/hash.js ***!
  \*************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer

// prototype class for hash functions
function Hash (blockSize, finalSize) {
  this._block = Buffer.alloc(blockSize)
  this._finalSize = finalSize
  this._blockSize = blockSize
  this._len = 0
}

Hash.prototype.update = function (data, enc) {
  if (typeof data === 'string') {
    enc = enc || 'utf8'
    data = Buffer.from(data, enc)
  }

  var block = this._block
  var blockSize = this._blockSize
  var length = data.length
  var accum = this._len

  for (var offset = 0; offset < length;) {
    var assigned = accum % blockSize
    var remainder = Math.min(length - offset, blockSize - assigned)

    for (var i = 0; i < remainder; i++) {
      block[assigned + i] = data[offset + i]
    }

    accum += remainder
    offset += remainder

    if ((accum % blockSize) === 0) {
      this._update(block)
    }
  }

  this._len += length
  return this
}

Hash.prototype.digest = function (enc) {
  var rem = this._len % this._blockSize

  this._block[rem] = 0x80

  // zero (rem + 1) trailing bits, where (rem + 1) is the smallest
  // non-negative solution to the equation (length + 1 + (rem + 1)) === finalSize mod blockSize
  this._block.fill(0, rem + 1)

  if (rem >= this._finalSize) {
    this._update(this._block)
    this._block.fill(0)
  }

  var bits = this._len * 8

  // uint32
  if (bits <= 0xffffffff) {
    this._block.writeUInt32BE(bits, this._blockSize - 4)

  // uint64
  } else {
    var lowBits = (bits & 0xffffffff) >>> 0
    var highBits = (bits - lowBits) / 0x100000000

    this._block.writeUInt32BE(highBits, this._blockSize - 8)
    this._block.writeUInt32BE(lowBits, this._blockSize - 4)
  }

  this._update(this._block)
  var hash = this._hash()

  return enc ? hash.toString(enc) : hash
}

Hash.prototype._update = function () {
  throw new Error('_update must be implemented by subclass')
}

module.exports = Hash


/***/ }),

/***/ "./node_modules/sha.js/index.js":
/*!**************************************!*\
  !*** ./node_modules/sha.js/index.js ***!
  \**************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var exports = module.exports = function SHA (algorithm) {
  algorithm = algorithm.toLowerCase()

  var Algorithm = exports[algorithm]
  if (!Algorithm) throw new Error(algorithm + ' is not supported (we accept pull requests)')

  return new Algorithm()
}

exports.sha = __webpack_require__(/*! ./sha */ "./node_modules/sha.js/sha.js")
exports.sha1 = __webpack_require__(/*! ./sha1 */ "./node_modules/sha.js/sha1.js")
exports.sha224 = __webpack_require__(/*! ./sha224 */ "./node_modules/sha.js/sha224.js")
exports.sha256 = __webpack_require__(/*! ./sha256 */ "./node_modules/sha.js/sha256.js")
exports.sha384 = __webpack_require__(/*! ./sha384 */ "./node_modules/sha.js/sha384.js")
exports.sha512 = __webpack_require__(/*! ./sha512 */ "./node_modules/sha.js/sha512.js")


/***/ }),

/***/ "./node_modules/sha.js/sha.js":
/*!************************************!*\
  !*** ./node_modules/sha.js/sha.js ***!
  \************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

/*
 * A JavaScript implementation of the Secure Hash Algorithm, SHA-0, as defined
 * in FIPS PUB 180-1
 * This source code is derived from sha1.js of the same repository.
 * The difference between SHA-0 and SHA-1 is just a bitwise rotate left
 * operation was added.
 */

var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")
var Hash = __webpack_require__(/*! ./hash */ "./node_modules/sha.js/hash.js")
var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer

var K = [
  0x5a827999, 0x6ed9eba1, 0x8f1bbcdc | 0, 0xca62c1d6 | 0
]

var W = new Array(80)

function Sha () {
  this.init()
  this._w = W

  Hash.call(this, 64, 56)
}

inherits(Sha, Hash)

Sha.prototype.init = function () {
  this._a = 0x67452301
  this._b = 0xefcdab89
  this._c = 0x98badcfe
  this._d = 0x10325476
  this._e = 0xc3d2e1f0

  return this
}

function rotl5 (num) {
  return (num << 5) | (num >>> 27)
}

function rotl30 (num) {
  return (num << 30) | (num >>> 2)
}

function ft (s, b, c, d) {
  if (s === 0) return (b & c) | ((~b) & d)
  if (s === 2) return (b & c) | (b & d) | (c & d)
  return b ^ c ^ d
}

Sha.prototype._update = function (M) {
  var W = this._w

  var a = this._a | 0
  var b = this._b | 0
  var c = this._c | 0
  var d = this._d | 0
  var e = this._e | 0

  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)
  for (; i < 80; ++i) W[i] = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16]

  for (var j = 0; j < 80; ++j) {
    var s = ~~(j / 20)
    var t = (rotl5(a) + ft(s, b, c, d) + e + W[j] + K[s]) | 0

    e = d
    d = c
    c = rotl30(b)
    b = a
    a = t
  }

  this._a = (a + this._a) | 0
  this._b = (b + this._b) | 0
  this._c = (c + this._c) | 0
  this._d = (d + this._d) | 0
  this._e = (e + this._e) | 0
}

Sha.prototype._hash = function () {
  var H = Buffer.allocUnsafe(20)

  H.writeInt32BE(this._a | 0, 0)
  H.writeInt32BE(this._b | 0, 4)
  H.writeInt32BE(this._c | 0, 8)
  H.writeInt32BE(this._d | 0, 12)
  H.writeInt32BE(this._e | 0, 16)

  return H
}

module.exports = Sha


/***/ }),

/***/ "./node_modules/sha.js/sha1.js":
/*!*************************************!*\
  !*** ./node_modules/sha.js/sha1.js ***!
  \*************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

/*
 * A JavaScript implementation of the Secure Hash Algorithm, SHA-1, as defined
 * in FIPS PUB 180-1
 * Version 2.1a Copyright Paul Johnston 2000 - 2002.
 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
 * Distributed under the BSD License
 * See http://pajhome.org.uk/crypt/md5 for details.
 */

var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")
var Hash = __webpack_require__(/*! ./hash */ "./node_modules/sha.js/hash.js")
var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer

var K = [
  0x5a827999, 0x6ed9eba1, 0x8f1bbcdc | 0, 0xca62c1d6 | 0
]

var W = new Array(80)

function Sha1 () {
  this.init()
  this._w = W

  Hash.call(this, 64, 56)
}

inherits(Sha1, Hash)

Sha1.prototype.init = function () {
  this._a = 0x67452301
  this._b = 0xefcdab89
  this._c = 0x98badcfe
  this._d = 0x10325476
  this._e = 0xc3d2e1f0

  return this
}

function rotl1 (num) {
  return (num << 1) | (num >>> 31)
}

function rotl5 (num) {
  return (num << 5) | (num >>> 27)
}

function rotl30 (num) {
  return (num << 30) | (num >>> 2)
}

function ft (s, b, c, d) {
  if (s === 0) return (b & c) | ((~b) & d)
  if (s === 2) return (b & c) | (b & d) | (c & d)
  return b ^ c ^ d
}

Sha1.prototype._update = function (M) {
  var W = this._w

  var a = this._a | 0
  var b = this._b | 0
  var c = this._c | 0
  var d = this._d | 0
  var e = this._e | 0

  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)
  for (; i < 80; ++i) W[i] = rotl1(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16])

  for (var j = 0; j < 80; ++j) {
    var s = ~~(j / 20)
    var t = (rotl5(a) + ft(s, b, c, d) + e + W[j] + K[s]) | 0

    e = d
    d = c
    c = rotl30(b)
    b = a
    a = t
  }

  this._a = (a + this._a) | 0
  this._b = (b + this._b) | 0
  this._c = (c + this._c) | 0
  this._d = (d + this._d) | 0
  this._e = (e + this._e) | 0
}

Sha1.prototype._hash = function () {
  var H = Buffer.allocUnsafe(20)

  H.writeInt32BE(this._a | 0, 0)
  H.writeInt32BE(this._b | 0, 4)
  H.writeInt32BE(this._c | 0, 8)
  H.writeInt32BE(this._d | 0, 12)
  H.writeInt32BE(this._e | 0, 16)

  return H
}

module.exports = Sha1


/***/ }),

/***/ "./node_modules/sha.js/sha224.js":
/*!***************************************!*\
  !*** ./node_modules/sha.js/sha224.js ***!
  \***************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

/**
 * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined
 * in FIPS 180-2
 * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.
 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
 *
 */

var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")
var Sha256 = __webpack_require__(/*! ./sha256 */ "./node_modules/sha.js/sha256.js")
var Hash = __webpack_require__(/*! ./hash */ "./node_modules/sha.js/hash.js")
var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer

var W = new Array(64)

function Sha224 () {
  this.init()

  this._w = W // new Array(64)

  Hash.call(this, 64, 56)
}

inherits(Sha224, Sha256)

Sha224.prototype.init = function () {
  this._a = 0xc1059ed8
  this._b = 0x367cd507
  this._c = 0x3070dd17
  this._d = 0xf70e5939
  this._e = 0xffc00b31
  this._f = 0x68581511
  this._g = 0x64f98fa7
  this._h = 0xbefa4fa4

  return this
}

Sha224.prototype._hash = function () {
  var H = Buffer.allocUnsafe(28)

  H.writeInt32BE(this._a, 0)
  H.writeInt32BE(this._b, 4)
  H.writeInt32BE(this._c, 8)
  H.writeInt32BE(this._d, 12)
  H.writeInt32BE(this._e, 16)
  H.writeInt32BE(this._f, 20)
  H.writeInt32BE(this._g, 24)

  return H
}

module.exports = Sha224


/***/ }),

/***/ "./node_modules/sha.js/sha256.js":
/*!***************************************!*\
  !*** ./node_modules/sha.js/sha256.js ***!
  \***************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

/**
 * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined
 * in FIPS 180-2
 * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.
 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
 *
 */

var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")
var Hash = __webpack_require__(/*! ./hash */ "./node_modules/sha.js/hash.js")
var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer

var K = [
  0x428A2F98, 0x71374491, 0xB5C0FBCF, 0xE9B5DBA5,
  0x3956C25B, 0x59F111F1, 0x923F82A4, 0xAB1C5ED5,
  0xD807AA98, 0x12835B01, 0x243185BE, 0x550C7DC3,
  0x72BE5D74, 0x80DEB1FE, 0x9BDC06A7, 0xC19BF174,
  0xE49B69C1, 0xEFBE4786, 0x0FC19DC6, 0x240CA1CC,
  0x2DE92C6F, 0x4A7484AA, 0x5CB0A9DC, 0x76F988DA,
  0x983E5152, 0xA831C66D, 0xB00327C8, 0xBF597FC7,
  0xC6E00BF3, 0xD5A79147, 0x06CA6351, 0x14292967,
  0x27B70A85, 0x2E1B2138, 0x4D2C6DFC, 0x53380D13,
  0x650A7354, 0x766A0ABB, 0x81C2C92E, 0x92722C85,
  0xA2BFE8A1, 0xA81A664B, 0xC24B8B70, 0xC76C51A3,
  0xD192E819, 0xD6990624, 0xF40E3585, 0x106AA070,
  0x19A4C116, 0x1E376C08, 0x2748774C, 0x34B0BCB5,
  0x391C0CB3, 0x4ED8AA4A, 0x5B9CCA4F, 0x682E6FF3,
  0x748F82EE, 0x78A5636F, 0x84C87814, 0x8CC70208,
  0x90BEFFFA, 0xA4506CEB, 0xBEF9A3F7, 0xC67178F2
]

var W = new Array(64)

function Sha256 () {
  this.init()

  this._w = W // new Array(64)

  Hash.call(this, 64, 56)
}

inherits(Sha256, Hash)

Sha256.prototype.init = function () {
  this._a = 0x6a09e667
  this._b = 0xbb67ae85
  this._c = 0x3c6ef372
  this._d = 0xa54ff53a
  this._e = 0x510e527f
  this._f = 0x9b05688c
  this._g = 0x1f83d9ab
  this._h = 0x5be0cd19

  return this
}

function ch (x, y, z) {
  return z ^ (x & (y ^ z))
}

function maj (x, y, z) {
  return (x & y) | (z & (x | y))
}

function sigma0 (x) {
  return (x >>> 2 | x << 30) ^ (x >>> 13 | x << 19) ^ (x >>> 22 | x << 10)
}

function sigma1 (x) {
  return (x >>> 6 | x << 26) ^ (x >>> 11 | x << 21) ^ (x >>> 25 | x << 7)
}

function gamma0 (x) {
  return (x >>> 7 | x << 25) ^ (x >>> 18 | x << 14) ^ (x >>> 3)
}

function gamma1 (x) {
  return (x >>> 17 | x << 15) ^ (x >>> 19 | x << 13) ^ (x >>> 10)
}

Sha256.prototype._update = function (M) {
  var W = this._w

  var a = this._a | 0
  var b = this._b | 0
  var c = this._c | 0
  var d = this._d | 0
  var e = this._e | 0
  var f = this._f | 0
  var g = this._g | 0
  var h = this._h | 0

  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)
  for (; i < 64; ++i) W[i] = (gamma1(W[i - 2]) + W[i - 7] + gamma0(W[i - 15]) + W[i - 16]) | 0

  for (var j = 0; j < 64; ++j) {
    var T1 = (h + sigma1(e) + ch(e, f, g) + K[j] + W[j]) | 0
    var T2 = (sigma0(a) + maj(a, b, c)) | 0

    h = g
    g = f
    f = e
    e = (d + T1) | 0
    d = c
    c = b
    b = a
    a = (T1 + T2) | 0
  }

  this._a = (a + this._a) | 0
  this._b = (b + this._b) | 0
  this._c = (c + this._c) | 0
  this._d = (d + this._d) | 0
  this._e = (e + this._e) | 0
  this._f = (f + this._f) | 0
  this._g = (g + this._g) | 0
  this._h = (h + this._h) | 0
}

Sha256.prototype._hash = function () {
  var H = Buffer.allocUnsafe(32)

  H.writeInt32BE(this._a, 0)
  H.writeInt32BE(this._b, 4)
  H.writeInt32BE(this._c, 8)
  H.writeInt32BE(this._d, 12)
  H.writeInt32BE(this._e, 16)
  H.writeInt32BE(this._f, 20)
  H.writeInt32BE(this._g, 24)
  H.writeInt32BE(this._h, 28)

  return H
}

module.exports = Sha256


/***/ }),

/***/ "./node_modules/sha.js/sha384.js":
/*!***************************************!*\
  !*** ./node_modules/sha.js/sha384.js ***!
  \***************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")
var SHA512 = __webpack_require__(/*! ./sha512 */ "./node_modules/sha.js/sha512.js")
var Hash = __webpack_require__(/*! ./hash */ "./node_modules/sha.js/hash.js")
var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer

var W = new Array(160)

function Sha384 () {
  this.init()
  this._w = W

  Hash.call(this, 128, 112)
}

inherits(Sha384, SHA512)

Sha384.prototype.init = function () {
  this._ah = 0xcbbb9d5d
  this._bh = 0x629a292a
  this._ch = 0x9159015a
  this._dh = 0x152fecd8
  this._eh = 0x67332667
  this._fh = 0x8eb44a87
  this._gh = 0xdb0c2e0d
  this._hh = 0x47b5481d

  this._al = 0xc1059ed8
  this._bl = 0x367cd507
  this._cl = 0x3070dd17
  this._dl = 0xf70e5939
  this._el = 0xffc00b31
  this._fl = 0x68581511
  this._gl = 0x64f98fa7
  this._hl = 0xbefa4fa4

  return this
}

Sha384.prototype._hash = function () {
  var H = Buffer.allocUnsafe(48)

  function writeInt64BE (h, l, offset) {
    H.writeInt32BE(h, offset)
    H.writeInt32BE(l, offset + 4)
  }

  writeInt64BE(this._ah, this._al, 0)
  writeInt64BE(this._bh, this._bl, 8)
  writeInt64BE(this._ch, this._cl, 16)
  writeInt64BE(this._dh, this._dl, 24)
  writeInt64BE(this._eh, this._el, 32)
  writeInt64BE(this._fh, this._fl, 40)

  return H
}

module.exports = Sha384


/***/ }),

/***/ "./node_modules/sha.js/sha512.js":
/*!***************************************!*\
  !*** ./node_modules/sha.js/sha512.js ***!
  \***************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")
var Hash = __webpack_require__(/*! ./hash */ "./node_modules/sha.js/hash.js")
var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer

var K = [
  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,
  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,
  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,
  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,
  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,
  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,
  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,
  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,
  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,
  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,
  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,
  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,
  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,
  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,
  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,
  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,
  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,
  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,
  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,
  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,
  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,
  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,
  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,
  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,
  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,
  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,
  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,
  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,
  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,
  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,
  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,
  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,
  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,
  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,
  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,
  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,
  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,
  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,
  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,
  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817
]

var W = new Array(160)

function Sha512 () {
  this.init()
  this._w = W

  Hash.call(this, 128, 112)
}

inherits(Sha512, Hash)

Sha512.prototype.init = function () {
  this._ah = 0x6a09e667
  this._bh = 0xbb67ae85
  this._ch = 0x3c6ef372
  this._dh = 0xa54ff53a
  this._eh = 0x510e527f
  this._fh = 0x9b05688c
  this._gh = 0x1f83d9ab
  this._hh = 0x5be0cd19

  this._al = 0xf3bcc908
  this._bl = 0x84caa73b
  this._cl = 0xfe94f82b
  this._dl = 0x5f1d36f1
  this._el = 0xade682d1
  this._fl = 0x2b3e6c1f
  this._gl = 0xfb41bd6b
  this._hl = 0x137e2179

  return this
}

function Ch (x, y, z) {
  return z ^ (x & (y ^ z))
}

function maj (x, y, z) {
  return (x & y) | (z & (x | y))
}

function sigma0 (x, xl) {
  return (x >>> 28 | xl << 4) ^ (xl >>> 2 | x << 30) ^ (xl >>> 7 | x << 25)
}

function sigma1 (x, xl) {
  return (x >>> 14 | xl << 18) ^ (x >>> 18 | xl << 14) ^ (xl >>> 9 | x << 23)
}

function Gamma0 (x, xl) {
  return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ (x >>> 7)
}

function Gamma0l (x, xl) {
  return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ (x >>> 7 | xl << 25)
}

function Gamma1 (x, xl) {
  return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ (x >>> 6)
}

function Gamma1l (x, xl) {
  return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ (x >>> 6 | xl << 26)
}

function getCarry (a, b) {
  return (a >>> 0) < (b >>> 0) ? 1 : 0
}

Sha512.prototype._update = function (M) {
  var W = this._w

  var ah = this._ah | 0
  var bh = this._bh | 0
  var ch = this._ch | 0
  var dh = this._dh | 0
  var eh = this._eh | 0
  var fh = this._fh | 0
  var gh = this._gh | 0
  var hh = this._hh | 0

  var al = this._al | 0
  var bl = this._bl | 0
  var cl = this._cl | 0
  var dl = this._dl | 0
  var el = this._el | 0
  var fl = this._fl | 0
  var gl = this._gl | 0
  var hl = this._hl | 0

  for (var i = 0; i < 32; i += 2) {
    W[i] = M.readInt32BE(i * 4)
    W[i + 1] = M.readInt32BE(i * 4 + 4)
  }
  for (; i < 160; i += 2) {
    var xh = W[i - 15 * 2]
    var xl = W[i - 15 * 2 + 1]
    var gamma0 = Gamma0(xh, xl)
    var gamma0l = Gamma0l(xl, xh)

    xh = W[i - 2 * 2]
    xl = W[i - 2 * 2 + 1]
    var gamma1 = Gamma1(xh, xl)
    var gamma1l = Gamma1l(xl, xh)

    // W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16]
    var Wi7h = W[i - 7 * 2]
    var Wi7l = W[i - 7 * 2 + 1]

    var Wi16h = W[i - 16 * 2]
    var Wi16l = W[i - 16 * 2 + 1]

    var Wil = (gamma0l + Wi7l) | 0
    var Wih = (gamma0 + Wi7h + getCarry(Wil, gamma0l)) | 0
    Wil = (Wil + gamma1l) | 0
    Wih = (Wih + gamma1 + getCarry(Wil, gamma1l)) | 0
    Wil = (Wil + Wi16l) | 0
    Wih = (Wih + Wi16h + getCarry(Wil, Wi16l)) | 0

    W[i] = Wih
    W[i + 1] = Wil
  }

  for (var j = 0; j < 160; j += 2) {
    Wih = W[j]
    Wil = W[j + 1]

    var majh = maj(ah, bh, ch)
    var majl = maj(al, bl, cl)

    var sigma0h = sigma0(ah, al)
    var sigma0l = sigma0(al, ah)
    var sigma1h = sigma1(eh, el)
    var sigma1l = sigma1(el, eh)

    // t1 = h + sigma1 + ch + K[j] + W[j]
    var Kih = K[j]
    var Kil = K[j + 1]

    var chh = Ch(eh, fh, gh)
    var chl = Ch(el, fl, gl)

    var t1l = (hl + sigma1l) | 0
    var t1h = (hh + sigma1h + getCarry(t1l, hl)) | 0
    t1l = (t1l + chl) | 0
    t1h = (t1h + chh + getCarry(t1l, chl)) | 0
    t1l = (t1l + Kil) | 0
    t1h = (t1h + Kih + getCarry(t1l, Kil)) | 0
    t1l = (t1l + Wil) | 0
    t1h = (t1h + Wih + getCarry(t1l, Wil)) | 0

    // t2 = sigma0 + maj
    var t2l = (sigma0l + majl) | 0
    var t2h = (sigma0h + majh + getCarry(t2l, sigma0l)) | 0

    hh = gh
    hl = gl
    gh = fh
    gl = fl
    fh = eh
    fl = el
    el = (dl + t1l) | 0
    eh = (dh + t1h + getCarry(el, dl)) | 0
    dh = ch
    dl = cl
    ch = bh
    cl = bl
    bh = ah
    bl = al
    al = (t1l + t2l) | 0
    ah = (t1h + t2h + getCarry(al, t1l)) | 0
  }

  this._al = (this._al + al) | 0
  this._bl = (this._bl + bl) | 0
  this._cl = (this._cl + cl) | 0
  this._dl = (this._dl + dl) | 0
  this._el = (this._el + el) | 0
  this._fl = (this._fl + fl) | 0
  this._gl = (this._gl + gl) | 0
  this._hl = (this._hl + hl) | 0

  this._ah = (this._ah + ah + getCarry(this._al, al)) | 0
  this._bh = (this._bh + bh + getCarry(this._bl, bl)) | 0
  this._ch = (this._ch + ch + getCarry(this._cl, cl)) | 0
  this._dh = (this._dh + dh + getCarry(this._dl, dl)) | 0
  this._eh = (this._eh + eh + getCarry(this._el, el)) | 0
  this._fh = (this._fh + fh + getCarry(this._fl, fl)) | 0
  this._gh = (this._gh + gh + getCarry(this._gl, gl)) | 0
  this._hh = (this._hh + hh + getCarry(this._hl, hl)) | 0
}

Sha512.prototype._hash = function () {
  var H = Buffer.allocUnsafe(64)

  function writeInt64BE (h, l, offset) {
    H.writeInt32BE(h, offset)
    H.writeInt32BE(l, offset + 4)
  }

  writeInt64BE(this._ah, this._al, 0)
  writeInt64BE(this._bh, this._bl, 8)
  writeInt64BE(this._ch, this._cl, 16)
  writeInt64BE(this._dh, this._dl, 24)
  writeInt64BE(this._eh, this._el, 32)
  writeInt64BE(this._fh, this._fl, 40)
  writeInt64BE(this._gh, this._gl, 48)
  writeInt64BE(this._hh, this._hl, 56)

  return H
}

module.exports = Sha512


/***/ }),

/***/ "./node_modules/string_decoder/lib/string_decoder.js":
/*!***********************************************************!*\
  !*** ./node_modules/string_decoder/lib/string_decoder.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.



/*<replacement>*/

var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/string_decoder/node_modules/safe-buffer/index.js").Buffer;
/*</replacement>*/

var isEncoding = Buffer.isEncoding || function (encoding) {
  encoding = '' + encoding;
  switch (encoding && encoding.toLowerCase()) {
    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':
      return true;
    default:
      return false;
  }
};

function _normalizeEncoding(enc) {
  if (!enc) return 'utf8';
  var retried;
  while (true) {
    switch (enc) {
      case 'utf8':
      case 'utf-8':
        return 'utf8';
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return 'utf16le';
      case 'latin1':
      case 'binary':
        return 'latin1';
      case 'base64':
      case 'ascii':
      case 'hex':
        return enc;
      default:
        if (retried) return; // undefined
        enc = ('' + enc).toLowerCase();
        retried = true;
    }
  }
};

// Do not cache `Buffer.isEncoding` when checking encoding names as some
// modules monkey-patch it to support additional encodings
function normalizeEncoding(enc) {
  var nenc = _normalizeEncoding(enc);
  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);
  return nenc || enc;
}

// StringDecoder provides an interface for efficiently splitting a series of
// buffers into a series of JS strings without breaking apart multi-byte
// characters.
exports.StringDecoder = StringDecoder;
function StringDecoder(encoding) {
  this.encoding = normalizeEncoding(encoding);
  var nb;
  switch (this.encoding) {
    case 'utf16le':
      this.text = utf16Text;
      this.end = utf16End;
      nb = 4;
      break;
    case 'utf8':
      this.fillLast = utf8FillLast;
      nb = 4;
      break;
    case 'base64':
      this.text = base64Text;
      this.end = base64End;
      nb = 3;
      break;
    default:
      this.write = simpleWrite;
      this.end = simpleEnd;
      return;
  }
  this.lastNeed = 0;
  this.lastTotal = 0;
  this.lastChar = Buffer.allocUnsafe(nb);
}

StringDecoder.prototype.write = function (buf) {
  if (buf.length === 0) return '';
  var r;
  var i;
  if (this.lastNeed) {
    r = this.fillLast(buf);
    if (r === undefined) return '';
    i = this.lastNeed;
    this.lastNeed = 0;
  } else {
    i = 0;
  }
  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);
  return r || '';
};

StringDecoder.prototype.end = utf8End;

// Returns only complete characters in a Buffer
StringDecoder.prototype.text = utf8Text;

// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer
StringDecoder.prototype.fillLast = function (buf) {
  if (this.lastNeed <= buf.length) {
    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);
    return this.lastChar.toString(this.encoding, 0, this.lastTotal);
  }
  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);
  this.lastNeed -= buf.length;
};

// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a
// continuation byte. If an invalid byte is detected, -2 is returned.
function utf8CheckByte(byte) {
  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;
  return byte >> 6 === 0x02 ? -1 : -2;
}

// Checks at most 3 bytes at the end of a Buffer in order to detect an
// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)
// needed to complete the UTF-8 character (if applicable) are returned.
function utf8CheckIncomplete(self, buf, i) {
  var j = buf.length - 1;
  if (j < i) return 0;
  var nb = utf8CheckByte(buf[j]);
  if (nb >= 0) {
    if (nb > 0) self.lastNeed = nb - 1;
    return nb;
  }
  if (--j < i || nb === -2) return 0;
  nb = utf8CheckByte(buf[j]);
  if (nb >= 0) {
    if (nb > 0) self.lastNeed = nb - 2;
    return nb;
  }
  if (--j < i || nb === -2) return 0;
  nb = utf8CheckByte(buf[j]);
  if (nb >= 0) {
    if (nb > 0) {
      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;
    }
    return nb;
  }
  return 0;
}

// Validates as many continuation bytes for a multi-byte UTF-8 character as
// needed or are available. If we see a non-continuation byte where we expect
// one, we "replace" the validated continuation bytes we've seen so far with
// a single UTF-8 replacement character ('\ufffd'), to match v8's UTF-8 decoding
// behavior. The continuation byte check is included three times in the case
// where all of the continuation bytes for a character exist in the same buffer.
// It is also done this way as a slight performance increase instead of using a
// loop.
function utf8CheckExtraBytes(self, buf, p) {
  if ((buf[0] & 0xC0) !== 0x80) {
    self.lastNeed = 0;
    return '\ufffd';
  }
  if (self.lastNeed > 1 && buf.length > 1) {
    if ((buf[1] & 0xC0) !== 0x80) {
      self.lastNeed = 1;
      return '\ufffd';
    }
    if (self.lastNeed > 2 && buf.length > 2) {
      if ((buf[2] & 0xC0) !== 0x80) {
        self.lastNeed = 2;
        return '\ufffd';
      }
    }
  }
}

// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.
function utf8FillLast(buf) {
  var p = this.lastTotal - this.lastNeed;
  var r = utf8CheckExtraBytes(this, buf, p);
  if (r !== undefined) return r;
  if (this.lastNeed <= buf.length) {
    buf.copy(this.lastChar, p, 0, this.lastNeed);
    return this.lastChar.toString(this.encoding, 0, this.lastTotal);
  }
  buf.copy(this.lastChar, p, 0, buf.length);
  this.lastNeed -= buf.length;
}

// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a
// partial character, the character's bytes are buffered until the required
// number of bytes are available.
function utf8Text(buf, i) {
  var total = utf8CheckIncomplete(this, buf, i);
  if (!this.lastNeed) return buf.toString('utf8', i);
  this.lastTotal = total;
  var end = buf.length - (total - this.lastNeed);
  buf.copy(this.lastChar, 0, end);
  return buf.toString('utf8', i, end);
}

// For UTF-8, a replacement character is added when ending on a partial
// character.
function utf8End(buf) {
  var r = buf && buf.length ? this.write(buf) : '';
  if (this.lastNeed) return r + '\ufffd';
  return r;
}

// UTF-16LE typically needs two bytes per character, but even if we have an even
// number of bytes available, we need to check if we end on a leading/high
// surrogate. In that case, we need to wait for the next two bytes in order to
// decode the last character properly.
function utf16Text(buf, i) {
  if ((buf.length - i) % 2 === 0) {
    var r = buf.toString('utf16le', i);
    if (r) {
      var c = r.charCodeAt(r.length - 1);
      if (c >= 0xD800 && c <= 0xDBFF) {
        this.lastNeed = 2;
        this.lastTotal = 4;
        this.lastChar[0] = buf[buf.length - 2];
        this.lastChar[1] = buf[buf.length - 1];
        return r.slice(0, -1);
      }
    }
    return r;
  }
  this.lastNeed = 1;
  this.lastTotal = 2;
  this.lastChar[0] = buf[buf.length - 1];
  return buf.toString('utf16le', i, buf.length - 1);
}

// For UTF-16LE we do not explicitly append special replacement characters if we
// end on a partial character, we simply let v8 handle that.
function utf16End(buf) {
  var r = buf && buf.length ? this.write(buf) : '';
  if (this.lastNeed) {
    var end = this.lastTotal - this.lastNeed;
    return r + this.lastChar.toString('utf16le', 0, end);
  }
  return r;
}

function base64Text(buf, i) {
  var n = (buf.length - i) % 3;
  if (n === 0) return buf.toString('base64', i);
  this.lastNeed = 3 - n;
  this.lastTotal = 3;
  if (n === 1) {
    this.lastChar[0] = buf[buf.length - 1];
  } else {
    this.lastChar[0] = buf[buf.length - 2];
    this.lastChar[1] = buf[buf.length - 1];
  }
  return buf.toString('base64', i, buf.length - n);
}

function base64End(buf) {
  var r = buf && buf.length ? this.write(buf) : '';
  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);
  return r;
}

// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)
function simpleWrite(buf) {
  return buf.toString(this.encoding);
}

function simpleEnd(buf) {
  return buf && buf.length ? this.write(buf) : '';
}

/***/ }),

/***/ "./node_modules/string_decoder/node_modules/safe-buffer/index.js":
/*!***********************************************************************!*\
  !*** ./node_modules/string_decoder/node_modules/safe-buffer/index.js ***!
  \***********************************************************************/
/***/ ((module, exports, __webpack_require__) => {

/* eslint-disable node/no-deprecated-api */
var buffer = __webpack_require__(/*! buffer */ "./node_modules/buffer/index.js")
var Buffer = buffer.Buffer

// alternative to using Object.keys for old browsers
function copyProps (src, dst) {
  for (var key in src) {
    dst[key] = src[key]
  }
}
if (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {
  module.exports = buffer
} else {
  // Copy properties from require('buffer')
  copyProps(buffer, exports)
  exports.Buffer = SafeBuffer
}

function SafeBuffer (arg, encodingOrOffset, length) {
  return Buffer(arg, encodingOrOffset, length)
}

// Copy static methods from Buffer
copyProps(Buffer, SafeBuffer)

SafeBuffer.from = function (arg, encodingOrOffset, length) {
  if (typeof arg === 'number') {
    throw new TypeError('Argument must not be a number')
  }
  return Buffer(arg, encodingOrOffset, length)
}

SafeBuffer.alloc = function (size, fill, encoding) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  var buf = Buffer(size)
  if (fill !== undefined) {
    if (typeof encoding === 'string') {
      buf.fill(fill, encoding)
    } else {
      buf.fill(fill)
    }
  } else {
    buf.fill(0)
  }
  return buf
}

SafeBuffer.allocUnsafe = function (size) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  return Buffer(size)
}

SafeBuffer.allocUnsafeSlow = function (size) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  return buffer.SlowBuffer(size)
}


/***/ }),

/***/ "./node_modules/universal-user-agent/dist-web/index.js":
/*!*************************************************************!*\
  !*** ./node_modules/universal-user-agent/dist-web/index.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getUserAgent": () => (/* binding */ getUserAgent)
/* harmony export */ });
function getUserAgent() {
    if (typeof navigator === "object" && "userAgent" in navigator) {
        return navigator.userAgent;
    }
    if (typeof process === "object" && "version" in process) {
        return `Node.js/${process.version.substr(1)} (${process.platform}; ${process.arch})`;
    }
    return "<environment undetectable>";
}


//# sourceMappingURL=index.js.map


/***/ }),

/***/ "./node_modules/util-deprecate/browser.js":
/*!************************************************!*\
  !*** ./node_modules/util-deprecate/browser.js ***!
  \************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {


/**
 * Module exports.
 */

module.exports = deprecate;

/**
 * Mark that a method should not be used.
 * Returns a modified function which warns once by default.
 *
 * If `localStorage.noDeprecation = true` is set, then it is a no-op.
 *
 * If `localStorage.throwDeprecation = true` is set, then deprecated functions
 * will throw an Error when invoked.
 *
 * If `localStorage.traceDeprecation = true` is set, then deprecated functions
 * will invoke `console.trace()` instead of `console.error()`.
 *
 * @param {Function} fn - the function to deprecate
 * @param {String} msg - the string to print to the console when `fn` is invoked
 * @returns {Function} a new "deprecated" version of `fn`
 * @api public
 */

function deprecate (fn, msg) {
  if (config('noDeprecation')) {
    return fn;
  }

  var warned = false;
  function deprecated() {
    if (!warned) {
      if (config('throwDeprecation')) {
        throw new Error(msg);
      } else if (config('traceDeprecation')) {
        console.trace(msg);
      } else {
        console.warn(msg);
      }
      warned = true;
    }
    return fn.apply(this, arguments);
  }

  return deprecated;
}

/**
 * Checks `localStorage` for boolean values for the given `name`.
 *
 * @param {String} name
 * @returns {Boolean}
 * @api private
 */

function config (name) {
  // accessing global.localStorage can trigger a DOMException in sandboxed iframes
  try {
    if (!__webpack_require__.g.localStorage) return false;
  } catch (_) {
    return false;
  }
  var val = __webpack_require__.g.localStorage[name];
  if (null == val) return false;
  return String(val).toLowerCase() === 'true';
}


/***/ }),

/***/ "./node_modules/wrappy/wrappy.js":
/*!***************************************!*\
  !*** ./node_modules/wrappy/wrappy.js ***!
  \***************************************/
/***/ ((module) => {

// Returns a wrapper function that returns a wrapped callback
// The wrapper function should do some stuff, and return a
// presumably different callback function.
// This makes sure that own properties are retained, so that
// decorations and such are not lost along the way.
module.exports = wrappy
function wrappy (fn, cb) {
  if (fn && cb) return wrappy(fn)(cb)

  if (typeof fn !== 'function')
    throw new TypeError('need wrapper function')

  Object.keys(fn).forEach(function (k) {
    wrapper[k] = fn[k]
  })

  return wrapper

  function wrapper() {
    var args = new Array(arguments.length)
    for (var i = 0; i < args.length; i++) {
      args[i] = arguments[i]
    }
    var ret = fn.apply(this, args)
    var cb = args[args.length-1]
    if (typeof ret === 'function' && ret !== cb) {
      Object.keys(cb).forEach(function (k) {
        ret[k] = cb[k]
      })
    }
    return ret
  }
}


/***/ }),

/***/ "vscode":
/*!*************************!*\
  !*** external "vscode" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("vscode");

/***/ }),

/***/ "?8131":
/*!************************!*\
  !*** buffer (ignored) ***!
  \************************/
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ "?3fc0":
/*!************************!*\
  !*** crypto (ignored) ***!
  \************************/
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ "?f9d4":
/*!************************!*\
  !*** buffer (ignored) ***!
  \************************/
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ "?7a28":
/*!************************!*\
  !*** buffer (ignored) ***!
  \************************/
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ "?cad2":
/*!**********************!*\
  !*** util (ignored) ***!
  \**********************/
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ "?593c":
/*!**********************!*\
  !*** util (ignored) ***!
  \**********************/
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ "?802b":
/*!**********************!*\
  !*** util (ignored) ***!
  \**********************/
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ "?1e44":
/*!**********************!*\
  !*** util (ignored) ***!
  \**********************/
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ "?943a":
/*!************************!*\
  !*** stream (ignored) ***!
  \************************/
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ "./node_modules/is-plain-object/dist/is-plain-object.mjs":
/*!***************************************************************!*\
  !*** ./node_modules/is-plain-object/dist/is-plain-object.mjs ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "isPlainObject": () => (/* binding */ isPlainObject)
/* harmony export */ });
/*!
 * is-plain-object <https://github.com/jonschlinkert/is-plain-object>
 *
 * Copyright (c) 2014-2017, Jon Schlinkert.
 * Released under the MIT License.
 */

function isObject(o) {
  return Object.prototype.toString.call(o) === '[object Object]';
}

function isPlainObject(o) {
  var ctor,prot;

  if (isObject(o) === false) return false;

  // If has modified constructor
  ctor = o.constructor;
  if (ctor === undefined) return true;

  // If has modified prototype
  prot = ctor.prototype;
  if (isObject(prot) === false) return false;

  // If constructor does not have an Object-specific method
  if (prot.hasOwnProperty('isPrototypeOf') === false) {
    return false;
  }

  // Most likely a plain Object
  return true;
}




/***/ }),

/***/ "./node_modules/lodash-es/_DataView.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash-es/_DataView.js ***!
  \*********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _getNative_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_getNative.js */ "./node_modules/lodash-es/_getNative.js");
/* harmony import */ var _root_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_root.js */ "./node_modules/lodash-es/_root.js");



/* Built-in method references that are verified to be native. */
var DataView = (0,_getNative_js__WEBPACK_IMPORTED_MODULE_0__.default)(_root_js__WEBPACK_IMPORTED_MODULE_1__.default, 'DataView');

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (DataView);


/***/ }),

/***/ "./node_modules/lodash-es/_Hash.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash-es/_Hash.js ***!
  \*****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _hashClear_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_hashClear.js */ "./node_modules/lodash-es/_hashClear.js");
/* harmony import */ var _hashDelete_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_hashDelete.js */ "./node_modules/lodash-es/_hashDelete.js");
/* harmony import */ var _hashGet_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./_hashGet.js */ "./node_modules/lodash-es/_hashGet.js");
/* harmony import */ var _hashHas_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./_hashHas.js */ "./node_modules/lodash-es/_hashHas.js");
/* harmony import */ var _hashSet_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./_hashSet.js */ "./node_modules/lodash-es/_hashSet.js");






/**
 * Creates a hash object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function Hash(entries) {
  var index = -1,
      length = entries == null ? 0 : entries.length;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

// Add methods to `Hash`.
Hash.prototype.clear = _hashClear_js__WEBPACK_IMPORTED_MODULE_0__.default;
Hash.prototype['delete'] = _hashDelete_js__WEBPACK_IMPORTED_MODULE_1__.default;
Hash.prototype.get = _hashGet_js__WEBPACK_IMPORTED_MODULE_2__.default;
Hash.prototype.has = _hashHas_js__WEBPACK_IMPORTED_MODULE_3__.default;
Hash.prototype.set = _hashSet_js__WEBPACK_IMPORTED_MODULE_4__.default;

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Hash);


/***/ }),

/***/ "./node_modules/lodash-es/_ListCache.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash-es/_ListCache.js ***!
  \**********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _listCacheClear_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_listCacheClear.js */ "./node_modules/lodash-es/_listCacheClear.js");
/* harmony import */ var _listCacheDelete_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_listCacheDelete.js */ "./node_modules/lodash-es/_listCacheDelete.js");
/* harmony import */ var _listCacheGet_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./_listCacheGet.js */ "./node_modules/lodash-es/_listCacheGet.js");
/* harmony import */ var _listCacheHas_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./_listCacheHas.js */ "./node_modules/lodash-es/_listCacheHas.js");
/* harmony import */ var _listCacheSet_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./_listCacheSet.js */ "./node_modules/lodash-es/_listCacheSet.js");






/**
 * Creates an list cache object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function ListCache(entries) {
  var index = -1,
      length = entries == null ? 0 : entries.length;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

// Add methods to `ListCache`.
ListCache.prototype.clear = _listCacheClear_js__WEBPACK_IMPORTED_MODULE_0__.default;
ListCache.prototype['delete'] = _listCacheDelete_js__WEBPACK_IMPORTED_MODULE_1__.default;
ListCache.prototype.get = _listCacheGet_js__WEBPACK_IMPORTED_MODULE_2__.default;
ListCache.prototype.has = _listCacheHas_js__WEBPACK_IMPORTED_MODULE_3__.default;
ListCache.prototype.set = _listCacheSet_js__WEBPACK_IMPORTED_MODULE_4__.default;

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ListCache);


/***/ }),

/***/ "./node_modules/lodash-es/_Map.js":
/*!****************************************!*\
  !*** ./node_modules/lodash-es/_Map.js ***!
  \****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _getNative_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_getNative.js */ "./node_modules/lodash-es/_getNative.js");
/* harmony import */ var _root_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_root.js */ "./node_modules/lodash-es/_root.js");



/* Built-in method references that are verified to be native. */
var Map = (0,_getNative_js__WEBPACK_IMPORTED_MODULE_0__.default)(_root_js__WEBPACK_IMPORTED_MODULE_1__.default, 'Map');

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Map);


/***/ }),

/***/ "./node_modules/lodash-es/_MapCache.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash-es/_MapCache.js ***!
  \*********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _mapCacheClear_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_mapCacheClear.js */ "./node_modules/lodash-es/_mapCacheClear.js");
/* harmony import */ var _mapCacheDelete_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_mapCacheDelete.js */ "./node_modules/lodash-es/_mapCacheDelete.js");
/* harmony import */ var _mapCacheGet_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./_mapCacheGet.js */ "./node_modules/lodash-es/_mapCacheGet.js");
/* harmony import */ var _mapCacheHas_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./_mapCacheHas.js */ "./node_modules/lodash-es/_mapCacheHas.js");
/* harmony import */ var _mapCacheSet_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./_mapCacheSet.js */ "./node_modules/lodash-es/_mapCacheSet.js");






/**
 * Creates a map cache object to store key-value pairs.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function MapCache(entries) {
  var index = -1,
      length = entries == null ? 0 : entries.length;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

// Add methods to `MapCache`.
MapCache.prototype.clear = _mapCacheClear_js__WEBPACK_IMPORTED_MODULE_0__.default;
MapCache.prototype['delete'] = _mapCacheDelete_js__WEBPACK_IMPORTED_MODULE_1__.default;
MapCache.prototype.get = _mapCacheGet_js__WEBPACK_IMPORTED_MODULE_2__.default;
MapCache.prototype.has = _mapCacheHas_js__WEBPACK_IMPORTED_MODULE_3__.default;
MapCache.prototype.set = _mapCacheSet_js__WEBPACK_IMPORTED_MODULE_4__.default;

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (MapCache);


/***/ }),

/***/ "./node_modules/lodash-es/_Promise.js":
/*!********************************************!*\
  !*** ./node_modules/lodash-es/_Promise.js ***!
  \********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _getNative_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_getNative.js */ "./node_modules/lodash-es/_getNative.js");
/* harmony import */ var _root_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_root.js */ "./node_modules/lodash-es/_root.js");



/* Built-in method references that are verified to be native. */
var Promise = (0,_getNative_js__WEBPACK_IMPORTED_MODULE_0__.default)(_root_js__WEBPACK_IMPORTED_MODULE_1__.default, 'Promise');

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Promise);


/***/ }),

/***/ "./node_modules/lodash-es/_Set.js":
/*!****************************************!*\
  !*** ./node_modules/lodash-es/_Set.js ***!
  \****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _getNative_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_getNative.js */ "./node_modules/lodash-es/_getNative.js");
/* harmony import */ var _root_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_root.js */ "./node_modules/lodash-es/_root.js");



/* Built-in method references that are verified to be native. */
var Set = (0,_getNative_js__WEBPACK_IMPORTED_MODULE_0__.default)(_root_js__WEBPACK_IMPORTED_MODULE_1__.default, 'Set');

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Set);


/***/ }),

/***/ "./node_modules/lodash-es/_SetCache.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash-es/_SetCache.js ***!
  \*********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _MapCache_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_MapCache.js */ "./node_modules/lodash-es/_MapCache.js");
/* harmony import */ var _setCacheAdd_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_setCacheAdd.js */ "./node_modules/lodash-es/_setCacheAdd.js");
/* harmony import */ var _setCacheHas_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./_setCacheHas.js */ "./node_modules/lodash-es/_setCacheHas.js");




/**
 *
 * Creates an array cache object to store unique values.
 *
 * @private
 * @constructor
 * @param {Array} [values] The values to cache.
 */
function SetCache(values) {
  var index = -1,
      length = values == null ? 0 : values.length;

  this.__data__ = new _MapCache_js__WEBPACK_IMPORTED_MODULE_0__.default;
  while (++index < length) {
    this.add(values[index]);
  }
}

// Add methods to `SetCache`.
SetCache.prototype.add = SetCache.prototype.push = _setCacheAdd_js__WEBPACK_IMPORTED_MODULE_1__.default;
SetCache.prototype.has = _setCacheHas_js__WEBPACK_IMPORTED_MODULE_2__.default;

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (SetCache);


/***/ }),

/***/ "./node_modules/lodash-es/_Stack.js":
/*!******************************************!*\
  !*** ./node_modules/lodash-es/_Stack.js ***!
  \******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _ListCache_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_ListCache.js */ "./node_modules/lodash-es/_ListCache.js");
/* harmony import */ var _stackClear_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_stackClear.js */ "./node_modules/lodash-es/_stackClear.js");
/* harmony import */ var _stackDelete_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./_stackDelete.js */ "./node_modules/lodash-es/_stackDelete.js");
/* harmony import */ var _stackGet_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./_stackGet.js */ "./node_modules/lodash-es/_stackGet.js");
/* harmony import */ var _stackHas_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./_stackHas.js */ "./node_modules/lodash-es/_stackHas.js");
/* harmony import */ var _stackSet_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./_stackSet.js */ "./node_modules/lodash-es/_stackSet.js");







/**
 * Creates a stack cache object to store key-value pairs.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function Stack(entries) {
  var data = this.__data__ = new _ListCache_js__WEBPACK_IMPORTED_MODULE_0__.default(entries);
  this.size = data.size;
}

// Add methods to `Stack`.
Stack.prototype.clear = _stackClear_js__WEBPACK_IMPORTED_MODULE_1__.default;
Stack.prototype['delete'] = _stackDelete_js__WEBPACK_IMPORTED_MODULE_2__.default;
Stack.prototype.get = _stackGet_js__WEBPACK_IMPORTED_MODULE_3__.default;
Stack.prototype.has = _stackHas_js__WEBPACK_IMPORTED_MODULE_4__.default;
Stack.prototype.set = _stackSet_js__WEBPACK_IMPORTED_MODULE_5__.default;

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Stack);


/***/ }),

/***/ "./node_modules/lodash-es/_Symbol.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash-es/_Symbol.js ***!
  \*******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _root_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_root.js */ "./node_modules/lodash-es/_root.js");


/** Built-in value references. */
var Symbol = _root_js__WEBPACK_IMPORTED_MODULE_0__.default.Symbol;

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Symbol);


/***/ }),

/***/ "./node_modules/lodash-es/_Uint8Array.js":
/*!***********************************************!*\
  !*** ./node_modules/lodash-es/_Uint8Array.js ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _root_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_root.js */ "./node_modules/lodash-es/_root.js");


/** Built-in value references. */
var Uint8Array = _root_js__WEBPACK_IMPORTED_MODULE_0__.default.Uint8Array;

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Uint8Array);


/***/ }),

/***/ "./node_modules/lodash-es/_WeakMap.js":
/*!********************************************!*\
  !*** ./node_modules/lodash-es/_WeakMap.js ***!
  \********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _getNative_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_getNative.js */ "./node_modules/lodash-es/_getNative.js");
/* harmony import */ var _root_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_root.js */ "./node_modules/lodash-es/_root.js");



/* Built-in method references that are verified to be native. */
var WeakMap = (0,_getNative_js__WEBPACK_IMPORTED_MODULE_0__.default)(_root_js__WEBPACK_IMPORTED_MODULE_1__.default, 'WeakMap');

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (WeakMap);


/***/ }),

/***/ "./node_modules/lodash-es/_apply.js":
/*!******************************************!*\
  !*** ./node_modules/lodash-es/_apply.js ***!
  \******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/**
 * A faster alternative to `Function#apply`, this function invokes `func`
 * with the `this` binding of `thisArg` and the arguments of `args`.
 *
 * @private
 * @param {Function} func The function to invoke.
 * @param {*} thisArg The `this` binding of `func`.
 * @param {Array} args The arguments to invoke `func` with.
 * @returns {*} Returns the result of `func`.
 */
function apply(func, thisArg, args) {
  switch (args.length) {
    case 0: return func.call(thisArg);
    case 1: return func.call(thisArg, args[0]);
    case 2: return func.call(thisArg, args[0], args[1]);
    case 3: return func.call(thisArg, args[0], args[1], args[2]);
  }
  return func.apply(thisArg, args);
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (apply);


/***/ }),

/***/ "./node_modules/lodash-es/_arrayFilter.js":
/*!************************************************!*\
  !*** ./node_modules/lodash-es/_arrayFilter.js ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/**
 * A specialized version of `_.filter` for arrays without support for
 * iteratee shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} predicate The function invoked per iteration.
 * @returns {Array} Returns the new filtered array.
 */
function arrayFilter(array, predicate) {
  var index = -1,
      length = array == null ? 0 : array.length,
      resIndex = 0,
      result = [];

  while (++index < length) {
    var value = array[index];
    if (predicate(value, index, array)) {
      result[resIndex++] = value;
    }
  }
  return result;
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (arrayFilter);


/***/ }),

/***/ "./node_modules/lodash-es/_arrayIncludes.js":
/*!**************************************************!*\
  !*** ./node_modules/lodash-es/_arrayIncludes.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _baseIndexOf_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_baseIndexOf.js */ "./node_modules/lodash-es/_baseIndexOf.js");


/**
 * A specialized version of `_.includes` for arrays without support for
 * specifying an index to search from.
 *
 * @private
 * @param {Array} [array] The array to inspect.
 * @param {*} target The value to search for.
 * @returns {boolean} Returns `true` if `target` is found, else `false`.
 */
function arrayIncludes(array, value) {
  var length = array == null ? 0 : array.length;
  return !!length && (0,_baseIndexOf_js__WEBPACK_IMPORTED_MODULE_0__.default)(array, value, 0) > -1;
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (arrayIncludes);


/***/ }),

/***/ "./node_modules/lodash-es/_arrayIncludesWith.js":
/*!******************************************************!*\
  !*** ./node_modules/lodash-es/_arrayIncludesWith.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/**
 * This function is like `arrayIncludes` except that it accepts a comparator.
 *
 * @private
 * @param {Array} [array] The array to inspect.
 * @param {*} target The value to search for.
 * @param {Function} comparator The comparator invoked per element.
 * @returns {boolean} Returns `true` if `target` is found, else `false`.
 */
function arrayIncludesWith(array, value, comparator) {
  var index = -1,
      length = array == null ? 0 : array.length;

  while (++index < length) {
    if (comparator(value, array[index])) {
      return true;
    }
  }
  return false;
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (arrayIncludesWith);


/***/ }),

/***/ "./node_modules/lodash-es/_arrayLikeKeys.js":
/*!**************************************************!*\
  !*** ./node_modules/lodash-es/_arrayLikeKeys.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _baseTimes_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./_baseTimes.js */ "./node_modules/lodash-es/_baseTimes.js");
/* harmony import */ var _isArguments_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./isArguments.js */ "./node_modules/lodash-es/isArguments.js");
/* harmony import */ var _isArray_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./isArray.js */ "./node_modules/lodash-es/isArray.js");
/* harmony import */ var _isBuffer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./isBuffer.js */ "./node_modules/lodash-es/isBuffer.js");
/* harmony import */ var _isIndex_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./_isIndex.js */ "./node_modules/lodash-es/_isIndex.js");
/* harmony import */ var _isTypedArray_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./isTypedArray.js */ "./node_modules/lodash-es/isTypedArray.js");







/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Creates an array of the enumerable property names of the array-like `value`.
 *
 * @private
 * @param {*} value The value to query.
 * @param {boolean} inherited Specify returning inherited property names.
 * @returns {Array} Returns the array of property names.
 */
function arrayLikeKeys(value, inherited) {
  var isArr = (0,_isArray_js__WEBPACK_IMPORTED_MODULE_0__.default)(value),
      isArg = !isArr && (0,_isArguments_js__WEBPACK_IMPORTED_MODULE_1__.default)(value),
      isBuff = !isArr && !isArg && (0,_isBuffer_js__WEBPACK_IMPORTED_MODULE_2__.default)(value),
      isType = !isArr && !isArg && !isBuff && (0,_isTypedArray_js__WEBPACK_IMPORTED_MODULE_3__.default)(value),
      skipIndexes = isArr || isArg || isBuff || isType,
      result = skipIndexes ? (0,_baseTimes_js__WEBPACK_IMPORTED_MODULE_4__.default)(value.length, String) : [],
      length = result.length;

  for (var key in value) {
    if ((inherited || hasOwnProperty.call(value, key)) &&
        !(skipIndexes && (
           // Safari 9 has enumerable `arguments.length` in strict mode.
           key == 'length' ||
           // Node.js 0.10 has enumerable non-index properties on buffers.
           (isBuff && (key == 'offset' || key == 'parent')) ||
           // PhantomJS 2 has enumerable non-index properties on typed arrays.
           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||
           // Skip index properties.
           (0,_isIndex_js__WEBPACK_IMPORTED_MODULE_5__.default)(key, length)
        ))) {
      result.push(key);
    }
  }
  return result;
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (arrayLikeKeys);


/***/ }),

/***/ "./node_modules/lodash-es/_arrayMap.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash-es/_arrayMap.js ***!
  \*********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/**
 * A specialized version of `_.map` for arrays without support for iteratee
 * shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the new mapped array.
 */
function arrayMap(array, iteratee) {
  var index = -1,
      length = array == null ? 0 : array.length,
      result = Array(length);

  while (++index < length) {
    result[index] = iteratee(array[index], index, array);
  }
  return result;
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (arrayMap);


/***/ }),

/***/ "./node_modules/lodash-es/_arrayPush.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash-es/_arrayPush.js ***!
  \**********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/**
 * Appends the elements of `values` to `array`.
 *
 * @private
 * @param {Array} array The array to modify.
 * @param {Array} values The values to append.
 * @returns {Array} Returns `array`.
 */
function arrayPush(array, values) {
  var index = -1,
      length = values.length,
      offset = array.length;

  while (++index < length) {
    array[offset + index] = values[index];
  }
  return array;
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (arrayPush);


/***/ }),

/***/ "./node_modules/lodash-es/_arraySome.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash-es/_arraySome.js ***!
  \**********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/**
 * A specialized version of `_.some` for arrays without support for iteratee
 * shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} predicate The function invoked per iteration.
 * @returns {boolean} Returns `true` if any element passes the predicate check,
 *  else `false`.
 */
function arraySome(array, predicate) {
  var index = -1,
      length = array == null ? 0 : array.length;

  while (++index < length) {
    if (predicate(array[index], index, array)) {
      return true;
    }
  }
  return false;
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (arraySome);


/***/ }),

/***/ "./node_modules/lodash-es/_assocIndexOf.js":
/*!*************************************************!*\
  !*** ./node_modules/lodash-es/_assocIndexOf.js ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _eq_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./eq.js */ "./node_modules/lodash-es/eq.js");


/**
 * Gets the index at which the `key` is found in `array` of key-value pairs.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} key The key to search for.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function assocIndexOf(array, key) {
  var length = array.length;
  while (length--) {
    if ((0,_eq_js__WEBPACK_IMPORTED_MODULE_0__.default)(array[length][0], key)) {
      return length;
    }
  }
  return -1;
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (assocIndexOf);


/***/ }),

/***/ "./node_modules/lodash-es/_baseFindIndex.js":
/*!**************************************************!*\
  !*** ./node_modules/lodash-es/_baseFindIndex.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/**
 * The base implementation of `_.findIndex` and `_.findLastIndex` without
 * support for iteratee shorthands.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {Function} predicate The function invoked per iteration.
 * @param {number} fromIndex The index to search from.
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function baseFindIndex(array, predicate, fromIndex, fromRight) {
  var length = array.length,
      index = fromIndex + (fromRight ? 1 : -1);

  while ((fromRight ? index-- : ++index < length)) {
    if (predicate(array[index], index, array)) {
      return index;
    }
  }
  return -1;
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (baseFindIndex);


/***/ }),

/***/ "./node_modules/lodash-es/_baseGet.js":
/*!********************************************!*\
  !*** ./node_modules/lodash-es/_baseGet.js ***!
  \********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _castPath_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_castPath.js */ "./node_modules/lodash-es/_castPath.js");
/* harmony import */ var _toKey_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_toKey.js */ "./node_modules/lodash-es/_toKey.js");



/**
 * The base implementation of `_.get` without support for default values.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Array|string} path The path of the property to get.
 * @returns {*} Returns the resolved value.
 */
function baseGet(object, path) {
  path = (0,_castPath_js__WEBPACK_IMPORTED_MODULE_0__.default)(path, object);

  var index = 0,
      length = path.length;

  while (object != null && index < length) {
    object = object[(0,_toKey_js__WEBPACK_IMPORTED_MODULE_1__.default)(path[index++])];
  }
  return (index && index == length) ? object : undefined;
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (baseGet);


/***/ }),

/***/ "./node_modules/lodash-es/_baseGetAllKeys.js":
/*!***************************************************!*\
  !*** ./node_modules/lodash-es/_baseGetAllKeys.js ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _arrayPush_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_arrayPush.js */ "./node_modules/lodash-es/_arrayPush.js");
/* harmony import */ var _isArray_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./isArray.js */ "./node_modules/lodash-es/isArray.js");



/**
 * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
 * `keysFunc` and `symbolsFunc` to get the enumerable property names and
 * symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Function} keysFunc The function to get the keys of `object`.
 * @param {Function} symbolsFunc The function to get the symbols of `object`.
 * @returns {Array} Returns the array of property names and symbols.
 */
function baseGetAllKeys(object, keysFunc, symbolsFunc) {
  var result = keysFunc(object);
  return (0,_isArray_js__WEBPACK_IMPORTED_MODULE_0__.default)(object) ? result : (0,_arrayPush_js__WEBPACK_IMPORTED_MODULE_1__.default)(result, symbolsFunc(object));
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (baseGetAllKeys);


/***/ }),

/***/ "./node_modules/lodash-es/_baseGetTag.js":
/*!***********************************************!*\
  !*** ./node_modules/lodash-es/_baseGetTag.js ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Symbol_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_Symbol.js */ "./node_modules/lodash-es/_Symbol.js");
/* harmony import */ var _getRawTag_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_getRawTag.js */ "./node_modules/lodash-es/_getRawTag.js");
/* harmony import */ var _objectToString_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./_objectToString.js */ "./node_modules/lodash-es/_objectToString.js");




/** `Object#toString` result references. */
var nullTag = '[object Null]',
    undefinedTag = '[object Undefined]';

/** Built-in value references. */
var symToStringTag = _Symbol_js__WEBPACK_IMPORTED_MODULE_0__.default ? _Symbol_js__WEBPACK_IMPORTED_MODULE_0__.default.toStringTag : undefined;

/**
 * The base implementation of `getTag` without fallbacks for buggy environments.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the `toStringTag`.
 */
function baseGetTag(value) {
  if (value == null) {
    return value === undefined ? undefinedTag : nullTag;
  }
  return (symToStringTag && symToStringTag in Object(value))
    ? (0,_getRawTag_js__WEBPACK_IMPORTED_MODULE_1__.default)(value)
    : (0,_objectToString_js__WEBPACK_IMPORTED_MODULE_2__.default)(value);
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (baseGetTag);


/***/ }),

/***/ "./node_modules/lodash-es/_baseHasIn.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash-es/_baseHasIn.js ***!
  \**********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/**
 * The base implementation of `_.hasIn` without support for deep paths.
 *
 * @private
 * @param {Object} [object] The object to query.
 * @param {Array|string} key The key to check.
 * @returns {boolean} Returns `true` if `key` exists, else `false`.
 */
function baseHasIn(object, key) {
  return object != null && key in Object(object);
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (baseHasIn);


/***/ }),

/***/ "./node_modules/lodash-es/_baseIndexOf.js":
/*!************************************************!*\
  !*** ./node_modules/lodash-es/_baseIndexOf.js ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _baseFindIndex_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_baseFindIndex.js */ "./node_modules/lodash-es/_baseFindIndex.js");
/* harmony import */ var _baseIsNaN_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./_baseIsNaN.js */ "./node_modules/lodash-es/_baseIsNaN.js");
/* harmony import */ var _strictIndexOf_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_strictIndexOf.js */ "./node_modules/lodash-es/_strictIndexOf.js");




/**
 * The base implementation of `_.indexOf` without `fromIndex` bounds checks.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} value The value to search for.
 * @param {number} fromIndex The index to search from.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function baseIndexOf(array, value, fromIndex) {
  return value === value
    ? (0,_strictIndexOf_js__WEBPACK_IMPORTED_MODULE_0__.default)(array, value, fromIndex)
    : (0,_baseFindIndex_js__WEBPACK_IMPORTED_MODULE_1__.default)(array, _baseIsNaN_js__WEBPACK_IMPORTED_MODULE_2__.default, fromIndex);
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (baseIndexOf);


/***/ }),

/***/ "./node_modules/lodash-es/_baseIntersection.js":
/*!*****************************************************!*\
  !*** ./node_modules/lodash-es/_baseIntersection.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _SetCache_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./_SetCache.js */ "./node_modules/lodash-es/_SetCache.js");
/* harmony import */ var _arrayIncludes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_arrayIncludes.js */ "./node_modules/lodash-es/_arrayIncludes.js");
/* harmony import */ var _arrayIncludesWith_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_arrayIncludesWith.js */ "./node_modules/lodash-es/_arrayIncludesWith.js");
/* harmony import */ var _arrayMap_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./_arrayMap.js */ "./node_modules/lodash-es/_arrayMap.js");
/* harmony import */ var _baseUnary_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./_baseUnary.js */ "./node_modules/lodash-es/_baseUnary.js");
/* harmony import */ var _cacheHas_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./_cacheHas.js */ "./node_modules/lodash-es/_cacheHas.js");







/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMin = Math.min;

/**
 * The base implementation of methods like `_.intersection`, without support
 * for iteratee shorthands, that accepts an array of arrays to inspect.
 *
 * @private
 * @param {Array} arrays The arrays to inspect.
 * @param {Function} [iteratee] The iteratee invoked per element.
 * @param {Function} [comparator] The comparator invoked per element.
 * @returns {Array} Returns the new array of shared values.
 */
function baseIntersection(arrays, iteratee, comparator) {
  var includes = comparator ? _arrayIncludesWith_js__WEBPACK_IMPORTED_MODULE_0__.default : _arrayIncludes_js__WEBPACK_IMPORTED_MODULE_1__.default,
      length = arrays[0].length,
      othLength = arrays.length,
      othIndex = othLength,
      caches = Array(othLength),
      maxLength = Infinity,
      result = [];

  while (othIndex--) {
    var array = arrays[othIndex];
    if (othIndex && iteratee) {
      array = (0,_arrayMap_js__WEBPACK_IMPORTED_MODULE_2__.default)(array, (0,_baseUnary_js__WEBPACK_IMPORTED_MODULE_3__.default)(iteratee));
    }
    maxLength = nativeMin(array.length, maxLength);
    caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))
      ? new _SetCache_js__WEBPACK_IMPORTED_MODULE_4__.default(othIndex && array)
      : undefined;
  }
  array = arrays[0];

  var index = -1,
      seen = caches[0];

  outer:
  while (++index < length && result.length < maxLength) {
    var value = array[index],
        computed = iteratee ? iteratee(value) : value;

    value = (comparator || value !== 0) ? value : 0;
    if (!(seen
          ? (0,_cacheHas_js__WEBPACK_IMPORTED_MODULE_5__.default)(seen, computed)
          : includes(result, computed, comparator)
        )) {
      othIndex = othLength;
      while (--othIndex) {
        var cache = caches[othIndex];
        if (!(cache
              ? (0,_cacheHas_js__WEBPACK_IMPORTED_MODULE_5__.default)(cache, computed)
              : includes(arrays[othIndex], computed, comparator))
            ) {
          continue outer;
        }
      }
      if (seen) {
        seen.push(computed);
      }
      result.push(value);
    }
  }
  return result;
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (baseIntersection);


/***/ }),

/***/ "./node_modules/lodash-es/_baseIsArguments.js":
/*!****************************************************!*\
  !*** ./node_modules/lodash-es/_baseIsArguments.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _baseGetTag_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_baseGetTag.js */ "./node_modules/lodash-es/_baseGetTag.js");
/* harmony import */ var _isObjectLike_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./isObjectLike.js */ "./node_modules/lodash-es/isObjectLike.js");



/** `Object#toString` result references. */
var argsTag = '[object Arguments]';

/**
 * The base implementation of `_.isArguments`.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
 */
function baseIsArguments(value) {
  return (0,_isObjectLike_js__WEBPACK_IMPORTED_MODULE_0__.default)(value) && (0,_baseGetTag_js__WEBPACK_IMPORTED_MODULE_1__.default)(value) == argsTag;
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (baseIsArguments);


/***/ }),

/***/ "./node_modules/lodash-es/_baseIsEqual.js":
/*!************************************************!*\
  !*** ./node_modules/lodash-es/_baseIsEqual.js ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _baseIsEqualDeep_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_baseIsEqualDeep.js */ "./node_modules/lodash-es/_baseIsEqualDeep.js");
/* harmony import */ var _isObjectLike_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./isObjectLike.js */ "./node_modules/lodash-es/isObjectLike.js");



/**
 * The base implementation of `_.isEqual` which supports partial comparisons
 * and tracks traversed objects.
 *
 * @private
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @param {boolean} bitmask The bitmask flags.
 *  1 - Unordered comparison
 *  2 - Partial comparison
 * @param {Function} [customizer] The function to customize comparisons.
 * @param {Object} [stack] Tracks traversed `value` and `other` objects.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 */
function baseIsEqual(value, other, bitmask, customizer, stack) {
  if (value === other) {
    return true;
  }
  if (value == null || other == null || (!(0,_isObjectLike_js__WEBPACK_IMPORTED_MODULE_0__.default)(value) && !(0,_isObjectLike_js__WEBPACK_IMPORTED_MODULE_0__.default)(other))) {
    return value !== value && other !== other;
  }
  return (0,_baseIsEqualDeep_js__WEBPACK_IMPORTED_MODULE_1__.default)(value, other, bitmask, customizer, baseIsEqual, stack);
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (baseIsEqual);


/***/ }),

/***/ "./node_modules/lodash-es/_baseIsEqualDeep.js":
/*!****************************************************!*\
  !*** ./node_modules/lodash-es/_baseIsEqualDeep.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Stack_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./_Stack.js */ "./node_modules/lodash-es/_Stack.js");
/* harmony import */ var _equalArrays_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./_equalArrays.js */ "./node_modules/lodash-es/_equalArrays.js");
/* harmony import */ var _equalByTag_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./_equalByTag.js */ "./node_modules/lodash-es/_equalByTag.js");
/* harmony import */ var _equalObjects_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./_equalObjects.js */ "./node_modules/lodash-es/_equalObjects.js");
/* harmony import */ var _getTag_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_getTag.js */ "./node_modules/lodash-es/_getTag.js");
/* harmony import */ var _isArray_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./isArray.js */ "./node_modules/lodash-es/isArray.js");
/* harmony import */ var _isBuffer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./isBuffer.js */ "./node_modules/lodash-es/isBuffer.js");
/* harmony import */ var _isTypedArray_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./isTypedArray.js */ "./node_modules/lodash-es/isTypedArray.js");









/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1;

/** `Object#toString` result references. */
var argsTag = '[object Arguments]',
    arrayTag = '[object Array]',
    objectTag = '[object Object]';

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * A specialized version of `baseIsEqual` for arrays and objects which performs
 * deep comparisons and tracks traversed objects enabling objects with circular
 * references to be compared.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} [stack] Tracks traversed `object` and `other` objects.
 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
 */
function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
  var objIsArr = (0,_isArray_js__WEBPACK_IMPORTED_MODULE_0__.default)(object),
      othIsArr = (0,_isArray_js__WEBPACK_IMPORTED_MODULE_0__.default)(other),
      objTag = objIsArr ? arrayTag : (0,_getTag_js__WEBPACK_IMPORTED_MODULE_1__.default)(object),
      othTag = othIsArr ? arrayTag : (0,_getTag_js__WEBPACK_IMPORTED_MODULE_1__.default)(other);

  objTag = objTag == argsTag ? objectTag : objTag;
  othTag = othTag == argsTag ? objectTag : othTag;

  var objIsObj = objTag == objectTag,
      othIsObj = othTag == objectTag,
      isSameTag = objTag == othTag;

  if (isSameTag && (0,_isBuffer_js__WEBPACK_IMPORTED_MODULE_2__.default)(object)) {
    if (!(0,_isBuffer_js__WEBPACK_IMPORTED_MODULE_2__.default)(other)) {
      return false;
    }
    objIsArr = true;
    objIsObj = false;
  }
  if (isSameTag && !objIsObj) {
    stack || (stack = new _Stack_js__WEBPACK_IMPORTED_MODULE_3__.default);
    return (objIsArr || (0,_isTypedArray_js__WEBPACK_IMPORTED_MODULE_4__.default)(object))
      ? (0,_equalArrays_js__WEBPACK_IMPORTED_MODULE_5__.default)(object, other, bitmask, customizer, equalFunc, stack)
      : (0,_equalByTag_js__WEBPACK_IMPORTED_MODULE_6__.default)(object, other, objTag, bitmask, customizer, equalFunc, stack);
  }
  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),
        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');

    if (objIsWrapped || othIsWrapped) {
      var objUnwrapped = objIsWrapped ? object.value() : object,
          othUnwrapped = othIsWrapped ? other.value() : other;

      stack || (stack = new _Stack_js__WEBPACK_IMPORTED_MODULE_3__.default);
      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
    }
  }
  if (!isSameTag) {
    return false;
  }
  stack || (stack = new _Stack_js__WEBPACK_IMPORTED_MODULE_3__.default);
  return (0,_equalObjects_js__WEBPACK_IMPORTED_MODULE_7__.default)(object, other, bitmask, customizer, equalFunc, stack);
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (baseIsEqualDeep);


/***/ }),

/***/ "./node_modules/lodash-es/_baseIsMatch.js":
/*!************************************************!*\
  !*** ./node_modules/lodash-es/_baseIsMatch.js ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Stack_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_Stack.js */ "./node_modules/lodash-es/_Stack.js");
/* harmony import */ var _baseIsEqual_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_baseIsEqual.js */ "./node_modules/lodash-es/_baseIsEqual.js");



/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1,
    COMPARE_UNORDERED_FLAG = 2;

/**
 * The base implementation of `_.isMatch` without support for iteratee shorthands.
 *
 * @private
 * @param {Object} object The object to inspect.
 * @param {Object} source The object of property values to match.
 * @param {Array} matchData The property names, values, and compare flags to match.
 * @param {Function} [customizer] The function to customize comparisons.
 * @returns {boolean} Returns `true` if `object` is a match, else `false`.
 */
function baseIsMatch(object, source, matchData, customizer) {
  var index = matchData.length,
      length = index,
      noCustomizer = !customizer;

  if (object == null) {
    return !length;
  }
  object = Object(object);
  while (index--) {
    var data = matchData[index];
    if ((noCustomizer && data[2])
          ? data[1] !== object[data[0]]
          : !(data[0] in object)
        ) {
      return false;
    }
  }
  while (++index < length) {
    data = matchData[index];
    var key = data[0],
        objValue = object[key],
        srcValue = data[1];

    if (noCustomizer && data[2]) {
      if (objValue === undefined && !(key in object)) {
        return false;
      }
    } else {
      var stack = new _Stack_js__WEBPACK_IMPORTED_MODULE_0__.default;
      if (customizer) {
        var result = customizer(objValue, srcValue, key, object, source, stack);
      }
      if (!(result === undefined
            ? (0,_baseIsEqual_js__WEBPACK_IMPORTED_MODULE_1__.default)(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)
            : result
          )) {
        return false;
      }
    }
  }
  return true;
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (baseIsMatch);


/***/ }),

/***/ "./node_modules/lodash-es/_baseIsNaN.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash-es/_baseIsNaN.js ***!
  \**********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/**
 * The base implementation of `_.isNaN` without support for number objects.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
 */
function baseIsNaN(value) {
  return value !== value;
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (baseIsNaN);


/***/ }),

/***/ "./node_modules/lodash-es/_baseIsNative.js":
/*!*************************************************!*\
  !*** ./node_modules/lodash-es/_baseIsNative.js ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _isFunction_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./isFunction.js */ "./node_modules/lodash-es/isFunction.js");
/* harmony import */ var _isMasked_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_isMasked.js */ "./node_modules/lodash-es/_isMasked.js");
/* harmony import */ var _isObject_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./isObject.js */ "./node_modules/lodash-es/isObject.js");
/* harmony import */ var _toSource_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./_toSource.js */ "./node_modules/lodash-es/_toSource.js");





/**
 * Used to match `RegExp`
 * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
 */
var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;

/** Used to detect host constructors (Safari). */
var reIsHostCtor = /^\[object .+?Constructor\]$/;

/** Used for built-in method references. */
var funcProto = Function.prototype,
    objectProto = Object.prototype;

/** Used to resolve the decompiled source of functions. */
var funcToString = funcProto.toString;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/** Used to detect if a method is native. */
var reIsNative = RegExp('^' +
  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&')
  .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
);

/**
 * The base implementation of `_.isNative` without bad shim checks.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a native function,
 *  else `false`.
 */
function baseIsNative(value) {
  if (!(0,_isObject_js__WEBPACK_IMPORTED_MODULE_0__.default)(value) || (0,_isMasked_js__WEBPACK_IMPORTED_MODULE_1__.default)(value)) {
    return false;
  }
  var pattern = (0,_isFunction_js__WEBPACK_IMPORTED_MODULE_2__.default)(value) ? reIsNative : reIsHostCtor;
  return pattern.test((0,_toSource_js__WEBPACK_IMPORTED_MODULE_3__.default)(value));
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (baseIsNative);


/***/ }),

/***/ "./node_modules/lodash-es/_baseIsTypedArray.js":
/*!*****************************************************!*\
  !*** ./node_modules/lodash-es/_baseIsTypedArray.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _baseGetTag_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./_baseGetTag.js */ "./node_modules/lodash-es/_baseGetTag.js");
/* harmony import */ var _isLength_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./isLength.js */ "./node_modules/lodash-es/isLength.js");
/* harmony import */ var _isObjectLike_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./isObjectLike.js */ "./node_modules/lodash-es/isObjectLike.js");




/** `Object#toString` result references. */
var argsTag = '[object Arguments]',
    arrayTag = '[object Array]',
    boolTag = '[object Boolean]',
    dateTag = '[object Date]',
    errorTag = '[object Error]',
    funcTag = '[object Function]',
    mapTag = '[object Map]',
    numberTag = '[object Number]',
    objectTag = '[object Object]',
    regexpTag = '[object RegExp]',
    setTag = '[object Set]',
    stringTag = '[object String]',
    weakMapTag = '[object WeakMap]';

var arrayBufferTag = '[object ArrayBuffer]',
    dataViewTag = '[object DataView]',
    float32Tag = '[object Float32Array]',
    float64Tag = '[object Float64Array]',
    int8Tag = '[object Int8Array]',
    int16Tag = '[object Int16Array]',
    int32Tag = '[object Int32Array]',
    uint8Tag = '[object Uint8Array]',
    uint8ClampedTag = '[object Uint8ClampedArray]',
    uint16Tag = '[object Uint16Array]',
    uint32Tag = '[object Uint32Array]';

/** Used to identify `toStringTag` values of typed arrays. */
var typedArrayTags = {};
typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =
typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =
typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =
typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =
typedArrayTags[uint32Tag] = true;
typedArrayTags[argsTag] = typedArrayTags[arrayTag] =
typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =
typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =
typedArrayTags[errorTag] = typedArrayTags[funcTag] =
typedArrayTags[mapTag] = typedArrayTags[numberTag] =
typedArrayTags[objectTag] = typedArrayTags[regexpTag] =
typedArrayTags[setTag] = typedArrayTags[stringTag] =
typedArrayTags[weakMapTag] = false;

/**
 * The base implementation of `_.isTypedArray` without Node.js optimizations.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
 */
function baseIsTypedArray(value) {
  return (0,_isObjectLike_js__WEBPACK_IMPORTED_MODULE_0__.default)(value) &&
    (0,_isLength_js__WEBPACK_IMPORTED_MODULE_1__.default)(value.length) && !!typedArrayTags[(0,_baseGetTag_js__WEBPACK_IMPORTED_MODULE_2__.default)(value)];
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (baseIsTypedArray);


/***/ }),

/***/ "./node_modules/lodash-es/_baseIteratee.js":
/*!*************************************************!*\
  !*** ./node_modules/lodash-es/_baseIteratee.js ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _baseMatches_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./_baseMatches.js */ "./node_modules/lodash-es/_baseMatches.js");
/* harmony import */ var _baseMatchesProperty_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./_baseMatchesProperty.js */ "./node_modules/lodash-es/_baseMatchesProperty.js");
/* harmony import */ var _identity_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./identity.js */ "./node_modules/lodash-es/identity.js");
/* harmony import */ var _isArray_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./isArray.js */ "./node_modules/lodash-es/isArray.js");
/* harmony import */ var _property_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./property.js */ "./node_modules/lodash-es/property.js");






/**
 * The base implementation of `_.iteratee`.
 *
 * @private
 * @param {*} [value=_.identity] The value to convert to an iteratee.
 * @returns {Function} Returns the iteratee.
 */
function baseIteratee(value) {
  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.
  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.
  if (typeof value == 'function') {
    return value;
  }
  if (value == null) {
    return _identity_js__WEBPACK_IMPORTED_MODULE_0__.default;
  }
  if (typeof value == 'object') {
    return (0,_isArray_js__WEBPACK_IMPORTED_MODULE_1__.default)(value)
      ? (0,_baseMatchesProperty_js__WEBPACK_IMPORTED_MODULE_2__.default)(value[0], value[1])
      : (0,_baseMatches_js__WEBPACK_IMPORTED_MODULE_3__.default)(value);
  }
  return (0,_property_js__WEBPACK_IMPORTED_MODULE_4__.default)(value);
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (baseIteratee);


/***/ }),

/***/ "./node_modules/lodash-es/_baseKeys.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash-es/_baseKeys.js ***!
  \*********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _isPrototype_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_isPrototype.js */ "./node_modules/lodash-es/_isPrototype.js");
/* harmony import */ var _nativeKeys_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_nativeKeys.js */ "./node_modules/lodash-es/_nativeKeys.js");



/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */
function baseKeys(object) {
  if (!(0,_isPrototype_js__WEBPACK_IMPORTED_MODULE_0__.default)(object)) {
    return (0,_nativeKeys_js__WEBPACK_IMPORTED_MODULE_1__.default)(object);
  }
  var result = [];
  for (var key in Object(object)) {
    if (hasOwnProperty.call(object, key) && key != 'constructor') {
      result.push(key);
    }
  }
  return result;
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (baseKeys);


/***/ }),

/***/ "./node_modules/lodash-es/_baseMatches.js":
/*!************************************************!*\
  !*** ./node_modules/lodash-es/_baseMatches.js ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _baseIsMatch_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./_baseIsMatch.js */ "./node_modules/lodash-es/_baseIsMatch.js");
/* harmony import */ var _getMatchData_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_getMatchData.js */ "./node_modules/lodash-es/_getMatchData.js");
/* harmony import */ var _matchesStrictComparable_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_matchesStrictComparable.js */ "./node_modules/lodash-es/_matchesStrictComparable.js");




/**
 * The base implementation of `_.matches` which doesn't clone `source`.
 *
 * @private
 * @param {Object} source The object of property values to match.
 * @returns {Function} Returns the new spec function.
 */
function baseMatches(source) {
  var matchData = (0,_getMatchData_js__WEBPACK_IMPORTED_MODULE_0__.default)(source);
  if (matchData.length == 1 && matchData[0][2]) {
    return (0,_matchesStrictComparable_js__WEBPACK_IMPORTED_MODULE_1__.default)(matchData[0][0], matchData[0][1]);
  }
  return function(object) {
    return object === source || (0,_baseIsMatch_js__WEBPACK_IMPORTED_MODULE_2__.default)(object, source, matchData);
  };
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (baseMatches);


/***/ }),

/***/ "./node_modules/lodash-es/_baseMatchesProperty.js":
/*!********************************************************!*\
  !*** ./node_modules/lodash-es/_baseMatchesProperty.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _baseIsEqual_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./_baseIsEqual.js */ "./node_modules/lodash-es/_baseIsEqual.js");
/* harmony import */ var _get_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./get.js */ "./node_modules/lodash-es/get.js");
/* harmony import */ var _hasIn_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./hasIn.js */ "./node_modules/lodash-es/hasIn.js");
/* harmony import */ var _isKey_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_isKey.js */ "./node_modules/lodash-es/_isKey.js");
/* harmony import */ var _isStrictComparable_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_isStrictComparable.js */ "./node_modules/lodash-es/_isStrictComparable.js");
/* harmony import */ var _matchesStrictComparable_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./_matchesStrictComparable.js */ "./node_modules/lodash-es/_matchesStrictComparable.js");
/* harmony import */ var _toKey_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./_toKey.js */ "./node_modules/lodash-es/_toKey.js");








/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1,
    COMPARE_UNORDERED_FLAG = 2;

/**
 * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.
 *
 * @private
 * @param {string} path The path of the property to get.
 * @param {*} srcValue The value to match.
 * @returns {Function} Returns the new spec function.
 */
function baseMatchesProperty(path, srcValue) {
  if ((0,_isKey_js__WEBPACK_IMPORTED_MODULE_0__.default)(path) && (0,_isStrictComparable_js__WEBPACK_IMPORTED_MODULE_1__.default)(srcValue)) {
    return (0,_matchesStrictComparable_js__WEBPACK_IMPORTED_MODULE_2__.default)((0,_toKey_js__WEBPACK_IMPORTED_MODULE_3__.default)(path), srcValue);
  }
  return function(object) {
    var objValue = (0,_get_js__WEBPACK_IMPORTED_MODULE_4__.default)(object, path);
    return (objValue === undefined && objValue === srcValue)
      ? (0,_hasIn_js__WEBPACK_IMPORTED_MODULE_5__.default)(object, path)
      : (0,_baseIsEqual_js__WEBPACK_IMPORTED_MODULE_6__.default)(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);
  };
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (baseMatchesProperty);


/***/ }),

/***/ "./node_modules/lodash-es/_baseProperty.js":
/*!*************************************************!*\
  !*** ./node_modules/lodash-es/_baseProperty.js ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/**
 * The base implementation of `_.property` without support for deep paths.
 *
 * @private
 * @param {string} key The key of the property to get.
 * @returns {Function} Returns the new accessor function.
 */
function baseProperty(key) {
  return function(object) {
    return object == null ? undefined : object[key];
  };
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (baseProperty);


/***/ }),

/***/ "./node_modules/lodash-es/_basePropertyDeep.js":
/*!*****************************************************!*\
  !*** ./node_modules/lodash-es/_basePropertyDeep.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _baseGet_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_baseGet.js */ "./node_modules/lodash-es/_baseGet.js");


/**
 * A specialized version of `baseProperty` which supports deep paths.
 *
 * @private
 * @param {Array|string} path The path of the property to get.
 * @returns {Function} Returns the new accessor function.
 */
function basePropertyDeep(path) {
  return function(object) {
    return (0,_baseGet_js__WEBPACK_IMPORTED_MODULE_0__.default)(object, path);
  };
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (basePropertyDeep);


/***/ }),

/***/ "./node_modules/lodash-es/_baseRest.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash-es/_baseRest.js ***!
  \*********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _identity_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./identity.js */ "./node_modules/lodash-es/identity.js");
/* harmony import */ var _overRest_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_overRest.js */ "./node_modules/lodash-es/_overRest.js");
/* harmony import */ var _setToString_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_setToString.js */ "./node_modules/lodash-es/_setToString.js");




/**
 * The base implementation of `_.rest` which doesn't validate or coerce arguments.
 *
 * @private
 * @param {Function} func The function to apply a rest parameter to.
 * @param {number} [start=func.length-1] The start position of the rest parameter.
 * @returns {Function} Returns the new function.
 */
function baseRest(func, start) {
  return (0,_setToString_js__WEBPACK_IMPORTED_MODULE_0__.default)((0,_overRest_js__WEBPACK_IMPORTED_MODULE_1__.default)(func, start, _identity_js__WEBPACK_IMPORTED_MODULE_2__.default), func + '');
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (baseRest);


/***/ }),

/***/ "./node_modules/lodash-es/_baseSetToString.js":
/*!****************************************************!*\
  !*** ./node_modules/lodash-es/_baseSetToString.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _constant_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./constant.js */ "./node_modules/lodash-es/constant.js");
/* harmony import */ var _defineProperty_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_defineProperty.js */ "./node_modules/lodash-es/_defineProperty.js");
/* harmony import */ var _identity_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./identity.js */ "./node_modules/lodash-es/identity.js");




/**
 * The base implementation of `setToString` without support for hot loop shorting.
 *
 * @private
 * @param {Function} func The function to modify.
 * @param {Function} string The `toString` result.
 * @returns {Function} Returns `func`.
 */
var baseSetToString = !_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__.default ? _identity_js__WEBPACK_IMPORTED_MODULE_1__.default : function(func, string) {
  return (0,_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__.default)(func, 'toString', {
    'configurable': true,
    'enumerable': false,
    'value': (0,_constant_js__WEBPACK_IMPORTED_MODULE_2__.default)(string),
    'writable': true
  });
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (baseSetToString);


/***/ }),

/***/ "./node_modules/lodash-es/_baseTimes.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash-es/_baseTimes.js ***!
  \**********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/**
 * The base implementation of `_.times` without support for iteratee shorthands
 * or max array length checks.
 *
 * @private
 * @param {number} n The number of times to invoke `iteratee`.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the array of results.
 */
function baseTimes(n, iteratee) {
  var index = -1,
      result = Array(n);

  while (++index < n) {
    result[index] = iteratee(index);
  }
  return result;
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (baseTimes);


/***/ }),

/***/ "./node_modules/lodash-es/_baseToString.js":
/*!*************************************************!*\
  !*** ./node_modules/lodash-es/_baseToString.js ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Symbol_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_Symbol.js */ "./node_modules/lodash-es/_Symbol.js");
/* harmony import */ var _arrayMap_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./_arrayMap.js */ "./node_modules/lodash-es/_arrayMap.js");
/* harmony import */ var _isArray_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./isArray.js */ "./node_modules/lodash-es/isArray.js");
/* harmony import */ var _isSymbol_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./isSymbol.js */ "./node_modules/lodash-es/isSymbol.js");





/** Used as references for various `Number` constants. */
var INFINITY = 1 / 0;

/** Used to convert symbols to primitives and strings. */
var symbolProto = _Symbol_js__WEBPACK_IMPORTED_MODULE_0__.default ? _Symbol_js__WEBPACK_IMPORTED_MODULE_0__.default.prototype : undefined,
    symbolToString = symbolProto ? symbolProto.toString : undefined;

/**
 * The base implementation of `_.toString` which doesn't convert nullish
 * values to empty strings.
 *
 * @private
 * @param {*} value The value to process.
 * @returns {string} Returns the string.
 */
function baseToString(value) {
  // Exit early for strings to avoid a performance hit in some environments.
  if (typeof value == 'string') {
    return value;
  }
  if ((0,_isArray_js__WEBPACK_IMPORTED_MODULE_1__.default)(value)) {
    // Recursively convert values (susceptible to call stack limits).
    return (0,_arrayMap_js__WEBPACK_IMPORTED_MODULE_2__.default)(value, baseToString) + '';
  }
  if ((0,_isSymbol_js__WEBPACK_IMPORTED_MODULE_3__.default)(value)) {
    return symbolToString ? symbolToString.call(value) : '';
  }
  var result = (value + '');
  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (baseToString);


/***/ }),

/***/ "./node_modules/lodash-es/_baseTrim.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash-es/_baseTrim.js ***!
  \*********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _trimmedEndIndex_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_trimmedEndIndex.js */ "./node_modules/lodash-es/_trimmedEndIndex.js");


/** Used to match leading whitespace. */
var reTrimStart = /^\s+/;

/**
 * The base implementation of `_.trim`.
 *
 * @private
 * @param {string} string The string to trim.
 * @returns {string} Returns the trimmed string.
 */
function baseTrim(string) {
  return string
    ? string.slice(0, (0,_trimmedEndIndex_js__WEBPACK_IMPORTED_MODULE_0__.default)(string) + 1).replace(reTrimStart, '')
    : string;
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (baseTrim);


/***/ }),

/***/ "./node_modules/lodash-es/_baseUnary.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash-es/_baseUnary.js ***!
  \**********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/**
 * The base implementation of `_.unary` without support for storing metadata.
 *
 * @private
 * @param {Function} func The function to cap arguments for.
 * @returns {Function} Returns the new capped function.
 */
function baseUnary(func) {
  return function(value) {
    return func(value);
  };
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (baseUnary);


/***/ }),

/***/ "./node_modules/lodash-es/_cacheHas.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash-es/_cacheHas.js ***!
  \*********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/**
 * Checks if a `cache` value for `key` exists.
 *
 * @private
 * @param {Object} cache The cache to query.
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function cacheHas(cache, key) {
  return cache.has(key);
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (cacheHas);


/***/ }),

/***/ "./node_modules/lodash-es/_castArrayLikeObject.js":
/*!********************************************************!*\
  !*** ./node_modules/lodash-es/_castArrayLikeObject.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _isArrayLikeObject_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./isArrayLikeObject.js */ "./node_modules/lodash-es/isArrayLikeObject.js");


/**
 * Casts `value` to an empty array if it's not an array like object.
 *
 * @private
 * @param {*} value The value to inspect.
 * @returns {Array|Object} Returns the cast array-like object.
 */
function castArrayLikeObject(value) {
  return (0,_isArrayLikeObject_js__WEBPACK_IMPORTED_MODULE_0__.default)(value) ? value : [];
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (castArrayLikeObject);


/***/ }),

/***/ "./node_modules/lodash-es/_castPath.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash-es/_castPath.js ***!
  \*********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _isArray_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./isArray.js */ "./node_modules/lodash-es/isArray.js");
/* harmony import */ var _isKey_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_isKey.js */ "./node_modules/lodash-es/_isKey.js");
/* harmony import */ var _stringToPath_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./_stringToPath.js */ "./node_modules/lodash-es/_stringToPath.js");
/* harmony import */ var _toString_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./toString.js */ "./node_modules/lodash-es/toString.js");





/**
 * Casts `value` to a path array if it's not one.
 *
 * @private
 * @param {*} value The value to inspect.
 * @param {Object} [object] The object to query keys on.
 * @returns {Array} Returns the cast property path array.
 */
function castPath(value, object) {
  if ((0,_isArray_js__WEBPACK_IMPORTED_MODULE_0__.default)(value)) {
    return value;
  }
  return (0,_isKey_js__WEBPACK_IMPORTED_MODULE_1__.default)(value, object) ? [value] : (0,_stringToPath_js__WEBPACK_IMPORTED_MODULE_2__.default)((0,_toString_js__WEBPACK_IMPORTED_MODULE_3__.default)(value));
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (castPath);


/***/ }),

/***/ "./node_modules/lodash-es/_coreJsData.js":
/*!***********************************************!*\
  !*** ./node_modules/lodash-es/_coreJsData.js ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _root_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_root.js */ "./node_modules/lodash-es/_root.js");


/** Used to detect overreaching core-js shims. */
var coreJsData = _root_js__WEBPACK_IMPORTED_MODULE_0__.default["__core-js_shared__"];

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (coreJsData);


/***/ }),

/***/ "./node_modules/lodash-es/_defineProperty.js":
/*!***************************************************!*\
  !*** ./node_modules/lodash-es/_defineProperty.js ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _getNative_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_getNative.js */ "./node_modules/lodash-es/_getNative.js");


var defineProperty = (function() {
  try {
    var func = (0,_getNative_js__WEBPACK_IMPORTED_MODULE_0__.default)(Object, 'defineProperty');
    func({}, '', {});
    return func;
  } catch (e) {}
}());

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (defineProperty);


/***/ }),

/***/ "./node_modules/lodash-es/_equalArrays.js":
/*!************************************************!*\
  !*** ./node_modules/lodash-es/_equalArrays.js ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _SetCache_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_SetCache.js */ "./node_modules/lodash-es/_SetCache.js");
/* harmony import */ var _arraySome_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_arraySome.js */ "./node_modules/lodash-es/_arraySome.js");
/* harmony import */ var _cacheHas_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./_cacheHas.js */ "./node_modules/lodash-es/_cacheHas.js");




/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1,
    COMPARE_UNORDERED_FLAG = 2;

/**
 * A specialized version of `baseIsEqualDeep` for arrays with support for
 * partial deep comparisons.
 *
 * @private
 * @param {Array} array The array to compare.
 * @param {Array} other The other array to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} stack Tracks traversed `array` and `other` objects.
 * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
 */
function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
      arrLength = array.length,
      othLength = other.length;

  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
    return false;
  }
  // Check that cyclic values are equal.
  var arrStacked = stack.get(array);
  var othStacked = stack.get(other);
  if (arrStacked && othStacked) {
    return arrStacked == other && othStacked == array;
  }
  var index = -1,
      result = true,
      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new _SetCache_js__WEBPACK_IMPORTED_MODULE_0__.default : undefined;

  stack.set(array, other);
  stack.set(other, array);

  // Ignore non-index properties.
  while (++index < arrLength) {
    var arrValue = array[index],
        othValue = other[index];

    if (customizer) {
      var compared = isPartial
        ? customizer(othValue, arrValue, index, other, array, stack)
        : customizer(arrValue, othValue, index, array, other, stack);
    }
    if (compared !== undefined) {
      if (compared) {
        continue;
      }
      result = false;
      break;
    }
    // Recursively compare arrays (susceptible to call stack limits).
    if (seen) {
      if (!(0,_arraySome_js__WEBPACK_IMPORTED_MODULE_1__.default)(other, function(othValue, othIndex) {
            if (!(0,_cacheHas_js__WEBPACK_IMPORTED_MODULE_2__.default)(seen, othIndex) &&
                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
              return seen.push(othIndex);
            }
          })) {
        result = false;
        break;
      }
    } else if (!(
          arrValue === othValue ||
            equalFunc(arrValue, othValue, bitmask, customizer, stack)
        )) {
      result = false;
      break;
    }
  }
  stack['delete'](array);
  stack['delete'](other);
  return result;
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (equalArrays);


/***/ }),

/***/ "./node_modules/lodash-es/_equalByTag.js":
/*!***********************************************!*\
  !*** ./node_modules/lodash-es/_equalByTag.js ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Symbol_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_Symbol.js */ "./node_modules/lodash-es/_Symbol.js");
/* harmony import */ var _Uint8Array_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_Uint8Array.js */ "./node_modules/lodash-es/_Uint8Array.js");
/* harmony import */ var _eq_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./eq.js */ "./node_modules/lodash-es/eq.js");
/* harmony import */ var _equalArrays_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./_equalArrays.js */ "./node_modules/lodash-es/_equalArrays.js");
/* harmony import */ var _mapToArray_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./_mapToArray.js */ "./node_modules/lodash-es/_mapToArray.js");
/* harmony import */ var _setToArray_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./_setToArray.js */ "./node_modules/lodash-es/_setToArray.js");







/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1,
    COMPARE_UNORDERED_FLAG = 2;

/** `Object#toString` result references. */
var boolTag = '[object Boolean]',
    dateTag = '[object Date]',
    errorTag = '[object Error]',
    mapTag = '[object Map]',
    numberTag = '[object Number]',
    regexpTag = '[object RegExp]',
    setTag = '[object Set]',
    stringTag = '[object String]',
    symbolTag = '[object Symbol]';

var arrayBufferTag = '[object ArrayBuffer]',
    dataViewTag = '[object DataView]';

/** Used to convert symbols to primitives and strings. */
var symbolProto = _Symbol_js__WEBPACK_IMPORTED_MODULE_0__.default ? _Symbol_js__WEBPACK_IMPORTED_MODULE_0__.default.prototype : undefined,
    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;

/**
 * A specialized version of `baseIsEqualDeep` for comparing objects of
 * the same `toStringTag`.
 *
 * **Note:** This function only supports comparing values with tags of
 * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {string} tag The `toStringTag` of the objects to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} stack Tracks traversed `object` and `other` objects.
 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
 */
function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
  switch (tag) {
    case dataViewTag:
      if ((object.byteLength != other.byteLength) ||
          (object.byteOffset != other.byteOffset)) {
        return false;
      }
      object = object.buffer;
      other = other.buffer;

    case arrayBufferTag:
      if ((object.byteLength != other.byteLength) ||
          !equalFunc(new _Uint8Array_js__WEBPACK_IMPORTED_MODULE_1__.default(object), new _Uint8Array_js__WEBPACK_IMPORTED_MODULE_1__.default(other))) {
        return false;
      }
      return true;

    case boolTag:
    case dateTag:
    case numberTag:
      // Coerce booleans to `1` or `0` and dates to milliseconds.
      // Invalid dates are coerced to `NaN`.
      return (0,_eq_js__WEBPACK_IMPORTED_MODULE_2__.default)(+object, +other);

    case errorTag:
      return object.name == other.name && object.message == other.message;

    case regexpTag:
    case stringTag:
      // Coerce regexes to strings and treat strings, primitives and objects,
      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring
      // for more details.
      return object == (other + '');

    case mapTag:
      var convert = _mapToArray_js__WEBPACK_IMPORTED_MODULE_3__.default;

    case setTag:
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
      convert || (convert = _setToArray_js__WEBPACK_IMPORTED_MODULE_4__.default);

      if (object.size != other.size && !isPartial) {
        return false;
      }
      // Assume cyclic values are equal.
      var stacked = stack.get(object);
      if (stacked) {
        return stacked == other;
      }
      bitmask |= COMPARE_UNORDERED_FLAG;

      // Recursively compare objects (susceptible to call stack limits).
      stack.set(object, other);
      var result = (0,_equalArrays_js__WEBPACK_IMPORTED_MODULE_5__.default)(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
      stack['delete'](object);
      return result;

    case symbolTag:
      if (symbolValueOf) {
        return symbolValueOf.call(object) == symbolValueOf.call(other);
      }
  }
  return false;
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (equalByTag);


/***/ }),

/***/ "./node_modules/lodash-es/_equalObjects.js":
/*!*************************************************!*\
  !*** ./node_modules/lodash-es/_equalObjects.js ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _getAllKeys_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_getAllKeys.js */ "./node_modules/lodash-es/_getAllKeys.js");


/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1;

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * A specialized version of `baseIsEqualDeep` for objects with support for
 * partial deep comparisons.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} stack Tracks traversed `object` and `other` objects.
 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
 */
function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
      objProps = (0,_getAllKeys_js__WEBPACK_IMPORTED_MODULE_0__.default)(object),
      objLength = objProps.length,
      othProps = (0,_getAllKeys_js__WEBPACK_IMPORTED_MODULE_0__.default)(other),
      othLength = othProps.length;

  if (objLength != othLength && !isPartial) {
    return false;
  }
  var index = objLength;
  while (index--) {
    var key = objProps[index];
    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
      return false;
    }
  }
  // Check that cyclic values are equal.
  var objStacked = stack.get(object);
  var othStacked = stack.get(other);
  if (objStacked && othStacked) {
    return objStacked == other && othStacked == object;
  }
  var result = true;
  stack.set(object, other);
  stack.set(other, object);

  var skipCtor = isPartial;
  while (++index < objLength) {
    key = objProps[index];
    var objValue = object[key],
        othValue = other[key];

    if (customizer) {
      var compared = isPartial
        ? customizer(othValue, objValue, key, other, object, stack)
        : customizer(objValue, othValue, key, object, other, stack);
    }
    // Recursively compare objects (susceptible to call stack limits).
    if (!(compared === undefined
          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))
          : compared
        )) {
      result = false;
      break;
    }
    skipCtor || (skipCtor = key == 'constructor');
  }
  if (result && !skipCtor) {
    var objCtor = object.constructor,
        othCtor = other.constructor;

    // Non `Object` object instances with different constructors are not equal.
    if (objCtor != othCtor &&
        ('constructor' in object && 'constructor' in other) &&
        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&
          typeof othCtor == 'function' && othCtor instanceof othCtor)) {
      result = false;
    }
  }
  stack['delete'](object);
  stack['delete'](other);
  return result;
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (equalObjects);


/***/ }),

/***/ "./node_modules/lodash-es/_freeGlobal.js":
/*!***********************************************!*\
  !*** ./node_modules/lodash-es/_freeGlobal.js ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/** Detect free variable `global` from Node.js. */
var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (freeGlobal);


/***/ }),

/***/ "./node_modules/lodash-es/_getAllKeys.js":
/*!***********************************************!*\
  !*** ./node_modules/lodash-es/_getAllKeys.js ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _baseGetAllKeys_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_baseGetAllKeys.js */ "./node_modules/lodash-es/_baseGetAllKeys.js");
/* harmony import */ var _getSymbols_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./_getSymbols.js */ "./node_modules/lodash-es/_getSymbols.js");
/* harmony import */ var _keys_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./keys.js */ "./node_modules/lodash-es/keys.js");




/**
 * Creates an array of own enumerable property names and symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names and symbols.
 */
function getAllKeys(object) {
  return (0,_baseGetAllKeys_js__WEBPACK_IMPORTED_MODULE_0__.default)(object, _keys_js__WEBPACK_IMPORTED_MODULE_1__.default, _getSymbols_js__WEBPACK_IMPORTED_MODULE_2__.default);
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (getAllKeys);


/***/ }),

/***/ "./node_modules/lodash-es/_getMapData.js":
/*!***********************************************!*\
  !*** ./node_modules/lodash-es/_getMapData.js ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _isKeyable_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_isKeyable.js */ "./node_modules/lodash-es/_isKeyable.js");


/**
 * Gets the data for `map`.
 *
 * @private
 * @param {Object} map The map to query.
 * @param {string} key The reference key.
 * @returns {*} Returns the map data.
 */
function getMapData(map, key) {
  var data = map.__data__;
  return (0,_isKeyable_js__WEBPACK_IMPORTED_MODULE_0__.default)(key)
    ? data[typeof key == 'string' ? 'string' : 'hash']
    : data.map;
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (getMapData);


/***/ }),

/***/ "./node_modules/lodash-es/_getMatchData.js":
/*!*************************************************!*\
  !*** ./node_modules/lodash-es/_getMatchData.js ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _isStrictComparable_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_isStrictComparable.js */ "./node_modules/lodash-es/_isStrictComparable.js");
/* harmony import */ var _keys_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./keys.js */ "./node_modules/lodash-es/keys.js");



/**
 * Gets the property names, values, and compare flags of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the match data of `object`.
 */
function getMatchData(object) {
  var result = (0,_keys_js__WEBPACK_IMPORTED_MODULE_0__.default)(object),
      length = result.length;

  while (length--) {
    var key = result[length],
        value = object[key];

    result[length] = [key, value, (0,_isStrictComparable_js__WEBPACK_IMPORTED_MODULE_1__.default)(value)];
  }
  return result;
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (getMatchData);


/***/ }),

/***/ "./node_modules/lodash-es/_getNative.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash-es/_getNative.js ***!
  \**********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _baseIsNative_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_baseIsNative.js */ "./node_modules/lodash-es/_baseIsNative.js");
/* harmony import */ var _getValue_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_getValue.js */ "./node_modules/lodash-es/_getValue.js");



/**
 * Gets the native function at `key` of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {string} key The key of the method to get.
 * @returns {*} Returns the function if it's native, else `undefined`.
 */
function getNative(object, key) {
  var value = (0,_getValue_js__WEBPACK_IMPORTED_MODULE_0__.default)(object, key);
  return (0,_baseIsNative_js__WEBPACK_IMPORTED_MODULE_1__.default)(value) ? value : undefined;
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (getNative);


/***/ }),

/***/ "./node_modules/lodash-es/_getRawTag.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash-es/_getRawTag.js ***!
  \**********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Symbol_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_Symbol.js */ "./node_modules/lodash-es/_Symbol.js");


/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var nativeObjectToString = objectProto.toString;

/** Built-in value references. */
var symToStringTag = _Symbol_js__WEBPACK_IMPORTED_MODULE_0__.default ? _Symbol_js__WEBPACK_IMPORTED_MODULE_0__.default.toStringTag : undefined;

/**
 * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the raw `toStringTag`.
 */
function getRawTag(value) {
  var isOwn = hasOwnProperty.call(value, symToStringTag),
      tag = value[symToStringTag];

  try {
    value[symToStringTag] = undefined;
    var unmasked = true;
  } catch (e) {}

  var result = nativeObjectToString.call(value);
  if (unmasked) {
    if (isOwn) {
      value[symToStringTag] = tag;
    } else {
      delete value[symToStringTag];
    }
  }
  return result;
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (getRawTag);


/***/ }),

/***/ "./node_modules/lodash-es/_getSymbols.js":
/*!***********************************************!*\
  !*** ./node_modules/lodash-es/_getSymbols.js ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _arrayFilter_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_arrayFilter.js */ "./node_modules/lodash-es/_arrayFilter.js");
/* harmony import */ var _stubArray_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./stubArray.js */ "./node_modules/lodash-es/stubArray.js");



/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Built-in value references. */
var propertyIsEnumerable = objectProto.propertyIsEnumerable;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeGetSymbols = Object.getOwnPropertySymbols;

/**
 * Creates an array of the own enumerable symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of symbols.
 */
var getSymbols = !nativeGetSymbols ? _stubArray_js__WEBPACK_IMPORTED_MODULE_0__.default : function(object) {
  if (object == null) {
    return [];
  }
  object = Object(object);
  return (0,_arrayFilter_js__WEBPACK_IMPORTED_MODULE_1__.default)(nativeGetSymbols(object), function(symbol) {
    return propertyIsEnumerable.call(object, symbol);
  });
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (getSymbols);


/***/ }),

/***/ "./node_modules/lodash-es/_getTag.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash-es/_getTag.js ***!
  \*******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _DataView_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_DataView.js */ "./node_modules/lodash-es/_DataView.js");
/* harmony import */ var _Map_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./_Map.js */ "./node_modules/lodash-es/_Map.js");
/* harmony import */ var _Promise_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./_Promise.js */ "./node_modules/lodash-es/_Promise.js");
/* harmony import */ var _Set_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./_Set.js */ "./node_modules/lodash-es/_Set.js");
/* harmony import */ var _WeakMap_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./_WeakMap.js */ "./node_modules/lodash-es/_WeakMap.js");
/* harmony import */ var _baseGetTag_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./_baseGetTag.js */ "./node_modules/lodash-es/_baseGetTag.js");
/* harmony import */ var _toSource_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_toSource.js */ "./node_modules/lodash-es/_toSource.js");








/** `Object#toString` result references. */
var mapTag = '[object Map]',
    objectTag = '[object Object]',
    promiseTag = '[object Promise]',
    setTag = '[object Set]',
    weakMapTag = '[object WeakMap]';

var dataViewTag = '[object DataView]';

/** Used to detect maps, sets, and weakmaps. */
var dataViewCtorString = (0,_toSource_js__WEBPACK_IMPORTED_MODULE_0__.default)(_DataView_js__WEBPACK_IMPORTED_MODULE_1__.default),
    mapCtorString = (0,_toSource_js__WEBPACK_IMPORTED_MODULE_0__.default)(_Map_js__WEBPACK_IMPORTED_MODULE_2__.default),
    promiseCtorString = (0,_toSource_js__WEBPACK_IMPORTED_MODULE_0__.default)(_Promise_js__WEBPACK_IMPORTED_MODULE_3__.default),
    setCtorString = (0,_toSource_js__WEBPACK_IMPORTED_MODULE_0__.default)(_Set_js__WEBPACK_IMPORTED_MODULE_4__.default),
    weakMapCtorString = (0,_toSource_js__WEBPACK_IMPORTED_MODULE_0__.default)(_WeakMap_js__WEBPACK_IMPORTED_MODULE_5__.default);

/**
 * Gets the `toStringTag` of `value`.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the `toStringTag`.
 */
var getTag = _baseGetTag_js__WEBPACK_IMPORTED_MODULE_6__.default;

// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.
if ((_DataView_js__WEBPACK_IMPORTED_MODULE_1__.default && getTag(new _DataView_js__WEBPACK_IMPORTED_MODULE_1__.default(new ArrayBuffer(1))) != dataViewTag) ||
    (_Map_js__WEBPACK_IMPORTED_MODULE_2__.default && getTag(new _Map_js__WEBPACK_IMPORTED_MODULE_2__.default) != mapTag) ||
    (_Promise_js__WEBPACK_IMPORTED_MODULE_3__.default && getTag(_Promise_js__WEBPACK_IMPORTED_MODULE_3__.default.resolve()) != promiseTag) ||
    (_Set_js__WEBPACK_IMPORTED_MODULE_4__.default && getTag(new _Set_js__WEBPACK_IMPORTED_MODULE_4__.default) != setTag) ||
    (_WeakMap_js__WEBPACK_IMPORTED_MODULE_5__.default && getTag(new _WeakMap_js__WEBPACK_IMPORTED_MODULE_5__.default) != weakMapTag)) {
  getTag = function(value) {
    var result = (0,_baseGetTag_js__WEBPACK_IMPORTED_MODULE_6__.default)(value),
        Ctor = result == objectTag ? value.constructor : undefined,
        ctorString = Ctor ? (0,_toSource_js__WEBPACK_IMPORTED_MODULE_0__.default)(Ctor) : '';

    if (ctorString) {
      switch (ctorString) {
        case dataViewCtorString: return dataViewTag;
        case mapCtorString: return mapTag;
        case promiseCtorString: return promiseTag;
        case setCtorString: return setTag;
        case weakMapCtorString: return weakMapTag;
      }
    }
    return result;
  };
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (getTag);


/***/ }),

/***/ "./node_modules/lodash-es/_getValue.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash-es/_getValue.js ***!
  \*********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/**
 * Gets the value at `key` of `object`.
 *
 * @private
 * @param {Object} [object] The object to query.
 * @param {string} key The key of the property to get.
 * @returns {*} Returns the property value.
 */
function getValue(object, key) {
  return object == null ? undefined : object[key];
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (getValue);


/***/ }),

/***/ "./node_modules/lodash-es/_hasPath.js":
/*!********************************************!*\
  !*** ./node_modules/lodash-es/_hasPath.js ***!
  \********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _castPath_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_castPath.js */ "./node_modules/lodash-es/_castPath.js");
/* harmony import */ var _isArguments_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./isArguments.js */ "./node_modules/lodash-es/isArguments.js");
/* harmony import */ var _isArray_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./isArray.js */ "./node_modules/lodash-es/isArray.js");
/* harmony import */ var _isIndex_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./_isIndex.js */ "./node_modules/lodash-es/_isIndex.js");
/* harmony import */ var _isLength_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./isLength.js */ "./node_modules/lodash-es/isLength.js");
/* harmony import */ var _toKey_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_toKey.js */ "./node_modules/lodash-es/_toKey.js");







/**
 * Checks if `path` exists on `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Array|string} path The path to check.
 * @param {Function} hasFunc The function to check properties.
 * @returns {boolean} Returns `true` if `path` exists, else `false`.
 */
function hasPath(object, path, hasFunc) {
  path = (0,_castPath_js__WEBPACK_IMPORTED_MODULE_0__.default)(path, object);

  var index = -1,
      length = path.length,
      result = false;

  while (++index < length) {
    var key = (0,_toKey_js__WEBPACK_IMPORTED_MODULE_1__.default)(path[index]);
    if (!(result = object != null && hasFunc(object, key))) {
      break;
    }
    object = object[key];
  }
  if (result || ++index != length) {
    return result;
  }
  length = object == null ? 0 : object.length;
  return !!length && (0,_isLength_js__WEBPACK_IMPORTED_MODULE_2__.default)(length) && (0,_isIndex_js__WEBPACK_IMPORTED_MODULE_3__.default)(key, length) &&
    ((0,_isArray_js__WEBPACK_IMPORTED_MODULE_4__.default)(object) || (0,_isArguments_js__WEBPACK_IMPORTED_MODULE_5__.default)(object));
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (hasPath);


/***/ }),

/***/ "./node_modules/lodash-es/_hashClear.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash-es/_hashClear.js ***!
  \**********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _nativeCreate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_nativeCreate.js */ "./node_modules/lodash-es/_nativeCreate.js");


/**
 * Removes all key-value entries from the hash.
 *
 * @private
 * @name clear
 * @memberOf Hash
 */
function hashClear() {
  this.__data__ = _nativeCreate_js__WEBPACK_IMPORTED_MODULE_0__.default ? (0,_nativeCreate_js__WEBPACK_IMPORTED_MODULE_0__.default)(null) : {};
  this.size = 0;
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (hashClear);


/***/ }),

/***/ "./node_modules/lodash-es/_hashDelete.js":
/*!***********************************************!*\
  !*** ./node_modules/lodash-es/_hashDelete.js ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/**
 * Removes `key` and its value from the hash.
 *
 * @private
 * @name delete
 * @memberOf Hash
 * @param {Object} hash The hash to modify.
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function hashDelete(key) {
  var result = this.has(key) && delete this.__data__[key];
  this.size -= result ? 1 : 0;
  return result;
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (hashDelete);


/***/ }),

/***/ "./node_modules/lodash-es/_hashGet.js":
/*!********************************************!*\
  !*** ./node_modules/lodash-es/_hashGet.js ***!
  \********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _nativeCreate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_nativeCreate.js */ "./node_modules/lodash-es/_nativeCreate.js");


/** Used to stand-in for `undefined` hash values. */
var HASH_UNDEFINED = '__lodash_hash_undefined__';

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Gets the hash value for `key`.
 *
 * @private
 * @name get
 * @memberOf Hash
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function hashGet(key) {
  var data = this.__data__;
  if (_nativeCreate_js__WEBPACK_IMPORTED_MODULE_0__.default) {
    var result = data[key];
    return result === HASH_UNDEFINED ? undefined : result;
  }
  return hasOwnProperty.call(data, key) ? data[key] : undefined;
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (hashGet);


/***/ }),

/***/ "./node_modules/lodash-es/_hashHas.js":
/*!********************************************!*\
  !*** ./node_modules/lodash-es/_hashHas.js ***!
  \********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _nativeCreate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_nativeCreate.js */ "./node_modules/lodash-es/_nativeCreate.js");


/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Checks if a hash value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf Hash
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function hashHas(key) {
  var data = this.__data__;
  return _nativeCreate_js__WEBPACK_IMPORTED_MODULE_0__.default ? (data[key] !== undefined) : hasOwnProperty.call(data, key);
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (hashHas);


/***/ }),

/***/ "./node_modules/lodash-es/_hashSet.js":
/*!********************************************!*\
  !*** ./node_modules/lodash-es/_hashSet.js ***!
  \********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _nativeCreate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_nativeCreate.js */ "./node_modules/lodash-es/_nativeCreate.js");


/** Used to stand-in for `undefined` hash values. */
var HASH_UNDEFINED = '__lodash_hash_undefined__';

/**
 * Sets the hash `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf Hash
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the hash instance.
 */
function hashSet(key, value) {
  var data = this.__data__;
  this.size += this.has(key) ? 0 : 1;
  data[key] = (_nativeCreate_js__WEBPACK_IMPORTED_MODULE_0__.default && value === undefined) ? HASH_UNDEFINED : value;
  return this;
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (hashSet);


/***/ }),

/***/ "./node_modules/lodash-es/_isIndex.js":
/*!********************************************!*\
  !*** ./node_modules/lodash-es/_isIndex.js ***!
  \********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/** Used as references for various `Number` constants. */
var MAX_SAFE_INTEGER = 9007199254740991;

/** Used to detect unsigned integer values. */
var reIsUint = /^(?:0|[1-9]\d*)$/;

/**
 * Checks if `value` is a valid array-like index.
 *
 * @private
 * @param {*} value The value to check.
 * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
 * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
 */
function isIndex(value, length) {
  var type = typeof value;
  length = length == null ? MAX_SAFE_INTEGER : length;

  return !!length &&
    (type == 'number' ||
      (type != 'symbol' && reIsUint.test(value))) &&
        (value > -1 && value % 1 == 0 && value < length);
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (isIndex);


/***/ }),

/***/ "./node_modules/lodash-es/_isKey.js":
/*!******************************************!*\
  !*** ./node_modules/lodash-es/_isKey.js ***!
  \******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _isArray_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./isArray.js */ "./node_modules/lodash-es/isArray.js");
/* harmony import */ var _isSymbol_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./isSymbol.js */ "./node_modules/lodash-es/isSymbol.js");



/** Used to match property names within property paths. */
var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
    reIsPlainProp = /^\w*$/;

/**
 * Checks if `value` is a property name and not a property path.
 *
 * @private
 * @param {*} value The value to check.
 * @param {Object} [object] The object to query keys on.
 * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
 */
function isKey(value, object) {
  if ((0,_isArray_js__WEBPACK_IMPORTED_MODULE_0__.default)(value)) {
    return false;
  }
  var type = typeof value;
  if (type == 'number' || type == 'symbol' || type == 'boolean' ||
      value == null || (0,_isSymbol_js__WEBPACK_IMPORTED_MODULE_1__.default)(value)) {
    return true;
  }
  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||
    (object != null && value in Object(object));
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (isKey);


/***/ }),

/***/ "./node_modules/lodash-es/_isKeyable.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash-es/_isKeyable.js ***!
  \**********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/**
 * Checks if `value` is suitable for use as unique object key.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
 */
function isKeyable(value) {
  var type = typeof value;
  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')
    ? (value !== '__proto__')
    : (value === null);
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (isKeyable);


/***/ }),

/***/ "./node_modules/lodash-es/_isMasked.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash-es/_isMasked.js ***!
  \*********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _coreJsData_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_coreJsData.js */ "./node_modules/lodash-es/_coreJsData.js");


/** Used to detect methods masquerading as native. */
var maskSrcKey = (function() {
  var uid = /[^.]+$/.exec(_coreJsData_js__WEBPACK_IMPORTED_MODULE_0__.default && _coreJsData_js__WEBPACK_IMPORTED_MODULE_0__.default.keys && _coreJsData_js__WEBPACK_IMPORTED_MODULE_0__.default.keys.IE_PROTO || '');
  return uid ? ('Symbol(src)_1.' + uid) : '';
}());

/**
 * Checks if `func` has its source masked.
 *
 * @private
 * @param {Function} func The function to check.
 * @returns {boolean} Returns `true` if `func` is masked, else `false`.
 */
function isMasked(func) {
  return !!maskSrcKey && (maskSrcKey in func);
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (isMasked);


/***/ }),

/***/ "./node_modules/lodash-es/_isPrototype.js":
/*!************************************************!*\
  !*** ./node_modules/lodash-es/_isPrototype.js ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/** Used for built-in method references. */
var objectProto = Object.prototype;

/**
 * Checks if `value` is likely a prototype object.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
 */
function isPrototype(value) {
  var Ctor = value && value.constructor,
      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;

  return value === proto;
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (isPrototype);


/***/ }),

/***/ "./node_modules/lodash-es/_isStrictComparable.js":
/*!*******************************************************!*\
  !*** ./node_modules/lodash-es/_isStrictComparable.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _isObject_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./isObject.js */ "./node_modules/lodash-es/isObject.js");


/**
 * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` if suitable for strict
 *  equality comparisons, else `false`.
 */
function isStrictComparable(value) {
  return value === value && !(0,_isObject_js__WEBPACK_IMPORTED_MODULE_0__.default)(value);
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (isStrictComparable);


/***/ }),

/***/ "./node_modules/lodash-es/_listCacheClear.js":
/*!***************************************************!*\
  !*** ./node_modules/lodash-es/_listCacheClear.js ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/**
 * Removes all key-value entries from the list cache.
 *
 * @private
 * @name clear
 * @memberOf ListCache
 */
function listCacheClear() {
  this.__data__ = [];
  this.size = 0;
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (listCacheClear);


/***/ }),

/***/ "./node_modules/lodash-es/_listCacheDelete.js":
/*!****************************************************!*\
  !*** ./node_modules/lodash-es/_listCacheDelete.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _assocIndexOf_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_assocIndexOf.js */ "./node_modules/lodash-es/_assocIndexOf.js");


/** Used for built-in method references. */
var arrayProto = Array.prototype;

/** Built-in value references. */
var splice = arrayProto.splice;

/**
 * Removes `key` and its value from the list cache.
 *
 * @private
 * @name delete
 * @memberOf ListCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function listCacheDelete(key) {
  var data = this.__data__,
      index = (0,_assocIndexOf_js__WEBPACK_IMPORTED_MODULE_0__.default)(data, key);

  if (index < 0) {
    return false;
  }
  var lastIndex = data.length - 1;
  if (index == lastIndex) {
    data.pop();
  } else {
    splice.call(data, index, 1);
  }
  --this.size;
  return true;
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (listCacheDelete);


/***/ }),

/***/ "./node_modules/lodash-es/_listCacheGet.js":
/*!*************************************************!*\
  !*** ./node_modules/lodash-es/_listCacheGet.js ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _assocIndexOf_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_assocIndexOf.js */ "./node_modules/lodash-es/_assocIndexOf.js");


/**
 * Gets the list cache value for `key`.
 *
 * @private
 * @name get
 * @memberOf ListCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function listCacheGet(key) {
  var data = this.__data__,
      index = (0,_assocIndexOf_js__WEBPACK_IMPORTED_MODULE_0__.default)(data, key);

  return index < 0 ? undefined : data[index][1];
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (listCacheGet);


/***/ }),

/***/ "./node_modules/lodash-es/_listCacheHas.js":
/*!*************************************************!*\
  !*** ./node_modules/lodash-es/_listCacheHas.js ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _assocIndexOf_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_assocIndexOf.js */ "./node_modules/lodash-es/_assocIndexOf.js");


/**
 * Checks if a list cache value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf ListCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function listCacheHas(key) {
  return (0,_assocIndexOf_js__WEBPACK_IMPORTED_MODULE_0__.default)(this.__data__, key) > -1;
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (listCacheHas);


/***/ }),

/***/ "./node_modules/lodash-es/_listCacheSet.js":
/*!*************************************************!*\
  !*** ./node_modules/lodash-es/_listCacheSet.js ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _assocIndexOf_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_assocIndexOf.js */ "./node_modules/lodash-es/_assocIndexOf.js");


/**
 * Sets the list cache `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf ListCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the list cache instance.
 */
function listCacheSet(key, value) {
  var data = this.__data__,
      index = (0,_assocIndexOf_js__WEBPACK_IMPORTED_MODULE_0__.default)(data, key);

  if (index < 0) {
    ++this.size;
    data.push([key, value]);
  } else {
    data[index][1] = value;
  }
  return this;
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (listCacheSet);


/***/ }),

/***/ "./node_modules/lodash-es/_mapCacheClear.js":
/*!**************************************************!*\
  !*** ./node_modules/lodash-es/_mapCacheClear.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Hash_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_Hash.js */ "./node_modules/lodash-es/_Hash.js");
/* harmony import */ var _ListCache_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./_ListCache.js */ "./node_modules/lodash-es/_ListCache.js");
/* harmony import */ var _Map_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_Map.js */ "./node_modules/lodash-es/_Map.js");




/**
 * Removes all key-value entries from the map.
 *
 * @private
 * @name clear
 * @memberOf MapCache
 */
function mapCacheClear() {
  this.size = 0;
  this.__data__ = {
    'hash': new _Hash_js__WEBPACK_IMPORTED_MODULE_0__.default,
    'map': new (_Map_js__WEBPACK_IMPORTED_MODULE_1__.default || _ListCache_js__WEBPACK_IMPORTED_MODULE_2__.default),
    'string': new _Hash_js__WEBPACK_IMPORTED_MODULE_0__.default
  };
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (mapCacheClear);


/***/ }),

/***/ "./node_modules/lodash-es/_mapCacheDelete.js":
/*!***************************************************!*\
  !*** ./node_modules/lodash-es/_mapCacheDelete.js ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _getMapData_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_getMapData.js */ "./node_modules/lodash-es/_getMapData.js");


/**
 * Removes `key` and its value from the map.
 *
 * @private
 * @name delete
 * @memberOf MapCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function mapCacheDelete(key) {
  var result = (0,_getMapData_js__WEBPACK_IMPORTED_MODULE_0__.default)(this, key)['delete'](key);
  this.size -= result ? 1 : 0;
  return result;
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (mapCacheDelete);


/***/ }),

/***/ "./node_modules/lodash-es/_mapCacheGet.js":
/*!************************************************!*\
  !*** ./node_modules/lodash-es/_mapCacheGet.js ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _getMapData_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_getMapData.js */ "./node_modules/lodash-es/_getMapData.js");


/**
 * Gets the map value for `key`.
 *
 * @private
 * @name get
 * @memberOf MapCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function mapCacheGet(key) {
  return (0,_getMapData_js__WEBPACK_IMPORTED_MODULE_0__.default)(this, key).get(key);
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (mapCacheGet);


/***/ }),

/***/ "./node_modules/lodash-es/_mapCacheHas.js":
/*!************************************************!*\
  !*** ./node_modules/lodash-es/_mapCacheHas.js ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _getMapData_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_getMapData.js */ "./node_modules/lodash-es/_getMapData.js");


/**
 * Checks if a map value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf MapCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function mapCacheHas(key) {
  return (0,_getMapData_js__WEBPACK_IMPORTED_MODULE_0__.default)(this, key).has(key);
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (mapCacheHas);


/***/ }),

/***/ "./node_modules/lodash-es/_mapCacheSet.js":
/*!************************************************!*\
  !*** ./node_modules/lodash-es/_mapCacheSet.js ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _getMapData_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_getMapData.js */ "./node_modules/lodash-es/_getMapData.js");


/**
 * Sets the map `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf MapCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the map cache instance.
 */
function mapCacheSet(key, value) {
  var data = (0,_getMapData_js__WEBPACK_IMPORTED_MODULE_0__.default)(this, key),
      size = data.size;

  data.set(key, value);
  this.size += data.size == size ? 0 : 1;
  return this;
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (mapCacheSet);


/***/ }),

/***/ "./node_modules/lodash-es/_mapToArray.js":
/*!***********************************************!*\
  !*** ./node_modules/lodash-es/_mapToArray.js ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/**
 * Converts `map` to its key-value pairs.
 *
 * @private
 * @param {Object} map The map to convert.
 * @returns {Array} Returns the key-value pairs.
 */
function mapToArray(map) {
  var index = -1,
      result = Array(map.size);

  map.forEach(function(value, key) {
    result[++index] = [key, value];
  });
  return result;
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (mapToArray);


/***/ }),

/***/ "./node_modules/lodash-es/_matchesStrictComparable.js":
/*!************************************************************!*\
  !*** ./node_modules/lodash-es/_matchesStrictComparable.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/**
 * A specialized version of `matchesProperty` for source values suitable
 * for strict equality comparisons, i.e. `===`.
 *
 * @private
 * @param {string} key The key of the property to get.
 * @param {*} srcValue The value to match.
 * @returns {Function} Returns the new spec function.
 */
function matchesStrictComparable(key, srcValue) {
  return function(object) {
    if (object == null) {
      return false;
    }
    return object[key] === srcValue &&
      (srcValue !== undefined || (key in Object(object)));
  };
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (matchesStrictComparable);


/***/ }),

/***/ "./node_modules/lodash-es/_memoizeCapped.js":
/*!**************************************************!*\
  !*** ./node_modules/lodash-es/_memoizeCapped.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _memoize_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./memoize.js */ "./node_modules/lodash-es/memoize.js");


/** Used as the maximum memoize cache size. */
var MAX_MEMOIZE_SIZE = 500;

/**
 * A specialized version of `_.memoize` which clears the memoized function's
 * cache when it exceeds `MAX_MEMOIZE_SIZE`.
 *
 * @private
 * @param {Function} func The function to have its output memoized.
 * @returns {Function} Returns the new memoized function.
 */
function memoizeCapped(func) {
  var result = (0,_memoize_js__WEBPACK_IMPORTED_MODULE_0__.default)(func, function(key) {
    if (cache.size === MAX_MEMOIZE_SIZE) {
      cache.clear();
    }
    return key;
  });

  var cache = result.cache;
  return result;
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (memoizeCapped);


/***/ }),

/***/ "./node_modules/lodash-es/_nativeCreate.js":
/*!*************************************************!*\
  !*** ./node_modules/lodash-es/_nativeCreate.js ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _getNative_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_getNative.js */ "./node_modules/lodash-es/_getNative.js");


/* Built-in method references that are verified to be native. */
var nativeCreate = (0,_getNative_js__WEBPACK_IMPORTED_MODULE_0__.default)(Object, 'create');

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (nativeCreate);


/***/ }),

/***/ "./node_modules/lodash-es/_nativeKeys.js":
/*!***********************************************!*\
  !*** ./node_modules/lodash-es/_nativeKeys.js ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _overArg_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_overArg.js */ "./node_modules/lodash-es/_overArg.js");


/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeKeys = (0,_overArg_js__WEBPACK_IMPORTED_MODULE_0__.default)(Object.keys, Object);

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (nativeKeys);


/***/ }),

/***/ "./node_modules/lodash-es/_nodeUtil.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash-es/_nodeUtil.js ***!
  \*********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _freeGlobal_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_freeGlobal.js */ "./node_modules/lodash-es/_freeGlobal.js");


/** Detect free variable `exports`. */
var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;

/** Detect free variable `module`. */
var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

/** Detect the popular CommonJS extension `module.exports`. */
var moduleExports = freeModule && freeModule.exports === freeExports;

/** Detect free variable `process` from Node.js. */
var freeProcess = moduleExports && _freeGlobal_js__WEBPACK_IMPORTED_MODULE_0__.default.process;

/** Used to access faster Node.js helpers. */
var nodeUtil = (function() {
  try {
    // Use `util.types` for Node.js 10+.
    var types = freeModule && freeModule.require && freeModule.require('util').types;

    if (types) {
      return types;
    }

    // Legacy `process.binding('util')` for Node.js < 10.
    return freeProcess && freeProcess.binding && freeProcess.binding('util');
  } catch (e) {}
}());

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (nodeUtil);


/***/ }),

/***/ "./node_modules/lodash-es/_objectToString.js":
/*!***************************************************!*\
  !*** ./node_modules/lodash-es/_objectToString.js ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/** Used for built-in method references. */
var objectProto = Object.prototype;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var nativeObjectToString = objectProto.toString;

/**
 * Converts `value` to a string using `Object.prototype.toString`.
 *
 * @private
 * @param {*} value The value to convert.
 * @returns {string} Returns the converted string.
 */
function objectToString(value) {
  return nativeObjectToString.call(value);
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (objectToString);


/***/ }),

/***/ "./node_modules/lodash-es/_overArg.js":
/*!********************************************!*\
  !*** ./node_modules/lodash-es/_overArg.js ***!
  \********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/**
 * Creates a unary function that invokes `func` with its argument transformed.
 *
 * @private
 * @param {Function} func The function to wrap.
 * @param {Function} transform The argument transform.
 * @returns {Function} Returns the new function.
 */
function overArg(func, transform) {
  return function(arg) {
    return func(transform(arg));
  };
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (overArg);


/***/ }),

/***/ "./node_modules/lodash-es/_overRest.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash-es/_overRest.js ***!
  \*********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _apply_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_apply.js */ "./node_modules/lodash-es/_apply.js");


/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMax = Math.max;

/**
 * A specialized version of `baseRest` which transforms the rest array.
 *
 * @private
 * @param {Function} func The function to apply a rest parameter to.
 * @param {number} [start=func.length-1] The start position of the rest parameter.
 * @param {Function} transform The rest array transform.
 * @returns {Function} Returns the new function.
 */
function overRest(func, start, transform) {
  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);
  return function() {
    var args = arguments,
        index = -1,
        length = nativeMax(args.length - start, 0),
        array = Array(length);

    while (++index < length) {
      array[index] = args[start + index];
    }
    index = -1;
    var otherArgs = Array(start + 1);
    while (++index < start) {
      otherArgs[index] = args[index];
    }
    otherArgs[start] = transform(array);
    return (0,_apply_js__WEBPACK_IMPORTED_MODULE_0__.default)(func, this, otherArgs);
  };
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (overRest);


/***/ }),

/***/ "./node_modules/lodash-es/_root.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash-es/_root.js ***!
  \*****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _freeGlobal_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_freeGlobal.js */ "./node_modules/lodash-es/_freeGlobal.js");


/** Detect free variable `self`. */
var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

/** Used as a reference to the global object. */
var root = _freeGlobal_js__WEBPACK_IMPORTED_MODULE_0__.default || freeSelf || Function('return this')();

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (root);


/***/ }),

/***/ "./node_modules/lodash-es/_setCacheAdd.js":
/*!************************************************!*\
  !*** ./node_modules/lodash-es/_setCacheAdd.js ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/** Used to stand-in for `undefined` hash values. */
var HASH_UNDEFINED = '__lodash_hash_undefined__';

/**
 * Adds `value` to the array cache.
 *
 * @private
 * @name add
 * @memberOf SetCache
 * @alias push
 * @param {*} value The value to cache.
 * @returns {Object} Returns the cache instance.
 */
function setCacheAdd(value) {
  this.__data__.set(value, HASH_UNDEFINED);
  return this;
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (setCacheAdd);


/***/ }),

/***/ "./node_modules/lodash-es/_setCacheHas.js":
/*!************************************************!*\
  !*** ./node_modules/lodash-es/_setCacheHas.js ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/**
 * Checks if `value` is in the array cache.
 *
 * @private
 * @name has
 * @memberOf SetCache
 * @param {*} value The value to search for.
 * @returns {number} Returns `true` if `value` is found, else `false`.
 */
function setCacheHas(value) {
  return this.__data__.has(value);
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (setCacheHas);


/***/ }),

/***/ "./node_modules/lodash-es/_setToArray.js":
/*!***********************************************!*\
  !*** ./node_modules/lodash-es/_setToArray.js ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/**
 * Converts `set` to an array of its values.
 *
 * @private
 * @param {Object} set The set to convert.
 * @returns {Array} Returns the values.
 */
function setToArray(set) {
  var index = -1,
      result = Array(set.size);

  set.forEach(function(value) {
    result[++index] = value;
  });
  return result;
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (setToArray);


/***/ }),

/***/ "./node_modules/lodash-es/_setToString.js":
/*!************************************************!*\
  !*** ./node_modules/lodash-es/_setToString.js ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _baseSetToString_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_baseSetToString.js */ "./node_modules/lodash-es/_baseSetToString.js");
/* harmony import */ var _shortOut_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_shortOut.js */ "./node_modules/lodash-es/_shortOut.js");



/**
 * Sets the `toString` method of `func` to return `string`.
 *
 * @private
 * @param {Function} func The function to modify.
 * @param {Function} string The `toString` result.
 * @returns {Function} Returns `func`.
 */
var setToString = (0,_shortOut_js__WEBPACK_IMPORTED_MODULE_0__.default)(_baseSetToString_js__WEBPACK_IMPORTED_MODULE_1__.default);

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (setToString);


/***/ }),

/***/ "./node_modules/lodash-es/_shortOut.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash-es/_shortOut.js ***!
  \*********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/** Used to detect hot functions by number of calls within a span of milliseconds. */
var HOT_COUNT = 800,
    HOT_SPAN = 16;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeNow = Date.now;

/**
 * Creates a function that'll short out and invoke `identity` instead
 * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`
 * milliseconds.
 *
 * @private
 * @param {Function} func The function to restrict.
 * @returns {Function} Returns the new shortable function.
 */
function shortOut(func) {
  var count = 0,
      lastCalled = 0;

  return function() {
    var stamp = nativeNow(),
        remaining = HOT_SPAN - (stamp - lastCalled);

    lastCalled = stamp;
    if (remaining > 0) {
      if (++count >= HOT_COUNT) {
        return arguments[0];
      }
    } else {
      count = 0;
    }
    return func.apply(undefined, arguments);
  };
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (shortOut);


/***/ }),

/***/ "./node_modules/lodash-es/_stackClear.js":
/*!***********************************************!*\
  !*** ./node_modules/lodash-es/_stackClear.js ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _ListCache_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_ListCache.js */ "./node_modules/lodash-es/_ListCache.js");


/**
 * Removes all key-value entries from the stack.
 *
 * @private
 * @name clear
 * @memberOf Stack
 */
function stackClear() {
  this.__data__ = new _ListCache_js__WEBPACK_IMPORTED_MODULE_0__.default;
  this.size = 0;
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (stackClear);


/***/ }),

/***/ "./node_modules/lodash-es/_stackDelete.js":
/*!************************************************!*\
  !*** ./node_modules/lodash-es/_stackDelete.js ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/**
 * Removes `key` and its value from the stack.
 *
 * @private
 * @name delete
 * @memberOf Stack
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function stackDelete(key) {
  var data = this.__data__,
      result = data['delete'](key);

  this.size = data.size;
  return result;
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (stackDelete);


/***/ }),

/***/ "./node_modules/lodash-es/_stackGet.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash-es/_stackGet.js ***!
  \*********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/**
 * Gets the stack value for `key`.
 *
 * @private
 * @name get
 * @memberOf Stack
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function stackGet(key) {
  return this.__data__.get(key);
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (stackGet);


/***/ }),

/***/ "./node_modules/lodash-es/_stackHas.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash-es/_stackHas.js ***!
  \*********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/**
 * Checks if a stack value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf Stack
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function stackHas(key) {
  return this.__data__.has(key);
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (stackHas);


/***/ }),

/***/ "./node_modules/lodash-es/_stackSet.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash-es/_stackSet.js ***!
  \*********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _ListCache_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_ListCache.js */ "./node_modules/lodash-es/_ListCache.js");
/* harmony import */ var _Map_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_Map.js */ "./node_modules/lodash-es/_Map.js");
/* harmony import */ var _MapCache_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./_MapCache.js */ "./node_modules/lodash-es/_MapCache.js");




/** Used as the size to enable large array optimizations. */
var LARGE_ARRAY_SIZE = 200;

/**
 * Sets the stack `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf Stack
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the stack cache instance.
 */
function stackSet(key, value) {
  var data = this.__data__;
  if (data instanceof _ListCache_js__WEBPACK_IMPORTED_MODULE_0__.default) {
    var pairs = data.__data__;
    if (!_Map_js__WEBPACK_IMPORTED_MODULE_1__.default || (pairs.length < LARGE_ARRAY_SIZE - 1)) {
      pairs.push([key, value]);
      this.size = ++data.size;
      return this;
    }
    data = this.__data__ = new _MapCache_js__WEBPACK_IMPORTED_MODULE_2__.default(pairs);
  }
  data.set(key, value);
  this.size = data.size;
  return this;
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (stackSet);


/***/ }),

/***/ "./node_modules/lodash-es/_strictIndexOf.js":
/*!**************************************************!*\
  !*** ./node_modules/lodash-es/_strictIndexOf.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/**
 * A specialized version of `_.indexOf` which performs strict equality
 * comparisons of values, i.e. `===`.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} value The value to search for.
 * @param {number} fromIndex The index to search from.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function strictIndexOf(array, value, fromIndex) {
  var index = fromIndex - 1,
      length = array.length;

  while (++index < length) {
    if (array[index] === value) {
      return index;
    }
  }
  return -1;
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (strictIndexOf);


/***/ }),

/***/ "./node_modules/lodash-es/_stringToPath.js":
/*!*************************************************!*\
  !*** ./node_modules/lodash-es/_stringToPath.js ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _memoizeCapped_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_memoizeCapped.js */ "./node_modules/lodash-es/_memoizeCapped.js");


/** Used to match property names within property paths. */
var rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;

/** Used to match backslashes in property paths. */
var reEscapeChar = /\\(\\)?/g;

/**
 * Converts `string` to a property path array.
 *
 * @private
 * @param {string} string The string to convert.
 * @returns {Array} Returns the property path array.
 */
var stringToPath = (0,_memoizeCapped_js__WEBPACK_IMPORTED_MODULE_0__.default)(function(string) {
  var result = [];
  if (string.charCodeAt(0) === 46 /* . */) {
    result.push('');
  }
  string.replace(rePropName, function(match, number, quote, subString) {
    result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));
  });
  return result;
});

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (stringToPath);


/***/ }),

/***/ "./node_modules/lodash-es/_toKey.js":
/*!******************************************!*\
  !*** ./node_modules/lodash-es/_toKey.js ***!
  \******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _isSymbol_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./isSymbol.js */ "./node_modules/lodash-es/isSymbol.js");


/** Used as references for various `Number` constants. */
var INFINITY = 1 / 0;

/**
 * Converts `value` to a string key if it's not a string or symbol.
 *
 * @private
 * @param {*} value The value to inspect.
 * @returns {string|symbol} Returns the key.
 */
function toKey(value) {
  if (typeof value == 'string' || (0,_isSymbol_js__WEBPACK_IMPORTED_MODULE_0__.default)(value)) {
    return value;
  }
  var result = (value + '');
  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (toKey);


/***/ }),

/***/ "./node_modules/lodash-es/_toSource.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash-es/_toSource.js ***!
  \*********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/** Used for built-in method references. */
var funcProto = Function.prototype;

/** Used to resolve the decompiled source of functions. */
var funcToString = funcProto.toString;

/**
 * Converts `func` to its source code.
 *
 * @private
 * @param {Function} func The function to convert.
 * @returns {string} Returns the source code.
 */
function toSource(func) {
  if (func != null) {
    try {
      return funcToString.call(func);
    } catch (e) {}
    try {
      return (func + '');
    } catch (e) {}
  }
  return '';
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (toSource);


/***/ }),

/***/ "./node_modules/lodash-es/_trimmedEndIndex.js":
/*!****************************************************!*\
  !*** ./node_modules/lodash-es/_trimmedEndIndex.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/** Used to match a single whitespace character. */
var reWhitespace = /\s/;

/**
 * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace
 * character of `string`.
 *
 * @private
 * @param {string} string The string to inspect.
 * @returns {number} Returns the index of the last non-whitespace character.
 */
function trimmedEndIndex(string) {
  var index = string.length;

  while (index-- && reWhitespace.test(string.charAt(index))) {}
  return index;
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (trimmedEndIndex);


/***/ }),

/***/ "./node_modules/lodash-es/before.js":
/*!******************************************!*\
  !*** ./node_modules/lodash-es/before.js ***!
  \******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _toInteger_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./toInteger.js */ "./node_modules/lodash-es/toInteger.js");


/** Error message constants. */
var FUNC_ERROR_TEXT = 'Expected a function';

/**
 * Creates a function that invokes `func`, with the `this` binding and arguments
 * of the created function, while it's called less than `n` times. Subsequent
 * calls to the created function return the result of the last `func` invocation.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Function
 * @param {number} n The number of calls at which `func` is no longer invoked.
 * @param {Function} func The function to restrict.
 * @returns {Function} Returns the new restricted function.
 * @example
 *
 * jQuery(element).on('click', _.before(5, addContactToList));
 * // => Allows adding up to 4 contacts to the list.
 */
function before(n, func) {
  var result;
  if (typeof func != 'function') {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  n = (0,_toInteger_js__WEBPACK_IMPORTED_MODULE_0__.default)(n);
  return function() {
    if (--n > 0) {
      result = func.apply(this, arguments);
    }
    if (n <= 1) {
      func = undefined;
    }
    return result;
  };
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (before);


/***/ }),

/***/ "./node_modules/lodash-es/constant.js":
/*!********************************************!*\
  !*** ./node_modules/lodash-es/constant.js ***!
  \********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/**
 * Creates a function that returns `value`.
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Util
 * @param {*} value The value to return from the new function.
 * @returns {Function} Returns the new constant function.
 * @example
 *
 * var objects = _.times(2, _.constant({ 'a': 1 }));
 *
 * console.log(objects);
 * // => [{ 'a': 1 }, { 'a': 1 }]
 *
 * console.log(objects[0] === objects[1]);
 * // => true
 */
function constant(value) {
  return function() {
    return value;
  };
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (constant);


/***/ }),

/***/ "./node_modules/lodash-es/debounce.js":
/*!********************************************!*\
  !*** ./node_modules/lodash-es/debounce.js ***!
  \********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _isObject_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./isObject.js */ "./node_modules/lodash-es/isObject.js");
/* harmony import */ var _now_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./now.js */ "./node_modules/lodash-es/now.js");
/* harmony import */ var _toNumber_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./toNumber.js */ "./node_modules/lodash-es/toNumber.js");




/** Error message constants. */
var FUNC_ERROR_TEXT = 'Expected a function';

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMax = Math.max,
    nativeMin = Math.min;

/**
 * Creates a debounced function that delays invoking `func` until after `wait`
 * milliseconds have elapsed since the last time the debounced function was
 * invoked. The debounced function comes with a `cancel` method to cancel
 * delayed `func` invocations and a `flush` method to immediately invoke them.
 * Provide `options` to indicate whether `func` should be invoked on the
 * leading and/or trailing edge of the `wait` timeout. The `func` is invoked
 * with the last arguments provided to the debounced function. Subsequent
 * calls to the debounced function return the result of the last `func`
 * invocation.
 *
 * **Note:** If `leading` and `trailing` options are `true`, `func` is
 * invoked on the trailing edge of the timeout only if the debounced function
 * is invoked more than once during the `wait` timeout.
 *
 * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
 * until to the next tick, similar to `setTimeout` with a timeout of `0`.
 *
 * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
 * for details over the differences between `_.debounce` and `_.throttle`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to debounce.
 * @param {number} [wait=0] The number of milliseconds to delay.
 * @param {Object} [options={}] The options object.
 * @param {boolean} [options.leading=false]
 *  Specify invoking on the leading edge of the timeout.
 * @param {number} [options.maxWait]
 *  The maximum time `func` is allowed to be delayed before it's invoked.
 * @param {boolean} [options.trailing=true]
 *  Specify invoking on the trailing edge of the timeout.
 * @returns {Function} Returns the new debounced function.
 * @example
 *
 * // Avoid costly calculations while the window size is in flux.
 * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
 *
 * // Invoke `sendMail` when clicked, debouncing subsequent calls.
 * jQuery(element).on('click', _.debounce(sendMail, 300, {
 *   'leading': true,
 *   'trailing': false
 * }));
 *
 * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
 * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
 * var source = new EventSource('/stream');
 * jQuery(source).on('message', debounced);
 *
 * // Cancel the trailing debounced invocation.
 * jQuery(window).on('popstate', debounced.cancel);
 */
function debounce(func, wait, options) {
  var lastArgs,
      lastThis,
      maxWait,
      result,
      timerId,
      lastCallTime,
      lastInvokeTime = 0,
      leading = false,
      maxing = false,
      trailing = true;

  if (typeof func != 'function') {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  wait = (0,_toNumber_js__WEBPACK_IMPORTED_MODULE_0__.default)(wait) || 0;
  if ((0,_isObject_js__WEBPACK_IMPORTED_MODULE_1__.default)(options)) {
    leading = !!options.leading;
    maxing = 'maxWait' in options;
    maxWait = maxing ? nativeMax((0,_toNumber_js__WEBPACK_IMPORTED_MODULE_0__.default)(options.maxWait) || 0, wait) : maxWait;
    trailing = 'trailing' in options ? !!options.trailing : trailing;
  }

  function invokeFunc(time) {
    var args = lastArgs,
        thisArg = lastThis;

    lastArgs = lastThis = undefined;
    lastInvokeTime = time;
    result = func.apply(thisArg, args);
    return result;
  }

  function leadingEdge(time) {
    // Reset any `maxWait` timer.
    lastInvokeTime = time;
    // Start the timer for the trailing edge.
    timerId = setTimeout(timerExpired, wait);
    // Invoke the leading edge.
    return leading ? invokeFunc(time) : result;
  }

  function remainingWait(time) {
    var timeSinceLastCall = time - lastCallTime,
        timeSinceLastInvoke = time - lastInvokeTime,
        timeWaiting = wait - timeSinceLastCall;

    return maxing
      ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)
      : timeWaiting;
  }

  function shouldInvoke(time) {
    var timeSinceLastCall = time - lastCallTime,
        timeSinceLastInvoke = time - lastInvokeTime;

    // Either this is the first call, activity has stopped and we're at the
    // trailing edge, the system time has gone backwards and we're treating
    // it as the trailing edge, or we've hit the `maxWait` limit.
    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||
      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));
  }

  function timerExpired() {
    var time = (0,_now_js__WEBPACK_IMPORTED_MODULE_2__.default)();
    if (shouldInvoke(time)) {
      return trailingEdge(time);
    }
    // Restart the timer.
    timerId = setTimeout(timerExpired, remainingWait(time));
  }

  function trailingEdge(time) {
    timerId = undefined;

    // Only invoke if we have `lastArgs` which means `func` has been
    // debounced at least once.
    if (trailing && lastArgs) {
      return invokeFunc(time);
    }
    lastArgs = lastThis = undefined;
    return result;
  }

  function cancel() {
    if (timerId !== undefined) {
      clearTimeout(timerId);
    }
    lastInvokeTime = 0;
    lastArgs = lastCallTime = lastThis = timerId = undefined;
  }

  function flush() {
    return timerId === undefined ? result : trailingEdge((0,_now_js__WEBPACK_IMPORTED_MODULE_2__.default)());
  }

  function debounced() {
    var time = (0,_now_js__WEBPACK_IMPORTED_MODULE_2__.default)(),
        isInvoking = shouldInvoke(time);

    lastArgs = arguments;
    lastThis = this;
    lastCallTime = time;

    if (isInvoking) {
      if (timerId === undefined) {
        return leadingEdge(lastCallTime);
      }
      if (maxing) {
        // Handle invocations in a tight loop.
        clearTimeout(timerId);
        timerId = setTimeout(timerExpired, wait);
        return invokeFunc(lastCallTime);
      }
    }
    if (timerId === undefined) {
      timerId = setTimeout(timerExpired, wait);
    }
    return result;
  }
  debounced.cancel = cancel;
  debounced.flush = flush;
  return debounced;
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (debounce);


/***/ }),

/***/ "./node_modules/lodash-es/eq.js":
/*!**************************************!*\
  !*** ./node_modules/lodash-es/eq.js ***!
  \**************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/**
 * Performs a
 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * comparison between two values to determine if they are equivalent.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 * @example
 *
 * var object = { 'a': 1 };
 * var other = { 'a': 1 };
 *
 * _.eq(object, object);
 * // => true
 *
 * _.eq(object, other);
 * // => false
 *
 * _.eq('a', 'a');
 * // => true
 *
 * _.eq('a', Object('a'));
 * // => false
 *
 * _.eq(NaN, NaN);
 * // => true
 */
function eq(value, other) {
  return value === other || (value !== value && other !== other);
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (eq);


/***/ }),

/***/ "./node_modules/lodash-es/findLastIndex.js":
/*!*************************************************!*\
  !*** ./node_modules/lodash-es/findLastIndex.js ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _baseFindIndex_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_baseFindIndex.js */ "./node_modules/lodash-es/_baseFindIndex.js");
/* harmony import */ var _baseIteratee_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./_baseIteratee.js */ "./node_modules/lodash-es/_baseIteratee.js");
/* harmony import */ var _toInteger_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./toInteger.js */ "./node_modules/lodash-es/toInteger.js");




/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMax = Math.max,
    nativeMin = Math.min;

/**
 * This method is like `_.findIndex` except that it iterates over elements
 * of `collection` from right to left.
 *
 * @static
 * @memberOf _
 * @since 2.0.0
 * @category Array
 * @param {Array} array The array to inspect.
 * @param {Function} [predicate=_.identity] The function invoked per iteration.
 * @param {number} [fromIndex=array.length-1] The index to search from.
 * @returns {number} Returns the index of the found element, else `-1`.
 * @example
 *
 * var users = [
 *   { 'user': 'barney',  'active': true },
 *   { 'user': 'fred',    'active': false },
 *   { 'user': 'pebbles', 'active': false }
 * ];
 *
 * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });
 * // => 2
 *
 * // The `_.matches` iteratee shorthand.
 * _.findLastIndex(users, { 'user': 'barney', 'active': true });
 * // => 0
 *
 * // The `_.matchesProperty` iteratee shorthand.
 * _.findLastIndex(users, ['active', false]);
 * // => 2
 *
 * // The `_.property` iteratee shorthand.
 * _.findLastIndex(users, 'active');
 * // => 0
 */
function findLastIndex(array, predicate, fromIndex) {
  var length = array == null ? 0 : array.length;
  if (!length) {
    return -1;
  }
  var index = length - 1;
  if (fromIndex !== undefined) {
    index = (0,_toInteger_js__WEBPACK_IMPORTED_MODULE_0__.default)(fromIndex);
    index = fromIndex < 0
      ? nativeMax(length + index, 0)
      : nativeMin(index, length - 1);
  }
  return (0,_baseFindIndex_js__WEBPACK_IMPORTED_MODULE_1__.default)(array, (0,_baseIteratee_js__WEBPACK_IMPORTED_MODULE_2__.default)(predicate, 3), index, true);
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (findLastIndex);


/***/ }),

/***/ "./node_modules/lodash-es/get.js":
/*!***************************************!*\
  !*** ./node_modules/lodash-es/get.js ***!
  \***************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _baseGet_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_baseGet.js */ "./node_modules/lodash-es/_baseGet.js");


/**
 * Gets the value at `path` of `object`. If the resolved value is
 * `undefined`, the `defaultValue` is returned in its place.
 *
 * @static
 * @memberOf _
 * @since 3.7.0
 * @category Object
 * @param {Object} object The object to query.
 * @param {Array|string} path The path of the property to get.
 * @param {*} [defaultValue] The value returned for `undefined` resolved values.
 * @returns {*} Returns the resolved value.
 * @example
 *
 * var object = { 'a': [{ 'b': { 'c': 3 } }] };
 *
 * _.get(object, 'a[0].b.c');
 * // => 3
 *
 * _.get(object, ['a', '0', 'b', 'c']);
 * // => 3
 *
 * _.get(object, 'a.b.c', 'default');
 * // => 'default'
 */
function get(object, path, defaultValue) {
  var result = object == null ? undefined : (0,_baseGet_js__WEBPACK_IMPORTED_MODULE_0__.default)(object, path);
  return result === undefined ? defaultValue : result;
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (get);


/***/ }),

/***/ "./node_modules/lodash-es/hasIn.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash-es/hasIn.js ***!
  \*****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _baseHasIn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_baseHasIn.js */ "./node_modules/lodash-es/_baseHasIn.js");
/* harmony import */ var _hasPath_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_hasPath.js */ "./node_modules/lodash-es/_hasPath.js");



/**
 * Checks if `path` is a direct or inherited property of `object`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Object
 * @param {Object} object The object to query.
 * @param {Array|string} path The path to check.
 * @returns {boolean} Returns `true` if `path` exists, else `false`.
 * @example
 *
 * var object = _.create({ 'a': _.create({ 'b': 2 }) });
 *
 * _.hasIn(object, 'a');
 * // => true
 *
 * _.hasIn(object, 'a.b');
 * // => true
 *
 * _.hasIn(object, ['a', 'b']);
 * // => true
 *
 * _.hasIn(object, 'b');
 * // => false
 */
function hasIn(object, path) {
  return object != null && (0,_hasPath_js__WEBPACK_IMPORTED_MODULE_0__.default)(object, path, _baseHasIn_js__WEBPACK_IMPORTED_MODULE_1__.default);
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (hasIn);


/***/ }),

/***/ "./node_modules/lodash-es/identity.js":
/*!********************************************!*\
  !*** ./node_modules/lodash-es/identity.js ***!
  \********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/**
 * This method returns the first argument it receives.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Util
 * @param {*} value Any value.
 * @returns {*} Returns `value`.
 * @example
 *
 * var object = { 'a': 1 };
 *
 * console.log(_.identity(object) === object);
 * // => true
 */
function identity(value) {
  return value;
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (identity);


/***/ }),

/***/ "./node_modules/lodash-es/intersection.js":
/*!************************************************!*\
  !*** ./node_modules/lodash-es/intersection.js ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _arrayMap_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_arrayMap.js */ "./node_modules/lodash-es/_arrayMap.js");
/* harmony import */ var _baseIntersection_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./_baseIntersection.js */ "./node_modules/lodash-es/_baseIntersection.js");
/* harmony import */ var _baseRest_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_baseRest.js */ "./node_modules/lodash-es/_baseRest.js");
/* harmony import */ var _castArrayLikeObject_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./_castArrayLikeObject.js */ "./node_modules/lodash-es/_castArrayLikeObject.js");





/**
 * Creates an array of unique values that are included in all given arrays
 * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * for equality comparisons. The order and references of result values are
 * determined by the first array.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Array
 * @param {...Array} [arrays] The arrays to inspect.
 * @returns {Array} Returns the new array of intersecting values.
 * @example
 *
 * _.intersection([2, 1], [2, 3]);
 * // => [2]
 */
var intersection = (0,_baseRest_js__WEBPACK_IMPORTED_MODULE_0__.default)(function(arrays) {
  var mapped = (0,_arrayMap_js__WEBPACK_IMPORTED_MODULE_1__.default)(arrays, _castArrayLikeObject_js__WEBPACK_IMPORTED_MODULE_2__.default);
  return (mapped.length && mapped[0] === arrays[0])
    ? (0,_baseIntersection_js__WEBPACK_IMPORTED_MODULE_3__.default)(mapped)
    : [];
});

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (intersection);


/***/ }),

/***/ "./node_modules/lodash-es/isArguments.js":
/*!***********************************************!*\
  !*** ./node_modules/lodash-es/isArguments.js ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _baseIsArguments_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_baseIsArguments.js */ "./node_modules/lodash-es/_baseIsArguments.js");
/* harmony import */ var _isObjectLike_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./isObjectLike.js */ "./node_modules/lodash-es/isObjectLike.js");



/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/** Built-in value references. */
var propertyIsEnumerable = objectProto.propertyIsEnumerable;

/**
 * Checks if `value` is likely an `arguments` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
 *  else `false`.
 * @example
 *
 * _.isArguments(function() { return arguments; }());
 * // => true
 *
 * _.isArguments([1, 2, 3]);
 * // => false
 */
var isArguments = (0,_baseIsArguments_js__WEBPACK_IMPORTED_MODULE_0__.default)(function() { return arguments; }()) ? _baseIsArguments_js__WEBPACK_IMPORTED_MODULE_0__.default : function(value) {
  return (0,_isObjectLike_js__WEBPACK_IMPORTED_MODULE_1__.default)(value) && hasOwnProperty.call(value, 'callee') &&
    !propertyIsEnumerable.call(value, 'callee');
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (isArguments);


/***/ }),

/***/ "./node_modules/lodash-es/isArray.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash-es/isArray.js ***!
  \*******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/**
 * Checks if `value` is classified as an `Array` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an array, else `false`.
 * @example
 *
 * _.isArray([1, 2, 3]);
 * // => true
 *
 * _.isArray(document.body.children);
 * // => false
 *
 * _.isArray('abc');
 * // => false
 *
 * _.isArray(_.noop);
 * // => false
 */
var isArray = Array.isArray;

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (isArray);


/***/ }),

/***/ "./node_modules/lodash-es/isArrayLike.js":
/*!***********************************************!*\
  !*** ./node_modules/lodash-es/isArrayLike.js ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _isFunction_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./isFunction.js */ "./node_modules/lodash-es/isFunction.js");
/* harmony import */ var _isLength_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./isLength.js */ "./node_modules/lodash-es/isLength.js");



/**
 * Checks if `value` is array-like. A value is considered array-like if it's
 * not a function and has a `value.length` that's an integer greater than or
 * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
 * @example
 *
 * _.isArrayLike([1, 2, 3]);
 * // => true
 *
 * _.isArrayLike(document.body.children);
 * // => true
 *
 * _.isArrayLike('abc');
 * // => true
 *
 * _.isArrayLike(_.noop);
 * // => false
 */
function isArrayLike(value) {
  return value != null && (0,_isLength_js__WEBPACK_IMPORTED_MODULE_0__.default)(value.length) && !(0,_isFunction_js__WEBPACK_IMPORTED_MODULE_1__.default)(value);
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (isArrayLike);


/***/ }),

/***/ "./node_modules/lodash-es/isArrayLikeObject.js":
/*!*****************************************************!*\
  !*** ./node_modules/lodash-es/isArrayLikeObject.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _isArrayLike_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./isArrayLike.js */ "./node_modules/lodash-es/isArrayLike.js");
/* harmony import */ var _isObjectLike_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./isObjectLike.js */ "./node_modules/lodash-es/isObjectLike.js");



/**
 * This method is like `_.isArrayLike` except that it also checks if `value`
 * is an object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an array-like object,
 *  else `false`.
 * @example
 *
 * _.isArrayLikeObject([1, 2, 3]);
 * // => true
 *
 * _.isArrayLikeObject(document.body.children);
 * // => true
 *
 * _.isArrayLikeObject('abc');
 * // => false
 *
 * _.isArrayLikeObject(_.noop);
 * // => false
 */
function isArrayLikeObject(value) {
  return (0,_isObjectLike_js__WEBPACK_IMPORTED_MODULE_0__.default)(value) && (0,_isArrayLike_js__WEBPACK_IMPORTED_MODULE_1__.default)(value);
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (isArrayLikeObject);


/***/ }),

/***/ "./node_modules/lodash-es/isBuffer.js":
/*!********************************************!*\
  !*** ./node_modules/lodash-es/isBuffer.js ***!
  \********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _root_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_root.js */ "./node_modules/lodash-es/_root.js");
/* harmony import */ var _stubFalse_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./stubFalse.js */ "./node_modules/lodash-es/stubFalse.js");



/** Detect free variable `exports`. */
var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;

/** Detect free variable `module`. */
var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

/** Detect the popular CommonJS extension `module.exports`. */
var moduleExports = freeModule && freeModule.exports === freeExports;

/** Built-in value references. */
var Buffer = moduleExports ? _root_js__WEBPACK_IMPORTED_MODULE_0__.default.Buffer : undefined;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;

/**
 * Checks if `value` is a buffer.
 *
 * @static
 * @memberOf _
 * @since 4.3.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
 * @example
 *
 * _.isBuffer(new Buffer(2));
 * // => true
 *
 * _.isBuffer(new Uint8Array(2));
 * // => false
 */
var isBuffer = nativeIsBuffer || _stubFalse_js__WEBPACK_IMPORTED_MODULE_1__.default;

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (isBuffer);


/***/ }),

/***/ "./node_modules/lodash-es/isEqual.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash-es/isEqual.js ***!
  \*******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _baseIsEqual_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_baseIsEqual.js */ "./node_modules/lodash-es/_baseIsEqual.js");


/**
 * Performs a deep comparison between two values to determine if they are
 * equivalent.
 *
 * **Note:** This method supports comparing arrays, array buffers, booleans,
 * date objects, error objects, maps, numbers, `Object` objects, regexes,
 * sets, strings, symbols, and typed arrays. `Object` objects are compared
 * by their own, not inherited, enumerable properties. Functions and DOM
 * nodes are compared by strict equality, i.e. `===`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 * @example
 *
 * var object = { 'a': 1 };
 * var other = { 'a': 1 };
 *
 * _.isEqual(object, other);
 * // => true
 *
 * object === other;
 * // => false
 */
function isEqual(value, other) {
  return (0,_baseIsEqual_js__WEBPACK_IMPORTED_MODULE_0__.default)(value, other);
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (isEqual);


/***/ }),

/***/ "./node_modules/lodash-es/isFunction.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash-es/isFunction.js ***!
  \**********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _baseGetTag_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_baseGetTag.js */ "./node_modules/lodash-es/_baseGetTag.js");
/* harmony import */ var _isObject_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./isObject.js */ "./node_modules/lodash-es/isObject.js");



/** `Object#toString` result references. */
var asyncTag = '[object AsyncFunction]',
    funcTag = '[object Function]',
    genTag = '[object GeneratorFunction]',
    proxyTag = '[object Proxy]';

/**
 * Checks if `value` is classified as a `Function` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a function, else `false`.
 * @example
 *
 * _.isFunction(_);
 * // => true
 *
 * _.isFunction(/abc/);
 * // => false
 */
function isFunction(value) {
  if (!(0,_isObject_js__WEBPACK_IMPORTED_MODULE_0__.default)(value)) {
    return false;
  }
  // The use of `Object#toString` avoids issues with the `typeof` operator
  // in Safari 9 which returns 'object' for typed arrays and other constructors.
  var tag = (0,_baseGetTag_js__WEBPACK_IMPORTED_MODULE_1__.default)(value);
  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (isFunction);


/***/ }),

/***/ "./node_modules/lodash-es/isLength.js":
/*!********************************************!*\
  !*** ./node_modules/lodash-es/isLength.js ***!
  \********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/** Used as references for various `Number` constants. */
var MAX_SAFE_INTEGER = 9007199254740991;

/**
 * Checks if `value` is a valid array-like length.
 *
 * **Note:** This method is loosely based on
 * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
 * @example
 *
 * _.isLength(3);
 * // => true
 *
 * _.isLength(Number.MIN_VALUE);
 * // => false
 *
 * _.isLength(Infinity);
 * // => false
 *
 * _.isLength('3');
 * // => false
 */
function isLength(value) {
  return typeof value == 'number' &&
    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (isLength);


/***/ }),

/***/ "./node_modules/lodash-es/isObject.js":
/*!********************************************!*\
  !*** ./node_modules/lodash-es/isObject.js ***!
  \********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/**
 * Checks if `value` is the
 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
 * @example
 *
 * _.isObject({});
 * // => true
 *
 * _.isObject([1, 2, 3]);
 * // => true
 *
 * _.isObject(_.noop);
 * // => true
 *
 * _.isObject(null);
 * // => false
 */
function isObject(value) {
  var type = typeof value;
  return value != null && (type == 'object' || type == 'function');
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (isObject);


/***/ }),

/***/ "./node_modules/lodash-es/isObjectLike.js":
/*!************************************************!*\
  !*** ./node_modules/lodash-es/isObjectLike.js ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/**
 * Checks if `value` is object-like. A value is object-like if it's not `null`
 * and has a `typeof` result of "object".
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 * @example
 *
 * _.isObjectLike({});
 * // => true
 *
 * _.isObjectLike([1, 2, 3]);
 * // => true
 *
 * _.isObjectLike(_.noop);
 * // => false
 *
 * _.isObjectLike(null);
 * // => false
 */
function isObjectLike(value) {
  return value != null && typeof value == 'object';
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (isObjectLike);


/***/ }),

/***/ "./node_modules/lodash-es/isSymbol.js":
/*!********************************************!*\
  !*** ./node_modules/lodash-es/isSymbol.js ***!
  \********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _baseGetTag_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_baseGetTag.js */ "./node_modules/lodash-es/_baseGetTag.js");
/* harmony import */ var _isObjectLike_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./isObjectLike.js */ "./node_modules/lodash-es/isObjectLike.js");



/** `Object#toString` result references. */
var symbolTag = '[object Symbol]';

/**
 * Checks if `value` is classified as a `Symbol` primitive or object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
 * @example
 *
 * _.isSymbol(Symbol.iterator);
 * // => true
 *
 * _.isSymbol('abc');
 * // => false
 */
function isSymbol(value) {
  return typeof value == 'symbol' ||
    ((0,_isObjectLike_js__WEBPACK_IMPORTED_MODULE_0__.default)(value) && (0,_baseGetTag_js__WEBPACK_IMPORTED_MODULE_1__.default)(value) == symbolTag);
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (isSymbol);


/***/ }),

/***/ "./node_modules/lodash-es/isTypedArray.js":
/*!************************************************!*\
  !*** ./node_modules/lodash-es/isTypedArray.js ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _baseIsTypedArray_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./_baseIsTypedArray.js */ "./node_modules/lodash-es/_baseIsTypedArray.js");
/* harmony import */ var _baseUnary_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_baseUnary.js */ "./node_modules/lodash-es/_baseUnary.js");
/* harmony import */ var _nodeUtil_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_nodeUtil.js */ "./node_modules/lodash-es/_nodeUtil.js");




/* Node.js helper references. */
var nodeIsTypedArray = _nodeUtil_js__WEBPACK_IMPORTED_MODULE_0__.default && _nodeUtil_js__WEBPACK_IMPORTED_MODULE_0__.default.isTypedArray;

/**
 * Checks if `value` is classified as a typed array.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
 * @example
 *
 * _.isTypedArray(new Uint8Array);
 * // => true
 *
 * _.isTypedArray([]);
 * // => false
 */
var isTypedArray = nodeIsTypedArray ? (0,_baseUnary_js__WEBPACK_IMPORTED_MODULE_1__.default)(nodeIsTypedArray) : _baseIsTypedArray_js__WEBPACK_IMPORTED_MODULE_2__.default;

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (isTypedArray);


/***/ }),

/***/ "./node_modules/lodash-es/keys.js":
/*!****************************************!*\
  !*** ./node_modules/lodash-es/keys.js ***!
  \****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _arrayLikeKeys_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_arrayLikeKeys.js */ "./node_modules/lodash-es/_arrayLikeKeys.js");
/* harmony import */ var _baseKeys_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./_baseKeys.js */ "./node_modules/lodash-es/_baseKeys.js");
/* harmony import */ var _isArrayLike_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./isArrayLike.js */ "./node_modules/lodash-es/isArrayLike.js");




/**
 * Creates an array of the own enumerable property names of `object`.
 *
 * **Note:** Non-object values are coerced to objects. See the
 * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
 * for more details.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Object
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.keys(new Foo);
 * // => ['a', 'b'] (iteration order is not guaranteed)
 *
 * _.keys('hi');
 * // => ['0', '1']
 */
function keys(object) {
  return (0,_isArrayLike_js__WEBPACK_IMPORTED_MODULE_0__.default)(object) ? (0,_arrayLikeKeys_js__WEBPACK_IMPORTED_MODULE_1__.default)(object) : (0,_baseKeys_js__WEBPACK_IMPORTED_MODULE_2__.default)(object);
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (keys);


/***/ }),

/***/ "./node_modules/lodash-es/memoize.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash-es/memoize.js ***!
  \*******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _MapCache_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_MapCache.js */ "./node_modules/lodash-es/_MapCache.js");


/** Error message constants. */
var FUNC_ERROR_TEXT = 'Expected a function';

/**
 * Creates a function that memoizes the result of `func`. If `resolver` is
 * provided, it determines the cache key for storing the result based on the
 * arguments provided to the memoized function. By default, the first argument
 * provided to the memoized function is used as the map cache key. The `func`
 * is invoked with the `this` binding of the memoized function.
 *
 * **Note:** The cache is exposed as the `cache` property on the memoized
 * function. Its creation may be customized by replacing the `_.memoize.Cache`
 * constructor with one whose instances implement the
 * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)
 * method interface of `clear`, `delete`, `get`, `has`, and `set`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to have its output memoized.
 * @param {Function} [resolver] The function to resolve the cache key.
 * @returns {Function} Returns the new memoized function.
 * @example
 *
 * var object = { 'a': 1, 'b': 2 };
 * var other = { 'c': 3, 'd': 4 };
 *
 * var values = _.memoize(_.values);
 * values(object);
 * // => [1, 2]
 *
 * values(other);
 * // => [3, 4]
 *
 * object.a = 2;
 * values(object);
 * // => [1, 2]
 *
 * // Modify the result cache.
 * values.cache.set(object, ['a', 'b']);
 * values(object);
 * // => ['a', 'b']
 *
 * // Replace `_.memoize.Cache`.
 * _.memoize.Cache = WeakMap;
 */
function memoize(func, resolver) {
  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  var memoized = function() {
    var args = arguments,
        key = resolver ? resolver.apply(this, args) : args[0],
        cache = memoized.cache;

    if (cache.has(key)) {
      return cache.get(key);
    }
    var result = func.apply(this, args);
    memoized.cache = cache.set(key, result) || cache;
    return result;
  };
  memoized.cache = new (memoize.Cache || _MapCache_js__WEBPACK_IMPORTED_MODULE_0__.default);
  return memoized;
}

// Expose `MapCache`.
memoize.Cache = _MapCache_js__WEBPACK_IMPORTED_MODULE_0__.default;

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (memoize);


/***/ }),

/***/ "./node_modules/lodash-es/now.js":
/*!***************************************!*\
  !*** ./node_modules/lodash-es/now.js ***!
  \***************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _root_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_root.js */ "./node_modules/lodash-es/_root.js");


/**
 * Gets the timestamp of the number of milliseconds that have elapsed since
 * the Unix epoch (1 January 1970 00:00:00 UTC).
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Date
 * @returns {number} Returns the timestamp.
 * @example
 *
 * _.defer(function(stamp) {
 *   console.log(_.now() - stamp);
 * }, _.now());
 * // => Logs the number of milliseconds it took for the deferred invocation.
 */
var now = function() {
  return _root_js__WEBPACK_IMPORTED_MODULE_0__.default.Date.now();
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (now);


/***/ }),

/***/ "./node_modules/lodash-es/once.js":
/*!****************************************!*\
  !*** ./node_modules/lodash-es/once.js ***!
  \****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _before_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./before.js */ "./node_modules/lodash-es/before.js");


/**
 * Creates a function that is restricted to invoking `func` once. Repeat calls
 * to the function return the value of the first invocation. The `func` is
 * invoked with the `this` binding and arguments of the created function.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to restrict.
 * @returns {Function} Returns the new restricted function.
 * @example
 *
 * var initialize = _.once(createApplication);
 * initialize();
 * initialize();
 * // => `createApplication` is invoked once
 */
function once(func) {
  return (0,_before_js__WEBPACK_IMPORTED_MODULE_0__.default)(2, func);
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (once);


/***/ }),

/***/ "./node_modules/lodash-es/property.js":
/*!********************************************!*\
  !*** ./node_modules/lodash-es/property.js ***!
  \********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _baseProperty_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_baseProperty.js */ "./node_modules/lodash-es/_baseProperty.js");
/* harmony import */ var _basePropertyDeep_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./_basePropertyDeep.js */ "./node_modules/lodash-es/_basePropertyDeep.js");
/* harmony import */ var _isKey_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_isKey.js */ "./node_modules/lodash-es/_isKey.js");
/* harmony import */ var _toKey_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./_toKey.js */ "./node_modules/lodash-es/_toKey.js");





/**
 * Creates a function that returns the value at `path` of a given object.
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Util
 * @param {Array|string} path The path of the property to get.
 * @returns {Function} Returns the new accessor function.
 * @example
 *
 * var objects = [
 *   { 'a': { 'b': 2 } },
 *   { 'a': { 'b': 1 } }
 * ];
 *
 * _.map(objects, _.property('a.b'));
 * // => [2, 1]
 *
 * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');
 * // => [1, 2]
 */
function property(path) {
  return (0,_isKey_js__WEBPACK_IMPORTED_MODULE_0__.default)(path) ? (0,_baseProperty_js__WEBPACK_IMPORTED_MODULE_1__.default)((0,_toKey_js__WEBPACK_IMPORTED_MODULE_2__.default)(path)) : (0,_basePropertyDeep_js__WEBPACK_IMPORTED_MODULE_3__.default)(path);
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (property);


/***/ }),

/***/ "./node_modules/lodash-es/stubArray.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash-es/stubArray.js ***!
  \*********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/**
 * This method returns a new empty array.
 *
 * @static
 * @memberOf _
 * @since 4.13.0
 * @category Util
 * @returns {Array} Returns the new empty array.
 * @example
 *
 * var arrays = _.times(2, _.stubArray);
 *
 * console.log(arrays);
 * // => [[], []]
 *
 * console.log(arrays[0] === arrays[1]);
 * // => false
 */
function stubArray() {
  return [];
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (stubArray);


/***/ }),

/***/ "./node_modules/lodash-es/stubFalse.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash-es/stubFalse.js ***!
  \*********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/**
 * This method returns `false`.
 *
 * @static
 * @memberOf _
 * @since 4.13.0
 * @category Util
 * @returns {boolean} Returns `false`.
 * @example
 *
 * _.times(2, _.stubFalse);
 * // => [false, false]
 */
function stubFalse() {
  return false;
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (stubFalse);


/***/ }),

/***/ "./node_modules/lodash-es/toFinite.js":
/*!********************************************!*\
  !*** ./node_modules/lodash-es/toFinite.js ***!
  \********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _toNumber_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./toNumber.js */ "./node_modules/lodash-es/toNumber.js");


/** Used as references for various `Number` constants. */
var INFINITY = 1 / 0,
    MAX_INTEGER = 1.7976931348623157e+308;

/**
 * Converts `value` to a finite number.
 *
 * @static
 * @memberOf _
 * @since 4.12.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {number} Returns the converted number.
 * @example
 *
 * _.toFinite(3.2);
 * // => 3.2
 *
 * _.toFinite(Number.MIN_VALUE);
 * // => 5e-324
 *
 * _.toFinite(Infinity);
 * // => 1.7976931348623157e+308
 *
 * _.toFinite('3.2');
 * // => 3.2
 */
function toFinite(value) {
  if (!value) {
    return value === 0 ? value : 0;
  }
  value = (0,_toNumber_js__WEBPACK_IMPORTED_MODULE_0__.default)(value);
  if (value === INFINITY || value === -INFINITY) {
    var sign = (value < 0 ? -1 : 1);
    return sign * MAX_INTEGER;
  }
  return value === value ? value : 0;
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (toFinite);


/***/ }),

/***/ "./node_modules/lodash-es/toInteger.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash-es/toInteger.js ***!
  \*********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _toFinite_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./toFinite.js */ "./node_modules/lodash-es/toFinite.js");


/**
 * Converts `value` to an integer.
 *
 * **Note:** This method is loosely based on
 * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {number} Returns the converted integer.
 * @example
 *
 * _.toInteger(3.2);
 * // => 3
 *
 * _.toInteger(Number.MIN_VALUE);
 * // => 0
 *
 * _.toInteger(Infinity);
 * // => 1.7976931348623157e+308
 *
 * _.toInteger('3.2');
 * // => 3
 */
function toInteger(value) {
  var result = (0,_toFinite_js__WEBPACK_IMPORTED_MODULE_0__.default)(value),
      remainder = result % 1;

  return result === result ? (remainder ? result - remainder : result) : 0;
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (toInteger);


/***/ }),

/***/ "./node_modules/lodash-es/toNumber.js":
/*!********************************************!*\
  !*** ./node_modules/lodash-es/toNumber.js ***!
  \********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _baseTrim_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./_baseTrim.js */ "./node_modules/lodash-es/_baseTrim.js");
/* harmony import */ var _isObject_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./isObject.js */ "./node_modules/lodash-es/isObject.js");
/* harmony import */ var _isSymbol_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./isSymbol.js */ "./node_modules/lodash-es/isSymbol.js");




/** Used as references for various `Number` constants. */
var NAN = 0 / 0;

/** Used to detect bad signed hexadecimal string values. */
var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;

/** Used to detect binary string values. */
var reIsBinary = /^0b[01]+$/i;

/** Used to detect octal string values. */
var reIsOctal = /^0o[0-7]+$/i;

/** Built-in method references without a dependency on `root`. */
var freeParseInt = parseInt;

/**
 * Converts `value` to a number.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to process.
 * @returns {number} Returns the number.
 * @example
 *
 * _.toNumber(3.2);
 * // => 3.2
 *
 * _.toNumber(Number.MIN_VALUE);
 * // => 5e-324
 *
 * _.toNumber(Infinity);
 * // => Infinity
 *
 * _.toNumber('3.2');
 * // => 3.2
 */
function toNumber(value) {
  if (typeof value == 'number') {
    return value;
  }
  if ((0,_isSymbol_js__WEBPACK_IMPORTED_MODULE_0__.default)(value)) {
    return NAN;
  }
  if ((0,_isObject_js__WEBPACK_IMPORTED_MODULE_1__.default)(value)) {
    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
    value = (0,_isObject_js__WEBPACK_IMPORTED_MODULE_1__.default)(other) ? (other + '') : other;
  }
  if (typeof value != 'string') {
    return value === 0 ? value : +value;
  }
  value = (0,_baseTrim_js__WEBPACK_IMPORTED_MODULE_2__.default)(value);
  var isBinary = reIsBinary.test(value);
  return (isBinary || reIsOctal.test(value))
    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
    : (reIsBadHex.test(value) ? NAN : +value);
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (toNumber);


/***/ }),

/***/ "./node_modules/lodash-es/toString.js":
/*!********************************************!*\
  !*** ./node_modules/lodash-es/toString.js ***!
  \********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _baseToString_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_baseToString.js */ "./node_modules/lodash-es/_baseToString.js");


/**
 * Converts `value` to a string. An empty string is returned for `null`
 * and `undefined` values. The sign of `-0` is preserved.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {string} Returns the converted string.
 * @example
 *
 * _.toString(null);
 * // => ''
 *
 * _.toString(-0);
 * // => '-0'
 *
 * _.toString([1, 2, 3]);
 * // => '1,2,3'
 */
function toString(value) {
  return value == null ? '' : (0,_baseToString_js__WEBPACK_IMPORTED_MODULE_0__.default)(value);
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (toString);


/***/ }),

/***/ "./node_modules/browserify-aes/modes/list.json":
/*!*****************************************************!*\
  !*** ./node_modules/browserify-aes/modes/list.json ***!
  \*****************************************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"aes-128-ecb":{"cipher":"AES","key":128,"iv":0,"mode":"ECB","type":"block"},"aes-192-ecb":{"cipher":"AES","key":192,"iv":0,"mode":"ECB","type":"block"},"aes-256-ecb":{"cipher":"AES","key":256,"iv":0,"mode":"ECB","type":"block"},"aes-128-cbc":{"cipher":"AES","key":128,"iv":16,"mode":"CBC","type":"block"},"aes-192-cbc":{"cipher":"AES","key":192,"iv":16,"mode":"CBC","type":"block"},"aes-256-cbc":{"cipher":"AES","key":256,"iv":16,"mode":"CBC","type":"block"},"aes128":{"cipher":"AES","key":128,"iv":16,"mode":"CBC","type":"block"},"aes192":{"cipher":"AES","key":192,"iv":16,"mode":"CBC","type":"block"},"aes256":{"cipher":"AES","key":256,"iv":16,"mode":"CBC","type":"block"},"aes-128-cfb":{"cipher":"AES","key":128,"iv":16,"mode":"CFB","type":"stream"},"aes-192-cfb":{"cipher":"AES","key":192,"iv":16,"mode":"CFB","type":"stream"},"aes-256-cfb":{"cipher":"AES","key":256,"iv":16,"mode":"CFB","type":"stream"},"aes-128-cfb8":{"cipher":"AES","key":128,"iv":16,"mode":"CFB8","type":"stream"},"aes-192-cfb8":{"cipher":"AES","key":192,"iv":16,"mode":"CFB8","type":"stream"},"aes-256-cfb8":{"cipher":"AES","key":256,"iv":16,"mode":"CFB8","type":"stream"},"aes-128-cfb1":{"cipher":"AES","key":128,"iv":16,"mode":"CFB1","type":"stream"},"aes-192-cfb1":{"cipher":"AES","key":192,"iv":16,"mode":"CFB1","type":"stream"},"aes-256-cfb1":{"cipher":"AES","key":256,"iv":16,"mode":"CFB1","type":"stream"},"aes-128-ofb":{"cipher":"AES","key":128,"iv":16,"mode":"OFB","type":"stream"},"aes-192-ofb":{"cipher":"AES","key":192,"iv":16,"mode":"OFB","type":"stream"},"aes-256-ofb":{"cipher":"AES","key":256,"iv":16,"mode":"OFB","type":"stream"},"aes-128-ctr":{"cipher":"AES","key":128,"iv":16,"mode":"CTR","type":"stream"},"aes-192-ctr":{"cipher":"AES","key":192,"iv":16,"mode":"CTR","type":"stream"},"aes-256-ctr":{"cipher":"AES","key":256,"iv":16,"mode":"CTR","type":"stream"},"aes-128-gcm":{"cipher":"AES","key":128,"iv":12,"mode":"GCM","type":"auth"},"aes-192-gcm":{"cipher":"AES","key":192,"iv":12,"mode":"GCM","type":"auth"},"aes-256-gcm":{"cipher":"AES","key":256,"iv":12,"mode":"GCM","type":"auth"}}');

/***/ }),

/***/ "./node_modules/browserify-sign/browser/algorithms.json":
/*!**************************************************************!*\
  !*** ./node_modules/browserify-sign/browser/algorithms.json ***!
  \**************************************************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"sha224WithRSAEncryption":{"sign":"rsa","hash":"sha224","id":"302d300d06096086480165030402040500041c"},"RSA-SHA224":{"sign":"ecdsa/rsa","hash":"sha224","id":"302d300d06096086480165030402040500041c"},"sha256WithRSAEncryption":{"sign":"rsa","hash":"sha256","id":"3031300d060960864801650304020105000420"},"RSA-SHA256":{"sign":"ecdsa/rsa","hash":"sha256","id":"3031300d060960864801650304020105000420"},"sha384WithRSAEncryption":{"sign":"rsa","hash":"sha384","id":"3041300d060960864801650304020205000430"},"RSA-SHA384":{"sign":"ecdsa/rsa","hash":"sha384","id":"3041300d060960864801650304020205000430"},"sha512WithRSAEncryption":{"sign":"rsa","hash":"sha512","id":"3051300d060960864801650304020305000440"},"RSA-SHA512":{"sign":"ecdsa/rsa","hash":"sha512","id":"3051300d060960864801650304020305000440"},"RSA-SHA1":{"sign":"rsa","hash":"sha1","id":"3021300906052b0e03021a05000414"},"ecdsa-with-SHA1":{"sign":"ecdsa","hash":"sha1","id":""},"sha256":{"sign":"ecdsa","hash":"sha256","id":""},"sha224":{"sign":"ecdsa","hash":"sha224","id":""},"sha384":{"sign":"ecdsa","hash":"sha384","id":""},"sha512":{"sign":"ecdsa","hash":"sha512","id":""},"DSA-SHA":{"sign":"dsa","hash":"sha1","id":""},"DSA-SHA1":{"sign":"dsa","hash":"sha1","id":""},"DSA":{"sign":"dsa","hash":"sha1","id":""},"DSA-WITH-SHA224":{"sign":"dsa","hash":"sha224","id":""},"DSA-SHA224":{"sign":"dsa","hash":"sha224","id":""},"DSA-WITH-SHA256":{"sign":"dsa","hash":"sha256","id":""},"DSA-SHA256":{"sign":"dsa","hash":"sha256","id":""},"DSA-WITH-SHA384":{"sign":"dsa","hash":"sha384","id":""},"DSA-SHA384":{"sign":"dsa","hash":"sha384","id":""},"DSA-WITH-SHA512":{"sign":"dsa","hash":"sha512","id":""},"DSA-SHA512":{"sign":"dsa","hash":"sha512","id":""},"DSA-RIPEMD160":{"sign":"dsa","hash":"rmd160","id":""},"ripemd160WithRSA":{"sign":"rsa","hash":"rmd160","id":"3021300906052b2403020105000414"},"RSA-RIPEMD160":{"sign":"rsa","hash":"rmd160","id":"3021300906052b2403020105000414"},"md5WithRSAEncryption":{"sign":"rsa","hash":"md5","id":"3020300c06082a864886f70d020505000410"},"RSA-MD5":{"sign":"rsa","hash":"md5","id":"3020300c06082a864886f70d020505000410"}}');

/***/ }),

/***/ "./node_modules/browserify-sign/browser/curves.json":
/*!**********************************************************!*\
  !*** ./node_modules/browserify-sign/browser/curves.json ***!
  \**********************************************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"1.3.132.0.10":"secp256k1","1.3.132.0.33":"p224","1.2.840.10045.3.1.1":"p192","1.2.840.10045.3.1.7":"p256","1.3.132.0.34":"p384","1.3.132.0.35":"p521"}');

/***/ }),

/***/ "./node_modules/diffie-hellman/lib/primes.json":
/*!*****************************************************!*\
  !*** ./node_modules/diffie-hellman/lib/primes.json ***!
  \*****************************************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"modp1":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a63a3620ffffffffffffffff"},"modp2":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece65381ffffffffffffffff"},"modp5":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca237327ffffffffffffffff"},"modp14":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aacaa68ffffffffffffffff"},"modp15":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a93ad2caffffffffffffffff"},"modp16":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c934063199ffffffffffffffff"},"modp17":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dcc4024ffffffffffffffff"},"modp18":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dbe115974a3926f12fee5e438777cb6a932df8cd8bec4d073b931ba3bc832b68d9dd300741fa7bf8afc47ed2576f6936ba424663aab639c5ae4f5683423b4742bf1c978238f16cbe39d652de3fdb8befc848ad922222e04a4037c0713eb57a81a23f0c73473fc646cea306b4bcbc8862f8385ddfa9d4b7fa2c087e879683303ed5bdd3a062b3cf5b3a278a66d2a13f83f44f82ddf310ee074ab6a364597e899a0255dc164f31cc50846851df9ab48195ded7ea1b1d510bd7ee74d73faf36bc31ecfa268359046f4eb879f924009438b481c6cd7889a002ed5ee382bc9190da6fc026e479558e4475677e9aa9e3050e2765694dfc81f56e880b96e7160c980dd98edd3dfffffffffffffffff"}}');

/***/ }),

/***/ "./node_modules/elliptic/package.json":
/*!********************************************!*\
  !*** ./node_modules/elliptic/package.json ***!
  \********************************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"name":"elliptic","version":"6.5.4","description":"EC cryptography","main":"lib/elliptic.js","files":["lib"],"scripts":{"lint":"eslint lib test","lint:fix":"npm run lint -- --fix","unit":"istanbul test _mocha --reporter=spec test/index.js","test":"npm run lint && npm run unit","version":"grunt dist && git add dist/"},"repository":{"type":"git","url":"git@github.com:indutny/elliptic"},"keywords":["EC","Elliptic","curve","Cryptography"],"author":"Fedor Indutny <fedor@indutny.com>","license":"MIT","bugs":{"url":"https://github.com/indutny/elliptic/issues"},"homepage":"https://github.com/indutny/elliptic","devDependencies":{"brfs":"^2.0.2","coveralls":"^3.1.0","eslint":"^7.6.0","grunt":"^1.2.1","grunt-browserify":"^5.3.0","grunt-cli":"^1.3.2","grunt-contrib-connect":"^3.0.0","grunt-contrib-copy":"^1.0.0","grunt-contrib-uglify":"^5.0.0","grunt-mocha-istanbul":"^5.0.2","grunt-saucelabs":"^9.0.1","istanbul":"^0.4.5","mocha":"^8.0.1"},"dependencies":{"bn.js":"^4.11.9","brorand":"^1.1.0","hash.js":"^1.0.0","hmac-drbg":"^1.0.1","inherits":"^2.0.4","minimalistic-assert":"^1.0.1","minimalistic-crypto-utils":"^1.0.1"}}');

/***/ }),

/***/ "./node_modules/iconv-lite/encodings/tables/big5-added.json":
/*!******************************************************************!*\
  !*** ./node_modules/iconv-lite/encodings/tables/big5-added.json ***!
  \******************************************************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('[["8740","䏰䰲䘃䖦䕸𧉧䵷䖳𧲱䳢𧳅㮕䜶䝄䱇䱀𤊿𣘗𧍒𦺋𧃒䱗𪍑䝏䗚䲅𧱬䴇䪤䚡𦬣爥𥩔𡩣𣸆𣽡晍囻"],["8767","綕夝𨮹㷴霴𧯯寛𡵞媤㘥𩺰嫑宷峼杮薓𩥅瑡璝㡵𡵓𣚞𦀡㻬"],["87a1","𥣞㫵竼龗𤅡𨤍𣇪𠪊𣉞䌊蒄龖鐯䤰蘓墖靊鈘秐稲晠権袝瑌篅枂稬剏遆㓦珄𥶹瓆鿇垳䤯呌䄱𣚎堘穲𧭥讏䚮𦺈䆁𥶙箮𢒼鿈𢓁𢓉𢓌鿉蔄𣖻䂴鿊䓡𪷿拁灮鿋"],["8840","㇀",4,"𠄌㇅𠃑𠃍㇆㇇𠃋𡿨㇈𠃊㇉㇊㇋㇌𠄎㇍㇎ĀÁǍÀĒÉĚÈŌÓǑÒ࿿Ê̄Ế࿿Ê̌ỀÊāáǎàɑēéěèīíǐìōóǒòūúǔùǖǘǚ"],["88a1","ǜü࿿ê̄ế࿿ê̌ềêɡ⏚⏛"],["8940","𪎩𡅅"],["8943","攊"],["8946","丽滝鵎釟"],["894c","𧜵撑会伨侨兖兴农凤务动医华发变团声处备夲头学实実岚庆总斉柾栄桥济炼电纤纬纺织经统缆缷艺苏药视设询车轧轮"],["89a1","琑糼緍楆竉刧"],["89ab","醌碸酞肼"],["89b0","贋胶𠧧"],["89b5","肟黇䳍鷉鸌䰾𩷶𧀎鸊𪄳㗁"],["89c1","溚舾甙"],["89c5","䤑马骏龙禇𨑬𡷊𠗐𢫦两亁亀亇亿仫伷㑌侽㹈倃傈㑽㒓㒥円夅凛凼刅争剹劐匧㗇厩㕑厰㕓参吣㕭㕲㚁咓咣咴咹哐哯唘唣唨㖘唿㖥㖿嗗㗅"],["8a40","𧶄唥"],["8a43","𠱂𠴕𥄫喐𢳆㧬𠍁蹆𤶸𩓥䁓𨂾睺𢰸㨴䟕𨅝𦧲𤷪擝𠵼𠾴𠳕𡃴撍蹾𠺖𠰋𠽤𢲩𨉖𤓓"],["8a64","𠵆𩩍𨃩䟴𤺧𢳂骲㩧𩗴㿭㔆𥋇𩟔𧣈𢵄鵮頕"],["8a76","䏙𦂥撴哣𢵌𢯊𡁷㧻𡁯"],["8aa1","𦛚𦜖𧦠擪𥁒𠱃蹨𢆡𨭌𠜱"],["8aac","䠋𠆩㿺塳𢶍"],["8ab2","𤗈𠓼𦂗𠽌𠶖啹䂻䎺"],["8abb","䪴𢩦𡂝膪飵𠶜捹㧾𢝵跀嚡摼㹃"],["8ac9","𪘁𠸉𢫏𢳉"],["8ace","𡃈𣧂㦒㨆𨊛㕸𥹉𢃇噒𠼱𢲲𩜠㒼氽𤸻"],["8adf","𧕴𢺋𢈈𪙛𨳍𠹺𠰴𦠜羓𡃏𢠃𢤹㗻𥇣𠺌𠾍𠺪㾓𠼰𠵇𡅏𠹌"],["8af6","𠺫𠮩𠵈𡃀𡄽㿹𢚖搲𠾭"],["8b40","𣏴𧘹𢯎𠵾𠵿𢱑𢱕㨘𠺘𡃇𠼮𪘲𦭐𨳒𨶙𨳊閪哌苄喹"],["8b55","𩻃鰦骶𧝞𢷮煀腭胬尜𦕲脴㞗卟𨂽醶𠻺𠸏𠹷𠻻㗝𤷫㘉𠳖嚯𢞵𡃉𠸐𠹸𡁸𡅈𨈇𡑕𠹹𤹐𢶤婔𡀝𡀞𡃵𡃶垜𠸑"],["8ba1","𧚔𨋍𠾵𠹻𥅾㜃𠾶𡆀𥋘𪊽𤧚𡠺𤅷𨉼墙剨㘚𥜽箲孨䠀䬬鼧䧧鰟鮍𥭴𣄽嗻㗲嚉丨夂𡯁屮靑𠂆乛亻㔾尣彑忄㣺扌攵歺氵氺灬爫丬犭𤣩罒礻糹罓𦉪㓁"],["8bde","𦍋耂肀𦘒𦥑卝衤见𧢲讠贝钅镸长门𨸏韦页风飞饣𩠐鱼鸟黄歯龜丷𠂇阝户钢"],["8c40","倻淾𩱳龦㷉袏𤅎灷峵䬠𥇍㕙𥴰愢𨨲辧釶熑朙玺𣊁𪄇㲋𡦀䬐磤琂冮𨜏䀉橣𪊺䈣蘏𠩯稪𩥇𨫪靕灍匤𢁾鏴盙𨧣龧矝亣俰傼丯众龨吴綋墒壐𡶶庒庙忂𢜒斋"],["8ca1","𣏹椙橃𣱣泿"],["8ca7","爀𤔅玌㻛𤨓嬕璹讃𥲤𥚕窓篬糃繬苸薗龩袐龪躹龫迏蕟駠鈡龬𨶹𡐿䁱䊢娚"],["8cc9","顨杫䉶圽"],["8cce","藖𤥻芿𧄍䲁𦵴嵻𦬕𦾾龭龮宖龯曧繛湗秊㶈䓃𣉖𢞖䎚䔶"],["8ce6","峕𣬚諹屸㴒𣕑嵸龲煗䕘𤃬𡸣䱷㥸㑊𠆤𦱁諌侴𠈹妿腬顖𩣺弻"],["8d40","𠮟"],["8d42","𢇁𨥭䄂䚻𩁹㼇龳𪆵䃸㟖䛷𦱆䅼𨚲𧏿䕭㣔𥒚䕡䔛䶉䱻䵶䗪㿈𤬏㙡䓞䒽䇭崾嵈嵖㷼㠏嶤嶹㠠㠸幂庽弥徃㤈㤔㤿㥍惗愽峥㦉憷憹懏㦸戬抐拥挘㧸嚱"],["8da1","㨃揢揻搇摚㩋擀崕嘡龟㪗斆㪽旿晓㫲暒㬢朖㭂枤栀㭘桊梄㭲㭱㭻椉楃牜楤榟榅㮼槖㯝橥橴橱檂㯬檙㯲檫檵櫔櫶殁毁毪汵沪㳋洂洆洦涁㳯涤涱渕渘温溆𨧀溻滢滚齿滨滩漤漴㵆𣽁澁澾㵪㵵熷岙㶊瀬㶑灐灔灯灿炉𠌥䏁㗱𠻘"],["8e40","𣻗垾𦻓焾𥟠㙎榢𨯩孴穉𥣡𩓙穥穽𥦬窻窰竂竃燑𦒍䇊竚竝竪䇯咲𥰁笋筕笩𥌎𥳾箢筯莜𥮴𦱿篐萡箒箸𥴠㶭𥱥蒒篺簆簵𥳁籄粃𤢂粦晽𤕸糉糇糦籴糳糵糎"],["8ea1","繧䔝𦹄絝𦻖璍綉綫焵綳緒𤁗𦀩緤㴓緵𡟹緥𨍭縝𦄡𦅚繮纒䌫鑬縧罀罁罇礶𦋐駡羗𦍑羣𡙡𠁨䕜𣝦䔃𨌺翺𦒉者耈耝耨耯𪂇𦳃耻耼聡𢜔䦉𦘦𣷣𦛨朥肧𨩈脇脚墰𢛶汿𦒘𤾸擧𡒊舘𡡞橓𤩥𤪕䑺舩𠬍𦩒𣵾俹𡓽蓢荢𦬊𤦧𣔰𡝳𣷸芪椛芳䇛"],["8f40","蕋苐茚𠸖𡞴㛁𣅽𣕚艻苢茘𣺋𦶣𦬅𦮗𣗎㶿茝嗬莅䔋𦶥莬菁菓㑾𦻔橗蕚㒖𦹂𢻯葘𥯤葱㷓䓤檧葊𣲵祘蒨𦮖𦹷𦹃蓞萏莑䒠蒓蓤𥲑䉀𥳀䕃蔴嫲𦺙䔧蕳䔖枿蘖"],["8fa1","𨘥𨘻藁𧂈蘂𡖂𧃍䕫䕪蘨㙈𡢢号𧎚虾蝱𪃸蟮𢰧螱蟚蠏噡虬桖䘏衅衆𧗠𣶹𧗤衞袜䙛袴袵揁装睷𧜏覇覊覦覩覧覼𨨥觧𧤤𧪽誜瞓釾誐𧩙竩𧬺𣾏䜓𧬸煼謌謟𥐰𥕥謿譌譍誩𤩺讐讛誯𡛟䘕衏貛𧵔𧶏貫㜥𧵓賖𧶘𧶽贒贃𡤐賛灜贑𤳉㻐起"],["9040","趩𨀂𡀔𤦊㭼𨆼𧄌竧躭躶軃鋔輙輭𨍥𨐒辥錃𪊟𠩐辳䤪𨧞𨔽𣶻廸𣉢迹𪀔𨚼𨔁𢌥㦀𦻗逷𨔼𧪾遡𨕬𨘋邨𨜓郄𨛦邮都酧㫰醩釄粬𨤳𡺉鈎沟鉁鉢𥖹銹𨫆𣲛𨬌𥗛"],["90a1","𠴱錬鍫𨫡𨯫炏嫃𨫢𨫥䥥鉄𨯬𨰹𨯿鍳鑛躼閅閦鐦閠濶䊹𢙺𨛘𡉼𣸮䧟氜陻隖䅬隣𦻕懚隶磵𨫠隽双䦡𦲸𠉴𦐐𩂯𩃥𤫑𡤕𣌊霱虂霶䨏䔽䖅𤫩灵孁霛靜𩇕靗孊𩇫靟鐥僐𣂷𣂼鞉鞟鞱鞾韀韒韠𥑬韮琜𩐳響韵𩐝𧥺䫑頴頳顋顦㬎𧅵㵑𠘰𤅜"],["9140","𥜆飊颷飈飇䫿𦴧𡛓喰飡飦飬鍸餹𤨩䭲𩡗𩤅駵騌騻騐驘𥜥㛄𩂱𩯕髠髢𩬅髴䰎鬔鬭𨘀倴鬴𦦨㣃𣁽魐魀𩴾婅𡡣鮎𤉋鰂鯿鰌𩹨鷔𩾷𪆒𪆫𪃡𪄣𪇟鵾鶃𪄴鸎梈"],["91a1","鷄𢅛𪆓𪈠𡤻𪈳鴹𪂹𪊴麐麕麞麢䴴麪麯𤍤黁㭠㧥㴝伲㞾𨰫鼂鼈䮖鐤𦶢鼗鼖鼹嚟嚊齅馸𩂋韲葿齢齩竜龎爖䮾𤥵𤦻煷𤧸𤍈𤩑玞𨯚𡣺禟𨥾𨸶鍩鏳𨩄鋬鎁鏋𨥬𤒹爗㻫睲穃烐𤑳𤏸煾𡟯炣𡢾𣖙㻇𡢅𥐯𡟸㜢𡛻𡠹㛡𡝴𡣑𥽋㜣𡛀坛𤨥𡏾𡊨"],["9240","𡏆𡒶蔃𣚦蔃葕𤦔𧅥𣸱𥕜𣻻𧁒䓴𣛮𩦝𦼦柹㜳㰕㷧塬𡤢栐䁗𣜿𤃡𤂋𤄏𦰡哋嚞𦚱嚒𠿟𠮨𠸍鏆𨬓鎜仸儫㠙𤐶亼𠑥𠍿佋侊𥙑婨𠆫𠏋㦙𠌊𠐔㐵伩𠋀𨺳𠉵諚𠈌亘"],["92a1","働儍侢伃𤨎𣺊佂倮偬傁俌俥偘僼兙兛兝兞湶𣖕𣸹𣺿浲𡢄𣺉冨凃𠗠䓝𠒣𠒒𠒑赺𨪜𠜎剙劤𠡳勡鍮䙺熌𤎌𠰠𤦬𡃤槑𠸝瑹㻞璙琔瑖玘䮎𤪼𤂍叐㖄爏𤃉喴𠍅响𠯆圝鉝雴鍦埝垍坿㘾壋媙𨩆𡛺𡝯𡜐娬妸銏婾嫏娒𥥆𡧳𡡡𤊕㛵洅瑃娡𥺃"],["9340","媁𨯗𠐓鏠璌𡌃焅䥲鐈𨧻鎽㞠尞岞幞幈𡦖𡥼𣫮廍孏𡤃𡤄㜁𡢠㛝𡛾㛓脪𨩇𡶺𣑲𨦨弌弎𡤧𡞫婫𡜻孄蘔𧗽衠恾𢡠𢘫忛㺸𢖯𢖾𩂈𦽳懀𠀾𠁆𢘛憙憘恵𢲛𢴇𤛔𩅍"],["93a1","摱𤙥𢭪㨩𢬢𣑐𩣪𢹸挷𪑛撶挱揑𤧣𢵧护𢲡搻敫楲㯴𣂎𣊭𤦉𣊫唍𣋠𡣙𩐿曎𣊉𣆳㫠䆐𥖄𨬢𥖏𡛼𥕛𥐥磮𣄃𡠪𣈴㑤𣈏𣆂𤋉暎𦴤晫䮓昰𧡰𡷫晣𣋒𣋡昞𥡲㣑𣠺𣞼㮙𣞢𣏾瓐㮖枏𤘪梶栞㯄檾㡣𣟕𤒇樳橒櫉欅𡤒攑梘橌㯗橺歗𣿀𣲚鎠鋲𨯪𨫋"],["9440","銉𨀞𨧜鑧涥漋𤧬浧𣽿㶏渄𤀼娽渊塇洤硂焻𤌚𤉶烱牐犇犔𤞏𤜥兹𤪤𠗫瑺𣻸𣙟𤩊𤤗𥿡㼆㺱𤫟𨰣𣼵悧㻳瓌琼鎇琷䒟𦷪䕑疃㽣𤳙𤴆㽘畕癳𪗆㬙瑨𨫌𤦫𤦎㫻"],["94a1","㷍𤩎㻿𤧅𤣳釺圲鍂𨫣𡡤僟𥈡𥇧睸𣈲眎眏睻𤚗𣞁㩞𤣰琸璛㺿𤪺𤫇䃈𤪖𦆮錇𥖁砞碍碈磒珐祙𧝁𥛣䄎禛蒖禥樭𣻺稺秴䅮𡛦䄲鈵秱𠵌𤦌𠊙𣶺𡝮㖗啫㕰㚪𠇔𠰍竢婙𢛵𥪯𥪜娍𠉛磰娪𥯆竾䇹籝籭䈑𥮳𥺼𥺦糍𤧹𡞰粎籼粮檲緜縇緓罎𦉡"],["9540","𦅜𧭈綗𥺂䉪𦭵𠤖柖𠁎𣗏埄𦐒𦏸𤥢翝笧𠠬𥫩𥵃笌𥸎駦虅驣樜𣐿㧢𤧷𦖭騟𦖠蒀𧄧𦳑䓪脷䐂胆脉腂𦞴飃𦩂艢艥𦩑葓𦶧蘐𧈛媆䅿𡡀嬫𡢡嫤𡣘蚠蜨𣶏蠭𧐢娂"],["95a1","衮佅袇袿裦襥襍𥚃襔𧞅𧞄𨯵𨯙𨮜𨧹㺭蒣䛵䛏㟲訽訜𩑈彍鈫𤊄旔焩烄𡡅鵭貟賩𧷜妚矃姰䍮㛔踪躧𤰉輰轊䋴汘澻𢌡䢛潹溋𡟚鯩㚵𤤯邻邗啱䤆醻鐄𨩋䁢𨫼鐧𨰝𨰻蓥訫閙閧閗閖𨴴瑅㻂𤣿𤩂𤏪㻧𣈥随𨻧𨹦𨹥㻌𤧭𤩸𣿮琒瑫㻼靁𩂰"],["9640","桇䨝𩂓𥟟靝鍨𨦉𨰦𨬯𦎾銺嬑譩䤼珹𤈛鞛靱餸𠼦巁𨯅𤪲頟𩓚鋶𩗗釥䓀𨭐𤩧𨭤飜𨩅㼀鈪䤥萔餻饍𧬆㷽馛䭯馪驜𨭥𥣈檏騡嫾騯𩣱䮐𩥈馼䮽䮗鍽塲𡌂堢𤦸"],["96a1","𡓨硄𢜟𣶸棅㵽鑘㤧慐𢞁𢥫愇鱏鱓鱻鰵鰐魿鯏𩸭鮟𪇵𪃾鴡䲮𤄄鸘䲰鴌𪆴𪃭𪃳𩤯鶥蒽𦸒𦿟𦮂藼䔳𦶤𦺄𦷰萠藮𦸀𣟗𦁤秢𣖜𣙀䤭𤧞㵢鏛銾鍈𠊿碹鉷鑍俤㑀遤𥕝砽硔碶硋𡝗𣇉𤥁㚚佲濚濙瀞瀞吔𤆵垻壳垊鴖埗焴㒯𤆬燫𦱀𤾗嬨𡞵𨩉"],["9740","愌嫎娋䊼𤒈㜬䭻𨧼鎻鎸𡣖𠼝葲𦳀𡐓𤋺𢰦𤏁妔𣶷𦝁綨𦅛𦂤𤦹𤦋𨧺鋥珢㻩璴𨭣𡢟㻡𤪳櫘珳珻㻖𤨾𤪔𡟙𤩦𠎧𡐤𤧥瑈𤤖炥𤥶銄珦鍟𠓾錱𨫎𨨖鎆𨯧𥗕䤵𨪂煫"],["97a1","𤥃𠳿嚤𠘚𠯫𠲸唂秄𡟺緾𡛂𤩐𡡒䔮鐁㜊𨫀𤦭妰𡢿𡢃𧒄媡㛢𣵛㚰鉟婹𨪁𡡢鍴㳍𠪴䪖㦊僴㵩㵌𡎜煵䋻𨈘渏𩃤䓫浗𧹏灧沯㳖𣿭𣸭渂漌㵯𠏵畑㚼㓈䚀㻚䡱姄鉮䤾轁𨰜𦯀堒埈㛖𡑒烾𤍢𤩱𢿣𡊰𢎽梹楧𡎘𣓥𧯴𣛟𨪃𣟖𣏺𤲟樚𣚭𦲷萾䓟䓎"],["9840","𦴦𦵑𦲂𦿞漗𧄉茽𡜺菭𦲀𧁓𡟛妉媂𡞳婡婱𡤅𤇼㜭姯𡜼㛇熎鎐暚𤊥婮娫𤊓樫𣻹𧜶𤑛𤋊焝𤉙𨧡侰𦴨峂𤓎𧹍𤎽樌𤉖𡌄炦焳𤏩㶥泟勇𤩏繥姫崯㷳彜𤩝𡟟綤萦"],["98a1","咅𣫺𣌀𠈔坾𠣕𠘙㿥𡾞𪊶瀃𩅛嵰玏糓𨩙𩐠俈翧狍猐𧫴猸猹𥛶獁獈㺩𧬘遬燵𤣲珡臶㻊県㻑沢国琙琞琟㻢㻰㻴㻺瓓㼎㽓畂畭畲疍㽼痈痜㿀癍㿗癴㿜発𤽜熈嘣覀塩䀝睃䀹条䁅㗛瞘䁪䁯属瞾矋売砘点砜䂨砹硇硑硦葈𥔵礳栃礲䄃"],["9940","䄉禑禙辻稆込䅧窑䆲窼艹䇄竏竛䇏両筢筬筻簒簛䉠䉺类粜䊌粸䊔糭输烀𠳏総緔緐緽羮羴犟䎗耠耥笹耮耱联㷌垴炠肷胩䏭脌猪脎脒畠脔䐁㬹腖腙腚"],["99a1","䐓堺腼膄䐥膓䐭膥埯臁臤艔䒏芦艶苊苘苿䒰荗险榊萅烵葤惣蒈䔄蒾蓡蓸蔐蔸蕒䔻蕯蕰藠䕷虲蚒蚲蛯际螋䘆䘗袮裿褤襇覑𧥧訩訸誔誴豑賔賲贜䞘塟跃䟭仮踺嗘坔蹱嗵躰䠷軎転軤軭軲辷迁迊迌逳駄䢭飠鈓䤞鈨鉘鉫銱銮銿"],["9a40","鋣鋫鋳鋴鋽鍃鎄鎭䥅䥑麿鐗匁鐝鐭鐾䥪鑔鑹锭関䦧间阳䧥枠䨤靀䨵鞲韂噔䫤惨颹䬙飱塄餎餙冴餜餷饂饝饢䭰駅䮝騼鬏窃魩鮁鯝鯱鯴䱭鰠㝯𡯂鵉鰺"],["9aa1","黾噐鶓鶽鷀鷼银辶鹻麬麱麽黆铜黢黱黸竈齄𠂔𠊷𠎠椚铃妬𠓗塀铁㞹𠗕𠘕𠙶𡚺块煳𠫂𠫍𠮿呪吆𠯋咞𠯻𠰻𠱓𠱥𠱼惧𠲍噺𠲵𠳝𠳭𠵯𠶲𠷈楕鰯螥𠸄𠸎𠻗𠾐𠼭𠹳尠𠾼帋𡁜𡁏𡁶朞𡁻𡂈𡂖㙇𡂿𡃓𡄯𡄻卤蒭𡋣𡍵𡌶讁𡕷𡘙𡟃𡟇乸炻𡠭𡥪"],["9b40","𡨭𡩅𡰪𡱰𡲬𡻈拃𡻕𡼕熘桕𢁅槩㛈𢉼𢏗𢏺𢜪𢡱𢥏苽𢥧𢦓𢫕覥𢫨辠𢬎鞸𢬿顇骽𢱌"],["9b62","𢲈𢲷𥯨𢴈𢴒𢶷𢶕𢹂𢽴𢿌𣀳𣁦𣌟𣏞徱晈暿𧩹𣕧𣗳爁𤦺矗𣘚𣜖纇𠍆墵朎"],["9ba1","椘𣪧𧙗𥿢𣸑𣺹𧗾𢂚䣐䪸𤄙𨪚𤋮𤌍𤀻𤌴𤎖𤩅𠗊凒𠘑妟𡺨㮾𣳿𤐄𤓖垈𤙴㦛𤜯𨗨𩧉㝢𢇃譞𨭎駖𤠒𤣻𤨕爉𤫀𠱸奥𤺥𤾆𠝹軚𥀬劏圿煱𥊙𥐙𣽊𤪧喼𥑆𥑮𦭒釔㑳𥔿𧘲𥕞䜘𥕢𥕦𥟇𤤿𥡝偦㓻𣏌惞𥤃䝼𨥈𥪮𥮉𥰆𡶐垡煑澶𦄂𧰒遖𦆲𤾚譢𦐂𦑊"],["9c40","嵛𦯷輶𦒄𡤜諪𤧶𦒈𣿯𦔒䯀𦖿𦚵𢜛鑥𥟡憕娧晉侻嚹𤔡𦛼乪𤤴陖涏𦲽㘘襷𦞙𦡮𦐑𦡞營𦣇筂𩃀𠨑𦤦鄄𦤹穅鷰𦧺騦𦨭㙟𦑩𠀡禃𦨴𦭛崬𣔙菏𦮝䛐𦲤画补𦶮墶"],["9ca1","㜜𢖍𧁋𧇍㱔𧊀𧊅銁𢅺𧊋錰𧋦𤧐氹钟𧑐𠻸蠧裵𢤦𨑳𡞱溸𤨪𡠠㦤㚹尐秣䔿暶𩲭𩢤襃𧟌𧡘囖䃟𡘊㦡𣜯𨃨𡏅熭荦𧧝𩆨婧䲷𧂯𨦫𧧽𧨊𧬋𧵦𤅺筃祾𨀉澵𪋟樃𨌘厢𦸇鎿栶靝𨅯𨀣𦦵𡏭𣈯𨁈嶅𨰰𨂃圕頣𨥉嶫𤦈斾槕叒𤪥𣾁㰑朶𨂐𨃴𨄮𡾡𨅏"],["9d40","𨆉𨆯𨈚𨌆𨌯𨎊㗊𨑨𨚪䣺揦𨥖砈鉕𨦸䏲𨧧䏟𨧨𨭆𨯔姸𨰉輋𨿅𩃬筑𩄐𩄼㷷𩅞𤫊运犏嚋𩓧𩗩𩖰𩖸𩜲𩣑𩥉𩥪𩧃𩨨𩬎𩵚𩶛纟𩻸𩼣䲤镇𪊓熢𪋿䶑递𪗋䶜𠲜达嗁"],["9da1","辺𢒰边𤪓䔉繿潖檱仪㓤𨬬𧢝㜺躀𡟵𨀤𨭬𨮙𧨾𦚯㷫𧙕𣲷𥘵𥥖亚𥺁𦉘嚿𠹭踎孭𣺈𤲞揞拐𡟶𡡻攰嘭𥱊吚𥌑㷆𩶘䱽嘢嘞罉𥻘奵𣵀蝰东𠿪𠵉𣚺脗鵞贘瘻鱅癎瞹鍅吲腈苷嘥脲萘肽嗪祢噃吖𠺝㗎嘅嗱曱𨋢㘭甴嗰喺咗啲𠱁𠲖廐𥅈𠹶𢱢"],["9e40","𠺢麫絚嗞𡁵抝靭咔賍燶酶揼掹揾啩𢭃鱲𢺳冚㓟𠶧冧呍唞唓癦踭𦢊疱肶蠄螆裇膶萜𡃁䓬猄𤜆宐茋𦢓噻𢛴𧴯𤆣𧵳𦻐𧊶酰𡇙鈈𣳼𪚩𠺬𠻹牦𡲢䝎𤿂𧿹𠿫䃺"],["9ea1","鱝攟𢶠䣳𤟠𩵼𠿬𠸊恢𧖣𠿭"],["9ead","𦁈𡆇熣纎鵐业丄㕷嬍沲卧㚬㧜卽㚥𤘘墚𤭮舭呋垪𥪕𠥹"],["9ec5","㩒𢑥獴𩺬䴉鯭𣳾𩼰䱛𤾩𩖞𩿞葜𣶶𧊲𦞳𣜠挮紥𣻷𣸬㨪逈勌㹴㙺䗩𠒎癀嫰𠺶硺𧼮墧䂿噼鮋嵴癔𪐴麅䳡痹㟻愙𣃚𤏲"],["9ef5","噝𡊩垧𤥣𩸆刴𧂮㖭汊鵼"],["9f40","籖鬹埞𡝬屓擓𩓐𦌵𧅤蚭𠴨𦴢𤫢𠵱"],["9f4f","凾𡼏嶎霃𡷑麁遌笟鬂峑箣扨挵髿篏鬪籾鬮籂粆鰕篼鬉鼗鰛𤤾齚啳寃俽麘俲剠㸆勑坧偖妷帒韈鶫轜呩鞴饀鞺匬愰"],["9fa1","椬叚鰊鴂䰻陁榀傦畆𡝭駚剳"],["9fae","酙隁酜"],["9fb2","酑𨺗捿𦴣櫊嘑醎畺抅𠏼獏籰𥰡𣳽"],["9fc1","𤤙盖鮝个𠳔莾衂"],["9fc9","届槀僭坺刟巵从氱𠇲伹咜哚劚趂㗾弌㗳"],["9fdb","歒酼龥鮗頮颴骺麨麄煺笔"],["9fe7","毺蠘罸"],["9feb","嘠𪙊蹷齓"],["9ff0","跔蹏鸜踁抂𨍽踨蹵竓𤩷稾磘泪詧瘇"],["a040","𨩚鼦泎蟖痃𪊲硓咢贌狢獱謭猂瓱賫𤪻蘯徺袠䒷"],["a055","𡠻𦸅"],["a058","詾𢔛"],["a05b","惽癧髗鵄鍮鮏蟵"],["a063","蠏賷猬霡鮰㗖犲䰇籑饊𦅙慙䰄麖慽"],["a073","坟慯抦戹拎㩜懢厪𣏵捤栂㗒"],["a0a1","嵗𨯂迚𨸹"],["a0a6","僙𡵆礆匲阸𠼻䁥"],["a0ae","矾"],["a0b0","糂𥼚糚稭聦聣絍甅瓲覔舚朌聢𧒆聛瓰脃眤覉𦟌畓𦻑螩蟎臈螌詉貭譃眫瓸蓚㘵榲趦"],["a0d4","覩瑨涹蟁𤀑瓧㷛煶悤憜㳑煢恷"],["a0e2","罱𨬭牐惩䭾删㰘𣳇𥻗𧙖𥔱𡥄𡋾𩤃𦷜𧂭峁𦆭𨨏𣙷𠃮𦡆𤼎䕢嬟𦍌齐麦𦉫"],["a3c0","␀",31,"␡"],["c6a1","①",9,"⑴",9,"ⅰ",9,"丶丿亅亠冂冖冫勹匸卩厶夊宀巛⼳广廴彐彡攴无疒癶辵隶¨ˆヽヾゝゞ〃仝々〆〇ー［］✽ぁ",23],["c740","す",58,"ァアィイ"],["c7a1","ゥ",81,"А",5,"ЁЖ",4],["c840","Л",26,"ёж",25,"⇧↸↹㇏𠃌乚𠂊刂䒑"],["c8a1","龰冈龱𧘇"],["c8cd","￢￤＇＂㈱№℡゛゜⺀⺄⺆⺇⺈⺊⺌⺍⺕⺜⺝⺥⺧⺪⺬⺮⺶⺼⺾⻆⻊⻌⻍⻏⻖⻗⻞⻣"],["c8f5","ʃɐɛɔɵœøŋʊɪ"],["f9fe","￭"],["fa40","𠕇鋛𠗟𣿅蕌䊵珯况㙉𤥂𨧤鍄𡧛苮𣳈砼杄拟𤤳𨦪𠊠𦮳𡌅侫𢓭倈𦴩𧪄𣘀𤪱𢔓倩𠍾徤𠎀𠍇滛𠐟偽儁㑺儎顬㝃萖𤦤𠒇兠𣎴兪𠯿𢃼𠋥𢔰𠖎𣈳𡦃宂蝽𠖳𣲙冲冸"],["faa1","鴴凉减凑㳜凓𤪦决凢卂凭菍椾𣜭彻刋刦刼劵剗劔効勅簕蕂勠蘍𦬓包𨫞啉滙𣾀𠥔𣿬匳卄𠯢泋𡜦栛珕恊㺪㣌𡛨燝䒢卭却𨚫卾卿𡖖𡘓矦厓𨪛厠厫厮玧𥝲㽙玜叁叅汉义埾叙㪫𠮏叠𣿫𢶣叶𠱷吓灹唫晗浛呭𦭓𠵴啝咏咤䞦𡜍𠻝㶴𠵍"],["fb40","𨦼𢚘啇䳭启琗喆喩嘅𡣗𤀺䕒𤐵暳𡂴嘷曍𣊊暤暭噍噏磱囱鞇叾圀囯园𨭦㘣𡉏坆𤆥汮炋坂㚱𦱾埦𡐖堃𡑔𤍣堦𤯵塜墪㕡壠壜𡈼壻寿坃𪅐𤉸鏓㖡够梦㛃湙"],["fba1","𡘾娤啓𡚒蔅姉𠵎𦲁𦴪𡟜姙𡟻𡞲𦶦浱𡠨𡛕姹𦹅媫婣㛦𤦩婷㜈媖瑥嫓𦾡𢕔㶅𡤑㜲𡚸広勐孶斈孼𧨎䀄䡝𠈄寕慠𡨴𥧌𠖥寳宝䴐尅𡭄尓珎尔𡲥𦬨屉䣝岅峩峯嶋𡷹𡸷崐崘嵆𡺤岺巗苼㠭𤤁𢁉𢅳芇㠶㯂帮檊幵幺𤒼𠳓厦亷廐厨𡝱帉廴𨒂"],["fc40","廹廻㢠廼栾鐛弍𠇁弢㫞䢮𡌺强𦢈𢏐彘𢑱彣鞽𦹮彲鍀𨨶徧嶶㵟𥉐𡽪𧃸𢙨釖𠊞𨨩怱暅𡡷㥣㷇㘹垐𢞴祱㹀悞悤悳𤦂𤦏𧩓璤僡媠慤萤慂慈𦻒憁凴𠙖憇宪𣾷"],["fca1","𢡟懓𨮝𩥝懐㤲𢦀𢣁怣慜攞掋𠄘担𡝰拕𢸍捬𤧟㨗搸揸𡎎𡟼撐澊𢸶頔𤂌𥜝擡擥鑻㩦携㩗敍漖𤨨𤨣斅敭敟𣁾斵𤥀䬷旑䃘𡠩无旣忟𣐀昘𣇷𣇸晄𣆤𣆥晋𠹵晧𥇦晳晴𡸽𣈱𨗴𣇈𥌓矅𢣷馤朂𤎜𤨡㬫槺𣟂杞杧杢𤇍𩃭柗䓩栢湐鈼栁𣏦𦶠桝"],["fd40","𣑯槡樋𨫟楳棃𣗍椁椀㴲㨁𣘼㮀枬楡𨩊䋼椶榘㮡𠏉荣傐槹𣙙𢄪橅𣜃檝㯳枱櫈𩆜㰍欝𠤣惞欵歴𢟍溵𣫛𠎵𡥘㝀吡𣭚毡𣻼毜氷𢒋𤣱𦭑汚舦汹𣶼䓅𣶽𤆤𤤌𤤀"],["fda1","𣳉㛥㳫𠴲鮃𣇹𢒑羏样𦴥𦶡𦷫涖浜湼漄𤥿𤂅𦹲蔳𦽴凇沜渝萮𨬡港𣸯瑓𣾂秌湏媑𣁋濸㜍澝𣸰滺𡒗𤀽䕕鏰潄潜㵎潴𩅰㴻澟𤅄濓𤂑𤅕𤀹𣿰𣾴𤄿凟𤅖𤅗𤅀𦇝灋灾炧炁烌烕烖烟䄄㷨熴熖𤉷焫煅媈煊煮岜𤍥煏鍢𤋁焬𤑚𤨧𤨢熺𨯨炽爎"],["fe40","鑂爕夑鑃爤鍁𥘅爮牀𤥴梽牕牗㹕𣁄栍漽犂猪猫𤠣𨠫䣭𨠄猨献珏玪𠰺𦨮珉瑉𤇢𡛧𤨤昣㛅𤦷𤦍𤧻珷琕椃𤨦琹𠗃㻗瑜𢢭瑠𨺲瑇珤瑶莹瑬㜰瑴鏱樬璂䥓𤪌"],["fea1","𤅟𤩹𨮏孆𨰃𡢞瓈𡦈甎瓩甞𨻙𡩋寗𨺬鎅畍畊畧畮𤾂㼄𤴓疎瑝疞疴瘂瘬癑癏癯癶𦏵皐臯㟸𦤑𦤎皡皥皷盌𦾟葢𥂝𥅽𡸜眞眦着撯𥈠睘𣊬瞯𨥤𨥨𡛁矴砉𡍶𤨒棊碯磇磓隥礮𥗠磗礴碱𧘌辸袄𨬫𦂃𢘜禆褀椂禀𥡗禝𧬹礼禩渪𧄦㺨秆𩄍秔"]]');

/***/ }),

/***/ "./node_modules/iconv-lite/encodings/tables/cp936.json":
/*!*************************************************************!*\
  !*** ./node_modules/iconv-lite/encodings/tables/cp936.json ***!
  \*************************************************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('[["0","\\u0000",127,"€"],["8140","丂丄丅丆丏丒丗丟丠両丣並丩丮丯丱丳丵丷丼乀乁乂乄乆乊乑乕乗乚乛乢乣乤乥乧乨乪",5,"乲乴",9,"乿",6,"亇亊"],["8180","亐亖亗亙亜亝亞亣亪亯亰亱亴亶亷亸亹亼亽亾仈仌仏仐仒仚仛仜仠仢仦仧仩仭仮仯仱仴仸仹仺仼仾伀伂",6,"伋伌伒",4,"伜伝伡伣伨伩伬伭伮伱伳伵伷伹伻伾",4,"佄佅佇",5,"佒佔佖佡佢佦佨佪佫佭佮佱佲併佷佸佹佺佽侀侁侂侅來侇侊侌侎侐侒侓侕侖侘侙侚侜侞侟価侢"],["8240","侤侫侭侰",4,"侶",8,"俀俁係俆俇俈俉俋俌俍俒",4,"俙俛俠俢俤俥俧俫俬俰俲俴俵俶俷俹俻俼俽俿",11],["8280","個倎倐們倓倕倖倗倛倝倞倠倢倣値倧倫倯",10,"倻倽倿偀偁偂偄偅偆偉偊偋偍偐",4,"偖偗偘偙偛偝",7,"偦",5,"偭",8,"偸偹偺偼偽傁傂傃傄傆傇傉傊傋傌傎",20,"傤傦傪傫傭",4,"傳",6,"傼"],["8340","傽",17,"僐",5,"僗僘僙僛",10,"僨僩僪僫僯僰僱僲僴僶",4,"僼",9,"儈"],["8380","儉儊儌",5,"儓",13,"儢",28,"兂兇兊兌兎兏児兒兓兗兘兙兛兝",4,"兣兤兦內兩兪兯兲兺兾兿冃冄円冇冊冋冎冏冐冑冓冔冘冚冝冞冟冡冣冦",4,"冭冮冴冸冹冺冾冿凁凂凃凅凈凊凍凎凐凒",5],["8440","凘凙凚凜凞凟凢凣凥",5,"凬凮凱凲凴凷凾刄刅刉刋刌刏刐刓刔刕刜刞刟刡刢刣別刦刧刪刬刯刱刲刴刵刼刾剄",5,"剋剎剏剒剓剕剗剘"],["8480","剙剚剛剝剟剠剢剣剤剦剨剫剬剭剮剰剱剳",9,"剾劀劃",4,"劉",6,"劑劒劔",6,"劜劤劥劦劧劮劯劰労",9,"勀勁勂勄勅勆勈勊勌勍勎勏勑勓勔動勗務",5,"勠勡勢勣勥",10,"勱",7,"勻勼勽匁匂匃匄匇匉匊匋匌匎"],["8540","匑匒匓匔匘匛匜匞匟匢匤匥匧匨匩匫匬匭匯",9,"匼匽區卂卄卆卋卌卍卐協単卙卛卝卥卨卪卬卭卲卶卹卻卼卽卾厀厁厃厇厈厊厎厏"],["8580","厐",4,"厖厗厙厛厜厞厠厡厤厧厪厫厬厭厯",6,"厷厸厹厺厼厽厾叀參",4,"収叏叐叒叓叕叚叜叝叞叡叢叧叴叺叾叿吀吂吅吇吋吔吘吙吚吜吢吤吥吪吰吳吶吷吺吽吿呁呂呄呅呇呉呌呍呎呏呑呚呝",4,"呣呥呧呩",7,"呴呹呺呾呿咁咃咅咇咈咉咊咍咑咓咗咘咜咞咟咠咡"],["8640","咢咥咮咰咲咵咶咷咹咺咼咾哃哅哊哋哖哘哛哠",4,"哫哬哯哰哱哴",5,"哻哾唀唂唃唄唅唈唊",4,"唒唓唕",5,"唜唝唞唟唡唥唦"],["8680","唨唩唫唭唲唴唵唶唸唹唺唻唽啀啂啅啇啈啋",4,"啑啒啓啔啗",4,"啝啞啟啠啢啣啨啩啫啯",5,"啹啺啽啿喅喆喌喍喎喐喒喓喕喖喗喚喛喞喠",6,"喨",8,"喲喴営喸喺喼喿",4,"嗆嗇嗈嗊嗋嗎嗏嗐嗕嗗",4,"嗞嗠嗢嗧嗩嗭嗮嗰嗱嗴嗶嗸",4,"嗿嘂嘃嘄嘅"],["8740","嘆嘇嘊嘋嘍嘐",7,"嘙嘚嘜嘝嘠嘡嘢嘥嘦嘨嘩嘪嘫嘮嘯嘰嘳嘵嘷嘸嘺嘼嘽嘾噀",11,"噏",4,"噕噖噚噛噝",4],["8780","噣噥噦噧噭噮噯噰噲噳噴噵噷噸噹噺噽",7,"嚇",6,"嚐嚑嚒嚔",14,"嚤",10,"嚰",6,"嚸嚹嚺嚻嚽",12,"囋",8,"囕囖囘囙囜団囥",5,"囬囮囯囲図囶囷囸囻囼圀圁圂圅圇國",6],["8840","園",9,"圝圞圠圡圢圤圥圦圧圫圱圲圴",4,"圼圽圿坁坃坄坅坆坈坉坋坒",4,"坘坙坢坣坥坧坬坮坰坱坲坴坵坸坹坺坽坾坿垀"],["8880","垁垇垈垉垊垍",4,"垔",6,"垜垝垞垟垥垨垪垬垯垰垱垳垵垶垷垹",8,"埄",6,"埌埍埐埑埓埖埗埛埜埞埡埢埣埥",7,"埮埰埱埲埳埵埶執埻埼埾埿堁堃堄堅堈堉堊堌堎堏堐堒堓堔堖堗堘堚堛堜堝堟堢堣堥",4,"堫",4,"報堲堳場堶",7],["8940","堾",5,"塅",6,"塎塏塐塒塓塕塖塗塙",4,"塟",5,"塦",4,"塭",16,"塿墂墄墆墇墈墊墋墌"],["8980","墍",4,"墔",4,"墛墜墝墠",7,"墪",17,"墽墾墿壀壂壃壄壆",10,"壒壓壔壖",13,"壥",5,"壭壯壱売壴壵壷壸壺",7,"夃夅夆夈",4,"夎夐夑夒夓夗夘夛夝夞夠夡夢夣夦夨夬夰夲夳夵夶夻"],["8a40","夽夾夿奀奃奅奆奊奌奍奐奒奓奙奛",4,"奡奣奤奦",12,"奵奷奺奻奼奾奿妀妅妉妋妌妎妏妐妑妔妕妘妚妛妜妝妟妠妡妢妦"],["8a80","妧妬妭妰妱妳",5,"妺妼妽妿",6,"姇姈姉姌姍姎姏姕姖姙姛姞",4,"姤姦姧姩姪姫姭",11,"姺姼姽姾娀娂娊娋娍娎娏娐娒娔娕娖娗娙娚娛娝娞娡娢娤娦娧娨娪",6,"娳娵娷",4,"娽娾娿婁",4,"婇婈婋",9,"婖婗婘婙婛",5],["8b40","婡婣婤婥婦婨婩婫",8,"婸婹婻婼婽婾媀",17,"媓",6,"媜",13,"媫媬"],["8b80","媭",4,"媴媶媷媹",4,"媿嫀嫃",5,"嫊嫋嫍",4,"嫓嫕嫗嫙嫚嫛嫝嫞嫟嫢嫤嫥嫧嫨嫪嫬",4,"嫲",22,"嬊",11,"嬘",25,"嬳嬵嬶嬸",7,"孁",6],["8c40","孈",7,"孒孖孞孠孡孧孨孫孭孮孯孲孴孶孷學孹孻孼孾孿宂宆宊宍宎宐宑宒宔宖実宧宨宩宬宭宮宯宱宲宷宺宻宼寀寁寃寈寉寊寋寍寎寏"],["8c80","寑寔",8,"寠寢寣實寧審",4,"寯寱",6,"寽対尀専尃尅將專尋尌對導尐尒尓尗尙尛尞尟尠尡尣尦尨尩尪尫尭尮尯尰尲尳尵尶尷屃屄屆屇屌屍屒屓屔屖屗屘屚屛屜屝屟屢層屧",6,"屰屲",6,"屻屼屽屾岀岃",4,"岉岊岋岎岏岒岓岕岝",4,"岤",4],["8d40","岪岮岯岰岲岴岶岹岺岻岼岾峀峂峃峅",5,"峌",5,"峓",5,"峚",6,"峢峣峧峩峫峬峮峯峱",9,"峼",4],["8d80","崁崄崅崈",5,"崏",4,"崕崗崘崙崚崜崝崟",4,"崥崨崪崫崬崯",4,"崵",7,"崿",7,"嵈嵉嵍",10,"嵙嵚嵜嵞",10,"嵪嵭嵮嵰嵱嵲嵳嵵",12,"嶃",21,"嶚嶛嶜嶞嶟嶠"],["8e40","嶡",21,"嶸",12,"巆",6,"巎",12,"巜巟巠巣巤巪巬巭"],["8e80","巰巵巶巸",4,"巿帀帄帇帉帊帋帍帎帒帓帗帞",7,"帨",4,"帯帰帲",4,"帹帺帾帿幀幁幃幆",5,"幍",6,"幖",4,"幜幝幟幠幣",14,"幵幷幹幾庁庂広庅庈庉庌庍庎庒庘庛庝庡庢庣庤庨",4,"庮",4,"庴庺庻庼庽庿",6],["8f40","廆廇廈廋",5,"廔廕廗廘廙廚廜",11,"廩廫",8,"廵廸廹廻廼廽弅弆弇弉弌弍弎弐弒弔弖弙弚弜弝弞弡弢弣弤"],["8f80","弨弫弬弮弰弲",6,"弻弽弾弿彁",14,"彑彔彙彚彛彜彞彟彠彣彥彧彨彫彮彯彲彴彵彶彸彺彽彾彿徃徆徍徎徏徑従徔徖徚徛徝從徟徠徢",5,"復徫徬徯",5,"徶徸徹徺徻徾",4,"忇忈忊忋忎忓忔忕忚忛応忞忟忢忣忥忦忨忩忬忯忰忲忳忴忶忷忹忺忼怇"],["9040","怈怉怋怌怐怑怓怗怘怚怞怟怢怣怤怬怭怮怰",4,"怶",4,"怽怾恀恄",6,"恌恎恏恑恓恔恖恗恘恛恜恞恟恠恡恥恦恮恱恲恴恵恷恾悀"],["9080","悁悂悅悆悇悈悊悋悎悏悐悑悓悕悗悘悙悜悞悡悢悤悥悧悩悪悮悰悳悵悶悷悹悺悽",7,"惇惈惉惌",4,"惒惓惔惖惗惙惛惞惡",4,"惪惱惲惵惷惸惻",4,"愂愃愄愅愇愊愋愌愐",4,"愖愗愘愙愛愜愝愞愡愢愥愨愩愪愬",18,"慀",6],["9140","慇慉態慍慏慐慒慓慔慖",6,"慞慟慠慡慣慤慥慦慩",6,"慱慲慳慴慶慸",18,"憌憍憏",4,"憕"],["9180","憖",6,"憞",8,"憪憫憭",9,"憸",5,"憿懀懁懃",4,"應懌",4,"懓懕",16,"懧",13,"懶",8,"戀",5,"戇戉戓戔戙戜戝戞戠戣戦戧戨戩戫戭戯戰戱戲戵戶戸",4,"扂扄扅扆扊"],["9240","扏扐払扖扗扙扚扜",6,"扤扥扨扱扲扴扵扷扸扺扻扽抁抂抃抅抆抇抈抋",5,"抔抙抜抝択抣抦抧抩抪抭抮抯抰抲抳抴抶抷抸抺抾拀拁"],["9280","拃拋拏拑拕拝拞拠拡拤拪拫拰拲拵拸拹拺拻挀挃挄挅挆挊挋挌挍挏挐挒挓挔挕挗挘挙挜挦挧挩挬挭挮挰挱挳",5,"挻挼挾挿捀捁捄捇捈捊捑捒捓捔捖",7,"捠捤捥捦捨捪捫捬捯捰捲捳捴捵捸捹捼捽捾捿掁掃掄掅掆掋掍掑掓掔掕掗掙",6,"採掤掦掫掯掱掲掵掶掹掻掽掿揀"],["9340","揁揂揃揅揇揈揊揋揌揑揓揔揕揗",6,"揟揢揤",4,"揫揬揮揯揰揱揳揵揷揹揺揻揼揾搃搄搆",4,"損搎搑搒搕",5,"搝搟搢搣搤"],["9380","搥搧搨搩搫搮",5,"搵",4,"搻搼搾摀摂摃摉摋",6,"摓摕摖摗摙",4,"摟",7,"摨摪摫摬摮",9,"摻",6,"撃撆撈",8,"撓撔撗撘撚撛撜撝撟",4,"撥撦撧撨撪撫撯撱撲撳撴撶撹撻撽撾撿擁擃擄擆",6,"擏擑擓擔擕擖擙據"],["9440","擛擜擝擟擠擡擣擥擧",24,"攁",7,"攊",7,"攓",4,"攙",8],["9480","攢攣攤攦",4,"攬攭攰攱攲攳攷攺攼攽敀",4,"敆敇敊敋敍敎敐敒敓敔敗敘敚敜敟敠敡敤敥敧敨敩敪敭敮敯敱敳敵敶數",14,"斈斉斊斍斎斏斒斔斕斖斘斚斝斞斠斢斣斦斨斪斬斮斱",7,"斺斻斾斿旀旂旇旈旉旊旍旐旑旓旔旕旘",7,"旡旣旤旪旫"],["9540","旲旳旴旵旸旹旻",4,"昁昄昅昇昈昉昋昍昐昑昒昖昗昘昚昛昜昞昡昢昣昤昦昩昪昫昬昮昰昲昳昷",4,"昽昿晀時晄",6,"晍晎晐晑晘"],["9580","晙晛晜晝晞晠晢晣晥晧晩",4,"晱晲晳晵晸晹晻晼晽晿暀暁暃暅暆暈暉暊暋暍暎暏暐暒暓暔暕暘",4,"暞",8,"暩",4,"暯",4,"暵暶暷暸暺暻暼暽暿",25,"曚曞",7,"曧曨曪",5,"曱曵曶書曺曻曽朁朂會"],["9640","朄朅朆朇朌朎朏朑朒朓朖朘朙朚朜朞朠",5,"朧朩朮朰朲朳朶朷朸朹朻朼朾朿杁杄杅杇杊杋杍杒杔杕杗",4,"杝杢杣杤杦杧杫杬杮東杴杶"],["9680","杸杹杺杻杽枀枂枃枅枆枈枊枌枍枎枏枑枒枓枔枖枙枛枟枠枡枤枦枩枬枮枱枲枴枹",7,"柂柅",9,"柕柖柗柛柟柡柣柤柦柧柨柪柫柭柮柲柵",7,"柾栁栂栃栄栆栍栐栒栔栕栘",4,"栞栟栠栢",6,"栫",6,"栴栵栶栺栻栿桇桋桍桏桒桖",5],["9740","桜桝桞桟桪桬",7,"桵桸",8,"梂梄梇",7,"梐梑梒梔梕梖梘",9,"梣梤梥梩梪梫梬梮梱梲梴梶梷梸"],["9780","梹",6,"棁棃",5,"棊棌棎棏棐棑棓棔棖棗棙棛",4,"棡棢棤",9,"棯棲棳棴棶棷棸棻棽棾棿椀椂椃椄椆",4,"椌椏椑椓",11,"椡椢椣椥",7,"椮椯椱椲椳椵椶椷椸椺椻椼椾楀楁楃",16,"楕楖楘楙楛楜楟"],["9840","楡楢楤楥楧楨楩楪楬業楯楰楲",4,"楺楻楽楾楿榁榃榅榊榋榌榎",5,"榖榗榙榚榝",9,"榩榪榬榮榯榰榲榳榵榶榸榹榺榼榽"],["9880","榾榿槀槂",7,"構槍槏槑槒槓槕",5,"槜槝槞槡",11,"槮槯槰槱槳",9,"槾樀",9,"樋",11,"標",5,"樠樢",5,"権樫樬樭樮樰樲樳樴樶",6,"樿",4,"橅橆橈",7,"橑",6,"橚"],["9940","橜",4,"橢橣橤橦",10,"橲",6,"橺橻橽橾橿檁檂檃檅",8,"檏檒",4,"檘",7,"檡",5],["9980","檧檨檪檭",114,"欥欦欨",6],["9a40","欯欰欱欳欴欵欶欸欻欼欽欿歀歁歂歄歅歈歊歋歍",11,"歚",7,"歨歩歫",13,"歺歽歾歿殀殅殈"],["9a80","殌殎殏殐殑殔殕殗殘殙殜",4,"殢",7,"殫",7,"殶殸",6,"毀毃毄毆",4,"毌毎毐毑毘毚毜",4,"毢",7,"毬毭毮毰毱毲毴毶毷毸毺毻毼毾",6,"氈",4,"氎氒気氜氝氞氠氣氥氫氬氭氱氳氶氷氹氺氻氼氾氿汃汄汅汈汋",4,"汑汒汓汖汘"],["9b40","汙汚汢汣汥汦汧汫",4,"汱汳汵汷汸決汻汼汿沀沄沇沊沋沍沎沑沒沕沖沗沘沚沜沝沞沠沢沨沬沯沰沴沵沶沷沺泀況泂泃泆泇泈泋泍泎泏泑泒泘"],["9b80","泙泚泜泝泟泤泦泧泩泬泭泲泴泹泿洀洂洃洅洆洈洉洊洍洏洐洑洓洔洕洖洘洜洝洟",5,"洦洨洩洬洭洯洰洴洶洷洸洺洿浀浂浄浉浌浐浕浖浗浘浛浝浟浡浢浤浥浧浨浫浬浭浰浱浲浳浵浶浹浺浻浽",4,"涃涄涆涇涊涋涍涏涐涒涖",4,"涜涢涥涬涭涰涱涳涴涶涷涹",5,"淁淂淃淈淉淊"],["9c40","淍淎淏淐淒淓淔淕淗淚淛淜淟淢淣淥淧淨淩淪淭淯淰淲淴淵淶淸淺淽",7,"渆渇済渉渋渏渒渓渕渘渙減渜渞渟渢渦渧渨渪測渮渰渱渳渵"],["9c80","渶渷渹渻",7,"湅",7,"湏湐湑湒湕湗湙湚湜湝湞湠",10,"湬湭湯",14,"満溁溂溄溇溈溊",4,"溑",6,"溙溚溛溝溞溠溡溣溤溦溨溩溫溬溭溮溰溳溵溸溹溼溾溿滀滃滄滅滆滈滉滊滌滍滎滐滒滖滘滙滛滜滝滣滧滪",5],["9d40","滰滱滲滳滵滶滷滸滺",7,"漃漄漅漇漈漊",4,"漐漑漒漖",9,"漡漢漣漥漦漧漨漬漮漰漲漴漵漷",6,"漿潀潁潂"],["9d80","潃潄潅潈潉潊潌潎",9,"潙潚潛潝潟潠潡潣潤潥潧",5,"潯潰潱潳潵潶潷潹潻潽",6,"澅澆澇澊澋澏",12,"澝澞澟澠澢",4,"澨",10,"澴澵澷澸澺",5,"濁濃",5,"濊",6,"濓",10,"濟濢濣濤濥"],["9e40","濦",7,"濰",32,"瀒",7,"瀜",6,"瀤",6],["9e80","瀫",9,"瀶瀷瀸瀺",17,"灍灎灐",13,"灟",11,"灮灱灲灳灴灷灹灺灻災炁炂炃炄炆炇炈炋炌炍炏炐炑炓炗炘炚炛炞",12,"炰炲炴炵炶為炾炿烄烅烆烇烉烋",12,"烚"],["9f40","烜烝烞烠烡烢烣烥烪烮烰",6,"烸烺烻烼烾",10,"焋",4,"焑焒焔焗焛",10,"焧",7,"焲焳焴"],["9f80","焵焷",13,"煆煇煈煉煋煍煏",12,"煝煟",4,"煥煩",4,"煯煰煱煴煵煶煷煹煻煼煾",5,"熅",4,"熋熌熍熎熐熑熒熓熕熖熗熚",4,"熡",6,"熩熪熫熭",5,"熴熶熷熸熺",8,"燄",9,"燏",4],["a040","燖",9,"燡燢燣燤燦燨",5,"燯",9,"燺",11,"爇",19],["a080","爛爜爞",9,"爩爫爭爮爯爲爳爴爺爼爾牀",6,"牉牊牋牎牏牐牑牓牔牕牗牘牚牜牞牠牣牤牥牨牪牫牬牭牰牱牳牴牶牷牸牻牼牽犂犃犅",4,"犌犎犐犑犓",11,"犠",11,"犮犱犲犳犵犺",6,"狅狆狇狉狊狋狌狏狑狓狔狕狖狘狚狛"],["a1a1","　、。·ˉˇ¨〃々—～‖…‘’“”〔〕〈",7,"〖〗【】±×÷∶∧∨∑∏∪∩∈∷√⊥∥∠⌒⊙∫∮≡≌≈∽∝≠≮≯≤≥∞∵∴♂♀°′″℃＄¤￠￡‰§№☆★○●◎◇◆□■△▲※→←↑↓〓"],["a2a1","ⅰ",9],["a2b1","⒈",19,"⑴",19,"①",9],["a2e5","㈠",9],["a2f1","Ⅰ",11],["a3a1","！＂＃￥％",88,"￣"],["a4a1","ぁ",82],["a5a1","ァ",85],["a6a1","Α",16,"Σ",6],["a6c1","α",16,"σ",6],["a6e0","︵︶︹︺︿﹀︽︾﹁﹂﹃﹄"],["a6ee","︻︼︷︸︱"],["a6f4","︳︴"],["a7a1","А",5,"ЁЖ",25],["a7d1","а",5,"ёж",25],["a840","ˊˋ˙–―‥‵℅℉↖↗↘↙∕∟∣≒≦≧⊿═",35,"▁",6],["a880","█",7,"▓▔▕▼▽◢◣◤◥☉⊕〒〝〞"],["a8a1","āáǎàēéěèīíǐìōóǒòūúǔùǖǘǚǜüêɑ"],["a8bd","ńň"],["a8c0","ɡ"],["a8c5","ㄅ",36],["a940","〡",8,"㊣㎎㎏㎜㎝㎞㎡㏄㏎㏑㏒㏕︰￢￤"],["a959","℡㈱"],["a95c","‐"],["a960","ー゛゜ヽヾ〆ゝゞ﹉",9,"﹔﹕﹖﹗﹙",8],["a980","﹢",4,"﹨﹩﹪﹫"],["a996","〇"],["a9a4","─",75],["aa40","狜狝狟狢",5,"狪狫狵狶狹狽狾狿猀猂猄",5,"猋猌猍猏猐猑猒猔猘猙猚猟猠猣猤猦猧猨猭猯猰猲猳猵猶猺猻猼猽獀",8],["aa80","獉獊獋獌獎獏獑獓獔獕獖獘",7,"獡",10,"獮獰獱"],["ab40","獲",11,"獿",4,"玅玆玈玊玌玍玏玐玒玓玔玕玗玘玙玚玜玝玞玠玡玣",5,"玪玬玭玱玴玵玶玸玹玼玽玾玿珁珃",4],["ab80","珋珌珎珒",6,"珚珛珜珝珟珡珢珣珤珦珨珪珫珬珮珯珰珱珳",4],["ac40","珸",10,"琄琇琈琋琌琍琎琑",8,"琜",5,"琣琤琧琩琫琭琯琱琲琷",4,"琽琾琿瑀瑂",11],["ac80","瑎",6,"瑖瑘瑝瑠",12,"瑮瑯瑱",4,"瑸瑹瑺"],["ad40","瑻瑼瑽瑿璂璄璅璆璈璉璊璌璍璏璑",10,"璝璟",7,"璪",15,"璻",12],["ad80","瓈",9,"瓓",8,"瓝瓟瓡瓥瓧",6,"瓰瓱瓲"],["ae40","瓳瓵瓸",6,"甀甁甂甃甅",7,"甎甐甒甔甕甖甗甛甝甞甠",4,"甦甧甪甮甴甶甹甼甽甿畁畂畃畄畆畇畉畊畍畐畑畒畓畕畖畗畘"],["ae80","畝",7,"畧畨畩畫",6,"畳畵當畷畺",4,"疀疁疂疄疅疇"],["af40","疈疉疊疌疍疎疐疓疕疘疛疜疞疢疦",4,"疭疶疷疺疻疿痀痁痆痋痌痎痏痐痑痓痗痙痚痜痝痟痠痡痥痩痬痭痮痯痲痳痵痶痷痸痺痻痽痾瘂瘄瘆瘇"],["af80","瘈瘉瘋瘍瘎瘏瘑瘒瘓瘔瘖瘚瘜瘝瘞瘡瘣瘧瘨瘬瘮瘯瘱瘲瘶瘷瘹瘺瘻瘽癁療癄"],["b040","癅",6,"癎",5,"癕癗",4,"癝癟癠癡癢癤",6,"癬癭癮癰",7,"癹発發癿皀皁皃皅皉皊皌皍皏皐皒皔皕皗皘皚皛"],["b080","皜",7,"皥",8,"皯皰皳皵",9,"盀盁盃啊阿埃挨哎唉哀皑癌蔼矮艾碍爱隘鞍氨安俺按暗岸胺案肮昂盎凹敖熬翱袄傲奥懊澳芭捌扒叭吧笆八疤巴拔跋靶把耙坝霸罢爸白柏百摆佰败拜稗斑班搬扳般颁板版扮拌伴瓣半办绊邦帮梆榜膀绑棒磅蚌镑傍谤苞胞包褒剥"],["b140","盄盇盉盋盌盓盕盙盚盜盝盞盠",4,"盦",7,"盰盳盵盶盷盺盻盽盿眀眂眃眅眆眊県眎",10,"眛眜眝眞眡眣眤眥眧眪眫"],["b180","眬眮眰",4,"眹眻眽眾眿睂睄睅睆睈",7,"睒",7,"睜薄雹保堡饱宝抱报暴豹鲍爆杯碑悲卑北辈背贝钡倍狈备惫焙被奔苯本笨崩绷甭泵蹦迸逼鼻比鄙笔彼碧蓖蔽毕毙毖币庇痹闭敝弊必辟壁臂避陛鞭边编贬扁便变卞辨辩辫遍标彪膘表鳖憋别瘪彬斌濒滨宾摈兵冰柄丙秉饼炳"],["b240","睝睞睟睠睤睧睩睪睭",11,"睺睻睼瞁瞂瞃瞆",5,"瞏瞐瞓",11,"瞡瞣瞤瞦瞨瞫瞭瞮瞯瞱瞲瞴瞶",4],["b280","瞼瞾矀",12,"矎",8,"矘矙矚矝",4,"矤病并玻菠播拨钵波博勃搏铂箔伯帛舶脖膊渤泊驳捕卜哺补埠不布步簿部怖擦猜裁材才财睬踩采彩菜蔡餐参蚕残惭惨灿苍舱仓沧藏操糙槽曹草厕策侧册测层蹭插叉茬茶查碴搽察岔差诧拆柴豺搀掺蝉馋谗缠铲产阐颤昌猖"],["b340","矦矨矪矯矰矱矲矴矵矷矹矺矻矼砃",5,"砊砋砎砏砐砓砕砙砛砞砠砡砢砤砨砪砫砮砯砱砲砳砵砶砽砿硁硂硃硄硆硈硉硊硋硍硏硑硓硔硘硙硚"],["b380","硛硜硞",11,"硯",7,"硸硹硺硻硽",6,"场尝常长偿肠厂敞畅唱倡超抄钞朝嘲潮巢吵炒车扯撤掣彻澈郴臣辰尘晨忱沉陈趁衬撑称城橙成呈乘程惩澄诚承逞骋秤吃痴持匙池迟弛驰耻齿侈尺赤翅斥炽充冲虫崇宠抽酬畴踌稠愁筹仇绸瞅丑臭初出橱厨躇锄雏滁除楚"],["b440","碄碅碆碈碊碋碏碐碒碔碕碖碙碝碞碠碢碤碦碨",7,"碵碶碷碸確碻碼碽碿磀磂磃磄磆磇磈磌磍磎磏磑磒磓磖磗磘磚",9],["b480","磤磥磦磧磩磪磫磭",4,"磳磵磶磸磹磻",5,"礂礃礄礆",6,"础储矗搐触处揣川穿椽传船喘串疮窗幢床闯创吹炊捶锤垂春椿醇唇淳纯蠢戳绰疵茨磁雌辞慈瓷词此刺赐次聪葱囱匆从丛凑粗醋簇促蹿篡窜摧崔催脆瘁粹淬翠村存寸磋撮搓措挫错搭达答瘩打大呆歹傣戴带殆代贷袋待逮"],["b540","礍",5,"礔",9,"礟",4,"礥",14,"礵",4,"礽礿祂祃祄祅祇祊",8,"祔祕祘祙祡祣"],["b580","祤祦祩祪祫祬祮祰",6,"祹祻",4,"禂禃禆禇禈禉禋禌禍禎禐禑禒怠耽担丹单郸掸胆旦氮但惮淡诞弹蛋当挡党荡档刀捣蹈倒岛祷导到稻悼道盗德得的蹬灯登等瞪凳邓堤低滴迪敌笛狄涤翟嫡抵底地蒂第帝弟递缔颠掂滇碘点典靛垫电佃甸店惦奠淀殿碉叼雕凋刁掉吊钓调跌爹碟蝶迭谍叠"],["b640","禓",6,"禛",11,"禨",10,"禴",4,"禼禿秂秄秅秇秈秊秌秎秏秐秓秔秖秗秙",5,"秠秡秢秥秨秪"],["b680","秬秮秱",6,"秹秺秼秾秿稁稄稅稇稈稉稊稌稏",4,"稕稖稘稙稛稜丁盯叮钉顶鼎锭定订丢东冬董懂动栋侗恫冻洞兜抖斗陡豆逗痘都督毒犊独读堵睹赌杜镀肚度渡妒端短锻段断缎堆兑队对墩吨蹲敦顿囤钝盾遁掇哆多夺垛躲朵跺舵剁惰堕蛾峨鹅俄额讹娥恶厄扼遏鄂饿恩而儿耳尔饵洱二"],["b740","稝稟稡稢稤",14,"稴稵稶稸稺稾穀",5,"穇",9,"穒",4,"穘",16],["b780","穩",6,"穱穲穳穵穻穼穽穾窂窅窇窉窊窋窌窎窏窐窓窔窙窚窛窞窡窢贰发罚筏伐乏阀法珐藩帆番翻樊矾钒繁凡烦反返范贩犯饭泛坊芳方肪房防妨仿访纺放菲非啡飞肥匪诽吠肺废沸费芬酚吩氛分纷坟焚汾粉奋份忿愤粪丰封枫蜂峰锋风疯烽逢冯缝讽奉凤佛否夫敷肤孵扶拂辐幅氟符伏俘服"],["b840","窣窤窧窩窪窫窮",4,"窴",10,"竀",10,"竌",9,"竗竘竚竛竜竝竡竢竤竧",5,"竮竰竱竲竳"],["b880","竴",4,"竻竼竾笀笁笂笅笇笉笌笍笎笐笒笓笖笗笘笚笜笝笟笡笢笣笧笩笭浮涪福袱弗甫抚辅俯釜斧脯腑府腐赴副覆赋复傅付阜父腹负富讣附妇缚咐噶嘎该改概钙盖溉干甘杆柑竿肝赶感秆敢赣冈刚钢缸肛纲岗港杠篙皋高膏羔糕搞镐稿告哥歌搁戈鸽胳疙割革葛格蛤阁隔铬个各给根跟耕更庚羹"],["b940","笯笰笲笴笵笶笷笹笻笽笿",5,"筆筈筊筍筎筓筕筗筙筜筞筟筡筣",10,"筯筰筳筴筶筸筺筼筽筿箁箂箃箄箆",6,"箎箏"],["b980","箑箒箓箖箘箙箚箛箞箟箠箣箤箥箮箯箰箲箳箵箶箷箹",7,"篂篃範埂耿梗工攻功恭龚供躬公宫弓巩汞拱贡共钩勾沟苟狗垢构购够辜菇咕箍估沽孤姑鼓古蛊骨谷股故顾固雇刮瓜剐寡挂褂乖拐怪棺关官冠观管馆罐惯灌贯光广逛瑰规圭硅归龟闺轨鬼诡癸桂柜跪贵刽辊滚棍锅郭国果裹过哈"],["ba40","篅篈築篊篋篍篎篏篐篒篔",4,"篛篜篞篟篠篢篣篤篧篨篩篫篬篭篯篰篲",4,"篸篹篺篻篽篿",7,"簈簉簊簍簎簐",5,"簗簘簙"],["ba80","簚",4,"簠",5,"簨簩簫",12,"簹",5,"籂骸孩海氦亥害骇酣憨邯韩含涵寒函喊罕翰撼捍旱憾悍焊汗汉夯杭航壕嚎豪毫郝好耗号浩呵喝荷菏核禾和何合盒貉阂河涸赫褐鹤贺嘿黑痕很狠恨哼亨横衡恒轰哄烘虹鸿洪宏弘红喉侯猴吼厚候后呼乎忽瑚壶葫胡蝴狐糊湖"],["bb40","籃",9,"籎",36,"籵",5,"籾",9],["bb80","粈粊",6,"粓粔粖粙粚粛粠粡粣粦粧粨粩粫粬粭粯粰粴",4,"粺粻弧虎唬护互沪户花哗华猾滑画划化话槐徊怀淮坏欢环桓还缓换患唤痪豢焕涣宦幻荒慌黄磺蝗簧皇凰惶煌晃幌恍谎灰挥辉徽恢蛔回毁悔慧卉惠晦贿秽会烩汇讳诲绘荤昏婚魂浑混豁活伙火获或惑霍货祸击圾基机畸稽积箕"],["bc40","粿糀糂糃糄糆糉糋糎",6,"糘糚糛糝糞糡",6,"糩",5,"糰",7,"糹糺糼",13,"紋",5],["bc80","紑",14,"紡紣紤紥紦紨紩紪紬紭紮細",6,"肌饥迹激讥鸡姬绩缉吉极棘辑籍集及急疾汲即嫉级挤几脊己蓟技冀季伎祭剂悸济寄寂计记既忌际妓继纪嘉枷夹佳家加荚颊贾甲钾假稼价架驾嫁歼监坚尖笺间煎兼肩艰奸缄茧检柬碱硷拣捡简俭剪减荐槛鉴践贱见键箭件"],["bd40","紷",54,"絯",7],["bd80","絸",32,"健舰剑饯渐溅涧建僵姜将浆江疆蒋桨奖讲匠酱降蕉椒礁焦胶交郊浇骄娇嚼搅铰矫侥脚狡角饺缴绞剿教酵轿较叫窖揭接皆秸街阶截劫节桔杰捷睫竭洁结解姐戒藉芥界借介疥诫届巾筋斤金今津襟紧锦仅谨进靳晋禁近烬浸"],["be40","継",12,"綧",6,"綯",42],["be80","線",32,"尽劲荆兢茎睛晶鲸京惊精粳经井警景颈静境敬镜径痉靖竟竞净炯窘揪究纠玖韭久灸九酒厩救旧臼舅咎就疚鞠拘狙疽居驹菊局咀矩举沮聚拒据巨具距踞锯俱句惧炬剧捐鹃娟倦眷卷绢撅攫抉掘倔爵觉决诀绝均菌钧军君峻"],["bf40","緻",62],["bf80","縺縼",4,"繂",4,"繈",21,"俊竣浚郡骏喀咖卡咯开揩楷凯慨刊堪勘坎砍看康慷糠扛抗亢炕考拷烤靠坷苛柯棵磕颗科壳咳可渴克刻客课肯啃垦恳坑吭空恐孔控抠口扣寇枯哭窟苦酷库裤夸垮挎跨胯块筷侩快宽款匡筐狂框矿眶旷况亏盔岿窥葵奎魁傀"],["c040","繞",35,"纃",23,"纜纝纞"],["c080","纮纴纻纼绖绤绬绹缊缐缞缷缹缻",6,"罃罆",9,"罒罓馈愧溃坤昆捆困括扩廓阔垃拉喇蜡腊辣啦莱来赖蓝婪栏拦篮阑兰澜谰揽览懒缆烂滥琅榔狼廊郎朗浪捞劳牢老佬姥酪烙涝勒乐雷镭蕾磊累儡垒擂肋类泪棱楞冷厘梨犁黎篱狸离漓理李里鲤礼莉荔吏栗丽厉励砾历利傈例俐"],["c140","罖罙罛罜罝罞罠罣",4,"罫罬罭罯罰罳罵罶罷罸罺罻罼罽罿羀羂",7,"羋羍羏",4,"羕",4,"羛羜羠羢羣羥羦羨",6,"羱"],["c180","羳",4,"羺羻羾翀翂翃翄翆翇翈翉翋翍翏",4,"翖翗翙",5,"翢翣痢立粒沥隶力璃哩俩联莲连镰廉怜涟帘敛脸链恋炼练粮凉梁粱良两辆量晾亮谅撩聊僚疗燎寥辽潦了撂镣廖料列裂烈劣猎琳林磷霖临邻鳞淋凛赁吝拎玲菱零龄铃伶羚凌灵陵岭领另令溜琉榴硫馏留刘瘤流柳六龙聋咙笼窿"],["c240","翤翧翨翪翫翬翭翯翲翴",6,"翽翾翿耂耇耈耉耊耎耏耑耓耚耛耝耞耟耡耣耤耫",5,"耲耴耹耺耼耾聀聁聄聅聇聈聉聎聏聐聑聓聕聖聗"],["c280","聙聛",13,"聫",5,"聲",11,"隆垄拢陇楼娄搂篓漏陋芦卢颅庐炉掳卤虏鲁麓碌露路赂鹿潞禄录陆戮驴吕铝侣旅履屡缕虑氯律率滤绿峦挛孪滦卵乱掠略抡轮伦仑沦纶论萝螺罗逻锣箩骡裸落洛骆络妈麻玛码蚂马骂嘛吗埋买麦卖迈脉瞒馒蛮满蔓曼慢漫"],["c340","聾肁肂肅肈肊肍",5,"肔肕肗肙肞肣肦肧肨肬肰肳肵肶肸肹肻胅胇",4,"胏",6,"胘胟胠胢胣胦胮胵胷胹胻胾胿脀脁脃脄脅脇脈脋"],["c380","脌脕脗脙脛脜脝脟",12,"脭脮脰脳脴脵脷脹",4,"脿谩芒茫盲氓忙莽猫茅锚毛矛铆卯茂冒帽貌贸么玫枚梅酶霉煤没眉媒镁每美昧寐妹媚门闷们萌蒙檬盟锰猛梦孟眯醚靡糜迷谜弥米秘觅泌蜜密幂棉眠绵冕免勉娩缅面苗描瞄藐秒渺庙妙蔑灭民抿皿敏悯闽明螟鸣铭名命谬摸"],["c440","腀",5,"腇腉腍腎腏腒腖腗腘腛",4,"腡腢腣腤腦腨腪腫腬腯腲腳腵腶腷腸膁膃",4,"膉膋膌膍膎膐膒",5,"膙膚膞",4,"膤膥"],["c480","膧膩膫",7,"膴",5,"膼膽膾膿臄臅臇臈臉臋臍",6,"摹蘑模膜磨摩魔抹末莫墨默沫漠寞陌谋牟某拇牡亩姆母墓暮幕募慕木目睦牧穆拿哪呐钠那娜纳氖乃奶耐奈南男难囊挠脑恼闹淖呢馁内嫩能妮霓倪泥尼拟你匿腻逆溺蔫拈年碾撵捻念娘酿鸟尿捏聂孽啮镊镍涅您柠狞凝宁"],["c540","臔",14,"臤臥臦臨臩臫臮",4,"臵",5,"臽臿舃與",4,"舎舏舑舓舕",5,"舝舠舤舥舦舧舩舮舲舺舼舽舿"],["c580","艀艁艂艃艅艆艈艊艌艍艎艐",7,"艙艛艜艝艞艠",7,"艩拧泞牛扭钮纽脓浓农弄奴努怒女暖虐疟挪懦糯诺哦欧鸥殴藕呕偶沤啪趴爬帕怕琶拍排牌徘湃派攀潘盘磐盼畔判叛乓庞旁耪胖抛咆刨炮袍跑泡呸胚培裴赔陪配佩沛喷盆砰抨烹澎彭蓬棚硼篷膨朋鹏捧碰坯砒霹批披劈琵毗"],["c640","艪艫艬艭艱艵艶艷艸艻艼芀芁芃芅芆芇芉芌芐芓芔芕芖芚芛芞芠芢芣芧芲芵芶芺芻芼芿苀苂苃苅苆苉苐苖苙苚苝苢苧苨苩苪苬苭苮苰苲苳苵苶苸"],["c680","苺苼",4,"茊茋茍茐茒茓茖茘茙茝",9,"茩茪茮茰茲茷茻茽啤脾疲皮匹痞僻屁譬篇偏片骗飘漂瓢票撇瞥拼频贫品聘乒坪苹萍平凭瓶评屏坡泼颇婆破魄迫粕剖扑铺仆莆葡菩蒲埔朴圃普浦谱曝瀑期欺栖戚妻七凄漆柒沏其棋奇歧畦崎脐齐旗祈祁骑起岂乞企启契砌器气迄弃汽泣讫掐"],["c740","茾茿荁荂荄荅荈荊",4,"荓荕",4,"荝荢荰",6,"荹荺荾",6,"莇莈莊莋莌莍莏莐莑莔莕莖莗莙莚莝莟莡",6,"莬莭莮"],["c780","莯莵莻莾莿菂菃菄菆菈菉菋菍菎菐菑菒菓菕菗菙菚菛菞菢菣菤菦菧菨菫菬菭恰洽牵扦钎铅千迁签仟谦乾黔钱钳前潜遣浅谴堑嵌欠歉枪呛腔羌墙蔷强抢橇锹敲悄桥瞧乔侨巧鞘撬翘峭俏窍切茄且怯窃钦侵亲秦琴勤芹擒禽寝沁青轻氢倾卿清擎晴氰情顷请庆琼穷秋丘邱球求囚酋泅趋区蛆曲躯屈驱渠"],["c840","菮華菳",4,"菺菻菼菾菿萀萂萅萇萈萉萊萐萒",5,"萙萚萛萞",5,"萩",7,"萲",5,"萹萺萻萾",7,"葇葈葉"],["c880","葊",6,"葒",4,"葘葝葞葟葠葢葤",4,"葪葮葯葰葲葴葷葹葻葼取娶龋趣去圈颧权醛泉全痊拳犬券劝缺炔瘸却鹊榷确雀裙群然燃冉染瓤壤攘嚷让饶扰绕惹热壬仁人忍韧任认刃妊纫扔仍日戎茸蓉荣融熔溶容绒冗揉柔肉茹蠕儒孺如辱乳汝入褥软阮蕊瑞锐闰润若弱撒洒萨腮鳃塞赛三叁"],["c940","葽",4,"蒃蒄蒅蒆蒊蒍蒏",7,"蒘蒚蒛蒝蒞蒟蒠蒢",12,"蒰蒱蒳蒵蒶蒷蒻蒼蒾蓀蓂蓃蓅蓆蓇蓈蓋蓌蓎蓏蓒蓔蓕蓗"],["c980","蓘",4,"蓞蓡蓢蓤蓧",4,"蓭蓮蓯蓱",10,"蓽蓾蔀蔁蔂伞散桑嗓丧搔骚扫嫂瑟色涩森僧莎砂杀刹沙纱傻啥煞筛晒珊苫杉山删煽衫闪陕擅赡膳善汕扇缮墒伤商赏晌上尚裳梢捎稍烧芍勺韶少哨邵绍奢赊蛇舌舍赦摄射慑涉社设砷申呻伸身深娠绅神沈审婶甚肾慎渗声生甥牲升绳"],["ca40","蔃",8,"蔍蔎蔏蔐蔒蔔蔕蔖蔘蔙蔛蔜蔝蔞蔠蔢",8,"蔭",9,"蔾",4,"蕄蕅蕆蕇蕋",10],["ca80","蕗蕘蕚蕛蕜蕝蕟",4,"蕥蕦蕧蕩",8,"蕳蕵蕶蕷蕸蕼蕽蕿薀薁省盛剩胜圣师失狮施湿诗尸虱十石拾时什食蚀实识史矢使屎驶始式示士世柿事拭誓逝势是嗜噬适仕侍释饰氏市恃室视试收手首守寿授售受瘦兽蔬枢梳殊抒输叔舒淑疏书赎孰熟薯暑曙署蜀黍鼠属术述树束戍竖墅庶数漱"],["cb40","薂薃薆薈",6,"薐",10,"薝",6,"薥薦薧薩薫薬薭薱",5,"薸薺",6,"藂",6,"藊",4,"藑藒"],["cb80","藔藖",5,"藝",6,"藥藦藧藨藪",14,"恕刷耍摔衰甩帅栓拴霜双爽谁水睡税吮瞬顺舜说硕朔烁斯撕嘶思私司丝死肆寺嗣四伺似饲巳松耸怂颂送宋讼诵搜艘擞嗽苏酥俗素速粟僳塑溯宿诉肃酸蒜算虽隋随绥髓碎岁穗遂隧祟孙损笋蓑梭唆缩琐索锁所塌他它她塔"],["cc40","藹藺藼藽藾蘀",4,"蘆",10,"蘒蘓蘔蘕蘗",15,"蘨蘪",13,"蘹蘺蘻蘽蘾蘿虀"],["cc80","虁",11,"虒虓處",4,"虛虜虝號虠虡虣",7,"獭挞蹋踏胎苔抬台泰酞太态汰坍摊贪瘫滩坛檀痰潭谭谈坦毯袒碳探叹炭汤塘搪堂棠膛唐糖倘躺淌趟烫掏涛滔绦萄桃逃淘陶讨套特藤腾疼誊梯剔踢锑提题蹄啼体替嚏惕涕剃屉天添填田甜恬舔腆挑条迢眺跳贴铁帖厅听烃"],["cd40","虭虯虰虲",6,"蚃",6,"蚎",4,"蚔蚖",5,"蚞",4,"蚥蚦蚫蚭蚮蚲蚳蚷蚸蚹蚻",4,"蛁蛂蛃蛅蛈蛌蛍蛒蛓蛕蛖蛗蛚蛜"],["cd80","蛝蛠蛡蛢蛣蛥蛦蛧蛨蛪蛫蛬蛯蛵蛶蛷蛺蛻蛼蛽蛿蜁蜄蜅蜆蜋蜌蜎蜏蜐蜑蜔蜖汀廷停亭庭挺艇通桐酮瞳同铜彤童桶捅筒统痛偷投头透凸秃突图徒途涂屠土吐兔湍团推颓腿蜕褪退吞屯臀拖托脱鸵陀驮驼椭妥拓唾挖哇蛙洼娃瓦袜歪外豌弯湾玩顽丸烷完碗挽晚皖惋宛婉万腕汪王亡枉网往旺望忘妄威"],["ce40","蜙蜛蜝蜟蜠蜤蜦蜧蜨蜪蜫蜬蜭蜯蜰蜲蜳蜵蜶蜸蜹蜺蜼蜽蝀",6,"蝊蝋蝍蝏蝐蝑蝒蝔蝕蝖蝘蝚",5,"蝡蝢蝦",7,"蝯蝱蝲蝳蝵"],["ce80","蝷蝸蝹蝺蝿螀螁螄螆螇螉螊螌螎",4,"螔螕螖螘",6,"螠",4,"巍微危韦违桅围唯惟为潍维苇萎委伟伪尾纬未蔚味畏胃喂魏位渭谓尉慰卫瘟温蚊文闻纹吻稳紊问嗡翁瓮挝蜗涡窝我斡卧握沃巫呜钨乌污诬屋无芜梧吾吴毋武五捂午舞伍侮坞戊雾晤物勿务悟误昔熙析西硒矽晰嘻吸锡牺"],["cf40","螥螦螧螩螪螮螰螱螲螴螶螷螸螹螻螼螾螿蟁",4,"蟇蟈蟉蟌",4,"蟔",6,"蟜蟝蟞蟟蟡蟢蟣蟤蟦蟧蟨蟩蟫蟬蟭蟯",9],["cf80","蟺蟻蟼蟽蟿蠀蠁蠂蠄",5,"蠋",7,"蠔蠗蠘蠙蠚蠜",4,"蠣稀息希悉膝夕惜熄烯溪汐犀檄袭席习媳喜铣洗系隙戏细瞎虾匣霞辖暇峡侠狭下厦夏吓掀锨先仙鲜纤咸贤衔舷闲涎弦嫌显险现献县腺馅羡宪陷限线相厢镶香箱襄湘乡翔祥详想响享项巷橡像向象萧硝霄削哮嚣销消宵淆晓"],["d040","蠤",13,"蠳",5,"蠺蠻蠽蠾蠿衁衂衃衆",5,"衎",5,"衕衖衘衚",6,"衦衧衪衭衯衱衳衴衵衶衸衹衺"],["d080","衻衼袀袃袆袇袉袊袌袎袏袐袑袓袔袕袗",4,"袝",4,"袣袥",5,"小孝校肖啸笑效楔些歇蝎鞋协挟携邪斜胁谐写械卸蟹懈泄泻谢屑薪芯锌欣辛新忻心信衅星腥猩惺兴刑型形邢行醒幸杏性姓兄凶胸匈汹雄熊休修羞朽嗅锈秀袖绣墟戌需虚嘘须徐许蓄酗叙旭序畜恤絮婿绪续轩喧宣悬旋玄"],["d140","袬袮袯袰袲",4,"袸袹袺袻袽袾袿裀裃裄裇裈裊裋裌裍裏裐裑裓裖裗裚",4,"裠裡裦裧裩",6,"裲裵裶裷裺裻製裿褀褁褃",5],["d180","褉褋",4,"褑褔",4,"褜",4,"褢褣褤褦褧褨褩褬褭褮褯褱褲褳褵褷选癣眩绚靴薛学穴雪血勋熏循旬询寻驯巡殉汛训讯逊迅压押鸦鸭呀丫芽牙蚜崖衙涯雅哑亚讶焉咽阉烟淹盐严研蜒岩延言颜阎炎沿奄掩眼衍演艳堰燕厌砚雁唁彦焰宴谚验殃央鸯秧杨扬佯疡羊洋阳氧仰痒养样漾邀腰妖瑶"],["d240","褸",8,"襂襃襅",24,"襠",5,"襧",19,"襼"],["d280","襽襾覀覂覄覅覇",26,"摇尧遥窑谣姚咬舀药要耀椰噎耶爷野冶也页掖业叶曳腋夜液一壹医揖铱依伊衣颐夷遗移仪胰疑沂宜姨彝椅蚁倚已乙矣以艺抑易邑屹亿役臆逸肄疫亦裔意毅忆义益溢诣议谊译异翼翌绎茵荫因殷音阴姻吟银淫寅饮尹引隐"],["d340","覢",30,"觃觍觓觔觕觗觘觙觛觝觟觠觡觢觤觧觨觩觪觬觭觮觰觱觲觴",6],["d380","觻",4,"訁",5,"計",21,"印英樱婴鹰应缨莹萤营荧蝇迎赢盈影颖硬映哟拥佣臃痈庸雍踊蛹咏泳涌永恿勇用幽优悠忧尤由邮铀犹油游酉有友右佑釉诱又幼迂淤于盂榆虞愚舆余俞逾鱼愉渝渔隅予娱雨与屿禹宇语羽玉域芋郁吁遇喻峪御愈欲狱育誉"],["d440","訞",31,"訿",8,"詉",21],["d480","詟",25,"詺",6,"浴寓裕预豫驭鸳渊冤元垣袁原援辕园员圆猿源缘远苑愿怨院曰约越跃钥岳粤月悦阅耘云郧匀陨允运蕴酝晕韵孕匝砸杂栽哉灾宰载再在咱攒暂赞赃脏葬遭糟凿藻枣早澡蚤躁噪造皂灶燥责择则泽贼怎增憎曾赠扎喳渣札轧"],["d540","誁",7,"誋",7,"誔",46],["d580","諃",32,"铡闸眨栅榨咋乍炸诈摘斋宅窄债寨瞻毡詹粘沾盏斩辗崭展蘸栈占战站湛绽樟章彰漳张掌涨杖丈帐账仗胀瘴障招昭找沼赵照罩兆肇召遮折哲蛰辙者锗蔗这浙珍斟真甄砧臻贞针侦枕疹诊震振镇阵蒸挣睁征狰争怔整拯正政"],["d640","諤",34,"謈",27],["d680","謤謥謧",30,"帧症郑证芝枝支吱蜘知肢脂汁之织职直植殖执值侄址指止趾只旨纸志挚掷至致置帜峙制智秩稚质炙痔滞治窒中盅忠钟衷终种肿重仲众舟周州洲诌粥轴肘帚咒皱宙昼骤珠株蛛朱猪诸诛逐竹烛煮拄瞩嘱主著柱助蛀贮铸筑"],["d740","譆",31,"譧",4,"譭",25],["d780","讇",24,"讬讱讻诇诐诪谉谞住注祝驻抓爪拽专砖转撰赚篆桩庄装妆撞壮状椎锥追赘坠缀谆准捉拙卓桌琢茁酌啄着灼浊兹咨资姿滋淄孜紫仔籽滓子自渍字鬃棕踪宗综总纵邹走奏揍租足卒族祖诅阻组钻纂嘴醉最罪尊遵昨左佐柞做作坐座"],["d840","谸",8,"豂豃豄豅豈豊豋豍",7,"豖豗豘豙豛",5,"豣",6,"豬",6,"豴豵豶豷豻",6,"貃貄貆貇"],["d880","貈貋貍",6,"貕貖貗貙",20,"亍丌兀丐廿卅丕亘丞鬲孬噩丨禺丿匕乇夭爻卮氐囟胤馗毓睾鼗丶亟鼐乜乩亓芈孛啬嘏仄厍厝厣厥厮靥赝匚叵匦匮匾赜卦卣刂刈刎刭刳刿剀剌剞剡剜蒯剽劂劁劐劓冂罔亻仃仉仂仨仡仫仞伛仳伢佤仵伥伧伉伫佞佧攸佚佝"],["d940","貮",62],["d980","賭",32,"佟佗伲伽佶佴侑侉侃侏佾佻侪佼侬侔俦俨俪俅俚俣俜俑俟俸倩偌俳倬倏倮倭俾倜倌倥倨偾偃偕偈偎偬偻傥傧傩傺僖儆僭僬僦僮儇儋仝氽佘佥俎龠汆籴兮巽黉馘冁夔勹匍訇匐凫夙兕亠兖亳衮袤亵脔裒禀嬴蠃羸冫冱冽冼"],["da40","贎",14,"贠赑赒赗赟赥赨赩赪赬赮赯赱赲赸",8,"趂趃趆趇趈趉趌",4,"趒趓趕",9,"趠趡"],["da80","趢趤",12,"趲趶趷趹趻趽跀跁跂跅跇跈跉跊跍跐跒跓跔凇冖冢冥讠讦讧讪讴讵讷诂诃诋诏诎诒诓诔诖诘诙诜诟诠诤诨诩诮诰诳诶诹诼诿谀谂谄谇谌谏谑谒谔谕谖谙谛谘谝谟谠谡谥谧谪谫谮谯谲谳谵谶卩卺阝阢阡阱阪阽阼陂陉陔陟陧陬陲陴隈隍隗隰邗邛邝邙邬邡邴邳邶邺"],["db40","跕跘跙跜跠跡跢跥跦跧跩跭跮跰跱跲跴跶跼跾",6,"踆踇踈踋踍踎踐踑踒踓踕",7,"踠踡踤",4,"踫踭踰踲踳踴踶踷踸踻踼踾"],["db80","踿蹃蹅蹆蹌",4,"蹓",5,"蹚",11,"蹧蹨蹪蹫蹮蹱邸邰郏郅邾郐郄郇郓郦郢郜郗郛郫郯郾鄄鄢鄞鄣鄱鄯鄹酃酆刍奂劢劬劭劾哿勐勖勰叟燮矍廴凵凼鬯厶弁畚巯坌垩垡塾墼壅壑圩圬圪圳圹圮圯坜圻坂坩垅坫垆坼坻坨坭坶坳垭垤垌垲埏垧垴垓垠埕埘埚埙埒垸埴埯埸埤埝"],["dc40","蹳蹵蹷",4,"蹽蹾躀躂躃躄躆躈",6,"躑躒躓躕",6,"躝躟",11,"躭躮躰躱躳",6,"躻",7],["dc80","軃",10,"軏",21,"堋堍埽埭堀堞堙塄堠塥塬墁墉墚墀馨鼙懿艹艽艿芏芊芨芄芎芑芗芙芫芸芾芰苈苊苣芘芷芮苋苌苁芩芴芡芪芟苄苎芤苡茉苷苤茏茇苜苴苒苘茌苻苓茑茚茆茔茕苠苕茜荑荛荜茈莒茼茴茱莛荞茯荏荇荃荟荀茗荠茭茺茳荦荥"],["dd40","軥",62],["dd80","輤",32,"荨茛荩荬荪荭荮莰荸莳莴莠莪莓莜莅荼莶莩荽莸荻莘莞莨莺莼菁萁菥菘堇萘萋菝菽菖萜萸萑萆菔菟萏萃菸菹菪菅菀萦菰菡葜葑葚葙葳蒇蒈葺蒉葸萼葆葩葶蒌蒎萱葭蓁蓍蓐蓦蒽蓓蓊蒿蒺蓠蒡蒹蒴蒗蓥蓣蔌甍蔸蓰蔹蔟蔺"],["de40","轅",32,"轪辀辌辒辝辠辡辢辤辥辦辧辪辬辭辮辯農辳辴辵辷辸辺辻込辿迀迃迆"],["de80","迉",4,"迏迒迖迗迚迠迡迣迧迬迯迱迲迴迵迶迺迻迼迾迿逇逈逌逎逓逕逘蕖蔻蓿蓼蕙蕈蕨蕤蕞蕺瞢蕃蕲蕻薤薨薇薏蕹薮薜薅薹薷薰藓藁藜藿蘧蘅蘩蘖蘼廾弈夼奁耷奕奚奘匏尢尥尬尴扌扪抟抻拊拚拗拮挢拶挹捋捃掭揶捱捺掎掴捭掬掊捩掮掼揲揸揠揿揄揞揎摒揆掾摅摁搋搛搠搌搦搡摞撄摭撖"],["df40","這逜連逤逥逧",5,"逰",4,"逷逹逺逽逿遀遃遅遆遈",4,"過達違遖遙遚遜",5,"遤遦遧適遪遫遬遯",4,"遶",6,"遾邁"],["df80","還邅邆邇邉邊邌",4,"邒邔邖邘邚邜邞邟邠邤邥邧邨邩邫邭邲邷邼邽邿郀摺撷撸撙撺擀擐擗擤擢攉攥攮弋忒甙弑卟叱叽叩叨叻吒吖吆呋呒呓呔呖呃吡呗呙吣吲咂咔呷呱呤咚咛咄呶呦咝哐咭哂咴哒咧咦哓哔呲咣哕咻咿哌哙哚哜咩咪咤哝哏哞唛哧唠哽唔哳唢唣唏唑唧唪啧喏喵啉啭啁啕唿啐唼"],["e040","郂郃郆郈郉郋郌郍郒郔郕郖郘郙郚郞郟郠郣郤郥郩郪郬郮郰郱郲郳郵郶郷郹郺郻郼郿鄀鄁鄃鄅",19,"鄚鄛鄜"],["e080","鄝鄟鄠鄡鄤",10,"鄰鄲",6,"鄺",8,"酄唷啖啵啶啷唳唰啜喋嗒喃喱喹喈喁喟啾嗖喑啻嗟喽喾喔喙嗪嗷嗉嘟嗑嗫嗬嗔嗦嗝嗄嗯嗥嗲嗳嗌嗍嗨嗵嗤辔嘞嘈嘌嘁嘤嘣嗾嘀嘧嘭噘嘹噗嘬噍噢噙噜噌噔嚆噤噱噫噻噼嚅嚓嚯囔囗囝囡囵囫囹囿圄圊圉圜帏帙帔帑帱帻帼"],["e140","酅酇酈酑酓酔酕酖酘酙酛酜酟酠酦酧酨酫酭酳酺酻酼醀",4,"醆醈醊醎醏醓",6,"醜",5,"醤",5,"醫醬醰醱醲醳醶醷醸醹醻"],["e180","醼",10,"釈釋釐釒",9,"針",8,"帷幄幔幛幞幡岌屺岍岐岖岈岘岙岑岚岜岵岢岽岬岫岱岣峁岷峄峒峤峋峥崂崃崧崦崮崤崞崆崛嵘崾崴崽嵬嵛嵯嵝嵫嵋嵊嵩嵴嶂嶙嶝豳嶷巅彳彷徂徇徉後徕徙徜徨徭徵徼衢彡犭犰犴犷犸狃狁狎狍狒狨狯狩狲狴狷猁狳猃狺"],["e240","釦",62],["e280","鈥",32,"狻猗猓猡猊猞猝猕猢猹猥猬猸猱獐獍獗獠獬獯獾舛夥飧夤夂饣饧",5,"饴饷饽馀馄馇馊馍馐馑馓馔馕庀庑庋庖庥庠庹庵庾庳赓廒廑廛廨廪膺忄忉忖忏怃忮怄忡忤忾怅怆忪忭忸怙怵怦怛怏怍怩怫怊怿怡恸恹恻恺恂"],["e340","鉆",45,"鉵",16],["e380","銆",7,"銏",24,"恪恽悖悚悭悝悃悒悌悛惬悻悱惝惘惆惚悴愠愦愕愣惴愀愎愫慊慵憬憔憧憷懔懵忝隳闩闫闱闳闵闶闼闾阃阄阆阈阊阋阌阍阏阒阕阖阗阙阚丬爿戕氵汔汜汊沣沅沐沔沌汨汩汴汶沆沩泐泔沭泷泸泱泗沲泠泖泺泫泮沱泓泯泾"],["e440","銨",5,"銯",24,"鋉",31],["e480","鋩",32,"洹洧洌浃浈洇洄洙洎洫浍洮洵洚浏浒浔洳涑浯涞涠浞涓涔浜浠浼浣渚淇淅淞渎涿淠渑淦淝淙渖涫渌涮渫湮湎湫溲湟溆湓湔渲渥湄滟溱溘滠漭滢溥溧溽溻溷滗溴滏溏滂溟潢潆潇漤漕滹漯漶潋潴漪漉漩澉澍澌潸潲潼潺濑"],["e540","錊",51,"錿",10],["e580","鍊",31,"鍫濉澧澹澶濂濡濮濞濠濯瀚瀣瀛瀹瀵灏灞宀宄宕宓宥宸甯骞搴寤寮褰寰蹇謇辶迓迕迥迮迤迩迦迳迨逅逄逋逦逑逍逖逡逵逶逭逯遄遑遒遐遨遘遢遛暹遴遽邂邈邃邋彐彗彖彘尻咫屐屙孱屣屦羼弪弩弭艴弼鬻屮妁妃妍妩妪妣"],["e640","鍬",34,"鎐",27],["e680","鎬",29,"鏋鏌鏍妗姊妫妞妤姒妲妯姗妾娅娆姝娈姣姘姹娌娉娲娴娑娣娓婀婧婊婕娼婢婵胬媪媛婷婺媾嫫媲嫒嫔媸嫠嫣嫱嫖嫦嫘嫜嬉嬗嬖嬲嬷孀尕尜孚孥孳孑孓孢驵驷驸驺驿驽骀骁骅骈骊骐骒骓骖骘骛骜骝骟骠骢骣骥骧纟纡纣纥纨纩"],["e740","鏎",7,"鏗",54],["e780","鐎",32,"纭纰纾绀绁绂绉绋绌绐绔绗绛绠绡绨绫绮绯绱绲缍绶绺绻绾缁缂缃缇缈缋缌缏缑缒缗缙缜缛缟缡",6,"缪缫缬缭缯",4,"缵幺畿巛甾邕玎玑玮玢玟珏珂珑玷玳珀珉珈珥珙顼琊珩珧珞玺珲琏琪瑛琦琥琨琰琮琬"],["e840","鐯",14,"鐿",43,"鑬鑭鑮鑯"],["e880","鑰",20,"钑钖钘铇铏铓铔铚铦铻锜锠琛琚瑁瑜瑗瑕瑙瑷瑭瑾璜璎璀璁璇璋璞璨璩璐璧瓒璺韪韫韬杌杓杞杈杩枥枇杪杳枘枧杵枨枞枭枋杷杼柰栉柘栊柩枰栌柙枵柚枳柝栀柃枸柢栎柁柽栲栳桠桡桎桢桄桤梃栝桕桦桁桧桀栾桊桉栩梵梏桴桷梓桫棂楮棼椟椠棹"],["e940","锧锳锽镃镈镋镕镚镠镮镴镵長",7,"門",42],["e980","閫",32,"椤棰椋椁楗棣椐楱椹楠楂楝榄楫榀榘楸椴槌榇榈槎榉楦楣楹榛榧榻榫榭槔榱槁槊槟榕槠榍槿樯槭樗樘橥槲橄樾檠橐橛樵檎橹樽樨橘橼檑檐檩檗檫猷獒殁殂殇殄殒殓殍殚殛殡殪轫轭轱轲轳轵轶轸轷轹轺轼轾辁辂辄辇辋"],["ea40","闌",27,"闬闿阇阓阘阛阞阠阣",6,"阫阬阭阯阰阷阸阹阺阾陁陃陊陎陏陑陒陓陖陗"],["ea80","陘陙陚陜陝陞陠陣陥陦陫陭",4,"陳陸",12,"隇隉隊辍辎辏辘辚軎戋戗戛戟戢戡戥戤戬臧瓯瓴瓿甏甑甓攴旮旯旰昊昙杲昃昕昀炅曷昝昴昱昶昵耆晟晔晁晏晖晡晗晷暄暌暧暝暾曛曜曦曩贲贳贶贻贽赀赅赆赈赉赇赍赕赙觇觊觋觌觎觏觐觑牮犟牝牦牯牾牿犄犋犍犏犒挈挲掰"],["eb40","隌階隑隒隓隕隖隚際隝",9,"隨",7,"隱隲隴隵隷隸隺隻隿雂雃雈雊雋雐雑雓雔雖",9,"雡",6,"雫"],["eb80","雬雭雮雰雱雲雴雵雸雺電雼雽雿霂霃霅霊霋霌霐霑霒霔霕霗",4,"霝霟霠搿擘耄毪毳毽毵毹氅氇氆氍氕氘氙氚氡氩氤氪氲攵敕敫牍牒牖爰虢刖肟肜肓肼朊肽肱肫肭肴肷胧胨胩胪胛胂胄胙胍胗朐胝胫胱胴胭脍脎胲胼朕脒豚脶脞脬脘脲腈腌腓腴腙腚腱腠腩腼腽腭腧塍媵膈膂膑滕膣膪臌朦臊膻"],["ec40","霡",8,"霫霬霮霯霱霳",4,"霺霻霼霽霿",18,"靔靕靗靘靚靜靝靟靣靤靦靧靨靪",7],["ec80","靲靵靷",4,"靽",7,"鞆",4,"鞌鞎鞏鞐鞓鞕鞖鞗鞙",4,"臁膦欤欷欹歃歆歙飑飒飓飕飙飚殳彀毂觳斐齑斓於旆旄旃旌旎旒旖炀炜炖炝炻烀炷炫炱烨烊焐焓焖焯焱煳煜煨煅煲煊煸煺熘熳熵熨熠燠燔燧燹爝爨灬焘煦熹戾戽扃扈扉礻祀祆祉祛祜祓祚祢祗祠祯祧祺禅禊禚禧禳忑忐"],["ed40","鞞鞟鞡鞢鞤",6,"鞬鞮鞰鞱鞳鞵",46],["ed80","韤韥韨韮",4,"韴韷",23,"怼恝恚恧恁恙恣悫愆愍慝憩憝懋懑戆肀聿沓泶淼矶矸砀砉砗砘砑斫砭砜砝砹砺砻砟砼砥砬砣砩硎硭硖硗砦硐硇硌硪碛碓碚碇碜碡碣碲碹碥磔磙磉磬磲礅磴礓礤礞礴龛黹黻黼盱眄眍盹眇眈眚眢眙眭眦眵眸睐睑睇睃睚睨"],["ee40","頏",62],["ee80","顎",32,"睢睥睿瞍睽瞀瞌瞑瞟瞠瞰瞵瞽町畀畎畋畈畛畲畹疃罘罡罟詈罨罴罱罹羁罾盍盥蠲钅钆钇钋钊钌钍钏钐钔钗钕钚钛钜钣钤钫钪钭钬钯钰钲钴钶",4,"钼钽钿铄铈",6,"铐铑铒铕铖铗铙铘铛铞铟铠铢铤铥铧铨铪"],["ef40","顯",5,"颋颎颒颕颙颣風",37,"飏飐飔飖飗飛飜飝飠",4],["ef80","飥飦飩",30,"铩铫铮铯铳铴铵铷铹铼铽铿锃锂锆锇锉锊锍锎锏锒",4,"锘锛锝锞锟锢锪锫锩锬锱锲锴锶锷锸锼锾锿镂锵镄镅镆镉镌镎镏镒镓镔镖镗镘镙镛镞镟镝镡镢镤",8,"镯镱镲镳锺矧矬雉秕秭秣秫稆嵇稃稂稞稔"],["f040","餈",4,"餎餏餑",28,"餯",26],["f080","饊",9,"饖",12,"饤饦饳饸饹饻饾馂馃馉稹稷穑黏馥穰皈皎皓皙皤瓞瓠甬鸠鸢鸨",4,"鸲鸱鸶鸸鸷鸹鸺鸾鹁鹂鹄鹆鹇鹈鹉鹋鹌鹎鹑鹕鹗鹚鹛鹜鹞鹣鹦",6,"鹱鹭鹳疒疔疖疠疝疬疣疳疴疸痄疱疰痃痂痖痍痣痨痦痤痫痧瘃痱痼痿瘐瘀瘅瘌瘗瘊瘥瘘瘕瘙"],["f140","馌馎馚",10,"馦馧馩",47],["f180","駙",32,"瘛瘼瘢瘠癀瘭瘰瘿瘵癃瘾瘳癍癞癔癜癖癫癯翊竦穸穹窀窆窈窕窦窠窬窨窭窳衤衩衲衽衿袂袢裆袷袼裉裢裎裣裥裱褚裼裨裾裰褡褙褓褛褊褴褫褶襁襦襻疋胥皲皴矜耒耔耖耜耠耢耥耦耧耩耨耱耋耵聃聆聍聒聩聱覃顸颀颃"],["f240","駺",62],["f280","騹",32,"颉颌颍颏颔颚颛颞颟颡颢颥颦虍虔虬虮虿虺虼虻蚨蚍蚋蚬蚝蚧蚣蚪蚓蚩蚶蛄蚵蛎蚰蚺蚱蚯蛉蛏蚴蛩蛱蛲蛭蛳蛐蜓蛞蛴蛟蛘蛑蜃蜇蛸蜈蜊蜍蜉蜣蜻蜞蜥蜮蜚蜾蝈蜴蜱蜩蜷蜿螂蜢蝽蝾蝻蝠蝰蝌蝮螋蝓蝣蝼蝤蝙蝥螓螯螨蟒"],["f340","驚",17,"驲骃骉骍骎骔骕骙骦骩",6,"骲骳骴骵骹骻骽骾骿髃髄髆",4,"髍髎髏髐髒體髕髖髗髙髚髛髜"],["f380","髝髞髠髢髣髤髥髧髨髩髪髬髮髰",8,"髺髼",6,"鬄鬅鬆蟆螈螅螭螗螃螫蟥螬螵螳蟋蟓螽蟑蟀蟊蟛蟪蟠蟮蠖蠓蟾蠊蠛蠡蠹蠼缶罂罄罅舐竺竽笈笃笄笕笊笫笏筇笸笪笙笮笱笠笥笤笳笾笞筘筚筅筵筌筝筠筮筻筢筲筱箐箦箧箸箬箝箨箅箪箜箢箫箴篑篁篌篝篚篥篦篪簌篾篼簏簖簋"],["f440","鬇鬉",5,"鬐鬑鬒鬔",10,"鬠鬡鬢鬤",10,"鬰鬱鬳",7,"鬽鬾鬿魀魆魊魋魌魎魐魒魓魕",5],["f480","魛",32,"簟簪簦簸籁籀臾舁舂舄臬衄舡舢舣舭舯舨舫舸舻舳舴舾艄艉艋艏艚艟艨衾袅袈裘裟襞羝羟羧羯羰羲籼敉粑粝粜粞粢粲粼粽糁糇糌糍糈糅糗糨艮暨羿翎翕翥翡翦翩翮翳糸絷綦綮繇纛麸麴赳趄趔趑趱赧赭豇豉酊酐酎酏酤"],["f540","魼",62],["f580","鮻",32,"酢酡酰酩酯酽酾酲酴酹醌醅醐醍醑醢醣醪醭醮醯醵醴醺豕鹾趸跫踅蹙蹩趵趿趼趺跄跖跗跚跞跎跏跛跆跬跷跸跣跹跻跤踉跽踔踝踟踬踮踣踯踺蹀踹踵踽踱蹉蹁蹂蹑蹒蹊蹰蹶蹼蹯蹴躅躏躔躐躜躞豸貂貊貅貘貔斛觖觞觚觜"],["f640","鯜",62],["f680","鰛",32,"觥觫觯訾謦靓雩雳雯霆霁霈霏霎霪霭霰霾龀龃龅",5,"龌黾鼋鼍隹隼隽雎雒瞿雠銎銮鋈錾鍪鏊鎏鐾鑫鱿鲂鲅鲆鲇鲈稣鲋鲎鲐鲑鲒鲔鲕鲚鲛鲞",5,"鲥",4,"鲫鲭鲮鲰",7,"鲺鲻鲼鲽鳄鳅鳆鳇鳊鳋"],["f740","鰼",62],["f780","鱻鱽鱾鲀鲃鲄鲉鲊鲌鲏鲓鲖鲗鲘鲙鲝鲪鲬鲯鲹鲾",4,"鳈鳉鳑鳒鳚鳛鳠鳡鳌",4,"鳓鳔鳕鳗鳘鳙鳜鳝鳟鳢靼鞅鞑鞒鞔鞯鞫鞣鞲鞴骱骰骷鹘骶骺骼髁髀髅髂髋髌髑魅魃魇魉魈魍魑飨餍餮饕饔髟髡髦髯髫髻髭髹鬈鬏鬓鬟鬣麽麾縻麂麇麈麋麒鏖麝麟黛黜黝黠黟黢黩黧黥黪黯鼢鼬鼯鼹鼷鼽鼾齄"],["f840","鳣",62],["f880","鴢",32],["f940","鵃",62],["f980","鶂",32],["fa40","鶣",62],["fa80","鷢",32],["fb40","鸃",27,"鸤鸧鸮鸰鸴鸻鸼鹀鹍鹐鹒鹓鹔鹖鹙鹝鹟鹠鹡鹢鹥鹮鹯鹲鹴",9,"麀"],["fb80","麁麃麄麅麆麉麊麌",5,"麔",8,"麞麠",5,"麧麨麩麪"],["fc40","麫",8,"麵麶麷麹麺麼麿",4,"黅黆黇黈黊黋黌黐黒黓黕黖黗黙黚點黡黣黤黦黨黫黬黭黮黰",8,"黺黽黿",6],["fc80","鼆",4,"鼌鼏鼑鼒鼔鼕鼖鼘鼚",5,"鼡鼣",8,"鼭鼮鼰鼱"],["fd40","鼲",4,"鼸鼺鼼鼿",4,"齅",10,"齒",38],["fd80","齹",5,"龁龂龍",11,"龜龝龞龡",4,"郎凉秊裏隣"],["fe40","兀嗀﨎﨏﨑﨓﨔礼﨟蘒﨡﨣﨤﨧﨨﨩"]]');

/***/ }),

/***/ "./node_modules/iconv-lite/encodings/tables/cp949.json":
/*!*************************************************************!*\
  !*** ./node_modules/iconv-lite/encodings/tables/cp949.json ***!
  \*************************************************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('[["0","\\u0000",127],["8141","갂갃갅갆갋",4,"갘갞갟갡갢갣갥",6,"갮갲갳갴"],["8161","갵갶갷갺갻갽갾갿걁",9,"걌걎",5,"걕"],["8181","걖걗걙걚걛걝",18,"걲걳걵걶걹걻",4,"겂겇겈겍겎겏겑겒겓겕",6,"겞겢",5,"겫겭겮겱",6,"겺겾겿곀곂곃곅곆곇곉곊곋곍",7,"곖곘",7,"곢곣곥곦곩곫곭곮곲곴곷",4,"곾곿괁괂괃괅괇",4,"괎괐괒괓"],["8241","괔괕괖괗괙괚괛괝괞괟괡",7,"괪괫괮",5],["8261","괶괷괹괺괻괽",6,"굆굈굊",5,"굑굒굓굕굖굗"],["8281","굙",7,"굢굤",7,"굮굯굱굲굷굸굹굺굾궀궃",4,"궊궋궍궎궏궑",10,"궞",5,"궥",17,"궸",7,"귂귃귅귆귇귉",6,"귒귔",7,"귝귞귟귡귢귣귥",18],["8341","귺귻귽귾긂",5,"긊긌긎",5,"긕",7],["8361","긝",18,"긲긳긵긶긹긻긼"],["8381","긽긾긿깂깄깇깈깉깋깏깑깒깓깕깗",4,"깞깢깣깤깦깧깪깫깭깮깯깱",6,"깺깾",5,"꺆",5,"꺍",46,"꺿껁껂껃껅",6,"껎껒",5,"껚껛껝",8],["8441","껦껧껩껪껬껮",5,"껵껶껷껹껺껻껽",8],["8461","꼆꼉꼊꼋꼌꼎꼏꼑",18],["8481","꼤",7,"꼮꼯꼱꼳꼵",6,"꼾꽀꽄꽅꽆꽇꽊",5,"꽑",10,"꽞",5,"꽦",18,"꽺",5,"꾁꾂꾃꾅꾆꾇꾉",6,"꾒꾓꾔꾖",5,"꾝",26,"꾺꾻꾽꾾"],["8541","꾿꿁",5,"꿊꿌꿏",4,"꿕",6,"꿝",4],["8561","꿢",5,"꿪",5,"꿲꿳꿵꿶꿷꿹",6,"뀂뀃"],["8581","뀅",6,"뀍뀎뀏뀑뀒뀓뀕",6,"뀞",9,"뀩",26,"끆끇끉끋끍끏끐끑끒끖끘끚끛끜끞",29,"끾끿낁낂낃낅",6,"낎낐낒",5,"낛낝낞낣낤"],["8641","낥낦낧낪낰낲낶낷낹낺낻낽",6,"냆냊",5,"냒"],["8661","냓냕냖냗냙",6,"냡냢냣냤냦",10],["8681","냱",22,"넊넍넎넏넑넔넕넖넗넚넞",4,"넦넧넩넪넫넭",6,"넶넺",5,"녂녃녅녆녇녉",6,"녒녓녖녗녙녚녛녝녞녟녡",22,"녺녻녽녾녿놁놃",4,"놊놌놎놏놐놑놕놖놗놙놚놛놝"],["8741","놞",9,"놩",15],["8761","놹",18,"뇍뇎뇏뇑뇒뇓뇕"],["8781","뇖",5,"뇞뇠",7,"뇪뇫뇭뇮뇯뇱",7,"뇺뇼뇾",5,"눆눇눉눊눍",6,"눖눘눚",5,"눡",18,"눵",6,"눽",26,"뉙뉚뉛뉝뉞뉟뉡",6,"뉪",4],["8841","뉯",4,"뉶",5,"뉽",6,"늆늇늈늊",4],["8861","늏늒늓늕늖늗늛",4,"늢늤늧늨늩늫늭늮늯늱늲늳늵늶늷"],["8881","늸",15,"닊닋닍닎닏닑닓",4,"닚닜닞닟닠닡닣닧닩닪닰닱닲닶닼닽닾댂댃댅댆댇댉",6,"댒댖",5,"댝",54,"덗덙덚덝덠덡덢덣"],["8941","덦덨덪덬덭덯덲덳덵덶덷덹",6,"뎂뎆",5,"뎍"],["8961","뎎뎏뎑뎒뎓뎕",10,"뎢",5,"뎩뎪뎫뎭"],["8981","뎮",21,"돆돇돉돊돍돏돑돒돓돖돘돚돜돞돟돡돢돣돥돦돧돩",18,"돽",18,"됑",6,"됙됚됛됝됞됟됡",6,"됪됬",7,"됵",15],["8a41","둅",10,"둒둓둕둖둗둙",6,"둢둤둦"],["8a61","둧",4,"둭",18,"뒁뒂"],["8a81","뒃",4,"뒉",19,"뒞",5,"뒥뒦뒧뒩뒪뒫뒭",7,"뒶뒸뒺",5,"듁듂듃듅듆듇듉",6,"듑듒듓듔듖",5,"듞듟듡듢듥듧",4,"듮듰듲",5,"듹",26,"딖딗딙딚딝"],["8b41","딞",5,"딦딫",4,"딲딳딵딶딷딹",6,"땂땆"],["8b61","땇땈땉땊땎땏땑땒땓땕",6,"땞땢",8],["8b81","땫",52,"떢떣떥떦떧떩떬떭떮떯떲떶",4,"떾떿뗁뗂뗃뗅",6,"뗎뗒",5,"뗙",18,"뗭",18],["8c41","똀",15,"똒똓똕똖똗똙",4],["8c61","똞",6,"똦",5,"똭",6,"똵",5],["8c81","똻",12,"뙉",26,"뙥뙦뙧뙩",50,"뚞뚟뚡뚢뚣뚥",5,"뚭뚮뚯뚰뚲",16],["8d41","뛃",16,"뛕",8],["8d61","뛞",17,"뛱뛲뛳뛵뛶뛷뛹뛺"],["8d81","뛻",4,"뜂뜃뜄뜆",33,"뜪뜫뜭뜮뜱",6,"뜺뜼",7,"띅띆띇띉띊띋띍",6,"띖",9,"띡띢띣띥띦띧띩",6,"띲띴띶",5,"띾띿랁랂랃랅",6,"랎랓랔랕랚랛랝랞"],["8e41","랟랡",6,"랪랮",5,"랶랷랹",8],["8e61","럂",4,"럈럊",19],["8e81","럞",13,"럮럯럱럲럳럵",6,"럾렂",4,"렊렋렍렎렏렑",6,"렚렜렞",5,"렦렧렩렪렫렭",6,"렶렺",5,"롁롂롃롅",11,"롒롔",7,"롞롟롡롢롣롥",6,"롮롰롲",5,"롹롺롻롽",7],["8f41","뢅",7,"뢎",17],["8f61","뢠",7,"뢩",6,"뢱뢲뢳뢵뢶뢷뢹",4],["8f81","뢾뢿룂룄룆",5,"룍룎룏룑룒룓룕",7,"룞룠룢",5,"룪룫룭룮룯룱",6,"룺룼룾",5,"뤅",18,"뤙",6,"뤡",26,"뤾뤿륁륂륃륅",6,"륍륎륐륒",5],["9041","륚륛륝륞륟륡",6,"륪륬륮",5,"륶륷륹륺륻륽"],["9061","륾",5,"릆릈릋릌릏",15],["9081","릟",12,"릮릯릱릲릳릵",6,"릾맀맂",5,"맊맋맍맓",4,"맚맜맟맠맢맦맧맩맪맫맭",6,"맶맻",4,"먂",5,"먉",11,"먖",33,"먺먻먽먾먿멁멃멄멅멆"],["9141","멇멊멌멏멐멑멒멖멗멙멚멛멝",6,"멦멪",5],["9161","멲멳멵멶멷멹",9,"몆몈몉몊몋몍",5],["9181","몓",20,"몪몭몮몯몱몳",4,"몺몼몾",5,"뫅뫆뫇뫉",14,"뫚",33,"뫽뫾뫿묁묂묃묅",7,"묎묐묒",5,"묙묚묛묝묞묟묡",6],["9241","묨묪묬",7,"묷묹묺묿",4,"뭆뭈뭊뭋뭌뭎뭑뭒"],["9261","뭓뭕뭖뭗뭙",7,"뭢뭤",7,"뭭",4],["9281","뭲",21,"뮉뮊뮋뮍뮎뮏뮑",18,"뮥뮦뮧뮩뮪뮫뮭",6,"뮵뮶뮸",7,"믁믂믃믅믆믇믉",6,"믑믒믔",35,"믺믻믽믾밁"],["9341","밃",4,"밊밎밐밒밓밙밚밠밡밢밣밦밨밪밫밬밮밯밲밳밵"],["9361","밶밷밹",6,"뱂뱆뱇뱈뱊뱋뱎뱏뱑",8],["9381","뱚뱛뱜뱞",37,"벆벇벉벊벍벏",4,"벖벘벛",4,"벢벣벥벦벩",6,"벲벶",5,"벾벿볁볂볃볅",7,"볎볒볓볔볖볗볙볚볛볝",22,"볷볹볺볻볽"],["9441","볾",5,"봆봈봊",5,"봑봒봓봕",8],["9461","봞",5,"봥",6,"봭",12],["9481","봺",5,"뵁",6,"뵊뵋뵍뵎뵏뵑",6,"뵚",9,"뵥뵦뵧뵩",22,"붂붃붅붆붋",4,"붒붔붖붗붘붛붝",6,"붥",10,"붱",6,"붹",24],["9541","뷒뷓뷖뷗뷙뷚뷛뷝",11,"뷪",5,"뷱"],["9561","뷲뷳뷵뷶뷷뷹",6,"븁븂븄븆",5,"븎븏븑븒븓"],["9581","븕",6,"븞븠",35,"빆빇빉빊빋빍빏",4,"빖빘빜빝빞빟빢빣빥빦빧빩빫",4,"빲빶",4,"빾빿뺁뺂뺃뺅",6,"뺎뺒",5,"뺚",13,"뺩",14],["9641","뺸",23,"뻒뻓"],["9661","뻕뻖뻙",6,"뻡뻢뻦",5,"뻭",8],["9681","뻶",10,"뼂",5,"뼊",13,"뼚뼞",33,"뽂뽃뽅뽆뽇뽉",6,"뽒뽓뽔뽖",44],["9741","뾃",16,"뾕",8],["9761","뾞",17,"뾱",7],["9781","뾹",11,"뿆",5,"뿎뿏뿑뿒뿓뿕",6,"뿝뿞뿠뿢",89,"쀽쀾쀿"],["9841","쁀",16,"쁒",5,"쁙쁚쁛"],["9861","쁝쁞쁟쁡",6,"쁪",15],["9881","쁺",21,"삒삓삕삖삗삙",6,"삢삤삦",5,"삮삱삲삷",4,"삾샂샃샄샆샇샊샋샍샎샏샑",6,"샚샞",5,"샦샧샩샪샫샭",6,"샶샸샺",5,"섁섂섃섅섆섇섉",6,"섑섒섓섔섖",5,"섡섢섥섨섩섪섫섮"],["9941","섲섳섴섵섷섺섻섽섾섿셁",6,"셊셎",5,"셖셗"],["9961","셙셚셛셝",6,"셦셪",5,"셱셲셳셵셶셷셹셺셻"],["9981","셼",8,"솆",5,"솏솑솒솓솕솗",4,"솞솠솢솣솤솦솧솪솫솭솮솯솱",11,"솾",5,"쇅쇆쇇쇉쇊쇋쇍",6,"쇕쇖쇙",6,"쇡쇢쇣쇥쇦쇧쇩",6,"쇲쇴",7,"쇾쇿숁숂숃숅",6,"숎숐숒",5,"숚숛숝숞숡숢숣"],["9a41","숤숥숦숧숪숬숮숰숳숵",16],["9a61","쉆쉇쉉",6,"쉒쉓쉕쉖쉗쉙",6,"쉡쉢쉣쉤쉦"],["9a81","쉧",4,"쉮쉯쉱쉲쉳쉵",6,"쉾슀슂",5,"슊",5,"슑",6,"슙슚슜슞",5,"슦슧슩슪슫슮",5,"슶슸슺",33,"싞싟싡싢싥",5,"싮싰싲싳싴싵싷싺싽싾싿쌁",6,"쌊쌋쌎쌏"],["9b41","쌐쌑쌒쌖쌗쌙쌚쌛쌝",6,"쌦쌧쌪",8],["9b61","쌳",17,"썆",7],["9b81","썎",25,"썪썫썭썮썯썱썳",4,"썺썻썾",5,"쎅쎆쎇쎉쎊쎋쎍",50,"쏁",22,"쏚"],["9c41","쏛쏝쏞쏡쏣",4,"쏪쏫쏬쏮",5,"쏶쏷쏹",5],["9c61","쏿",8,"쐉",6,"쐑",9],["9c81","쐛",8,"쐥",6,"쐭쐮쐯쐱쐲쐳쐵",6,"쐾",9,"쑉",26,"쑦쑧쑩쑪쑫쑭",6,"쑶쑷쑸쑺",5,"쒁",18,"쒕",6,"쒝",12],["9d41","쒪",13,"쒹쒺쒻쒽",8],["9d61","쓆",25],["9d81","쓠",8,"쓪",5,"쓲쓳쓵쓶쓷쓹쓻쓼쓽쓾씂",9,"씍씎씏씑씒씓씕",6,"씝",10,"씪씫씭씮씯씱",6,"씺씼씾",5,"앆앇앋앏앐앑앒앖앚앛앜앟앢앣앥앦앧앩",6,"앲앶",5,"앾앿얁얂얃얅얆얈얉얊얋얎얐얒얓얔"],["9e41","얖얙얚얛얝얞얟얡",7,"얪",9,"얶"],["9e61","얷얺얿",4,"엋엍엏엒엓엕엖엗엙",6,"엢엤엦엧"],["9e81","엨엩엪엫엯엱엲엳엵엸엹엺엻옂옃옄옉옊옋옍옎옏옑",6,"옚옝",6,"옦옧옩옪옫옯옱옲옶옸옺옼옽옾옿왂왃왅왆왇왉",6,"왒왖",5,"왞왟왡",10,"왭왮왰왲",5,"왺왻왽왾왿욁",6,"욊욌욎",5,"욖욗욙욚욛욝",6,"욦"],["9f41","욨욪",5,"욲욳욵욶욷욻",4,"웂웄웆",5,"웎"],["9f61","웏웑웒웓웕",6,"웞웟웢",5,"웪웫웭웮웯웱웲"],["9f81","웳",4,"웺웻웼웾",5,"윆윇윉윊윋윍",6,"윖윘윚",5,"윢윣윥윦윧윩",6,"윲윴윶윸윹윺윻윾윿읁읂읃읅",4,"읋읎읐읙읚읛읝읞읟읡",6,"읩읪읬",7,"읶읷읹읺읻읿잀잁잂잆잋잌잍잏잒잓잕잙잛",4,"잢잧",4,"잮잯잱잲잳잵잶잷"],["a041","잸잹잺잻잾쟂",5,"쟊쟋쟍쟏쟑",6,"쟙쟚쟛쟜"],["a061","쟞",5,"쟥쟦쟧쟩쟪쟫쟭",13],["a081","쟻",4,"젂젃젅젆젇젉젋",4,"젒젔젗",4,"젞젟젡젢젣젥",6,"젮젰젲",5,"젹젺젻젽젾젿졁",6,"졊졋졎",5,"졕",26,"졲졳졵졶졷졹졻",4,"좂좄좈좉좊좎",5,"좕",7,"좞좠좢좣좤"],["a141","좥좦좧좩",18,"좾좿죀죁"],["a161","죂죃죅죆죇죉죊죋죍",6,"죖죘죚",5,"죢죣죥"],["a181","죦",14,"죶",5,"죾죿줁줂줃줇",4,"줎　、。·‥…¨〃­―∥＼∼‘’“”〔〕〈",9,"±×÷≠≤≥∞∴°′″℃Å￠￡￥♂♀∠⊥⌒∂∇≡≒§※☆★○●◎◇◆□■△▲▽▼→←↑↓↔〓≪≫√∽∝∵∫∬∈∋⊆⊇⊂⊃∪∩∧∨￢"],["a241","줐줒",5,"줙",18],["a261","줭",6,"줵",18],["a281","쥈",7,"쥒쥓쥕쥖쥗쥙",6,"쥢쥤",7,"쥭쥮쥯⇒⇔∀∃´～ˇ˘˝˚˙¸˛¡¿ː∮∑∏¤℉‰◁◀▷▶♤♠♡♥♧♣⊙◈▣◐◑▒▤▥▨▧▦▩♨☏☎☜☞¶†‡↕↗↙↖↘♭♩♪♬㉿㈜№㏇™㏂㏘℡€®"],["a341","쥱쥲쥳쥵",6,"쥽",10,"즊즋즍즎즏"],["a361","즑",6,"즚즜즞",16],["a381","즯",16,"짂짃짅짆짉짋",4,"짒짔짗짘짛！",58,"￦］",32,"￣"],["a441","짞짟짡짣짥짦짨짩짪짫짮짲",5,"짺짻짽짾짿쨁쨂쨃쨄"],["a461","쨅쨆쨇쨊쨎",5,"쨕쨖쨗쨙",12],["a481","쨦쨧쨨쨪",28,"ㄱ",93],["a541","쩇",4,"쩎쩏쩑쩒쩓쩕",6,"쩞쩢",5,"쩩쩪"],["a561","쩫",17,"쩾",5,"쪅쪆"],["a581","쪇",16,"쪙",14,"ⅰ",9],["a5b0","Ⅰ",9],["a5c1","Α",16,"Σ",6],["a5e1","α",16,"σ",6],["a641","쪨",19,"쪾쪿쫁쫂쫃쫅"],["a661","쫆",5,"쫎쫐쫒쫔쫕쫖쫗쫚",5,"쫡",6],["a681","쫨쫩쫪쫫쫭",6,"쫵",18,"쬉쬊─│┌┐┘└├┬┤┴┼━┃┏┓┛┗┣┳┫┻╋┠┯┨┷┿┝┰┥┸╂┒┑┚┙┖┕┎┍┞┟┡┢┦┧┩┪┭┮┱┲┵┶┹┺┽┾╀╁╃",7],["a741","쬋",4,"쬑쬒쬓쬕쬖쬗쬙",6,"쬢",7],["a761","쬪",22,"쭂쭃쭄"],["a781","쭅쭆쭇쭊쭋쭍쭎쭏쭑",6,"쭚쭛쭜쭞",5,"쭥",7,"㎕㎖㎗ℓ㎘㏄㎣㎤㎥㎦㎙",9,"㏊㎍㎎㎏㏏㎈㎉㏈㎧㎨㎰",9,"㎀",4,"㎺",5,"㎐",4,"Ω㏀㏁㎊㎋㎌㏖㏅㎭㎮㎯㏛㎩㎪㎫㎬㏝㏐㏓㏃㏉㏜㏆"],["a841","쭭",10,"쭺",14],["a861","쮉",18,"쮝",6],["a881","쮤",19,"쮹",11,"ÆÐªĦ"],["a8a6","Ĳ"],["a8a8","ĿŁØŒºÞŦŊ"],["a8b1","㉠",27,"ⓐ",25,"①",14,"½⅓⅔¼¾⅛⅜⅝⅞"],["a941","쯅",14,"쯕",10],["a961","쯠쯡쯢쯣쯥쯦쯨쯪",18],["a981","쯽",14,"찎찏찑찒찓찕",6,"찞찟찠찣찤æđðħıĳĸŀłøœßþŧŋŉ㈀",27,"⒜",25,"⑴",14,"¹²³⁴ⁿ₁₂₃₄"],["aa41","찥찦찪찫찭찯찱",6,"찺찿",4,"챆챇챉챊챋챍챎"],["aa61","챏",4,"챖챚",5,"챡챢챣챥챧챩",6,"챱챲"],["aa81","챳챴챶",29,"ぁ",82],["ab41","첔첕첖첗첚첛첝첞첟첡",6,"첪첮",5,"첶첷첹"],["ab61","첺첻첽",6,"쳆쳈쳊",5,"쳑쳒쳓쳕",5],["ab81","쳛",8,"쳥",6,"쳭쳮쳯쳱",12,"ァ",85],["ac41","쳾쳿촀촂",5,"촊촋촍촎촏촑",6,"촚촜촞촟촠"],["ac61","촡촢촣촥촦촧촩촪촫촭",11,"촺",4],["ac81","촿",28,"쵝쵞쵟А",5,"ЁЖ",25],["acd1","а",5,"ёж",25],["ad41","쵡쵢쵣쵥",6,"쵮쵰쵲",5,"쵹",7],["ad61","춁",6,"춉",10,"춖춗춙춚춛춝춞춟"],["ad81","춠춡춢춣춦춨춪",5,"춱",18,"췅"],["ae41","췆",5,"췍췎췏췑",16],["ae61","췢",5,"췩췪췫췭췮췯췱",6,"췺췼췾",4],["ae81","츃츅츆츇츉츊츋츍",6,"츕츖츗츘츚",5,"츢츣츥츦츧츩츪츫"],["af41","츬츭츮츯츲츴츶",19],["af61","칊",13,"칚칛칝칞칢",5,"칪칬"],["af81","칮",5,"칶칷칹칺칻칽",6,"캆캈캊",5,"캒캓캕캖캗캙"],["b041","캚",5,"캢캦",5,"캮",12],["b061","캻",5,"컂",19],["b081","컖",13,"컦컧컩컪컭",6,"컶컺",5,"가각간갇갈갉갊감",7,"같",4,"갠갤갬갭갯갰갱갸갹갼걀걋걍걔걘걜거걱건걷걸걺검겁것겄겅겆겉겊겋게겐겔겜겝겟겠겡겨격겪견겯결겸겹겻겼경곁계곈곌곕곗고곡곤곧골곪곬곯곰곱곳공곶과곽관괄괆"],["b141","켂켃켅켆켇켉",6,"켒켔켖",5,"켝켞켟켡켢켣"],["b161","켥",6,"켮켲",5,"켹",11],["b181","콅",14,"콖콗콙콚콛콝",6,"콦콨콪콫콬괌괍괏광괘괜괠괩괬괭괴괵괸괼굄굅굇굉교굔굘굡굣구국군굳굴굵굶굻굼굽굿궁궂궈궉권궐궜궝궤궷귀귁귄귈귐귑귓규균귤그극근귿글긁금급긋긍긔기긱긴긷길긺김깁깃깅깆깊까깍깎깐깔깖깜깝깟깠깡깥깨깩깬깰깸"],["b241","콭콮콯콲콳콵콶콷콹",6,"쾁쾂쾃쾄쾆",5,"쾍"],["b261","쾎",18,"쾢",5,"쾩"],["b281","쾪",5,"쾱",18,"쿅",6,"깹깻깼깽꺄꺅꺌꺼꺽꺾껀껄껌껍껏껐껑께껙껜껨껫껭껴껸껼꼇꼈꼍꼐꼬꼭꼰꼲꼴꼼꼽꼿꽁꽂꽃꽈꽉꽐꽜꽝꽤꽥꽹꾀꾄꾈꾐꾑꾕꾜꾸꾹꾼꿀꿇꿈꿉꿋꿍꿎꿔꿜꿨꿩꿰꿱꿴꿸뀀뀁뀄뀌뀐뀔뀜뀝뀨끄끅끈끊끌끎끓끔끕끗끙"],["b341","쿌",19,"쿢쿣쿥쿦쿧쿩"],["b361","쿪",5,"쿲쿴쿶",5,"쿽쿾쿿퀁퀂퀃퀅",5],["b381","퀋",5,"퀒",5,"퀙",19,"끝끼끽낀낄낌낍낏낑나낙낚난낟날낡낢남납낫",4,"낱낳내낵낸낼냄냅냇냈냉냐냑냔냘냠냥너넉넋넌널넒넓넘넙넛넜넝넣네넥넨넬넴넵넷넸넹녀녁년녈념녑녔녕녘녜녠노녹논놀놂놈놉놋농높놓놔놘놜놨뇌뇐뇔뇜뇝"],["b441","퀮",5,"퀶퀷퀹퀺퀻퀽",6,"큆큈큊",5],["b461","큑큒큓큕큖큗큙",6,"큡",10,"큮큯"],["b481","큱큲큳큵",6,"큾큿킀킂",18,"뇟뇨뇩뇬뇰뇹뇻뇽누눅눈눋눌눔눕눗눙눠눴눼뉘뉜뉠뉨뉩뉴뉵뉼늄늅늉느늑는늘늙늚늠늡늣능늦늪늬늰늴니닉닌닐닒님닙닛닝닢다닥닦단닫",4,"닳담답닷",4,"닿대댁댄댈댐댑댓댔댕댜더덕덖던덛덜덞덟덤덥"],["b541","킕",14,"킦킧킩킪킫킭",5],["b561","킳킶킸킺",5,"탂탃탅탆탇탊",5,"탒탖",4],["b581","탛탞탟탡탢탣탥",6,"탮탲",5,"탹",11,"덧덩덫덮데덱덴델뎀뎁뎃뎄뎅뎌뎐뎔뎠뎡뎨뎬도독돈돋돌돎돐돔돕돗동돛돝돠돤돨돼됐되된될됨됩됫됴두둑둔둘둠둡둣둥둬뒀뒈뒝뒤뒨뒬뒵뒷뒹듀듄듈듐듕드득든듣들듦듬듭듯등듸디딕딘딛딜딤딥딧딨딩딪따딱딴딸"],["b641","턅",7,"턎",17],["b661","턠",15,"턲턳턵턶턷턹턻턼턽턾"],["b681","턿텂텆",5,"텎텏텑텒텓텕",6,"텞텠텢",5,"텩텪텫텭땀땁땃땄땅땋때땍땐땔땜땝땟땠땡떠떡떤떨떪떫떰떱떳떴떵떻떼떽뗀뗄뗌뗍뗏뗐뗑뗘뗬또똑똔똘똥똬똴뙈뙤뙨뚜뚝뚠뚤뚫뚬뚱뛔뛰뛴뛸뜀뜁뜅뜨뜩뜬뜯뜰뜸뜹뜻띄띈띌띔띕띠띤띨띰띱띳띵라락란랄람랍랏랐랑랒랖랗"],["b741","텮",13,"텽",6,"톅톆톇톉톊"],["b761","톋",20,"톢톣톥톦톧"],["b781","톩",6,"톲톴톶톷톸톹톻톽톾톿퇁",14,"래랙랜랠램랩랫랬랭랴략랸럇량러럭런럴럼럽럿렀렁렇레렉렌렐렘렙렛렝려력련렬렴렵렷렸령례롄롑롓로록론롤롬롭롯롱롸롼뢍뢨뢰뢴뢸룀룁룃룅료룐룔룝룟룡루룩룬룰룸룹룻룽뤄뤘뤠뤼뤽륀륄륌륏륑류륙륜률륨륩"],["b841","퇐",7,"퇙",17],["b861","퇫",8,"퇵퇶퇷퇹",13],["b881","툈툊",5,"툑",24,"륫륭르륵른를름릅릇릉릊릍릎리릭린릴림립릿링마막만많",4,"맘맙맛망맞맡맣매맥맨맬맴맵맷맸맹맺먀먁먈먕머먹먼멀멂멈멉멋멍멎멓메멕멘멜멤멥멧멨멩며멱면멸몃몄명몇몌모목몫몬몰몲몸몹못몽뫄뫈뫘뫙뫼"],["b941","툪툫툮툯툱툲툳툵",6,"툾퉀퉂",5,"퉉퉊퉋퉌"],["b961","퉍",14,"퉝",6,"퉥퉦퉧퉨"],["b981","퉩",22,"튂튃튅튆튇튉튊튋튌묀묄묍묏묑묘묜묠묩묫무묵묶문묻물묽묾뭄뭅뭇뭉뭍뭏뭐뭔뭘뭡뭣뭬뮈뮌뮐뮤뮨뮬뮴뮷므믄믈믐믓미믹민믿밀밂밈밉밋밌밍및밑바",4,"받",4,"밤밥밧방밭배백밴밸뱀뱁뱃뱄뱅뱉뱌뱍뱐뱝버벅번벋벌벎범법벗"],["ba41","튍튎튏튒튓튔튖",5,"튝튞튟튡튢튣튥",6,"튭"],["ba61","튮튯튰튲",5,"튺튻튽튾틁틃",4,"틊틌",5],["ba81","틒틓틕틖틗틙틚틛틝",6,"틦",9,"틲틳틵틶틷틹틺벙벚베벡벤벧벨벰벱벳벴벵벼벽변별볍볏볐병볕볘볜보복볶본볼봄봅봇봉봐봔봤봬뵀뵈뵉뵌뵐뵘뵙뵤뵨부북분붇불붉붊붐붑붓붕붙붚붜붤붰붸뷔뷕뷘뷜뷩뷰뷴뷸븀븃븅브븍븐블븜븝븟비빅빈빌빎빔빕빗빙빚빛빠빡빤"],["bb41","틻",4,"팂팄팆",5,"팏팑팒팓팕팗",4,"팞팢팣"],["bb61","팤팦팧팪팫팭팮팯팱",6,"팺팾",5,"퍆퍇퍈퍉"],["bb81","퍊",31,"빨빪빰빱빳빴빵빻빼빽뺀뺄뺌뺍뺏뺐뺑뺘뺙뺨뻐뻑뻔뻗뻘뻠뻣뻤뻥뻬뼁뼈뼉뼘뼙뼛뼜뼝뽀뽁뽄뽈뽐뽑뽕뾔뾰뿅뿌뿍뿐뿔뿜뿟뿡쀼쁑쁘쁜쁠쁨쁩삐삑삔삘삠삡삣삥사삭삯산삳살삵삶삼삽삿샀상샅새색샌샐샘샙샛샜생샤"],["bc41","퍪",17,"퍾퍿펁펂펃펅펆펇"],["bc61","펈펉펊펋펎펒",5,"펚펛펝펞펟펡",6,"펪펬펮"],["bc81","펯",4,"펵펶펷펹펺펻펽",6,"폆폇폊",5,"폑",5,"샥샨샬샴샵샷샹섀섄섈섐섕서",4,"섣설섦섧섬섭섯섰성섶세섹센셀셈셉셋셌셍셔셕션셜셤셥셧셨셩셰셴셸솅소속솎손솔솖솜솝솟송솥솨솩솬솰솽쇄쇈쇌쇔쇗쇘쇠쇤쇨쇰쇱쇳쇼쇽숀숄숌숍숏숑수숙순숟술숨숩숫숭"],["bd41","폗폙",7,"폢폤",7,"폮폯폱폲폳폵폶폷"],["bd61","폸폹폺폻폾퐀퐂",5,"퐉",13],["bd81","퐗",5,"퐞",25,"숯숱숲숴쉈쉐쉑쉔쉘쉠쉥쉬쉭쉰쉴쉼쉽쉿슁슈슉슐슘슛슝스슥슨슬슭슴습슷승시식신싣실싫심십싯싱싶싸싹싻싼쌀쌈쌉쌌쌍쌓쌔쌕쌘쌜쌤쌥쌨쌩썅써썩썬썰썲썸썹썼썽쎄쎈쎌쏀쏘쏙쏜쏟쏠쏢쏨쏩쏭쏴쏵쏸쐈쐐쐤쐬쐰"],["be41","퐸",7,"푁푂푃푅",14],["be61","푔",7,"푝푞푟푡푢푣푥",7,"푮푰푱푲"],["be81","푳",4,"푺푻푽푾풁풃",4,"풊풌풎",5,"풕",8,"쐴쐼쐽쑈쑤쑥쑨쑬쑴쑵쑹쒀쒔쒜쒸쒼쓩쓰쓱쓴쓸쓺쓿씀씁씌씐씔씜씨씩씬씰씸씹씻씽아악안앉않알앍앎앓암압앗았앙앝앞애액앤앨앰앱앳앴앵야약얀얄얇얌얍얏양얕얗얘얜얠얩어억언얹얻얼얽얾엄",6,"엌엎"],["bf41","풞",10,"풪",14],["bf61","풹",18,"퓍퓎퓏퓑퓒퓓퓕"],["bf81","퓖",5,"퓝퓞퓠",7,"퓩퓪퓫퓭퓮퓯퓱",6,"퓹퓺퓼에엑엔엘엠엡엣엥여역엮연열엶엷염",5,"옅옆옇예옌옐옘옙옛옜오옥온올옭옮옰옳옴옵옷옹옻와왁완왈왐왑왓왔왕왜왝왠왬왯왱외왹왼욀욈욉욋욍요욕욘욜욤욥욧용우욱운울욹욺움웁웃웅워웍원월웜웝웠웡웨"],["c041","퓾",5,"픅픆픇픉픊픋픍",6,"픖픘",5],["c061","픞",25],["c081","픸픹픺픻픾픿핁핂핃핅",6,"핎핐핒",5,"핚핛핝핞핟핡핢핣웩웬웰웸웹웽위윅윈윌윔윕윗윙유육윤율윰윱윳융윷으윽은을읊음읍읏응",7,"읜읠읨읫이익인일읽읾잃임입잇있잉잊잎자작잔잖잗잘잚잠잡잣잤장잦재잭잰잴잼잽잿쟀쟁쟈쟉쟌쟎쟐쟘쟝쟤쟨쟬저적전절젊"],["c141","핤핦핧핪핬핮",5,"핶핷핹핺핻핽",6,"햆햊햋"],["c161","햌햍햎햏햑",19,"햦햧"],["c181","햨",31,"점접젓정젖제젝젠젤젬젭젯젱져젼졀졈졉졌졍졔조족존졸졺좀좁좃종좆좇좋좌좍좔좝좟좡좨좼좽죄죈죌죔죕죗죙죠죡죤죵주죽준줄줅줆줌줍줏중줘줬줴쥐쥑쥔쥘쥠쥡쥣쥬쥰쥴쥼즈즉즌즐즘즙즛증지직진짇질짊짐집짓"],["c241","헊헋헍헎헏헑헓",4,"헚헜헞",5,"헦헧헩헪헫헭헮"],["c261","헯",4,"헶헸헺",5,"혂혃혅혆혇혉",6,"혒"],["c281","혖",5,"혝혞혟혡혢혣혥",7,"혮",9,"혺혻징짖짙짚짜짝짠짢짤짧짬짭짯짰짱째짹짼쨀쨈쨉쨋쨌쨍쨔쨘쨩쩌쩍쩐쩔쩜쩝쩟쩠쩡쩨쩽쪄쪘쪼쪽쫀쫄쫌쫍쫏쫑쫓쫘쫙쫠쫬쫴쬈쬐쬔쬘쬠쬡쭁쭈쭉쭌쭐쭘쭙쭝쭤쭸쭹쮜쮸쯔쯤쯧쯩찌찍찐찔찜찝찡찢찧차착찬찮찰참찹찻"],["c341","혽혾혿홁홂홃홄홆홇홊홌홎홏홐홒홓홖홗홙홚홛홝",4],["c361","홢",4,"홨홪",5,"홲홳홵",11],["c381","횁횂횄횆",5,"횎횏횑횒횓횕",7,"횞횠횢",5,"횩횪찼창찾채책챈챌챔챕챗챘챙챠챤챦챨챰챵처척천철첨첩첫첬청체첵첸첼쳄쳅쳇쳉쳐쳔쳤쳬쳰촁초촉촌촐촘촙촛총촤촨촬촹최쵠쵤쵬쵭쵯쵱쵸춈추축춘출춤춥춧충춰췄췌췐취췬췰췸췹췻췽츄츈츌츔츙츠측츤츨츰츱츳층"],["c441","횫횭횮횯횱",7,"횺횼",7,"훆훇훉훊훋"],["c461","훍훎훏훐훒훓훕훖훘훚",5,"훡훢훣훥훦훧훩",4],["c481","훮훯훱훲훳훴훶",5,"훾훿휁휂휃휅",11,"휒휓휔치칙친칟칠칡침칩칫칭카칵칸칼캄캅캇캉캐캑캔캘캠캡캣캤캥캬캭컁커컥컨컫컬컴컵컷컸컹케켁켄켈켐켑켓켕켜켠켤켬켭켯켰켱켸코콕콘콜콤콥콧콩콰콱콴콸쾀쾅쾌쾡쾨쾰쿄쿠쿡쿤쿨쿰쿱쿳쿵쿼퀀퀄퀑퀘퀭퀴퀵퀸퀼"],["c541","휕휖휗휚휛휝휞휟휡",6,"휪휬휮",5,"휶휷휹"],["c561","휺휻휽",6,"흅흆흈흊",5,"흒흓흕흚",4],["c581","흟흢흤흦흧흨흪흫흭흮흯흱흲흳흵",6,"흾흿힀힂",5,"힊힋큄큅큇큉큐큔큘큠크큭큰클큼큽킁키킥킨킬킴킵킷킹타탁탄탈탉탐탑탓탔탕태택탠탤탬탭탯탰탱탸턍터턱턴털턺텀텁텃텄텅테텍텐텔템텝텟텡텨텬텼톄톈토톡톤톨톰톱톳통톺톼퇀퇘퇴퇸툇툉툐투툭툰툴툼툽툿퉁퉈퉜"],["c641","힍힎힏힑",6,"힚힜힞",5],["c6a1","퉤튀튁튄튈튐튑튕튜튠튤튬튱트특튼튿틀틂틈틉틋틔틘틜틤틥티틱틴틸팀팁팃팅파팍팎판팔팖팜팝팟팠팡팥패팩팬팰팸팹팻팼팽퍄퍅퍼퍽펀펄펌펍펏펐펑페펙펜펠펨펩펫펭펴편펼폄폅폈평폐폘폡폣포폭폰폴폼폽폿퐁"],["c7a1","퐈퐝푀푄표푠푤푭푯푸푹푼푿풀풂품풉풋풍풔풩퓌퓐퓔퓜퓟퓨퓬퓰퓸퓻퓽프픈플픔픕픗피픽핀필핌핍핏핑하학한할핥함합핫항해핵핸핼햄햅햇했행햐향허헉헌헐헒험헙헛헝헤헥헨헬헴헵헷헹혀혁현혈혐협혓혔형혜혠"],["c8a1","혤혭호혹혼홀홅홈홉홋홍홑화확환활홧황홰홱홴횃횅회획횐횔횝횟횡효횬횰횹횻후훅훈훌훑훔훗훙훠훤훨훰훵훼훽휀휄휑휘휙휜휠휨휩휫휭휴휵휸휼흄흇흉흐흑흔흖흗흘흙흠흡흣흥흩희흰흴흼흽힁히힉힌힐힘힙힛힝"],["caa1","伽佳假價加可呵哥嘉嫁家暇架枷柯歌珂痂稼苛茄街袈訶賈跏軻迦駕刻却各恪慤殼珏脚覺角閣侃刊墾奸姦干幹懇揀杆柬桿澗癎看磵稈竿簡肝艮艱諫間乫喝曷渴碣竭葛褐蝎鞨勘坎堪嵌感憾戡敢柑橄減甘疳監瞰紺邯鑑鑒龕"],["cba1","匣岬甲胛鉀閘剛堈姜岡崗康强彊慷江畺疆糠絳綱羌腔舡薑襁講鋼降鱇介价個凱塏愷愾慨改槪漑疥皆盖箇芥蓋豈鎧開喀客坑更粳羹醵倨去居巨拒据據擧渠炬祛距踞車遽鉅鋸乾件健巾建愆楗腱虔蹇鍵騫乞傑杰桀儉劍劒檢"],["cca1","瞼鈐黔劫怯迲偈憩揭擊格檄激膈覡隔堅牽犬甄絹繭肩見譴遣鵑抉決潔結缺訣兼慊箝謙鉗鎌京俓倞傾儆勁勍卿坰境庚徑慶憬擎敬景暻更梗涇炅烱璟璥瓊痙硬磬竟競絅經耕耿脛莖警輕逕鏡頃頸驚鯨係啓堺契季屆悸戒桂械"],["cda1","棨溪界癸磎稽系繫繼計誡谿階鷄古叩告呱固姑孤尻庫拷攷故敲暠枯槁沽痼皐睾稿羔考股膏苦苽菰藁蠱袴誥賈辜錮雇顧高鼓哭斛曲梏穀谷鵠困坤崑昆梱棍滾琨袞鯤汨滑骨供公共功孔工恐恭拱控攻珙空蚣貢鞏串寡戈果瓜"],["cea1","科菓誇課跨過鍋顆廓槨藿郭串冠官寬慣棺款灌琯瓘管罐菅觀貫關館刮恝括适侊光匡壙廣曠洸炚狂珖筐胱鑛卦掛罫乖傀塊壞怪愧拐槐魁宏紘肱轟交僑咬喬嬌嶠巧攪敎校橋狡皎矯絞翹膠蕎蛟較轎郊餃驕鮫丘久九仇俱具勾"],["cfa1","區口句咎嘔坵垢寇嶇廐懼拘救枸柩構歐毆毬求溝灸狗玖球瞿矩究絿耉臼舅舊苟衢謳購軀逑邱鉤銶駒驅鳩鷗龜國局菊鞠鞫麴君窘群裙軍郡堀屈掘窟宮弓穹窮芎躬倦券勸卷圈拳捲權淃眷厥獗蕨蹶闕机櫃潰詭軌饋句晷歸貴"],["d0a1","鬼龜叫圭奎揆槻珪硅窺竅糾葵規赳逵閨勻均畇筠菌鈞龜橘克剋劇戟棘極隙僅劤勤懃斤根槿瑾筋芹菫覲謹近饉契今妗擒昑檎琴禁禽芩衾衿襟金錦伋及急扱汲級給亘兢矜肯企伎其冀嗜器圻基埼夔奇妓寄岐崎己幾忌技旗旣"],["d1a1","朞期杞棋棄機欺氣汽沂淇玘琦琪璂璣畸畿碁磯祁祇祈祺箕紀綺羈耆耭肌記譏豈起錡錤飢饑騎騏驥麒緊佶吉拮桔金喫儺喇奈娜懦懶拏拿癩",5,"那樂",4,"諾酪駱亂卵暖欄煖爛蘭難鸞捏捺南嵐枏楠湳濫男藍襤拉"],["d2a1","納臘蠟衲囊娘廊",4,"乃來內奈柰耐冷女年撚秊念恬拈捻寧寗努勞奴弩怒擄櫓爐瑙盧",5,"駑魯",10,"濃籠聾膿農惱牢磊腦賂雷尿壘",7,"嫩訥杻紐勒",5,"能菱陵尼泥匿溺多茶"],["d3a1","丹亶但單團壇彖斷旦檀段湍短端簞緞蛋袒鄲鍛撻澾獺疸達啖坍憺擔曇淡湛潭澹痰聃膽蕁覃談譚錟沓畓答踏遝唐堂塘幢戇撞棠當糖螳黨代垈坮大對岱帶待戴擡玳臺袋貸隊黛宅德悳倒刀到圖堵塗導屠島嶋度徒悼挑掉搗桃"],["d4a1","棹櫂淘渡滔濤燾盜睹禱稻萄覩賭跳蹈逃途道都鍍陶韜毒瀆牘犢獨督禿篤纛讀墩惇敦旽暾沌焞燉豚頓乭突仝冬凍動同憧東桐棟洞潼疼瞳童胴董銅兜斗杜枓痘竇荳讀豆逗頭屯臀芚遁遯鈍得嶝橙燈登等藤謄鄧騰喇懶拏癩羅"],["d5a1","蘿螺裸邏樂洛烙珞絡落諾酪駱丹亂卵欄欒瀾爛蘭鸞剌辣嵐擥攬欖濫籃纜藍襤覽拉臘蠟廊朗浪狼琅瑯螂郞來崍徠萊冷掠略亮倆兩凉梁樑粮粱糧良諒輛量侶儷勵呂廬慮戾旅櫚濾礪藜蠣閭驢驪麗黎力曆歷瀝礫轢靂憐戀攣漣"],["d6a1","煉璉練聯蓮輦連鍊冽列劣洌烈裂廉斂殮濂簾獵令伶囹寧岺嶺怜玲笭羚翎聆逞鈴零靈領齡例澧禮醴隷勞怒撈擄櫓潞瀘爐盧老蘆虜路輅露魯鷺鹵碌祿綠菉錄鹿麓論壟弄朧瀧瓏籠聾儡瀨牢磊賂賚賴雷了僚寮廖料燎療瞭聊蓼"],["d7a1","遼鬧龍壘婁屢樓淚漏瘻累縷蔞褸鏤陋劉旒柳榴流溜瀏琉瑠留瘤硫謬類六戮陸侖倫崙淪綸輪律慄栗率隆勒肋凜凌楞稜綾菱陵俚利厘吏唎履悧李梨浬犁狸理璃異痢籬罹羸莉裏裡里釐離鯉吝潾燐璘藺躪隣鱗麟林淋琳臨霖砬"],["d8a1","立笠粒摩瑪痲碼磨馬魔麻寞幕漠膜莫邈万卍娩巒彎慢挽晩曼滿漫灣瞞萬蔓蠻輓饅鰻唜抹末沫茉襪靺亡妄忘忙望網罔芒茫莽輞邙埋妹媒寐昧枚梅每煤罵買賣邁魅脈貊陌驀麥孟氓猛盲盟萌冪覓免冕勉棉沔眄眠綿緬面麵滅"],["d9a1","蔑冥名命明暝椧溟皿瞑茗蓂螟酩銘鳴袂侮冒募姆帽慕摸摹暮某模母毛牟牡瑁眸矛耗芼茅謀謨貌木沐牧目睦穆鶩歿沒夢朦蒙卯墓妙廟描昴杳渺猫竗苗錨務巫憮懋戊拇撫无楙武毋無珷畝繆舞茂蕪誣貿霧鵡墨默們刎吻問文"],["daa1","汶紊紋聞蚊門雯勿沕物味媚尾嵋彌微未梶楣渼湄眉米美薇謎迷靡黴岷悶愍憫敏旻旼民泯玟珉緡閔密蜜謐剝博拍搏撲朴樸泊珀璞箔粕縛膊舶薄迫雹駁伴半反叛拌搬攀斑槃泮潘班畔瘢盤盼磐磻礬絆般蟠返頒飯勃拔撥渤潑"],["dba1","發跋醱鉢髮魃倣傍坊妨尨幇彷房放方旁昉枋榜滂磅紡肪膀舫芳蒡蚌訪謗邦防龐倍俳北培徘拜排杯湃焙盃背胚裴裵褙賠輩配陪伯佰帛柏栢白百魄幡樊煩燔番磻繁蕃藩飜伐筏罰閥凡帆梵氾汎泛犯範范法琺僻劈壁擘檗璧癖"],["dca1","碧蘗闢霹便卞弁變辨辯邊別瞥鱉鼈丙倂兵屛幷昞昺柄棅炳甁病秉竝輧餠騈保堡報寶普步洑湺潽珤甫菩補褓譜輔伏僕匐卜宓復服福腹茯蔔複覆輹輻馥鰒本乶俸奉封峯峰捧棒烽熢琫縫蓬蜂逢鋒鳳不付俯傅剖副否咐埠夫婦"],["dda1","孚孵富府復扶敷斧浮溥父符簿缶腐腑膚艀芙莩訃負賦賻赴趺部釜阜附駙鳧北分吩噴墳奔奮忿憤扮昐汾焚盆粉糞紛芬賁雰不佛弗彿拂崩朋棚硼繃鵬丕備匕匪卑妃婢庇悲憊扉批斐枇榧比毖毗毘沸泌琵痺砒碑秕秘粃緋翡肥"],["dea1","脾臂菲蜚裨誹譬費鄙非飛鼻嚬嬪彬斌檳殯浜濱瀕牝玭貧賓頻憑氷聘騁乍事些仕伺似使俟僿史司唆嗣四士奢娑寫寺射巳師徙思捨斜斯柶査梭死沙泗渣瀉獅砂社祀祠私篩紗絲肆舍莎蓑蛇裟詐詞謝賜赦辭邪飼駟麝削數朔索"],["dfa1","傘刪山散汕珊産疝算蒜酸霰乷撒殺煞薩三參杉森渗芟蔘衫揷澁鈒颯上傷像償商喪嘗孀尙峠常床庠廂想桑橡湘爽牀狀相祥箱翔裳觴詳象賞霜塞璽賽嗇塞穡索色牲生甥省笙墅壻嶼序庶徐恕抒捿敍暑曙書栖棲犀瑞筮絮緖署"],["e0a1","胥舒薯西誓逝鋤黍鼠夕奭席惜昔晳析汐淅潟石碩蓆釋錫仙僊先善嬋宣扇敾旋渲煽琁瑄璇璿癬禪線繕羨腺膳船蘚蟬詵跣選銑鐥饍鮮卨屑楔泄洩渫舌薛褻設說雪齧剡暹殲纖蟾贍閃陝攝涉燮葉城姓宬性惺成星晟猩珹盛省筬"],["e1a1","聖聲腥誠醒世勢歲洗稅笹細說貰召嘯塑宵小少巢所掃搔昭梳沼消溯瀟炤燒甦疏疎瘙笑篠簫素紹蔬蕭蘇訴逍遡邵銷韶騷俗屬束涑粟續謖贖速孫巽損蓀遜飡率宋悚松淞訟誦送頌刷殺灑碎鎖衰釗修受嗽囚垂壽嫂守岫峀帥愁"],["e2a1","戍手授搜收數樹殊水洙漱燧狩獸琇璲瘦睡秀穗竪粹綏綬繡羞脩茱蒐蓚藪袖誰讐輸遂邃酬銖銹隋隧隨雖需須首髓鬚叔塾夙孰宿淑潚熟琡璹肅菽巡徇循恂旬栒楯橓殉洵淳珣盾瞬筍純脣舜荀蓴蕣詢諄醇錞順馴戌術述鉥崇崧"],["e3a1","嵩瑟膝蝨濕拾習褶襲丞乘僧勝升承昇繩蠅陞侍匙嘶始媤尸屎屍市弑恃施是時枾柴猜矢示翅蒔蓍視試詩諡豕豺埴寔式息拭植殖湜熄篒蝕識軾食飾伸侁信呻娠宸愼新晨燼申神紳腎臣莘薪藎蜃訊身辛辰迅失室實悉審尋心沁"],["e4a1","沈深瀋甚芯諶什十拾雙氏亞俄兒啞娥峨我牙芽莪蛾衙訝阿雅餓鴉鵝堊岳嶽幄惡愕握樂渥鄂鍔顎鰐齷安岸按晏案眼雁鞍顔鮟斡謁軋閼唵岩巖庵暗癌菴闇壓押狎鴨仰央怏昻殃秧鴦厓哀埃崖愛曖涯碍艾隘靄厄扼掖液縊腋額"],["e5a1","櫻罌鶯鸚也倻冶夜惹揶椰爺耶若野弱掠略約若葯蒻藥躍亮佯兩凉壤孃恙揚攘敭暘梁楊樣洋瀁煬痒瘍禳穰糧羊良襄諒讓釀陽量養圄御於漁瘀禦語馭魚齬億憶抑檍臆偃堰彦焉言諺孼蘖俺儼嚴奄掩淹嶪業円予余勵呂女如廬"],["e6a1","旅歟汝濾璵礖礪與艅茹輿轝閭餘驪麗黎亦力域役易曆歷疫繹譯轢逆驛嚥堧姸娟宴年延憐戀捐挻撚椽沇沿涎涓淵演漣烟然煙煉燃燕璉硏硯秊筵緣練縯聯衍軟輦蓮連鉛鍊鳶列劣咽悅涅烈熱裂說閱厭廉念捻染殮炎焰琰艶苒"],["e7a1","簾閻髥鹽曄獵燁葉令囹塋寧嶺嶸影怜映暎楹榮永泳渶潁濚瀛瀯煐營獰玲瑛瑩瓔盈穎纓羚聆英詠迎鈴鍈零霙靈領乂倪例刈叡曳汭濊猊睿穢芮藝蘂禮裔詣譽豫醴銳隸霓預五伍俉傲午吾吳嗚塢墺奧娛寤悟惡懊敖旿晤梧汚澳"],["e8a1","烏熬獒筽蜈誤鰲鼇屋沃獄玉鈺溫瑥瘟穩縕蘊兀壅擁瓮甕癰翁邕雍饔渦瓦窩窪臥蛙蝸訛婉完宛梡椀浣玩琓琬碗緩翫脘腕莞豌阮頑曰往旺枉汪王倭娃歪矮外嵬巍猥畏了僚僥凹堯夭妖姚寥寮尿嶢拗搖撓擾料曜樂橈燎燿瑤療"],["e9a1","窈窯繇繞耀腰蓼蟯要謠遙遼邀饒慾欲浴縟褥辱俑傭冗勇埇墉容庸慂榕涌湧溶熔瑢用甬聳茸蓉踊鎔鏞龍于佑偶優又友右宇寓尤愚憂旴牛玗瑀盂祐禑禹紆羽芋藕虞迂遇郵釪隅雨雩勖彧旭昱栯煜稶郁頊云暈橒殞澐熉耘芸蕓"],["eaa1","運隕雲韻蔚鬱亐熊雄元原員圓園垣媛嫄寃怨愿援沅洹湲源爰猿瑗苑袁轅遠阮院願鴛月越鉞位偉僞危圍委威尉慰暐渭爲瑋緯胃萎葦蔿蝟衛褘謂違韋魏乳侑儒兪劉唯喩孺宥幼幽庾悠惟愈愉揄攸有杻柔柚柳楡楢油洧流游溜"],["eba1","濡猶猷琉瑜由留癒硫紐維臾萸裕誘諛諭踰蹂遊逾遺酉釉鍮類六堉戮毓肉育陸倫允奫尹崙淪潤玧胤贇輪鈗閏律慄栗率聿戎瀜絨融隆垠恩慇殷誾銀隱乙吟淫蔭陰音飮揖泣邑凝應膺鷹依倚儀宜意懿擬椅毅疑矣義艤薏蟻衣誼"],["eca1","議醫二以伊利吏夷姨履已弛彛怡易李梨泥爾珥理異痍痢移罹而耳肄苡荑裏裡貽貳邇里離飴餌匿溺瀷益翊翌翼謚人仁刃印吝咽因姻寅引忍湮燐璘絪茵藺蚓認隣靭靷鱗麟一佚佾壹日溢逸鎰馹任壬妊姙恁林淋稔臨荏賃入卄"],["eda1","立笠粒仍剩孕芿仔刺咨姉姿子字孜恣慈滋炙煮玆瓷疵磁紫者自茨蔗藉諮資雌作勺嚼斫昨灼炸爵綽芍酌雀鵲孱棧殘潺盞岑暫潛箴簪蠶雜丈仗匠場墻壯奬將帳庄張掌暲杖樟檣欌漿牆狀獐璋章粧腸臟臧莊葬蔣薔藏裝贓醬長"],["eea1","障再哉在宰才材栽梓渽滓災縡裁財載齋齎爭箏諍錚佇低儲咀姐底抵杵楮樗沮渚狙猪疽箸紵苧菹著藷詛貯躇這邸雎齟勣吊嫡寂摘敵滴狄炙的積笛籍績翟荻謫賊赤跡蹟迪迹適鏑佃佺傳全典前剪塡塼奠專展廛悛戰栓殿氈澱"],["efa1","煎琠田甸畑癲筌箋箭篆纏詮輾轉鈿銓錢鐫電顚顫餞切截折浙癤竊節絶占岾店漸点粘霑鮎點接摺蝶丁井亭停偵呈姃定幀庭廷征情挺政整旌晶晸柾楨檉正汀淀淨渟湞瀞炡玎珽町睛碇禎程穽精綎艇訂諪貞鄭酊釘鉦鋌錠霆靖"],["f0a1","靜頂鼎制劑啼堤帝弟悌提梯濟祭第臍薺製諸蹄醍除際霽題齊俎兆凋助嘲弔彫措操早晁曺曹朝條棗槽漕潮照燥爪璪眺祖祚租稠窕粗糟組繰肇藻蚤詔調趙躁造遭釣阻雕鳥族簇足鏃存尊卒拙猝倧宗從悰慫棕淙琮種終綜縱腫"],["f1a1","踪踵鍾鐘佐坐左座挫罪主住侏做姝胄呪周嗾奏宙州廚晝朱柱株注洲湊澍炷珠疇籌紂紬綢舟蛛註誅走躊輳週酎酒鑄駐竹粥俊儁准埈寯峻晙樽浚準濬焌畯竣蠢逡遵雋駿茁中仲衆重卽櫛楫汁葺增憎曾拯烝甑症繒蒸證贈之只"],["f2a1","咫地址志持指摯支旨智枝枳止池沚漬知砥祉祗紙肢脂至芝芷蜘誌識贄趾遲直稙稷織職唇嗔塵振搢晉晋桭榛殄津溱珍瑨璡畛疹盡眞瞋秦縉縝臻蔯袗診賑軫辰進鎭陣陳震侄叱姪嫉帙桎瓆疾秩窒膣蛭質跌迭斟朕什執潗緝輯"],["f3a1","鏶集徵懲澄且侘借叉嗟嵯差次此磋箚茶蹉車遮捉搾着窄錯鑿齪撰澯燦璨瓚竄簒纂粲纘讚贊鑽餐饌刹察擦札紮僭參塹慘慙懺斬站讒讖倉倡創唱娼廠彰愴敞昌昶暢槍滄漲猖瘡窓脹艙菖蒼債埰寀寨彩採砦綵菜蔡采釵冊柵策"],["f4a1","責凄妻悽處倜刺剔尺慽戚拓擲斥滌瘠脊蹠陟隻仟千喘天川擅泉淺玔穿舛薦賤踐遷釧闡阡韆凸哲喆徹撤澈綴輟轍鐵僉尖沾添甛瞻簽籤詹諂堞妾帖捷牒疊睫諜貼輒廳晴淸聽菁請靑鯖切剃替涕滯締諦逮遞體初剿哨憔抄招梢"],["f5a1","椒楚樵炒焦硝礁礎秒稍肖艸苕草蕉貂超酢醋醮促囑燭矗蜀觸寸忖村邨叢塚寵悤憁摠總聰蔥銃撮催崔最墜抽推椎楸樞湫皺秋芻萩諏趨追鄒酋醜錐錘鎚雛騶鰍丑畜祝竺筑築縮蓄蹙蹴軸逐春椿瑃出朮黜充忠沖蟲衝衷悴膵萃"],["f6a1","贅取吹嘴娶就炊翠聚脆臭趣醉驟鷲側仄厠惻測層侈値嗤峙幟恥梔治淄熾痔痴癡稚穉緇緻置致蚩輜雉馳齒則勅飭親七柒漆侵寢枕沈浸琛砧針鍼蟄秤稱快他咤唾墮妥惰打拖朶楕舵陀馱駝倬卓啄坼度托拓擢晫柝濁濯琢琸託"],["f7a1","鐸呑嘆坦彈憚歎灘炭綻誕奪脫探眈耽貪塔搭榻宕帑湯糖蕩兌台太怠態殆汰泰笞胎苔跆邰颱宅擇澤撑攄兎吐土討慟桶洞痛筒統通堆槌腿褪退頹偸套妬投透鬪慝特闖坡婆巴把播擺杷波派爬琶破罷芭跛頗判坂板版瓣販辦鈑"],["f8a1","阪八叭捌佩唄悖敗沛浿牌狽稗覇貝彭澎烹膨愎便偏扁片篇編翩遍鞭騙貶坪平枰萍評吠嬖幣廢弊斃肺蔽閉陛佈包匍匏咆哺圃布怖抛抱捕暴泡浦疱砲胞脯苞葡蒲袍褒逋鋪飽鮑幅暴曝瀑爆輻俵剽彪慓杓標漂瓢票表豹飇飄驃"],["f9a1","品稟楓諷豊風馮彼披疲皮被避陂匹弼必泌珌畢疋筆苾馝乏逼下何厦夏廈昰河瑕荷蝦賀遐霞鰕壑學虐謔鶴寒恨悍旱汗漢澣瀚罕翰閑閒限韓割轄函含咸啣喊檻涵緘艦銜陷鹹合哈盒蛤閤闔陜亢伉姮嫦巷恒抗杭桁沆港缸肛航"],["faa1","行降項亥偕咳垓奚孩害懈楷海瀣蟹解該諧邂駭骸劾核倖幸杏荇行享向嚮珦鄕響餉饗香噓墟虛許憲櫶獻軒歇險驗奕爀赫革俔峴弦懸晛泫炫玄玹現眩睍絃絢縣舷衒見賢鉉顯孑穴血頁嫌俠協夾峽挾浹狹脅脇莢鋏頰亨兄刑型"],["fba1","形泂滎瀅灐炯熒珩瑩荊螢衡逈邢鎣馨兮彗惠慧暳蕙蹊醯鞋乎互呼壕壺好岵弧戶扈昊晧毫浩淏湖滸澔濠濩灝狐琥瑚瓠皓祜糊縞胡芦葫蒿虎號蝴護豪鎬頀顥惑或酷婚昏混渾琿魂忽惚笏哄弘汞泓洪烘紅虹訌鴻化和嬅樺火畵"],["fca1","禍禾花華話譁貨靴廓擴攫確碻穫丸喚奐宦幻患換歡晥桓渙煥環紈還驩鰥活滑猾豁闊凰幌徨恍惶愰慌晃晄榥況湟滉潢煌璜皇篁簧荒蝗遑隍黃匯回廻徊恢悔懷晦會檜淮澮灰獪繪膾茴蛔誨賄劃獲宖橫鐄哮嚆孝效斅曉梟涍淆"],["fda1","爻肴酵驍侯候厚后吼喉嗅帿後朽煦珝逅勛勳塤壎焄熏燻薰訓暈薨喧暄煊萱卉喙毁彙徽揮暉煇諱輝麾休携烋畦虧恤譎鷸兇凶匈洶胸黑昕欣炘痕吃屹紇訖欠欽歆吸恰洽翕興僖凞喜噫囍姬嬉希憙憘戱晞曦熙熹熺犧禧稀羲詰"]]');

/***/ }),

/***/ "./node_modules/iconv-lite/encodings/tables/cp950.json":
/*!*************************************************************!*\
  !*** ./node_modules/iconv-lite/encodings/tables/cp950.json ***!
  \*************************************************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('[["0","\\u0000",127],["a140","　，、。．‧；：？！︰…‥﹐﹑﹒·﹔﹕﹖﹗｜–︱—︳╴︴﹏（）︵︶｛｝︷︸〔〕︹︺【】︻︼《》︽︾〈〉︿﹀「」﹁﹂『』﹃﹄﹙﹚"],["a1a1","﹛﹜﹝﹞‘’“”〝〞‵′＃＆＊※§〃○●△▲◎☆★◇◆□■▽▼㊣℅¯￣＿ˍ﹉﹊﹍﹎﹋﹌﹟﹠﹡＋－×÷±√＜＞＝≦≧≠∞≒≡﹢",4,"～∩∪⊥∠∟⊿㏒㏑∫∮∵∴♀♂⊕⊙↑↓←→↖↗↙↘∥∣／"],["a240","＼∕﹨＄￥〒￠￡％＠℃℉﹩﹪﹫㏕㎜㎝㎞㏎㎡㎎㎏㏄°兙兛兞兝兡兣嗧瓩糎▁",7,"▏▎▍▌▋▊▉┼┴┬┤├▔─│▕┌┐└┘╭"],["a2a1","╮╰╯═╞╪╡◢◣◥◤╱╲╳０",9,"Ⅰ",9,"〡",8,"十卄卅Ａ",25,"ａ",21],["a340","ｗｘｙｚΑ",16,"Σ",6,"α",16,"σ",6,"ㄅ",10],["a3a1","ㄐ",25,"˙ˉˊˇˋ"],["a3e1","€"],["a440","一乙丁七乃九了二人儿入八几刀刁力匕十卜又三下丈上丫丸凡久么也乞于亡兀刃勺千叉口土士夕大女子孑孓寸小尢尸山川工己已巳巾干廾弋弓才"],["a4a1","丑丐不中丰丹之尹予云井互五亢仁什仃仆仇仍今介仄元允內六兮公冗凶分切刈勻勾勿化匹午升卅卞厄友及反壬天夫太夭孔少尤尺屯巴幻廿弔引心戈戶手扎支文斗斤方日曰月木欠止歹毋比毛氏水火爪父爻片牙牛犬王丙"],["a540","世丕且丘主乍乏乎以付仔仕他仗代令仙仞充兄冉冊冬凹出凸刊加功包匆北匝仟半卉卡占卯卮去可古右召叮叩叨叼司叵叫另只史叱台句叭叻四囚外"],["a5a1","央失奴奶孕它尼巨巧左市布平幼弁弘弗必戊打扔扒扑斥旦朮本未末札正母民氐永汁汀氾犯玄玉瓜瓦甘生用甩田由甲申疋白皮皿目矛矢石示禾穴立丞丟乒乓乩亙交亦亥仿伉伙伊伕伍伐休伏仲件任仰仳份企伋光兇兆先全"],["a640","共再冰列刑划刎刖劣匈匡匠印危吉吏同吊吐吁吋各向名合吃后吆吒因回囝圳地在圭圬圯圩夙多夷夸妄奸妃好她如妁字存宇守宅安寺尖屹州帆并年"],["a6a1","式弛忙忖戎戌戍成扣扛托收早旨旬旭曲曳有朽朴朱朵次此死氖汝汗汙江池汐汕污汛汍汎灰牟牝百竹米糸缶羊羽老考而耒耳聿肉肋肌臣自至臼舌舛舟艮色艾虫血行衣西阡串亨位住佇佗佞伴佛何估佐佑伽伺伸佃佔似但佣"],["a740","作你伯低伶余佝佈佚兌克免兵冶冷別判利刪刨劫助努劬匣即卵吝吭吞吾否呎吧呆呃吳呈呂君吩告吹吻吸吮吵吶吠吼呀吱含吟听囪困囤囫坊坑址坍"],["a7a1","均坎圾坐坏圻壯夾妝妒妨妞妣妙妖妍妤妓妊妥孝孜孚孛完宋宏尬局屁尿尾岐岑岔岌巫希序庇床廷弄弟彤形彷役忘忌志忍忱快忸忪戒我抄抗抖技扶抉扭把扼找批扳抒扯折扮投抓抑抆改攻攸旱更束李杏材村杜杖杞杉杆杠"],["a840","杓杗步每求汞沙沁沈沉沅沛汪決沐汰沌汨沖沒汽沃汲汾汴沆汶沍沔沘沂灶灼災灸牢牡牠狄狂玖甬甫男甸皂盯矣私秀禿究系罕肖肓肝肘肛肚育良芒"],["a8a1","芋芍見角言谷豆豕貝赤走足身車辛辰迂迆迅迄巡邑邢邪邦那酉釆里防阮阱阪阬並乖乳事些亞享京佯依侍佳使佬供例來侃佰併侈佩佻侖佾侏侑佺兔兒兕兩具其典冽函刻券刷刺到刮制剁劾劻卒協卓卑卦卷卸卹取叔受味呵"],["a940","咖呸咕咀呻呷咄咒咆呼咐呱呶和咚呢周咋命咎固垃坷坪坩坡坦坤坼夜奉奇奈奄奔妾妻委妹妮姑姆姐姍始姓姊妯妳姒姅孟孤季宗定官宜宙宛尚屈居"],["a9a1","屆岷岡岸岩岫岱岳帘帚帖帕帛帑幸庚店府底庖延弦弧弩往征彿彼忝忠忽念忿怏怔怯怵怖怪怕怡性怩怫怛或戕房戾所承拉拌拄抿拂抹拒招披拓拔拋拈抨抽押拐拙拇拍抵拚抱拘拖拗拆抬拎放斧於旺昔易昌昆昂明昀昏昕昊"],["aa40","昇服朋杭枋枕東果杳杷枇枝林杯杰板枉松析杵枚枓杼杪杲欣武歧歿氓氛泣注泳沱泌泥河沽沾沼波沫法泓沸泄油況沮泗泅泱沿治泡泛泊沬泯泜泖泠"],["aaa1","炕炎炒炊炙爬爭爸版牧物狀狎狙狗狐玩玨玟玫玥甽疝疙疚的盂盲直知矽社祀祁秉秈空穹竺糾罔羌羋者肺肥肢肱股肫肩肴肪肯臥臾舍芳芝芙芭芽芟芹花芬芥芯芸芣芰芾芷虎虱初表軋迎返近邵邸邱邶采金長門阜陀阿阻附"],["ab40","陂隹雨青非亟亭亮信侵侯便俠俑俏保促侶俘俟俊俗侮俐俄係俚俎俞侷兗冒冑冠剎剃削前剌剋則勇勉勃勁匍南卻厚叛咬哀咨哎哉咸咦咳哇哂咽咪品"],["aba1","哄哈咯咫咱咻咩咧咿囿垂型垠垣垢城垮垓奕契奏奎奐姜姘姿姣姨娃姥姪姚姦威姻孩宣宦室客宥封屎屏屍屋峙峒巷帝帥帟幽庠度建弈弭彥很待徊律徇後徉怒思怠急怎怨恍恰恨恢恆恃恬恫恪恤扁拜挖按拼拭持拮拽指拱拷"],["ac40","拯括拾拴挑挂政故斫施既春昭映昧是星昨昱昤曷柿染柱柔某柬架枯柵柩柯柄柑枴柚查枸柏柞柳枰柙柢柝柒歪殃殆段毒毗氟泉洋洲洪流津洌洱洞洗"],["aca1","活洽派洶洛泵洹洧洸洩洮洵洎洫炫為炳炬炯炭炸炮炤爰牲牯牴狩狠狡玷珊玻玲珍珀玳甚甭畏界畎畋疫疤疥疢疣癸皆皇皈盈盆盃盅省盹相眉看盾盼眇矜砂研砌砍祆祉祈祇禹禺科秒秋穿突竿竽籽紂紅紀紉紇約紆缸美羿耄"],["ad40","耐耍耑耶胖胥胚胃胄背胡胛胎胞胤胝致舢苧范茅苣苛苦茄若茂茉苒苗英茁苜苔苑苞苓苟苯茆虐虹虻虺衍衫要觔計訂訃貞負赴赳趴軍軌述迦迢迪迥"],["ada1","迭迫迤迨郊郎郁郃酋酊重閂限陋陌降面革韋韭音頁風飛食首香乘亳倌倍倣俯倦倥俸倩倖倆值借倚倒們俺倀倔倨俱倡個候倘俳修倭倪俾倫倉兼冤冥冢凍凌准凋剖剜剔剛剝匪卿原厝叟哨唐唁唷哼哥哲唆哺唔哩哭員唉哮哪"],["ae40","哦唧唇哽唏圃圄埂埔埋埃堉夏套奘奚娑娘娜娟娛娓姬娠娣娩娥娌娉孫屘宰害家宴宮宵容宸射屑展屐峭峽峻峪峨峰島崁峴差席師庫庭座弱徒徑徐恙"],["aea1","恣恥恐恕恭恩息悄悟悚悍悔悌悅悖扇拳挈拿捎挾振捕捂捆捏捉挺捐挽挪挫挨捍捌效敉料旁旅時晉晏晃晒晌晅晁書朔朕朗校核案框桓根桂桔栩梳栗桌桑栽柴桐桀格桃株桅栓栘桁殊殉殷氣氧氨氦氤泰浪涕消涇浦浸海浙涓"],["af40","浬涉浮浚浴浩涌涊浹涅浥涔烊烘烤烙烈烏爹特狼狹狽狸狷玆班琉珮珠珪珞畔畝畜畚留疾病症疲疳疽疼疹痂疸皋皰益盍盎眩真眠眨矩砰砧砸砝破砷"],["afa1","砥砭砠砟砲祕祐祠祟祖神祝祗祚秤秣秧租秦秩秘窄窈站笆笑粉紡紗紋紊素索純紐紕級紜納紙紛缺罟羔翅翁耆耘耕耙耗耽耿胱脂胰脅胭胴脆胸胳脈能脊胼胯臭臬舀舐航舫舨般芻茫荒荔荊茸荐草茵茴荏茲茹茶茗荀茱茨荃"],["b040","虔蚊蚪蚓蚤蚩蚌蚣蚜衰衷袁袂衽衹記訐討訌訕訊託訓訖訏訑豈豺豹財貢起躬軒軔軏辱送逆迷退迺迴逃追逅迸邕郡郝郢酒配酌釘針釗釜釙閃院陣陡"],["b0a1","陛陝除陘陞隻飢馬骨高鬥鬲鬼乾偺偽停假偃偌做偉健偶偎偕偵側偷偏倏偯偭兜冕凰剪副勒務勘動匐匏匙匿區匾參曼商啪啦啄啞啡啃啊唱啖問啕唯啤唸售啜唬啣唳啁啗圈國圉域堅堊堆埠埤基堂堵執培夠奢娶婁婉婦婪婀"],["b140","娼婢婚婆婊孰寇寅寄寂宿密尉專將屠屜屝崇崆崎崛崖崢崑崩崔崙崤崧崗巢常帶帳帷康庸庶庵庾張強彗彬彩彫得徙從徘御徠徜恿患悉悠您惋悴惦悽"],["b1a1","情悻悵惜悼惘惕惆惟悸惚惇戚戛扈掠控捲掖探接捷捧掘措捱掩掉掃掛捫推掄授掙採掬排掏掀捻捩捨捺敝敖救教敗啟敏敘敕敔斜斛斬族旋旌旎晝晚晤晨晦晞曹勗望梁梯梢梓梵桿桶梱梧梗械梃棄梭梆梅梔條梨梟梡梂欲殺"],["b240","毫毬氫涎涼淳淙液淡淌淤添淺清淇淋涯淑涮淞淹涸混淵淅淒渚涵淚淫淘淪深淮淨淆淄涪淬涿淦烹焉焊烽烯爽牽犁猜猛猖猓猙率琅琊球理現琍瓠瓶"],["b2a1","瓷甜產略畦畢異疏痔痕疵痊痍皎盔盒盛眷眾眼眶眸眺硫硃硎祥票祭移窒窕笠笨笛第符笙笞笮粒粗粕絆絃統紮紹紼絀細紳組累終紲紱缽羞羚翌翎習耜聊聆脯脖脣脫脩脰脤舂舵舷舶船莎莞莘荸莢莖莽莫莒莊莓莉莠荷荻荼"],["b340","莆莧處彪蛇蛀蚶蛄蚵蛆蛋蚱蚯蛉術袞袈被袒袖袍袋覓規訪訝訣訥許設訟訛訢豉豚販責貫貨貪貧赧赦趾趺軛軟這逍通逗連速逝逐逕逞造透逢逖逛途"],["b3a1","部郭都酗野釵釦釣釧釭釩閉陪陵陳陸陰陴陶陷陬雀雪雩章竟頂頃魚鳥鹵鹿麥麻傢傍傅備傑傀傖傘傚最凱割剴創剩勞勝勛博厥啻喀喧啼喊喝喘喂喜喪喔喇喋喃喳單喟唾喲喚喻喬喱啾喉喫喙圍堯堪場堤堰報堡堝堠壹壺奠"],["b440","婷媚婿媒媛媧孳孱寒富寓寐尊尋就嵌嵐崴嵇巽幅帽幀幃幾廊廁廂廄弼彭復循徨惑惡悲悶惠愜愣惺愕惰惻惴慨惱愎惶愉愀愒戟扉掣掌描揀揩揉揆揍"],["b4a1","插揣提握揖揭揮捶援揪換摒揚揹敞敦敢散斑斐斯普晰晴晶景暑智晾晷曾替期朝棺棕棠棘棗椅棟棵森棧棹棒棲棣棋棍植椒椎棉棚楮棻款欺欽殘殖殼毯氮氯氬港游湔渡渲湧湊渠渥渣減湛湘渤湖湮渭渦湯渴湍渺測湃渝渾滋"],["b540","溉渙湎湣湄湲湩湟焙焚焦焰無然煮焜牌犄犀猶猥猴猩琺琪琳琢琥琵琶琴琯琛琦琨甥甦畫番痢痛痣痙痘痞痠登發皖皓皴盜睏短硝硬硯稍稈程稅稀窘"],["b5a1","窗窖童竣等策筆筐筒答筍筋筏筑粟粥絞結絨絕紫絮絲絡給絢絰絳善翔翕耋聒肅腕腔腋腑腎脹腆脾腌腓腴舒舜菩萃菸萍菠菅萋菁華菱菴著萊菰萌菌菽菲菊萸萎萄菜萇菔菟虛蛟蛙蛭蛔蛛蛤蛐蛞街裁裂袱覃視註詠評詞証詁"],["b640","詔詛詐詆訴診訶詖象貂貯貼貳貽賁費賀貴買貶貿貸越超趁跎距跋跚跑跌跛跆軻軸軼辜逮逵週逸進逶鄂郵鄉郾酣酥量鈔鈕鈣鈉鈞鈍鈐鈇鈑閔閏開閑"],["b6a1","間閒閎隊階隋陽隅隆隍陲隄雁雅雄集雇雯雲韌項順須飧飪飯飩飲飭馮馭黃黍黑亂傭債傲傳僅傾催傷傻傯僇剿剷剽募勦勤勢勣匯嗟嗨嗓嗦嗎嗜嗇嗑嗣嗤嗯嗚嗡嗅嗆嗥嗉園圓塞塑塘塗塚塔填塌塭塊塢塒塋奧嫁嫉嫌媾媽媼"],["b740","媳嫂媲嵩嵯幌幹廉廈弒彙徬微愚意慈感想愛惹愁愈慎慌慄慍愾愴愧愍愆愷戡戢搓搾搞搪搭搽搬搏搜搔損搶搖搗搆敬斟新暗暉暇暈暖暄暘暍會榔業"],["b7a1","楚楷楠楔極椰概楊楨楫楞楓楹榆楝楣楛歇歲毀殿毓毽溢溯滓溶滂源溝滇滅溥溘溼溺溫滑準溜滄滔溪溧溴煎煙煩煤煉照煜煬煦煌煥煞煆煨煖爺牒猷獅猿猾瑯瑚瑕瑟瑞瑁琿瑙瑛瑜當畸瘀痰瘁痲痱痺痿痴痳盞盟睛睫睦睞督"],["b840","睹睪睬睜睥睨睢矮碎碰碗碘碌碉硼碑碓硿祺祿禁萬禽稜稚稠稔稟稞窟窠筷節筠筮筧粱粳粵經絹綑綁綏絛置罩罪署義羨群聖聘肆肄腱腰腸腥腮腳腫"],["b8a1","腹腺腦舅艇蒂葷落萱葵葦葫葉葬葛萼萵葡董葩葭葆虞虜號蛹蜓蜈蜇蜀蛾蛻蜂蜃蜆蜊衙裟裔裙補裘裝裡裊裕裒覜解詫該詳試詩詰誇詼詣誠話誅詭詢詮詬詹詻訾詨豢貊貉賊資賈賄貲賃賂賅跡跟跨路跳跺跪跤跦躲較載軾輊"],["b940","辟農運遊道遂達逼違遐遇遏過遍遑逾遁鄒鄗酬酪酩釉鈷鉗鈸鈽鉀鈾鉛鉋鉤鉑鈴鉉鉍鉅鈹鈿鉚閘隘隔隕雍雋雉雊雷電雹零靖靴靶預頑頓頊頒頌飼飴"],["b9a1","飽飾馳馱馴髡鳩麂鼎鼓鼠僧僮僥僖僭僚僕像僑僱僎僩兢凳劃劂匱厭嗾嘀嘛嘗嗽嘔嘆嘉嘍嘎嗷嘖嘟嘈嘐嗶團圖塵塾境墓墊塹墅塽壽夥夢夤奪奩嫡嫦嫩嫗嫖嫘嫣孵寞寧寡寥實寨寢寤察對屢嶄嶇幛幣幕幗幔廓廖弊彆彰徹慇"],["ba40","愿態慷慢慣慟慚慘慵截撇摘摔撤摸摟摺摑摧搴摭摻敲斡旗旖暢暨暝榜榨榕槁榮槓構榛榷榻榫榴槐槍榭槌榦槃榣歉歌氳漳演滾漓滴漩漾漠漬漏漂漢"],["baa1","滿滯漆漱漸漲漣漕漫漯澈漪滬漁滲滌滷熔熙煽熊熄熒爾犒犖獄獐瑤瑣瑪瑰瑭甄疑瘧瘍瘋瘉瘓盡監瞄睽睿睡磁碟碧碳碩碣禎福禍種稱窪窩竭端管箕箋筵算箝箔箏箸箇箄粹粽精綻綰綜綽綾綠緊綴網綱綺綢綿綵綸維緒緇綬"],["bb40","罰翠翡翟聞聚肇腐膀膏膈膊腿膂臧臺與舔舞艋蓉蒿蓆蓄蒙蒞蒲蒜蓋蒸蓀蓓蒐蒼蓑蓊蜿蜜蜻蜢蜥蜴蜘蝕蜷蜩裳褂裴裹裸製裨褚裯誦誌語誣認誡誓誤"],["bba1","說誥誨誘誑誚誧豪貍貌賓賑賒赫趙趕跼輔輒輕輓辣遠遘遜遣遙遞遢遝遛鄙鄘鄞酵酸酷酴鉸銀銅銘銖鉻銓銜銨鉼銑閡閨閩閣閥閤隙障際雌雒需靼鞅韶頗領颯颱餃餅餌餉駁骯骰髦魁魂鳴鳶鳳麼鼻齊億儀僻僵價儂儈儉儅凜"],["bc40","劇劈劉劍劊勰厲嘮嘻嘹嘲嘿嘴嘩噓噎噗噴嘶嘯嘰墀墟增墳墜墮墩墦奭嬉嫻嬋嫵嬌嬈寮寬審寫層履嶝嶔幢幟幡廢廚廟廝廣廠彈影德徵慶慧慮慝慕憂"],["bca1","慼慰慫慾憧憐憫憎憬憚憤憔憮戮摩摯摹撞撲撈撐撰撥撓撕撩撒撮播撫撚撬撙撢撳敵敷數暮暫暴暱樣樟槨樁樞標槽模樓樊槳樂樅槭樑歐歎殤毅毆漿潼澄潑潦潔澆潭潛潸潮澎潺潰潤澗潘滕潯潠潟熟熬熱熨牖犛獎獗瑩璋璃"],["bd40","瑾璀畿瘠瘩瘟瘤瘦瘡瘢皚皺盤瞎瞇瞌瞑瞋磋磅確磊碾磕碼磐稿稼穀稽稷稻窯窮箭箱範箴篆篇篁箠篌糊締練緯緻緘緬緝編緣線緞緩綞緙緲緹罵罷羯"],["bda1","翩耦膛膜膝膠膚膘蔗蔽蔚蓮蔬蔭蔓蔑蔣蔡蔔蓬蔥蓿蔆螂蝴蝶蝠蝦蝸蝨蝙蝗蝌蝓衛衝褐複褒褓褕褊誼諒談諄誕請諸課諉諂調誰論諍誶誹諛豌豎豬賠賞賦賤賬賭賢賣賜質賡赭趟趣踫踐踝踢踏踩踟踡踞躺輝輛輟輩輦輪輜輞"],["be40","輥適遮遨遭遷鄰鄭鄧鄱醇醉醋醃鋅銻銷鋪銬鋤鋁銳銼鋒鋇鋰銲閭閱霄霆震霉靠鞍鞋鞏頡頫頜颳養餓餒餘駝駐駟駛駑駕駒駙骷髮髯鬧魅魄魷魯鴆鴉"],["bea1","鴃麩麾黎墨齒儒儘儔儐儕冀冪凝劑劓勳噙噫噹噩噤噸噪器噥噱噯噬噢噶壁墾壇壅奮嬝嬴學寰導彊憲憑憩憊懍憶憾懊懈戰擅擁擋撻撼據擄擇擂操撿擒擔撾整曆曉暹曄曇暸樽樸樺橙橫橘樹橄橢橡橋橇樵機橈歙歷氅濂澱澡"],["bf40","濃澤濁澧澳激澹澶澦澠澴熾燉燐燒燈燕熹燎燙燜燃燄獨璜璣璘璟璞瓢甌甍瘴瘸瘺盧盥瞠瞞瞟瞥磨磚磬磧禦積穎穆穌穋窺篙簑築篤篛篡篩篦糕糖縊"],["bfa1","縑縈縛縣縞縝縉縐罹羲翰翱翮耨膳膩膨臻興艘艙蕊蕙蕈蕨蕩蕃蕉蕭蕪蕞螃螟螞螢融衡褪褲褥褫褡親覦諦諺諫諱謀諜諧諮諾謁謂諷諭諳諶諼豫豭貓賴蹄踱踴蹂踹踵輻輯輸輳辨辦遵遴選遲遼遺鄴醒錠錶鋸錳錯錢鋼錫錄錚"],["c040","錐錦錡錕錮錙閻隧隨險雕霎霑霖霍霓霏靛靜靦鞘頰頸頻頷頭頹頤餐館餞餛餡餚駭駢駱骸骼髻髭鬨鮑鴕鴣鴦鴨鴒鴛默黔龍龜優償儡儲勵嚎嚀嚐嚅嚇"],["c0a1","嚏壕壓壑壎嬰嬪嬤孺尷屨嶼嶺嶽嶸幫彌徽應懂懇懦懋戲戴擎擊擘擠擰擦擬擱擢擭斂斃曙曖檀檔檄檢檜櫛檣橾檗檐檠歜殮毚氈濘濱濟濠濛濤濫濯澀濬濡濩濕濮濰燧營燮燦燥燭燬燴燠爵牆獰獲璩環璦璨癆療癌盪瞳瞪瞰瞬"],["c140","瞧瞭矯磷磺磴磯礁禧禪穗窿簇簍篾篷簌篠糠糜糞糢糟糙糝縮績繆縷縲繃縫總縱繅繁縴縹繈縵縿縯罄翳翼聱聲聰聯聳臆臃膺臂臀膿膽臉膾臨舉艱薪"],["c1a1","薄蕾薜薑薔薯薛薇薨薊虧蟀蟑螳蟒蟆螫螻螺蟈蟋褻褶襄褸褽覬謎謗謙講謊謠謝謄謐豁谿豳賺賽購賸賻趨蹉蹋蹈蹊轄輾轂轅輿避遽還邁邂邀鄹醣醞醜鍍鎂錨鍵鍊鍥鍋錘鍾鍬鍛鍰鍚鍔闊闋闌闈闆隱隸雖霜霞鞠韓顆颶餵騁"],["c240","駿鮮鮫鮪鮭鴻鴿麋黏點黜黝黛鼾齋叢嚕嚮壙壘嬸彝懣戳擴擲擾攆擺擻擷斷曜朦檳檬櫃檻檸櫂檮檯歟歸殯瀉瀋濾瀆濺瀑瀏燻燼燾燸獷獵璧璿甕癖癘"],["c2a1","癒瞽瞿瞻瞼礎禮穡穢穠竄竅簫簧簪簞簣簡糧織繕繞繚繡繒繙罈翹翻職聶臍臏舊藏薩藍藐藉薰薺薹薦蟯蟬蟲蟠覆覲觴謨謹謬謫豐贅蹙蹣蹦蹤蹟蹕軀轉轍邇邃邈醫醬釐鎔鎊鎖鎢鎳鎮鎬鎰鎘鎚鎗闔闖闐闕離雜雙雛雞霤鞣鞦"],["c340","鞭韹額顏題顎顓颺餾餿餽餮馥騎髁鬃鬆魏魎魍鯊鯉鯽鯈鯀鵑鵝鵠黠鼕鼬儳嚥壞壟壢寵龐廬懲懷懶懵攀攏曠曝櫥櫝櫚櫓瀛瀟瀨瀚瀝瀕瀘爆爍牘犢獸"],["c3a1","獺璽瓊瓣疇疆癟癡矇礙禱穫穩簾簿簸簽簷籀繫繭繹繩繪羅繳羶羹羸臘藩藝藪藕藤藥藷蟻蠅蠍蟹蟾襠襟襖襞譁譜識證譚譎譏譆譙贈贊蹼蹲躇蹶蹬蹺蹴轔轎辭邊邋醱醮鏡鏑鏟鏃鏈鏜鏝鏖鏢鏍鏘鏤鏗鏨關隴難霪霧靡韜韻類"],["c440","願顛颼饅饉騖騙鬍鯨鯧鯖鯛鶉鵡鵲鵪鵬麒麗麓麴勸嚨嚷嚶嚴嚼壤孀孃孽寶巉懸懺攘攔攙曦朧櫬瀾瀰瀲爐獻瓏癢癥礦礪礬礫竇競籌籃籍糯糰辮繽繼"],["c4a1","纂罌耀臚艦藻藹蘑藺蘆蘋蘇蘊蠔蠕襤覺觸議譬警譯譟譫贏贍躉躁躅躂醴釋鐘鐃鏽闡霰飄饒饑馨騫騰騷騵鰓鰍鹹麵黨鼯齟齣齡儷儸囁囀囂夔屬巍懼懾攝攜斕曩櫻欄櫺殲灌爛犧瓖瓔癩矓籐纏續羼蘗蘭蘚蠣蠢蠡蠟襪襬覽譴"],["c540","護譽贓躊躍躋轟辯醺鐮鐳鐵鐺鐸鐲鐫闢霸霹露響顧顥饗驅驃驀騾髏魔魑鰭鰥鶯鶴鷂鶸麝黯鼙齜齦齧儼儻囈囊囉孿巔巒彎懿攤權歡灑灘玀瓤疊癮癬"],["c5a1","禳籠籟聾聽臟襲襯觼讀贖贗躑躓轡酈鑄鑑鑒霽霾韃韁顫饕驕驍髒鬚鱉鰱鰾鰻鷓鷗鼴齬齪龔囌巖戀攣攫攪曬欐瓚竊籤籣籥纓纖纔臢蘸蘿蠱變邐邏鑣鑠鑤靨顯饜驚驛驗髓體髑鱔鱗鱖鷥麟黴囑壩攬灞癱癲矗罐羈蠶蠹衢讓讒"],["c640","讖艷贛釀鑪靂靈靄韆顰驟鬢魘鱟鷹鷺鹼鹽鼇齷齲廳欖灣籬籮蠻觀躡釁鑲鑰顱饞髖鬣黌灤矚讚鑷韉驢驥纜讜躪釅鑽鑾鑼鱷鱸黷豔鑿鸚爨驪鬱鸛鸞籲"],["c940","乂乜凵匚厂万丌乇亍囗兀屮彳丏冇与丮亓仂仉仈冘勼卬厹圠夃夬尐巿旡殳毌气爿丱丼仨仜仩仡仝仚刌匜卌圢圣夗夯宁宄尒尻屴屳帄庀庂忉戉扐氕"],["c9a1","氶汃氿氻犮犰玊禸肊阞伎优伬仵伔仱伀价伈伝伂伅伢伓伄仴伒冱刓刉刐劦匢匟卍厊吇囡囟圮圪圴夼妀奼妅奻奾奷奿孖尕尥屼屺屻屾巟幵庄异弚彴忕忔忏扜扞扤扡扦扢扙扠扚扥旯旮朾朹朸朻机朿朼朳氘汆汒汜汏汊汔汋"],["ca40","汌灱牞犴犵玎甪癿穵网艸艼芀艽艿虍襾邙邗邘邛邔阢阤阠阣佖伻佢佉体佤伾佧佒佟佁佘伭伳伿佡冏冹刜刞刡劭劮匉卣卲厎厏吰吷吪呔呅吙吜吥吘"],["caa1","吽呏呁吨吤呇囮囧囥坁坅坌坉坋坒夆奀妦妘妠妗妎妢妐妏妧妡宎宒尨尪岍岏岈岋岉岒岊岆岓岕巠帊帎庋庉庌庈庍弅弝彸彶忒忑忐忭忨忮忳忡忤忣忺忯忷忻怀忴戺抃抌抎抏抔抇扱扻扺扰抁抈扷扽扲扴攷旰旴旳旲旵杅杇"],["cb40","杙杕杌杈杝杍杚杋毐氙氚汸汧汫沄沋沏汱汯汩沚汭沇沕沜汦汳汥汻沎灴灺牣犿犽狃狆狁犺狅玕玗玓玔玒町甹疔疕皁礽耴肕肙肐肒肜芐芏芅芎芑芓"],["cba1","芊芃芄豸迉辿邟邡邥邞邧邠阰阨阯阭丳侘佼侅佽侀侇佶佴侉侄佷佌侗佪侚佹侁佸侐侜侔侞侒侂侕佫佮冞冼冾刵刲刳剆刱劼匊匋匼厒厔咇呿咁咑咂咈呫呺呾呥呬呴呦咍呯呡呠咘呣呧呤囷囹坯坲坭坫坱坰坶垀坵坻坳坴坢"],["cc40","坨坽夌奅妵妺姏姎妲姌姁妶妼姃姖妱妽姀姈妴姇孢孥宓宕屄屇岮岤岠岵岯岨岬岟岣岭岢岪岧岝岥岶岰岦帗帔帙弨弢弣弤彔徂彾彽忞忥怭怦怙怲怋"],["cca1","怴怊怗怳怚怞怬怢怍怐怮怓怑怌怉怜戔戽抭抴拑抾抪抶拊抮抳抯抻抩抰抸攽斨斻昉旼昄昒昈旻昃昋昍昅旽昑昐曶朊枅杬枎枒杶杻枘枆构杴枍枌杺枟枑枙枃杽极杸杹枔欥殀歾毞氝沓泬泫泮泙沶泔沭泧沷泐泂沺泃泆泭泲"],["cd40","泒泝沴沊沝沀泞泀洰泍泇沰泹泏泩泑炔炘炅炓炆炄炑炖炂炚炃牪狖狋狘狉狜狒狔狚狌狑玤玡玭玦玢玠玬玝瓝瓨甿畀甾疌疘皯盳盱盰盵矸矼矹矻矺"],["cda1","矷祂礿秅穸穻竻籵糽耵肏肮肣肸肵肭舠芠苀芫芚芘芛芵芧芮芼芞芺芴芨芡芩苂芤苃芶芢虰虯虭虮豖迒迋迓迍迖迕迗邲邴邯邳邰阹阽阼阺陃俍俅俓侲俉俋俁俔俜俙侻侳俛俇俖侺俀侹俬剄剉勀勂匽卼厗厖厙厘咺咡咭咥哏"],["ce40","哃茍咷咮哖咶哅哆咠呰咼咢咾呲哞咰垵垞垟垤垌垗垝垛垔垘垏垙垥垚垕壴复奓姡姞姮娀姱姝姺姽姼姶姤姲姷姛姩姳姵姠姾姴姭宨屌峐峘峌峗峋峛"],["cea1","峞峚峉峇峊峖峓峔峏峈峆峎峟峸巹帡帢帣帠帤庰庤庢庛庣庥弇弮彖徆怷怹恔恲恞恅恓恇恉恛恌恀恂恟怤恄恘恦恮扂扃拏挍挋拵挎挃拫拹挏挌拸拶挀挓挔拺挕拻拰敁敃斪斿昶昡昲昵昜昦昢昳昫昺昝昴昹昮朏朐柁柲柈枺"],["cf40","柜枻柸柘柀枷柅柫柤柟枵柍枳柷柶柮柣柂枹柎柧柰枲柼柆柭柌枮柦柛柺柉柊柃柪柋欨殂殄殶毖毘毠氠氡洨洴洭洟洼洿洒洊泚洳洄洙洺洚洑洀洝浂"],["cfa1","洁洘洷洃洏浀洇洠洬洈洢洉洐炷炟炾炱炰炡炴炵炩牁牉牊牬牰牳牮狊狤狨狫狟狪狦狣玅珌珂珈珅玹玶玵玴珫玿珇玾珃珆玸珋瓬瓮甮畇畈疧疪癹盄眈眃眄眅眊盷盻盺矧矨砆砑砒砅砐砏砎砉砃砓祊祌祋祅祄秕种秏秖秎窀"],["d040","穾竑笀笁籺籸籹籿粀粁紃紈紁罘羑羍羾耇耎耏耔耷胘胇胠胑胈胂胐胅胣胙胜胊胕胉胏胗胦胍臿舡芔苙苾苹茇苨茀苕茺苫苖苴苬苡苲苵茌苻苶苰苪"],["d0a1","苤苠苺苳苭虷虴虼虳衁衎衧衪衩觓訄訇赲迣迡迮迠郱邽邿郕郅邾郇郋郈釔釓陔陏陑陓陊陎倞倅倇倓倢倰倛俵俴倳倷倬俶俷倗倜倠倧倵倯倱倎党冔冓凊凄凅凈凎剡剚剒剞剟剕剢勍匎厞唦哢唗唒哧哳哤唚哿唄唈哫唑唅哱"],["d140","唊哻哷哸哠唎唃唋圁圂埌堲埕埒垺埆垽垼垸垶垿埇埐垹埁夎奊娙娖娭娮娕娏娗娊娞娳孬宧宭宬尃屖屔峬峿峮峱峷崀峹帩帨庨庮庪庬弳弰彧恝恚恧"],["d1a1","恁悢悈悀悒悁悝悃悕悛悗悇悜悎戙扆拲挐捖挬捄捅挶捃揤挹捋捊挼挩捁挴捘捔捙挭捇挳捚捑挸捗捀捈敊敆旆旃旄旂晊晟晇晑朒朓栟栚桉栲栳栻桋桏栖栱栜栵栫栭栯桎桄栴栝栒栔栦栨栮桍栺栥栠欬欯欭欱欴歭肂殈毦毤"],["d240","毨毣毢毧氥浺浣浤浶洍浡涒浘浢浭浯涑涍淯浿涆浞浧浠涗浰浼浟涂涘洯浨涋浾涀涄洖涃浻浽浵涐烜烓烑烝烋缹烢烗烒烞烠烔烍烅烆烇烚烎烡牂牸"],["d2a1","牷牶猀狺狴狾狶狳狻猁珓珙珥珖玼珧珣珩珜珒珛珔珝珚珗珘珨瓞瓟瓴瓵甡畛畟疰痁疻痄痀疿疶疺皊盉眝眛眐眓眒眣眑眕眙眚眢眧砣砬砢砵砯砨砮砫砡砩砳砪砱祔祛祏祜祓祒祑秫秬秠秮秭秪秜秞秝窆窉窅窋窌窊窇竘笐"],["d340","笄笓笅笏笈笊笎笉笒粄粑粊粌粈粍粅紞紝紑紎紘紖紓紟紒紏紌罜罡罞罠罝罛羖羒翃翂翀耖耾耹胺胲胹胵脁胻脀舁舯舥茳茭荄茙荑茥荖茿荁茦茜茢"],["d3a1","荂荎茛茪茈茼荍茖茤茠茷茯茩荇荅荌荓茞茬荋茧荈虓虒蚢蚨蚖蚍蚑蚞蚇蚗蚆蚋蚚蚅蚥蚙蚡蚧蚕蚘蚎蚝蚐蚔衃衄衭衵衶衲袀衱衿衯袃衾衴衼訒豇豗豻貤貣赶赸趵趷趶軑軓迾迵适迿迻逄迼迶郖郠郙郚郣郟郥郘郛郗郜郤酐"],["d440","酎酏釕釢釚陜陟隼飣髟鬯乿偰偪偡偞偠偓偋偝偲偈偍偁偛偊偢倕偅偟偩偫偣偤偆偀偮偳偗偑凐剫剭剬剮勖勓匭厜啵啶唼啍啐唴唪啑啢唶唵唰啒啅"],["d4a1","唌唲啥啎唹啈唭唻啀啋圊圇埻堔埢埶埜埴堀埭埽堈埸堋埳埏堇埮埣埲埥埬埡堎埼堐埧堁堌埱埩埰堍堄奜婠婘婕婧婞娸娵婭婐婟婥婬婓婤婗婃婝婒婄婛婈媎娾婍娹婌婰婩婇婑婖婂婜孲孮寁寀屙崞崋崝崚崠崌崨崍崦崥崏"],["d540","崰崒崣崟崮帾帴庱庴庹庲庳弶弸徛徖徟悊悐悆悾悰悺惓惔惏惤惙惝惈悱惛悷惊悿惃惍惀挲捥掊掂捽掽掞掭掝掗掫掎捯掇掐据掯捵掜捭掮捼掤挻掟"],["d5a1","捸掅掁掑掍捰敓旍晥晡晛晙晜晢朘桹梇梐梜桭桮梮梫楖桯梣梬梩桵桴梲梏桷梒桼桫桲梪梀桱桾梛梖梋梠梉梤桸桻梑梌梊桽欶欳欷欸殑殏殍殎殌氪淀涫涴涳湴涬淩淢涷淶淔渀淈淠淟淖涾淥淜淝淛淴淊涽淭淰涺淕淂淏淉"],["d640","淐淲淓淽淗淍淣涻烺焍烷焗烴焌烰焄烳焐烼烿焆焓焀烸烶焋焂焎牾牻牼牿猝猗猇猑猘猊猈狿猏猞玈珶珸珵琄琁珽琇琀珺珼珿琌琋珴琈畤畣痎痒痏"],["d6a1","痋痌痑痐皏皉盓眹眯眭眱眲眴眳眽眥眻眵硈硒硉硍硊硌砦硅硐祤祧祩祪祣祫祡离秺秸秶秷窏窔窐笵筇笴笥笰笢笤笳笘笪笝笱笫笭笯笲笸笚笣粔粘粖粣紵紽紸紶紺絅紬紩絁絇紾紿絊紻紨罣羕羜羝羛翊翋翍翐翑翇翏翉耟"],["d740","耞耛聇聃聈脘脥脙脛脭脟脬脞脡脕脧脝脢舑舸舳舺舴舲艴莐莣莨莍荺荳莤荴莏莁莕莙荵莔莩荽莃莌莝莛莪莋荾莥莯莈莗莰荿莦莇莮荶莚虙虖蚿蚷"],["d7a1","蛂蛁蛅蚺蚰蛈蚹蚳蚸蛌蚴蚻蚼蛃蚽蚾衒袉袕袨袢袪袚袑袡袟袘袧袙袛袗袤袬袌袓袎覂觖觙觕訰訧訬訞谹谻豜豝豽貥赽赻赹趼跂趹趿跁軘軞軝軜軗軠軡逤逋逑逜逌逡郯郪郰郴郲郳郔郫郬郩酖酘酚酓酕釬釴釱釳釸釤釹釪"],["d840","釫釷釨釮镺閆閈陼陭陫陱陯隿靪頄飥馗傛傕傔傞傋傣傃傌傎傝偨傜傒傂傇兟凔匒匑厤厧喑喨喥喭啷噅喢喓喈喏喵喁喣喒喤啽喌喦啿喕喡喎圌堩堷"],["d8a1","堙堞堧堣堨埵塈堥堜堛堳堿堶堮堹堸堭堬堻奡媯媔媟婺媢媞婸媦婼媥媬媕媮娷媄媊媗媃媋媩婻婽媌媜媏媓媝寪寍寋寔寑寊寎尌尰崷嵃嵫嵁嵋崿崵嵑嵎嵕崳崺嵒崽崱嵙嵂崹嵉崸崼崲崶嵀嵅幄幁彘徦徥徫惉悹惌惢惎惄愔"],["d940","惲愊愖愅惵愓惸惼惾惁愃愘愝愐惿愄愋扊掔掱掰揎揥揨揯揃撝揳揊揠揶揕揲揵摡揟掾揝揜揄揘揓揂揇揌揋揈揰揗揙攲敧敪敤敜敨敥斌斝斞斮旐旒"],["d9a1","晼晬晻暀晱晹晪晲朁椌棓椄棜椪棬棪棱椏棖棷棫棤棶椓椐棳棡椇棌椈楰梴椑棯棆椔棸棐棽棼棨椋椊椗棎棈棝棞棦棴棑椆棔棩椕椥棇欹欻欿欼殔殗殙殕殽毰毲毳氰淼湆湇渟湉溈渼渽湅湢渫渿湁湝湳渜渳湋湀湑渻渃渮湞"],["da40","湨湜湡渱渨湠湱湫渹渢渰湓湥渧湸湤湷湕湹湒湦渵渶湚焠焞焯烻焮焱焣焥焢焲焟焨焺焛牋牚犈犉犆犅犋猒猋猰猢猱猳猧猲猭猦猣猵猌琮琬琰琫琖"],["daa1","琚琡琭琱琤琣琝琩琠琲瓻甯畯畬痧痚痡痦痝痟痤痗皕皒盚睆睇睄睍睅睊睎睋睌矞矬硠硤硥硜硭硱硪确硰硩硨硞硢祴祳祲祰稂稊稃稌稄窙竦竤筊笻筄筈筌筎筀筘筅粢粞粨粡絘絯絣絓絖絧絪絏絭絜絫絒絔絩絑絟絎缾缿罥"],["db40","罦羢羠羡翗聑聏聐胾胔腃腊腒腏腇脽腍脺臦臮臷臸臹舄舼舽舿艵茻菏菹萣菀菨萒菧菤菼菶萐菆菈菫菣莿萁菝菥菘菿菡菋菎菖菵菉萉萏菞萑萆菂菳"],["dba1","菕菺菇菑菪萓菃菬菮菄菻菗菢萛菛菾蛘蛢蛦蛓蛣蛚蛪蛝蛫蛜蛬蛩蛗蛨蛑衈衖衕袺裗袹袸裀袾袶袼袷袽袲褁裉覕覘覗觝觚觛詎詍訹詙詀詗詘詄詅詒詈詑詊詌詏豟貁貀貺貾貰貹貵趄趀趉跘跓跍跇跖跜跏跕跙跈跗跅軯軷軺"],["dc40","軹軦軮軥軵軧軨軶軫軱軬軴軩逭逴逯鄆鄬鄄郿郼鄈郹郻鄁鄀鄇鄅鄃酡酤酟酢酠鈁鈊鈥鈃鈚鈦鈏鈌鈀鈒釿釽鈆鈄鈧鈂鈜鈤鈙鈗鈅鈖镻閍閌閐隇陾隈"],["dca1","隉隃隀雂雈雃雱雰靬靰靮頇颩飫鳦黹亃亄亶傽傿僆傮僄僊傴僈僂傰僁傺傱僋僉傶傸凗剺剸剻剼嗃嗛嗌嗐嗋嗊嗝嗀嗔嗄嗩喿嗒喍嗏嗕嗢嗖嗈嗲嗍嗙嗂圔塓塨塤塏塍塉塯塕塎塝塙塥塛堽塣塱壼嫇嫄嫋媺媸媱媵媰媿嫈媻嫆"],["dd40","媷嫀嫊媴媶嫍媹媐寖寘寙尟尳嵱嵣嵊嵥嵲嵬嵞嵨嵧嵢巰幏幎幊幍幋廅廌廆廋廇彀徯徭惷慉慊愫慅愶愲愮慆愯慏愩慀戠酨戣戥戤揅揱揫搐搒搉搠搤"],["dda1","搳摃搟搕搘搹搷搢搣搌搦搰搨摁搵搯搊搚摀搥搧搋揧搛搮搡搎敯斒旓暆暌暕暐暋暊暙暔晸朠楦楟椸楎楢楱椿楅楪椹楂楗楙楺楈楉椵楬椳椽楥棰楸椴楩楀楯楄楶楘楁楴楌椻楋椷楜楏楑椲楒椯楻椼歆歅歃歂歈歁殛嗀毻毼"],["de40","毹毷毸溛滖滈溏滀溟溓溔溠溱溹滆滒溽滁溞滉溷溰滍溦滏溲溾滃滜滘溙溒溎溍溤溡溿溳滐滊溗溮溣煇煔煒煣煠煁煝煢煲煸煪煡煂煘煃煋煰煟煐煓"],["dea1","煄煍煚牏犍犌犑犐犎猼獂猻猺獀獊獉瑄瑊瑋瑒瑑瑗瑀瑏瑐瑎瑂瑆瑍瑔瓡瓿瓾瓽甝畹畷榃痯瘏瘃痷痾痼痹痸瘐痻痶痭痵痽皙皵盝睕睟睠睒睖睚睩睧睔睙睭矠碇碚碔碏碄碕碅碆碡碃硹碙碀碖硻祼禂祽祹稑稘稙稒稗稕稢稓"],["df40","稛稐窣窢窞竫筦筤筭筴筩筲筥筳筱筰筡筸筶筣粲粴粯綈綆綀綍絿綅絺綎絻綃絼綌綔綄絽綒罭罫罧罨罬羦羥羧翛翜耡腤腠腷腜腩腛腢腲朡腞腶腧腯"],["dfa1","腄腡舝艉艄艀艂艅蓱萿葖葶葹蒏蒍葥葑葀蒆葧萰葍葽葚葙葴葳葝蔇葞萷萺萴葺葃葸萲葅萩菙葋萯葂萭葟葰萹葎葌葒葯蓅蒎萻葇萶萳葨葾葄萫葠葔葮葐蜋蜄蛷蜌蛺蛖蛵蝍蛸蜎蜉蜁蛶蜍蜅裖裋裍裎裞裛裚裌裐覅覛觟觥觤"],["e040","觡觠觢觜触詶誆詿詡訿詷誂誄詵誃誁詴詺谼豋豊豥豤豦貆貄貅賌赨赩趑趌趎趏趍趓趔趐趒跰跠跬跱跮跐跩跣跢跧跲跫跴輆軿輁輀輅輇輈輂輋遒逿"],["e0a1","遄遉逽鄐鄍鄏鄑鄖鄔鄋鄎酮酯鉈鉒鈰鈺鉦鈳鉥鉞銃鈮鉊鉆鉭鉬鉏鉠鉧鉯鈶鉡鉰鈱鉔鉣鉐鉲鉎鉓鉌鉖鈲閟閜閞閛隒隓隑隗雎雺雽雸雵靳靷靸靲頏頍頎颬飶飹馯馲馰馵骭骫魛鳪鳭鳧麀黽僦僔僗僨僳僛僪僝僤僓僬僰僯僣僠"],["e140","凘劀劁勩勫匰厬嘧嘕嘌嘒嗼嘏嘜嘁嘓嘂嗺嘝嘄嗿嗹墉塼墐墘墆墁塿塴墋塺墇墑墎塶墂墈塻墔墏壾奫嫜嫮嫥嫕嫪嫚嫭嫫嫳嫢嫠嫛嫬嫞嫝嫙嫨嫟孷寠"],["e1a1","寣屣嶂嶀嵽嶆嵺嶁嵷嶊嶉嶈嵾嵼嶍嵹嵿幘幙幓廘廑廗廎廜廕廙廒廔彄彃彯徶愬愨慁慞慱慳慒慓慲慬憀慴慔慺慛慥愻慪慡慖戩戧戫搫摍摛摝摴摶摲摳摽摵摦撦摎撂摞摜摋摓摠摐摿搿摬摫摙摥摷敳斠暡暠暟朅朄朢榱榶槉"],["e240","榠槎榖榰榬榼榑榙榎榧榍榩榾榯榿槄榽榤槔榹槊榚槏榳榓榪榡榞槙榗榐槂榵榥槆歊歍歋殞殟殠毃毄毾滎滵滱漃漥滸漷滻漮漉潎漙漚漧漘漻漒滭漊"],["e2a1","漶潳滹滮漭潀漰漼漵滫漇漎潃漅滽滶漹漜滼漺漟漍漞漈漡熇熐熉熀熅熂熏煻熆熁熗牄牓犗犕犓獃獍獑獌瑢瑳瑱瑵瑲瑧瑮甀甂甃畽疐瘖瘈瘌瘕瘑瘊瘔皸瞁睼瞅瞂睮瞀睯睾瞃碲碪碴碭碨硾碫碞碥碠碬碢碤禘禊禋禖禕禔禓"],["e340","禗禈禒禐稫穊稰稯稨稦窨窫窬竮箈箜箊箑箐箖箍箌箛箎箅箘劄箙箤箂粻粿粼粺綧綷緂綣綪緁緀緅綝緎緄緆緋緌綯綹綖綼綟綦綮綩綡緉罳翢翣翥翞"],["e3a1","耤聝聜膉膆膃膇膍膌膋舕蒗蒤蒡蒟蒺蓎蓂蒬蒮蒫蒹蒴蓁蓍蒪蒚蒱蓐蒝蒧蒻蒢蒔蓇蓌蒛蒩蒯蒨蓖蒘蒶蓏蒠蓗蓔蓒蓛蒰蒑虡蜳蜣蜨蝫蝀蜮蜞蜡蜙蜛蝃蜬蝁蜾蝆蜠蜲蜪蜭蜼蜒蜺蜱蜵蝂蜦蜧蜸蜤蜚蜰蜑裷裧裱裲裺裾裮裼裶裻"],["e440","裰裬裫覝覡覟覞觩觫觨誫誙誋誒誏誖谽豨豩賕賏賗趖踉踂跿踍跽踊踃踇踆踅跾踀踄輐輑輎輍鄣鄜鄠鄢鄟鄝鄚鄤鄡鄛酺酲酹酳銥銤鉶銛鉺銠銔銪銍"],["e4a1","銦銚銫鉹銗鉿銣鋮銎銂銕銢鉽銈銡銊銆銌銙銧鉾銇銩銝銋鈭隞隡雿靘靽靺靾鞃鞀鞂靻鞄鞁靿韎韍頖颭颮餂餀餇馝馜駃馹馻馺駂馽駇骱髣髧鬾鬿魠魡魟鳱鳲鳵麧僿儃儰僸儆儇僶僾儋儌僽儊劋劌勱勯噈噂噌嘵噁噊噉噆噘"],["e540","噚噀嘳嘽嘬嘾嘸嘪嘺圚墫墝墱墠墣墯墬墥墡壿嫿嫴嫽嫷嫶嬃嫸嬂嫹嬁嬇嬅嬏屧嶙嶗嶟嶒嶢嶓嶕嶠嶜嶡嶚嶞幩幝幠幜緳廛廞廡彉徲憋憃慹憱憰憢憉"],["e5a1","憛憓憯憭憟憒憪憡憍慦憳戭摮摰撖撠撅撗撜撏撋撊撌撣撟摨撱撘敶敺敹敻斲斳暵暰暩暲暷暪暯樀樆樗槥槸樕槱槤樠槿槬槢樛樝槾樧槲槮樔槷槧橀樈槦槻樍槼槫樉樄樘樥樏槶樦樇槴樖歑殥殣殢殦氁氀毿氂潁漦潾澇濆澒"],["e640","澍澉澌潢潏澅潚澖潶潬澂潕潲潒潐潗澔澓潝漀潡潫潽潧澐潓澋潩潿澕潣潷潪潻熲熯熛熰熠熚熩熵熝熥熞熤熡熪熜熧熳犘犚獘獒獞獟獠獝獛獡獚獙"],["e6a1","獢璇璉璊璆璁瑽璅璈瑼瑹甈甇畾瘥瘞瘙瘝瘜瘣瘚瘨瘛皜皝皞皛瞍瞏瞉瞈磍碻磏磌磑磎磔磈磃磄磉禚禡禠禜禢禛歶稹窲窴窳箷篋箾箬篎箯箹篊箵糅糈糌糋緷緛緪緧緗緡縃緺緦緶緱緰緮緟罶羬羰羭翭翫翪翬翦翨聤聧膣膟"],["e740","膞膕膢膙膗舖艏艓艒艐艎艑蔤蔻蔏蔀蔩蔎蔉蔍蔟蔊蔧蔜蓻蔫蓺蔈蔌蓴蔪蓲蔕蓷蓫蓳蓼蔒蓪蓩蔖蓾蔨蔝蔮蔂蓽蔞蓶蔱蔦蓧蓨蓰蓯蓹蔘蔠蔰蔋蔙蔯虢"],["e7a1","蝖蝣蝤蝷蟡蝳蝘蝔蝛蝒蝡蝚蝑蝞蝭蝪蝐蝎蝟蝝蝯蝬蝺蝮蝜蝥蝏蝻蝵蝢蝧蝩衚褅褌褔褋褗褘褙褆褖褑褎褉覢覤覣觭觰觬諏諆誸諓諑諔諕誻諗誾諀諅諘諃誺誽諙谾豍貏賥賟賙賨賚賝賧趠趜趡趛踠踣踥踤踮踕踛踖踑踙踦踧"],["e840","踔踒踘踓踜踗踚輬輤輘輚輠輣輖輗遳遰遯遧遫鄯鄫鄩鄪鄲鄦鄮醅醆醊醁醂醄醀鋐鋃鋄鋀鋙銶鋏鋱鋟鋘鋩鋗鋝鋌鋯鋂鋨鋊鋈鋎鋦鋍鋕鋉鋠鋞鋧鋑鋓"],["e8a1","銵鋡鋆銴镼閬閫閮閰隤隢雓霅霈霂靚鞊鞎鞈韐韏頞頝頦頩頨頠頛頧颲餈飺餑餔餖餗餕駜駍駏駓駔駎駉駖駘駋駗駌骳髬髫髳髲髱魆魃魧魴魱魦魶魵魰魨魤魬鳼鳺鳽鳿鳷鴇鴀鳹鳻鴈鴅鴄麃黓鼏鼐儜儓儗儚儑凞匴叡噰噠噮"],["e940","噳噦噣噭噲噞噷圜圛壈墽壉墿墺壂墼壆嬗嬙嬛嬡嬔嬓嬐嬖嬨嬚嬠嬞寯嶬嶱嶩嶧嶵嶰嶮嶪嶨嶲嶭嶯嶴幧幨幦幯廩廧廦廨廥彋徼憝憨憖懅憴懆懁懌憺"],["e9a1","憿憸憌擗擖擐擏擉撽撉擃擛擳擙攳敿敼斢曈暾曀曊曋曏暽暻暺曌朣樴橦橉橧樲橨樾橝橭橶橛橑樨橚樻樿橁橪橤橐橏橔橯橩橠樼橞橖橕橍橎橆歕歔歖殧殪殫毈毇氄氃氆澭濋澣濇澼濎濈潞濄澽澞濊澨瀄澥澮澺澬澪濏澿澸"],["ea40","澢濉澫濍澯澲澰燅燂熿熸燖燀燁燋燔燊燇燏熽燘熼燆燚燛犝犞獩獦獧獬獥獫獪瑿璚璠璔璒璕璡甋疀瘯瘭瘱瘽瘳瘼瘵瘲瘰皻盦瞚瞝瞡瞜瞛瞢瞣瞕瞙"],["eaa1","瞗磝磩磥磪磞磣磛磡磢磭磟磠禤穄穈穇窶窸窵窱窷篞篣篧篝篕篥篚篨篹篔篪篢篜篫篘篟糒糔糗糐糑縒縡縗縌縟縠縓縎縜縕縚縢縋縏縖縍縔縥縤罃罻罼罺羱翯耪耩聬膱膦膮膹膵膫膰膬膴膲膷膧臲艕艖艗蕖蕅蕫蕍蕓蕡蕘"],["eb40","蕀蕆蕤蕁蕢蕄蕑蕇蕣蔾蕛蕱蕎蕮蕵蕕蕧蕠薌蕦蕝蕔蕥蕬虣虥虤螛螏螗螓螒螈螁螖螘蝹螇螣螅螐螑螝螄螔螜螚螉褞褦褰褭褮褧褱褢褩褣褯褬褟觱諠"],["eba1","諢諲諴諵諝謔諤諟諰諈諞諡諨諿諯諻貑貒貐賵賮賱賰賳赬赮趥趧踳踾踸蹀蹅踶踼踽蹁踰踿躽輶輮輵輲輹輷輴遶遹遻邆郺鄳鄵鄶醓醐醑醍醏錧錞錈錟錆錏鍺錸錼錛錣錒錁鍆錭錎錍鋋錝鋺錥錓鋹鋷錴錂錤鋿錩錹錵錪錔錌"],["ec40","錋鋾錉錀鋻錖閼闍閾閹閺閶閿閵閽隩雔霋霒霐鞙鞗鞔韰韸頵頯頲餤餟餧餩馞駮駬駥駤駰駣駪駩駧骹骿骴骻髶髺髹髷鬳鮀鮅鮇魼魾魻鮂鮓鮒鮐魺鮕"],["eca1","魽鮈鴥鴗鴠鴞鴔鴩鴝鴘鴢鴐鴙鴟麈麆麇麮麭黕黖黺鼒鼽儦儥儢儤儠儩勴嚓嚌嚍嚆嚄嚃噾嚂噿嚁壖壔壏壒嬭嬥嬲嬣嬬嬧嬦嬯嬮孻寱寲嶷幬幪徾徻懃憵憼懧懠懥懤懨懞擯擩擣擫擤擨斁斀斶旚曒檍檖檁檥檉檟檛檡檞檇檓檎"],["ed40","檕檃檨檤檑橿檦檚檅檌檒歛殭氉濌澩濴濔濣濜濭濧濦濞濲濝濢濨燡燱燨燲燤燰燢獳獮獯璗璲璫璐璪璭璱璥璯甐甑甒甏疄癃癈癉癇皤盩瞵瞫瞲瞷瞶"],["eda1","瞴瞱瞨矰磳磽礂磻磼磲礅磹磾礄禫禨穜穛穖穘穔穚窾竀竁簅簏篲簀篿篻簎篴簋篳簂簉簃簁篸篽簆篰篱簐簊糨縭縼繂縳顈縸縪繉繀繇縩繌縰縻縶繄縺罅罿罾罽翴翲耬膻臄臌臊臅臇膼臩艛艚艜薃薀薏薧薕薠薋薣蕻薤薚薞"],["ee40","蕷蕼薉薡蕺蕸蕗薎薖薆薍薙薝薁薢薂薈薅蕹蕶薘薐薟虨螾螪螭蟅螰螬螹螵螼螮蟉蟃蟂蟌螷螯蟄蟊螴螶螿螸螽蟞螲褵褳褼褾襁襒褷襂覭覯覮觲觳謞"],["eea1","謘謖謑謅謋謢謏謒謕謇謍謈謆謜謓謚豏豰豲豱豯貕貔賹赯蹎蹍蹓蹐蹌蹇轃轀邅遾鄸醚醢醛醙醟醡醝醠鎡鎃鎯鍤鍖鍇鍼鍘鍜鍶鍉鍐鍑鍠鍭鎏鍌鍪鍹鍗鍕鍒鍏鍱鍷鍻鍡鍞鍣鍧鎀鍎鍙闇闀闉闃闅閷隮隰隬霠霟霘霝霙鞚鞡鞜"],["ef40","鞞鞝韕韔韱顁顄顊顉顅顃餥餫餬餪餳餲餯餭餱餰馘馣馡騂駺駴駷駹駸駶駻駽駾駼騃骾髾髽鬁髼魈鮚鮨鮞鮛鮦鮡鮥鮤鮆鮢鮠鮯鴳鵁鵧鴶鴮鴯鴱鴸鴰"],["efa1","鵅鵂鵃鴾鴷鵀鴽翵鴭麊麉麍麰黈黚黻黿鼤鼣鼢齔龠儱儭儮嚘嚜嚗嚚嚝嚙奰嬼屩屪巀幭幮懘懟懭懮懱懪懰懫懖懩擿攄擽擸攁攃擼斔旛曚曛曘櫅檹檽櫡櫆檺檶檷櫇檴檭歞毉氋瀇瀌瀍瀁瀅瀔瀎濿瀀濻瀦濼濷瀊爁燿燹爃燽獶"],["f040","璸瓀璵瓁璾璶璻瓂甔甓癜癤癙癐癓癗癚皦皽盬矂瞺磿礌礓礔礉礐礒礑禭禬穟簜簩簙簠簟簭簝簦簨簢簥簰繜繐繖繣繘繢繟繑繠繗繓羵羳翷翸聵臑臒"],["f0a1","臐艟艞薴藆藀藃藂薳薵薽藇藄薿藋藎藈藅薱薶藒蘤薸薷薾虩蟧蟦蟢蟛蟫蟪蟥蟟蟳蟤蟔蟜蟓蟭蟘蟣螤蟗蟙蠁蟴蟨蟝襓襋襏襌襆襐襑襉謪謧謣謳謰謵譇謯謼謾謱謥謷謦謶謮謤謻謽謺豂豵貙貘貗賾贄贂贀蹜蹢蹠蹗蹖蹞蹥蹧"],["f140","蹛蹚蹡蹝蹩蹔轆轇轈轋鄨鄺鄻鄾醨醥醧醯醪鎵鎌鎒鎷鎛鎝鎉鎧鎎鎪鎞鎦鎕鎈鎙鎟鎍鎱鎑鎲鎤鎨鎴鎣鎥闒闓闑隳雗雚巂雟雘雝霣霢霥鞬鞮鞨鞫鞤鞪"],["f1a1","鞢鞥韗韙韖韘韺顐顑顒颸饁餼餺騏騋騉騍騄騑騊騅騇騆髀髜鬈鬄鬅鬩鬵魊魌魋鯇鯆鯃鮿鯁鮵鮸鯓鮶鯄鮹鮽鵜鵓鵏鵊鵛鵋鵙鵖鵌鵗鵒鵔鵟鵘鵚麎麌黟鼁鼀鼖鼥鼫鼪鼩鼨齌齕儴儵劖勷厴嚫嚭嚦嚧嚪嚬壚壝壛夒嬽嬾嬿巃幰"],["f240","徿懻攇攐攍攉攌攎斄旞旝曞櫧櫠櫌櫑櫙櫋櫟櫜櫐櫫櫏櫍櫞歠殰氌瀙瀧瀠瀖瀫瀡瀢瀣瀩瀗瀤瀜瀪爌爊爇爂爅犥犦犤犣犡瓋瓅璷瓃甖癠矉矊矄矱礝礛"],["f2a1","礡礜礗礞禰穧穨簳簼簹簬簻糬糪繶繵繸繰繷繯繺繲繴繨罋罊羃羆羷翽翾聸臗臕艤艡艣藫藱藭藙藡藨藚藗藬藲藸藘藟藣藜藑藰藦藯藞藢蠀蟺蠃蟶蟷蠉蠌蠋蠆蟼蠈蟿蠊蠂襢襚襛襗襡襜襘襝襙覈覷覶觶譐譈譊譀譓譖譔譋譕"],["f340","譑譂譒譗豃豷豶貚贆贇贉趬趪趭趫蹭蹸蹳蹪蹯蹻軂轒轑轏轐轓辴酀鄿醰醭鏞鏇鏏鏂鏚鏐鏹鏬鏌鏙鎩鏦鏊鏔鏮鏣鏕鏄鏎鏀鏒鏧镽闚闛雡霩霫霬霨霦"],["f3a1","鞳鞷鞶韝韞韟顜顙顝顗颿颽颻颾饈饇饃馦馧騚騕騥騝騤騛騢騠騧騣騞騜騔髂鬋鬊鬎鬌鬷鯪鯫鯠鯞鯤鯦鯢鯰鯔鯗鯬鯜鯙鯥鯕鯡鯚鵷鶁鶊鶄鶈鵱鶀鵸鶆鶋鶌鵽鵫鵴鵵鵰鵩鶅鵳鵻鶂鵯鵹鵿鶇鵨麔麑黀黼鼭齀齁齍齖齗齘匷嚲"],["f440","嚵嚳壣孅巆巇廮廯忀忁懹攗攖攕攓旟曨曣曤櫳櫰櫪櫨櫹櫱櫮櫯瀼瀵瀯瀷瀴瀱灂瀸瀿瀺瀹灀瀻瀳灁爓爔犨獽獼璺皫皪皾盭矌矎矏矍矲礥礣礧礨礤礩"],["f4a1","禲穮穬穭竷籉籈籊籇籅糮繻繾纁纀羺翿聹臛臙舋艨艩蘢藿蘁藾蘛蘀藶蘄蘉蘅蘌藽蠙蠐蠑蠗蠓蠖襣襦覹觷譠譪譝譨譣譥譧譭趮躆躈躄轙轖轗轕轘轚邍酃酁醷醵醲醳鐋鐓鏻鐠鐏鐔鏾鐕鐐鐨鐙鐍鏵鐀鏷鐇鐎鐖鐒鏺鐉鏸鐊鏿"],["f540","鏼鐌鏶鐑鐆闞闠闟霮霯鞹鞻韽韾顠顢顣顟飁飂饐饎饙饌饋饓騲騴騱騬騪騶騩騮騸騭髇髊髆鬐鬒鬑鰋鰈鯷鰅鰒鯸鱀鰇鰎鰆鰗鰔鰉鶟鶙鶤鶝鶒鶘鶐鶛"],["f5a1","鶠鶔鶜鶪鶗鶡鶚鶢鶨鶞鶣鶿鶩鶖鶦鶧麙麛麚黥黤黧黦鼰鼮齛齠齞齝齙龑儺儹劘劗囃嚽嚾孈孇巋巏廱懽攛欂櫼欃櫸欀灃灄灊灈灉灅灆爝爚爙獾甗癪矐礭礱礯籔籓糲纊纇纈纋纆纍罍羻耰臝蘘蘪蘦蘟蘣蘜蘙蘧蘮蘡蘠蘩蘞蘥"],["f640","蠩蠝蠛蠠蠤蠜蠫衊襭襩襮襫觺譹譸譅譺譻贐贔趯躎躌轞轛轝酆酄酅醹鐿鐻鐶鐩鐽鐼鐰鐹鐪鐷鐬鑀鐱闥闤闣霵霺鞿韡顤飉飆飀饘饖騹騽驆驄驂驁騺"],["f6a1","騿髍鬕鬗鬘鬖鬺魒鰫鰝鰜鰬鰣鰨鰩鰤鰡鶷鶶鶼鷁鷇鷊鷏鶾鷅鷃鶻鶵鷎鶹鶺鶬鷈鶱鶭鷌鶳鷍鶲鹺麜黫黮黭鼛鼘鼚鼱齎齥齤龒亹囆囅囋奱孋孌巕巑廲攡攠攦攢欋欈欉氍灕灖灗灒爞爟犩獿瓘瓕瓙瓗癭皭礵禴穰穱籗籜籙籛籚"],["f740","糴糱纑罏羇臞艫蘴蘵蘳蘬蘲蘶蠬蠨蠦蠪蠥襱覿覾觻譾讄讂讆讅譿贕躕躔躚躒躐躖躗轠轢酇鑌鑐鑊鑋鑏鑇鑅鑈鑉鑆霿韣顪顩飋饔饛驎驓驔驌驏驈驊"],["f7a1","驉驒驐髐鬙鬫鬻魖魕鱆鱈鰿鱄鰹鰳鱁鰼鰷鰴鰲鰽鰶鷛鷒鷞鷚鷋鷐鷜鷑鷟鷩鷙鷘鷖鷵鷕鷝麶黰鼵鼳鼲齂齫龕龢儽劙壨壧奲孍巘蠯彏戁戃戄攩攥斖曫欑欒欏毊灛灚爢玂玁玃癰矔籧籦纕艬蘺虀蘹蘼蘱蘻蘾蠰蠲蠮蠳襶襴襳觾"],["f840","讌讎讋讈豅贙躘轤轣醼鑢鑕鑝鑗鑞韄韅頀驖驙鬞鬟鬠鱒鱘鱐鱊鱍鱋鱕鱙鱌鱎鷻鷷鷯鷣鷫鷸鷤鷶鷡鷮鷦鷲鷰鷢鷬鷴鷳鷨鷭黂黐黲黳鼆鼜鼸鼷鼶齃齏"],["f8a1","齱齰齮齯囓囍孎屭攭曭曮欓灟灡灝灠爣瓛瓥矕礸禷禶籪纗羉艭虃蠸蠷蠵衋讔讕躞躟躠躝醾醽釂鑫鑨鑩雥靆靃靇韇韥驞髕魙鱣鱧鱦鱢鱞鱠鸂鷾鸇鸃鸆鸅鸀鸁鸉鷿鷽鸄麠鼞齆齴齵齶囔攮斸欘欙欗欚灢爦犪矘矙礹籩籫糶纚"],["f940","纘纛纙臠臡虆虇虈襹襺襼襻觿讘讙躥躤躣鑮鑭鑯鑱鑳靉顲饟鱨鱮鱭鸋鸍鸐鸏鸒鸑麡黵鼉齇齸齻齺齹圞灦籯蠼趲躦釃鑴鑸鑶鑵驠鱴鱳鱱鱵鸔鸓黶鼊"],["f9a1","龤灨灥糷虪蠾蠽蠿讞貜躩軉靋顳顴飌饡馫驤驦驧鬤鸕鸗齈戇欞爧虌躨钂钀钁驩驨鬮鸙爩虋讟钃鱹麷癵驫鱺鸝灩灪麤齾齉龘碁銹裏墻恒粧嫺╔╦╗╠╬╣╚╩╝╒╤╕╞╪╡╘╧╛╓╥╖╟╫╢╙╨╜║═╭╮╰╯▓"]]');

/***/ }),

/***/ "./node_modules/iconv-lite/encodings/tables/eucjp.json":
/*!*************************************************************!*\
  !*** ./node_modules/iconv-lite/encodings/tables/eucjp.json ***!
  \*************************************************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('[["0","\\u0000",127],["8ea1","｡",62],["a1a1","　、。，．・：；？！゛゜´｀¨＾￣＿ヽヾゝゞ〃仝々〆〇ー―‐／＼～∥｜…‥‘’“”（）〔〕［］｛｝〈",9,"＋－±×÷＝≠＜＞≦≧∞∴♂♀°′″℃￥＄￠￡％＃＆＊＠§☆★○●◎◇"],["a2a1","◆□■△▲▽▼※〒→←↑↓〓"],["a2ba","∈∋⊆⊇⊂⊃∪∩"],["a2ca","∧∨￢⇒⇔∀∃"],["a2dc","∠⊥⌒∂∇≡≒≪≫√∽∝∵∫∬"],["a2f2","Å‰♯♭♪†‡¶"],["a2fe","◯"],["a3b0","０",9],["a3c1","Ａ",25],["a3e1","ａ",25],["a4a1","ぁ",82],["a5a1","ァ",85],["a6a1","Α",16,"Σ",6],["a6c1","α",16,"σ",6],["a7a1","А",5,"ЁЖ",25],["a7d1","а",5,"ёж",25],["a8a1","─│┌┐┘└├┬┤┴┼━┃┏┓┛┗┣┳┫┻╋┠┯┨┷┿┝┰┥┸╂"],["ada1","①",19,"Ⅰ",9],["adc0","㍉㌔㌢㍍㌘㌧㌃㌶㍑㍗㌍㌦㌣㌫㍊㌻㎜㎝㎞㎎㎏㏄㎡"],["addf","㍻〝〟№㏍℡㊤",4,"㈱㈲㈹㍾㍽㍼≒≡∫∮∑√⊥∠∟⊿∵∩∪"],["b0a1","亜唖娃阿哀愛挨姶逢葵茜穐悪握渥旭葦芦鯵梓圧斡扱宛姐虻飴絢綾鮎或粟袷安庵按暗案闇鞍杏以伊位依偉囲夷委威尉惟意慰易椅為畏異移維緯胃萎衣謂違遺医井亥域育郁磯一壱溢逸稲茨芋鰯允印咽員因姻引飲淫胤蔭"],["b1a1","院陰隠韻吋右宇烏羽迂雨卯鵜窺丑碓臼渦嘘唄欝蔚鰻姥厩浦瓜閏噂云運雲荏餌叡営嬰影映曳栄永泳洩瑛盈穎頴英衛詠鋭液疫益駅悦謁越閲榎厭円園堰奄宴延怨掩援沿演炎焔煙燕猿縁艶苑薗遠鉛鴛塩於汚甥凹央奥往応"],["b2a1","押旺横欧殴王翁襖鴬鴎黄岡沖荻億屋憶臆桶牡乙俺卸恩温穏音下化仮何伽価佳加可嘉夏嫁家寡科暇果架歌河火珂禍禾稼箇花苛茄荷華菓蝦課嘩貨迦過霞蚊俄峨我牙画臥芽蛾賀雅餓駕介会解回塊壊廻快怪悔恢懐戒拐改"],["b3a1","魁晦械海灰界皆絵芥蟹開階貝凱劾外咳害崖慨概涯碍蓋街該鎧骸浬馨蛙垣柿蛎鈎劃嚇各廓拡撹格核殻獲確穫覚角赫較郭閣隔革学岳楽額顎掛笠樫橿梶鰍潟割喝恰括活渇滑葛褐轄且鰹叶椛樺鞄株兜竃蒲釜鎌噛鴨栢茅萱"],["b4a1","粥刈苅瓦乾侃冠寒刊勘勧巻喚堪姦完官寛干幹患感慣憾換敢柑桓棺款歓汗漢澗潅環甘監看竿管簡緩缶翰肝艦莞観諌貫還鑑間閑関陥韓館舘丸含岸巌玩癌眼岩翫贋雁頑顔願企伎危喜器基奇嬉寄岐希幾忌揮机旗既期棋棄"],["b5a1","機帰毅気汽畿祈季稀紀徽規記貴起軌輝飢騎鬼亀偽儀妓宜戯技擬欺犠疑祇義蟻誼議掬菊鞠吉吃喫桔橘詰砧杵黍却客脚虐逆丘久仇休及吸宮弓急救朽求汲泣灸球究窮笈級糾給旧牛去居巨拒拠挙渠虚許距鋸漁禦魚亨享京"],["b6a1","供侠僑兇競共凶協匡卿叫喬境峡強彊怯恐恭挟教橋況狂狭矯胸脅興蕎郷鏡響饗驚仰凝尭暁業局曲極玉桐粁僅勤均巾錦斤欣欽琴禁禽筋緊芹菌衿襟謹近金吟銀九倶句区狗玖矩苦躯駆駈駒具愚虞喰空偶寓遇隅串櫛釧屑屈"],["b7a1","掘窟沓靴轡窪熊隈粂栗繰桑鍬勲君薫訓群軍郡卦袈祁係傾刑兄啓圭珪型契形径恵慶慧憩掲携敬景桂渓畦稽系経継繋罫茎荊蛍計詣警軽頚鶏芸迎鯨劇戟撃激隙桁傑欠決潔穴結血訣月件倹倦健兼券剣喧圏堅嫌建憲懸拳捲"],["b8a1","検権牽犬献研硯絹県肩見謙賢軒遣鍵険顕験鹸元原厳幻弦減源玄現絃舷言諺限乎個古呼固姑孤己庫弧戸故枯湖狐糊袴股胡菰虎誇跨鈷雇顧鼓五互伍午呉吾娯後御悟梧檎瑚碁語誤護醐乞鯉交佼侯候倖光公功効勾厚口向"],["b9a1","后喉坑垢好孔孝宏工巧巷幸広庚康弘恒慌抗拘控攻昂晃更杭校梗構江洪浩港溝甲皇硬稿糠紅紘絞綱耕考肯肱腔膏航荒行衡講貢購郊酵鉱砿鋼閤降項香高鴻剛劫号合壕拷濠豪轟麹克刻告国穀酷鵠黒獄漉腰甑忽惚骨狛込"],["baa1","此頃今困坤墾婚恨懇昏昆根梱混痕紺艮魂些佐叉唆嵯左差査沙瑳砂詐鎖裟坐座挫債催再最哉塞妻宰彩才採栽歳済災采犀砕砦祭斎細菜裁載際剤在材罪財冴坂阪堺榊肴咲崎埼碕鷺作削咋搾昨朔柵窄策索錯桜鮭笹匙冊刷"],["bba1","察拶撮擦札殺薩雑皐鯖捌錆鮫皿晒三傘参山惨撒散桟燦珊産算纂蚕讃賛酸餐斬暫残仕仔伺使刺司史嗣四士始姉姿子屍市師志思指支孜斯施旨枝止死氏獅祉私糸紙紫肢脂至視詞詩試誌諮資賜雌飼歯事似侍児字寺慈持時"],["bca1","次滋治爾璽痔磁示而耳自蒔辞汐鹿式識鴫竺軸宍雫七叱執失嫉室悉湿漆疾質実蔀篠偲柴芝屡蕊縞舎写射捨赦斜煮社紗者謝車遮蛇邪借勺尺杓灼爵酌釈錫若寂弱惹主取守手朱殊狩珠種腫趣酒首儒受呪寿授樹綬需囚収周"],["bda1","宗就州修愁拾洲秀秋終繍習臭舟蒐衆襲讐蹴輯週酋酬集醜什住充十従戎柔汁渋獣縦重銃叔夙宿淑祝縮粛塾熟出術述俊峻春瞬竣舜駿准循旬楯殉淳準潤盾純巡遵醇順処初所暑曙渚庶緒署書薯藷諸助叙女序徐恕鋤除傷償"],["bea1","勝匠升召哨商唱嘗奨妾娼宵将小少尚庄床廠彰承抄招掌捷昇昌昭晶松梢樟樵沼消渉湘焼焦照症省硝礁祥称章笑粧紹肖菖蒋蕉衝裳訟証詔詳象賞醤鉦鍾鐘障鞘上丈丞乗冗剰城場壌嬢常情擾条杖浄状畳穣蒸譲醸錠嘱埴飾"],["bfa1","拭植殖燭織職色触食蝕辱尻伸信侵唇娠寝審心慎振新晋森榛浸深申疹真神秦紳臣芯薪親診身辛進針震人仁刃塵壬尋甚尽腎訊迅陣靭笥諏須酢図厨逗吹垂帥推水炊睡粋翠衰遂酔錐錘随瑞髄崇嵩数枢趨雛据杉椙菅頗雀裾"],["c0a1","澄摺寸世瀬畝是凄制勢姓征性成政整星晴棲栖正清牲生盛精聖声製西誠誓請逝醒青静斉税脆隻席惜戚斥昔析石積籍績脊責赤跡蹟碩切拙接摂折設窃節説雪絶舌蝉仙先千占宣専尖川戦扇撰栓栴泉浅洗染潜煎煽旋穿箭線"],["c1a1","繊羨腺舛船薦詮賎践選遷銭銑閃鮮前善漸然全禅繕膳糎噌塑岨措曾曽楚狙疏疎礎祖租粗素組蘇訴阻遡鼠僧創双叢倉喪壮奏爽宋層匝惣想捜掃挿掻操早曹巣槍槽漕燥争痩相窓糟総綜聡草荘葬蒼藻装走送遭鎗霜騒像増憎"],["c2a1","臓蔵贈造促側則即息捉束測足速俗属賊族続卒袖其揃存孫尊損村遜他多太汰詑唾堕妥惰打柁舵楕陀駄騨体堆対耐岱帯待怠態戴替泰滞胎腿苔袋貸退逮隊黛鯛代台大第醍題鷹滝瀧卓啄宅托択拓沢濯琢託鐸濁諾茸凧蛸只"],["c3a1","叩但達辰奪脱巽竪辿棚谷狸鱈樽誰丹単嘆坦担探旦歎淡湛炭短端箪綻耽胆蛋誕鍛団壇弾断暖檀段男談値知地弛恥智池痴稚置致蜘遅馳築畜竹筑蓄逐秩窒茶嫡着中仲宙忠抽昼柱注虫衷註酎鋳駐樗瀦猪苧著貯丁兆凋喋寵"],["c4a1","帖帳庁弔張彫徴懲挑暢朝潮牒町眺聴脹腸蝶調諜超跳銚長頂鳥勅捗直朕沈珍賃鎮陳津墜椎槌追鎚痛通塚栂掴槻佃漬柘辻蔦綴鍔椿潰坪壷嬬紬爪吊釣鶴亭低停偵剃貞呈堤定帝底庭廷弟悌抵挺提梯汀碇禎程締艇訂諦蹄逓"],["c5a1","邸鄭釘鼎泥摘擢敵滴的笛適鏑溺哲徹撤轍迭鉄典填天展店添纏甜貼転顛点伝殿澱田電兎吐堵塗妬屠徒斗杜渡登菟賭途都鍍砥砺努度土奴怒倒党冬凍刀唐塔塘套宕島嶋悼投搭東桃梼棟盗淘湯涛灯燈当痘祷等答筒糖統到"],["c6a1","董蕩藤討謄豆踏逃透鐙陶頭騰闘働動同堂導憧撞洞瞳童胴萄道銅峠鴇匿得徳涜特督禿篤毒独読栃橡凸突椴届鳶苫寅酉瀞噸屯惇敦沌豚遁頓呑曇鈍奈那内乍凪薙謎灘捺鍋楢馴縄畷南楠軟難汝二尼弐迩匂賑肉虹廿日乳入"],["c7a1","如尿韮任妊忍認濡禰祢寧葱猫熱年念捻撚燃粘乃廼之埜嚢悩濃納能脳膿農覗蚤巴把播覇杷波派琶破婆罵芭馬俳廃拝排敗杯盃牌背肺輩配倍培媒梅楳煤狽買売賠陪這蝿秤矧萩伯剥博拍柏泊白箔粕舶薄迫曝漠爆縛莫駁麦"],["c8a1","函箱硲箸肇筈櫨幡肌畑畠八鉢溌発醗髪伐罰抜筏閥鳩噺塙蛤隼伴判半反叛帆搬斑板氾汎版犯班畔繁般藩販範釆煩頒飯挽晩番盤磐蕃蛮匪卑否妃庇彼悲扉批披斐比泌疲皮碑秘緋罷肥被誹費避非飛樋簸備尾微枇毘琵眉美"],["c9a1","鼻柊稗匹疋髭彦膝菱肘弼必畢筆逼桧姫媛紐百謬俵彪標氷漂瓢票表評豹廟描病秒苗錨鋲蒜蛭鰭品彬斌浜瀕貧賓頻敏瓶不付埠夫婦富冨布府怖扶敷斧普浮父符腐膚芙譜負賦赴阜附侮撫武舞葡蕪部封楓風葺蕗伏副復幅服"],["caa1","福腹複覆淵弗払沸仏物鮒分吻噴墳憤扮焚奮粉糞紛雰文聞丙併兵塀幣平弊柄並蔽閉陛米頁僻壁癖碧別瞥蔑箆偏変片篇編辺返遍便勉娩弁鞭保舗鋪圃捕歩甫補輔穂募墓慕戊暮母簿菩倣俸包呆報奉宝峰峯崩庖抱捧放方朋"],["cba1","法泡烹砲縫胞芳萌蓬蜂褒訪豊邦鋒飽鳳鵬乏亡傍剖坊妨帽忘忙房暴望某棒冒紡肪膨謀貌貿鉾防吠頬北僕卜墨撲朴牧睦穆釦勃没殆堀幌奔本翻凡盆摩磨魔麻埋妹昧枚毎哩槙幕膜枕鮪柾鱒桝亦俣又抹末沫迄侭繭麿万慢満"],["cca1","漫蔓味未魅巳箕岬密蜜湊蓑稔脈妙粍民眠務夢無牟矛霧鵡椋婿娘冥名命明盟迷銘鳴姪牝滅免棉綿緬面麺摸模茂妄孟毛猛盲網耗蒙儲木黙目杢勿餅尤戻籾貰問悶紋門匁也冶夜爺耶野弥矢厄役約薬訳躍靖柳薮鑓愉愈油癒"],["cda1","諭輸唯佑優勇友宥幽悠憂揖有柚湧涌猶猷由祐裕誘遊邑郵雄融夕予余与誉輿預傭幼妖容庸揚揺擁曜楊様洋溶熔用窯羊耀葉蓉要謡踊遥陽養慾抑欲沃浴翌翼淀羅螺裸来莱頼雷洛絡落酪乱卵嵐欄濫藍蘭覧利吏履李梨理璃"],["cea1","痢裏裡里離陸律率立葎掠略劉流溜琉留硫粒隆竜龍侶慮旅虜了亮僚両凌寮料梁涼猟療瞭稜糧良諒遼量陵領力緑倫厘林淋燐琳臨輪隣鱗麟瑠塁涙累類令伶例冷励嶺怜玲礼苓鈴隷零霊麗齢暦歴列劣烈裂廉恋憐漣煉簾練聯"],["cfa1","蓮連錬呂魯櫓炉賂路露労婁廊弄朗楼榔浪漏牢狼篭老聾蝋郎六麓禄肋録論倭和話歪賄脇惑枠鷲亙亘鰐詫藁蕨椀湾碗腕"],["d0a1","弌丐丕个丱丶丼丿乂乖乘亂亅豫亊舒弍于亞亟亠亢亰亳亶从仍仄仆仂仗仞仭仟价伉佚估佛佝佗佇佶侈侏侘佻佩佰侑佯來侖儘俔俟俎俘俛俑俚俐俤俥倚倨倔倪倥倅伜俶倡倩倬俾俯們倆偃假會偕偐偈做偖偬偸傀傚傅傴傲"],["d1a1","僉僊傳僂僖僞僥僭僣僮價僵儉儁儂儖儕儔儚儡儺儷儼儻儿兀兒兌兔兢竸兩兪兮冀冂囘册冉冏冑冓冕冖冤冦冢冩冪冫决冱冲冰况冽凅凉凛几處凩凭凰凵凾刄刋刔刎刧刪刮刳刹剏剄剋剌剞剔剪剴剩剳剿剽劍劔劒剱劈劑辨"],["d2a1","辧劬劭劼劵勁勍勗勞勣勦飭勠勳勵勸勹匆匈甸匍匐匏匕匚匣匯匱匳匸區卆卅丗卉卍凖卞卩卮夘卻卷厂厖厠厦厥厮厰厶參簒雙叟曼燮叮叨叭叺吁吽呀听吭吼吮吶吩吝呎咏呵咎呟呱呷呰咒呻咀呶咄咐咆哇咢咸咥咬哄哈咨"],["d3a1","咫哂咤咾咼哘哥哦唏唔哽哮哭哺哢唹啀啣啌售啜啅啖啗唸唳啝喙喀咯喊喟啻啾喘喞單啼喃喩喇喨嗚嗅嗟嗄嗜嗤嗔嘔嗷嘖嗾嗽嘛嗹噎噐營嘴嘶嘲嘸噫噤嘯噬噪嚆嚀嚊嚠嚔嚏嚥嚮嚶嚴囂嚼囁囃囀囈囎囑囓囗囮囹圀囿圄圉"],["d4a1","圈國圍圓團圖嗇圜圦圷圸坎圻址坏坩埀垈坡坿垉垓垠垳垤垪垰埃埆埔埒埓堊埖埣堋堙堝塲堡塢塋塰毀塒堽塹墅墹墟墫墺壞墻墸墮壅壓壑壗壙壘壥壜壤壟壯壺壹壻壼壽夂夊夐夛梦夥夬夭夲夸夾竒奕奐奎奚奘奢奠奧奬奩"],["d5a1","奸妁妝佞侫妣妲姆姨姜妍姙姚娥娟娑娜娉娚婀婬婉娵娶婢婪媚媼媾嫋嫂媽嫣嫗嫦嫩嫖嫺嫻嬌嬋嬖嬲嫐嬪嬶嬾孃孅孀孑孕孚孛孥孩孰孳孵學斈孺宀它宦宸寃寇寉寔寐寤實寢寞寥寫寰寶寳尅將專對尓尠尢尨尸尹屁屆屎屓"],["d6a1","屐屏孱屬屮乢屶屹岌岑岔妛岫岻岶岼岷峅岾峇峙峩峽峺峭嶌峪崋崕崗嵜崟崛崑崔崢崚崙崘嵌嵒嵎嵋嵬嵳嵶嶇嶄嶂嶢嶝嶬嶮嶽嶐嶷嶼巉巍巓巒巖巛巫已巵帋帚帙帑帛帶帷幄幃幀幎幗幔幟幢幤幇幵并幺麼广庠廁廂廈廐廏"],["d7a1","廖廣廝廚廛廢廡廨廩廬廱廳廰廴廸廾弃弉彝彜弋弑弖弩弭弸彁彈彌彎弯彑彖彗彙彡彭彳彷徃徂彿徊很徑徇從徙徘徠徨徭徼忖忻忤忸忱忝悳忿怡恠怙怐怩怎怱怛怕怫怦怏怺恚恁恪恷恟恊恆恍恣恃恤恂恬恫恙悁悍惧悃悚"],["d8a1","悄悛悖悗悒悧悋惡悸惠惓悴忰悽惆悵惘慍愕愆惶惷愀惴惺愃愡惻惱愍愎慇愾愨愧慊愿愼愬愴愽慂慄慳慷慘慙慚慫慴慯慥慱慟慝慓慵憙憖憇憬憔憚憊憑憫憮懌懊應懷懈懃懆憺懋罹懍懦懣懶懺懴懿懽懼懾戀戈戉戍戌戔戛"],["d9a1","戞戡截戮戰戲戳扁扎扞扣扛扠扨扼抂抉找抒抓抖拔抃抔拗拑抻拏拿拆擔拈拜拌拊拂拇抛拉挌拮拱挧挂挈拯拵捐挾捍搜捏掖掎掀掫捶掣掏掉掟掵捫捩掾揩揀揆揣揉插揶揄搖搴搆搓搦搶攝搗搨搏摧摯摶摎攪撕撓撥撩撈撼"],["daa1","據擒擅擇撻擘擂擱擧舉擠擡抬擣擯攬擶擴擲擺攀擽攘攜攅攤攣攫攴攵攷收攸畋效敖敕敍敘敞敝敲數斂斃變斛斟斫斷旃旆旁旄旌旒旛旙无旡旱杲昊昃旻杳昵昶昴昜晏晄晉晁晞晝晤晧晨晟晢晰暃暈暎暉暄暘暝曁暹曉暾暼"],["dba1","曄暸曖曚曠昿曦曩曰曵曷朏朖朞朦朧霸朮朿朶杁朸朷杆杞杠杙杣杤枉杰枩杼杪枌枋枦枡枅枷柯枴柬枳柩枸柤柞柝柢柮枹柎柆柧檜栞框栩桀桍栲桎梳栫桙档桷桿梟梏梭梔條梛梃檮梹桴梵梠梺椏梍桾椁棊椈棘椢椦棡椌棍"],["dca1","棔棧棕椶椒椄棗棣椥棹棠棯椨椪椚椣椡棆楹楷楜楸楫楔楾楮椹楴椽楙椰楡楞楝榁楪榲榮槐榿槁槓榾槎寨槊槝榻槃榧樮榑榠榜榕榴槞槨樂樛槿權槹槲槧樅榱樞槭樔槫樊樒櫁樣樓橄樌橲樶橸橇橢橙橦橈樸樢檐檍檠檄檢檣"],["dda1","檗蘗檻櫃櫂檸檳檬櫞櫑櫟檪櫚櫪櫻欅蘖櫺欒欖鬱欟欸欷盜欹飮歇歃歉歐歙歔歛歟歡歸歹歿殀殄殃殍殘殕殞殤殪殫殯殲殱殳殷殼毆毋毓毟毬毫毳毯麾氈氓气氛氤氣汞汕汢汪沂沍沚沁沛汾汨汳沒沐泄泱泓沽泗泅泝沮沱沾"],["dea1","沺泛泯泙泪洟衍洶洫洽洸洙洵洳洒洌浣涓浤浚浹浙涎涕濤涅淹渕渊涵淇淦涸淆淬淞淌淨淒淅淺淙淤淕淪淮渭湮渮渙湲湟渾渣湫渫湶湍渟湃渺湎渤滿渝游溂溪溘滉溷滓溽溯滄溲滔滕溏溥滂溟潁漑灌滬滸滾漿滲漱滯漲滌"],["dfa1","漾漓滷澆潺潸澁澀潯潛濳潭澂潼潘澎澑濂潦澳澣澡澤澹濆澪濟濕濬濔濘濱濮濛瀉瀋濺瀑瀁瀏濾瀛瀚潴瀝瀘瀟瀰瀾瀲灑灣炙炒炯烱炬炸炳炮烟烋烝烙焉烽焜焙煥煕熈煦煢煌煖煬熏燻熄熕熨熬燗熹熾燒燉燔燎燠燬燧燵燼"],["e0a1","燹燿爍爐爛爨爭爬爰爲爻爼爿牀牆牋牘牴牾犂犁犇犒犖犢犧犹犲狃狆狄狎狒狢狠狡狹狷倏猗猊猜猖猝猴猯猩猥猾獎獏默獗獪獨獰獸獵獻獺珈玳珎玻珀珥珮珞璢琅瑯琥珸琲琺瑕琿瑟瑙瑁瑜瑩瑰瑣瑪瑶瑾璋璞璧瓊瓏瓔珱"],["e1a1","瓠瓣瓧瓩瓮瓲瓰瓱瓸瓷甄甃甅甌甎甍甕甓甞甦甬甼畄畍畊畉畛畆畚畩畤畧畫畭畸當疆疇畴疊疉疂疔疚疝疥疣痂疳痃疵疽疸疼疱痍痊痒痙痣痞痾痿痼瘁痰痺痲痳瘋瘍瘉瘟瘧瘠瘡瘢瘤瘴瘰瘻癇癈癆癜癘癡癢癨癩癪癧癬癰"],["e2a1","癲癶癸發皀皃皈皋皎皖皓皙皚皰皴皸皹皺盂盍盖盒盞盡盥盧盪蘯盻眈眇眄眩眤眞眥眦眛眷眸睇睚睨睫睛睥睿睾睹瞎瞋瞑瞠瞞瞰瞶瞹瞿瞼瞽瞻矇矍矗矚矜矣矮矼砌砒礦砠礪硅碎硴碆硼碚碌碣碵碪碯磑磆磋磔碾碼磅磊磬"],["e3a1","磧磚磽磴礇礒礑礙礬礫祀祠祗祟祚祕祓祺祿禊禝禧齋禪禮禳禹禺秉秕秧秬秡秣稈稍稘稙稠稟禀稱稻稾稷穃穗穉穡穢穩龝穰穹穽窈窗窕窘窖窩竈窰窶竅竄窿邃竇竊竍竏竕竓站竚竝竡竢竦竭竰笂笏笊笆笳笘笙笞笵笨笶筐"],["e4a1","筺笄筍笋筌筅筵筥筴筧筰筱筬筮箝箘箟箍箜箚箋箒箏筝箙篋篁篌篏箴篆篝篩簑簔篦篥籠簀簇簓篳篷簗簍篶簣簧簪簟簷簫簽籌籃籔籏籀籐籘籟籤籖籥籬籵粃粐粤粭粢粫粡粨粳粲粱粮粹粽糀糅糂糘糒糜糢鬻糯糲糴糶糺紆"],["e5a1","紂紜紕紊絅絋紮紲紿紵絆絳絖絎絲絨絮絏絣經綉絛綏絽綛綺綮綣綵緇綽綫總綢綯緜綸綟綰緘緝緤緞緻緲緡縅縊縣縡縒縱縟縉縋縢繆繦縻縵縹繃縷縲縺繧繝繖繞繙繚繹繪繩繼繻纃緕繽辮繿纈纉續纒纐纓纔纖纎纛纜缸缺"],["e6a1","罅罌罍罎罐网罕罔罘罟罠罨罩罧罸羂羆羃羈羇羌羔羞羝羚羣羯羲羹羮羶羸譱翅翆翊翕翔翡翦翩翳翹飜耆耄耋耒耘耙耜耡耨耿耻聊聆聒聘聚聟聢聨聳聲聰聶聹聽聿肄肆肅肛肓肚肭冐肬胛胥胙胝胄胚胖脉胯胱脛脩脣脯腋"],["e7a1","隋腆脾腓腑胼腱腮腥腦腴膃膈膊膀膂膠膕膤膣腟膓膩膰膵膾膸膽臀臂膺臉臍臑臙臘臈臚臟臠臧臺臻臾舁舂舅與舊舍舐舖舩舫舸舳艀艙艘艝艚艟艤艢艨艪艫舮艱艷艸艾芍芒芫芟芻芬苡苣苟苒苴苳苺莓范苻苹苞茆苜茉苙"],["e8a1","茵茴茖茲茱荀茹荐荅茯茫茗茘莅莚莪莟莢莖茣莎莇莊荼莵荳荵莠莉莨菴萓菫菎菽萃菘萋菁菷萇菠菲萍萢萠莽萸蔆菻葭萪萼蕚蒄葷葫蒭葮蒂葩葆萬葯葹萵蓊葢蒹蒿蒟蓙蓍蒻蓚蓐蓁蓆蓖蒡蔡蓿蓴蔗蔘蔬蔟蔕蔔蓼蕀蕣蕘蕈"],["e9a1","蕁蘂蕋蕕薀薤薈薑薊薨蕭薔薛藪薇薜蕷蕾薐藉薺藏薹藐藕藝藥藜藹蘊蘓蘋藾藺蘆蘢蘚蘰蘿虍乕虔號虧虱蚓蚣蚩蚪蚋蚌蚶蚯蛄蛆蚰蛉蠣蚫蛔蛞蛩蛬蛟蛛蛯蜒蜆蜈蜀蜃蛻蜑蜉蜍蛹蜊蜴蜿蜷蜻蜥蜩蜚蝠蝟蝸蝌蝎蝴蝗蝨蝮蝙"],["eaa1","蝓蝣蝪蠅螢螟螂螯蟋螽蟀蟐雖螫蟄螳蟇蟆螻蟯蟲蟠蠏蠍蟾蟶蟷蠎蟒蠑蠖蠕蠢蠡蠱蠶蠹蠧蠻衄衂衒衙衞衢衫袁衾袞衵衽袵衲袂袗袒袮袙袢袍袤袰袿袱裃裄裔裘裙裝裹褂裼裴裨裲褄褌褊褓襃褞褥褪褫襁襄褻褶褸襌褝襠襞"],["eba1","襦襤襭襪襯襴襷襾覃覈覊覓覘覡覩覦覬覯覲覺覽覿觀觚觜觝觧觴觸訃訖訐訌訛訝訥訶詁詛詒詆詈詼詭詬詢誅誂誄誨誡誑誥誦誚誣諄諍諂諚諫諳諧諤諱謔諠諢諷諞諛謌謇謚諡謖謐謗謠謳鞫謦謫謾謨譁譌譏譎證譖譛譚譫"],["eca1","譟譬譯譴譽讀讌讎讒讓讖讙讚谺豁谿豈豌豎豐豕豢豬豸豺貂貉貅貊貍貎貔豼貘戝貭貪貽貲貳貮貶賈賁賤賣賚賽賺賻贄贅贊贇贏贍贐齎贓賍贔贖赧赭赱赳趁趙跂趾趺跏跚跖跌跛跋跪跫跟跣跼踈踉跿踝踞踐踟蹂踵踰踴蹊"],["eda1","蹇蹉蹌蹐蹈蹙蹤蹠踪蹣蹕蹶蹲蹼躁躇躅躄躋躊躓躑躔躙躪躡躬躰軆躱躾軅軈軋軛軣軼軻軫軾輊輅輕輒輙輓輜輟輛輌輦輳輻輹轅轂輾轌轉轆轎轗轜轢轣轤辜辟辣辭辯辷迚迥迢迪迯邇迴逅迹迺逑逕逡逍逞逖逋逧逶逵逹迸"],["eea1","遏遐遑遒逎遉逾遖遘遞遨遯遶隨遲邂遽邁邀邊邉邏邨邯邱邵郢郤扈郛鄂鄒鄙鄲鄰酊酖酘酣酥酩酳酲醋醉醂醢醫醯醪醵醴醺釀釁釉釋釐釖釟釡釛釼釵釶鈞釿鈔鈬鈕鈑鉞鉗鉅鉉鉤鉈銕鈿鉋鉐銜銖銓銛鉚鋏銹銷鋩錏鋺鍄錮"],["efa1","錙錢錚錣錺錵錻鍜鍠鍼鍮鍖鎰鎬鎭鎔鎹鏖鏗鏨鏥鏘鏃鏝鏐鏈鏤鐚鐔鐓鐃鐇鐐鐶鐫鐵鐡鐺鑁鑒鑄鑛鑠鑢鑞鑪鈩鑰鑵鑷鑽鑚鑼鑾钁鑿閂閇閊閔閖閘閙閠閨閧閭閼閻閹閾闊濶闃闍闌闕闔闖關闡闥闢阡阨阮阯陂陌陏陋陷陜陞"],["f0a1","陝陟陦陲陬隍隘隕隗險隧隱隲隰隴隶隸隹雎雋雉雍襍雜霍雕雹霄霆霈霓霎霑霏霖霙霤霪霰霹霽霾靄靆靈靂靉靜靠靤靦靨勒靫靱靹鞅靼鞁靺鞆鞋鞏鞐鞜鞨鞦鞣鞳鞴韃韆韈韋韜韭齏韲竟韶韵頏頌頸頤頡頷頽顆顏顋顫顯顰"],["f1a1","顱顴顳颪颯颱颶飄飃飆飩飫餃餉餒餔餘餡餝餞餤餠餬餮餽餾饂饉饅饐饋饑饒饌饕馗馘馥馭馮馼駟駛駝駘駑駭駮駱駲駻駸騁騏騅駢騙騫騷驅驂驀驃騾驕驍驛驗驟驢驥驤驩驫驪骭骰骼髀髏髑髓體髞髟髢髣髦髯髫髮髴髱髷"],["f2a1","髻鬆鬘鬚鬟鬢鬣鬥鬧鬨鬩鬪鬮鬯鬲魄魃魏魍魎魑魘魴鮓鮃鮑鮖鮗鮟鮠鮨鮴鯀鯊鮹鯆鯏鯑鯒鯣鯢鯤鯔鯡鰺鯲鯱鯰鰕鰔鰉鰓鰌鰆鰈鰒鰊鰄鰮鰛鰥鰤鰡鰰鱇鰲鱆鰾鱚鱠鱧鱶鱸鳧鳬鳰鴉鴈鳫鴃鴆鴪鴦鶯鴣鴟鵄鴕鴒鵁鴿鴾鵆鵈"],["f3a1","鵝鵞鵤鵑鵐鵙鵲鶉鶇鶫鵯鵺鶚鶤鶩鶲鷄鷁鶻鶸鶺鷆鷏鷂鷙鷓鷸鷦鷭鷯鷽鸚鸛鸞鹵鹹鹽麁麈麋麌麒麕麑麝麥麩麸麪麭靡黌黎黏黐黔黜點黝黠黥黨黯黴黶黷黹黻黼黽鼇鼈皷鼕鼡鼬鼾齊齒齔齣齟齠齡齦齧齬齪齷齲齶龕龜龠"],["f4a1","堯槇遙瑤凜熙"],["f9a1","纊褜鍈銈蓜俉炻昱棈鋹曻彅丨仡仼伀伃伹佖侒侊侚侔俍偀倢俿倞偆偰偂傔僴僘兊兤冝冾凬刕劜劦勀勛匀匇匤卲厓厲叝﨎咜咊咩哿喆坙坥垬埈埇﨏塚增墲夋奓奛奝奣妤妺孖寀甯寘寬尞岦岺峵崧嵓﨑嵂嵭嶸嶹巐弡弴彧德"],["faa1","忞恝悅悊惞惕愠惲愑愷愰憘戓抦揵摠撝擎敎昀昕昻昉昮昞昤晥晗晙晴晳暙暠暲暿曺朎朗杦枻桒柀栁桄棏﨓楨﨔榘槢樰橫橆橳橾櫢櫤毖氿汜沆汯泚洄涇浯涖涬淏淸淲淼渹湜渧渼溿澈澵濵瀅瀇瀨炅炫焏焄煜煆煇凞燁燾犱"],["fba1","犾猤猪獷玽珉珖珣珒琇珵琦琪琩琮瑢璉璟甁畯皂皜皞皛皦益睆劯砡硎硤硺礰礼神祥禔福禛竑竧靖竫箞精絈絜綷綠緖繒罇羡羽茁荢荿菇菶葈蒴蕓蕙蕫﨟薰蘒﨡蠇裵訒訷詹誧誾諟諸諶譓譿賰賴贒赶﨣軏﨤逸遧郞都鄕鄧釚"],["fca1","釗釞釭釮釤釥鈆鈐鈊鈺鉀鈼鉎鉙鉑鈹鉧銧鉷鉸鋧鋗鋙鋐﨧鋕鋠鋓錥錡鋻﨨錞鋿錝錂鍰鍗鎤鏆鏞鏸鐱鑅鑈閒隆﨩隝隯霳霻靃靍靏靑靕顗顥飯飼餧館馞驎髙髜魵魲鮏鮱鮻鰀鵰鵫鶴鸙黑"],["fcf1","ⅰ",9,"￢￤＇＂"],["8fa2af","˘ˇ¸˙˝¯˛˚～΄΅"],["8fa2c2","¡¦¿"],["8fa2eb","ºª©®™¤№"],["8fa6e1","ΆΈΉΊΪ"],["8fa6e7","Ό"],["8fa6e9","ΎΫ"],["8fa6ec","Ώ"],["8fa6f1","άέήίϊΐόςύϋΰώ"],["8fa7c2","Ђ",10,"ЎЏ"],["8fa7f2","ђ",10,"ўџ"],["8fa9a1","ÆĐ"],["8fa9a4","Ħ"],["8fa9a6","Ĳ"],["8fa9a8","ŁĿ"],["8fa9ab","ŊØŒ"],["8fa9af","ŦÞ"],["8fa9c1","æđðħıĳĸłŀŉŋøœßŧþ"],["8faaa1","ÁÀÄÂĂǍĀĄÅÃĆĈČÇĊĎÉÈËÊĚĖĒĘ"],["8faaba","ĜĞĢĠĤÍÌÏÎǏİĪĮĨĴĶĹĽĻŃŇŅÑÓÒÖÔǑŐŌÕŔŘŖŚŜŠŞŤŢÚÙÜÛŬǓŰŪŲŮŨǗǛǙǕŴÝŸŶŹŽŻ"],["8faba1","áàäâăǎāąåãćĉčçċďéèëêěėēęǵĝğ"],["8fabbd","ġĥíìïîǐ"],["8fabc5","īįĩĵķĺľļńňņñóòöôǒőōõŕřŗśŝšşťţúùüûŭǔűūųůũǘǜǚǖŵýÿŷźžż"],["8fb0a1","丂丄丅丌丒丟丣两丨丫丮丯丰丵乀乁乄乇乑乚乜乣乨乩乴乵乹乿亍亖亗亝亯亹仃仐仚仛仠仡仢仨仯仱仳仵份仾仿伀伂伃伈伋伌伒伕伖众伙伮伱你伳伵伷伹伻伾佀佂佈佉佋佌佒佔佖佘佟佣佪佬佮佱佷佸佹佺佽佾侁侂侄"],["8fb1a1","侅侉侊侌侎侐侒侓侔侗侙侚侞侟侲侷侹侻侼侽侾俀俁俅俆俈俉俋俌俍俏俒俜俠俢俰俲俼俽俿倀倁倄倇倊倌倎倐倓倗倘倛倜倝倞倢倧倮倰倲倳倵偀偁偂偅偆偊偌偎偑偒偓偗偙偟偠偢偣偦偧偪偭偰偱倻傁傃傄傆傊傎傏傐"],["8fb2a1","傒傓傔傖傛傜傞",4,"傪傯傰傹傺傽僀僃僄僇僌僎僐僓僔僘僜僝僟僢僤僦僨僩僯僱僶僺僾儃儆儇儈儋儌儍儎僲儐儗儙儛儜儝儞儣儧儨儬儭儯儱儳儴儵儸儹兂兊兏兓兕兗兘兟兤兦兾冃冄冋冎冘冝冡冣冭冸冺冼冾冿凂"],["8fb3a1","凈减凑凒凓凕凘凞凢凥凮凲凳凴凷刁刂刅划刓刕刖刘刢刨刱刲刵刼剅剉剕剗剘剚剜剟剠剡剦剮剷剸剹劀劂劅劊劌劓劕劖劗劘劚劜劤劥劦劧劯劰劶劷劸劺劻劽勀勄勆勈勌勏勑勔勖勛勜勡勥勨勩勪勬勰勱勴勶勷匀匃匊匋"],["8fb4a1","匌匑匓匘匛匜匞匟匥匧匨匩匫匬匭匰匲匵匼匽匾卂卌卋卙卛卡卣卥卬卭卲卹卾厃厇厈厎厓厔厙厝厡厤厪厫厯厲厴厵厷厸厺厽叀叅叏叒叓叕叚叝叞叠另叧叵吂吓吚吡吧吨吪启吱吴吵呃呄呇呍呏呞呢呤呦呧呩呫呭呮呴呿"],["8fb5a1","咁咃咅咈咉咍咑咕咖咜咟咡咦咧咩咪咭咮咱咷咹咺咻咿哆哊响哎哠哪哬哯哶哼哾哿唀唁唅唈唉唌唍唎唕唪唫唲唵唶唻唼唽啁啇啉啊啍啐啑啘啚啛啞啠啡啤啦啿喁喂喆喈喎喏喑喒喓喔喗喣喤喭喲喿嗁嗃嗆嗉嗋嗌嗎嗑嗒"],["8fb6a1","嗓嗗嗘嗛嗞嗢嗩嗶嗿嘅嘈嘊嘍",5,"嘙嘬嘰嘳嘵嘷嘹嘻嘼嘽嘿噀噁噃噄噆噉噋噍噏噔噞噠噡噢噣噦噩噭噯噱噲噵嚄嚅嚈嚋嚌嚕嚙嚚嚝嚞嚟嚦嚧嚨嚩嚫嚬嚭嚱嚳嚷嚾囅囉囊囋囏囐囌囍囙囜囝囟囡囤",4,"囱囫园"],["8fb7a1","囶囷圁圂圇圊圌圑圕圚圛圝圠圢圣圤圥圩圪圬圮圯圳圴圽圾圿坅坆坌坍坒坢坥坧坨坫坭",4,"坳坴坵坷坹坺坻坼坾垁垃垌垔垗垙垚垜垝垞垟垡垕垧垨垩垬垸垽埇埈埌埏埕埝埞埤埦埧埩埭埰埵埶埸埽埾埿堃堄堈堉埡"],["8fb8a1","堌堍堛堞堟堠堦堧堭堲堹堿塉塌塍塏塐塕塟塡塤塧塨塸塼塿墀墁墇墈墉墊墌墍墏墐墔墖墝墠墡墢墦墩墱墲壄墼壂壈壍壎壐壒壔壖壚壝壡壢壩壳夅夆夋夌夒夓夔虁夝夡夣夤夨夯夰夳夵夶夿奃奆奒奓奙奛奝奞奟奡奣奫奭"],["8fb9a1","奯奲奵奶她奻奼妋妌妎妒妕妗妟妤妧妭妮妯妰妳妷妺妼姁姃姄姈姊姍姒姝姞姟姣姤姧姮姯姱姲姴姷娀娄娌娍娎娒娓娞娣娤娧娨娪娭娰婄婅婇婈婌婐婕婞婣婥婧婭婷婺婻婾媋媐媓媖媙媜媞媟媠媢媧媬媱媲媳媵媸媺媻媿"],["8fbaa1","嫄嫆嫈嫏嫚嫜嫠嫥嫪嫮嫵嫶嫽嬀嬁嬈嬗嬴嬙嬛嬝嬡嬥嬭嬸孁孋孌孒孖孞孨孮孯孼孽孾孿宁宄宆宊宎宐宑宓宔宖宨宩宬宭宯宱宲宷宺宼寀寁寍寏寖",4,"寠寯寱寴寽尌尗尞尟尣尦尩尫尬尮尰尲尵尶屙屚屜屢屣屧屨屩"],["8fbba1","屭屰屴屵屺屻屼屽岇岈岊岏岒岝岟岠岢岣岦岪岲岴岵岺峉峋峒峝峗峮峱峲峴崁崆崍崒崫崣崤崦崧崱崴崹崽崿嵂嵃嵆嵈嵕嵑嵙嵊嵟嵠嵡嵢嵤嵪嵭嵰嵹嵺嵾嵿嶁嶃嶈嶊嶒嶓嶔嶕嶙嶛嶟嶠嶧嶫嶰嶴嶸嶹巃巇巋巐巎巘巙巠巤"],["8fbca1","巩巸巹帀帇帍帒帔帕帘帟帠帮帨帲帵帾幋幐幉幑幖幘幛幜幞幨幪",4,"幰庀庋庎庢庤庥庨庪庬庱庳庽庾庿廆廌廋廎廑廒廔廕廜廞廥廫异弆弇弈弎弙弜弝弡弢弣弤弨弫弬弮弰弴弶弻弽弿彀彄彅彇彍彐彔彘彛彠彣彤彧"],["8fbda1","彯彲彴彵彸彺彽彾徉徍徏徖徜徝徢徧徫徤徬徯徰徱徸忄忇忈忉忋忐",4,"忞忡忢忨忩忪忬忭忮忯忲忳忶忺忼怇怊怍怓怔怗怘怚怟怤怭怳怵恀恇恈恉恌恑恔恖恗恝恡恧恱恾恿悂悆悈悊悎悑悓悕悘悝悞悢悤悥您悰悱悷"],["8fbea1","悻悾惂惄惈惉惊惋惎惏惔惕惙惛惝惞惢惥惲惵惸惼惽愂愇愊愌愐",4,"愖愗愙愜愞愢愪愫愰愱愵愶愷愹慁慅慆慉慞慠慬慲慸慻慼慿憀憁憃憄憋憍憒憓憗憘憜憝憟憠憥憨憪憭憸憹憼懀懁懂懎懏懕懜懝懞懟懡懢懧懩懥"],["8fbfa1","懬懭懯戁戃戄戇戓戕戜戠戢戣戧戩戫戹戽扂扃扄扆扌扐扑扒扔扖扚扜扤扭扯扳扺扽抍抎抏抐抦抨抳抶抷抺抾抿拄拎拕拖拚拪拲拴拼拽挃挄挊挋挍挐挓挖挘挩挪挭挵挶挹挼捁捂捃捄捆捊捋捎捒捓捔捘捛捥捦捬捭捱捴捵"],["8fc0a1","捸捼捽捿掂掄掇掊掐掔掕掙掚掞掤掦掭掮掯掽揁揅揈揎揑揓揔揕揜揠揥揪揬揲揳揵揸揹搉搊搐搒搔搘搞搠搢搤搥搩搪搯搰搵搽搿摋摏摑摒摓摔摚摛摜摝摟摠摡摣摭摳摴摻摽撅撇撏撐撑撘撙撛撝撟撡撣撦撨撬撳撽撾撿"],["8fc1a1","擄擉擊擋擌擎擐擑擕擗擤擥擩擪擭擰擵擷擻擿攁攄攈攉攊攏攓攔攖攙攛攞攟攢攦攩攮攱攺攼攽敃敇敉敐敒敔敟敠敧敫敺敽斁斅斊斒斕斘斝斠斣斦斮斲斳斴斿旂旈旉旎旐旔旖旘旟旰旲旴旵旹旾旿昀昄昈昉昍昑昒昕昖昝"],["8fc2a1","昞昡昢昣昤昦昩昪昫昬昮昰昱昳昹昷晀晅晆晊晌晑晎晗晘晙晛晜晠晡曻晪晫晬晾晳晵晿晷晸晹晻暀晼暋暌暍暐暒暙暚暛暜暟暠暤暭暱暲暵暻暿曀曂曃曈曌曎曏曔曛曟曨曫曬曮曺朅朇朎朓朙朜朠朢朳朾杅杇杈杌杔杕杝"],["8fc3a1","杦杬杮杴杶杻极构枎枏枑枓枖枘枙枛枰枱枲枵枻枼枽柹柀柂柃柅柈柉柒柗柙柜柡柦柰柲柶柷桒栔栙栝栟栨栧栬栭栯栰栱栳栻栿桄桅桊桌桕桗桘桛桫桮",4,"桵桹桺桻桼梂梄梆梈梖梘梚梜梡梣梥梩梪梮梲梻棅棈棌棏"],["8fc4a1","棐棑棓棖棙棜棝棥棨棪棫棬棭棰棱棵棶棻棼棽椆椉椊椐椑椓椖椗椱椳椵椸椻楂楅楉楎楗楛楣楤楥楦楨楩楬楰楱楲楺楻楿榀榍榒榖榘榡榥榦榨榫榭榯榷榸榺榼槅槈槑槖槗槢槥槮槯槱槳槵槾樀樁樃樏樑樕樚樝樠樤樨樰樲"],["8fc5a1","樴樷樻樾樿橅橆橉橊橎橐橑橒橕橖橛橤橧橪橱橳橾檁檃檆檇檉檋檑檛檝檞檟檥檫檯檰檱檴檽檾檿櫆櫉櫈櫌櫐櫔櫕櫖櫜櫝櫤櫧櫬櫰櫱櫲櫼櫽欂欃欆欇欉欏欐欑欗欛欞欤欨欫欬欯欵欶欻欿歆歊歍歒歖歘歝歠歧歫歮歰歵歽"],["8fc6a1","歾殂殅殗殛殟殠殢殣殨殩殬殭殮殰殸殹殽殾毃毄毉毌毖毚毡毣毦毧毮毱毷毹毿氂氄氅氉氍氎氐氒氙氟氦氧氨氬氮氳氵氶氺氻氿汊汋汍汏汒汔汙汛汜汫汭汯汴汶汸汹汻沅沆沇沉沔沕沗沘沜沟沰沲沴泂泆泍泏泐泑泒泔泖"],["8fc7a1","泚泜泠泧泩泫泬泮泲泴洄洇洊洎洏洑洓洚洦洧洨汧洮洯洱洹洼洿浗浞浟浡浥浧浯浰浼涂涇涑涒涔涖涗涘涪涬涴涷涹涽涿淄淈淊淎淏淖淛淝淟淠淢淥淩淯淰淴淶淼渀渄渞渢渧渲渶渹渻渼湄湅湈湉湋湏湑湒湓湔湗湜湝湞"],["8fc8a1","湢湣湨湳湻湽溍溓溙溠溧溭溮溱溳溻溿滀滁滃滇滈滊滍滎滏滫滭滮滹滻滽漄漈漊漌漍漖漘漚漛漦漩漪漯漰漳漶漻漼漭潏潑潒潓潗潙潚潝潞潡潢潨潬潽潾澃澇澈澋澌澍澐澒澓澔澖澚澟澠澥澦澧澨澮澯澰澵澶澼濅濇濈濊"],["8fc9a1","濚濞濨濩濰濵濹濼濽瀀瀅瀆瀇瀍瀗瀠瀣瀯瀴瀷瀹瀼灃灄灈灉灊灋灔灕灝灞灎灤灥灬灮灵灶灾炁炅炆炔",4,"炛炤炫炰炱炴炷烊烑烓烔烕烖烘烜烤烺焃",4,"焋焌焏焞焠焫焭焯焰焱焸煁煅煆煇煊煋煐煒煗煚煜煞煠"],["8fcaa1","煨煹熀熅熇熌熒熚熛熠熢熯熰熲熳熺熿燀燁燄燋燌燓燖燙燚燜燸燾爀爇爈爉爓爗爚爝爟爤爫爯爴爸爹牁牂牃牅牎牏牐牓牕牖牚牜牞牠牣牨牫牮牯牱牷牸牻牼牿犄犉犍犎犓犛犨犭犮犱犴犾狁狇狉狌狕狖狘狟狥狳狴狺狻"],["8fcba1","狾猂猄猅猇猋猍猒猓猘猙猞猢猤猧猨猬猱猲猵猺猻猽獃獍獐獒獖獘獝獞獟獠獦獧獩獫獬獮獯獱獷獹獼玀玁玃玅玆玎玐玓玕玗玘玜玞玟玠玢玥玦玪玫玭玵玷玹玼玽玿珅珆珉珋珌珏珒珓珖珙珝珡珣珦珧珩珴珵珷珹珺珻珽"],["8fcca1","珿琀琁琄琇琊琑琚琛琤琦琨",9,"琹瑀瑃瑄瑆瑇瑋瑍瑑瑒瑗瑝瑢瑦瑧瑨瑫瑭瑮瑱瑲璀璁璅璆璇璉璏璐璑璒璘璙璚璜璟璠璡璣璦璨璩璪璫璮璯璱璲璵璹璻璿瓈瓉瓌瓐瓓瓘瓚瓛瓞瓟瓤瓨瓪瓫瓯瓴瓺瓻瓼瓿甆"],["8fcda1","甒甖甗甠甡甤甧甩甪甯甶甹甽甾甿畀畃畇畈畎畐畒畗畞畟畡畯畱畹",5,"疁疅疐疒疓疕疙疜疢疤疴疺疿痀痁痄痆痌痎痏痗痜痟痠痡痤痧痬痮痯痱痹瘀瘂瘃瘄瘇瘈瘊瘌瘏瘒瘓瘕瘖瘙瘛瘜瘝瘞瘣瘥瘦瘩瘭瘲瘳瘵瘸瘹"],["8fcea1","瘺瘼癊癀癁癃癄癅癉癋癕癙癟癤癥癭癮癯癱癴皁皅皌皍皕皛皜皝皟皠皢",6,"皪皭皽盁盅盉盋盌盎盔盙盠盦盨盬盰盱盶盹盼眀眆眊眎眒眔眕眗眙眚眜眢眨眭眮眯眴眵眶眹眽眾睂睅睆睊睍睎睏睒睖睗睜睞睟睠睢"],["8fcfa1","睤睧睪睬睰睲睳睴睺睽瞀瞄瞌瞍瞔瞕瞖瞚瞟瞢瞧瞪瞮瞯瞱瞵瞾矃矉矑矒矕矙矞矟矠矤矦矪矬矰矱矴矸矻砅砆砉砍砎砑砝砡砢砣砭砮砰砵砷硃硄硇硈硌硎硒硜硞硠硡硣硤硨硪确硺硾碊碏碔碘碡碝碞碟碤碨碬碭碰碱碲碳"],["8fd0a1","碻碽碿磇磈磉磌磎磒磓磕磖磤磛磟磠磡磦磪磲磳礀磶磷磺磻磿礆礌礐礚礜礞礟礠礥礧礩礭礱礴礵礻礽礿祄祅祆祊祋祏祑祔祘祛祜祧祩祫祲祹祻祼祾禋禌禑禓禔禕禖禘禛禜禡禨禩禫禯禱禴禸离秂秄秇秈秊秏秔秖秚秝秞"],["8fd1a1","秠秢秥秪秫秭秱秸秼稂稃稇稉稊稌稑稕稛稞稡稧稫稭稯稰稴稵稸稹稺穄穅穇穈穌穕穖穙穜穝穟穠穥穧穪穭穵穸穾窀窂窅窆窊窋窐窑窔窞窠窣窬窳窵窹窻窼竆竉竌竎竑竛竨竩竫竬竱竴竻竽竾笇笔笟笣笧笩笪笫笭笮笯笰"],["8fd2a1","笱笴笽笿筀筁筇筎筕筠筤筦筩筪筭筯筲筳筷箄箉箎箐箑箖箛箞箠箥箬箯箰箲箵箶箺箻箼箽篂篅篈篊篔篖篗篙篚篛篨篪篲篴篵篸篹篺篼篾簁簂簃簄簆簉簋簌簎簏簙簛簠簥簦簨簬簱簳簴簶簹簺籆籊籕籑籒籓籙",5],["8fd3a1","籡籣籧籩籭籮籰籲籹籼籽粆粇粏粔粞粠粦粰粶粷粺粻粼粿糄糇糈糉糍糏糓糔糕糗糙糚糝糦糩糫糵紃紇紈紉紏紑紒紓紖紝紞紣紦紪紭紱紼紽紾絀絁絇絈絍絑絓絗絙絚絜絝絥絧絪絰絸絺絻絿綁綂綃綅綆綈綋綌綍綑綖綗綝"],["8fd4a1","綞綦綧綪綳綶綷綹緂",4,"緌緍緎緗緙縀緢緥緦緪緫緭緱緵緶緹緺縈縐縑縕縗縜縝縠縧縨縬縭縯縳縶縿繄繅繇繎繐繒繘繟繡繢繥繫繮繯繳繸繾纁纆纇纊纍纑纕纘纚纝纞缼缻缽缾缿罃罄罇罏罒罓罛罜罝罡罣罤罥罦罭"],["8fd5a1","罱罽罾罿羀羋羍羏羐羑羖羗羜羡羢羦羪羭羴羼羿翀翃翈翎翏翛翟翣翥翨翬翮翯翲翺翽翾翿耇耈耊耍耎耏耑耓耔耖耝耞耟耠耤耦耬耮耰耴耵耷耹耺耼耾聀聄聠聤聦聭聱聵肁肈肎肜肞肦肧肫肸肹胈胍胏胒胔胕胗胘胠胭胮"],["8fd6a1","胰胲胳胶胹胺胾脃脋脖脗脘脜脞脠脤脧脬脰脵脺脼腅腇腊腌腒腗腠腡腧腨腩腭腯腷膁膐膄膅膆膋膎膖膘膛膞膢膮膲膴膻臋臃臅臊臎臏臕臗臛臝臞臡臤臫臬臰臱臲臵臶臸臹臽臿舀舃舏舓舔舙舚舝舡舢舨舲舴舺艃艄艅艆"],["8fd7a1","艋艎艏艑艖艜艠艣艧艭艴艻艽艿芀芁芃芄芇芉芊芎芑芔芖芘芚芛芠芡芣芤芧芨芩芪芮芰芲芴芷芺芼芾芿苆苐苕苚苠苢苤苨苪苭苯苶苷苽苾茀茁茇茈茊茋荔茛茝茞茟茡茢茬茭茮茰茳茷茺茼茽荂荃荄荇荍荎荑荕荖荗荰荸"],["8fd8a1","荽荿莀莂莄莆莍莒莔莕莘莙莛莜莝莦莧莩莬莾莿菀菇菉菏菐菑菔菝荓菨菪菶菸菹菼萁萆萊萏萑萕萙莭萯萹葅葇葈葊葍葏葑葒葖葘葙葚葜葠葤葥葧葪葰葳葴葶葸葼葽蒁蒅蒒蒓蒕蒞蒦蒨蒩蒪蒯蒱蒴蒺蒽蒾蓀蓂蓇蓈蓌蓏蓓"],["8fd9a1","蓜蓧蓪蓯蓰蓱蓲蓷蔲蓺蓻蓽蔂蔃蔇蔌蔎蔐蔜蔞蔢蔣蔤蔥蔧蔪蔫蔯蔳蔴蔶蔿蕆蕏",4,"蕖蕙蕜",6,"蕤蕫蕯蕹蕺蕻蕽蕿薁薅薆薉薋薌薏薓薘薝薟薠薢薥薧薴薶薷薸薼薽薾薿藂藇藊藋藎薭藘藚藟藠藦藨藭藳藶藼"],["8fdaa1","藿蘀蘄蘅蘍蘎蘐蘑蘒蘘蘙蘛蘞蘡蘧蘩蘶蘸蘺蘼蘽虀虂虆虒虓虖虗虘虙虝虠",4,"虩虬虯虵虶虷虺蚍蚑蚖蚘蚚蚜蚡蚦蚧蚨蚭蚱蚳蚴蚵蚷蚸蚹蚿蛀蛁蛃蛅蛑蛒蛕蛗蛚蛜蛠蛣蛥蛧蚈蛺蛼蛽蜄蜅蜇蜋蜎蜏蜐蜓蜔蜙蜞蜟蜡蜣"],["8fdba1","蜨蜮蜯蜱蜲蜹蜺蜼蜽蜾蝀蝃蝅蝍蝘蝝蝡蝤蝥蝯蝱蝲蝻螃",6,"螋螌螐螓螕螗螘螙螞螠螣螧螬螭螮螱螵螾螿蟁蟈蟉蟊蟎蟕蟖蟙蟚蟜蟟蟢蟣蟤蟪蟫蟭蟱蟳蟸蟺蟿蠁蠃蠆蠉蠊蠋蠐蠙蠒蠓蠔蠘蠚蠛蠜蠞蠟蠨蠭蠮蠰蠲蠵"],["8fdca1","蠺蠼衁衃衅衈衉衊衋衎衑衕衖衘衚衜衟衠衤衩衱衹衻袀袘袚袛袜袟袠袨袪袺袽袾裀裊",4,"裑裒裓裛裞裧裯裰裱裵裷褁褆褍褎褏褕褖褘褙褚褜褠褦褧褨褰褱褲褵褹褺褾襀襂襅襆襉襏襒襗襚襛襜襡襢襣襫襮襰襳襵襺"],["8fdda1","襻襼襽覉覍覐覔覕覛覜覟覠覥覰覴覵覶覷覼觔",4,"觥觩觫觭觱觳觶觹觽觿訄訅訇訏訑訒訔訕訞訠訢訤訦訫訬訯訵訷訽訾詀詃詅詇詉詍詎詓詖詗詘詜詝詡詥詧詵詶詷詹詺詻詾詿誀誃誆誋誏誐誒誖誗誙誟誧誩誮誯誳"],["8fdea1","誶誷誻誾諃諆諈諉諊諑諓諔諕諗諝諟諬諰諴諵諶諼諿謅謆謋謑謜謞謟謊謭謰謷謼譂",4,"譈譒譓譔譙譍譞譣譭譶譸譹譼譾讁讄讅讋讍讏讔讕讜讞讟谸谹谽谾豅豇豉豋豏豑豓豔豗豘豛豝豙豣豤豦豨豩豭豳豵豶豻豾貆"],["8fdfa1","貇貋貐貒貓貙貛貜貤貹貺賅賆賉賋賏賖賕賙賝賡賨賬賯賰賲賵賷賸賾賿贁贃贉贒贗贛赥赩赬赮赿趂趄趈趍趐趑趕趞趟趠趦趫趬趯趲趵趷趹趻跀跅跆跇跈跊跎跑跔跕跗跙跤跥跧跬跰趼跱跲跴跽踁踄踅踆踋踑踔踖踠踡踢"],["8fe0a1","踣踦踧踱踳踶踷踸踹踽蹀蹁蹋蹍蹎蹏蹔蹛蹜蹝蹞蹡蹢蹩蹬蹭蹯蹰蹱蹹蹺蹻躂躃躉躐躒躕躚躛躝躞躢躧躩躭躮躳躵躺躻軀軁軃軄軇軏軑軔軜軨軮軰軱軷軹軺軭輀輂輇輈輏輐輖輗輘輞輠輡輣輥輧輨輬輭輮輴輵輶輷輺轀轁"],["8fe1a1","轃轇轏轑",4,"轘轝轞轥辝辠辡辤辥辦辵辶辸达迀迁迆迊迋迍运迒迓迕迠迣迤迨迮迱迵迶迻迾适逄逈逌逘逛逨逩逯逪逬逭逳逴逷逿遃遄遌遛遝遢遦遧遬遰遴遹邅邈邋邌邎邐邕邗邘邙邛邠邡邢邥邰邲邳邴邶邽郌邾郃"],["8fe2a1","郄郅郇郈郕郗郘郙郜郝郟郥郒郶郫郯郰郴郾郿鄀鄄鄅鄆鄈鄍鄐鄔鄖鄗鄘鄚鄜鄞鄠鄥鄢鄣鄧鄩鄮鄯鄱鄴鄶鄷鄹鄺鄼鄽酃酇酈酏酓酗酙酚酛酡酤酧酭酴酹酺酻醁醃醅醆醊醎醑醓醔醕醘醞醡醦醨醬醭醮醰醱醲醳醶醻醼醽醿"],["8fe3a1","釂釃釅釓釔釗釙釚釞釤釥釩釪釬",5,"釷釹釻釽鈀鈁鈄鈅鈆鈇鈉鈊鈌鈐鈒鈓鈖鈘鈜鈝鈣鈤鈥鈦鈨鈮鈯鈰鈳鈵鈶鈸鈹鈺鈼鈾鉀鉂鉃鉆鉇鉊鉍鉎鉏鉑鉘鉙鉜鉝鉠鉡鉥鉧鉨鉩鉮鉯鉰鉵",4,"鉻鉼鉽鉿銈銉銊銍銎銒銗"],["8fe4a1","銙銟銠銤銥銧銨銫銯銲銶銸銺銻銼銽銿",4,"鋅鋆鋇鋈鋋鋌鋍鋎鋐鋓鋕鋗鋘鋙鋜鋝鋟鋠鋡鋣鋥鋧鋨鋬鋮鋰鋹鋻鋿錀錂錈錍錑錔錕錜錝錞錟錡錤錥錧錩錪錳錴錶錷鍇鍈鍉鍐鍑鍒鍕鍗鍘鍚鍞鍤鍥鍧鍩鍪鍭鍯鍰鍱鍳鍴鍶"],["8fe5a1","鍺鍽鍿鎀鎁鎂鎈鎊鎋鎍鎏鎒鎕鎘鎛鎞鎡鎣鎤鎦鎨鎫鎴鎵鎶鎺鎩鏁鏄鏅鏆鏇鏉",4,"鏓鏙鏜鏞鏟鏢鏦鏧鏹鏷鏸鏺鏻鏽鐁鐂鐄鐈鐉鐍鐎鐏鐕鐖鐗鐟鐮鐯鐱鐲鐳鐴鐻鐿鐽鑃鑅鑈鑊鑌鑕鑙鑜鑟鑡鑣鑨鑫鑭鑮鑯鑱鑲钄钃镸镹"],["8fe6a1","镾閄閈閌閍閎閝閞閟閡閦閩閫閬閴閶閺閽閿闆闈闉闋闐闑闒闓闙闚闝闞闟闠闤闦阝阞阢阤阥阦阬阱阳阷阸阹阺阼阽陁陒陔陖陗陘陡陮陴陻陼陾陿隁隂隃隄隉隑隖隚隝隟隤隥隦隩隮隯隳隺雊雒嶲雘雚雝雞雟雩雯雱雺霂"],["8fe7a1","霃霅霉霚霛霝霡霢霣霨霱霳靁靃靊靎靏靕靗靘靚靛靣靧靪靮靳靶靷靸靻靽靿鞀鞉鞕鞖鞗鞙鞚鞞鞟鞢鞬鞮鞱鞲鞵鞶鞸鞹鞺鞼鞾鞿韁韄韅韇韉韊韌韍韎韐韑韔韗韘韙韝韞韠韛韡韤韯韱韴韷韸韺頇頊頙頍頎頔頖頜頞頠頣頦"],["8fe8a1","頫頮頯頰頲頳頵頥頾顄顇顊顑顒顓顖顗顙顚顢顣顥顦顪顬颫颭颮颰颴颷颸颺颻颿飂飅飈飌飡飣飥飦飧飪飳飶餂餇餈餑餕餖餗餚餛餜餟餢餦餧餫餱",4,"餹餺餻餼饀饁饆饇饈饍饎饔饘饙饛饜饞饟饠馛馝馟馦馰馱馲馵"],["8fe9a1","馹馺馽馿駃駉駓駔駙駚駜駞駧駪駫駬駰駴駵駹駽駾騂騃騄騋騌騐騑騖騞騠騢騣騤騧騭騮騳騵騶騸驇驁驄驊驋驌驎驑驔驖驝骪骬骮骯骲骴骵骶骹骻骾骿髁髃髆髈髎髐髒髕髖髗髛髜髠髤髥髧髩髬髲髳髵髹髺髽髿",4],["8feaa1","鬄鬅鬈鬉鬋鬌鬍鬎鬐鬒鬖鬙鬛鬜鬠鬦鬫鬭鬳鬴鬵鬷鬹鬺鬽魈魋魌魕魖魗魛魞魡魣魥魦魨魪",4,"魳魵魷魸魹魿鮀鮄鮅鮆鮇鮉鮊鮋鮍鮏鮐鮔鮚鮝鮞鮦鮧鮩鮬鮰鮱鮲鮷鮸鮻鮼鮾鮿鯁鯇鯈鯎鯐鯗鯘鯝鯟鯥鯧鯪鯫鯯鯳鯷鯸"],["8feba1","鯹鯺鯽鯿鰀鰂鰋鰏鰑鰖鰘鰙鰚鰜鰞鰢鰣鰦",4,"鰱鰵鰶鰷鰽鱁鱃鱄鱅鱉鱊鱎鱏鱐鱓鱔鱖鱘鱛鱝鱞鱟鱣鱩鱪鱜鱫鱨鱮鱰鱲鱵鱷鱻鳦鳲鳷鳹鴋鴂鴑鴗鴘鴜鴝鴞鴯鴰鴲鴳鴴鴺鴼鵅鴽鵂鵃鵇鵊鵓鵔鵟鵣鵢鵥鵩鵪鵫鵰鵶鵷鵻"],["8feca1","鵼鵾鶃鶄鶆鶊鶍鶎鶒鶓鶕鶖鶗鶘鶡鶪鶬鶮鶱鶵鶹鶼鶿鷃鷇鷉鷊鷔鷕鷖鷗鷚鷞鷟鷠鷥鷧鷩鷫鷮鷰鷳鷴鷾鸊鸂鸇鸎鸐鸑鸒鸕鸖鸙鸜鸝鹺鹻鹼麀麂麃麄麅麇麎麏麖麘麛麞麤麨麬麮麯麰麳麴麵黆黈黋黕黟黤黧黬黭黮黰黱黲黵"],["8feda1","黸黿鼂鼃鼉鼏鼐鼑鼒鼔鼖鼗鼙鼚鼛鼟鼢鼦鼪鼫鼯鼱鼲鼴鼷鼹鼺鼼鼽鼿齁齃",4,"齓齕齖齗齘齚齝齞齨齩齭",4,"齳齵齺齽龏龐龑龒龔龖龗龞龡龢龣龥"]]');

/***/ }),

/***/ "./node_modules/iconv-lite/encodings/tables/gb18030-ranges.json":
/*!**********************************************************************!*\
  !*** ./node_modules/iconv-lite/encodings/tables/gb18030-ranges.json ***!
  \**********************************************************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"uChars":[128,165,169,178,184,216,226,235,238,244,248,251,253,258,276,284,300,325,329,334,364,463,465,467,469,471,473,475,477,506,594,610,712,716,730,930,938,962,970,1026,1104,1106,8209,8215,8218,8222,8231,8241,8244,8246,8252,8365,8452,8454,8458,8471,8482,8556,8570,8596,8602,8713,8720,8722,8726,8731,8737,8740,8742,8748,8751,8760,8766,8777,8781,8787,8802,8808,8816,8854,8858,8870,8896,8979,9322,9372,9548,9588,9616,9622,9634,9652,9662,9672,9676,9680,9702,9735,9738,9793,9795,11906,11909,11913,11917,11928,11944,11947,11951,11956,11960,11964,11979,12284,12292,12312,12319,12330,12351,12436,12447,12535,12543,12586,12842,12850,12964,13200,13215,13218,13253,13263,13267,13270,13384,13428,13727,13839,13851,14617,14703,14801,14816,14964,15183,15471,15585,16471,16736,17208,17325,17330,17374,17623,17997,18018,18212,18218,18301,18318,18760,18811,18814,18820,18823,18844,18848,18872,19576,19620,19738,19887,40870,59244,59336,59367,59413,59417,59423,59431,59437,59443,59452,59460,59478,59493,63789,63866,63894,63976,63986,64016,64018,64021,64025,64034,64037,64042,65074,65093,65107,65112,65127,65132,65375,65510,65536],"gbChars":[0,36,38,45,50,81,89,95,96,100,103,104,105,109,126,133,148,172,175,179,208,306,307,308,309,310,311,312,313,341,428,443,544,545,558,741,742,749,750,805,819,820,7922,7924,7925,7927,7934,7943,7944,7945,7950,8062,8148,8149,8152,8164,8174,8236,8240,8262,8264,8374,8380,8381,8384,8388,8390,8392,8393,8394,8396,8401,8406,8416,8419,8424,8437,8439,8445,8482,8485,8496,8521,8603,8936,8946,9046,9050,9063,9066,9076,9092,9100,9108,9111,9113,9131,9162,9164,9218,9219,11329,11331,11334,11336,11346,11361,11363,11366,11370,11372,11375,11389,11682,11686,11687,11692,11694,11714,11716,11723,11725,11730,11736,11982,11989,12102,12336,12348,12350,12384,12393,12395,12397,12510,12553,12851,12962,12973,13738,13823,13919,13933,14080,14298,14585,14698,15583,15847,16318,16434,16438,16481,16729,17102,17122,17315,17320,17402,17418,17859,17909,17911,17915,17916,17936,17939,17961,18664,18703,18814,18962,19043,33469,33470,33471,33484,33485,33490,33497,33501,33505,33513,33520,33536,33550,37845,37921,37948,38029,38038,38064,38065,38066,38069,38075,38076,38078,39108,39109,39113,39114,39115,39116,39265,39394,189000]}');

/***/ }),

/***/ "./node_modules/iconv-lite/encodings/tables/gbk-added.json":
/*!*****************************************************************!*\
  !*** ./node_modules/iconv-lite/encodings/tables/gbk-added.json ***!
  \*****************************************************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('[["a140","",62],["a180","",32],["a240","",62],["a280","",32],["a2ab","",5],["a2e3","€"],["a2ef",""],["a2fd",""],["a340","",62],["a380","",31,"　"],["a440","",62],["a480","",32],["a4f4","",10],["a540","",62],["a580","",32],["a5f7","",7],["a640","",62],["a680","",32],["a6b9","",7],["a6d9","",6],["a6ec",""],["a6f3",""],["a6f6","",8],["a740","",62],["a780","",32],["a7c2","",14],["a7f2","",12],["a896","",10],["a8bc","ḿ"],["a8bf","ǹ"],["a8c1",""],["a8ea","",20],["a958",""],["a95b",""],["a95d",""],["a989","〾⿰",11],["a997","",12],["a9f0","",14],["aaa1","",93],["aba1","",93],["aca1","",93],["ada1","",93],["aea1","",93],["afa1","",93],["d7fa","",4],["f8a1","",93],["f9a1","",93],["faa1","",93],["fba1","",93],["fca1","",93],["fda1","",93],["fe50","⺁⺄㑳㑇⺈⺋㖞㘚㘎⺌⺗㥮㤘㧏㧟㩳㧐㭎㱮㳠⺧⺪䁖䅟⺮䌷⺳⺶⺷䎱䎬⺻䏝䓖䙡䙌"],["fe80","䜣䜩䝼䞍⻊䥇䥺䥽䦂䦃䦅䦆䦟䦛䦷䦶䲣䲟䲠䲡䱷䲢䴓",6,"䶮",93],["8135f437",""]]');

/***/ }),

/***/ "./node_modules/iconv-lite/encodings/tables/shiftjis.json":
/*!****************************************************************!*\
  !*** ./node_modules/iconv-lite/encodings/tables/shiftjis.json ***!
  \****************************************************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('[["0","\\u0000",128],["a1","｡",62],["8140","　、。，．・：；？！゛゜´｀¨＾￣＿ヽヾゝゞ〃仝々〆〇ー―‐／＼～∥｜…‥‘’“”（）〔〕［］｛｝〈",9,"＋－±×"],["8180","÷＝≠＜＞≦≧∞∴♂♀°′″℃￥＄￠￡％＃＆＊＠§☆★○●◎◇◆□■△▲▽▼※〒→←↑↓〓"],["81b8","∈∋⊆⊇⊂⊃∪∩"],["81c8","∧∨￢⇒⇔∀∃"],["81da","∠⊥⌒∂∇≡≒≪≫√∽∝∵∫∬"],["81f0","Å‰♯♭♪†‡¶"],["81fc","◯"],["824f","０",9],["8260","Ａ",25],["8281","ａ",25],["829f","ぁ",82],["8340","ァ",62],["8380","ム",22],["839f","Α",16,"Σ",6],["83bf","α",16,"σ",6],["8440","А",5,"ЁЖ",25],["8470","а",5,"ёж",7],["8480","о",17],["849f","─│┌┐┘└├┬┤┴┼━┃┏┓┛┗┣┳┫┻╋┠┯┨┷┿┝┰┥┸╂"],["8740","①",19,"Ⅰ",9],["875f","㍉㌔㌢㍍㌘㌧㌃㌶㍑㍗㌍㌦㌣㌫㍊㌻㎜㎝㎞㎎㎏㏄㎡"],["877e","㍻"],["8780","〝〟№㏍℡㊤",4,"㈱㈲㈹㍾㍽㍼≒≡∫∮∑√⊥∠∟⊿∵∩∪"],["889f","亜唖娃阿哀愛挨姶逢葵茜穐悪握渥旭葦芦鯵梓圧斡扱宛姐虻飴絢綾鮎或粟袷安庵按暗案闇鞍杏以伊位依偉囲夷委威尉惟意慰易椅為畏異移維緯胃萎衣謂違遺医井亥域育郁磯一壱溢逸稲茨芋鰯允印咽員因姻引飲淫胤蔭"],["8940","院陰隠韻吋右宇烏羽迂雨卯鵜窺丑碓臼渦嘘唄欝蔚鰻姥厩浦瓜閏噂云運雲荏餌叡営嬰影映曳栄永泳洩瑛盈穎頴英衛詠鋭液疫益駅悦謁越閲榎厭円"],["8980","園堰奄宴延怨掩援沿演炎焔煙燕猿縁艶苑薗遠鉛鴛塩於汚甥凹央奥往応押旺横欧殴王翁襖鴬鴎黄岡沖荻億屋憶臆桶牡乙俺卸恩温穏音下化仮何伽価佳加可嘉夏嫁家寡科暇果架歌河火珂禍禾稼箇花苛茄荷華菓蝦課嘩貨迦過霞蚊俄峨我牙画臥芽蛾賀雅餓駕介会解回塊壊廻快怪悔恢懐戒拐改"],["8a40","魁晦械海灰界皆絵芥蟹開階貝凱劾外咳害崖慨概涯碍蓋街該鎧骸浬馨蛙垣柿蛎鈎劃嚇各廓拡撹格核殻獲確穫覚角赫較郭閣隔革学岳楽額顎掛笠樫"],["8a80","橿梶鰍潟割喝恰括活渇滑葛褐轄且鰹叶椛樺鞄株兜竃蒲釜鎌噛鴨栢茅萱粥刈苅瓦乾侃冠寒刊勘勧巻喚堪姦完官寛干幹患感慣憾換敢柑桓棺款歓汗漢澗潅環甘監看竿管簡緩缶翰肝艦莞観諌貫還鑑間閑関陥韓館舘丸含岸巌玩癌眼岩翫贋雁頑顔願企伎危喜器基奇嬉寄岐希幾忌揮机旗既期棋棄"],["8b40","機帰毅気汽畿祈季稀紀徽規記貴起軌輝飢騎鬼亀偽儀妓宜戯技擬欺犠疑祇義蟻誼議掬菊鞠吉吃喫桔橘詰砧杵黍却客脚虐逆丘久仇休及吸宮弓急救"],["8b80","朽求汲泣灸球究窮笈級糾給旧牛去居巨拒拠挙渠虚許距鋸漁禦魚亨享京供侠僑兇競共凶協匡卿叫喬境峡強彊怯恐恭挟教橋況狂狭矯胸脅興蕎郷鏡響饗驚仰凝尭暁業局曲極玉桐粁僅勤均巾錦斤欣欽琴禁禽筋緊芹菌衿襟謹近金吟銀九倶句区狗玖矩苦躯駆駈駒具愚虞喰空偶寓遇隅串櫛釧屑屈"],["8c40","掘窟沓靴轡窪熊隈粂栗繰桑鍬勲君薫訓群軍郡卦袈祁係傾刑兄啓圭珪型契形径恵慶慧憩掲携敬景桂渓畦稽系経継繋罫茎荊蛍計詣警軽頚鶏芸迎鯨"],["8c80","劇戟撃激隙桁傑欠決潔穴結血訣月件倹倦健兼券剣喧圏堅嫌建憲懸拳捲検権牽犬献研硯絹県肩見謙賢軒遣鍵険顕験鹸元原厳幻弦減源玄現絃舷言諺限乎個古呼固姑孤己庫弧戸故枯湖狐糊袴股胡菰虎誇跨鈷雇顧鼓五互伍午呉吾娯後御悟梧檎瑚碁語誤護醐乞鯉交佼侯候倖光公功効勾厚口向"],["8d40","后喉坑垢好孔孝宏工巧巷幸広庚康弘恒慌抗拘控攻昂晃更杭校梗構江洪浩港溝甲皇硬稿糠紅紘絞綱耕考肯肱腔膏航荒行衡講貢購郊酵鉱砿鋼閤降"],["8d80","項香高鴻剛劫号合壕拷濠豪轟麹克刻告国穀酷鵠黒獄漉腰甑忽惚骨狛込此頃今困坤墾婚恨懇昏昆根梱混痕紺艮魂些佐叉唆嵯左差査沙瑳砂詐鎖裟坐座挫債催再最哉塞妻宰彩才採栽歳済災采犀砕砦祭斎細菜裁載際剤在材罪財冴坂阪堺榊肴咲崎埼碕鷺作削咋搾昨朔柵窄策索錯桜鮭笹匙冊刷"],["8e40","察拶撮擦札殺薩雑皐鯖捌錆鮫皿晒三傘参山惨撒散桟燦珊産算纂蚕讃賛酸餐斬暫残仕仔伺使刺司史嗣四士始姉姿子屍市師志思指支孜斯施旨枝止"],["8e80","死氏獅祉私糸紙紫肢脂至視詞詩試誌諮資賜雌飼歯事似侍児字寺慈持時次滋治爾璽痔磁示而耳自蒔辞汐鹿式識鴫竺軸宍雫七叱執失嫉室悉湿漆疾質実蔀篠偲柴芝屡蕊縞舎写射捨赦斜煮社紗者謝車遮蛇邪借勺尺杓灼爵酌釈錫若寂弱惹主取守手朱殊狩珠種腫趣酒首儒受呪寿授樹綬需囚収周"],["8f40","宗就州修愁拾洲秀秋終繍習臭舟蒐衆襲讐蹴輯週酋酬集醜什住充十従戎柔汁渋獣縦重銃叔夙宿淑祝縮粛塾熟出術述俊峻春瞬竣舜駿准循旬楯殉淳"],["8f80","準潤盾純巡遵醇順処初所暑曙渚庶緒署書薯藷諸助叙女序徐恕鋤除傷償勝匠升召哨商唱嘗奨妾娼宵将小少尚庄床廠彰承抄招掌捷昇昌昭晶松梢樟樵沼消渉湘焼焦照症省硝礁祥称章笑粧紹肖菖蒋蕉衝裳訟証詔詳象賞醤鉦鍾鐘障鞘上丈丞乗冗剰城場壌嬢常情擾条杖浄状畳穣蒸譲醸錠嘱埴飾"],["9040","拭植殖燭織職色触食蝕辱尻伸信侵唇娠寝審心慎振新晋森榛浸深申疹真神秦紳臣芯薪親診身辛進針震人仁刃塵壬尋甚尽腎訊迅陣靭笥諏須酢図厨"],["9080","逗吹垂帥推水炊睡粋翠衰遂酔錐錘随瑞髄崇嵩数枢趨雛据杉椙菅頗雀裾澄摺寸世瀬畝是凄制勢姓征性成政整星晴棲栖正清牲生盛精聖声製西誠誓請逝醒青静斉税脆隻席惜戚斥昔析石積籍績脊責赤跡蹟碩切拙接摂折設窃節説雪絶舌蝉仙先千占宣専尖川戦扇撰栓栴泉浅洗染潜煎煽旋穿箭線"],["9140","繊羨腺舛船薦詮賎践選遷銭銑閃鮮前善漸然全禅繕膳糎噌塑岨措曾曽楚狙疏疎礎祖租粗素組蘇訴阻遡鼠僧創双叢倉喪壮奏爽宋層匝惣想捜掃挿掻"],["9180","操早曹巣槍槽漕燥争痩相窓糟総綜聡草荘葬蒼藻装走送遭鎗霜騒像増憎臓蔵贈造促側則即息捉束測足速俗属賊族続卒袖其揃存孫尊損村遜他多太汰詑唾堕妥惰打柁舵楕陀駄騨体堆対耐岱帯待怠態戴替泰滞胎腿苔袋貸退逮隊黛鯛代台大第醍題鷹滝瀧卓啄宅托択拓沢濯琢託鐸濁諾茸凧蛸只"],["9240","叩但達辰奪脱巽竪辿棚谷狸鱈樽誰丹単嘆坦担探旦歎淡湛炭短端箪綻耽胆蛋誕鍛団壇弾断暖檀段男談値知地弛恥智池痴稚置致蜘遅馳築畜竹筑蓄"],["9280","逐秩窒茶嫡着中仲宙忠抽昼柱注虫衷註酎鋳駐樗瀦猪苧著貯丁兆凋喋寵帖帳庁弔張彫徴懲挑暢朝潮牒町眺聴脹腸蝶調諜超跳銚長頂鳥勅捗直朕沈珍賃鎮陳津墜椎槌追鎚痛通塚栂掴槻佃漬柘辻蔦綴鍔椿潰坪壷嬬紬爪吊釣鶴亭低停偵剃貞呈堤定帝底庭廷弟悌抵挺提梯汀碇禎程締艇訂諦蹄逓"],["9340","邸鄭釘鼎泥摘擢敵滴的笛適鏑溺哲徹撤轍迭鉄典填天展店添纏甜貼転顛点伝殿澱田電兎吐堵塗妬屠徒斗杜渡登菟賭途都鍍砥砺努度土奴怒倒党冬"],["9380","凍刀唐塔塘套宕島嶋悼投搭東桃梼棟盗淘湯涛灯燈当痘祷等答筒糖統到董蕩藤討謄豆踏逃透鐙陶頭騰闘働動同堂導憧撞洞瞳童胴萄道銅峠鴇匿得徳涜特督禿篤毒独読栃橡凸突椴届鳶苫寅酉瀞噸屯惇敦沌豚遁頓呑曇鈍奈那内乍凪薙謎灘捺鍋楢馴縄畷南楠軟難汝二尼弐迩匂賑肉虹廿日乳入"],["9440","如尿韮任妊忍認濡禰祢寧葱猫熱年念捻撚燃粘乃廼之埜嚢悩濃納能脳膿農覗蚤巴把播覇杷波派琶破婆罵芭馬俳廃拝排敗杯盃牌背肺輩配倍培媒梅"],["9480","楳煤狽買売賠陪這蝿秤矧萩伯剥博拍柏泊白箔粕舶薄迫曝漠爆縛莫駁麦函箱硲箸肇筈櫨幡肌畑畠八鉢溌発醗髪伐罰抜筏閥鳩噺塙蛤隼伴判半反叛帆搬斑板氾汎版犯班畔繁般藩販範釆煩頒飯挽晩番盤磐蕃蛮匪卑否妃庇彼悲扉批披斐比泌疲皮碑秘緋罷肥被誹費避非飛樋簸備尾微枇毘琵眉美"],["9540","鼻柊稗匹疋髭彦膝菱肘弼必畢筆逼桧姫媛紐百謬俵彪標氷漂瓢票表評豹廟描病秒苗錨鋲蒜蛭鰭品彬斌浜瀕貧賓頻敏瓶不付埠夫婦富冨布府怖扶敷"],["9580","斧普浮父符腐膚芙譜負賦赴阜附侮撫武舞葡蕪部封楓風葺蕗伏副復幅服福腹複覆淵弗払沸仏物鮒分吻噴墳憤扮焚奮粉糞紛雰文聞丙併兵塀幣平弊柄並蔽閉陛米頁僻壁癖碧別瞥蔑箆偏変片篇編辺返遍便勉娩弁鞭保舗鋪圃捕歩甫補輔穂募墓慕戊暮母簿菩倣俸包呆報奉宝峰峯崩庖抱捧放方朋"],["9640","法泡烹砲縫胞芳萌蓬蜂褒訪豊邦鋒飽鳳鵬乏亡傍剖坊妨帽忘忙房暴望某棒冒紡肪膨謀貌貿鉾防吠頬北僕卜墨撲朴牧睦穆釦勃没殆堀幌奔本翻凡盆"],["9680","摩磨魔麻埋妹昧枚毎哩槙幕膜枕鮪柾鱒桝亦俣又抹末沫迄侭繭麿万慢満漫蔓味未魅巳箕岬密蜜湊蓑稔脈妙粍民眠務夢無牟矛霧鵡椋婿娘冥名命明盟迷銘鳴姪牝滅免棉綿緬面麺摸模茂妄孟毛猛盲網耗蒙儲木黙目杢勿餅尤戻籾貰問悶紋門匁也冶夜爺耶野弥矢厄役約薬訳躍靖柳薮鑓愉愈油癒"],["9740","諭輸唯佑優勇友宥幽悠憂揖有柚湧涌猶猷由祐裕誘遊邑郵雄融夕予余与誉輿預傭幼妖容庸揚揺擁曜楊様洋溶熔用窯羊耀葉蓉要謡踊遥陽養慾抑欲"],["9780","沃浴翌翼淀羅螺裸来莱頼雷洛絡落酪乱卵嵐欄濫藍蘭覧利吏履李梨理璃痢裏裡里離陸律率立葎掠略劉流溜琉留硫粒隆竜龍侶慮旅虜了亮僚両凌寮料梁涼猟療瞭稜糧良諒遼量陵領力緑倫厘林淋燐琳臨輪隣鱗麟瑠塁涙累類令伶例冷励嶺怜玲礼苓鈴隷零霊麗齢暦歴列劣烈裂廉恋憐漣煉簾練聯"],["9840","蓮連錬呂魯櫓炉賂路露労婁廊弄朗楼榔浪漏牢狼篭老聾蝋郎六麓禄肋録論倭和話歪賄脇惑枠鷲亙亘鰐詫藁蕨椀湾碗腕"],["989f","弌丐丕个丱丶丼丿乂乖乘亂亅豫亊舒弍于亞亟亠亢亰亳亶从仍仄仆仂仗仞仭仟价伉佚估佛佝佗佇佶侈侏侘佻佩佰侑佯來侖儘俔俟俎俘俛俑俚俐俤俥倚倨倔倪倥倅伜俶倡倩倬俾俯們倆偃假會偕偐偈做偖偬偸傀傚傅傴傲"],["9940","僉僊傳僂僖僞僥僭僣僮價僵儉儁儂儖儕儔儚儡儺儷儼儻儿兀兒兌兔兢竸兩兪兮冀冂囘册冉冏冑冓冕冖冤冦冢冩冪冫决冱冲冰况冽凅凉凛几處凩凭"],["9980","凰凵凾刄刋刔刎刧刪刮刳刹剏剄剋剌剞剔剪剴剩剳剿剽劍劔劒剱劈劑辨辧劬劭劼劵勁勍勗勞勣勦飭勠勳勵勸勹匆匈甸匍匐匏匕匚匣匯匱匳匸區卆卅丗卉卍凖卞卩卮夘卻卷厂厖厠厦厥厮厰厶參簒雙叟曼燮叮叨叭叺吁吽呀听吭吼吮吶吩吝呎咏呵咎呟呱呷呰咒呻咀呶咄咐咆哇咢咸咥咬哄哈咨"],["9a40","咫哂咤咾咼哘哥哦唏唔哽哮哭哺哢唹啀啣啌售啜啅啖啗唸唳啝喙喀咯喊喟啻啾喘喞單啼喃喩喇喨嗚嗅嗟嗄嗜嗤嗔嘔嗷嘖嗾嗽嘛嗹噎噐營嘴嘶嘲嘸"],["9a80","噫噤嘯噬噪嚆嚀嚊嚠嚔嚏嚥嚮嚶嚴囂嚼囁囃囀囈囎囑囓囗囮囹圀囿圄圉圈國圍圓團圖嗇圜圦圷圸坎圻址坏坩埀垈坡坿垉垓垠垳垤垪垰埃埆埔埒埓堊埖埣堋堙堝塲堡塢塋塰毀塒堽塹墅墹墟墫墺壞墻墸墮壅壓壑壗壙壘壥壜壤壟壯壺壹壻壼壽夂夊夐夛梦夥夬夭夲夸夾竒奕奐奎奚奘奢奠奧奬奩"],["9b40","奸妁妝佞侫妣妲姆姨姜妍姙姚娥娟娑娜娉娚婀婬婉娵娶婢婪媚媼媾嫋嫂媽嫣嫗嫦嫩嫖嫺嫻嬌嬋嬖嬲嫐嬪嬶嬾孃孅孀孑孕孚孛孥孩孰孳孵學斈孺宀"],["9b80","它宦宸寃寇寉寔寐寤實寢寞寥寫寰寶寳尅將專對尓尠尢尨尸尹屁屆屎屓屐屏孱屬屮乢屶屹岌岑岔妛岫岻岶岼岷峅岾峇峙峩峽峺峭嶌峪崋崕崗嵜崟崛崑崔崢崚崙崘嵌嵒嵎嵋嵬嵳嵶嶇嶄嶂嶢嶝嶬嶮嶽嶐嶷嶼巉巍巓巒巖巛巫已巵帋帚帙帑帛帶帷幄幃幀幎幗幔幟幢幤幇幵并幺麼广庠廁廂廈廐廏"],["9c40","廖廣廝廚廛廢廡廨廩廬廱廳廰廴廸廾弃弉彝彜弋弑弖弩弭弸彁彈彌彎弯彑彖彗彙彡彭彳彷徃徂彿徊很徑徇從徙徘徠徨徭徼忖忻忤忸忱忝悳忿怡恠"],["9c80","怙怐怩怎怱怛怕怫怦怏怺恚恁恪恷恟恊恆恍恣恃恤恂恬恫恙悁悍惧悃悚悄悛悖悗悒悧悋惡悸惠惓悴忰悽惆悵惘慍愕愆惶惷愀惴惺愃愡惻惱愍愎慇愾愨愧慊愿愼愬愴愽慂慄慳慷慘慙慚慫慴慯慥慱慟慝慓慵憙憖憇憬憔憚憊憑憫憮懌懊應懷懈懃懆憺懋罹懍懦懣懶懺懴懿懽懼懾戀戈戉戍戌戔戛"],["9d40","戞戡截戮戰戲戳扁扎扞扣扛扠扨扼抂抉找抒抓抖拔抃抔拗拑抻拏拿拆擔拈拜拌拊拂拇抛拉挌拮拱挧挂挈拯拵捐挾捍搜捏掖掎掀掫捶掣掏掉掟掵捫"],["9d80","捩掾揩揀揆揣揉插揶揄搖搴搆搓搦搶攝搗搨搏摧摯摶摎攪撕撓撥撩撈撼據擒擅擇撻擘擂擱擧舉擠擡抬擣擯攬擶擴擲擺攀擽攘攜攅攤攣攫攴攵攷收攸畋效敖敕敍敘敞敝敲數斂斃變斛斟斫斷旃旆旁旄旌旒旛旙无旡旱杲昊昃旻杳昵昶昴昜晏晄晉晁晞晝晤晧晨晟晢晰暃暈暎暉暄暘暝曁暹曉暾暼"],["9e40","曄暸曖曚曠昿曦曩曰曵曷朏朖朞朦朧霸朮朿朶杁朸朷杆杞杠杙杣杤枉杰枩杼杪枌枋枦枡枅枷柯枴柬枳柩枸柤柞柝柢柮枹柎柆柧檜栞框栩桀桍栲桎"],["9e80","梳栫桙档桷桿梟梏梭梔條梛梃檮梹桴梵梠梺椏梍桾椁棊椈棘椢椦棡椌棍棔棧棕椶椒椄棗棣椥棹棠棯椨椪椚椣椡棆楹楷楜楸楫楔楾楮椹楴椽楙椰楡楞楝榁楪榲榮槐榿槁槓榾槎寨槊槝榻槃榧樮榑榠榜榕榴槞槨樂樛槿權槹槲槧樅榱樞槭樔槫樊樒櫁樣樓橄樌橲樶橸橇橢橙橦橈樸樢檐檍檠檄檢檣"],["9f40","檗蘗檻櫃櫂檸檳檬櫞櫑櫟檪櫚櫪櫻欅蘖櫺欒欖鬱欟欸欷盜欹飮歇歃歉歐歙歔歛歟歡歸歹歿殀殄殃殍殘殕殞殤殪殫殯殲殱殳殷殼毆毋毓毟毬毫毳毯"],["9f80","麾氈氓气氛氤氣汞汕汢汪沂沍沚沁沛汾汨汳沒沐泄泱泓沽泗泅泝沮沱沾沺泛泯泙泪洟衍洶洫洽洸洙洵洳洒洌浣涓浤浚浹浙涎涕濤涅淹渕渊涵淇淦涸淆淬淞淌淨淒淅淺淙淤淕淪淮渭湮渮渙湲湟渾渣湫渫湶湍渟湃渺湎渤滿渝游溂溪溘滉溷滓溽溯滄溲滔滕溏溥滂溟潁漑灌滬滸滾漿滲漱滯漲滌"],["e040","漾漓滷澆潺潸澁澀潯潛濳潭澂潼潘澎澑濂潦澳澣澡澤澹濆澪濟濕濬濔濘濱濮濛瀉瀋濺瀑瀁瀏濾瀛瀚潴瀝瀘瀟瀰瀾瀲灑灣炙炒炯烱炬炸炳炮烟烋烝"],["e080","烙焉烽焜焙煥煕熈煦煢煌煖煬熏燻熄熕熨熬燗熹熾燒燉燔燎燠燬燧燵燼燹燿爍爐爛爨爭爬爰爲爻爼爿牀牆牋牘牴牾犂犁犇犒犖犢犧犹犲狃狆狄狎狒狢狠狡狹狷倏猗猊猜猖猝猴猯猩猥猾獎獏默獗獪獨獰獸獵獻獺珈玳珎玻珀珥珮珞璢琅瑯琥珸琲琺瑕琿瑟瑙瑁瑜瑩瑰瑣瑪瑶瑾璋璞璧瓊瓏瓔珱"],["e140","瓠瓣瓧瓩瓮瓲瓰瓱瓸瓷甄甃甅甌甎甍甕甓甞甦甬甼畄畍畊畉畛畆畚畩畤畧畫畭畸當疆疇畴疊疉疂疔疚疝疥疣痂疳痃疵疽疸疼疱痍痊痒痙痣痞痾痿"],["e180","痼瘁痰痺痲痳瘋瘍瘉瘟瘧瘠瘡瘢瘤瘴瘰瘻癇癈癆癜癘癡癢癨癩癪癧癬癰癲癶癸發皀皃皈皋皎皖皓皙皚皰皴皸皹皺盂盍盖盒盞盡盥盧盪蘯盻眈眇眄眩眤眞眥眦眛眷眸睇睚睨睫睛睥睿睾睹瞎瞋瞑瞠瞞瞰瞶瞹瞿瞼瞽瞻矇矍矗矚矜矣矮矼砌砒礦砠礪硅碎硴碆硼碚碌碣碵碪碯磑磆磋磔碾碼磅磊磬"],["e240","磧磚磽磴礇礒礑礙礬礫祀祠祗祟祚祕祓祺祿禊禝禧齋禪禮禳禹禺秉秕秧秬秡秣稈稍稘稙稠稟禀稱稻稾稷穃穗穉穡穢穩龝穰穹穽窈窗窕窘窖窩竈窰"],["e280","窶竅竄窿邃竇竊竍竏竕竓站竚竝竡竢竦竭竰笂笏笊笆笳笘笙笞笵笨笶筐筺笄筍笋筌筅筵筥筴筧筰筱筬筮箝箘箟箍箜箚箋箒箏筝箙篋篁篌篏箴篆篝篩簑簔篦篥籠簀簇簓篳篷簗簍篶簣簧簪簟簷簫簽籌籃籔籏籀籐籘籟籤籖籥籬籵粃粐粤粭粢粫粡粨粳粲粱粮粹粽糀糅糂糘糒糜糢鬻糯糲糴糶糺紆"],["e340","紂紜紕紊絅絋紮紲紿紵絆絳絖絎絲絨絮絏絣經綉絛綏絽綛綺綮綣綵緇綽綫總綢綯緜綸綟綰緘緝緤緞緻緲緡縅縊縣縡縒縱縟縉縋縢繆繦縻縵縹繃縷"],["e380","縲縺繧繝繖繞繙繚繹繪繩繼繻纃緕繽辮繿纈纉續纒纐纓纔纖纎纛纜缸缺罅罌罍罎罐网罕罔罘罟罠罨罩罧罸羂羆羃羈羇羌羔羞羝羚羣羯羲羹羮羶羸譱翅翆翊翕翔翡翦翩翳翹飜耆耄耋耒耘耙耜耡耨耿耻聊聆聒聘聚聟聢聨聳聲聰聶聹聽聿肄肆肅肛肓肚肭冐肬胛胥胙胝胄胚胖脉胯胱脛脩脣脯腋"],["e440","隋腆脾腓腑胼腱腮腥腦腴膃膈膊膀膂膠膕膤膣腟膓膩膰膵膾膸膽臀臂膺臉臍臑臙臘臈臚臟臠臧臺臻臾舁舂舅與舊舍舐舖舩舫舸舳艀艙艘艝艚艟艤"],["e480","艢艨艪艫舮艱艷艸艾芍芒芫芟芻芬苡苣苟苒苴苳苺莓范苻苹苞茆苜茉苙茵茴茖茲茱荀茹荐荅茯茫茗茘莅莚莪莟莢莖茣莎莇莊荼莵荳荵莠莉莨菴萓菫菎菽萃菘萋菁菷萇菠菲萍萢萠莽萸蔆菻葭萪萼蕚蒄葷葫蒭葮蒂葩葆萬葯葹萵蓊葢蒹蒿蒟蓙蓍蒻蓚蓐蓁蓆蓖蒡蔡蓿蓴蔗蔘蔬蔟蔕蔔蓼蕀蕣蕘蕈"],["e540","蕁蘂蕋蕕薀薤薈薑薊薨蕭薔薛藪薇薜蕷蕾薐藉薺藏薹藐藕藝藥藜藹蘊蘓蘋藾藺蘆蘢蘚蘰蘿虍乕虔號虧虱蚓蚣蚩蚪蚋蚌蚶蚯蛄蛆蚰蛉蠣蚫蛔蛞蛩蛬"],["e580","蛟蛛蛯蜒蜆蜈蜀蜃蛻蜑蜉蜍蛹蜊蜴蜿蜷蜻蜥蜩蜚蝠蝟蝸蝌蝎蝴蝗蝨蝮蝙蝓蝣蝪蠅螢螟螂螯蟋螽蟀蟐雖螫蟄螳蟇蟆螻蟯蟲蟠蠏蠍蟾蟶蟷蠎蟒蠑蠖蠕蠢蠡蠱蠶蠹蠧蠻衄衂衒衙衞衢衫袁衾袞衵衽袵衲袂袗袒袮袙袢袍袤袰袿袱裃裄裔裘裙裝裹褂裼裴裨裲褄褌褊褓襃褞褥褪褫襁襄褻褶褸襌褝襠襞"],["e640","襦襤襭襪襯襴襷襾覃覈覊覓覘覡覩覦覬覯覲覺覽覿觀觚觜觝觧觴觸訃訖訐訌訛訝訥訶詁詛詒詆詈詼詭詬詢誅誂誄誨誡誑誥誦誚誣諄諍諂諚諫諳諧"],["e680","諤諱謔諠諢諷諞諛謌謇謚諡謖謐謗謠謳鞫謦謫謾謨譁譌譏譎證譖譛譚譫譟譬譯譴譽讀讌讎讒讓讖讙讚谺豁谿豈豌豎豐豕豢豬豸豺貂貉貅貊貍貎貔豼貘戝貭貪貽貲貳貮貶賈賁賤賣賚賽賺賻贄贅贊贇贏贍贐齎贓賍贔贖赧赭赱赳趁趙跂趾趺跏跚跖跌跛跋跪跫跟跣跼踈踉跿踝踞踐踟蹂踵踰踴蹊"],["e740","蹇蹉蹌蹐蹈蹙蹤蹠踪蹣蹕蹶蹲蹼躁躇躅躄躋躊躓躑躔躙躪躡躬躰軆躱躾軅軈軋軛軣軼軻軫軾輊輅輕輒輙輓輜輟輛輌輦輳輻輹轅轂輾轌轉轆轎轗轜"],["e780","轢轣轤辜辟辣辭辯辷迚迥迢迪迯邇迴逅迹迺逑逕逡逍逞逖逋逧逶逵逹迸遏遐遑遒逎遉逾遖遘遞遨遯遶隨遲邂遽邁邀邊邉邏邨邯邱邵郢郤扈郛鄂鄒鄙鄲鄰酊酖酘酣酥酩酳酲醋醉醂醢醫醯醪醵醴醺釀釁釉釋釐釖釟釡釛釼釵釶鈞釿鈔鈬鈕鈑鉞鉗鉅鉉鉤鉈銕鈿鉋鉐銜銖銓銛鉚鋏銹銷鋩錏鋺鍄錮"],["e840","錙錢錚錣錺錵錻鍜鍠鍼鍮鍖鎰鎬鎭鎔鎹鏖鏗鏨鏥鏘鏃鏝鏐鏈鏤鐚鐔鐓鐃鐇鐐鐶鐫鐵鐡鐺鑁鑒鑄鑛鑠鑢鑞鑪鈩鑰鑵鑷鑽鑚鑼鑾钁鑿閂閇閊閔閖閘閙"],["e880","閠閨閧閭閼閻閹閾闊濶闃闍闌闕闔闖關闡闥闢阡阨阮阯陂陌陏陋陷陜陞陝陟陦陲陬隍隘隕隗險隧隱隲隰隴隶隸隹雎雋雉雍襍雜霍雕雹霄霆霈霓霎霑霏霖霙霤霪霰霹霽霾靄靆靈靂靉靜靠靤靦靨勒靫靱靹鞅靼鞁靺鞆鞋鞏鞐鞜鞨鞦鞣鞳鞴韃韆韈韋韜韭齏韲竟韶韵頏頌頸頤頡頷頽顆顏顋顫顯顰"],["e940","顱顴顳颪颯颱颶飄飃飆飩飫餃餉餒餔餘餡餝餞餤餠餬餮餽餾饂饉饅饐饋饑饒饌饕馗馘馥馭馮馼駟駛駝駘駑駭駮駱駲駻駸騁騏騅駢騙騫騷驅驂驀驃"],["e980","騾驕驍驛驗驟驢驥驤驩驫驪骭骰骼髀髏髑髓體髞髟髢髣髦髯髫髮髴髱髷髻鬆鬘鬚鬟鬢鬣鬥鬧鬨鬩鬪鬮鬯鬲魄魃魏魍魎魑魘魴鮓鮃鮑鮖鮗鮟鮠鮨鮴鯀鯊鮹鯆鯏鯑鯒鯣鯢鯤鯔鯡鰺鯲鯱鯰鰕鰔鰉鰓鰌鰆鰈鰒鰊鰄鰮鰛鰥鰤鰡鰰鱇鰲鱆鰾鱚鱠鱧鱶鱸鳧鳬鳰鴉鴈鳫鴃鴆鴪鴦鶯鴣鴟鵄鴕鴒鵁鴿鴾鵆鵈"],["ea40","鵝鵞鵤鵑鵐鵙鵲鶉鶇鶫鵯鵺鶚鶤鶩鶲鷄鷁鶻鶸鶺鷆鷏鷂鷙鷓鷸鷦鷭鷯鷽鸚鸛鸞鹵鹹鹽麁麈麋麌麒麕麑麝麥麩麸麪麭靡黌黎黏黐黔黜點黝黠黥黨黯"],["ea80","黴黶黷黹黻黼黽鼇鼈皷鼕鼡鼬鼾齊齒齔齣齟齠齡齦齧齬齪齷齲齶龕龜龠堯槇遙瑤凜熙"],["ed40","纊褜鍈銈蓜俉炻昱棈鋹曻彅丨仡仼伀伃伹佖侒侊侚侔俍偀倢俿倞偆偰偂傔僴僘兊兤冝冾凬刕劜劦勀勛匀匇匤卲厓厲叝﨎咜咊咩哿喆坙坥垬埈埇﨏"],["ed80","塚增墲夋奓奛奝奣妤妺孖寀甯寘寬尞岦岺峵崧嵓﨑嵂嵭嶸嶹巐弡弴彧德忞恝悅悊惞惕愠惲愑愷愰憘戓抦揵摠撝擎敎昀昕昻昉昮昞昤晥晗晙晴晳暙暠暲暿曺朎朗杦枻桒柀栁桄棏﨓楨﨔榘槢樰橫橆橳橾櫢櫤毖氿汜沆汯泚洄涇浯涖涬淏淸淲淼渹湜渧渼溿澈澵濵瀅瀇瀨炅炫焏焄煜煆煇凞燁燾犱"],["ee40","犾猤猪獷玽珉珖珣珒琇珵琦琪琩琮瑢璉璟甁畯皂皜皞皛皦益睆劯砡硎硤硺礰礼神祥禔福禛竑竧靖竫箞精絈絜綷綠緖繒罇羡羽茁荢荿菇菶葈蒴蕓蕙"],["ee80","蕫﨟薰蘒﨡蠇裵訒訷詹誧誾諟諸諶譓譿賰賴贒赶﨣軏﨤逸遧郞都鄕鄧釚釗釞釭釮釤釥鈆鈐鈊鈺鉀鈼鉎鉙鉑鈹鉧銧鉷鉸鋧鋗鋙鋐﨧鋕鋠鋓錥錡鋻﨨錞鋿錝錂鍰鍗鎤鏆鏞鏸鐱鑅鑈閒隆﨩隝隯霳霻靃靍靏靑靕顗顥飯飼餧館馞驎髙髜魵魲鮏鮱鮻鰀鵰鵫鶴鸙黑"],["eeef","ⅰ",9,"￢￤＇＂"],["f040","",62],["f080","",124],["f140","",62],["f180","",124],["f240","",62],["f280","",124],["f340","",62],["f380","",124],["f440","",62],["f480","",124],["f540","",62],["f580","",124],["f640","",62],["f680","",124],["f740","",62],["f780","",124],["f840","",62],["f880","",124],["f940",""],["fa40","ⅰ",9,"Ⅰ",9,"￢￤＇＂㈱№℡∵纊褜鍈銈蓜俉炻昱棈鋹曻彅丨仡仼伀伃伹佖侒侊侚侔俍偀倢俿倞偆偰偂傔僴僘兊"],["fa80","兤冝冾凬刕劜劦勀勛匀匇匤卲厓厲叝﨎咜咊咩哿喆坙坥垬埈埇﨏塚增墲夋奓奛奝奣妤妺孖寀甯寘寬尞岦岺峵崧嵓﨑嵂嵭嶸嶹巐弡弴彧德忞恝悅悊惞惕愠惲愑愷愰憘戓抦揵摠撝擎敎昀昕昻昉昮昞昤晥晗晙晴晳暙暠暲暿曺朎朗杦枻桒柀栁桄棏﨓楨﨔榘槢樰橫橆橳橾櫢櫤毖氿汜沆汯泚洄涇浯"],["fb40","涖涬淏淸淲淼渹湜渧渼溿澈澵濵瀅瀇瀨炅炫焏焄煜煆煇凞燁燾犱犾猤猪獷玽珉珖珣珒琇珵琦琪琩琮瑢璉璟甁畯皂皜皞皛皦益睆劯砡硎硤硺礰礼神"],["fb80","祥禔福禛竑竧靖竫箞精絈絜綷綠緖繒罇羡羽茁荢荿菇菶葈蒴蕓蕙蕫﨟薰蘒﨡蠇裵訒訷詹誧誾諟諸諶譓譿賰賴贒赶﨣軏﨤逸遧郞都鄕鄧釚釗釞釭釮釤釥鈆鈐鈊鈺鉀鈼鉎鉙鉑鈹鉧銧鉷鉸鋧鋗鋙鋐﨧鋕鋠鋓錥錡鋻﨨錞鋿錝錂鍰鍗鎤鏆鏞鏸鐱鑅鑈閒隆﨩隝隯霳霻靃靍靏靑靕顗顥飯飼餧館馞驎髙"],["fc40","髜魵魲鮏鮱鮻鰀鵰鵫鶴鸙黑"]]');

/***/ }),

/***/ "./node_modules/parse-asn1/aesid.json":
/*!********************************************!*\
  !*** ./node_modules/parse-asn1/aesid.json ***!
  \********************************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"2.16.840.1.101.3.4.1.1":"aes-128-ecb","2.16.840.1.101.3.4.1.2":"aes-128-cbc","2.16.840.1.101.3.4.1.3":"aes-128-ofb","2.16.840.1.101.3.4.1.4":"aes-128-cfb","2.16.840.1.101.3.4.1.21":"aes-192-ecb","2.16.840.1.101.3.4.1.22":"aes-192-cbc","2.16.840.1.101.3.4.1.23":"aes-192-ofb","2.16.840.1.101.3.4.1.24":"aes-192-cfb","2.16.840.1.101.3.4.1.41":"aes-256-ecb","2.16.840.1.101.3.4.1.42":"aes-256-cbc","2.16.840.1.101.3.4.1.43":"aes-256-ofb","2.16.840.1.101.3.4.1.44":"aes-256-cfb"}');

/***/ }),

/***/ "./src/emojis.json":
/*!*************************!*\
  !*** ./src/emojis.json ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"100":"💯","1234":"🔢","+1":"👍","+1_tone1":"👍🏻","+1_tone2":"👍🏼","+1_tone3":"👍🏽","+1_tone4":"👍🏾","+1_tone5":"👍🏿","-1":"👎","-1_tone1":"👎🏻","-1_tone2":"👎🏼","-1_tone3":"👎🏽","-1_tone4":"👎🏾","-1_tone5":"👎🏿","1st":"🥇","1st_place_medal":"🥇","2nd":"🥈","2nd_place_medal":"🥈","3rd":"🥉","3rd_place_medal":"🥉","8ball":"🎱","a":"🅰","a_blood":"🅰","ab":"🆎","ab_blood":"🆎","abacus":"🧮","abc":"🔤","abcd":"🔡","accept":"🉑","accordion":"🪗","adhesive_bandage":"🩹","admission_tickets":"🎟","adult":"🧑","adult_tone1":"🧑🏻","adult_tone2":"🧑🏼","adult_tone3":"🧑🏽","adult_tone4":"🧑🏾","adult_tone5":"🧑🏿","aerial_tramway":"🚡","afghanistan":"🇦🇫","airplane":"✈","airplane_arriving":"🛬","airplane_departure":"🛫","aland_islands":"🇦🇽","alarm_clock":"⏰","albania":"🇦🇱","alembi":"⚗","alembic":"⚗","algeria":"🇩🇿","alie":"👽","alien":"👽","alien_monster":"👾","all_good":"🙆","all_good_tone1":"🙆🏻","all_good_tone2":"🙆🏼","all_good_tone3":"🙆🏽","all_good_tone4":"🙆🏾","all_good_tone5":"🙆🏿","ambulanc":"🚑","ambulance":"🚑","american_samoa":"🇦🇸","amphora":"🏺","anatomical_heart":"🫀","anchor":"⚓","andorra":"🇦🇩","android":"📱","angel":"👼","angel_tone1":"👼🏻","angel_tone2":"👼🏼","angel_tone3":"👼🏽","angel_tone4":"👼🏾","angel_tone5":"👼🏿","anger":"💢","angola":"🇦🇴","angry":"😠","angry_face":"😠","angry_imp":"👿","anguilla":"🇦🇮","anguished":"😧","anguished_face":"😧","ant":"🐜","antarctica":"🇦🇶","antenna_bars":"📶","antigua_barbuda":"🇦🇬","anxious":"😰","anxious_face":"😰","apple":"🍎","aquarius":"♒","ar":"🎨","argentina":"🇦🇷","aries":"♈","armenia":"🇦🇲","arrow_backward":"◀","arrow_double_down":"⏬","arrow_double_up":"⏫","arrow_dow":"⬇️","arrow_down":"⬇","arrow_down_small":"🔽","arrow_forward":"▶","arrow_heading_down":"⤵","arrow_heading_up":"⤴","arrow_left":"⬅","arrow_left_hook":"↩","arrow_lower_left":"↙","arrow_lower_right":"↘","arrow_right":"➡","arrow_right_hook":"↪","arrow_u":"⬆️","arrow_up":"⬆","arrow_up_down":"↕","arrow_up_small":"🔼","arrow_upper_left":"↖","arrow_upper_right":"↗","arrows_clockwise":"🔃","arrows_counterclockwise":"🔄","art":"🎨","articulated_lorry":"🚛","artificial_satellite":"🛰","artist":"🧑‍🎨","artist_tone1":"🧑🏻‍🎨","artist_tone2":"🧑🏼‍🎨","artist_tone3":"🧑🏽‍🎨","artist_tone4":"🧑🏾‍🎨","artist_tone5":"🧑🏿‍🎨","aruba":"🇦🇼","ascension_island":"🇦🇨","asterisk":"*️⃣","astonished":"😲","astonished_face":"😲","astronaut":"🧑‍🚀","astronaut_tone1":"🧑🏻‍🚀","astronaut_tone2":"🧑🏼‍🚀","astronaut_tone3":"🧑🏽‍🚀","astronaut_tone4":"🧑🏾‍🚀","astronaut_tone5":"🧑🏿‍🚀","athletic_shoe":"👟","atm":"🏧","atom":"⚛","atom_symbol":"⚛","australia":"🇦🇺","austria":"🇦🇹","auto_rickshaw":"🛺","avocado":"🥑","axe":"🪓","azerbaijan":"🇦🇿","b":"🅱","b_blood":"🅱","baby":"👶","baby_bottle":"🍼","baby_chick":"🐤","baby_symbol":"🚼","baby_tone1":"👶🏻","baby_tone2":"👶🏼","baby_tone3":"👶🏽","baby_tone4":"👶🏾","baby_tone5":"👶🏿","back":"🔙","backpack":"🎒","bacon":"🥓","badger":"🦡","badminton":"🏸","bagel":"🥯","baggage_claim":"🛄","baguette_bread":"🥖","bahamas":"🇧🇸","bahrain":"🇧🇭","balance_scale":"⚖","bald":"🧑‍🦲","bald_man":"👨‍🦲","bald_tone1":"🧑🏻‍🦲","bald_tone2":"🧑🏼‍🦲","bald_tone3":"🧑🏽‍🦲","bald_tone4":"🧑🏾‍🦲","bald_tone5":"🧑🏿‍🦲","bald_woman":"👩‍🦲","ballet_shoes":"🩰","balloon":"🎈","ballot_box":"🗳","ballot_box_with_check":"☑","bamboo":"🎍","banana":"🍌","bandaid":"🩹","bangbang":"‼","bangladesh":"🇧🇩","banjo":"🪕","bank":"🏦","bar_chart":"📊","barbados":"🇧🇧","barber":"💈","barber_pole":"💈","baseball":"⚾","basket":"🧺","basketball":"🏀","basketball_man":"⛹️‍♂️","basketball_woman":"⛹️‍♀️","bat":"🦇","bath":"🛀","bath_tone1":"🛀🏻","bath_tone2":"🛀🏼","bath_tone3":"🛀🏽","bath_tone4":"🛀🏾","bath_tone5":"🛀🏿","bathroom":"🚻","bathtub":"🛁","battery":"🔋","beach":"🏖","beach_umbrella":"🏖","beach_with_umbrella":"🏖","beaming_face":"😁","bear":"🐻","bear_face":"🐻","bearded_person":"🧔","beating_heart":"💓","beaver":"🦫","bed":"🛏","bee":"🐝","beer":"🍺","beers":"🍻","beetle":"🐞","beginner":"🔰","belarus":"🇧🇾","belgium":"🇧🇪","belize":"🇧🇿","bell":"🔔","bell_pepper":"🫑","bellhop":"🛎","bellhop_bell":"🛎","benin":"🇧🇯","bent":"🍱","bento":"🍱","bento_box":"🍱","bermuda":"🇧🇲","beverage_box":"🧃","bhutan":"🇧🇹","bicycle":"🚲","bicyclist":"🚴","bicyclist_tone1":"🚴🏻","bicyclist_tone2":"🚴🏼","bicyclist_tone3":"🚴🏽","bicyclist_tone4":"🚴🏾","bicyclist_tone5":"🚴🏿","bike":"🚲","biking":"🚴","biking_man":"🚴‍♂️","biking_tone1":"🚴🏻","biking_tone2":"🚴🏼","biking_tone3":"🚴🏽","biking_tone4":"🚴🏾","biking_tone5":"🚴🏿","biking_woman":"🚴‍♀️","bikini":"👙","billed_cap":"🧢","billiards":"🎱","biohazard":"☣","bird":"🐦","bird_face":"🐦","birthday":"🎂","birthday_cake":"🎂","bison":"🦬","black_cat":"🐈‍⬛","black_circle":"⚫","black_flag":"🏴","black_heart":"🖤","black_joker":"🃏","black_large_square":"⬛","black_medium_small_square":"◾","black_medium_square":"◼","black_nib":"✒","black_small_square":"▪","black_square_button":"🔲","blond_haired":"👱","blond_haired_man":"👱‍♂️","blond_haired_person":"👱","blond_haired_tone1":"👱🏻","blond_haired_tone2":"👱🏼","blond_haired_tone3":"👱🏽","blond_haired_tone4":"👱🏾","blond_haired_tone5":"👱🏿","blond_haired_woman":"👱‍♀️","blonde_woman":"👱‍♀️","blossom":"🌼","blowfish":"🐡","blowing_a_kiss":"😘","blue_book":"📘","blue_car":"🚙","blue_circle":"🔵","blue_heart":"💙","blue_square":"🟦","blueberries":"🫐","blush":"😊","boar":"🐗","boat":"⛵","boba_drink":"🧋","bolivia":"🇧🇴","bomb":"💣","bone":"🦴","boo":"💥","book":"📖","bookmar":"🔖","bookmark":"🔖","bookmark_tabs":"📑","books":"📚","boom":"💥","boomerang":"🪃","boot":"👢","bosnia_herzegovina":"🇧🇦","botswana":"🇧🇼","bouncing_ball_man":"⛹️‍♂️","bouncing_ball_person":"⛹","bouncing_ball_woman":"⛹️‍♀️","bouquet":"💐","bouvet_island":"🇧🇻","bow":"🙇","bow_and_arrow":"🏹","bow_tone1":"🙇🏻","bow_tone2":"🙇🏼","bow_tone3":"🙇🏽","bow_tone4":"🙇🏾","bow_tone5":"🙇🏿","bowing_man":"🙇‍♂️","bowing_woman":"🙇‍♀️","bowl_with_spoon":"🥣","bowling":"🎳","boxing_glove":"🥊","boy":"👦","boy_tone1":"👦🏻","boy_tone2":"👦🏼","boy_tone3":"👦🏽","boy_tone4":"👦🏾","boy_tone5":"👦🏿","brain":"🧠","brazil":"🇧🇷","bread":"🍞","breast_feeding":"🤱","breast_feeding_tone1":"🤱🏻","breast_feeding_tone2":"🤱🏼","breast_feeding_tone3":"🤱🏽","breast_feeding_tone4":"🤱🏾","breast_feeding_tone5":"🤱🏿","bricks":"🧱","bride_with_veil":"👰","bridge_at_night":"🌉","briefcase":"💼","briefs":"🩲","bright_button":"🔆","british_indian_ocean_territory":"🇮🇴","british_virgin_islands":"🇻🇬","broccoli":"🥦","broken_heart":"💔","broom":"🧹","brown_circle":"🟤","brown_heart":"🤎","brown_square":"🟫","brunei":"🇧🇳","bu":"🐛","bubble_tea":"🧋","bucket":"🪣","bug":"🐛","building_constructio":"🏗","building_construction":"🏗","bul":"💡","bulb":"💡","bulgaria":"🇧🇬","bullettrain_front":"🚅","bullettrain_side":"🚄","burkina_faso":"🇧🇫","burma":"🇲🇲","burrito":"🌯","burundi":"🇧🇮","bus":"🚌","business_suit_levitating":"🕴","busstop":"🚏","bust_in_silhouette":"👤","busts_in_silhouett":"👥","busts_in_silhouette":"👥","butter":"🧈","butterfly":"🦋","cactus":"🌵","cake":"🍰","calendar":"📆","calendar_spiral":"🗓","call_me_hand":"🤙","call_me_hand_tone1":"🤙🏻","call_me_hand_tone2":"🤙🏼","call_me_hand_tone3":"🤙🏽","call_me_hand_tone4":"🤙🏾","call_me_hand_tone5":"🤙🏿","calling":"📲","cambodia":"🇰🇭","camel":"🐫","camera":"📷","camera_flas":"📸","camera_flash":"📸","camera_with_flash":"📸","cameroon":"🇨🇲","camping":"🏕","canada":"🇨🇦","canary_islands":"🇮🇨","cancer":"♋","candle":"🕯","candy":"🍬","canned_food":"🥫","canoe":"🛶","cape_verde":"🇨🇻","capital_abcd":"🔠","capricorn":"♑","car":"🚗","card_file_bo":"🗃","card_file_box":"🗃","card_index":"📇","card_index_dividers":"🗂","caribbean_netherlands":"🇧🇶","carousel_horse":"🎠","carp_streamer":"🎏","carpentry_saw":"🪚","carrot":"🥕","cartwheeling":"🤸","cartwheeling_tone1":"🤸🏻","cartwheeling_tone2":"🤸🏼","cartwheeling_tone3":"🤸🏽","cartwheeling_tone4":"🤸🏾","cartwheeling_tone5":"🤸🏿","castle":"🏰","cat":"🐱","cat2":"🐈","cat_face":"🐱","cayman_islands":"🇰🇾","cd":"💿","censored":"🤬","central_african_republic":"🇨🇫","ceuta_melilla":"🇪🇦","chad":"🇹🇩","chains":"⛓","chair":"🪑","champagne":"🍾","chart":"💹","chart_decreasing":"📉","chart_increasing":"📈","chart_with_downwards_trend":"📉","chart_with_upwards_tren":"📈","chart_with_upwards_trend":"📈","check_mark":"✔","check_mark_button":"✅","checkered_flag":"🏁","cheese":"🧀","cherries":"🍒","cherry_blossom":"🌸","chess_pawn":"♟","chestnut":"🌰","chicken":"🐔","chicken_face":"🐔","child":"🧒","child_tone1":"🧒🏻","child_tone2":"🧒🏼","child_tone3":"🧒🏽","child_tone4":"🧒🏾","child_tone5":"🧒🏿","children_crossin":"🚸","children_crossing":"🚸","chile":"🇨🇱","china":"🇨🇳","chipmunk":"🐿","chocolate_bar":"🍫","chopsticks":"🥢","christmas_island":"🇨🇽","christmas_tree":"🎄","church":"⛪","cigarette":"🚬","cinema":"🎦","circus_tent":"🎪","city_dusk":"🌆","city_sunrise":"🌇","city_sunset":"🌆","cityscape":"🏙","cl":"🆑","clamp":"🗜","clap":"👏","clap_tone1":"👏🏻","clap_tone2":"👏🏼","clap_tone3":"👏🏽","clap_tone4":"👏🏾","clap_tone5":"👏🏿","clapper":"🎬","clapping_hands":"👏","clapping_hands_tone1":"👏🏻","clapping_hands_tone2":"👏🏼","clapping_hands_tone3":"👏🏽","clapping_hands_tone4":"👏🏾","clapping_hands_tone5":"👏🏿","classical_building":"🏛","climbing":"🧗","climbing_man":"🧗‍♂️","climbing_tone1":"🧗🏻","climbing_tone2":"🧗🏼","climbing_tone3":"🧗🏽","climbing_tone4":"🧗🏾","climbing_tone5":"🧗🏿","climbing_woman":"🧗‍♀️","clinking_glasses":"🥂","clipboard":"📋","clipperton_island":"🇨🇵","clock":"🕰","clock1":"🕐","clock10":"🕙","clock1030":"🕥","clock11":"🕚","clock1130":"🕦","clock12":"🕛","clock1230":"🕧","clock130":"🕜","clock2":"🕑","clock230":"🕝","clock3":"🕒","clock330":"🕞","clock4":"🕓","clock430":"🕟","clock5":"🕔","clock530":"🕠","clock6":"🕕","clock630":"🕡","clock7":"🕖","clock730":"🕢","clock8":"🕗","clock830":"🕣","clock9":"🕘","clock930":"🕤","clockwise":"🔃","closed_book":"📕","closed_lock_with_key":"🔐","closed_umbrella":"🌂","cloud":"☁","cloud_with_lightning":"🌩","cloud_with_lightning_and_rain":"⛈","cloud_with_rain":"🌧","cloud_with_snow":"🌨","cloudy":"🌥","clown":"🤡","clown_fac":"🤡","clown_face":"🤡","clubs":"♣","clutch_bag":"👝","cn":"🇨🇳","coat":"🧥","cockroach":"🪳","cocktail":"🍸","coconut":"🥥","cocos_islands":"🇨🇨","coffee":"☕","coffin":"⚰","coin":"🪙","cold":"🥶","cold_face":"🥶","cold_sweat":"😰","collision":"💥","colombia":"🇨🇴","comet":"☄","comoros":"🇰🇲","compass":"🧭","compression":"🗜","computer":"💻","computer_disk":"💽","computer_mouse":"🖱","confetti_ball":"🎊","confounded":"😖","confounded_face":"😖","confused":"😕","confused_face":"😕","congo_brazzaville":"🇨🇬","congo_kinshasa":"🇨🇩","congratulations":"㊗","constructio":"🚧","construction":"🚧","construction_site":"🏗","construction_worke":"👷","construction_worker":"👷","construction_worker_man":"👷‍♂️","construction_worker_tone1":"👷🏻","construction_worker_tone2":"👷🏼","construction_worker_tone3":"👷🏽","construction_worker_tone4":"👷🏾","construction_worker_tone5":"👷🏿","construction_worker_woman":"👷‍♀️","control_knobs":"🎛","controller":"🎮","convenience_store":"🏪","cook":"🧑‍🍳","cook_islands":"🇨🇰","cook_tone1":"🧑🏻‍🍳","cook_tone2":"🧑🏼‍🍳","cook_tone3":"🧑🏽‍🍳","cook_tone4":"🧑🏾‍🍳","cook_tone5":"🧑🏿‍🍳","cooked_rice":"🍚","cookie":"🍪","cooking":"🍳","cool":"🆒","cop":"👮","cop_tone1":"👮🏻","cop_tone2":"👮🏼","cop_tone3":"👮🏽","cop_tone4":"👮🏾","cop_tone5":"👮🏿","copyright":"©","corn":"🌽","costa_rica":"🇨🇷","cote_divoire":"🇨🇮","couch_and_lamp":"🛋","counterclockwise":"🔄","couple":"👫","couple_kiss":"💏","couple_tone1":"👫🏻","couple_tone1-2":"👩🏻‍🤝‍👨🏼","couple_tone1-3":"👩🏻‍🤝‍👨🏽","couple_tone1-4":"👩🏻‍🤝‍👨🏾","couple_tone1-5":"👩🏻‍🤝‍👨🏿","couple_tone2":"👫🏼","couple_tone2-1":"👩🏼‍🤝‍👨🏻","couple_tone2-3":"👩🏼‍🤝‍👨🏽","couple_tone2-4":"👩🏼‍🤝‍👨🏾","couple_tone2-5":"👩🏼‍🤝‍👨🏿","couple_tone3":"👫🏽","couple_tone3-1":"👩🏽‍🤝‍👨🏻","couple_tone3-2":"👩🏽‍🤝‍👨🏼","couple_tone3-4":"👩🏽‍🤝‍👨🏾","couple_tone3-5":"👩🏽‍🤝‍👨🏿","couple_tone4":"👫🏾","couple_tone4-1":"👩🏾‍🤝‍👨🏻","couple_tone4-2":"👩🏾‍🤝‍👨🏼","couple_tone4-3":"👩🏾‍🤝‍👨🏽","couple_tone4-5":"👩🏾‍🤝‍👨🏿","couple_tone5":"👫🏿","couple_tone5-1":"👩🏿‍🤝‍👨🏻","couple_tone5-2":"👩🏿‍🤝‍👨🏼","couple_tone5-3":"👩🏿‍🤝‍👨🏽","couple_tone5-4":"👩🏿‍🤝‍👨🏾","couple_with_heart":"💑","couple_with_heart_man_man":"👨‍❤️‍👨","couple_with_heart_mm":"👨‍❤️‍👨","couple_with_heart_mw":"👩‍❤️‍👨","couple_with_heart_wm":"👩‍❤️‍👨","couple_with_heart_woman_man":"👩‍❤️‍👨","couple_with_heart_woman_woman":"👩‍❤️‍👩","couple_with_heart_ww":"👩‍❤️‍👩","couplekiss":"💏","couplekiss_man_man":"👨‍❤️‍💋‍👨","couplekiss_man_woman":"👩‍❤️‍💋‍👨","couplekiss_woman_woman":"👩‍❤️‍💋‍👩","cow":"🐮","cow2":"🐄","cow_face":"🐮","cowboy":"🤠","cowboy_face":"🤠","cowboy_hat_face":"🤠","crab":"🦀","crayon":"🖍","credit_card":"💳","crescent_moon":"🌙","cricket":"🦗","cricket_game":"🏏","croatia":"🇭🇷","crocodile":"🐊","croissant":"🥐","cross_mark":"❌","cross_mark_button":"❎","crossed_fingers":"🤞","crossed_flags":"🎌","crossed_swords":"⚔","crown":"👑","cruise_ship":"🛳","cry":"😢","crying_cat":"😿","crying_cat_face":"😿","crying_face":"😢","crystal_ball":"🔮","cuba":"🇨🇺","cucumber":"🥒","cup_with_straw":"🥤","cupcake":"🧁","cupid":"💘","curacao":"🇨🇼","curling_stone":"🥌","curly_hair":"🦱","curly_haired":"🧑‍🦱","curly_haired_man":"👨‍🦱","curly_haired_tone1":"🧑🏻‍🦱","curly_haired_tone2":"🧑🏼‍🦱","curly_haired_tone3":"🧑🏽‍🦱","curly_haired_tone4":"🧑🏾‍🦱","curly_haired_tone5":"🧑🏿‍🦱","curly_haired_woman":"👩‍🦱","curly_loop":"➰","currency_exchange":"💱","curry":"🍛","curry_rice":"🍛","cursing_face":"🤬","custard":"🍮","customs":"🛃","cut_of_meat":"🥩","cyclone":"🌀","cyprus":"🇨🇾","czech_republic":"🇨🇿","czechia":"🇨🇿","dagger":"🗡","dancer":"💃","dancer_tone1":"💃🏻","dancer_tone2":"💃🏼","dancer_tone3":"💃🏽","dancer_tone4":"💃🏾","dancer_tone5":"💃🏿","dancers":"👯","dancing_men":"👯‍♂️","dancing_women":"👯‍♀️","dango":"🍡","dark_sunglasses":"🕶","dart":"🎯","dash":"💨","dashing_away":"💨","date":"📅","de":"🇩🇪","deaf_man":"🧏‍♂️","deaf_man_tone1":"🧏🏻‍♂️","deaf_man_tone2":"🧏🏼‍♂️","deaf_man_tone3":"🧏🏽‍♂️","deaf_man_tone4":"🧏🏾‍♂️","deaf_man_tone5":"🧏🏿‍♂️","deaf_person":"🧏","deaf_person_tone1":"🧏🏻","deaf_person_tone2":"🧏🏼","deaf_person_tone3":"🧏🏽","deaf_person_tone4":"🧏🏾","deaf_person_tone5":"🧏🏿","deaf_woman":"🧏‍♀️","deaf_woman_tone1":"🧏🏻‍♀️","deaf_woman_tone2":"🧏🏼‍♀️","deaf_woman_tone3":"🧏🏽‍♀️","deaf_woman_tone4":"🧏🏾‍♀️","deaf_woman_tone5":"🧏🏿‍♀️","deciduous_tree":"🌳","deer":"🦌","delivery_truck":"🚚","denmark":"🇩🇰","department_store":"🏬","derelict_house":"🏚","desert":"🏜","desert_island":"🏝","desktop_computer":"🖥","detective":"🕵","detective_tone1":"🕵🏻","detective_tone2":"🕵🏼","detective_tone3":"🕵🏽","detective_tone4":"🕵🏾","detective_tone5":"🕵🏿","diamond_shape_with_a_dot_inside":"💠","diamond_with_a_dot":"💠","diamonds":"♦","diego_garcia":"🇩🇬","dim_button":"🔅","direct_hit":"🎯","disappointed":"😞","disappointed_face":"😞","disappointed_relieved":"😥","disguised":"🥸","disguised_face":"🥸","divide":"➗","diving_mask":"🤿","division":"➗","diya_lamp":"🪔","dizz":"💫","dizzy":"💫","dizzy_face":"😵","djibouti":"🇩🇯","dna":"🧬","do_not_litter":"🚯","dodo":"🦤","dog":"🐶","dog2":"🐕","dog_face":"🐶","dollar":"💵","dolls":"🎎","dolphin":"🐬","dominica":"🇩🇲","dominican_republic":"🇩🇴","door":"🚪","double_curly_loop":"➿","double_exclamation":"‼","double_helix":"🧬","doughnut":"🍩","dove":"🕊","down":"🔽","downcast_face":"😓","dragon":"🐉","dragon_face":"🐲","dress":"👗","dromedary_camel":"🐪","drooling":"🤤","drooling_face":"🤤","drop_of_blood":"🩸","droplet":"💧","drum":"🥁","duck":"🦆","dumpling":"🥟","dvd":"📀","e-mail":"📧","eagle":"🦅","ear":"👂","ear_of_corn":"🌽","ear_of_rice":"🌾","ear_tone1":"👂🏻","ear_tone2":"👂🏼","ear_tone3":"👂🏽","ear_tone4":"👂🏾","ear_tone5":"👂🏿","ear_with_hearing_aid":"🦻","ear_with_hearing_aid_tone1":"🦻🏻","ear_with_hearing_aid_tone2":"🦻🏼","ear_with_hearing_aid_tone3":"🦻🏽","ear_with_hearing_aid_tone4":"🦻🏾","ear_with_hearing_aid_tone5":"🦻🏿","earth_africa":"🌍","earth_americas":"🌎","earth_asia":"🌏","earth_europe":"🌍","ecuador":"🇪🇨","eg":"🥚","egg":"🥚","eggplant":"🍆","egypt":"🇪🇬","eight":"8️⃣","eight_pointed_black_star":"✴","eight_spoked_asterisk":"✳","eject":"⏏","eject_button":"⏏","el_salvador":"🇸🇻","electric_plug":"🔌","elephant":"🐘","elevator":"🛗","elf":"🧝","elf_man":"🧝‍♂️","elf_tone1":"🧝🏻","elf_tone2":"🧝🏼","elf_tone3":"🧝🏽","elf_tone4":"🧝🏾","elf_tone5":"🧝🏿","elf_woman":"🧝‍♀️","email":"✉","end":"🔚","england":"🏴󠁧󠁢󠁥󠁮󠁧󠁿","envelope":"✉","envelope_with_arrow":"📩","equatorial_guinea":"🇬🇶","eritrea":"🇪🇷","es":"🇪🇸","estonia":"🇪🇪","eswatini":"🇸🇿","ethiopia":"🇪🇹","eu":"🇪🇺","euro":"💶","european_castle":"🏰","european_post_office":"🏤","european_union":"🇪🇺","evergreen_tree":"🌲","ewe":"🐑","exclamation":"❗","exclamation_question":"⁉","exploding_head":"🤯","expressionless":"😑","expressionless_face":"😑","eye":"👁","eye_in_speech_bubble":"👁️‍🗨️","eye_speech_bubble":"👁️‍🗨️","eyeglasses":"👓","eyes":"👀","face_vomiting":"🤮","face_with_hand_over_mouth":"🤭","face_with_head_bandage":"🤕","face_with_monocle":"🧐","face_with_open_mouth":"😮","face_with_raised_eyebrow":"🤨","face_with_symbols_on_mouth":"🤬","face_with_thermometer":"🤒","face_with_tongue":"😛","facepalm":"🤦","facepalm_tone1":"🤦🏻","facepalm_tone2":"🤦🏼","facepalm_tone3":"🤦🏽","facepalm_tone4":"🤦🏾","facepalm_tone5":"🤦🏿","facepunch":"👊","factory":"🏭","factory_worker":"🧑‍🏭","factory_worker_tone1":"🧑🏻‍🏭","factory_worker_tone2":"🧑🏼‍🏭","factory_worker_tone3":"🧑🏽‍🏭","factory_worker_tone4":"🧑🏾‍🏭","factory_worker_tone5":"🧑🏿‍🏭","fairy":"🧚","fairy_man":"🧚‍♂️","fairy_tone1":"🧚🏻","fairy_tone2":"🧚🏼","fairy_tone3":"🧚🏽","fairy_tone4":"🧚🏾","fairy_tone5":"🧚🏿","fairy_woman":"🧚‍♀️","falafel":"🧆","falkland_islands":"🇫🇰","fallen_leaf":"🍂","family":"👪","family_man_boy":"👨‍👦","family_man_boy_boy":"👨‍👦‍👦","family_man_girl":"👨‍👧","family_man_girl_boy":"👨‍👧‍👦","family_man_girl_girl":"👨‍👧‍👧","family_man_man_boy":"👨‍👨‍👦","family_man_man_boy_boy":"👨‍👨‍👦‍👦","family_man_man_girl":"👨‍👨‍👧","family_man_man_girl_boy":"👨‍👨‍👧‍👦","family_man_man_girl_girl":"👨‍👨‍👧‍👧","family_man_woman_boy":"👨‍👩‍👦","family_man_woman_boy_boy":"👨‍👩‍👦‍👦","family_man_woman_girl":"👨‍👩‍👧","family_man_woman_girl_boy":"👨‍👩‍👧‍👦","family_man_woman_girl_girl":"👨‍👩‍👧‍👧","family_mb":"👨‍👦","family_mbb":"👨‍👦‍👦","family_mg":"👨‍👧","family_mgb":"👨‍👧‍👦","family_mgg":"👨‍👧‍👧","family_mmb":"👨‍👨‍👦","family_mmbb":"👨‍👨‍👦‍👦","family_mmg":"👨‍👨‍👧","family_mmgb":"👨‍👨‍👧‍👦","family_mmgg":"👨‍👨‍👧‍👧","family_mwb":"👨‍👩‍👦","family_mwbb":"👨‍👩‍👦‍👦","family_mwg":"👨‍👩‍👧","family_mwgb":"👨‍👩‍👧‍👦","family_mwgg":"👨‍👩‍👧‍👧","family_wb":"👩‍👦","family_wbb":"👩‍👦‍👦","family_wg":"👩‍👧","family_wgb":"👩‍👧‍👦","family_wgg":"👩‍👧‍👧","family_woman_boy":"👩‍👦","family_woman_boy_boy":"👩‍👦‍👦","family_woman_girl":"👩‍👧","family_woman_girl_boy":"👩‍👧‍👦","family_woman_girl_girl":"👩‍👧‍👧","family_woman_woman_boy":"👩‍👩‍👦","family_woman_woman_boy_boy":"👩‍👩‍👦‍👦","family_woman_woman_girl":"👩‍👩‍👧","family_woman_woman_girl_boy":"👩‍👩‍👧‍👦","family_woman_woman_girl_girl":"👩‍👩‍👧‍👧","family_wwb":"👩‍👩‍👦","family_wwbb":"👩‍👩‍👦‍👦","family_wwg":"👩‍👩‍👧","family_wwgb":"👩‍👩‍👧‍👦","family_wwgg":"👩‍👩‍👧‍👧","farmer":"🧑‍🌾","farmer_tone1":"🧑🏻‍🌾","farmer_tone2":"🧑🏼‍🌾","farmer_tone3":"🧑🏽‍🌾","farmer_tone4":"🧑🏾‍🌾","farmer_tone5":"🧑🏿‍🌾","faroe_islands":"🇫🇴","fast_down":"⏬","fast_forward":"⏩","fast_reverse":"⏪","fast_up":"⏫","fax":"📠","fax_machine":"📠","fearful":"😨","fearful_face":"😨","feather":"🪶","feet":"🐾","female":"♀","female_detective":"🕵️‍♀️","female_sign":"♀","fencer":"🤺","fencing":"🤺","ferris_wheel":"🎡","ferry":"⛴","field_hockey":"🏑","fiji":"🇫🇯","file_cabinet":"🗄","file_folder":"📁","film_frames":"🎞","film_projector":"📽","film_strip":"🎞","fingers_crossed":"🤞","fingers_crossed_tone1":"🤞🏻","fingers_crossed_tone2":"🤞🏼","fingers_crossed_tone3":"🤞🏽","fingers_crossed_tone4":"🤞🏾","fingers_crossed_tone5":"🤞🏿","finland":"🇫🇮","fir":"🔥","fire":"🔥","fire_engine":"🚒","fire_extinguisher":"🧯","firecracker":"🧨","firefighter":"🧑‍🚒","firefighter_tone1":"🧑🏻‍🚒","firefighter_tone2":"🧑🏼‍🚒","firefighter_tone3":"🧑🏽‍🚒","firefighter_tone4":"🧑🏾‍🚒","firefighter_tone5":"🧑🏿‍🚒","fireworks":"🎆","first_place_medal":"🥇","first_quarter_moon":"🌓","first_quarter_moon_with_face":"🌛","fish":"🐟","fish_cake":"🍥","fishing_pole":"🎣","fishing_pole_and_fish":"🎣","fist":"✊","fist_left":"🤛","fist_oncoming":"👊","fist_raised":"✊","fist_right":"🤜","fist_tone1":"✊🏻","fist_tone2":"✊🏼","fist_tone3":"✊🏽","fist_tone4":"✊🏾","fist_tone5":"✊🏿","five":"5️⃣","flag_ac":"🇦🇨","flag_ad":"🇦🇩","flag_ae":"🇦🇪","flag_af":"🇦🇫","flag_ag":"🇦🇬","flag_ai":"🇦🇮","flag_al":"🇦🇱","flag_am":"🇦🇲","flag_ao":"🇦🇴","flag_aq":"🇦🇶","flag_ar":"🇦🇷","flag_as":"🇦🇸","flag_at":"🇦🇹","flag_au":"🇦🇺","flag_aw":"🇦🇼","flag_ax":"🇦🇽","flag_az":"🇦🇿","flag_ba":"🇧🇦","flag_bb":"🇧🇧","flag_bd":"🇧🇩","flag_be":"🇧🇪","flag_bf":"🇧🇫","flag_bg":"🇧🇬","flag_bh":"🇧🇭","flag_bi":"🇧🇮","flag_bj":"🇧🇯","flag_bl":"🇧🇱","flag_bm":"🇧🇲","flag_bn":"🇧🇳","flag_bo":"🇧🇴","flag_bq":"🇧🇶","flag_br":"🇧🇷","flag_bs":"🇧🇸","flag_bt":"🇧🇹","flag_bv":"🇧🇻","flag_bw":"🇧🇼","flag_by":"🇧🇾","flag_bz":"🇧🇿","flag_ca":"🇨🇦","flag_cc":"🇨🇨","flag_cd":"🇨🇩","flag_cf":"🇨🇫","flag_cg":"🇨🇬","flag_ch":"🇨🇭","flag_ci":"🇨🇮","flag_ck":"🇨🇰","flag_cl":"🇨🇱","flag_cm":"🇨🇲","flag_cn":"🇨🇳","flag_co":"🇨🇴","flag_cp":"🇨🇵","flag_cr":"🇨🇷","flag_cu":"🇨🇺","flag_cv":"🇨🇻","flag_cw":"🇨🇼","flag_cx":"🇨🇽","flag_cy":"🇨🇾","flag_cz":"🇨🇿","flag_de":"🇩🇪","flag_dg":"🇩🇬","flag_dj":"🇩🇯","flag_dk":"🇩🇰","flag_dm":"🇩🇲","flag_do":"🇩🇴","flag_dz":"🇩🇿","flag_ea":"🇪🇦","flag_ec":"🇪🇨","flag_ee":"🇪🇪","flag_eg":"🇪🇬","flag_eh":"🇪🇭","flag_er":"🇪🇷","flag_es":"🇪🇸","flag_et":"🇪🇹","flag_eu":"🇪🇺","flag_fi":"🇫🇮","flag_fj":"🇫🇯","flag_fk":"🇫🇰","flag_fm":"🇫🇲","flag_fo":"🇫🇴","flag_fr":"🇫🇷","flag_ga":"🇬🇦","flag_gb":"🇬🇧","flag_gbeng":"🏴󠁧󠁢󠁥󠁮󠁧󠁿","flag_gbsct":"🏴󠁧󠁢󠁳󠁣󠁴󠁿","flag_gbwls":"🏴󠁧󠁢󠁷󠁬󠁳󠁿","flag_gd":"🇬🇩","flag_ge":"🇬🇪","flag_gf":"🇬🇫","flag_gg":"🇬🇬","flag_gh":"🇬🇭","flag_gi":"🇬🇮","flag_gl":"🇬🇱","flag_gm":"🇬🇲","flag_gn":"🇬🇳","flag_gp":"🇬🇵","flag_gq":"🇬🇶","flag_gr":"🇬🇷","flag_gs":"🇬🇸","flag_gt":"🇬🇹","flag_gu":"🇬🇺","flag_gw":"🇬🇼","flag_gy":"🇬🇾","flag_hk":"🇭🇰","flag_hm":"🇭🇲","flag_hn":"🇭🇳","flag_hr":"🇭🇷","flag_ht":"🇭🇹","flag_hu":"🇭🇺","flag_ic":"🇮🇨","flag_id":"🇮🇩","flag_ie":"🇮🇪","flag_il":"🇮🇱","flag_im":"🇮🇲","flag_in":"🇮🇳","flag_io":"🇮🇴","flag_iq":"🇮🇶","flag_ir":"🇮🇷","flag_is":"🇮🇸","flag_it":"🇮🇹","flag_je":"🇯🇪","flag_jm":"🇯🇲","flag_jo":"🇯🇴","flag_jp":"🇯🇵","flag_ke":"🇰🇪","flag_kg":"🇰🇬","flag_kh":"🇰🇭","flag_ki":"🇰🇮","flag_km":"🇰🇲","flag_kn":"🇰🇳","flag_kp":"🇰🇵","flag_kr":"🇰🇷","flag_kw":"🇰🇼","flag_ky":"🇰🇾","flag_kz":"🇰🇿","flag_la":"🇱🇦","flag_lb":"🇱🇧","flag_lc":"🇱🇨","flag_li":"🇱🇮","flag_lk":"🇱🇰","flag_lr":"🇱🇷","flag_ls":"🇱🇸","flag_lt":"🇱🇹","flag_lu":"🇱🇺","flag_lv":"🇱🇻","flag_ly":"🇱🇾","flag_ma":"🇲🇦","flag_mc":"🇲🇨","flag_md":"🇲🇩","flag_me":"🇲🇪","flag_mf":"🇲🇫","flag_mg":"🇲🇬","flag_mh":"🇲🇭","flag_mk":"🇲🇰","flag_ml":"🇲🇱","flag_mm":"🇲🇲","flag_mn":"🇲🇳","flag_mo":"🇲🇴","flag_mp":"🇲🇵","flag_mq":"🇲🇶","flag_mr":"🇲🇷","flag_ms":"🇲🇸","flag_mt":"🇲🇹","flag_mu":"🇲🇺","flag_mv":"🇲🇻","flag_mw":"🇲🇼","flag_mx":"🇲🇽","flag_my":"🇲🇾","flag_mz":"🇲🇿","flag_na":"🇳🇦","flag_nc":"🇳🇨","flag_ne":"🇳🇪","flag_nf":"🇳🇫","flag_ng":"🇳🇬","flag_ni":"🇳🇮","flag_nl":"🇳🇱","flag_no":"🇳🇴","flag_np":"🇳🇵","flag_nr":"🇳🇷","flag_nu":"🇳🇺","flag_nz":"🇳🇿","flag_om":"🇴🇲","flag_pa":"🇵🇦","flag_pe":"🇵🇪","flag_pf":"🇵🇫","flag_pg":"🇵🇬","flag_ph":"🇵🇭","flag_pk":"🇵🇰","flag_pl":"🇵🇱","flag_pm":"🇵🇲","flag_pn":"🇵🇳","flag_pr":"🇵🇷","flag_ps":"🇵🇸","flag_pt":"🇵🇹","flag_pw":"🇵🇼","flag_py":"🇵🇾","flag_qa":"🇶🇦","flag_re":"🇷🇪","flag_ro":"🇷🇴","flag_rs":"🇷🇸","flag_ru":"🇷🇺","flag_rw":"🇷🇼","flag_sa":"🇸🇦","flag_sb":"🇸🇧","flag_sc":"🇸🇨","flag_sd":"🇸🇩","flag_se":"🇸🇪","flag_sg":"🇸🇬","flag_sh":"🇸🇭","flag_si":"🇸🇮","flag_sj":"🇸🇯","flag_sk":"🇸🇰","flag_sl":"🇸🇱","flag_sm":"🇸🇲","flag_sn":"🇸🇳","flag_so":"🇸🇴","flag_sr":"🇸🇷","flag_ss":"🇸🇸","flag_st":"🇸🇹","flag_sv":"🇸🇻","flag_sx":"🇸🇽","flag_sy":"🇸🇾","flag_sz":"🇸🇿","flag_ta":"🇹🇦","flag_tc":"🇹🇨","flag_td":"🇹🇩","flag_tf":"🇹🇫","flag_tg":"🇹🇬","flag_th":"🇹🇭","flag_tj":"🇹🇯","flag_tk":"🇹🇰","flag_tl":"🇹🇱","flag_tm":"🇹🇲","flag_tn":"🇹🇳","flag_to":"🇹🇴","flag_tr":"🇹🇷","flag_tt":"🇹🇹","flag_tv":"🇹🇻","flag_tw":"🇹🇼","flag_tz":"🇹🇿","flag_ua":"🇺🇦","flag_ug":"🇺🇬","flag_um":"🇺🇲","flag_un":"🇺🇳","flag_us":"🇺🇸","flag_uy":"🇺🇾","flag_uz":"🇺🇿","flag_va":"🇻🇦","flag_vc":"🇻🇨","flag_ve":"🇻🇪","flag_vg":"🇻🇬","flag_vi":"🇻🇮","flag_vn":"🇻🇳","flag_vu":"🇻🇺","flag_wf":"🇼🇫","flag_ws":"🇼🇸","flag_xk":"🇽🇰","flag_ye":"🇾🇪","flag_yt":"🇾🇹","flag_za":"🇿🇦","flag_zm":"🇿🇲","flag_zw":"🇿🇼","flags":"🎏","flamingo":"🦩","flashlight":"🔦","flat_shoe":"🥿","flatbread":"🫓","fleur-de-lis":"⚜","fleur_de_lis":"⚜","flight_arrival":"🛬","flight_departure":"🛫","flipper":"🐬","floppy_disk":"💾","flower_playing_cards":"🎴","flushed":"😳","flushed_face":"😳","fly":"🪰","flying_disc":"🥏","flying_saucer":"🛸","fog":"🌫","foggy":"🌁","folded_hands":"🙏","folded_hands_tone1":"🙏🏻","folded_hands_tone2":"🙏🏼","folded_hands_tone3":"🙏🏽","folded_hands_tone4":"🙏🏾","folded_hands_tone5":"🙏🏿","fondue":"🫕","foot":"🦶","foot_tone1":"🦶🏻","foot_tone2":"🦶🏼","foot_tone3":"🦶🏽","foot_tone4":"🦶🏾","foot_tone5":"🦶🏿","football":"🏈","footprints":"👣","fork_and_knife":"🍴","fork_knife_plate":"🍽","fortune_cookie":"🥠","fountain":"⛲","fountain_pen":"🖋","four":"4️⃣","four_leaf_clover":"🍀","fox":"🦊","fox_face":"🦊","fr":"🇫🇷","frame_with_picture":"🖼","framed_picture":"🖼","france":"🇫🇷","free":"🆓","french_fries":"🍟","french_guiana":"🇬🇫","french_polynesia":"🇵🇫","french_southern_territories":"🇹🇫","fried_egg":"🍳","fried_shrimp":"🍤","fries":"🍟","frog":"🐸","frog_face":"🐸","frowning":"😦","frowning_face":"☹","frowning_man":"🙍‍♂️","frowning_person":"🙍","frowning_woman":"🙍‍♀️","fu":"🖕","fuelpump":"⛽","full_moon":"🌕","full_moon_with_face":"🌝","funeral_urn":"⚱","gabon":"🇬🇦","gambia":"🇬🇲","game_die":"🎲","garlic":"🧄","gb":"🇬🇧","gear":"⚙","gem":"💎","gemini":"♊","genie":"🧞","genie_man":"🧞‍♂️","genie_woman":"🧞‍♀️","georgia":"🇬🇪","germany":"🇩🇪","ghana":"🇬🇭","ghost":"👻","gibraltar":"🇬🇮","gift":"🎁","gift_heart":"💝","giraffe":"🦒","girl":"👧","girl_tone1":"👧🏻","girl_tone2":"👧🏼","girl_tone3":"👧🏽","girl_tone4":"👧🏾","girl_tone5":"👧🏿","glass_of_milk":"🥛","glasses":"👓","globe_with_meridian":"🌐","globe_with_meridians":"🌐","gloves":"🧤","glowing_star":"🌟","goal_ne":"🥅","goal_net":"🥅","goat":"🐐","goblin":"👺","goggles":"🥽","golf":"⛳","golfer":"🏌","golfer_tone1":"🏌🏻","golfer_tone2":"🏌🏼","golfer_tone3":"🏌🏽","golfer_tone4":"🏌🏾","golfer_tone5":"🏌🏿","golfing":"🏌","golfing_man":"🏌️‍♂️","golfing_tone1":"🏌🏻","golfing_tone2":"🏌🏼","golfing_tone3":"🏌🏽","golfing_tone4":"🏌🏾","golfing_tone5":"🏌🏿","golfing_woman":"🏌️‍♀️","gorilla":"🦍","graduation_cap":"🎓","grapes":"🍇","greece":"🇬🇷","green_apple":"🍏","green_book":"📗","green_circle":"🟢","green_hear":"💚","green_heart":"💚","green_salad":"🥗","green_square":"🟩","greenland":"🇬🇱","grenada":"🇬🇩","grey_exclamation":"❕","grey_question":"❔","grimacing":"😬","grimacing_face":"😬","grin":"😁","grinning":"😀","grinning_cat":"😺","grinning_cat_with_closed_eyes":"😸","grinning_face":"😀","grinning_face_with_big_eyes":"😃","grinning_face_with_closed_eyes":"😄","grinning_face_with_sweat":"😅","growing_heart":"💗","guadeloupe":"🇬🇵","guam":"🇬🇺","guard":"💂","guard_tone1":"💂🏻","guard_tone2":"💂🏼","guard_tone3":"💂🏽","guard_tone4":"💂🏾","guard_tone5":"💂🏿","guardsman":"💂‍♂️","guardswoman":"💂‍♀️","guatemala":"🇬🇹","guernsey":"🇬🇬","guide_dog":"🦮","guinea":"🇬🇳","guinea_bissau":"🇬🇼","guitar":"🎸","gun":"🔫","guyana":"🇬🇾","haircut":"💇","haircut_man":"💇‍♂️","haircut_tone1":"💇🏻","haircut_tone2":"💇🏼","haircut_tone3":"💇🏽","haircut_tone4":"💇🏾","haircut_tone5":"💇🏿","haircut_woman":"💇‍♀️","haiti":"🇭🇹","halo":"😇","hamburger":"🍔","hamme":"🔨","hammer":"🔨","hammer_and_pick":"⚒","hammer_and_wrench":"🛠","hamster":"🐹","hamster_face":"🐹","hand":"✋","hand_over_mouth":"🤭","handbag":"👜","handball":"🤾","handball_person":"🤾","handball_tone1":"🤾🏻","handball_tone2":"🤾🏼","handball_tone3":"🤾🏽","handball_tone4":"🤾🏾","handball_tone5":"🤾🏿","handicapped":"♿","handshake":"🤝","hankey":"💩","hash":"#️⃣","hatched_chick":"🐥","hatching_chick":"🐣","headphones":"🎧","headstone":"🪦","health_worker":"🧑‍⚕️","health_worker_tone1":"🧑🏻‍⚕️","health_worker_tone2":"🧑🏼‍⚕️","health_worker_tone3":"🧑🏽‍⚕️","health_worker_tone4":"🧑🏾‍⚕️","health_worker_tone5":"🧑🏿‍⚕️","hear_no_evil":"🙉","heard_mcdonald_islands":"🇭🇲","hearing_aid":"🦻","hearing_aid_tone1":"🦻🏻","hearing_aid_tone2":"🦻🏼","hearing_aid_tone3":"🦻🏽","hearing_aid_tone4":"🦻🏾","hearing_aid_tone5":"🦻🏿","heart":"❤","heart_decoration":"💟","heart_exclamation":"❣","heart_eyes":"😍","heart_eyes_cat":"😻","heart_with_arrow":"💘","heart_with_ribbon":"💝","heartbeat":"💓","heartpulse":"💗","hearts":"♥","heavy_check_mark":"✔","heavy_division_sign":"➗","heavy_dollar_sign":"💲","heavy_exclamation_mark":"❗","heavy_heart_exclamation":"❣","heavy_minus_sig":"➖","heavy_minus_sign":"➖","heavy_multiplication_x":"✖","heavy_plus_sig":"➕","heavy_plus_sign":"➕","hedgehog":"🦔","helicopter":"🚁","helmet_with_cross":"⛑","herb":"🌿","hibiscus":"🌺","high_brightness":"🔆","high_five":"✋","high_five_tone1":"✋🏻","high_five_tone2":"✋🏼","high_five_tone3":"✋🏽","high_five_tone4":"✋🏾","high_five_tone5":"✋🏿","high_heel":"👠","high_voltage":"⚡","high_volume":"🔊","hiking_boot":"🥾","hindu_temple":"🛕","hippo":"🦛","hippopotamus":"🦛","hocho":"🔪","hockey":"🏒","hole":"🕳","hollow_red_circle":"⭕","homes":"🏘","honduras":"🇭🇳","honey_pot":"🍯","honeybee":"🐝","hong_kong":"🇭🇰","hook":"🪝","hooray":"🥳","horse":"🐴","horse_face":"🐴","horse_racing":"🏇","horse_racing_tone1":"🏇🏻","horse_racing_tone2":"🏇🏼","horse_racing_tone3":"🏇🏽","horse_racing_tone4":"🏇🏾","horse_racing_tone5":"🏇🏿","hospital":"🏥","hot":"🥵","hot_face":"🥵","hot_pepper":"🌶","hotdog":"🌭","hotel":"🏨","hotsprings":"♨","hourglass":"⌛","hourglass_flowing_sand":"⏳","house":"🏠","house_abandoned":"🏚","house_with_garden":"🏡","houses":"🏘","hug":"🤗","hugging":"🤗","hugging_face":"🤗","hugs":"🤗","hungary":"🇭🇺","hushed":"😯","hushed_face":"😯","hut":"🛖","ice":"🧊","ice_cream":"🍨","ice_cube":"🧊","ice_hockey":"🏒","ice_skate":"⛸","icecream":"🍦","iceland":"🇮🇸","id":"🆔","ideograph_advantage":"🉐","imp":"👿","inbox_tray":"📥","incoming_envelope":"📨","india":"🇮🇳","indonesia":"🇮🇩","infinity":"♾","info":"ℹ","information_desk_person":"💁","information_source":"ℹ","innocent":"😇","interrobang":"⁉","iphon":"📱","iphone":"📱","iran":"🇮🇷","iraq":"🇮🇶","ireland":"🇮🇪","island":"🏝","isle_of_man":"🇮🇲","israel":"🇮🇱","it":"🇮🇹","italy":"🇮🇹","izakaya_lantern":"🏮","ja_acceptable":"🉑","ja_application":"🈸","ja_bargain":"🉐","ja_congratulations":"㊗","ja_discount":"🈹","ja_free_of_charge":"🈚","ja_here":"🈁","ja_monthly_amount":"🈷","ja_no_vacancy":"🈵","ja_not_free_of_carge":"🈶","ja_open_for_business":"🈺","ja_passing_grade":"🈴","ja_prohibited":"🈲","ja_reserved":"🈯","ja_secret":"㊙","ja_service_charge":"🈂","ja_vacancy":"🈳","jack_o_lantern":"🎃","jamaica":"🇯🇲","japan":"🗾","japan_map":"🗾","japanese_castle":"🏯","japanese_goblin":"👺","japanese_ogre":"👹","jeans":"👖","jersey":"🇯🇪","jigsaw":"🧩","jolly_roger":"🏴‍☠️","jordan":"🇯🇴","joy":"😂","joy_cat":"😹","joystick":"🕹","jp":"🇯🇵","judge":"🧑‍⚖️","judge_tone1":"🧑🏻‍⚖️","judge_tone2":"🧑🏼‍⚖️","judge_tone3":"🧑🏽‍⚖️","judge_tone4":"🧑🏾‍⚖️","judge_tone5":"🧑🏿‍⚖️","juggler":"🤹","juggler_tone1":"🤹🏻","juggler_tone2":"🤹🏼","juggler_tone3":"🤹🏽","juggler_tone4":"🤹🏾","juggler_tone5":"🤹🏿","juggling":"🤹","juggling_person":"🤹","juggling_tone1":"🤹🏻","juggling_tone2":"🤹🏼","juggling_tone3":"🤹🏽","juggling_tone4":"🤹🏾","juggling_tone5":"🤹🏿","juice_box":"🧃","kaaba":"🕋","kangaroo":"🦘","kazakhstan":"🇰🇿","kenya":"🇰🇪","key":"🔑","keyboard":"⌨","keycap_ten":"🔟","kick_scooter":"🛴","kimono":"👘","kiribati":"🇰🇮","kiss":"💋","kiss_mm":"👨‍❤️‍💋‍👨","kiss_mw":"👩‍❤️‍💋‍👨","kiss_wm":"👩‍❤️‍💋‍👨","kiss_ww":"👩‍❤️‍💋‍👩","kissing":"😗","kissing_cat":"😽","kissing_closed_eyes":"😚","kissing_face":"😗","kissing_face_with_closed_eyes":"😚","kissing_face_with_smiling_eyes":"😙","kissing_heart":"😘","kissing_smiling_eyes":"😙","kite":"🪁","kiwi":"🥝","kiwi_fruit":"🥝","kneeling":"🧎","kneeling_man":"🧎‍♂️","kneeling_person":"🧎","kneeling_tone1":"🧎🏻","kneeling_tone2":"🧎🏼","kneeling_tone3":"🧎🏽","kneeling_tone4":"🧎🏾","kneeling_tone5":"🧎🏿","kneeling_woman":"🧎‍♀️","knife":"🔪","knot":"🪢","koala":"🐨","koala_face":"🐨","koko":"🈁","kosovo":"🇽🇰","kr":"🇰🇷","kuwait":"🇰🇼","kyrgyzstan":"🇰🇬","lab_coat":"🥼","labe":"🏷️","label":"🏷","lacrosse":"🥍","ladder":"🪜","lady_beetle":"🐞","lantern":"🏮","laos":"🇱🇦","laptop":"💻","large_blue_circle":"🔵","large_blue_diamond":"🔷","large_orange_diamond":"🔶","last_quarter_moon":"🌗","last_quarter_moon_with_face":"🌜","latin_cross":"✝","latvia":"🇱🇻","laughing":"😆","leafy_green":"🥬","leaves":"🍃","lebanon":"🇱🇧","ledger":"📒","left_facing_fist":"🤛","left_facing_fist_tone1":"🤛🏻","left_facing_fist_tone2":"🤛🏼","left_facing_fist_tone3":"🤛🏽","left_facing_fist_tone4":"🤛🏾","left_facing_fist_tone5":"🤛🏿","left_luggage":"🛅","left_right_arrow":"↔","left_speech_bubble":"🗨","leftwards_arrow_with_hook":"↩","leg":"🦵","leg_tone1":"🦵🏻","leg_tone2":"🦵🏼","leg_tone3":"🦵🏽","leg_tone4":"🦵🏾","leg_tone5":"🦵🏿","lemon":"🍋","leo":"♌","leopard":"🐆","lesotho":"🇱🇸","level_slider":"🎚","levitate":"🕴","levitate_tone1":"🕴🏻","levitate_tone2":"🕴🏼","levitate_tone3":"🕴🏽","levitate_tone4":"🕴🏾","levitate_tone5":"🕴🏿","levitating":"🕴","levitating_tone1":"🕴🏻","levitating_tone2":"🕴🏼","levitating_tone3":"🕴🏽","levitating_tone4":"🕴🏾","levitating_tone5":"🕴🏿","liberia":"🇱🇷","libra":"♎","libya":"🇱🇾","liechtenstein":"🇱🇮","light_bulb":"💡","light_rail":"🚈","lightning":"🌩","link":"🔗","lion":"🦁","lion_face":"🦁","lips":"👄","lipstic":"💄","lipstick":"💄","lithuania":"🇱🇹","litter_bin":"🚮","lizard":"🦎","llama":"🦙","lmao":"😂","lobster":"🦞","loc":"🔒","lock":"🔒","lock_with_ink_pen":"🔏","locked":"🔒","locked_with_key":"🔐","locked_with_pen":"🔏","lol":"😆","lollipop":"🍭","long_drum":"🪘","loop":"➿","lotion_bottle":"🧴","lotus_position":"🧘","lotus_position_man":"🧘‍♂️","lotus_position_woman":"🧘‍♀️","loud_soun":"🔊","loud_sound":"🔊","loudly_crying_face":"😭","loudspeaker":"📢","love_hotel":"🏩","love_letter":"💌","love_you_gesture":"🤟","love_you_gesture_tone1":"🤟🏻","love_you_gesture_tone2":"🤟🏼","love_you_gesture_tone3":"🤟🏽","love_you_gesture_tone4":"🤟🏾","love_you_gesture_tone5":"🤟🏿","low_brightness":"🔅","low_volume":"🔈","luggage":"🧳","lungs":"🫁","luxembourg":"🇱🇺","lying":"🤥","lying_face":"🤥","m":"Ⓜ","ma":"🔍","macao":"🇲🇴","macau":"🇲🇴","macedonia":"🇲🇰","madagascar":"🇲🇬","mag":"🔍","mag_right":"🔎","mage":"🧙","mage_man":"🧙‍♂️","mage_tone1":"🧙🏻","mage_tone2":"🧙🏼","mage_tone3":"🧙🏽","mage_tone4":"🧙🏾","mage_tone5":"🧙🏿","mage_woman":"🧙‍♀️","magic_wand":"🪄","magnet":"🧲","mahjong":"🀄","mailbox":"📫","mailbox_closed":"📪","mailbox_with_mail":"📬","mailbox_with_no_mail":"📭","malawi":"🇲🇼","malaysia":"🇲🇾","maldives":"🇲🇻","male":"♂","male_detective":"🕵️‍♂️","male_sign":"♂","mali":"🇲🇱","malta":"🇲🇹","mammoth":"🦣","man":"👨","man_artist":"👨‍🎨","man_artist_tone1":"👨🏻‍🎨","man_artist_tone2":"👨🏼‍🎨","man_artist_tone3":"👨🏽‍🎨","man_artist_tone4":"👨🏾‍🎨","man_artist_tone5":"👨🏿‍🎨","man_astronaut":"👨‍🚀","man_astronaut_tone1":"👨🏻‍🚀","man_astronaut_tone2":"👨🏼‍🚀","man_astronaut_tone3":"👨🏽‍🚀","man_astronaut_tone4":"👨🏾‍🚀","man_astronaut_tone5":"👨🏿‍🚀","man_bald":"👨‍🦲","man_bald_tone1":"👨🏻‍🦲","man_bald_tone2":"👨🏼‍🦲","man_bald_tone3":"👨🏽‍🦲","man_bald_tone4":"👨🏾‍🦲","man_bald_tone5":"👨🏿‍🦲","man_bearded":"🧔","man_bearded_tone1":"🧔🏻","man_bearded_tone2":"🧔🏼","man_bearded_tone3":"🧔🏽","man_bearded_tone4":"🧔🏾","man_bearded_tone5":"🧔🏿","man_biking":"🚴‍♂️","man_biking_tone1":"🚴🏻‍♂️","man_biking_tone2":"🚴🏼‍♂️","man_biking_tone3":"🚴🏽‍♂️","man_biking_tone4":"🚴🏾‍♂️","man_biking_tone5":"🚴🏿‍♂️","man_blond_haired":"👱‍♂️","man_blond_haired_tone1":"👱🏻‍♂️","man_blond_haired_tone2":"👱🏼‍♂️","man_blond_haired_tone3":"👱🏽‍♂️","man_blond_haired_tone4":"👱🏾‍♂️","man_blond_haired_tone5":"👱🏿‍♂️","man_bouncing_ball":"⛹️‍♂️","man_bouncing_ball_tone1":"⛹🏻‍♂️","man_bouncing_ball_tone2":"⛹🏼‍♂️","man_bouncing_ball_tone3":"⛹🏽‍♂️","man_bouncing_ball_tone4":"⛹🏾‍♂️","man_bouncing_ball_tone5":"⛹🏿‍♂️","man_bowing":"🙇‍♂️","man_bowing_tone1":"🙇🏻‍♂️","man_bowing_tone2":"🙇🏼‍♂️","man_bowing_tone3":"🙇🏽‍♂️","man_bowing_tone4":"🙇🏾‍♂️","man_bowing_tone5":"🙇🏿‍♂️","man_cartwheeling":"🤸‍♂️","man_cartwheeling_tone1":"🤸🏻‍♂️","man_cartwheeling_tone2":"🤸🏼‍♂️","man_cartwheeling_tone3":"🤸🏽‍♂️","man_cartwheeling_tone4":"🤸🏾‍♂️","man_cartwheeling_tone5":"🤸🏿‍♂️","man_climbing":"🧗‍♂️","man_climbing_tone1":"🧗🏻‍♂️","man_climbing_tone2":"🧗🏼‍♂️","man_climbing_tone3":"🧗🏽‍♂️","man_climbing_tone4":"🧗🏾‍♂️","man_climbing_tone5":"🧗🏿‍♂️","man_construction_worker":"👷‍♂️","man_construction_worker_tone1":"👷🏻‍♂️","man_construction_worker_tone2":"👷🏼‍♂️","man_construction_worker_tone3":"👷🏽‍♂️","man_construction_worker_tone4":"👷🏾‍♂️","man_construction_worker_tone5":"👷🏿‍♂️","man_cook":"👨‍🍳","man_cook_tone1":"👨🏻‍🍳","man_cook_tone2":"👨🏼‍🍳","man_cook_tone3":"👨🏽‍🍳","man_cook_tone4":"👨🏾‍🍳","man_cook_tone5":"👨🏿‍🍳","man_curly_haired":"👨‍🦱","man_curly_haired_tone1":"👨🏻‍🦱","man_curly_haired_tone2":"👨🏼‍🦱","man_curly_haired_tone3":"👨🏽‍🦱","man_curly_haired_tone4":"👨🏾‍🦱","man_curly_haired_tone5":"👨🏿‍🦱","man_dancing":"🕺","man_dancing_tone1":"🕺🏻","man_dancing_tone2":"🕺🏼","man_dancing_tone3":"🕺🏽","man_dancing_tone4":"🕺🏾","man_dancing_tone5":"🕺🏿","man_detective":"🕵️‍♂️","man_detective_tone1":"🕵🏻‍♂️","man_detective_tone2":"🕵🏼‍♂️","man_detective_tone3":"🕵🏽‍♂️","man_detective_tone4":"🕵🏾‍♂️","man_detective_tone5":"🕵🏿‍♂️","man_elf":"🧝‍♂️","man_elf_tone1":"🧝🏻‍♂️","man_elf_tone2":"🧝🏼‍♂️","man_elf_tone3":"🧝🏽‍♂️","man_elf_tone4":"🧝🏾‍♂️","man_elf_tone5":"🧝🏿‍♂️","man_facepalming":"🤦‍♂️","man_facepalming_tone1":"🤦🏻‍♂️","man_facepalming_tone2":"🤦🏼‍♂️","man_facepalming_tone3":"🤦🏽‍♂️","man_facepalming_tone4":"🤦🏾‍♂️","man_facepalming_tone5":"🤦🏿‍♂️","man_factory_worker":"👨‍🏭","man_factory_worker_tone1":"👨🏻‍🏭","man_factory_worker_tone2":"👨🏼‍🏭","man_factory_worker_tone3":"👨🏽‍🏭","man_factory_worker_tone4":"👨🏾‍🏭","man_factory_worker_tone5":"👨🏿‍🏭","man_fairy":"🧚‍♂️","man_fairy_tone1":"🧚🏻‍♂️","man_fairy_tone2":"🧚🏼‍♂️","man_fairy_tone3":"🧚🏽‍♂️","man_fairy_tone4":"🧚🏾‍♂️","man_fairy_tone5":"🧚🏿‍♂️","man_farmer":"👨‍🌾","man_farmer_tone1":"👨🏻‍🌾","man_farmer_tone2":"👨🏼‍🌾","man_farmer_tone3":"👨🏽‍🌾","man_farmer_tone4":"👨🏾‍🌾","man_farmer_tone5":"👨🏿‍🌾","man_feeding_baby":"👨‍🍼","man_feeding_baby_tone1":"👨🏻‍🍼","man_feeding_baby_tone2":"👨🏼‍🍼","man_feeding_baby_tone3":"👨🏽‍🍼","man_feeding_baby_tone4":"👨🏾‍🍼","man_feeding_baby_tone5":"👨🏿‍🍼","man_firefighter":"👨‍🚒","man_firefighter_tone1":"👨🏻‍🚒","man_firefighter_tone2":"👨🏼‍🚒","man_firefighter_tone3":"👨🏽‍🚒","man_firefighter_tone4":"👨🏾‍🚒","man_firefighter_tone5":"👨🏿‍🚒","man_frowning":"🙍‍♂️","man_frowning_tone1":"🙍🏻‍♂️","man_frowning_tone2":"🙍🏼‍♂️","man_frowning_tone3":"🙍🏽‍♂️","man_frowning_tone4":"🙍🏾‍♂️","man_frowning_tone5":"🙍🏿‍♂️","man_genie":"🧞‍♂️","man_gesturing_no":"🙅‍♂️","man_gesturing_no_tone1":"🙅🏻‍♂️","man_gesturing_no_tone2":"🙅🏼‍♂️","man_gesturing_no_tone3":"🙅🏽‍♂️","man_gesturing_no_tone4":"🙅🏾‍♂️","man_gesturing_no_tone5":"🙅🏿‍♂️","man_gesturing_ok":"🙆‍♂️","man_gesturing_ok_tone1":"🙆🏻‍♂️","man_gesturing_ok_tone2":"🙆🏼‍♂️","man_gesturing_ok_tone3":"🙆🏽‍♂️","man_gesturing_ok_tone4":"🙆🏾‍♂️","man_gesturing_ok_tone5":"🙆🏿‍♂️","man_getting_haircut":"💇‍♂️","man_getting_haircut_tone1":"💇🏻‍♂️","man_getting_haircut_tone2":"💇🏼‍♂️","man_getting_haircut_tone3":"💇🏽‍♂️","man_getting_haircut_tone4":"💇🏾‍♂️","man_getting_haircut_tone5":"💇🏿‍♂️","man_getting_massage":"💆‍♂️","man_getting_massage_tone1":"💆🏻‍♂️","man_getting_massage_tone2":"💆🏼‍♂️","man_getting_massage_tone3":"💆🏽‍♂️","man_getting_massage_tone4":"💆🏾‍♂️","man_getting_massage_tone5":"💆🏿‍♂️","man_golfing":"🏌️‍♂️","man_golfing_tone1":"🏌🏻‍♂️","man_golfing_tone2":"🏌🏼‍♂️","man_golfing_tone3":"🏌🏽‍♂️","man_golfing_tone4":"🏌🏾‍♂️","man_golfing_tone5":"🏌🏿‍♂️","man_guard":"💂‍♂️","man_guard_tone1":"💂🏻‍♂️","man_guard_tone2":"💂🏼‍♂️","man_guard_tone3":"💂🏽‍♂️","man_guard_tone4":"💂🏾‍♂️","man_guard_tone5":"💂🏿‍♂️","man_health_worker":"👨‍⚕️","man_health_worker_tone1":"👨🏻‍⚕️","man_health_worker_tone2":"👨🏼‍⚕️","man_health_worker_tone3":"👨🏽‍⚕️","man_health_worker_tone4":"👨🏾‍⚕️","man_health_worker_tone5":"👨🏿‍⚕️","man_in_lotus_position":"🧘‍♂️","man_in_lotus_position_tone1":"🧘🏻‍♂️","man_in_lotus_position_tone2":"🧘🏼‍♂️","man_in_lotus_position_tone3":"🧘🏽‍♂️","man_in_lotus_position_tone4":"🧘🏾‍♂️","man_in_lotus_position_tone5":"🧘🏿‍♂️","man_in_manual_wheelchair":"👨‍🦽","man_in_manual_wheelchair_tone1":"👨🏻‍🦽","man_in_manual_wheelchair_tone2":"👨🏼‍🦽","man_in_manual_wheelchair_tone3":"👨🏽‍🦽","man_in_manual_wheelchair_tone4":"👨🏾‍🦽","man_in_manual_wheelchair_tone5":"👨🏿‍🦽","man_in_motorized_wheelchair":"👨‍🦼","man_in_motorized_wheelchair_tone1":"👨🏻‍🦼","man_in_motorized_wheelchair_tone2":"👨🏼‍🦼","man_in_motorized_wheelchair_tone3":"👨🏽‍🦼","man_in_motorized_wheelchair_tone4":"👨🏾‍🦼","man_in_motorized_wheelchair_tone5":"👨🏿‍🦼","man_in_steamy_room":"🧖‍♂️","man_in_steamy_room_tone1":"🧖🏻‍♂️","man_in_steamy_room_tone2":"🧖🏼‍♂️","man_in_steamy_room_tone3":"🧖🏽‍♂️","man_in_steamy_room_tone4":"🧖🏾‍♂️","man_in_steamy_room_tone5":"🧖🏿‍♂️","man_in_tuxedo":"🤵","man_in_tuxedo_tone1":"🤵🏻‍♂️","man_in_tuxedo_tone2":"🤵🏼‍♂️","man_in_tuxedo_tone3":"🤵🏽‍♂️","man_in_tuxedo_tone4":"🤵🏾‍♂️","man_in_tuxedo_tone5":"🤵🏿‍♂️","man_judge":"👨‍⚖️","man_judge_tone1":"👨🏻‍⚖️","man_judge_tone2":"👨🏼‍⚖️","man_judge_tone3":"👨🏽‍⚖️","man_judge_tone4":"👨🏾‍⚖️","man_judge_tone5":"👨🏿‍⚖️","man_juggling":"🤹‍♂️","man_juggling_tone1":"🤹🏻‍♂️","man_juggling_tone2":"🤹🏼‍♂️","man_juggling_tone3":"🤹🏽‍♂️","man_juggling_tone4":"🤹🏾‍♂️","man_juggling_tone5":"🤹🏿‍♂️","man_kneeling":"🧎‍♂️","man_kneeling_tone1":"🧎🏻‍♂️","man_kneeling_tone2":"🧎🏼‍♂️","man_kneeling_tone3":"🧎🏽‍♂️","man_kneeling_tone4":"🧎🏾‍♂️","man_kneeling_tone5":"🧎🏿‍♂️","man_lifting_weights":"🏋️‍♂️","man_lifting_weights_tone1":"🏋🏻‍♂️","man_lifting_weights_tone2":"🏋🏼‍♂️","man_lifting_weights_tone3":"🏋🏽‍♂️","man_lifting_weights_tone4":"🏋🏾‍♂️","man_lifting_weights_tone5":"🏋🏿‍♂️","man_mage":"🧙‍♂️","man_mage_tone1":"🧙🏻‍♂️","man_mage_tone2":"🧙🏼‍♂️","man_mage_tone3":"🧙🏽‍♂️","man_mage_tone4":"🧙🏾‍♂️","man_mage_tone5":"🧙🏿‍♂️","man_mechanic":"👨‍🔧","man_mechanic_tone1":"👨🏻‍🔧","man_mechanic_tone2":"👨🏼‍🔧","man_mechanic_tone3":"👨🏽‍🔧","man_mechanic_tone4":"👨🏾‍🔧","man_mechanic_tone5":"👨🏿‍🔧","man_mountain_biking":"🚵‍♂️","man_mountain_biking_tone1":"🚵🏻‍♂️","man_mountain_biking_tone2":"🚵🏼‍♂️","man_mountain_biking_tone3":"🚵🏽‍♂️","man_mountain_biking_tone4":"🚵🏾‍♂️","man_mountain_biking_tone5":"🚵🏿‍♂️","man_office_worker":"👨‍💼","man_office_worker_tone1":"👨🏻‍💼","man_office_worker_tone2":"👨🏼‍💼","man_office_worker_tone3":"👨🏽‍💼","man_office_worker_tone4":"👨🏾‍💼","man_office_worker_tone5":"👨🏿‍💼","man_pilot":"👨‍✈️","man_pilot_tone1":"👨🏻‍✈️","man_pilot_tone2":"👨🏼‍✈️","man_pilot_tone3":"👨🏽‍✈️","man_pilot_tone4":"👨🏾‍✈️","man_pilot_tone5":"👨🏿‍✈️","man_playing_handball":"🤾‍♂️","man_playing_handball_tone1":"🤾🏻‍♂️","man_playing_handball_tone2":"🤾🏼‍♂️","man_playing_handball_tone3":"🤾🏽‍♂️","man_playing_handball_tone4":"🤾🏾‍♂️","man_playing_handball_tone5":"🤾🏿‍♂️","man_playing_water_polo":"🤽‍♂️","man_playing_water_polo_tone1":"🤽🏻‍♂️","man_playing_water_polo_tone2":"🤽🏼‍♂️","man_playing_water_polo_tone3":"🤽🏽‍♂️","man_playing_water_polo_tone4":"🤽🏾‍♂️","man_playing_water_polo_tone5":"🤽🏿‍♂️","man_police_officer":"👮‍♂️","man_police_officer_tone1":"👮🏻‍♂️","man_police_officer_tone2":"👮🏼‍♂️","man_police_officer_tone3":"👮🏽‍♂️","man_police_officer_tone4":"👮🏾‍♂️","man_police_officer_tone5":"👮🏿‍♂️","man_pouting":"🙎‍♂️","man_pouting_tone1":"🙎🏻‍♂️","man_pouting_tone2":"🙎🏼‍♂️","man_pouting_tone3":"🙎🏽‍♂️","man_pouting_tone4":"🙎🏾‍♂️","man_pouting_tone5":"🙎🏿‍♂️","man_raising_hand":"🙋‍♂️","man_raising_hand_tone1":"🙋🏻‍♂️","man_raising_hand_tone2":"🙋🏼‍♂️","man_raising_hand_tone3":"🙋🏽‍♂️","man_raising_hand_tone4":"🙋🏾‍♂️","man_raising_hand_tone5":"🙋🏿‍♂️","man_red_haired":"👨‍🦰","man_red_haired_tone1":"👨🏻‍🦰","man_red_haired_tone2":"👨🏼‍🦰","man_red_haired_tone3":"👨🏽‍🦰","man_red_haired_tone4":"👨🏾‍🦰","man_red_haired_tone5":"👨🏿‍🦰","man_rowing_boat":"🚣‍♂️","man_rowing_boat_tone1":"🚣🏻‍♂️","man_rowing_boat_tone2":"🚣🏼‍♂️","man_rowing_boat_tone3":"🚣🏽‍♂️","man_rowing_boat_tone4":"🚣🏾‍♂️","man_rowing_boat_tone5":"🚣🏿‍♂️","man_running":"🏃‍♂️","man_running_tone1":"🏃🏻‍♂️","man_running_tone2":"🏃🏼‍♂️","man_running_tone3":"🏃🏽‍♂️","man_running_tone4":"🏃🏾‍♂️","man_running_tone5":"🏃🏿‍♂️","man_scientist":"👨‍🔬","man_scientist_tone1":"👨🏻‍🔬","man_scientist_tone2":"👨🏼‍🔬","man_scientist_tone3":"👨🏽‍🔬","man_scientist_tone4":"👨🏾‍🔬","man_scientist_tone5":"👨🏿‍🔬","man_shrugging":"🤷‍♂️","man_shrugging_tone1":"🤷🏻‍♂️","man_shrugging_tone2":"🤷🏼‍♂️","man_shrugging_tone3":"🤷🏽‍♂️","man_shrugging_tone4":"🤷🏾‍♂️","man_shrugging_tone5":"🤷🏿‍♂️","man_singer":"👨‍🎤","man_singer_tone1":"👨🏻‍🎤","man_singer_tone2":"👨🏼‍🎤","man_singer_tone3":"👨🏽‍🎤","man_singer_tone4":"👨🏾‍🎤","man_singer_tone5":"👨🏿‍🎤","man_standing":"🧍‍♂️","man_standing_tone1":"🧍🏻‍♂️","man_standing_tone2":"🧍🏼‍♂️","man_standing_tone3":"🧍🏽‍♂️","man_standing_tone4":"🧍🏾‍♂️","man_standing_tone5":"🧍🏿‍♂️","man_student":"👨‍🎓","man_student_tone1":"👨🏻‍🎓","man_student_tone2":"👨🏼‍🎓","man_student_tone3":"👨🏽‍🎓","man_student_tone4":"👨🏾‍🎓","man_student_tone5":"👨🏿‍🎓","man_superhero":"🦸‍♂️","man_superhero_tone1":"🦸🏻‍♂️","man_superhero_tone2":"🦸🏼‍♂️","man_superhero_tone3":"🦸🏽‍♂️","man_superhero_tone4":"🦸🏾‍♂️","man_superhero_tone5":"🦸🏿‍♂️","man_supervillain":"🦹‍♂️","man_supervillain_tone1":"🦹🏻‍♂️","man_supervillain_tone2":"🦹🏼‍♂️","man_supervillain_tone3":"🦹🏽‍♂️","man_supervillain_tone4":"🦹🏾‍♂️","man_supervillain_tone5":"🦹🏿‍♂️","man_surfing":"🏄‍♂️","man_surfing_tone1":"🏄🏻‍♂️","man_surfing_tone2":"🏄🏼‍♂️","man_surfing_tone3":"🏄🏽‍♂️","man_surfing_tone4":"🏄🏾‍♂️","man_surfing_tone5":"🏄🏿‍♂️","man_swimming":"🏊‍♂️","man_swimming_tone1":"🏊🏻‍♂️","man_swimming_tone2":"🏊🏼‍♂️","man_swimming_tone3":"🏊🏽‍♂️","man_swimming_tone4":"🏊🏾‍♂️","man_swimming_tone5":"🏊🏿‍♂️","man_teacher":"👨‍🏫","man_teacher_tone1":"👨🏻‍🏫","man_teacher_tone2":"👨🏼‍🏫","man_teacher_tone3":"👨🏽‍🏫","man_teacher_tone4":"👨🏾‍🏫","man_teacher_tone5":"👨🏿‍🏫","man_technologist":"👨‍💻","man_technologist_tone1":"👨🏻‍💻","man_technologist_tone2":"👨🏼‍💻","man_technologist_tone3":"👨🏽‍💻","man_technologist_tone4":"👨🏾‍💻","man_technologist_tone5":"👨🏿‍💻","man_tipping_hand":"💁‍♂️","man_tipping_hand_tone1":"💁🏻‍♂️","man_tipping_hand_tone2":"💁🏼‍♂️","man_tipping_hand_tone3":"💁🏽‍♂️","man_tipping_hand_tone4":"💁🏾‍♂️","man_tipping_hand_tone5":"💁🏿‍♂️","man_tone1":"👨🏻","man_tone2":"👨🏼","man_tone3":"👨🏽","man_tone4":"👨🏾","man_tone5":"👨🏿","man_vampire":"🧛‍♂️","man_vampire_tone1":"🧛🏻‍♂️","man_vampire_tone2":"🧛🏼‍♂️","man_vampire_tone3":"🧛🏽‍♂️","man_vampire_tone4":"🧛🏾‍♂️","man_vampire_tone5":"🧛🏿‍♂️","man_walking":"🚶‍♂️","man_walking_tone1":"🚶🏻‍♂️","man_walking_tone2":"🚶🏼‍♂️","man_walking_tone3":"🚶🏽‍♂️","man_walking_tone4":"🚶🏾‍♂️","man_walking_tone5":"🚶🏿‍♂️","man_wearing_turban":"👳‍♂️","man_wearing_turban_tone1":"👳🏻‍♂️","man_wearing_turban_tone2":"👳🏼‍♂️","man_wearing_turban_tone3":"👳🏽‍♂️","man_wearing_turban_tone4":"👳🏾‍♂️","man_wearing_turban_tone5":"👳🏿‍♂️","man_white_haired":"👨‍🦳","man_white_haired_tone1":"👨🏻‍🦳","man_white_haired_tone2":"👨🏼‍🦳","man_white_haired_tone3":"👨🏽‍🦳","man_white_haired_tone4":"👨🏾‍🦳","man_white_haired_tone5":"👨🏿‍🦳","man_with_gua_pi_mao":"👲","man_with_probing_cane":"👨‍🦯","man_with_probing_cane_tone1":"👨🏻‍🦯","man_with_probing_cane_tone2":"👨🏼‍🦯","man_with_probing_cane_tone3":"👨🏽‍🦯","man_with_probing_cane_tone4":"👨🏾‍🦯","man_with_probing_cane_tone5":"👨🏿‍🦯","man_with_turban":"👳‍♂️","man_with_veil":"👰‍♂️","man_with_veil_tone1":"👰🏻‍♂️","man_with_veil_tone2":"👰🏼‍♂️","man_with_veil_tone3":"👰🏽‍♂️","man_with_veil_tone4":"👰🏾‍♂️","man_with_veil_tone5":"👰🏿‍♂️","man_with_white_cane":"👨‍🦯","man_with_white_cane_tone1":"👨🏻‍🦯","man_with_white_cane_tone2":"👨🏼‍🦯","man_with_white_cane_tone3":"👨🏽‍🦯","man_with_white_cane_tone4":"👨🏾‍🦯","man_with_white_cane_tone5":"👨🏿‍🦯","man_zombie":"🧟‍♂️","mandarin":"🍊","mango":"🥭","mans_shoe":"👞","mantelpiece_clock":"🕰","manual_wheelchair":"🦽","maple_leaf":"🍁","marshall_islands":"🇲🇭","martial_arts_uniform":"🥋","martinique":"🇲🇶","mask":"😷","massage":"💆","massage_man":"💆‍♂️","massage_tone1":"💆🏻","massage_tone2":"💆🏼","massage_tone3":"💆🏽","massage_tone4":"💆🏾","massage_tone5":"💆🏿","massage_woman":"💆‍♀️","mate":"🧉","mauritania":"🇲🇷","mauritius":"🇲🇺","mayotte":"🇾🇹","meat_on_bone":"🍖","mechanic":"🧑‍🔧","mechanic_tone1":"🧑🏻‍🔧","mechanic_tone2":"🧑🏼‍🔧","mechanic_tone3":"🧑🏽‍🔧","mechanic_tone4":"🧑🏾‍🔧","mechanic_tone5":"🧑🏿‍🔧","mechanical_arm":"🦾","mechanical_leg":"🦿","medal_military":"🎖","medal_sports":"🏅","medical":"⚕","medical_mask":"😷","medical_symbol":"⚕","medium_volumne":"🔉","mega":"📣","megaphone":"📣","melon":"🍈","mem":"📝","memo":"📝","men_with_bunny_ears_partying":"👯‍♂️","men_wrestling":"🤼‍♂️","menorah":"🕎","mens":"🚹","mermaid":"🧜‍♀️","mermaid_tone1":"🧜🏻‍♀️","mermaid_tone2":"🧜🏼‍♀️","mermaid_tone3":"🧜🏽‍♀️","mermaid_tone4":"🧜🏾‍♀️","mermaid_tone5":"🧜🏿‍♀️","merman":"🧜‍♂️","merman_tone1":"🧜🏻‍♂️","merman_tone2":"🧜🏼‍♂️","merman_tone3":"🧜🏽‍♂️","merman_tone4":"🧜🏾‍♂️","merman_tone5":"🧜🏿‍♂️","merperson":"🧜","merperson_tone1":"🧜🏻","merperson_tone2":"🧜🏼","merperson_tone3":"🧜🏽","merperson_tone4":"🧜🏾","merperson_tone5":"🧜🏿","metal":"🤘","metal_tone1":"🤘🏻","metal_tone2":"🤘🏼","metal_tone3":"🤘🏽","metal_tone4":"🤘🏾","metal_tone5":"🤘🏿","metro":"🚇","mexico":"🇲🇽","microbe":"🦠","micronesia":"🇫🇲","microphone":"🎤","microscope":"🔬","middle_finger":"🖕","middle_finger_tone1":"🖕🏻","middle_finger_tone2":"🖕🏼","middle_finger_tone3":"🖕🏽","middle_finger_tone4":"🖕🏾","middle_finger_tone5":"🖕🏿","military_helmet":"🪖","military_medal":"🎖","milk":"🥛","milk_glass":"🥛","milky_way":"🌌","minibus":"🚐","minidisc":"💽","minus":"➖","mirror":"🪞","moai":"🗿","mobile_phone":"📱","mobile_phone_arrow":"📲","mobile_phone_off":"📴","moldova":"🇲🇩","monaco":"🇲🇨","money_mouth_face":"🤑","money_with_wings":"💸","moneybag":"💰","mongolia":"🇲🇳","monkey":"🐒","monkey_face":"🐵","monocle_face":"🧐","monorail":"🚝","montenegro":"🇲🇪","montserrat":"🇲🇸","moon":"🌔","moon_cake":"🥮","moon_ceremony":"🎑","morocco":"🇲🇦","mortar_board":"🎓","mosque":"🕌","mosquito":"🦟","motor_boat":"🛥","motor_scooter":"🛵","motorboat":"🛥","motorcycle":"🏍","motorized_wheelchair":"🦼","motorway":"🛣","mount_fuji":"🗻","mountain":"⛰","mountain_bicyclist":"🚵","mountain_bicyclist_tone1":"🚵🏻","mountain_bicyclist_tone2":"🚵🏼","mountain_bicyclist_tone3":"🚵🏽","mountain_bicyclist_tone4":"🚵🏾","mountain_bicyclist_tone5":"🚵🏿","mountain_biking":"🚵","mountain_biking_man":"🚵‍♂️","mountain_biking_tone1":"🚵🏻","mountain_biking_tone2":"🚵🏼","mountain_biking_tone3":"🚵🏽","mountain_biking_tone4":"🚵🏾","mountain_biking_tone5":"🚵🏿","mountain_biking_woman":"🚵‍♀️","mountain_cableway":"🚠","mountain_railway":"🚞","mountain_snow":"🏔","mouse":"🐭","mouse2":"🐁","mouse_face":"🐭","mouse_trap":"🪤","mouth":"👄","movie_camera":"🎥","moyai":"🗿","mozambique":"🇲🇿","mrs_claus":"🤶","mrs_claus_tone1":"🤶🏻","mrs_claus_tone2":"🤶🏼","mrs_claus_tone3":"🤶🏽","mrs_claus_tone4":"🤶🏾","mrs_claus_tone5":"🤶🏿","multiplication":"✖","multiply":"✖","muscle":"💪","muscle_tone1":"💪🏻","muscle_tone2":"💪🏼","muscle_tone3":"💪🏽","muscle_tone4":"💪🏾","muscle_tone5":"💪🏿","mushroom":"🍄","musical_keyboard":"🎹","musical_note":"🎵","musical_notes":"🎶","musical_score":"🎼","mut":"🔇","mute":"🔇","mx_claus":"🧑‍🎄","mx_claus_tone1":"🧑🏻‍🎄","mx_claus_tone2":"🧑🏼‍🎄","mx_claus_tone3":"🧑🏽‍🎄","mx_claus_tone4":"🧑🏾‍🎄","mx_claus_tone5":"🧑🏿‍🎄","myanmar":"🇲🇲","nail_care":"💅","nail_care_tone1":"💅🏻","nail_care_tone2":"💅🏼","nail_care_tone3":"💅🏽","nail_care_tone4":"💅🏾","nail_care_tone5":"💅🏿","nail_polish":"💅","nail_polish_tone1":"💅🏻","nail_polish_tone2":"💅🏼","nail_polish_tone3":"💅🏽","nail_polish_tone4":"💅🏾","nail_polish_tone5":"💅🏿","name_badge":"📛","namibia":"🇳🇦","national_park":"🏞","nauru":"🇳🇷","nauseated":"🤢","nauseated_face":"🤢","nazar_amulet":"🧿","necktie":"👔","negative_squared_cross_mark":"❎","nepal":"🇳🇵","nerd":"🤓","nerd_face":"🤓","nesting_dolls":"🪆","netherlands":"🇳🇱","neutral":"😐","neutral_face":"😐","new":"🆕","new_caledonia":"🇳🇨","new_moon":"🌑","new_moon_with_face":"🌚","new_zealand":"🇳🇿","newspaper":"📰","newspaper_roll":"🗞","next_track":"⏭","next_track_button":"⏭","ng":"🆖","ng_man":"🙅‍♂️","ng_woman":"🙅‍♀️","nicaragua":"🇳🇮","niger":"🇳🇪","nigeria":"🇳🇬","night_with_stars":"🌃","nine":"9️⃣","ninja":"🥷","ninja_tone1":"🥷🏻","ninja_tone2":"🥷🏼","ninja_tone3":"🥷🏽","ninja_tone4":"🥷🏾","ninja_tone5":"🥷🏿","niue":"🇳🇺","no":"👎","no_bell":"🔕","no_bicycles":"🚳","no_entry":"⛔","no_entry_sign":"🚫","no_good":"🙅","no_good_man":"🙅‍♂️","no_good_tone1":"🙅🏻","no_good_tone2":"🙅🏼","no_good_tone3":"🙅🏽","no_good_tone4":"🙅🏾","no_good_tone5":"🙅🏿","no_good_woman":"🙅‍♀️","no_hair":"🦲","no_littering":"🚯","no_mobile_phones":"📵","no_mouth":"😶","no_one_under_18":"🔞","no_pedestrians":"🚷","no_smoking":"🚭","no_sound":"🔇","no_tone1":"👎🏻","no_tone2":"👎🏼","no_tone3":"👎🏽","no_tone4":"👎🏾","no_tone5":"👎🏿","non-potable_water":"🚱","norfolk_island":"🇳🇫","north_korea":"🇰🇵","northern_mariana_islands":"🇲🇵","norway":"🇳🇴","nose":"👃","nose_steam":"😤","nose_tone1":"👃🏻","nose_tone2":"👃🏼","nose_tone3":"👃🏽","nose_tone4":"👃🏾","nose_tone5":"👃🏿","notebook":"📓","notebook_with_decorative_cover":"📔","notepad_spiral":"🗒","notes":"🎶","number_sign":"#️⃣","nut_and_bolt":"🔩","o":"⭕","o2":"🅾","o_blood":"🅾","ocean":"🌊","octagonal_sign":"🛑","octopus":"🐙","oden":"🍢","office":"🏢","office_worker":"🧑‍💼","office_worker_tone1":"🧑🏻‍💼","office_worker_tone2":"🧑🏼‍💼","office_worker_tone3":"🧑🏽‍💼","office_worker_tone4":"🧑🏾‍💼","office_worker_tone5":"🧑🏿‍💼","ogre":"👹","oil_drum":"🛢","ok":"🆗","ok_hand":"👌","ok_hand_tone1":"👌🏻","ok_hand_tone2":"👌🏼","ok_hand_tone3":"👌🏽","ok_hand_tone4":"👌🏾","ok_hand_tone5":"👌🏿","ok_man":"🙆‍♂️","ok_person":"🙆","ok_woman":"🙆‍♀️","old_key":"🗝","older_adult":"🧓","older_adult_tone1":"🧓🏻","older_adult_tone2":"🧓🏼","older_adult_tone3":"🧓🏽","older_adult_tone4":"🧓🏾","older_adult_tone5":"🧓🏿","older_man":"👴","older_man_tone1":"👴🏻","older_man_tone2":"👴🏼","older_man_tone3":"👴🏽","older_man_tone4":"👴🏾","older_man_tone5":"👴🏿","older_woman":"👵","older_woman_tone1":"👵🏻","older_woman_tone2":"👵🏼","older_woman_tone3":"👵🏽","older_woman_tone4":"👵🏾","older_woman_tone5":"👵🏿","olive":"🫒","om":"🕉","oman":"🇴🇲","on":"🔛","oncoming_automobile":"🚘","oncoming_bus":"🚍","oncoming_police_car":"🚔","oncoming_taxi":"🚖","one":"1️⃣","one_piece_swimsuit":"🩱","onion":"🧅","open_book":"📖","open_file_folder":"📂","open_hands":"👐","open_hands_tone1":"👐🏻","open_hands_tone2":"👐🏼","open_hands_tone3":"👐🏽","open_hands_tone4":"👐🏾","open_hands_tone5":"👐🏿","open_mouth":"😮","open_umbrella":"☂","ophiuchus":"⛎","optical_disk":"💿","orange":"🍊","orange_book":"📙","orange_circle":"🟠","orange_heart":"🧡","orange_square":"🟧","orangutan":"🦧","orthodox_cross":"☦","otter":"🦦","outbox_tray":"📤","owl":"🦉","ox":"🐂","oyster":"🦪","packag":"📦","package":"📦","page_facing_u":"📄","page_facing_up":"📄","page_with_curl":"📃","pager":"📟","paintbrush":"🖌","pakistan":"🇵🇰","palau":"🇵🇼","palestinian_territories":"🇵🇸","palette":"🎨","palm_tree":"🌴","palms_up_together":"🤲","palms_up_together_tone1":"🤲🏻","palms_up_together_tone2":"🤲🏼","palms_up_together_tone3":"🤲🏽","palms_up_together_tone4":"🤲🏾","palms_up_together_tone5":"🤲🏿","panama":"🇵🇦","pancakes":"🥞","panda":"🐼","panda_face":"🐼","paperclip":"📎","paperclips":"🖇","papua_new_guinea":"🇵🇬","parachute":"🪂","paraguay":"🇵🇾","parasol_on_ground":"⛱","parking":"🅿","parrot":"🦜","part_alternation_mark":"〽","partly_sunny":"⛅","party":"🎉","party_popper":"🎉","partying":"🥳","partying_face":"🥳","passenger_ship":"🛳","passport_control":"🛂","pause":"⏸","pause_button":"⏸","paw_prints":"🐾","peace":"☮","peace_symbol":"☮","peach":"🍑","peacock":"🦚","peanuts":"🥜","pear":"🍐","pen":"🖊","pencil":"📝","pencil2":"✏","penguin":"🐧","penguin_face":"🐧","pensive":"😔","pensive_face":"😔","people_holding_hands":"🧑‍🤝‍🧑","people_holding_hands_tone1":"🧑🏻‍🤝‍🧑🏻","people_holding_hands_tone1-2":"🧑🏻‍🤝‍🧑🏼","people_holding_hands_tone1-3":"🧑🏻‍🤝‍🧑🏽","people_holding_hands_tone1-4":"🧑🏻‍🤝‍🧑🏾","people_holding_hands_tone1-5":"🧑🏻‍🤝‍🧑🏿","people_holding_hands_tone2":"🧑🏼‍🤝‍🧑🏼","people_holding_hands_tone2-1":"🧑🏼‍🤝‍🧑🏻","people_holding_hands_tone2-3":"🧑🏼‍🤝‍🧑🏽","people_holding_hands_tone2-4":"🧑🏼‍🤝‍🧑🏾","people_holding_hands_tone2-5":"🧑🏼‍🤝‍🧑🏿","people_holding_hands_tone3":"🧑🏽‍🤝‍🧑🏽","people_holding_hands_tone3-1":"🧑🏽‍🤝‍🧑🏻","people_holding_hands_tone3-2":"🧑🏽‍🤝‍🧑🏼","people_holding_hands_tone3-4":"🧑🏽‍🤝‍🧑🏾","people_holding_hands_tone3-5":"🧑🏽‍🤝‍🧑🏿","people_holding_hands_tone4":"🧑🏾‍🤝‍🧑🏾","people_holding_hands_tone4-1":"🧑🏾‍🤝‍🧑🏻","people_holding_hands_tone4-2":"🧑🏾‍🤝‍🧑🏼","people_holding_hands_tone4-3":"🧑🏾‍🤝‍🧑🏽","people_holding_hands_tone4-5":"🧑🏾‍🤝‍🧑🏿","people_holding_hands_tone5":"🧑🏿‍🤝‍🧑🏿","people_holding_hands_tone5-1":"🧑🏿‍🤝‍🧑🏻","people_holding_hands_tone5-2":"🧑🏿‍🤝‍🧑🏼","people_holding_hands_tone5-3":"🧑🏿‍🤝‍🧑🏽","people_holding_hands_tone5-4":"🧑🏿‍🤝‍🧑🏾","people_hugging":"🫂","people_with_bunny_ears_partying":"👯","people_wrestling":"🤼","performing_arts":"🎭","persevere":"😣","persevering_face":"😣","person_bald":"🧑‍🦲","person_biking":"🚴","person_biking_tone1":"🚴🏻","person_biking_tone2":"🚴🏼","person_biking_tone3":"🚴🏽","person_biking_tone4":"🚴🏾","person_biking_tone5":"🚴🏿","person_bouncing_ball":"⛹","person_bouncing_ball_tone1":"⛹🏻","person_bouncing_ball_tone2":"⛹🏼","person_bouncing_ball_tone3":"⛹🏽","person_bouncing_ball_tone4":"⛹🏾","person_bouncing_ball_tone5":"⛹🏿","person_bowing":"🙇","person_bowing_tone1":"🙇🏻","person_bowing_tone2":"🙇🏼","person_bowing_tone3":"🙇🏽","person_bowing_tone4":"🙇🏾","person_bowing_tone5":"🙇🏿","person_cartwheel":"🤸","person_cartwheel_tone1":"🤸🏻","person_cartwheel_tone2":"🤸🏼","person_cartwheel_tone3":"🤸🏽","person_cartwheel_tone4":"🤸🏾","person_cartwheel_tone5":"🤸🏿","person_climbing":"🧗","person_climbing_tone1":"🧗🏻","person_climbing_tone2":"🧗🏼","person_climbing_tone3":"🧗🏽","person_climbing_tone4":"🧗🏾","person_climbing_tone5":"🧗🏿","person_curly_hair":"🧑‍🦱","person_facepalming":"🤦","person_facepalming_tone1":"🤦🏻","person_facepalming_tone2":"🤦🏼","person_facepalming_tone3":"🤦🏽","person_facepalming_tone4":"🤦🏾","person_facepalming_tone5":"🤦🏿","person_feeding_baby":"🧑‍🍼","person_feeding_baby_tone1":"🧑🏻‍🍼","person_feeding_baby_tone2":"🧑🏼‍🍼","person_feeding_baby_tone3":"🧑🏽‍🍼","person_feeding_baby_tone4":"🧑🏾‍🍼","person_feeding_baby_tone5":"🧑🏿‍🍼","person_fencing":"🤺","person_frowning":"🙍","person_frowning_tone1":"🙍🏻","person_frowning_tone2":"🙍🏼","person_frowning_tone3":"🙍🏽","person_frowning_tone4":"🙍🏾","person_frowning_tone5":"🙍🏿","person_gesturing_no":"🙅","person_gesturing_no_tone1":"🙅🏻","person_gesturing_no_tone2":"🙅🏼","person_gesturing_no_tone3":"🙅🏽","person_gesturing_no_tone4":"🙅🏾","person_gesturing_no_tone5":"🙅🏿","person_gesturing_ok":"🙆","person_gesturing_ok_tone1":"🙆🏻","person_gesturing_ok_tone2":"🙆🏼","person_gesturing_ok_tone3":"🙆🏽","person_gesturing_ok_tone4":"🙆🏾","person_gesturing_ok_tone5":"🙆🏿","person_getting_haircut":"💇","person_getting_haircut_tone1":"💇🏻","person_getting_haircut_tone2":"💇🏼","person_getting_haircut_tone3":"💇🏽","person_getting_haircut_tone4":"💇🏾","person_getting_haircut_tone5":"💇🏿","person_getting_massage":"💆","person_getting_massage_tone1":"💆🏻","person_getting_massage_tone2":"💆🏼","person_getting_massage_tone3":"💆🏽","person_getting_massage_tone4":"💆🏾","person_getting_massage_tone5":"💆🏿","person_golfing":"🏌","person_golfing_tone1":"🏌🏻","person_golfing_tone2":"🏌🏼","person_golfing_tone3":"🏌🏽","person_golfing_tone4":"🏌🏾","person_golfing_tone5":"🏌🏿","person_in_bed":"🛌","person_in_bed_tone1":"🛌🏻","person_in_bed_tone2":"🛌🏼","person_in_bed_tone3":"🛌🏽","person_in_bed_tone4":"🛌🏾","person_in_bed_tone5":"🛌🏿","person_in_lotus_position":"🧘","person_in_lotus_position_tone1":"🧘🏻","person_in_lotus_position_tone2":"🧘🏼","person_in_lotus_position_tone3":"🧘🏽","person_in_lotus_position_tone4":"🧘🏾","person_in_lotus_position_tone5":"🧘🏿","person_in_manual_wheelchair":"🧑‍🦽","person_in_manual_wheelchair_tone1":"🧑🏻‍🦽","person_in_manual_wheelchair_tone2":"🧑🏼‍🦽","person_in_manual_wheelchair_tone3":"🧑🏽‍🦽","person_in_manual_wheelchair_tone4":"🧑🏾‍🦽","person_in_manual_wheelchair_tone5":"🧑🏿‍🦽","person_in_motorized_wheelchair":"🧑‍🦼","person_in_motorized_wheelchair_tone1":"🧑🏻‍🦼","person_in_motorized_wheelchair_tone2":"🧑🏼‍🦼","person_in_motorized_wheelchair_tone3":"🧑🏽‍🦼","person_in_motorized_wheelchair_tone4":"🧑🏾‍🦼","person_in_motorized_wheelchair_tone5":"🧑🏿‍🦼","person_in_steamy_room":"🧖","person_in_steamy_room_tone1":"🧖🏻","person_in_steamy_room_tone2":"🧖🏼","person_in_steamy_room_tone3":"🧖🏽","person_in_steamy_room_tone4":"🧖🏾","person_in_steamy_room_tone5":"🧖🏿","person_in_suit_levitating":"🕴","person_in_suit_levitating_tone1":"🕴🏻","person_in_suit_levitating_tone2":"🕴🏼","person_in_suit_levitating_tone3":"🕴🏽","person_in_suit_levitating_tone4":"🕴🏾","person_in_suit_levitating_tone5":"🕴🏿","person_in_tuxedo":"🤵","person_in_tuxedo_tone1":"🤵🏻","person_in_tuxedo_tone2":"🤵🏼","person_in_tuxedo_tone3":"🤵🏽","person_in_tuxedo_tone4":"🤵🏾","person_in_tuxedo_tone5":"🤵🏿","person_juggling":"🤹","person_juggling_tone1":"🤹🏻","person_juggling_tone2":"🤹🏼","person_juggling_tone3":"🤹🏽","person_juggling_tone4":"🤹🏾","person_juggling_tone5":"🤹🏿","person_kneeling":"🧎","person_kneeling_tone1":"🧎🏻","person_kneeling_tone2":"🧎🏼","person_kneeling_tone3":"🧎🏽","person_kneeling_tone4":"🧎🏾","person_kneeling_tone5":"🧎🏿","person_lifting_weights":"🏋","person_lifting_weights_tone1":"🏋🏻","person_lifting_weights_tone2":"🏋🏼","person_lifting_weights_tone3":"🏋🏽","person_lifting_weights_tone4":"🏋🏾","person_lifting_weights_tone5":"🏋🏿","person_mountain_biking":"🚵","person_mountain_biking_tone1":"🚵🏻","person_mountain_biking_tone2":"🚵🏼","person_mountain_biking_tone3":"🚵🏽","person_mountain_biking_tone4":"🚵🏾","person_mountain_biking_tone5":"🚵🏿","person_playing_handball":"🤾","person_playing_handball_tone1":"🤾🏻","person_playing_handball_tone2":"🤾🏼","person_playing_handball_tone3":"🤾🏽","person_playing_handball_tone4":"🤾🏾","person_playing_handball_tone5":"🤾🏿","person_playing_water_polo":"🤽","person_playing_water_polo_tone1":"🤽🏻","person_playing_water_polo_tone2":"🤽🏼","person_playing_water_polo_tone3":"🤽🏽","person_playing_water_polo_tone4":"🤽🏾","person_playing_water_polo_tone5":"🤽🏿","person_pouting":"🙎","person_pouting_tone1":"🙎🏻","person_pouting_tone2":"🙎🏼","person_pouting_tone3":"🙎🏽","person_pouting_tone4":"🙎🏾","person_pouting_tone5":"🙎🏿","person_raising_hand":"🙋","person_raising_hand_tone1":"🙋🏻","person_raising_hand_tone2":"🙋🏼","person_raising_hand_tone3":"🙋🏽","person_raising_hand_tone4":"🙋🏾","person_raising_hand_tone5":"🙋🏿","person_red_hair":"🧑‍🦰","person_rowing_boat":"🚣","person_rowing_boat_tone1":"🚣🏻","person_rowing_boat_tone2":"🚣🏼","person_rowing_boat_tone3":"🚣🏽","person_rowing_boat_tone4":"🚣🏾","person_rowing_boat_tone5":"🚣🏿","person_running":"🏃","person_running_tone1":"🏃🏻","person_running_tone2":"🏃🏼","person_running_tone3":"🏃🏽","person_running_tone4":"🏃🏾","person_running_tone5":"🏃🏿","person_shrugging":"🤷","person_shrugging_tone1":"🤷🏻","person_shrugging_tone2":"🤷🏼","person_shrugging_tone3":"🤷🏽","person_shrugging_tone4":"🤷🏾","person_shrugging_tone5":"🤷🏿","person_skiing":"⛷","person_snowboarding":"🏂","person_snowboarding_tone1":"🏂🏻","person_snowboarding_tone2":"🏂🏼","person_snowboarding_tone3":"🏂🏽","person_snowboarding_tone4":"🏂🏾","person_snowboarding_tone5":"🏂🏿","person_standing":"🧍","person_standing_tone1":"🧍🏻","person_standing_tone2":"🧍🏼","person_standing_tone3":"🧍🏽","person_standing_tone4":"🧍🏾","person_standing_tone5":"🧍🏿","person_surfing":"🏄","person_surfing_tone1":"🏄🏻","person_surfing_tone2":"🏄🏼","person_surfing_tone3":"🏄🏽","person_surfing_tone4":"🏄🏾","person_surfing_tone5":"🏄🏿","person_swimming":"🏊","person_swimming_tone1":"🏊🏻","person_swimming_tone2":"🏊🏼","person_swimming_tone3":"🏊🏽","person_swimming_tone4":"🏊🏾","person_swimming_tone5":"🏊🏿","person_taking_bath":"🛀","person_taking_bath_tone1":"🛀🏻","person_taking_bath_tone2":"🛀🏼","person_taking_bath_tone3":"🛀🏽","person_taking_bath_tone4":"🛀🏾","person_taking_bath_tone5":"🛀🏿","person_tipping_hand":"💁","person_tipping_hand_tone1":"💁🏻","person_tipping_hand_tone2":"💁🏼","person_tipping_hand_tone3":"💁🏽","person_tipping_hand_tone4":"💁🏾","person_tipping_hand_tone5":"💁🏿","person_walking":"🚶","person_walking_tone1":"🚶🏻","person_walking_tone2":"🚶🏼","person_walking_tone3":"🚶🏽","person_walking_tone4":"🚶🏾","person_walking_tone5":"🚶🏿","person_wearing_turban":"👳","person_wearing_turban_tone1":"👳🏻","person_wearing_turban_tone2":"👳🏼","person_wearing_turban_tone3":"👳🏽","person_wearing_turban_tone4":"👳🏾","person_wearing_turban_tone5":"👳🏿","person_white_hair":"🧑‍🦳","person_with_probing_cane":"🧑‍🦯","person_with_probing_cane_tone1":"🧑🏻‍🦯","person_with_probing_cane_tone2":"🧑🏼‍🦯","person_with_probing_cane_tone3":"🧑🏽‍🦯","person_with_probing_cane_tone4":"🧑🏾‍🦯","person_with_probing_cane_tone5":"🧑🏿‍🦯","person_with_skullcap":"👲","person_with_skullcap_tone1":"👲🏻","person_with_skullcap_tone2":"👲🏼","person_with_skullcap_tone3":"👲🏽","person_with_skullcap_tone4":"👲🏾","person_with_skullcap_tone5":"👲🏿","person_with_turban":"👳","person_with_veil":"👰","person_with_veil_tone1":"👰🏻","person_with_veil_tone2":"👰🏼","person_with_veil_tone3":"👰🏽","person_with_veil_tone4":"👰🏾","person_with_veil_tone5":"👰🏿","person_with_white_cane":"🧑‍🦯","person_with_white_cane_tone1":"🧑🏻‍🦯","person_with_white_cane_tone2":"🧑🏼‍🦯","person_with_white_cane_tone3":"🧑🏽‍🦯","person_with_white_cane_tone4":"🧑🏾‍🦯","person_with_white_cane_tone5":"🧑🏿‍🦯","peru":"🇵🇪","petri_dish":"🧫","philippines":"🇵🇭","phone":"☎","pick":"⛏","pickup_truck":"🛻","pie":"🥧","pig":"🐷","pig2":"🐖","pig_face":"🐷","pig_nose":"🐽","pill":"💊","pilot":"🧑‍✈️","pilot_tone1":"🧑🏻‍✈️","pilot_tone2":"🧑🏼‍✈️","pilot_tone3":"🧑🏽‍✈️","pilot_tone4":"🧑🏾‍✈️","pilot_tone5":"🧑🏿‍✈️","pinata":"🪅","pinch":"🤌","pinch_tone1":"🤌🏻","pinch_tone2":"🤌🏼","pinch_tone3":"🤌🏽","pinch_tone4":"🤌🏾","pinch_tone5":"🤌🏿","pinched_fingers":"🤌","pinched_fingers_tone1":"🤌🏻","pinched_fingers_tone2":"🤌🏼","pinched_fingers_tone3":"🤌🏽","pinched_fingers_tone4":"🤌🏾","pinched_fingers_tone5":"🤌🏿","pinching_hand":"🤏","pinching_hand_tone1":"🤏🏻","pinching_hand_tone2":"🤏🏼","pinching_hand_tone3":"🤏🏽","pinching_hand_tone4":"🤏🏾","pinching_hand_tone5":"🤏🏿","pineapple":"🍍","ping_pong":"🏓","pirate_flag":"🏴‍☠️","pisces":"♓","pistol":"🔫","pitcairn_islands":"🇵🇳","pizza":"🍕","placard":"🪧","place_of_worship":"🛐","plate_with_cutlery":"🍽","play":"▶","play_or_pause_button":"⏯","play_pause":"⏯","pleading":"🥺","pleading_face":"🥺","plunger":"🪠","plus":"➕","point_down":"👇","point_down_tone1":"👇🏻","point_down_tone2":"👇🏼","point_down_tone3":"👇🏽","point_down_tone4":"👇🏾","point_down_tone5":"👇🏿","point_left":"👈","point_left_tone1":"👈🏻","point_left_tone2":"👈🏼","point_left_tone3":"👈🏽","point_left_tone4":"👈🏾","point_left_tone5":"👈🏿","point_right":"👉","point_right_tone1":"👉🏻","point_right_tone2":"👉🏼","point_right_tone3":"👉🏽","point_right_tone4":"👉🏾","point_right_tone5":"👉🏿","point_up":"☝","point_up_2":"👆","point_up_2_tone1":"☝🏻","point_up_2_tone2":"☝🏼","point_up_2_tone3":"☝🏽","point_up_2_tone4":"☝🏾","point_up_2_tone5":"☝🏿","point_up_tone1":"👆🏻","point_up_tone2":"👆🏼","point_up_tone3":"👆🏽","point_up_tone4":"👆🏾","point_up_tone5":"👆🏿","poland":"🇵🇱","polar_bear":"🐻‍❄️","polar_bear_face":"🐻‍❄️","police_car":"🚓","police_officer":"👮","police_officer_tone1":"👮🏻","police_officer_tone2":"👮🏼","police_officer_tone3":"👮🏽","police_officer_tone4":"👮🏾","police_officer_tone5":"👮🏿","policeman":"👮‍♂️","policewoman":"👮‍♀️","poo":"💩","poodle":"🐩","poop":"💩","popcorn":"🍿","portugal":"🇵🇹","post_office":"🏣","postal_horn":"📯","postbox":"📮","pot_of_food":"🍲","potable_water":"🚰","potato":"🥔","potted_plant":"🪴","pouch":"👝","poultry_leg":"🍗","pound":"💷","pout":"😡","pouting":"🙎","pouting_cat":"😾","pouting_face":"🙎","pouting_man":"🙎‍♂️","pouting_tone1":"🙎🏻","pouting_tone2":"🙎🏼","pouting_tone3":"🙎🏽","pouting_tone4":"🙎🏾","pouting_tone5":"🙎🏿","pouting_woman":"🙎‍♀️","pray":"🙏","pray_tone1":"🙏🏻","pray_tone2":"🙏🏼","pray_tone3":"🙏🏽","pray_tone4":"🙏🏾","pray_tone5":"🙏🏿","prayer_beads":"📿","pregnant_woman":"🤰","pregnant_woman_tone1":"🤰🏻","pregnant_woman_tone2":"🤰🏼","pregnant_woman_tone3":"🤰🏽","pregnant_woman_tone4":"🤰🏾","pregnant_woman_tone5":"🤰🏿","pretzel":"🥨","previous_track":"⏮","previous_track_button":"⏮","prince":"🤴","prince_tone1":"🤴🏻","prince_tone2":"🤴🏼","prince_tone3":"🤴🏽","prince_tone4":"🤴🏾","prince_tone5":"🤴🏿","princess":"👸","princess_tone1":"👸🏻","princess_tone2":"👸🏼","princess_tone3":"👸🏽","princess_tone4":"👸🏾","princess_tone5":"👸🏿","printer":"🖨","probing_cane":"🦯","puerto_rico":"🇵🇷","punch":"👊","punch_tone1":"👊🏻","punch_tone2":"👊🏼","punch_tone3":"👊🏽","punch_tone4":"👊🏾","punch_tone5":"👊🏿","purple_circle":"🟣","purple_heart":"💜","purple_square":"🟪","purse":"👛","pushpi":"📌","pushpin":"📌","put_litter_in_its_place":"🚮","puzzle_piece":"🧩","qatar":"🇶🇦","question":"❓","quiet_sound":"🔈","rabbit":"🐰","rabbit2":"🐇","rabbit_face":"🐰","raccoon":"🦝","racehorse":"🐎","racing_car":"🏎","radio":"📻","radio_button":"🔘","radioactive":"☢","rage":"😡","railway_car":"🚃","railway_track":"🛤","rainbow":"🌈","rainbow_flag":"🏳️‍🌈","rainy":"🌧","raised_back_of_hand":"🤚","raised_back_of_hand_tone1":"🤚🏻","raised_back_of_hand_tone2":"🤚🏼","raised_back_of_hand_tone3":"🤚🏽","raised_back_of_hand_tone4":"🤚🏾","raised_back_of_hand_tone5":"🤚🏿","raised_eyebrow":"🤨","raised_hand":"✋","raised_hand_tone1":"✋🏻","raised_hand_tone2":"✋🏼","raised_hand_tone3":"✋🏽","raised_hand_tone4":"✋🏾","raised_hand_tone5":"✋🏿","raised_hand_with_fingers_splayed":"🖐","raised_hand_with_fingers_splayed_tone1":"🖐🏻","raised_hand_with_fingers_splayed_tone2":"🖐🏼","raised_hand_with_fingers_splayed_tone3":"🖐🏽","raised_hand_with_fingers_splayed_tone4":"🖐🏾","raised_hand_with_fingers_splayed_tone5":"🖐🏿","raised_hands":"🙌","raised_hands_tone1":"🙌🏻","raised_hands_tone2":"🙌🏼","raised_hands_tone3":"🙌🏽","raised_hands_tone4":"🙌🏾","raised_hands_tone5":"🙌🏿","raising_hand":"🙋","raising_hand_man":"🙋‍♂️","raising_hand_woman":"🙋‍♀️","ram":"🐏","ramen":"🍜","rat":"🐀","razor":"🪒","receipt":"🧾","record":"⏺","record_button":"⏺","recycl":"♻️","recycle":"♻","recycling_symbol":"♻","red_apple":"🍎","red_car":"🚗","red_circle":"🔴","red_envelope":"🧧","red_hair":"🦰","red_haired":"🧑‍🦰","red_haired_man":"👨‍🦰","red_haired_tone1":"🧑🏻‍🦰","red_haired_tone2":"🧑🏼‍🦰","red_haired_tone3":"🧑🏽‍🦰","red_haired_tone4":"🧑🏾‍🦰","red_haired_tone5":"🧑🏿‍🦰","red_haired_woman":"👩‍🦰","red_heart":"❤","red_o":"⭕","red_paper_lantern":"🏮","red_square":"🟥","regional_indicator_a":"🇦","regional_indicator_b":"🇧","regional_indicator_c":"🇨","regional_indicator_d":"🇩","regional_indicator_e":"🇪","regional_indicator_f":"🇫","regional_indicator_g":"🇬","regional_indicator_h":"🇭","regional_indicator_i":"🇮","regional_indicator_j":"🇯","regional_indicator_k":"🇰","regional_indicator_l":"🇱","regional_indicator_m":"🇲","regional_indicator_n":"🇳","regional_indicator_o":"🇴","regional_indicator_p":"🇵","regional_indicator_q":"🇶","regional_indicator_r":"🇷","regional_indicator_s":"🇸","regional_indicator_t":"🇹","regional_indicator_u":"🇺","regional_indicator_v":"🇻","regional_indicator_w":"🇼","regional_indicator_x":"🇽","regional_indicator_y":"🇾","regional_indicator_z":"🇿","registered":"®","relaxed":"☺","relieved":"😌","relieved_face":"😌","reminder_ribbon":"🎗","repeat":"🔁","repeat_one":"🔂","rescue_worker_helmet":"⛑","restroom":"🚻","reunion":"🇷🇪","reverse":"◀","revolving_hearts":"💞","rewin":"⏪","rewind":"⏪","rhino":"🦏","rhinoceros":"🦏","ribbon":"🎀","rice":"🍚","rice_ball":"🍙","rice_cracker":"🍘","rice_scene":"🎑","right_anger_bubble":"🗯","right_bicep":"💪","right_bicep_tone1":"💪🏻","right_bicep_tone2":"💪🏼","right_bicep_tone3":"💪🏽","right_bicep_tone4":"💪🏾","right_bicep_tone5":"💪🏿","right_facing_fist":"🤜","right_facing_fist_tone1":"🤜🏻","right_facing_fist_tone2":"🤜🏼","right_facing_fist_tone3":"🤜🏽","right_facing_fist_tone4":"🤜🏾","right_facing_fist_tone5":"🤜🏿","rightwards_arrow_with_hook":"↪","ring":"💍","ringed_planet":"🪐","robot":"🤖","robot_face":"🤖","rock":"🪨","rocke":"🚀","rocket":"🚀","rofl":"🤣","roll_eyes":"🙄","roll_of_paper":"🧻","rolled_up_newspaper":"🗞","roller_coaster":"🎢","roller_skate":"🛼","rolling_eyes":"🙄","romania":"🇷🇴","rooster":"🐓","rose":"🌹","rosette":"🏵","rotating_ligh":"🚨","rotating_light":"🚨","round_pushpin":"📍","rowboat":"🚣","rowboat_tone1":"🚣🏻","rowboat_tone2":"🚣🏼","rowboat_tone3":"🚣🏽","rowboat_tone4":"🚣🏾","rowboat_tone5":"🚣🏿","rowing_man":"🚣‍♂️","rowing_woman":"🚣‍♀️","ru":"🇷🇺","rugby_football":"🏉","runner":"🏃","running":"🏃","running_man":"🏃‍♂️","running_shirt":"🎽","running_shirt_with_sash":"🎽","running_tone1":"🏃🏻","running_tone2":"🏃🏼","running_tone3":"🏃🏽","running_tone4":"🏃🏾","running_tone5":"🏃🏿","running_woman":"🏃‍♀️","russia":"🇷🇺","rwanda":"🇷🇼","sa":"🈂","sad_relieved_face":"😥","safety_pin":"🧷","safety_vest":"🦺","sagittarius":"♐","sailboat":"⛵","sake":"🍶","salad":"🥗","salt":"🧂","samoa":"🇼🇸","san_marino":"🇸🇲","sandal":"👡","sandwich":"🥪","santa":"🎅","santa_tone1":"🎅🏻","santa_tone2":"🎅🏼","santa_tone3":"🎅🏽","santa_tone4":"🎅🏾","santa_tone5":"🎅🏿","sao_tome_principe":"🇸🇹","sari":"🥻","sassy_man":"💁‍♂️","sassy_woman":"💁‍♀️","satellite":"📡","satellite_antenna":"📡","satisfied":"😆","saturn":"🪐","saudi_arabia":"🇸🇦","sauna_man":"🧖‍♂️","sauna_person":"🧖","sauna_woman":"🧖‍♀️","sauropod":"🦕","savoring_food":"😋","saxophone":"🎷","scales":"⚖","scarf":"🧣","school":"🏫","school_satchel":"🎒","scientist":"🧑‍🔬","scientist_tone1":"🧑🏻‍🔬","scientist_tone2":"🧑🏼‍🔬","scientist_tone3":"🧑🏽‍🔬","scientist_tone4":"🧑🏾‍🔬","scientist_tone5":"🧑🏿‍🔬","scissors":"✂","scooter":"🛴","scorpion":"🦂","scorpius":"♏","scotland":"🏴󠁧󠁢󠁳󠁣󠁴󠁿","scream":"😱","scream_cat":"🙀","screaming_in_fear":"😱","screwdriver":"🪛","scroll":"📜","seal":"🦭","seat":"💺","second_place_medal":"🥈","secret":"㊙","see_no_evi":"🙈","see_no_evil":"🙈","seedlin":"🌱","seedling":"🌱","selfie":"🤳","selfie_tone1":"🤳🏻","selfie_tone2":"🤳🏼","selfie_tone3":"🤳🏽","selfie_tone4":"🤳🏾","selfie_tone5":"🤳🏿","senegal":"🇸🇳","serbia":"🇷🇸","service_dog":"🐕‍🦺","seven":"7️⃣","sewing_needle":"🪡","seychelles":"🇸🇨","shallow_pan_of_food":"🥘","shamrock":"☘","shark":"🦈","shaved_ice":"🍧","sheaf_of_rice":"🌾","sheep":"🐑","shell":"🐚","shield":"🛡","shinto_shrine":"⛩","ship":"🚢","shirt":"👕","shit":"💩","shoe":"👞","shooting_star":"🌠","shopping":"🛍","shopping_bags":"🛍","shopping_cart":"🛒","shortcake":"🍰","shorts":"🩳","shower":"🚿","shrimp":"🦐","shrug":"🤷","shrug_tone1":"🤷🏻","shrug_tone2":"🤷🏼","shrug_tone3":"🤷🏽","shrug_tone4":"🤷🏾","shrug_tone5":"🤷🏿","shuffle":"🔀","shush":"🤫","shushing_face":"🤫","sierra_leone":"🇸🇱","sign_of_the_horns":"🤘","sign_of_the_horns_tone1":"🤘🏻","sign_of_the_horns_tone2":"🤘🏼","sign_of_the_horns_tone3":"🤘🏽","sign_of_the_horns_tone4":"🤘🏾","sign_of_the_horns_tone5":"🤘🏿","signal_strength":"📶","singapore":"🇸🇬","singer":"🧑‍🎤","singer_tone1":"🧑🏻‍🎤","singer_tone2":"🧑🏼‍🎤","singer_tone3":"🧑🏽‍🎤","singer_tone4":"🧑🏾‍🎤","singer_tone5":"🧑🏿‍🎤","sint_maarten":"🇸🇽","six":"6️⃣","six_pointed_star":"🔯","skateboard":"🛹","ski":"🎿","skier":"⛷","skiing":"⛷","skull":"💀","skull_and_crossbones":"☠","skunk":"🦨","sled":"🛷","sleeping":"😴","sleeping_accommodation":"🛌","sleeping_accommodation_tone1":"🛌🏻","sleeping_accommodation_tone2":"🛌🏼","sleeping_accommodation_tone3":"🛌🏽","sleeping_accommodation_tone4":"🛌🏾","sleeping_accommodation_tone5":"🛌🏿","sleeping_bed":"🛌","sleeping_face":"😴","sleepy":"😪","sleepy_face":"😪","slightly_frowning_face":"🙁","slightly_smiling_face":"🙂","slot_machine":"🎰","sloth":"🦥","slovakia":"🇸🇰","slovenia":"🇸🇮","small_airplane":"🛩","small_blue_diamond":"🔹","small_orange_diamond":"🔸","small_red_triangle":"🔺","small_red_triangle_down":"🔻","smile":"😄","smile_cat":"😸","smiley":"😃","smiley_cat":"😺","smiling_cat_with_heart_eyes":"😻","smiling_face":"☺","smiling_face_with_3_hearts":"🥰","smiling_face_with_closed_eyes":"😊","smiling_face_with_heart_eyes":"😍","smiling_face_with_sunglasses":"😎","smiling_face_with_tear":"🥲","smiling_face_with_three_hearts":"🥰","smiling_imp":"😈","smirk":"😏","smirk_cat":"😼","smirking":"😏","smirking_face":"😏","smoking":"🚬","snail":"🐌","snake":"🐍","sneaker":"👟","sneezing":"🤧","sneezing_face":"🤧","snowboarder":"🏂","snowboarder_tone1":"🏂🏻","snowboarder_tone2":"🏂🏼","snowboarder_tone3":"🏂🏽","snowboarder_tone4":"🏂🏾","snowboarder_tone5":"🏂🏿","snowboarding":"🏂","snowboarding_tone1":"🏂🏻","snowboarding_tone2":"🏂🏼","snowboarding_tone3":"🏂🏽","snowboarding_tone4":"🏂🏾","snowboarding_tone5":"🏂🏿","snowflake":"❄","snowman":"⛄","snowman2":"☃","snowman_with_snow":"☃","snowy":"🌨","soap":"🧼","sob":"😭","soccer":"⚽","socks":"🧦","soft_serve":"🍦","softball":"🥎","solomon_islands":"🇸🇧","somalia":"🇸🇴","soon":"🔜","sos":"🆘","sound":"🔉","south_africa":"🇿🇦","south_georgia_south_sandwich_islands":"🇬🇸","south_korea":"🇰🇷","south_sudan":"🇸🇸","space_invader":"👾","spades":"♠","spaghetti":"🍝","spain":"🇪🇸","sparkle":"❇","sparkler":"🎇","sparkles":"✨","sparkling_heart":"💖","speak_no_evil":"🙊","speaker":"🔈","speaking_head":"🗣","speech_balloo":"💬","speech_balloon":"💬","speedboat":"🚤","spider":"🕷","spider_web":"🕸","spiral_calendar":"🗓","spiral_notepad":"🗒","sponge":"🧽","spoon":"🥄","sports_medal":"🏅","spouting_whale":"🐳","squid":"🦑","squinting_face":"😆","sri_lanka":"🇱🇰","st_barthelemy":"🇧🇱","st_helena":"🇸🇭","st_kitts_nevis":"🇰🇳","st_lucia":"🇱🇨","st_martin":"🇲🇫","st_pierre_miquelon":"🇵🇲","st_vincent_grenadines":"🇻🇨","stadium":"🏟","standing":"🧍","standing_man":"🧍‍♂️","standing_person":"🧍","standing_tone1":"🧍🏻","standing_tone2":"🧍🏼","standing_tone3":"🧍🏽","standing_tone4":"🧍🏾","standing_tone5":"🧍🏿","standing_woman":"🧍‍♀️","star":"⭐","star2":"🌟","star_and_crescent":"☪","star_of_david":"✡","star_struck":"🤩","stars":"🌠","station":"🚉","statue_of_liberty":"🗽","steam_locomotive":"🚂","steaming_bowl":"🍜","stethoscope":"🩺","stew":"🍲","stop":"⏹","stop_button":"⏹","stop_sign":"🛑","stopwatch":"⏱","stormy":"⛈","straight_ruler":"📏","strawberry":"🍓","stuck_out_tongue":"😛","stuck_out_tongue_closed_eyes":"😝","stuck_out_tongue_winking_eye":"😜","student":"🧑‍🎓","student_tone1":"🧑🏻‍🎓","student_tone2":"🧑🏼‍🎓","student_tone3":"🧑🏽‍🎓","student_tone4":"🧑🏾‍🎓","student_tone5":"🧑🏿‍🎓","studio_microphone":"🎙","stuffed_flatbread":"🥙","sudan":"🇸🇩","sun":"☀","sun_and_rain":"🌦","sun_behind_cloud":"⛅","sun_behind_large_cloud":"🌥","sun_behind_rain_cloud":"🌦","sun_behind_small_cloud":"🌤","sun_with_face":"🌞","sunflower":"🌻","sunglasses":"😎","sunglasses_cool":"😎","sunny":"☀","sunrise":"🌅","sunrise_over_mountains":"🌄","superhero":"🦸","superhero_man":"🦸‍♂️","superhero_tone1":"🦸🏻","superhero_tone2":"🦸🏼","superhero_tone3":"🦸🏽","superhero_tone4":"🦸🏾","superhero_tone5":"🦸🏿","superhero_woman":"🦸‍♀️","supervillain":"🦹","supervillain_man":"🦹‍♂️","supervillain_tone1":"🦹🏻","supervillain_tone2":"🦹🏼","supervillain_tone3":"🦹🏽","supervillain_tone4":"🦹🏾","supervillain_tone5":"🦹🏿","supervillain_woman":"🦹‍♀️","surfer":"🏄","surfer_tone1":"🏄🏻","surfer_tone2":"🏄🏼","surfer_tone3":"🏄🏽","surfer_tone4":"🏄🏾","surfer_tone5":"🏄🏿","surfing":"🏄","surfing_man":"🏄‍♂️","surfing_tone1":"🏄🏻","surfing_tone2":"🏄🏼","surfing_tone3":"🏄🏽","surfing_tone4":"🏄🏾","surfing_tone5":"🏄🏿","surfing_woman":"🏄‍♀️","suriname":"🇸🇷","sushi":"🍣","suspension_railway":"🚟","suv":"🚙","svalbard_jan_mayen":"🇸🇯","swan":"🦢","swaziland":"🇸🇿","sweat":"😓","sweat_drops":"💦","sweat_smile":"😅","sweden":"🇸🇪","sweet_potato":"🍠","swim_brief":"🩲","swimmer":"🏊","swimmer_tone1":"🏊🏻","swimmer_tone2":"🏊🏼","swimmer_tone3":"🏊🏽","swimmer_tone4":"🏊🏾","swimmer_tone5":"🏊🏿","swimming":"🏊","swimming_man":"🏊‍♂️","swimming_tone1":"🏊🏻","swimming_tone2":"🏊🏼","swimming_tone3":"🏊🏽","swimming_tone4":"🏊🏾","swimming_tone5":"🏊🏿","swimming_woman":"🏊‍♀️","switzerland":"🇨🇭","symbols":"🔣","synagogue":"🕍","syria":"🇸🇾","syringe":"💉","t-rex":"🦖","taco":"🌮","tad":"🎉","tada":"🎉","taiwan":"🇹🇼","tajikistan":"🇹🇯","takeout_box":"🥡","tamale":"🫔","tanabata_tree":"🎋","tangerine":"🍊","tanzania":"🇹🇿","taurus":"♉","taxi":"🚕","tea":"🍵","teacher":"🧑‍🏫","teacher_tone1":"🧑🏻‍🏫","teacher_tone2":"🧑🏼‍🏫","teacher_tone3":"🧑🏽‍🏫","teacher_tone4":"🧑🏾‍🏫","teacher_tone5":"🧑🏿‍🏫","teapot":"🫖","tears_of_joy":"😂","tears_of_joy_cat":"😹","technologist":"🧑‍💻","technologist_tone1":"🧑🏻‍💻","technologist_tone2":"🧑🏼‍💻","technologist_tone3":"🧑🏽‍💻","technologist_tone4":"🧑🏾‍💻","technologist_tone5":"🧑🏿‍💻","teddy_bear":"🧸","telephone":"☎","telephone_receiver":"📞","telescope":"🔭","ten":"🔟","tennis":"🎾","tent":"⛺","test_tube":"🧪","thailand":"🇹🇭","thermometer":"🌡","thinking":"🤔","thinking_face":"🤔","third_place_medal":"🥉","thong_sandal":"🩴","thought_balloon":"💭","thread":"🧵","three":"3️⃣","thumbsdown":"👎","thumbsdown_tone1":"👎🏻","thumbsdown_tone2":"👎🏼","thumbsdown_tone3":"👎🏽","thumbsdown_tone4":"👎🏾","thumbsdown_tone5":"👎🏿","thumbsup":"👍","thumbsup_tone1":"👍🏻","thumbsup_tone2":"👍🏼","thumbsup_tone3":"👍🏽","thumbsup_tone4":"👍🏾","thumbsup_tone5":"👍🏿","thunder_cloud_and_rain":"⛈","ticket":"🎫","tickets":"🎟","tiger":"🐯","tiger2":"🐅","tiger_face":"🐯","timer_clock":"⏲","timor_leste":"🇹🇱","tipping_hand_man":"💁‍♂️","tipping_hand_person":"💁","tipping_hand_woman":"💁‍♀️","tired":"😫","tired_face":"😫","tm":"™","togo":"🇹🇬","toilet":"🚽","toilet_paper":"🧻","tokelau":"🇹🇰","tokyo_tower":"🗼","tomato":"🍅","tone1":"🏻","tone2":"🏼","tone3":"🏽","tone4":"🏾","tone5":"🏿","tone_dark":"🏿","tone_light":"🏻","tone_medium":"🏽","tone_medium_dark":"🏾","tone_medium_light":"🏼","tonga":"🇹🇴","tongue":"👅","too_cool":"😎","toolbox":"🧰","tooth":"🦷","toothbrush":"🪥","top":"🔝","top_hat":"🎩","tophat":"🎩","tornado":"🌪","tr":"🇹🇷","trackball":"🖲","tractor":"🚜","trade_mark":"™","traffic_light":"🚥","train":"🚋","train2":"🚆","tram":"🚊","tram_car":"🚋","transgender_flag":"🏳️‍⚧️","transgender_symbol":"⚧","trashcan":"🗑","trex":"🦖","triangular_flag":"🚩","triangular_flag_on_pos":"🚩","triangular_flag_on_post":"🚩","triangular_ruler":"📐","trident":"🔱","trinidad_tobago":"🇹🇹","tristan_da_cunha":"🇹🇦","triumph":"😤","trolleybus":"🚎","trophy":"🏆","tropical_drink":"🍹","tropical_fish":"🐠","truc":"🚚","truck":"🚚","trumpet":"🎺","tshirt":"👕","tulip":"🌷","tumbler_glass":"🥃","tunisia":"🇹🇳","turkey":"🦃","turkey_tr":"🇹🇷","turkmenistan":"🇹🇲","turks_caicos_islands":"🇹🇨","turtle":"🐢","tuvalu":"🇹🇻","tv":"📺","twisted_rightwards_arrow":"🔀","twisted_rightwards_arrows":"🔀","two":"2️⃣","two_hearts":"💕","two_men_holding_hands":"👬","two_men_holding_hands_tone1":"👬🏻","two_men_holding_hands_tone1-2":"👨🏻‍🤝‍👨🏼","two_men_holding_hands_tone1-3":"👨🏻‍🤝‍👨🏽","two_men_holding_hands_tone1-4":"👨🏻‍🤝‍👨🏾","two_men_holding_hands_tone1-5":"👨🏻‍🤝‍👨🏿","two_men_holding_hands_tone2":"👬🏼","two_men_holding_hands_tone2-1":"👨🏼‍🤝‍👨🏻","two_men_holding_hands_tone2-3":"👨🏼‍🤝‍👨🏽","two_men_holding_hands_tone2-4":"👨🏼‍🤝‍👨🏾","two_men_holding_hands_tone2-5":"👨🏼‍🤝‍👨🏿","two_men_holding_hands_tone3":"👬🏽","two_men_holding_hands_tone3-1":"👨🏽‍🤝‍👨🏻","two_men_holding_hands_tone3-2":"👨🏽‍🤝‍👨🏼","two_men_holding_hands_tone3-4":"👨🏽‍🤝‍👨🏾","two_men_holding_hands_tone3-5":"👨🏽‍🤝‍👨🏿","two_men_holding_hands_tone4":"👬🏾","two_men_holding_hands_tone4-1":"👨🏾‍🤝‍👨🏻","two_men_holding_hands_tone4-2":"👨🏾‍🤝‍👨🏼","two_men_holding_hands_tone4-3":"👨🏾‍🤝‍👨🏽","two_men_holding_hands_tone4-5":"👨🏾‍🤝‍👨🏿","two_men_holding_hands_tone5":"👬🏿","two_men_holding_hands_tone5-1":"👨🏿‍🤝‍👨🏻","two_men_holding_hands_tone5-2":"👨🏿‍🤝‍👨🏼","two_men_holding_hands_tone5-3":"👨🏿‍🤝‍👨🏽","two_men_holding_hands_tone5-4":"👨🏿‍🤝‍👨🏾","two_women_holding_hands":"👭","two_women_holding_hands_tone1":"👭🏻","two_women_holding_hands_tone1-2":"👩🏻‍🤝‍👩🏼","two_women_holding_hands_tone1-3":"👩🏻‍🤝‍👩🏽","two_women_holding_hands_tone1-4":"👩🏻‍🤝‍👩🏾","two_women_holding_hands_tone1-5":"👩🏻‍🤝‍👩🏿","two_women_holding_hands_tone2":"👭🏼","two_women_holding_hands_tone2-1":"👩🏼‍🤝‍👩🏻","two_women_holding_hands_tone2-3":"👩🏼‍🤝‍👩🏽","two_women_holding_hands_tone2-4":"👩🏼‍🤝‍👩🏾","two_women_holding_hands_tone2-5":"👩🏼‍🤝‍👩🏿","two_women_holding_hands_tone3":"👭🏽","two_women_holding_hands_tone3-1":"👩🏽‍🤝‍👩🏻","two_women_holding_hands_tone3-2":"👩🏽‍🤝‍👩🏼","two_women_holding_hands_tone3-4":"👩🏽‍🤝‍👩🏾","two_women_holding_hands_tone3-5":"👩🏽‍🤝‍👩🏿","two_women_holding_hands_tone4":"👭🏾","two_women_holding_hands_tone4-1":"👩🏾‍🤝‍👩🏻","two_women_holding_hands_tone4-2":"👩🏾‍🤝‍👩🏼","two_women_holding_hands_tone4-3":"👩🏾‍🤝‍👩🏽","two_women_holding_hands_tone4-5":"👩🏾‍🤝‍👩🏿","two_women_holding_hands_tone5":"👭🏿","two_women_holding_hands_tone5-1":"👩🏿‍🤝‍👩🏻","two_women_holding_hands_tone5-2":"👩🏿‍🤝‍👩🏼","two_women_holding_hands_tone5-3":"👩🏿‍🤝‍👩🏽","two_women_holding_hands_tone5-4":"👩🏿‍🤝‍👩🏾","u5272":"🈹","u5408":"🈴","u55b6":"🈺","u6307":"🈯","u6708":"🈷","u6709":"🈶","u6e80":"🈵","u7121":"🈚","u7533":"🈸","u7981":"🈲","u7a7a":"🈳","uganda":"🇺🇬","uk":"🇬🇧","ukraine":"🇺🇦","umbrella":"☔","umbrella_on_ground":"⛱","umbrella_with_rain":"☔","un":"🇺🇳","unamused":"😒","unamused_face":"😒","underage":"🔞","unicorn":"🦄","unicorn_face":"🦄","united_arab_emirates":"🇦🇪","united_kingdom":"🇬🇧","united_nations":"🇺🇳","united_states":"🇺🇸","unlock":"🔓","unlocked":"🔓","up":"🆙","up2":"🆙","upside_down_face":"🙃","uruguay":"🇺🇾","us":"🇺🇸","us_outlying_islands":"🇺🇲","us_virgin_islands":"🇻🇮","usa":"🇺🇸","uzbekistan":"🇺🇿","v":"✌","v_tone1":"✌🏻","v_tone2":"✌🏼","v_tone3":"✌🏽","v_tone4":"✌🏾","v_tone5":"✌🏿","vampire":"🧛","vampire_man":"🧛‍♂️","vampire_tone1":"🧛🏻","vampire_tone2":"🧛🏼","vampire_tone3":"🧛🏽","vampire_tone4":"🧛🏾","vampire_tone5":"🧛🏿","vampire_woman":"🧛‍♀️","vanuatu":"🇻🇺","vatican_city":"🇻🇦","venezuela":"🇻🇪","vertical_traffic_light":"🚦","vhs":"📼","vibration_mode":"📳","victory":"✌","victory_tone1":"✌🏻","victory_tone2":"✌🏼","victory_tone3":"✌🏽","victory_tone4":"✌🏾","victory_tone5":"✌🏿","video_camera":"📹","video_game":"🎮","videocassette":"📼","vietnam":"🇻🇳","violin":"🎻","virgo":"♍","volcano":"🌋","volleyball":"🏐","vomiting":"🤮","vomiting_face":"🤮","vs":"🆚","vulcan":"🖖","vulcan_salute":"🖖","vulcan_tone1":"🖖🏻","vulcan_tone2":"🖖🏼","vulcan_tone3":"🖖🏽","vulcan_tone4":"🖖🏾","vulcan_tone5":"🖖🏿","waffle":"🧇","wales":"🏴󠁧󠁢󠁷󠁬󠁳󠁿","walking":"🚶","walking_man":"🚶‍♂️","walking_tone1":"🚶🏻","walking_tone2":"🚶🏼","walking_tone3":"🚶🏽","walking_tone4":"🚶🏾","walking_tone5":"🚶🏿","walking_woman":"🚶‍♀️","wallis_futuna":"🇼🇫","waning_crescent_moon":"🌘","waning_gibbous_moon":"🌖","warning":"⚠","wastebaske":"🗑","wastebasket":"🗑","watch":"⌚","water_buffalo":"🐃","water_closet":"🚾","water_polo":"🤽","water_polo_tone1":"🤽🏻","water_polo_tone2":"🤽🏼","water_polo_tone3":"🤽🏽","water_polo_tone4":"🤽🏾","water_polo_tone5":"🤽🏿","water_wave":"🌊","watermelon":"🍉","wave":"👋","wave_tone1":"👋🏻","wave_tone2":"👋🏼","wave_tone3":"👋🏽","wave_tone4":"👋🏾","wave_tone5":"👋🏿","waving_hand":"👋","waving_hand_tone1":"👋🏻","waving_hand_tone2":"👋🏼","waving_hand_tone3":"👋🏽","waving_hand_tone4":"👋🏾","waving_hand_tone5":"👋🏿","wavy_dash":"〰","waxing_crescent_moon":"🌒","waxing_gibbous_moon":"🌔","wc":"🚾","weary":"😩","weary_cat":"🙀","weary_face":"😩","wedding":"💒","weight_lifter":"🏋","weight_lifter_tone1":"🏋🏻","weight_lifter_tone2":"🏋🏼","weight_lifter_tone3":"🏋🏽","weight_lifter_tone4":"🏋🏾","weight_lifter_tone5":"🏋🏿","weight_lifting":"🏋","weight_lifting_man":"🏋️‍♂️","weight_lifting_tone1":"🏋🏻","weight_lifting_tone2":"🏋🏼","weight_lifting_tone3":"🏋🏽","weight_lifting_tone4":"🏋🏾","weight_lifting_tone5":"🏋🏿","weight_lifting_woman":"🏋️‍♀️","western_sahara":"🇪🇭","whale":"🐳","whale2":"🐋","wheel_of_dharma":"☸","wheelchai":"♿️","wheelchair":"♿","whisky":"🥃","white_cane":"🦯","white_check_mar":"✅","white_check_mark":"✅","white_circle":"⚪","white_exclamation":"❕","white_flag":"🏳","white_flower":"💮","white_frowning_face":"☹","white_hair":"🦳","white_haired":"🧑‍🦳","white_haired_man":"👨‍🦳","white_haired_tone1":"🧑🏻‍🦳","white_haired_tone2":"🧑🏼‍🦳","white_haired_tone3":"🧑🏽‍🦳","white_haired_tone4":"🧑🏾‍🦳","white_haired_tone5":"🧑🏿‍🦳","white_haired_woman":"👩‍🦳","white_heart":"🤍","white_large_square":"⬜","white_medium_small_square":"◽","white_medium_square":"◻","white_question":"❔","white_small_square":"▫","white_square_button":"🔳","wilted_flower":"🥀","wind_blowing_face":"🌬","wind_chime":"🎐","wind_face":"🌬","window":"🪟","wine_glass":"🍷","wink":"😉","winking_face":"😉","wolf":"🐺","wolf_face":"🐺","woman":"👩","woman_artist":"👩‍🎨","woman_artist_tone1":"👩🏻‍🎨","woman_artist_tone2":"👩🏼‍🎨","woman_artist_tone3":"👩🏽‍🎨","woman_artist_tone4":"👩🏾‍🎨","woman_artist_tone5":"👩🏿‍🎨","woman_astronaut":"👩‍🚀","woman_astronaut_tone1":"👩🏻‍🚀","woman_astronaut_tone2":"👩🏼‍🚀","woman_astronaut_tone3":"👩🏽‍🚀","woman_astronaut_tone4":"👩🏾‍🚀","woman_astronaut_tone5":"👩🏿‍🚀","woman_bald":"👩‍🦲","woman_bald_tone1":"👩🏻‍🦲","woman_bald_tone2":"👩🏼‍🦲","woman_bald_tone3":"👩🏽‍🦲","woman_bald_tone4":"👩🏾‍🦲","woman_bald_tone5":"👩🏿‍🦲","woman_biking":"🚴‍♀️","woman_biking_tone1":"🚴🏻‍♀️","woman_biking_tone2":"🚴🏼‍♀️","woman_biking_tone3":"🚴🏽‍♀️","woman_biking_tone4":"🚴🏾‍♀️","woman_biking_tone5":"🚴🏿‍♀️","woman_blond_haired":"👱‍♀️","woman_blond_haired_tone1":"👱🏻‍♀️","woman_blond_haired_tone2":"👱🏼‍♀️","woman_blond_haired_tone3":"👱🏽‍♀️","woman_blond_haired_tone4":"👱🏾‍♀️","woman_blond_haired_tone5":"👱🏿‍♀️","woman_bouncing_ball":"⛹️‍♀️","woman_bouncing_ball_tone1":"⛹🏻‍♀️","woman_bouncing_ball_tone2":"⛹🏼‍♀️","woman_bouncing_ball_tone3":"⛹🏽‍♀️","woman_bouncing_ball_tone4":"⛹🏾‍♀️","woman_bouncing_ball_tone5":"⛹🏿‍♀️","woman_bowing":"🙇‍♀️","woman_bowing_tone1":"🙇🏻‍♀️","woman_bowing_tone2":"🙇🏼‍♀️","woman_bowing_tone3":"🙇🏽‍♀️","woman_bowing_tone4":"🙇🏾‍♀️","woman_bowing_tone5":"🙇🏿‍♀️","woman_cartwheeling":"🤸‍♀️","woman_cartwheeling_tone1":"🤸🏻‍♀️","woman_cartwheeling_tone2":"🤸🏼‍♀️","woman_cartwheeling_tone3":"🤸🏽‍♀️","woman_cartwheeling_tone4":"🤸🏾‍♀️","woman_cartwheeling_tone5":"🤸🏿‍♀️","woman_climbing":"🧗‍♀️","woman_climbing_tone1":"🧗🏻‍♀️","woman_climbing_tone2":"🧗🏼‍♀️","woman_climbing_tone3":"🧗🏽‍♀️","woman_climbing_tone4":"🧗🏾‍♀️","woman_climbing_tone5":"🧗🏿‍♀️","woman_construction_worker":"👷‍♀️","woman_construction_worker_tone1":"👷🏻‍♀️","woman_construction_worker_tone2":"👷🏼‍♀️","woman_construction_worker_tone3":"👷🏽‍♀️","woman_construction_worker_tone4":"👷🏾‍♀️","woman_construction_worker_tone5":"👷🏿‍♀️","woman_cook":"👩‍🍳","woman_cook_tone1":"👩🏻‍🍳","woman_cook_tone2":"👩🏼‍🍳","woman_cook_tone3":"👩🏽‍🍳","woman_cook_tone4":"👩🏾‍🍳","woman_cook_tone5":"👩🏿‍🍳","woman_curly_haired":"👩‍🦱","woman_curly_haired_tone1":"👩🏻‍🦱","woman_curly_haired_tone2":"👩🏼‍🦱","woman_curly_haired_tone3":"👩🏽‍🦱","woman_curly_haired_tone4":"👩🏾‍🦱","woman_curly_haired_tone5":"👩🏿‍🦱","woman_dancing":"💃","woman_dancing_tone1":"💃🏻","woman_dancing_tone2":"💃🏼","woman_dancing_tone3":"💃🏽","woman_dancing_tone4":"💃🏾","woman_dancing_tone5":"💃🏿","woman_detective":"🕵️‍♀️","woman_detective_tone1":"🕵🏻‍♀️","woman_detective_tone2":"🕵🏼‍♀️","woman_detective_tone3":"🕵🏽‍♀️","woman_detective_tone4":"🕵🏾‍♀️","woman_detective_tone5":"🕵🏿‍♀️","woman_elf":"🧝‍♀️","woman_elf_tone1":"🧝🏻‍♀️","woman_elf_tone2":"🧝🏼‍♀️","woman_elf_tone3":"🧝🏽‍♀️","woman_elf_tone4":"🧝🏾‍♀️","woman_elf_tone5":"🧝🏿‍♀️","woman_facepalming":"🤦‍♀️","woman_facepalming_tone1":"🤦🏻‍♀️","woman_facepalming_tone2":"🤦🏼‍♀️","woman_facepalming_tone3":"🤦🏽‍♀️","woman_facepalming_tone4":"🤦🏾‍♀️","woman_facepalming_tone5":"🤦🏿‍♀️","woman_factory_worker":"👩‍🏭","woman_factory_worker_tone1":"👩🏻‍🏭","woman_factory_worker_tone2":"👩🏼‍🏭","woman_factory_worker_tone3":"👩🏽‍🏭","woman_factory_worker_tone4":"👩🏾‍🏭","woman_factory_worker_tone5":"👩🏿‍🏭","woman_fairy":"🧚‍♀️","woman_fairy_tone1":"🧚🏻‍♀️","woman_fairy_tone2":"🧚🏼‍♀️","woman_fairy_tone3":"🧚🏽‍♀️","woman_fairy_tone4":"🧚🏾‍♀️","woman_fairy_tone5":"🧚🏿‍♀️","woman_farmer":"👩‍🌾","woman_farmer_tone1":"👩🏻‍🌾","woman_farmer_tone2":"👩🏼‍🌾","woman_farmer_tone3":"👩🏽‍🌾","woman_farmer_tone4":"👩🏾‍🌾","woman_farmer_tone5":"👩🏿‍🌾","woman_feeding_baby":"👩‍🍼","woman_feeding_baby_tone1":"👩🏻‍🍼","woman_feeding_baby_tone2":"👩🏼‍🍼","woman_feeding_baby_tone3":"👩🏽‍🍼","woman_feeding_baby_tone4":"👩🏾‍🍼","woman_feeding_baby_tone5":"👩🏿‍🍼","woman_firefighter":"👩‍🚒","woman_firefighter_tone1":"👩🏻‍🚒","woman_firefighter_tone2":"👩🏼‍🚒","woman_firefighter_tone3":"👩🏽‍🚒","woman_firefighter_tone4":"👩🏾‍🚒","woman_firefighter_tone5":"👩🏿‍🚒","woman_frowning":"🙍‍♀️","woman_frowning_tone1":"🙍🏻‍♀️","woman_frowning_tone2":"🙍🏼‍♀️","woman_frowning_tone3":"🙍🏽‍♀️","woman_frowning_tone4":"🙍🏾‍♀️","woman_frowning_tone5":"🙍🏿‍♀️","woman_genie":"🧞‍♀️","woman_gesturing_no":"🙅‍♀️","woman_gesturing_no_tone1":"🙅🏻‍♀️","woman_gesturing_no_tone2":"🙅🏼‍♀️","woman_gesturing_no_tone3":"🙅🏽‍♀️","woman_gesturing_no_tone4":"🙅🏾‍♀️","woman_gesturing_no_tone5":"🙅🏿‍♀️","woman_gesturing_ok":"🙆‍♀️","woman_gesturing_ok_tone1":"🙆🏻‍♀️","woman_gesturing_ok_tone2":"🙆🏼‍♀️","woman_gesturing_ok_tone3":"🙆🏽‍♀️","woman_gesturing_ok_tone4":"🙆🏾‍♀️","woman_gesturing_ok_tone5":"🙆🏿‍♀️","woman_getting_haircut":"💇‍♀️","woman_getting_haircut_tone1":"💇🏻‍♀️","woman_getting_haircut_tone2":"💇🏼‍♀️","woman_getting_haircut_tone3":"💇🏽‍♀️","woman_getting_haircut_tone4":"💇🏾‍♀️","woman_getting_haircut_tone5":"💇🏿‍♀️","woman_getting_massage":"💆‍♀️","woman_getting_massage_tone1":"💆🏻‍♀️","woman_getting_massage_tone2":"💆🏼‍♀️","woman_getting_massage_tone3":"💆🏽‍♀️","woman_getting_massage_tone4":"💆🏾‍♀️","woman_getting_massage_tone5":"💆🏿‍♀️","woman_golfing":"🏌️‍♀️","woman_golfing_tone1":"🏌🏻‍♀️","woman_golfing_tone2":"🏌🏼‍♀️","woman_golfing_tone3":"🏌🏽‍♀️","woman_golfing_tone4":"🏌🏾‍♀️","woman_golfing_tone5":"🏌🏿‍♀️","woman_guard":"💂‍♀️","woman_guard_tone1":"💂🏻‍♀️","woman_guard_tone2":"💂🏼‍♀️","woman_guard_tone3":"💂🏽‍♀️","woman_guard_tone4":"💂🏾‍♀️","woman_guard_tone5":"💂🏿‍♀️","woman_health_worker":"👩‍⚕️","woman_health_worker_tone1":"👩🏻‍⚕️","woman_health_worker_tone2":"👩🏼‍⚕️","woman_health_worker_tone3":"👩🏽‍⚕️","woman_health_worker_tone4":"👩🏾‍⚕️","woman_health_worker_tone5":"👩🏿‍⚕️","woman_in_lotus_position":"🧘‍♀️","woman_in_lotus_position_tone1":"🧘🏻‍♀️","woman_in_lotus_position_tone2":"🧘🏼‍♀️","woman_in_lotus_position_tone3":"🧘🏽‍♀️","woman_in_lotus_position_tone4":"🧘🏾‍♀️","woman_in_lotus_position_tone5":"🧘🏿‍♀️","woman_in_manual_wheelchair":"👩‍🦽","woman_in_manual_wheelchair_tone1":"👩🏻‍🦽","woman_in_manual_wheelchair_tone2":"👩🏼‍🦽","woman_in_manual_wheelchair_tone3":"👩🏽‍🦽","woman_in_manual_wheelchair_tone4":"👩🏾‍🦽","woman_in_manual_wheelchair_tone5":"👩🏿‍🦽","woman_in_motorized_wheelchair":"👩‍🦼","woman_in_motorized_wheelchair_tone1":"👩🏻‍🦼","woman_in_motorized_wheelchair_tone2":"👩🏼‍🦼","woman_in_motorized_wheelchair_tone3":"👩🏽‍🦼","woman_in_motorized_wheelchair_tone4":"👩🏾‍🦼","woman_in_motorized_wheelchair_tone5":"👩🏿‍🦼","woman_in_steamy_room":"🧖‍♀️","woman_in_steamy_room_tone1":"🧖🏻‍♀️","woman_in_steamy_room_tone2":"🧖🏼‍♀️","woman_in_steamy_room_tone3":"🧖🏽‍♀️","woman_in_steamy_room_tone4":"🧖🏾‍♀️","woman_in_steamy_room_tone5":"🧖🏿‍♀️","woman_in_tuxedo":"🤵‍♀️","woman_in_tuxedo_tone1":"🤵🏻‍♀️","woman_in_tuxedo_tone2":"🤵🏼‍♀️","woman_in_tuxedo_tone3":"🤵🏽‍♀️","woman_in_tuxedo_tone4":"🤵🏾‍♀️","woman_in_tuxedo_tone5":"🤵🏿‍♀️","woman_judge":"👩‍⚖️","woman_judge_tone1":"👩🏻‍⚖️","woman_judge_tone2":"👩🏼‍⚖️","woman_judge_tone3":"👩🏽‍⚖️","woman_judge_tone4":"👩🏾‍⚖️","woman_judge_tone5":"👩🏿‍⚖️","woman_juggling":"🤹‍♀️","woman_juggling_tone1":"🤹🏻‍♀️","woman_juggling_tone2":"🤹🏼‍♀️","woman_juggling_tone3":"🤹🏽‍♀️","woman_juggling_tone4":"🤹🏾‍♀️","woman_juggling_tone5":"🤹🏿‍♀️","woman_kneeling":"🧎‍♀️","woman_kneeling_tone1":"🧎🏻‍♀️","woman_kneeling_tone2":"🧎🏼‍♀️","woman_kneeling_tone3":"🧎🏽‍♀️","woman_kneeling_tone4":"🧎🏾‍♀️","woman_kneeling_tone5":"🧎🏿‍♀️","woman_lifting_weights":"🏋️‍♀️","woman_lifting_weights_tone1":"🏋🏻‍♀️","woman_lifting_weights_tone2":"🏋🏼‍♀️","woman_lifting_weights_tone3":"🏋🏽‍♀️","woman_lifting_weights_tone4":"🏋🏾‍♀️","woman_lifting_weights_tone5":"🏋🏿‍♀️","woman_mage":"🧙‍♀️","woman_mage_tone1":"🧙🏻‍♀️","woman_mage_tone2":"🧙🏼‍♀️","woman_mage_tone3":"🧙🏽‍♀️","woman_mage_tone4":"🧙🏾‍♀️","woman_mage_tone5":"🧙🏿‍♀️","woman_mechanic":"👩‍🔧","woman_mechanic_tone1":"👩🏻‍🔧","woman_mechanic_tone2":"👩🏼‍🔧","woman_mechanic_tone3":"👩🏽‍🔧","woman_mechanic_tone4":"👩🏾‍🔧","woman_mechanic_tone5":"👩🏿‍🔧","woman_mountain_biking":"🚵‍♀️","woman_mountain_biking_tone1":"🚵🏻‍♀️","woman_mountain_biking_tone2":"🚵🏼‍♀️","woman_mountain_biking_tone3":"🚵🏽‍♀️","woman_mountain_biking_tone4":"🚵🏾‍♀️","woman_mountain_biking_tone5":"🚵🏿‍♀️","woman_office_worker":"👩‍💼","woman_office_worker_tone1":"👩🏻‍💼","woman_office_worker_tone2":"👩🏼‍💼","woman_office_worker_tone3":"👩🏽‍💼","woman_office_worker_tone4":"👩🏾‍💼","woman_office_worker_tone5":"👩🏿‍💼","woman_pilot":"👩‍✈️","woman_pilot_tone1":"👩🏻‍✈️","woman_pilot_tone2":"👩🏼‍✈️","woman_pilot_tone3":"👩🏽‍✈️","woman_pilot_tone4":"👩🏾‍✈️","woman_pilot_tone5":"👩🏿‍✈️","woman_playing_handball":"🤾‍♀️","woman_playing_handball_tone1":"🤾🏻‍♀️","woman_playing_handball_tone2":"🤾🏼‍♀️","woman_playing_handball_tone3":"🤾🏽‍♀️","woman_playing_handball_tone4":"🤾🏾‍♀️","woman_playing_handball_tone5":"🤾🏿‍♀️","woman_playing_water_polo":"🤽‍♀️","woman_playing_water_polo_tone1":"🤽🏻‍♀️","woman_playing_water_polo_tone2":"🤽🏼‍♀️","woman_playing_water_polo_tone3":"🤽🏽‍♀️","woman_playing_water_polo_tone4":"🤽🏾‍♀️","woman_playing_water_polo_tone5":"🤽🏿‍♀️","woman_police_officer":"👮‍♀️","woman_police_officer_tone1":"👮🏻‍♀️","woman_police_officer_tone2":"👮🏼‍♀️","woman_police_officer_tone3":"👮🏽‍♀️","woman_police_officer_tone4":"👮🏾‍♀️","woman_police_officer_tone5":"👮🏿‍♀️","woman_pouting":"🙎‍♀️","woman_pouting_tone1":"🙎🏻‍♀️","woman_pouting_tone2":"🙎🏼‍♀️","woman_pouting_tone3":"🙎🏽‍♀️","woman_pouting_tone4":"🙎🏾‍♀️","woman_pouting_tone5":"🙎🏿‍♀️","woman_raising_hand":"🙋‍♀️","woman_raising_hand_tone1":"🙋🏻‍♀️","woman_raising_hand_tone2":"🙋🏼‍♀️","woman_raising_hand_tone3":"🙋🏽‍♀️","woman_raising_hand_tone4":"🙋🏾‍♀️","woman_raising_hand_tone5":"🙋🏿‍♀️","woman_red_haired":"👩‍🦰","woman_red_haired_tone1":"👩🏻‍🦰","woman_red_haired_tone2":"👩🏼‍🦰","woman_red_haired_tone3":"👩🏽‍🦰","woman_red_haired_tone4":"👩🏾‍🦰","woman_red_haired_tone5":"👩🏿‍🦰","woman_rowing_boat":"🚣‍♀️","woman_rowing_boat_tone1":"🚣🏻‍♀️","woman_rowing_boat_tone2":"🚣🏼‍♀️","woman_rowing_boat_tone3":"🚣🏽‍♀️","woman_rowing_boat_tone4":"🚣🏾‍♀️","woman_rowing_boat_tone5":"🚣🏿‍♀️","woman_running":"🏃‍♀️","woman_running_tone1":"🏃🏻‍♀️","woman_running_tone2":"🏃🏼‍♀️","woman_running_tone3":"🏃🏽‍♀️","woman_running_tone4":"🏃🏾‍♀️","woman_running_tone5":"🏃🏿‍♀️","woman_scientist":"👩‍🔬","woman_scientist_tone1":"👩🏻‍🔬","woman_scientist_tone2":"👩🏼‍🔬","woman_scientist_tone3":"👩🏽‍🔬","woman_scientist_tone4":"👩🏾‍🔬","woman_scientist_tone5":"👩🏿‍🔬","woman_shrugging":"🤷‍♀️","woman_shrugging_tone1":"🤷🏻‍♀️","woman_shrugging_tone2":"🤷🏼‍♀️","woman_shrugging_tone3":"🤷🏽‍♀️","woman_shrugging_tone4":"🤷🏾‍♀️","woman_shrugging_tone5":"🤷🏿‍♀️","woman_singer":"👩‍🎤","woman_singer_tone1":"👩🏻‍🎤","woman_singer_tone2":"👩🏼‍🎤","woman_singer_tone3":"👩🏽‍🎤","woman_singer_tone4":"👩🏾‍🎤","woman_singer_tone5":"👩🏿‍🎤","woman_standing":"🧍‍♀️","woman_standing_tone1":"🧍🏻‍♀️","woman_standing_tone2":"🧍🏼‍♀️","woman_standing_tone3":"🧍🏽‍♀️","woman_standing_tone4":"🧍🏾‍♀️","woman_standing_tone5":"🧍🏿‍♀️","woman_student":"👩‍🎓","woman_student_tone1":"👩🏻‍🎓","woman_student_tone2":"👩🏼‍🎓","woman_student_tone3":"👩🏽‍🎓","woman_student_tone4":"👩🏾‍🎓","woman_student_tone5":"👩🏿‍🎓","woman_superhero":"🦸‍♀️","woman_superhero_tone1":"🦸🏻‍♀️","woman_superhero_tone2":"🦸🏼‍♀️","woman_superhero_tone3":"🦸🏽‍♀️","woman_superhero_tone4":"🦸🏾‍♀️","woman_superhero_tone5":"🦸🏿‍♀️","woman_supervillain":"🦹‍♀️","woman_supervillain_tone1":"🦹🏻‍♀️","woman_supervillain_tone2":"🦹🏼‍♀️","woman_supervillain_tone3":"🦹🏽‍♀️","woman_supervillain_tone4":"🦹🏾‍♀️","woman_supervillain_tone5":"🦹🏿‍♀️","woman_surfing":"🏄‍♀️","woman_surfing_tone1":"🏄🏻‍♀️","woman_surfing_tone2":"🏄🏼‍♀️","woman_surfing_tone3":"🏄🏽‍♀️","woman_surfing_tone4":"🏄🏾‍♀️","woman_surfing_tone5":"🏄🏿‍♀️","woman_swimming":"🏊‍♀️","woman_swimming_tone1":"🏊🏻‍♀️","woman_swimming_tone2":"🏊🏼‍♀️","woman_swimming_tone3":"🏊🏽‍♀️","woman_swimming_tone4":"🏊🏾‍♀️","woman_swimming_tone5":"🏊🏿‍♀️","woman_teacher":"👩‍🏫","woman_teacher_tone1":"👩🏻‍🏫","woman_teacher_tone2":"👩🏼‍🏫","woman_teacher_tone3":"👩🏽‍🏫","woman_teacher_tone4":"👩🏾‍🏫","woman_teacher_tone5":"👩🏿‍🏫","woman_technologist":"👩‍💻","woman_technologist_tone1":"👩🏻‍💻","woman_technologist_tone2":"👩🏼‍💻","woman_technologist_tone3":"👩🏽‍💻","woman_technologist_tone4":"👩🏾‍💻","woman_technologist_tone5":"👩🏿‍💻","woman_tipping_hand":"💁‍♀️","woman_tipping_hand_tone1":"💁🏻‍♀️","woman_tipping_hand_tone2":"💁🏼‍♀️","woman_tipping_hand_tone3":"💁🏽‍♀️","woman_tipping_hand_tone4":"💁🏾‍♀️","woman_tipping_hand_tone5":"💁🏿‍♀️","woman_tone1":"👩🏻","woman_tone2":"👩🏼","woman_tone3":"👩🏽","woman_tone4":"👩🏾","woman_tone5":"👩🏿","woman_vampire":"🧛‍♀️","woman_vampire_tone1":"🧛🏻‍♀️","woman_vampire_tone2":"🧛🏼‍♀️","woman_vampire_tone3":"🧛🏽‍♀️","woman_vampire_tone4":"🧛🏾‍♀️","woman_vampire_tone5":"🧛🏿‍♀️","woman_walking":"🚶‍♀️","woman_walking_tone1":"🚶🏻‍♀️","woman_walking_tone2":"🚶🏼‍♀️","woman_walking_tone3":"🚶🏽‍♀️","woman_walking_tone4":"🚶🏾‍♀️","woman_walking_tone5":"🚶🏿‍♀️","woman_wearing_turban":"👳‍♀️","woman_wearing_turban_tone1":"👳🏻‍♀️","woman_wearing_turban_tone2":"👳🏼‍♀️","woman_wearing_turban_tone3":"👳🏽‍♀️","woman_wearing_turban_tone4":"👳🏾‍♀️","woman_wearing_turban_tone5":"👳🏿‍♀️","woman_white_haired":"👩‍🦳","woman_white_haired_tone1":"👩🏻‍🦳","woman_white_haired_tone2":"👩🏼‍🦳","woman_white_haired_tone3":"👩🏽‍🦳","woman_white_haired_tone4":"👩🏾‍🦳","woman_white_haired_tone5":"👩🏿‍🦳","woman_with_headscarf":"🧕","woman_with_headscarf_tone1":"🧕🏻","woman_with_headscarf_tone2":"🧕🏼","woman_with_headscarf_tone3":"🧕🏽","woman_with_headscarf_tone4":"🧕🏾","woman_with_headscarf_tone5":"🧕🏿","woman_with_probing_cane":"👩‍🦯","woman_with_probing_cane_tone1":"👩🏻‍🦯","woman_with_probing_cane_tone2":"👩🏼‍🦯","woman_with_probing_cane_tone3":"👩🏽‍🦯","woman_with_probing_cane_tone4":"👩🏾‍🦯","woman_with_probing_cane_tone5":"👩🏿‍🦯","woman_with_turban":"👳‍♀️","woman_with_veil":"👰‍♀️","woman_with_veil_tone1":"👰🏻‍♀️","woman_with_veil_tone2":"👰🏼‍♀️","woman_with_veil_tone3":"👰🏽‍♀️","woman_with_veil_tone4":"👰🏾‍♀️","woman_with_veil_tone5":"👰🏿‍♀️","woman_with_white_cane":"👩‍🦯","woman_with_white_cane_tone1":"👩🏻‍🦯","woman_with_white_cane_tone2":"👩🏼‍🦯","woman_with_white_cane_tone3":"👩🏽‍🦯","woman_with_white_cane_tone4":"👩🏾‍🦯","woman_with_white_cane_tone5":"👩🏿‍🦯","woman_zombie":"🧟‍♀️","womans_clothes":"👚","womans_flat_shoe":"🥿","womans_hat":"👒","women_with_bunny_ears_partying":"👯‍♀️","women_wrestling":"🤼‍♀️","womens":"🚺","wood":"🪵","woozy":"🥴","woozy_face":"🥴","world_map":"🗺","worm":"🪱","worried":"😟","worried_face":"😟","wrenc":"🔧","wrench":"🔧","wrestlers":"🤼","wrestling":"🤼","writing_hand":"✍","writing_hand_tone1":"✍🏻","writing_hand_tone2":"✍🏼","writing_hand_tone3":"✍🏽","writing_hand_tone4":"✍🏾","writing_hand_tone5":"✍🏿","wry_smile_cat":"😼","wtf":"🤔","x":"❌","yarn":"🧶","yawn":"🥱","yawning":"🥱","yawning_face":"🥱","yellow_circle":"🟡","yellow_heart":"💛","yellow_square":"🟨","yemen":"🇾🇪","yen":"💴","yes":"👍","yes_tone1":"👍🏻","yes_tone2":"👍🏼","yes_tone3":"👍🏽","yes_tone4":"👍🏾","yes_tone5":"👍🏿","yin_yang":"☯","yo_yo":"🪀","yum":"😋","za":"⚡️","zambia":"🇿🇲","zany":"🤪","zany_face":"🤪","zap":"⚡","zebra":"🦓","zero":"0️⃣","zimbabwe":"🇿🇼","zipper_mouth":"🤐","zipper_mouth_face":"🤐","zombie":"🧟","zombie_man":"🧟‍♂️","zombie_woman":"🧟‍♀️","zzz":"💤"}');

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			loaded: false,
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = __webpack_modules__;
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/create fake namespace object */
/******/ 	(() => {
/******/ 		var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);
/******/ 		var leafPrototypes;
/******/ 		// create a fake namespace object
/******/ 		// mode & 1: value is a module id, require it
/******/ 		// mode & 2: merge all properties of value into the ns
/******/ 		// mode & 4: return value when already ns object
/******/ 		// mode & 16: return value when it's Promise-like
/******/ 		// mode & 8|1: behave like require
/******/ 		__webpack_require__.t = function(value, mode) {
/******/ 			if(mode & 1) value = this(value);
/******/ 			if(mode & 8) return value;
/******/ 			if(typeof value === 'object' && value) {
/******/ 				if((mode & 4) && value.__esModule) return value;
/******/ 				if((mode & 16) && typeof value.then === 'function') return value;
/******/ 			}
/******/ 			var ns = Object.create(null);
/******/ 			__webpack_require__.r(ns);
/******/ 			var def = {};
/******/ 			leafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];
/******/ 			for(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {
/******/ 				Object.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));
/******/ 			}
/******/ 			def['default'] = () => (value);
/******/ 			__webpack_require__.d(ns, def);
/******/ 			return ns;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/ensure chunk */
/******/ 	(() => {
/******/ 		__webpack_require__.f = {};
/******/ 		// This file contains only the entry chunk.
/******/ 		// The chunk loading function for additional chunks
/******/ 		__webpack_require__.e = (chunkId) => {
/******/ 			return Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {
/******/ 				__webpack_require__.f[key](chunkId, promises);
/******/ 				return promises;
/******/ 			}, []));
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/get javascript chunk filename */
/******/ 	(() => {
/******/ 		// This function allow to reference async chunks
/******/ 		__webpack_require__.u = (chunkId) => {
/******/ 			// return url for filenames based on template
/******/ 			return "feature-" + chunkId + ".js";
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/node module decorator */
/******/ 	(() => {
/******/ 		__webpack_require__.nmd = (module) => {
/******/ 			module.paths = [];
/******/ 			if (!module.children) module.children = [];
/******/ 			return module;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/publicPath */
/******/ 	(() => {
/******/ 		var scriptUrl;
/******/ 		if (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + "";
/******/ 		var document = __webpack_require__.g.document;
/******/ 		if (!scriptUrl && document) {
/******/ 			if (document.currentScript)
/******/ 				scriptUrl = document.currentScript.src
/******/ 			if (!scriptUrl) {
/******/ 				var scripts = document.getElementsByTagName("script");
/******/ 				if(scripts.length) scriptUrl = scripts[scripts.length - 1].src
/******/ 			}
/******/ 		}
/******/ 		// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration
/******/ 		// or pass an empty string ("") and set the __webpack_public_path__ variable from your code to use your own logic.
/******/ 		if (!scriptUrl) throw new Error("Automatic publicPath is not supported in this browser");
/******/ 		scriptUrl = scriptUrl.replace(/#.*$/, "").replace(/\?.*$/, "").replace(/\/[^\/]+$/, "/");
/******/ 		__webpack_require__.p = scriptUrl;
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/importScripts chunk loading */
/******/ 	(() => {
/******/ 		// no baseURI
/******/ 		
/******/ 		// object to store loaded chunks
/******/ 		// "1" means "already loaded"
/******/ 		var installedChunks = {
/******/ 			"extension": 1
/******/ 		};
/******/ 		
/******/ 		// importScripts chunk loading
/******/ 		var installChunk = (data) => {
/******/ 			var [chunkIds, moreModules, runtime] = data;
/******/ 			for(var moduleId in moreModules) {
/******/ 				if(__webpack_require__.o(moreModules, moduleId)) {
/******/ 					__webpack_require__.m[moduleId] = moreModules[moduleId];
/******/ 				}
/******/ 			}
/******/ 			if(runtime) runtime(__webpack_require__);
/******/ 			while(chunkIds.length)
/******/ 				installedChunks[chunkIds.pop()] = 1;
/******/ 			parentChunkLoadingFunction(data);
/******/ 		};
/******/ 		__webpack_require__.f.i = (chunkId, promises) => {
/******/ 			// "1" is the signal for "already loaded"
/******/ 			if(!installedChunks[chunkId]) {
/******/ 				if(true) { // all chunks have JS
/******/ 					importScripts(__webpack_require__.p + __webpack_require__.u(chunkId));
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 		
/******/ 		var chunkLoadingGlobal = self["webpackChunkgitlens"] = self["webpackChunkgitlens"] || [];
/******/ 		var parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);
/******/ 		chunkLoadingGlobal.push = installChunk;
/******/ 		
/******/ 		// no HMR
/******/ 		
/******/ 		// no HMR manifest
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = __webpack_require__("./src/extension.ts");
/******/ 	module.exports = __webpack_exports__;
/******/ 	
/******/ })()
;
//# sourceMappingURL=gitlens.js.map